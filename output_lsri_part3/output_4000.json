{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "citHeader(\"To cite BP4RNAseq in publications use:\")\n\ncitEntry(entry = \"Manual\",\n         title        = \"BP4RNAseq: a babysitter package for retrospective and newly generated RNA-seq data analyses using both alignment-based and alignment-free quantification methods\",\n         author       = personList(as.person(\"Shanwen Sun\"),\n                                   as.person(\"Lei Xu\"),\n                                    as.person(\"Quan Zou\")),\n         year         = \"2020\",\n         note         = \"R package version 0.2.2\",\n         url          = \"https://github.com/sunshanwen/BP4RNAseq\",\n\n         textVersion  =\n           paste(\"Shanwen Sun, Lei Xu, Quan Zou (2020).\",\n                 \"BP4RNAseq: a babysitter package for retrospective and newly generated RNA-seq data analyses using both alignment-based and alignment-free quantification methods\",\n                 \"R package version 0.2.2\",\n                 \"URL https://github.com/sunshanwen/BP4RNAseq\")\n)\n"
      },
      "source": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/inst/CITATION",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "BP4RNAseq"
        ],
        "type": "Text_excerpt",
        "value": "1.  Srivastava, A., et al.\u00a0Alevin efficiently estimates accurate gene\n    abundances from dscRNA-seq data. Genome Biol 2019;20:16.\n\n2.  Lachmann, A., et al.\u00a0Interoperable RNA-Seq analysis in the cloud.\n    Biochim. Biophys. Acta-Gene Regul. Mech. 2020;1863(6):1-11.\n"
      },
      "source": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sunshanwen/BP4RNAseq"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-29T01:51:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-21T17:52:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An automated pipe for reproducible RNA-seq analysis with the minimal efforts from researchers. You only need to provide the taxa name and the accession code of RNA-seq samples deposited in the National Center for Biotechnology Information (NCBI). After a cup of tea or longer, you will get formatted gene expression data as gene count, transcript count and TPM values, etc."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9981002528730313,
      "result": {
        "original_header": "BP4RNAseq",
        "type": "Text_excerpt",
        "value": "The assessment of gene expression is central to uncovering the functions\nof the genome, understanding the regulation of development and\ninvestigating the molecular mechanisms that underlie cancer and other\ndiseases. RNA-sequencing (RNA-seq) now is the routine to assess the\ngenome wide gene expression due to its high speed, accuracy and\nreproducibility, and low cost. An enormous volume of RNA-seq data have\nbeen accumulating and deposited in public data repositories, such as the\nGene Expression Omnibus (GEO) and the Sequence Read Archive (SRA).\nRetrospectively analyzing these data or conducting a brand new RNA-seq\nstudy is fundamentally important for researchers. However, processing\nraw reads of RNA-seq data, no matter public or newly sequenced data,\ninvolves a lot of specialized tools and technical configurations that\nare often unfamiliar and time-consuming to learn for non-bioinformatics\nresearchers. For example, when working with public RNA-seq data,\nresearchers need to download the RNA-seq data, convert data to FASTQ\nformat, check the sequencing type (i.e., single-end or pair-end), do the\nquality control (when needed, trim adapters and poor quality reads),\ndownload the reference genome, transcript and annotation file, align\nreads to the reference genome or transcript and quantify gene\nexpression, etc. These steps and the details that they involve are even\ntedious for bioinformatic scientist. The goal of BP4RNAseq is to make\nthe RNA-seq analysis smooth and easy and to minimize efforts from\nresearchers. The package offers several benefits to researchers. First,\nthe package is a highly automated tool. It can take only two\nnontechnical parameters and output six formatted gene expression\nquantification at gene and transcript levels. Second, it improves the\naccuracy and sensitivity of RNA-seq analyses by using an optimized\npipeline. Third, it offers individual tools to provide users full\ncontrol to fine tune precisely how individual steps are optimized. This\ncan allow users to inspect intermediate outputs and thus to further\nimprove the accuracy and sensitivity of RNA-seq analyses. Users can also\nuse the package as a toolbox to run the exact tools that suit their\nneeds. Last but not least, the package applies to both retrospective and\nnewly generated bulk RNA-seq data analyses and is also applicable for\nsingle-cell RNA-seq analyses based on the Alevin algorithm \\[1\\].\n \n"
      },
      "source": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sunshanwen/BP4RNAseq/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sunshanwen/BP4RNAseq/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sunshanwen/BP4RNAseq"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BP4RNAseq"
      },
      "source": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/install_depends.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "BP4RNAseq"
        ],
        "type": "Text_excerpt",
        "value": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou can install BP4RNAseq from [GitHub](https://github.com/) with:\n\n``` r\ndevtools::install_github(\"sunshanwen/BP4RNAseq\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sunshanwen/BP4RNAseq/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BP4RNAseq"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "sunshanwen"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 60638,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 11101,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2002,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://cutadapt.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Operating System Requirements",
        "parent_header": [
          "BP4RNAseq"
        ],
        "type": "Text_excerpt",
        "value": "BP4RNAseq runs in Windows (Subsystem for Linux), Linux and macOS.\n"
      },
      "source": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "BP4RNAseq"
        ],
        "type": "Text_excerpt",
        "value": "The BP4RNAseq requires the following utilities:\n\n  - [SRA Toolkit\n    \\>= 2.10.3](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc)\n  - [Entrez Direct\n    \\>= 13.3](https://www.ncbi.nlm.nih.gov/books/NBK179288/)\n  - [FastQC \\>=\n    v0.11.9](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/)\n  - [Cutadapt \\>= 2.10](https://cutadapt.readthedocs.io/en/stable/)\n  - [SAMtools \\>= 1.9](http://www.htslib.org/)\n  - [HISAT2 \\>= 2.2.0](http://daehwankimlab.github.io/hisat2/)\n  - [StringTie \\>= 2.1.1](https://ccb.jhu.edu/software/stringtie/)\n  - [Salmon \\>= 1.2.1](https://combine-lab.github.io/salmon/)  \n  - [R \\>= 4.0.0](https://www.r-project.org/)\n\nUsers can install these dependencies manually.\n\nAlternatively, we provide a bash script to aid users to install all the\ndependencies based on [conda](https://docs.conda.io/en/latest/). The\nscript uses Wget, which is pre-installed on most Linux distributions\nsuch as Windows Subsystem for Linux, to download conda. If wget is not\ninstalled, users can easily install it with the following commands.\n\n  - Installing Wget on Ubuntu and Debian or Windows Subsystem\n    equivalents\n\n\n\n``` r\nsudo apt-get update \nsudo apt-get install -y wget\n```\n\n  - Installing Wget on CentOS and Fedora or Windows Subsystem\n    equivalents\n\n\n\n``` r\nsudo yum install wget\n```\n\n  - Installing Wget on macOS with Homebrew\n\n\n\n``` r\nbrew install wget\n```\n\nWith Wget installed, users can install all the dependencies with the\nfollowing commands:\n\n``` r\nwget https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/install_depends.sh\nchmod +x install_depends.sh\n./install_depends.sh\n./use_conda.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:50:12",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Bulk RNA-seq analyses",
        "parent_header": [
          "BP4RNAseq",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The functions in BP4RNAseq are integrated into two main functions:\ndown2quan for public RNA-seq data, fastq2quan for newly generated\nRNA-seq data.\n\ndown2quan requires no input data and can receive only two nontechnical\nparameters. The parameter `accession` specifies the accession id of the\ntarget public RNA-seq data in the Gene Expression Omnibus (GEO) or the\nSequence Read Archive (SRA). The accession id can be of a whole\n\u2018BioProject\u2019 or multiple \u2018BioSample\u2019. The parameter `taxa` offers the\nscientific or common name of the organism investigated. A simple example\n\n``` r\nlibrary(BP4RNAseq)\ndown2quan(accession=c(\"SRR11486115\",\"SRR11486114\"), taxa=\"Drosophila melanogaster\")\n```\n\nwill download the public RNA-seq data of two \u2018BioSample\u2019 with accession\nid \u201cSRR11486115\u201d and \u201cSRR11486114\u201d, respectively, and the latest\nreference genome, transcript and annotation data of Drosophila\nmelanogaster, do the quality control (filter out the poor-quality reads\nand contaminations), reads alignments and gene expression quantification\nbased on both alignment-free and alignment-based workflows in the work\ndirectory. During the quality control procedure, if the contamination of\nthe adapter exists, the program will automatically detect the adapter\nsequence to trim. However, an option is given to the users to provide\nthe adapter sequence if they know it.\n\nfastq2quan works with local RNA-seq data in fastq formats. It needs two\nnontechnical parameters at a minimum, i.e., `taxa` as explained above\nand `pair`which specifies the sequencing type with `single` for\nsingle-end (SE) reads or `paired` for paired-end (PE) reads. Users\nshould place all the fastq files in the work directory. A simple example\n\n``` r\nlibrary(BP4RNAseq)\nfastq2quan(taxa=\"Drosophila melanogaster\", pair = \"single\")\n```\n\nwill download the latest reference genome, transcript and annotation\ndata of Drosophila melanogaster, and do the quality control, reads\nalignments and gene expression quantification using the local RNA-seq\ndata based on both alignment-free and alignment-based workflows as the\nprogram down2quan do.\n\nBoth programs support the parallel computing, which is specified by the\n`threads` parameter.\n\nOutputs from both functions are two gene count matrixes and two\ntranscript count matrixes based on the alignment-based workflow and the\nalignment-free workflow, and corresponding average matrixes over two\nworkflows. These outputs can be directly processed with\n[DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html),\n[edgeR](https://bioconductor.org/packages/release/bioc/html/edgeR.html)\nor\n[limma](https://bioconductor.org/packages/release/bioc/html/limma.html).\nResearchers may use the averages for downstream analyses \\[2\\].\nAlternatively, we recommend to decide the type of data to use based on\ntheir consistencies with qPCR results if available or/and the results\nfrom the downstream analyses.\n"
      },
      "source": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single-cell RNA-seq analyses",
        "parent_header": [
          "BP4RNAseq",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "down2quan and fastq2quan can also be extended to process single-cell\nRNA-seq data by setting the `scRNA` parameter to be \u2018TRUE\u2019 and\nspecifying the protocols. Currently, dropseq, chromium and chromiumV3\nare supported protocols. A simple example\n\n``` r\nlibrary(BP4RNAseq)\ndown2quan(accession=c(\"SRR11402955\",\"SRR11402974\"), taxa=\"Homo sapiens\", scRNA = TRUE, protocol = \"dropseq\")\n```\n\nwill download the public single-cell RNA-seq data from two \u2018BioSample\u2019\nwith accession id \u201cSRR11402955\u201d and \u201cSRR11402974\u201d, respectively, and the\nlatest reference genome, transcript and annotation data of Homo sapiens,\ndo the quality control, reads alignments and gene expression\nquantification based on the Alevin workflow.\n\nAlternatively,\n\n``` r\nlibrary(BP4RNAseq)\nfastq2quan(taxa=\"Homo sapiens\", scRNA = TRUE, protocol = \"dropseq\")\n```\n\ncan preprocess local single-cell RNA-seq data in fastq formats. The data\nare paired-end reads with one read containing cellular barcode and\nunique molecule identifier (UMI) and the other read being the RNA\nsequence.\n\nThe outputs of down2quan and fastq2quan are gene count matrix compressed\nin binary format, and gene ids, barcode + UMI and tier categorization in\nthree separate files. These outputs can be further processed with\n[tximport](https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html)\nand [Seurat](https://satijalab.org/seurat/).\n"
      },
      "source": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using BP4RNAseq as a toolbox for RNA-seq analyses and customizing gene expression quantification to improve the sensitivity and accuracy of RNA-seq analyses.",
        "parent_header": [
          "BP4RNAseq",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "BP4RNAseq offers individual tools to users. These tools can allow users\nto run the exact tools that suit their needs. Specifically, these tools\nare:\n\n  - sra\\_download(), which can download RNA-seq data from public\n    repositories.\n  - sra2fastq(), which converts SRA files into FASTQ format.\n  - qc\\_test(), which assesses the quality of reads.\n  - adapter\\_trim(), which trims adapter.\n  - quality\\_trim(), which trims poor quality reads.\n  - down\\_Ref(), which downloads the latest reference genome, transcript\n    and annotation files.\n  - align\\_based\\_quan(), which performs the alignment-based gene\n    expression quantification, including reads alignment and assembly.\n  - align\\_free\\_quan(), which performs the alignment-free gene\n    expression quantification.\n  - scRNA\\_quan(), which performs the single-cell RNA-seq gene\n    expression quantification.\n\nAdditionally, these individual tools provide users full control to fine\ntune precisely how individual steps are optimized. This can allow\nexperienced users to further improve the accuracy and sensitivity of\nRNA-seq analyses. For example, setting the optional parameter\n`salmon_quan_add` of align\\_free\\_quan() as `salmon_quan_add = \"--useEM\n--gcBias\"` will allow users to apply the standard EM algorithm to\noptimize abundance estimates and in the mean time to correct for\nfragment-level GC biases in the input data when performing the\nalignment-free workflow. Details about the optional customizing setting\nin each tool can be found in package help page.\n"
      },
      "source": "https://raw.githubusercontent.com/sunshanwen/BP4RNAseq/master/README.Rmd",
      "technique": "header_analysis"
    }
  ]
}