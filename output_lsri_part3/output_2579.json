{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference <a name=\"reference\"></a>",
        "parent_header": [
          "Ribovore <a name=\"top\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "* The recommended citation for using ribovore is:\n  Alejandro A. Schaffer, Richard McVeigh, Barbara Robbertse,\n  Conrad L. Schoch, Anjanette Johnston, Beverly Underwood, Ilene Karsch-Mizrachi, Eric P.\n  Nawrocki; *Ribovore: ribosomal RNA sequence analysis for GenBank submissions and database curation*;\n  in preparation (to be uploaded to bioRxiv in Feb 2021);\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/ribovore/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ncbi/ribovore"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-12-14T19:09:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-03T12:52:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9296353116024016,
      "result": {
        "original_header": "https://github.com/ncbi/ribovore.git",
        "type": "Text_excerpt",
        "value": "Ribovore is a suite of tools for detecting, classifying and analyzing\nsmall subunit ribosomal RNA (SSU rRNA) and large subunit (LSU) rRNA\nsequences. It is used by GenBank to validate incoming 16S SSU rRNA\nsequences and to generate high quality datasets of SSU and LSU rRNA\nsequences for RefSeq and for use as blastn databases. Ribovore is\nwritten in Perl. \nThe [`ribotyper`](documentation/ribotyper.md#top) program is used to\nquickly validate and classify rRNA sequences using profile models of\nSSU and LSU rRNA genes from different taxonomic groups. \nThe [`ribosensor`](documentation/ribosensor.md#top) script also\nvalidates and classifies rRNA sequences, but uses blastn to do\nsingle-sequence comparisons in addition to using profiles. \nThe [`riboaligner`](documentation/riboaligner.md#top) script is used\nto check if rRNA sequences are full length and do not extend past the\ngene boundary. \nThe [`ribodbmaker`](documentation/ribodbmaker.md#top) script performs\na series of tests on input rRNA sequences to create a high quality dataset\nof sequences that pass all tests.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/ribovore/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "<a name=\"documentation\"></a> Ribovore documentation",
        "parent_header": [
          "Ribovore <a name=\"top\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "* [Ribovore installation instructions](documentation/install.md#top)\n* [`ribotyper` example usage, command-line options and unexpected feature information](documentation/ribotyper.md#top)\n* [`ribosensor` example usage, command-line options and pass/fail criteria](documentation/ribosensor.md#top)\n* [`riboaligner` example usage, command-line options and length classes](documentation/riboaligner.md#top)\n* [`ribodbmaker` example usage and command-line options](documentation/ribodbmaker.md#top)\n* [Ribovore model information](documentation/models.md#top)\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/ribovore/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/ncbi/ribovore/wiki"
      },
      "source": "https://raw.githubusercontent.com/ncbi/ribovore/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ncbi/ribovore/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ncbi/ribovore/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ncbi/ribovore"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ribovore "
      },
      "source": "https://raw.githubusercontent.com/ncbi/ribovore/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/ribovore/master/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/ribovore/master/models/scripts/mv-models.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/ribovore/master/models/scripts/press-models.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/ribovore/master/models/scripts/scrub-models.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/ribovore/master/t/do-prove-all-tests.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "#  <a name=\"top\"></a> Ribovore installation instructions\n\n* [Installation using `install.sh`](#install.sh)\n* [Setting environment variables](#environment)\n* [Verifying successful installation](#tests)\n\n---\n## Ribovore installation using the `install.sh` script <a name=\"install\"></a>\n\nThe file `install.sh` is an executable file for installing Ribovore\nand its dependencies. That file is located online at github.\nTo install the latest version of Ribovore download this file:\n\nhttps://raw.githubusercontent.com/ncbi/ribovore/master/install.sh\n\nTo download any specific release/version, for example version 1.0 download\nthe corresponding `install.sh` file for that release/version.\n\nhttps://raw.githubusercontent.com/ncbi/ribovore/1.0/install.sh\n\nCopy the `install.sh` file into the directory in which you want\nto install Ribovore. A good name for that directory is\n`ribovore-install`. Then move into that directory and run the install\nscript. There are six possible ways to run `install.sh` and its usage can be\nviewed by executing the script without any arguments:\n\n```\n>sh ./install.sh\nUsage:   ./install.sh <os>\n or \nUsage:   ./install.sh <os> keep\n\nvalid options for <os> are:\n  \"linux\":             full install for linux\n  \"macosx-intel\":      full install for macosx-intel\n  \"macosx-silicon\":    full install for macosx-silicon\n  \"rt-linux\":          ribotyper only for linux\n  \"rt-macosx-intel\":   ribotyper only for macosx-intel\n  \"rt-macosx-silicon\": ribotyper only for macosx-silicon\n\nuse \"keep\" as 2nd argument to keep nonessential files\nwhich are normally removed\n```\n\nThe command you should use for installation depends on your\noperating system and whether or not you want to install the full\nRibovore package or just want to use the `ribotyper` script.\n\nFor example, to install on a linux machine, execute:\n\n```\nsh ./install.sh linux\n```\n\nThe `linux`, `macosx-intel`, or `macosx-silicon` argument controls the\ntype of infernal and blast executable files that will be installed and\nalso dictates whether the `vecscreen_plus_taxonomy` package will be\ninstalled. `vecscreen_plus_taxonomy` will be installed only for\n`linux` installations and consequently only `linux` installations will\nbe able to use all features of `ribodbmaker`. Mac/OSX installations\nwill be able to run `ribodbmaker` but only with specific flags that\ncause steps that require executable programs that get installed with\n`vecscreen_plus_taxonomy` to be skipped, as explained more [here.](ribodbmaker.md#macosx)\n\nThe `install.sh` command will create several directories in the\ncurrent directory.  It will download and install Ribovore and the\nrequired module libraries\n[sequip](https://github.com/nawrockie/sequip), as well as the binary\nexecutables of [Infernal](http://eddylab.org/infernal/), the NCBI\nBLAST package (for either Linux or Mac/OSX), and (if Linux) the\n[vecscreen_plus_taxonomy](https://github.com/aaschaffer/vecscreen_plus_taxonomy)\npackage.\n\nThe installation procedure will remove some unnecessary files from the\ndependencies it installs (infernal and blast) by default, but these\nfiles can be kept if you additionally add `keep` as an additional\nargument, for example:\n\n```\nsh ./install.sh linux keep\n```\n\nWhen `install.sh` is finished running it will print important\ninstructions to the screen that explain how to modify your environment\nvariables so that you can run the Ribovore scripts, as discussed next.\n\n---\n\n## Setting Ribovore environment variables <a name=\"environment\"></a>\n\nAs mentioned above, when you run `install.sh`, instructions will be\noutput about how to change your environment variables so that you can\nrun the Ribovore scripts. Those instructions are also included below for\nreference, but without the actual path to where you ran `install.sh`\n(below it is replaced with `<full path to directory in which you ran\ninstall.sh>`)\n\n---\n\n### <a name=\"environment\"></a> Instructions for setting environment variables output by `install.sh`\n\n\n```\nThe final step is to update your environment variables.\n(See ribovore/README.txt for more information.)\n\nIf you are using the bash or zsh shell add the following lines to\nthe end of your '.bashrc' or '.zshrc' file in your home directory:\n\nexport RIBOINSTALLDIR=\"<full path to directory in which you ran install.sh>\"\nexport RIBOSCRIPTSDIR=\"$RIBOINSTALLDIR/ribovore\"\nexport RIBOINFERNALDIR=\"$RIBOINSTALLDIR/infernal/binaries\"\nexport RIBOEASELDIR=\"$RIBOINSTALLDIR/infernal/binaries\"\nexport RIBOSEQUIPDIR=\"$RIBOINSTALLDIR/sequip\"\nexport RIBOTIMEDIR=\"/usr/bin\"\nexport RIBOBLASTDIR=\"$RIBOINSTALLDIR/ncbi-blast/bin\"\nexport RRNASENSORDIR=\"$RIBOINSTALLDIR/rRNA_sensor\"\nexport VECPLUSDIR=\"$RIBOINSTALLDIR/vecscreen_plus_taxonomy\"\nexport BLASTDB=\"$VECPLUSDIR/univec-files\":\"$RRNASENSORDIR\":\"$BLASTDB\"\nexport PERL5LIB=\"$RIBOSCRIPTSDIR\":\"$RIBOSEQUIPDIR\":\"$VECPLUSDIR\":\"$PERL5LIB\"\nexport PATH=\"$RIBOSCRIPTSDIR\":\"$RIBOBLASTDIR\":\"$RRNASENSORDIR\":\"$PATH\"\n\nAfter adding the export lines to your .bashrc or .zshrc file, source that file\nto update your current environment with the command:\n\nsource ~/.bashrc\n\nOR\n\nsource ~/.zshrc\n\n---\nIf you are using the C shell, add the following\nlines to the end of your '.cshrc' file in your home\ndirectory:\n\nsetenv RIBOINSTALLDIR \"<full path to directory in which you ran install.sh>\"\nsetenv RIBOSCRIPTSDIR \"$RIBOINSTALLDIR/ribovore\"\nsetenv RIBOINFERNALDIR \"$RIBOINSTALLDIR/infernal/binaries\"\nsetenv RIBOEASELDIR \"$RIBOINSTALLDIR/infernal/binaries\"\nsetenv RIBOSEQUIPDIR \"$RIBOINSTALLDIR/sequip\"\nsetenv RIBOTIMEDIR \"/usr/bin\"\nsetenv RIBOBLASTDIR \"$RIBOINSTALLDIR/ncbi-blast/bin\"\nsetenv RRNASENSORDIR \"$RIBOINSTALLDIR/rRNA_sensor\"\nsetenv VECPLUSDIR \"$RIBOINSTALLDIR/vecscreen_plus_taxonomy\"\nsetenv BLASTDB \"$VECPLUSDIR/univec-files\":\"$RRNASENSORDIR\":\"$BLASTDB\"\nsetenv PERL5LIB \"$RIBOSCRIPTSDIR\":\"$RIBOSEQUIPDIR\":\"$VECPLUSDIR\":\"$PERL5LIB\"\nsetenv PATH \"$RIBOSCRIPTSDIR\":\"$RIBOBLASTDIR\":\"$RRNASENSORDIR\":\"$PATH\"\n\nAfter adding the setenv lines to your .cshrc file, source that file\nto update your current environment with the command:\n\nsource ~/.cshrc\n\n(To determine which shell you use, type: 'echo $SHELL')\n```\n\nFor Mac/OSX installations, the `VECPLUSDIR` line will be omitted, \nthe `BLASTDB` lines will not include `$VECPLUSDIR/univec-files`, \nand the `PERL5LIB` line will not include `$VECPLUSDIR`.\n\n---\n\n### If you get an error about `PERL5LIB` and/or `BLASTDB` being undefined...\n\nIf you use bash or zsh, change the PERL5LIB and/or `BLASTDB` line in your `~/.bashrc` or\n`~/.zshrc` file to:\n\n```\nexport PERL5LIB=\"$RIBOSCRIPTSDIR\":\"$RIBOSEQUIPDIR\":\"$VECPLUSDIR\"\nexport BLASTDB=\"$VECPLUSDIR/univec-files\":\"$RRNASENSORDIR\"\n````\n\n\nor if you use C shell, change the PERL5LIB line in your `~/.cshrc`\nfile to:\n\n```\nsetenv PERL5LIB \"$RIBOSCRIPTSDIR\":\"$RIBOSEQUIPDIR\":\"$VECPLUSDIR\"\nsetenv BLASTDB \"$VECPLUSDIR/univec-files\":\"$RRNASENSORDIR\"\n```\n\nAnd then execute `source ~/.bashrc`, `source ~/.zshrc`, or `source ~/.cshrc` again.\n\n---\n## <a name=\"tests\"></a> Verifying successful installation with test runs\n\nRibovore includes some tests you can run after setting your\nenvironment variables as explained above to make sure that your\ninstallation was successful and that your environment variables are\nset correctly.\n\nThese are several shell scripts for running tests; with respect to the\ninstallation directory they are in the directory `ribovore/testfiles/` and\nstart with `do-` and end with `.sh`.\n\nYou should run the `$RIBOSCRIPTSDIR/testfiles/do-all-tests.sh` script\nto make sure Ribovore installed correctly. They should pass, as shown\nbelow.\n\nThere is also a special test script `do-parallel-tests.sh` that you\nshould run if you want to test if you can use the `-p` option with\n`ribotyper`, `ribosensor`, `riboaligner` or `ribodbmaker` for\nparallelization on a cluster.  But this test will likely only work\ninternally at NCBI. See this [example](ribotyper.md#exampleparallel)\nfor more information.  `do-parallel-tests.sh` is **not** run as part\nof `do-all-tests.sh`.\n\nTo run all tests, execute:\n\n```\n$RIBOSCRIPTSDIR/testfiles/do-all-tests.sh\n```\n\nThis script can take up to several minutes to run. \nIf something goes wrong, the script will likely exit quickly.\n\nBelow is an example of the expected output for\n`do-all-tests.sh` for a linux installation:\n\n```\n# ribotest :: test ribovore scripts [TEST SCRIPT]\n# ribovore 1.0 (Feb 2021)\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# date:             Wed Feb  3 18:02:23 2021\n# $RIBOSCRIPTSDIR:  /usr/local/src/ribovore-install/ribovore\n#\n# test file:                                                         /usr/local/src/ribovore-install/ribovore/testfiles/ribotyper.testin\n# output directory name:                                             rt-test\n# forcing directory overwrite:                                       yes [-f]\n# if output files listed in testin file already exist, remove them:  yes [--rmout]\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Running command  1 [      ribotyper-1-16]          ... done. [    8.2 seconds]\n#\tchecking test-16/test-16.ribotyper.short.out                 ... pass\n#\tchecking test-16/test-16.ribotyper.long.out                  ... pass\n#\tremoving directory test-16                                   ... done\n# Running command  2 [     ribotyper-2-100]          ... done. [   22.6 seconds]\n#\tchecking r100/r100.ribotyper.short.out                       ... pass\n#\tchecking r100/r100.ribotyper.long.out                        ... pass\n#\tremoving directory r100                                      ... done\n#\n#\n# PASS: all 4 files were created correctly.\n#\n#\n# List and description of all output files saved in:   rt-test.ribotest.list\n# Output printed to screen saved in:                   rt-test.ribotest.log\n# List of executed commands saved in:                  rt-test.ribotest.cmd\n#\n# All output files created in directory ./rt-test/\n#\n# Elapsed time:  00:00:30.99\n#                hh:mm:ss\n# \n[ok]\nSuccess: all tests passed [do-ribotyper-tests.sh]\n# ribotest :: test ribovore scripts [TEST SCRIPT]\n# ribovore 1.0 (Feb 2021)\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# date:             Wed Feb  3 18:02:54 2021\n# $RIBOSCRIPTSDIR:  /usr/local/src/ribovore-install/ribovore\n#\n# test file:                                                         /usr/local/src/ribovore-install/ribovore/testfiles/riboaligner.testin\n# output directory name:                                             ra-test\n# forcing directory overwrite:                                       yes [-f]\n# if output files listed in testin file already exist, remove them:  yes [--rmout]\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Running command  1 [    riboaligner-1-16]          ... done. [   13.9 seconds]\n#\tchecking test-16-2/test-16-2.riboaligner.tbl                 ... pass\n#\tchecking test-16-2/test-16-2.riboaligner.SSU.Bacteria.partial.stk ... pass\n#\tchecking test-16-2/test-16-2.riboaligner.SSU.Bacteria.partial.list ... pass\n#\tchecking test-16-2/test-16-2.riboaligner.SSU.Bacteria.partial.ifile ... pass\n#\tchecking test-16-2/test-16-2.riboaligner.SSU.Bacteria.partial.elfile ... pass\n#\tremoving directory test-16-2                                 ... done\n# Running command  2 [   riboaligner-2-100]          ... done. [   85.7 seconds]\n#\tchecking r100-2/r100-2.riboaligner.tbl                       ... pass\n#\tchecking r100-2/r100-2.riboaligner.SSU.Eukarya.partial.list  ... pass\n#\tchecking r100-2/r100-2.riboaligner.SSU.Eukarya.partial.ifile ... pass\n#\tchecking r100-2/r100-2.riboaligner.SSU.Eukarya.partial.elfile ... pass\n#\tchecking r100-2/r100-2.riboaligner.SSU.Eukarya.partial.stk   ... pass\n#\tremoving directory r100-2                                    ... done\n#\n#\n# PASS: all 10 files were created correctly.\n#\n#\n# List and description of all output files saved in:   ra-test.ribotest.list\n# Output printed to screen saved in:                   ra-test.ribotest.log\n# List of executed commands saved in:                  ra-test.ribotest.cmd\n#\n# All output files created in directory ./ra-test/\n#\n# Elapsed time:  00:01:40.43\n#                hh:mm:ss\n# \n[ok]\nSuccess: all tests passed [do-riboaligner-tests.sh]\n# ribotest :: test ribovore scripts [TEST SCRIPT]\n# ribovore 1.0 (Feb 2021)\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# date:             Wed Feb  3 18:04:36 2021\n# $RIBOSCRIPTSDIR:  /usr/local/src/ribovore-install/ribovore\n#\n# test file:                                                         /usr/local/src/ribovore-install/ribovore/testfiles/ribosensor.testin\n# output directory name:                                             rs-test\n# forcing directory overwrite:                                       yes [-f]\n# if output files listed in testin file already exist, remove them:  yes [--rmout]\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Running command  1 [     ribosensor-1-16]          ... done. [   14.5 seconds]\n#\tchecking test-rs-16/test-rs-16.ribosensor.out                ... pass\n#\tchecking test-rs-16/test-rs-16.ribosensor.gbank              ... pass\n#\tremoving directory test-rs-16                                ... done\n# Running command  2 [    ribosensor-2-100]          ... done. [   42.5 seconds]\n#\tchecking rs-r100/rs-r100.ribosensor.out                      ... pass\n#\tchecking rs-r100/rs-r100.ribosensor.gbank                    ... pass\n#\tremoving directory rs-r100                                   ... done\n#\n#\n# PASS: all 4 files were created correctly.\n#\n#\n# List and description of all output files saved in:   rs-test.ribotest.list\n# Output printed to screen saved in:                   rs-test.ribotest.log\n# List of executed commands saved in:                  rs-test.ribotest.cmd\n#\n# All output files created in directory ./rs-test/\n#\n# Elapsed time:  00:00:57.31\n#                hh:mm:ss\n# \n[ok]\nSuccess: all tests passed [do-ribosensor-tests.sh]\n# ribotest :: test ribovore scripts [TEST SCRIPT]\n# ribovore 1.0 (Feb 2021)\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# date:             Wed Feb  3 18:05:34 2021\n# $RIBOSCRIPTSDIR:  /usr/local/src/ribovore-install/ribovore\n#\n# test file:                                                         /usr/local/src/ribovore-install/ribovore/testfiles/ribodbmaker-vec.testin\n# output directory name:                                             rdb-test\n# forcing directory overwrite:                                       yes [-f]\n# if output files listed in testin file already exist, remove them:  yes [--rmout]\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Running command  1 [ribodbmaker-vec-1-100]         ... done. [  145.4 seconds]\n#\tchecking db100vec/db100vec.ribodbmaker.rdb.tbl               ... pass\n#\tremoving directory db100vec                                  ... done\n#\n#\n# PASS: all 1 files were created correctly.\n#\n#\n# List and description of all output files saved in:   rdb-test.ribotest.list\n# Output printed to screen saved in:                   rdb-test.ribotest.log\n# List of executed commands saved in:                  rdb-test.ribotest.cmd\n#\n# All output files created in directory ./rdb-test/\n#\n# Elapsed time:  00:02:25.70\n#                hh:mm:ss\n# \n[ok]\nSuccess: all tests passed [do-ribodbmaker-tests.sh]\n# ribotest :: test ribovore scripts [TEST SCRIPT]\n# ribovore 1.0 (Feb 2021)\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# date:             Wed Feb  3 18:08:00 2021\n# $RIBOSCRIPTSDIR:  /usr/local/src/ribovore-install/ribovore\n#\n# test file:                                                         /usr/local/src/ribovore-install/ribovore/testfiles/github-issues/iss1/iss1.testin\n# output directory name:                                             iss1-out\n# forcing directory overwrite:                                       yes [-f]\n# if output files listed in testin file already exist, remove them:  yes [--rmout]\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Running command  1 [         iss1-ribodb]          ... done. [   11.9 seconds]\n#\tchecking db1/db1.ribodbmaker.rdb.tbl                         ... pass\n#\tremoving directory db1                                       ... done\n#\n#\n# PASS: all 1 files were created correctly.\n#\n#\n# List and description of all output files saved in:   iss1-out.ribotest.list\n# Output printed to screen saved in:                   iss1-out.ribotest.log\n# List of executed commands saved in:                  iss1-out.ribotest.cmd\n#\n# All output files created in directory ./iss1-out/\n#\n# Elapsed time:  00:00:12.03\n#                hh:mm:ss\n# \n[ok]\nSuccess: all tests passed [do-iss1-tests.sh]\nSuccess: all tests passed [do-all-issue-tests.sh]\nSuccess: all tests passed [do-all-tests.sh]\n```\nThe most important line is the final line:\n\n```\nSuccess: all tests passed\n```\n\nThis means that the test has passed. You should see similar \nlines if you run the other tests. If you do not and need help\nfiguring out why, email me at eric.nawrocki@nih.gov.\n\n---\n#### Questions, comments or feature requests? Send a mail to eric.nawrocki@nih.gov.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/ribovore/master/documentation/install.md",
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ncbi/ribovore/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "==============================================================\n                     PUBLIC DOMAIN NOTICE\n         National Center for Biotechnology Information\n\nThis software is a \"United States Government Work\" under the terms of\nthe United States Copyright Act.  It was written as part of the\nauthors' official duties as United States Government employees and\nthus cannot be copyrighted.  This software is freely available to the\npublic for use. The National Library of Medicine and the\nU.S. Government have not placed any restriction on its use or\nreproduction.\n\nAlthough all reasonable efforts have been taken to ensure the accuracy\nand reliability of the software and data, the NLM and the U.S.\nGovernment do not and cannot warrant the performance or results that\nmay be obtained by using this software or data. The NLM and the U.S.\nGovernment disclaim all warranties, express or implied, including\nwarranties of performance, merchantability or fitness for any\nparticular purpose.\n\nPlease cite the authors in any work or product based on this material.\n\n==============================================================\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/ribovore/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ribovore"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ncbi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 873023,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 29035,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Raku",
        "size": 370,
        "type": "Programming_language",
        "value": "Raku"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/ribovore/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:25:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}