{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "type": "Text_excerpt",
        "value": "[![eTOX](img/etox-logo.png \"eTOX\")](http://www.etoxproject.eu) [![IMI](img/imi-logo.png \"IMI\")](http://www.imi.europa.eu)\n"
      },
      "source": "https://raw.githubusercontent.com/Novartis/ontobrowser/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 0.9957126830608491,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Novartis/ontobrowser"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-03-17T03:31:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-26T12:48:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OntoBrowser is a web-based application for managing ontologies"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9953271277723309,
      "result": {
        "original_header": "OntoBrowser",
        "type": "Text_excerpt",
        "value": "The OntoBrowser tool was developed to manage ontologies (and controlled terminologies e.g. [CDISC SEND](http://evs.nci.nih.gov/ftp1/CDISC/SEND/SEND%20Terminology.html)). The primary goal of the tool is to provide an online collaborative solution for expert curators to map code list terms (sourced from multiple systems/databases) to preferred ontology terms. Other key features include visualisation of ontologies in hierarchical/graph format, advanced search capabilities, peer review/approval workflow and web service access to data. \n \n"
      },
      "source": "https://raw.githubusercontent.com/Novartis/ontobrowser/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9567935219133953,
      "result": {
        "original_header": "Key Features",
        "type": "Text_excerpt",
        "value": "* Interactive hierarchical/graph visualisation\n* Cross ontology searching\n* Synonym mapping\n* Automated mapping of similar matching synonyms \n* Central database for all ontologies\n* Version tracking\n* Review/Approve workflow\n* Email notification\n* Full curator audit trail/history\n \n"
      },
      "source": "https://raw.githubusercontent.com/Novartis/ontobrowser/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "type": "Text_excerpt",
        "value": "* [Approval Workflow](doc/approval_workflow.pdf)\n* [Web Services](doc/web_services.md)\n* [Database Design](doc/database_design.pdf)\n* [Security Review](doc/security_review.md)\n"
      },
      "source": "https://raw.githubusercontent.com/Novartis/ontobrowser/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/Novartis/ontobrowser/wiki"
      },
      "source": "https://raw.githubusercontent.com/Novartis/ontobrowser/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Novartis/ontobrowser/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Novartis/ontobrowser/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Novartis/ontobrowser"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/Novartis/ontobrowser/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Building and Deploying OntoBrowser\n---\n## System Requirements\n* [Java Development Kit (JDK)](http://www.oracle.com/technetwork/java/javase/overview/) version 8 (or above) - [Download](http://www.oracle.com/technetwork/java/javase/downloads/)\n* [Apache Maven](http://maven.apache.org) version 3 (or above) - [Download](http://maven.apache.org/download.cgi)\n* [Graphviz](http://www.graphviz.org) version 2.28 (or above) - [Download](http://www.graphviz.org/Download.php)\n* [Wildfly](http://wildfly.org) version 8.2 (or above) - [Download](http://wildfly.org/downloads/) [Install](https://docs.jboss.org/author/display/WFLY8/Getting+Started+Guide)\n\n**Note:** OntoBrowser has been extensively tested and deployed on Linux in production environments. System testing should be performed before deploying OntoBrowser on a Windows production environment.\n\n## Database Requirements\nOntoBrowser requires access to a relational database supported by Hibernate (the ORM used by Wildfly) e.g. Oracle, MySQL, PostgreSQL etc... See [Supported Databases](https://developer.jboss.org/wiki/SupportedDatabases2) for more information.\n\n**Note:** OntoBrowser has been extensively tested and deployed in production environments using Oracle databases (versions 10g and 11g). It is recommend that system testing is performed prior to using any non-Oracle databases in a production environment.\n\n## Database setup\n### Create Schema\nThe SQL DDL scripts to create the OntoBrowser database schema are located in the [sql](../sql) directory of the project. Use the corresponding DDL script for the selected database e.g. [create_schema_oracle.sql](../sql/create_schema_oracle.sql) for Oracle databases.\n\nThe following is an example on how to create the OntoBrowser schema using Oracle's SQL*Plus command line tool:\n\n```bash\n$ sqlplus ontobrowser@DEV @create_schema_oracle.sql\n```\n\nSee the [database design](./database_design.pdf) documentation for the more information regarding the database schema. \n\n### Insert initial data\nThe SQL DML scripts to insert initial data into the OntoBrowser database schema are located in the [sql](../sql) directory of the project. Use the corresponding DML script for the selected database e.g. [insert_initial_data_oracle.sql](../sql/insert_initial_data_oracle.sql) for Oracle databases\n\nThe following is an example on how to insert initial data into the OntoBrowser schema using Oracle's SQL*Plus command line tool:\n\n```bash\n$ sqlplus ontobrowser@DEV @insert_initial_data_oracle.sql\n```\n\nThe initial data consists of:\n\n* Creating system user/curator\n* Setting up version tracking\n* Defining the OBO builtin relationship types i.e. is_a, union_of, disjoint_from, part_of etc...\n* Inserting common datasources of nomenclature e.g. CDISC SEND, INHAND etc...\n\n## Wildfly Setup\n### Install JDBC Driver \nAs recommended by the Wildfly [documentation](https://docs.jboss.org/author/display/WFLY8/DataSource+configuration),  install the database type 4 JDBC driver by copying the jar file to the `$JBOSS_HOME/standalone/deployments` directory e.g.\n\n```bash\ncp ojdbc7.jar $JBOSS_HOME/standalone/deployments\n```\nNote: the latest Oracle JDBC driver can be downloaded from the Oracle [website](http://www.oracle.com/technetwork/database/features/jdbc/).\n### Datasource Setup\nSee the [DataSource Configuration](https://docs.jboss.org/author/display/WFLY8/DataSource+configuration) Wildfly documentation. The JNDI name of the datasource must be specifed as `java:jboss/datasources/ontobrowser`.\n\nBelow is an example configuration for an Oracle database (from the `$JBOSS_HOME/standalone/configuration/standalone.xml` configuration file):\n\n```xml\n<datasource jndi-name=\"java:jboss/datasources/ontobrowser\" pool-name=\"ontobrowser\">\n\t<connection-url>jdbc:oracle:thin:@localhost:1521:dev</connection-url>\n\t<driver>ojdbc7.jar</driver>\n\t<pool>\n\t\t<min-pool-size>1</min-pool-size>\n\t\t<max-pool-size>8</max-pool-size>\n\t\t<prefill>true</prefill>\n\t</pool>\n\t<security>\n\t\t<user-name>ontobrowser</user-name>\n\t\t<password>secret</password>\n\t</security>\n\t<validation>\n\t\t<valid-connection-checker class-name=\"org.jboss.jca.adapters.jdbc.extensions.oracle.OracleValidConnectionChecker\"/>\n\t\t<stale-connection-checker class-name=\"org.jboss.jca.adapters.jdbc.extensions.oracle.OracleStaleConnectionChecker\"/>\n\t\t<exception-sorter class-name=\"org.jboss.jca.adapters.jdbc.extensions.oracle.OracleExceptionSorter\"/>\n\t</validation>\n</datasource>\n```\n### Email Setup\nBy default Wildfly is configured to send email using STMP on localhost port 25. See the [Mail Service Configuration](http://www.mastertheboss.com/jboss-server/jboss-configuration/jboss-mail-service-configuration) documentation to configure a remote STMP server. \n\n### OntoBrowser Configuration\nEdit the `$JBOSS_HOME/standalone/configuration/standalone.xml` configuration file and add the following XML to the `<bindings>` element of the `urn:jboss:domain:naming:2.0` subsystem configuration. Change configuration values to suit the deployment environment:\n\n```xml\n<!-- external URL for OntoBrowser web app. Check VirtualHost section in apache conf -->\n<simple name=\"java:global/ontobrowser/url\" value=\"http://localhost/ontobrowser/\" type=\"java.net.URL\"/>\n<!-- username of system/default curator. Check the CURATOR table in the database -->\n<simple name=\"java:global/ontobrowser/curator/system\" value=\"SYSTEM\" type=\"java.lang.String\"/>\n<!-- local filesystem path for Lucene index -->\n<simple name=\"java:global/ontobrowser/index/path\" value=\"${jboss.server.data.dir}/ontobrowser/index\" type=\"java.lang.String\"/>\n<!-- path to dot command line program. Check local installation of Graphviz. -->\n<simple name=\"java:global/ontobrowser/dot/path\" value=\"/usr/local/bin/dot\" type=\"java.lang.String\"/>\n<!-- external URI for ontologies exported in OWL format -->\n<simple name=\"java:global/ontobrowser/export/owl/uri\" value=\"http://localhost/ontobrowser/ontologies\" type=\"java.net.URL\"/>\n<!-- boolean flag indicating if OntoBrowser is using an Oracle database -->\n<simple name=\"java:global/ontobrowser/database/oracle\" value=\"true\" type=\"boolean\"/>\n```\n\nSee the [Naming Subsystem Configuration](https://docs.jboss.org/author/display/WFLY8/Naming+Subsystem+Configuration) Wildfly documentation for more information.\n\n### Additional Wildfly configuration (optional)\nBy default Stateless Session Bean (SLSB) pooling is not enabled in Wildfly. When deploying OntoBrowser in a production environment is it recommended to enable SLSB pooling to prevent a Graphviz dot process being spawned for each request.\n\nEdit the `$JBOSS_HOME/standalone/configuration/standalone.xml` configuration file and add the following XML to the `<session-bean>` element of the `urn:jboss:domain:ejb3:2.0` subsystem:\n\n```xml\n<stateless>\n    <bean-instance-pool-ref pool-name=\"slsb-strict-max-pool\"/>\n</stateless>\n```\n\nThe resulting XML configuration should be:\n\n```xml\n<subsystem xmlns=\"urn:jboss:domain:ejb3:2.0\">\n\t<session-bean>\n\t\t<stateless>\n\t\t\t<bean-instance-pool-ref pool-name=\"slsb-strict-max-pool\"/>\n\t\t</stateless>\n\t\t...\n\t</session-bean>\n\t...\n```\n\nBy default the Hibernate secondary cache expiration *max-idle* timeout is set to 100,000 milliseconds i.e. 1 minute 40 seconds. In a production environment it is recommended to increase the expiration *max-idle* and *lifespan* timeout to more appropriate values. Note: setting timeout values to -1 disables expiration and hence the cache entries will never expire (however they can still be evicted if *max-entries* is exceeded).\n\nThe example Hibernate secondary cache configuration below (from the `$JBOSS_HOME/standalone/configuration/standalone.xml` configuration file) increases the default eviction *max-entries* value from the default of 10,000 to 100,000 and disables  expiration for both the *entity* and *local-query* caches:\n\n```xml\n<cache-container name=\"hibernate\" default-cache=\"local-query\" module=\"org.hibernate\">\n\t<local-cache name=\"entity\">\n\t\t<transaction mode=\"NON_XA\"/>\n\t\t<eviction strategy=\"LRU\" max-entries=\"100000\"/>\n\t\t<expiration lifespan=\"-1\" max-idle=\"-1\"/>\n\t</local-cache>\n\t<local-cache name=\"local-query\">\n\t\t<transaction mode=\"NONE\"/>\n\t\t<eviction strategy=\"LRU\" max-entries=\"100000\"/>\n\t\t<expiration lifespan=\"-1\" max-idle=\"-1\"/>\n\t</local-cache>\n\t<local-cache name=\"timestamps\">\n\t\t<transaction mode=\"NONE\"/>\n\t\t<eviction strategy=\"NONE\"/>\n\t</local-cache>\n</cache-container>\n```\n\n## Apache Basic Authentication and Proxy Setup (optional)\nIn a production environment it is recommended to perform the user authentication using a web server (e.g. Apache) located in a [DMZ](http://en.wikipedia.org/wiki/DMZ_(computing)).  Alternatively if installing OntoBrowser on a corporate intranet it is recommended to use a corporate single sign-on (SSO) system for user authentication.\n\nThe following example Apache configuration protects the `/ontobrowser` location using [Basic access ](http://en.wikipedia.org/wiki/Basic_access_authentication) and proxies requests (using AJP) to Wildfly running on the same machine:\n\n```xml\n<Location /ontobrowser/>\n    AuthType Basic\n    AuthName \"OntoBrowser\"\n    AuthBasicProvider dbd\n    AuthDBDUserPWQuery \"SELECT password FROM curator WHERE username = %s\"\n    Require valid-user\n    ProxyPass ajp://localhost:8009/ontobrowser/\n    ProxyPassReverse ajp://localhost:8009/ontobrowser/\n</Location>\n```\n\nNote: the configuration above can alternatively be defined in a `<VirtualHost>` container.\n\nThe following is an example Apache DBD configuration for an Oracle database with a SID of DEV:\n\n```\nDBDriver oracle\nDBDParams user=ontobrowser,pass=secret,server=DEV\nDBDMin  2\nDBDKeep 4\nDBDMax  10\nDBDExptime 300\n```\n\nFor more details see the Apache [mod_authn_dbd](http://httpd.apache.org/docs/2.2/mod/mod_authn_dbd.html) and [mod_dbd](http://httpd.apache.org/docs/2.2/mod/mod_dbd.html) documentation.\n\n## Building and Deploying OntoBrowser\n1. Download the project from GitHub: https://github.com/Novartis/ontobrowser/archive/master.zip\n2. Unzip the master.zip file\n3. Build and package the project using Maven i.e. `mvn package`\n4. Copy the `ontobrowser.war` file (located in the `target` directory) to Wildfly's `deployments` directory\n\n**Note:** If using a non-Oracle database perform the changes listed in the [non-oracle_changes.md](./non-oracle_changes.md) file before building the project.\n\nThe following bash commands provides and example on how to perform the steps above on a Unix based operating system:\n\n```bash\n$ curl -s -S -O -L https://github.com/Novartis/ontobrowser/archive/master.zip\n$ unzip master.zip\n$ cd ontobrowser-master\n$ mvn package\n$ cp target/ontobrowser.war $JBOSS_HOME/standalone/deployments\n```\n\nNote: Configuring Maven to use a proxy maybe required if behind a corporate firewall. See the Maven documentation on [configuring proxies](http://maven.apache.org/guides/mini/guide-proxies.html).\n\nSee the Wildfly [Getting Started Guide](https://docs.jboss.org/author/display/WFLY8/Getting+Started+Guide) on how to startup Wildfly. Below is an example for Unix based operating systems:\n\n```bash\n$ cd $JBOSS_HOME/bin\n$ ./standalone.sh\n```\n\n## Loading an Ontology\nOntologies can be loaded into OntoBrowser using the `/ontobrowser/ontologies` [RESTful](http://en.wikipedia.org/wiki/Representational_state_transfer) web service. The web service only supports the PUT method for loading ontologies and only accepts [OBO formatted](http://oboformat.googlecode.com/svn/trunk/doc/GO.format.obo-1_2.html) data.\n\nThe following example downloads the [Mouse adult gross anatomy](http://www.obofoundry.org/cgi-bin/detail.cgi?id=adult_mouse_anatomy) ontology then loads it into OntoBrowser using the web service:\n\n```bash\n$ curl -s -S -O -L http://purl.obolibrary.org/obo/ma.obo\n$ curl -s -S -H \"Content-Type: application/obo;charset=utf-8\" -X PUT --data-binary \"@ma.obo\" -u SYSTEM \"http://localhost/ontobrowser/ontologies/Mouse%20adult%20gross%20anatomy\"\n```\n\nNote: Proxy parameters or environment variables maybe be require when downloading behind a corporate firewall.\n\n## Setup a Controlled Vocabulary\nAn example SQL script to setup a *controlled vocabulary* is provided in the [sql](../sql) directory of the project: [insert_crtld_vocab_example.sql](../sql/insert_crtld_vocab_example.sql). The example defines the [SEND Specimen](http://evs.nci.nih.gov/ftp1/CDISC/SEND/SEND%20Terminology.html#CL.C77529.SPEC) code list in the database as a *controlled vocabulary* so the terms from the code list can be subsequently loaded (and then mapped to the *Mouse adult gross anatomy* ontology loaded previously).\n\nThe following is an example on how to run the example SQL script using Oracle's SQL*Plus command line tool:\n\n```bash\n$ sqlplus ontobrowser@DEV @insert_crtld_vocab_example.sql\n```\n\n## Loading Controlled Vocabulary Terms\nThe recommend technique to load *controlled vocabulary* terms is in batch using a dedicated [ETL](http://en.wikipedia.org/wiki/Extract,_transform,_load) tool e.g. [Informatica](http://www.informatica.com), [Kettle](http://community.pentaho.com/projects/data-integration/), [Talend](https://www.talend.com) etc...\n\nThe *controlled vocabulary* terms must be loaded into the `CTRLD_VOCAB_TERM` table.\n\n## Add a Curator\nThe SQL DML scripts to add a curator to the OntoBrowser database schema are located in the [sql](../sql) directory of the project. Use the corresponding DML script for the selected database e.g. [insert_curator_oracle.sql](../sql/insert_curator_oracle.sql) for Oracle databases.\n\nThe following is an example on how to add a curator with the username *smith* to the database using Oracle's SQL*Plus command line tool:\n\n```bash\n$ sqlplus ontobrowser@DEV @insert_curator_oracle.sql 'smith'\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/Novartis/ontobrowser/master/doc/INSTALL.md",
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Novartis/ontobrowser/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/Novartis/ontobrowser/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Novartis/ontobrowser/master/img/imi-logo.png"
      },
      "source": "https://raw.githubusercontent.com/Novartis/ontobrowser/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ontobrowser"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Novartis"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 832146,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PLSQL",
        "size": 40401,
        "type": "Programming_language",
        "value": "PLSQL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 6120,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 814,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Novartis/ontobrowser/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "carloravagli",
          "type": "User"
        },
        "date_created": "2015-03-23T23:48:46Z",
        "date_published": "2015-03-31T01:25:32Z",
        "description": "Initial Release\n",
        "html_url": "https://github.com/Novartis/ontobrowser/releases/tag/v1.0",
        "name": "Initial Release",
        "release_id": 1108495,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/Novartis/ontobrowser/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Novartis/ontobrowser/releases/1108495",
        "value": "https://api.github.com/repos/Novartis/ontobrowser/releases/1108495",
        "zipball_url": "https://api.github.com/repos/Novartis/ontobrowser/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:46:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 38
      },
      "technique": "GitHub_API"
    }
  ]
}