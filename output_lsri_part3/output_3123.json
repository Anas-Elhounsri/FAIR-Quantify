{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "MUST"
        ],
        "type": "Text_excerpt",
        "value": "* [1] Jaroslav Bend\u00edk and Ivana \u010cern\u00e1: MUST: Minimal Unsatisfiable Subsets Enumeration Tool. TACAS 2020.\n* [2] Jaroslav Bend\u00edk, Nikola Bene\u0161, Ivana \u010cern\u00e1, Ji\u0159\u00ed Barnat: Tunable Online MUS/MSS Enumeration. FSTTCS 2016.\n* [3] Jaroslav Bend\u00edk, Ivana \u010cern\u00e1, Nikola Bene\u0161: Recursive Online Enumeration of All Minimal Unsatisfiable Subsets. ATVA 2018.\n* [4] http://minisat.se/\n* [5] https://bitbucket.org/anton_belov/muser2\n* [6] https://github.com/Z3Prover/z3\n* [7] https://spot.lrde.epita.fr/\n* [8] https://bitbucket.org/gkatsi/mcsmus\n* [9] Mark H. Liffiton, Alessandro Previti, Ammar Malik, Jo\u00e3o Marques-Silva: Fast, flexible MUS enumeration. Constraints 21(2), 2016.\n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing",
        "parent_header": [
          "MUST"
        ],
        "type": "Text_excerpt",
        "value": "If you use our tool (MUST) in your research, please cite our paper that presented MUST:\n```\n@inproceedings{DBLP:conf/tacas/BendikC20,\n  author    = {Jaroslav Bend{\\'{\\i}}k and\n               Ivana Cern{\\'{a}}},\n  title     = {{MUST:} Minimal Unsatisfiable Subsets Enumeration Tool},\n  booktitle = {{TACAS} {(1)}},\n  series    = {Lecture Notes in Computer Science},\n  volume    = {12078},\n  pages     = {135--152},\n  publisher = {Springer},\n  year      = {2020}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Jaroslav Bend{\\'{\\i}}k and\nIvana Cern{\\'{a}}",
        "format": "bibtex",
        "title": "{MUST:} Minimal Unsatisfiable Subsets Enumeration Tool",
        "type": "Text_excerpt",
        "value": "@inproceedings{DBLP:conf/tacas/BendikC20,\n    year = {2020},\n    publisher = {Springer},\n    pages = {135--152},\n    volume = {12078},\n    series = {Lecture Notes in Computer Science},\n    booktitle = {{TACAS} {(1)}},\n    title = {{MUST:} Minimal Unsatisfiable Subsets Enumeration Tool},\n    author = {Jaroslav Bend{\\'{\\i}}k and\nIvana Cern{\\'{a}}},\n}"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jar-ben/mustool"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "MUST"
        ],
        "type": "Text_excerpt",
        "value": "In case of any troubles, do not hesitate to contact me, Jaroslav Bendik, the developer of the tool, at xbendik=at=fi.muni.cz.\n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-02-10T00:14:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-26T21:51:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9573969260760655,
      "result": {
        "original_header": "MUST",
        "type": "Text_excerpt",
        "value": "MUST is a  tool for online enumeration of minimal unsatisfiable subsets (MUSes) of a given unsatisfiable set of constraints. The tool currently implements three online MUS enumeration algorithms: MARCO [9], TOME [2], and ReMUS [3], and supports MUS enumeration in three constraint domains: SAT, SMT, and LTL. A paper [1] describing MUST will be presented at TACAS 2020. \n\nWe distribute this source code under the MIT licence. See ./LICENSE for mode details.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9933200507944184,
      "result": {
        "original_header": "Other Third-Party Tools",
        "type": "Text_excerpt",
        "value": "Besides the above mentioned tools, we also use two single MUS extraction algorithms: muser2 [5] and mcsmus [8]. You do not have to install these. Muser2 is presented in our repo in a binary form, and mcsmus is compiled with our code. \n \n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jar-ben/mustool/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jar-ben/mustool/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jar-ben/mustool"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MUST"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "MUST"
        ],
        "type": "Text_excerpt",
        "value": "To be able to deal with the three constraint domains, our tool employs several external libraries. In particular, we use:\n- miniSAT [4] and zlib library for dealing with the SAT domain\n- z3 [6] for dealing with the SMT domain\n- and SPOT [7] for dealing with the LTL domain.\n\nMiniSAT is packed directly with the source code of our tool; you do not install it separately. Zlib has to be installed. Finally, z3 and/or SPOT need to be installed only if you want to use our tool in the SMT and/or LTL domains. Note that installation of z3 and SPOT might take several hours.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation of zlib",
        "parent_header": [
          "MUST",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Zlib is a part of the package zlib1g-dev, you should be able to install it with:\n```\nsudo apt install zlib1g-dev\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation of z3",
        "parent_header": [
          "MUST",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "z3 can be downloaded at [https://github.com/Z3Prover/z3](https://github.com/Z3Prover/z3)\nPlease follow its README file for installation instructions. Basically, the following should do the trick:\n```\npython scripts/mk_make.py\ncd build; make\nsudo make install\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation of SPOT",
        "parent_header": [
          "MUST",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "SPOT can be downloaded from [https://spot.lrde.epita.fr/](https://spot.lrde.epita.fr/)\nAgain, follow installation instructions that are provided by its authors. \nBasically, the following should do the trick:\n```\n./configure --disable-python\nmake\nsudo make install\nsudo ldconfig\n```\nNote the \"sudo ldconfig\", that is important. Do not forget to run it, otherwise SPOT might not be visible for our tool.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Building our tool",
        "parent_header": [
          "MUST",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Building our tool requires at least zlib to be installed.\nTo build our tool, go to its main directory (the one where is this README.md file) and run:\n```\nmake\n```\nThis will make our tool only with support for the SAT domain. If you want to support also the other domains, you have to install z3 and/or SPOT first. Then run one of the following:\n```\nmake USESMT=YES\nmake USELTL=YES\nmake USESMT=YES USELTL=YES\n```\nIf you run make repeatedly, e.g. if you have decided to allow another domain, run first \"make clean\" and then appropriate make.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.839157252283043,
      "result": {
        "original_header": "MUST",
        "type": "Text_excerpt",
        "value": "\nWe distribute this source code under the MIT licence. See ./LICENSE for mode details.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jar-ben/mustool/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright 2019 Jaroslav Bendik\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mustool"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jar-ben"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 960406,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 21165,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 5141,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 986,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running our tool",
        "parent_header": [
          "MUST"
        ],
        "type": "Text_excerpt",
        "value": "in the main directory, run \"./must _file_\" where _file_ is an input file of constraints. You can use one of our examples, e.g.:\n```\n./must examples/test.cnf\n./must examples/test.smt2\n./must examples/test.ltl\n./must examples/bf1355-228.cnf\n```\nTo run the tool with a time limit (always recommended), use e.g.:\n```\ntimeout 20 examples/bf1355-228.cnf\n```\nTo save the identified MUSes into a file, run:\n```\ntimeout 10 ./must -o output_file examples/test.cnf\n```\nTo see all the available parameters, run:\n```\n./must -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jar-ben/mustool/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:39:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ]
}