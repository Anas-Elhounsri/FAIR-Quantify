{
  "application_domain": [
    {
      "confidence": 0.9192410743908438,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 42.74,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9987218853957129,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/helxplatform/dug"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-24T02:14:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-14T17:29:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Semantic Search"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9933390685302961,
      "result": {
        "original_header": "Dug: digging up dark data",
        "type": "Text_excerpt",
        "value": "Dug applies semantic web and knowledge graph methods to improve the [FAIR](https://www.go-fair.org/fair-principles/)-ness of research data. \nAs an example, [dbGaP](https://www.ncbi.nlm.nih.gov/gap/) is a rich source of metadata about biomedical knowledge derived from clinical research like the underutilized [TOPMed](https://www.nhlbiwgs.org/) data sets. A key obstacle to leveraging this knowledge is the lack of researcher tools to navigate from a set of concepts of interest towards relevant study variables. In a word, **search**.  \nWhile other approaches to searching this data exist, our focus is semantic search: For us, \"relevant\" is defined as having a basis in curated, peer reviewed ontologically represented biomedical knowledge. Given a search term, Dug returns results that are related based on connections in ontological biomedical knowledge graphs. \nTo achieve this, we annotate study metadata with terms from [biomedical ontologies](http://www.obofoundry.org/), contextualize them within a unifying [upper ontology](https://biolink.github.io/biolink-model/) allowing study data to be federated with [larger knowledge graphs](https://researchsoftwareinstitute.github.io/data-translator/), and create a full text search index based on those knowledge graphs.\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8978217569863584,
      "result": {
        "original_header": "Additional Notes",
        "type": "Text_excerpt",
        "value": "If you want to change or re-configure the dug service authentication credentials\nto be different from the defaults, run:\n```shell\nmv .env .env.bak\nDATA_DIR=/path/to/dug-data-storage RANDOM=$RANDOM envsubst < .env.template > .env\ndocker-compose down\ndocker system prune -a  # NOTE: This will remove *all* images, layers, and volumes.\n                        #       Be sure you're okay with this before running.\ndocker-compose up\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9592823854778462,
      "result": {
        "original_header": "The Dug Framework",
        "type": "Text_excerpt",
        "value": "Dug's **ingest** uses the [Biolink](https://biolink.github.io/biolink-model/) upper ontology to annotate knowledge graphs and structure queries used to drive full text indexing and search. It uses Monarch Initiative APIs to perform named entity recognition on natural language prose to extract ontology identifiers. It also uses Translator normalization services to find preferred identifiers and Biolink types for each extracted identifier. The final step of ingest is to represent the annotated data in a Neo4J graph database. \nDug's **integration** phase uses Translator's Plater and Automat to generate a Reasoner Standard API compliant service and integrates that service into TranQL. This enables queries that span TOPMed, ROBOKOP, and other reasoners. \nDug's **indexing & search** phase query the graph infrastructure and analyze the resulting graphs. These are used to create documents associating natural language terms with annotations and the annotated variables and studies.\n![image](https://user-images.githubusercontent.com/306971/94348055-4eb22180-0007-11eb-8093-4e321735ebaf.png) \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9212017011985348,
      "result": {
        "original_header": "Knowledge Graphs",
        "type": "Text_excerpt",
        "value": "Dug's core data structure is the knowledge graph. Here's a query of a COPDGene knowledge graph created by Dug from harmonized TOPMed variables. \n![image](https://user-images.githubusercontent.com/306971/77009445-513c0c00-693e-11ea-83ed-722ec896d3e9.png)\n**Figure 1**: A Biolink knowledge graph of COPDGene metadata. It shows the relationship between the biological process \"Sleep\" and a meta variable. The highlighted node is aTOPMed meta variable or harmonized variable. It is in turn associated with variables connected to two studies in the data set. By linking additional ontological terms to the biological process sleep, we will be able to provde progressively more helpful search results rooted in curated biomedical knowledge. \nAnd one more example to illustrate the knowledge model we use to inform the search index:\n![image](https://user-images.githubusercontent.com/306971/77230029-b9ba0180-6b67-11ea-9ccf-748955aa1931.png)\n**Figure 2**: The TOPMed harmonized variable is highlighted, showing its relationships with the ontology term for Heart Failure and the Heart Failure and with a specific study variable. Several similar disease, harmonized variable, variable, study relationships are also shown. \nThese graphs are used to create the document's well add to the search index to power full text search. \nIn phase 1, we use Neo4J to build queries. In subsequent phases, we integrate other semantic services using TranQL. \n![image](https://user-images.githubusercontent.com/306971/77681466-bcec2d80-6f6b-11ea-93c5-87eee57d4b66.png)\n**Figure 3**: A TranQL knowledge graph query response. Integrating TOPMed harmonized variables as a Translator service called by TranQL allows us to query the federation of Translator ontological connections as a precursor to indexing. This includes chemical, phenotypic, disease, cell type, genetic, and other ontologies from sources like [ROBOKOP](https://researchsoftwareinstitute.github.io/data-translator/apps/robokop) as well as clinical aggregate data from sources like [ICEES](https://researchsoftwareinstitute.github.io/data-translator/apps/icees). The image above shows a query linking cholesterol to \"LDL in Blood\" a harmonized TOPMed variable. That variable is, in turn, linked to source variables and each of those is linked to its source study.\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9960945498362871,
      "result": {
        "original_header": "Elasticsearch Logic",
        "type": "Text_excerpt",
        "value": "Elasticsearch contains the indexed knowledge graphs against which we perform full-text queries.  Our query currently supports conditionals (AND, OR, NOT) as well as exact matching on quoted terms.  Because we don't specify an analyzer in our query or when we index documents, we default to the [standard analyzer](https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-standard-analyzer.html), which is recommended for full-text search.  The standard analyzer performs grammar-based tokenization (e.g., splitting up an input string into tokens by several separators including whitespace, commas, hyphens), defined by the [Unicode Standard Annex #29](http://unicode.org/reports/tr29/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9619032536570494,
      "result": {
        "original_header": "Approach",
        "type": "Text_excerpt",
        "value": "The methodology, from start to finish, reads raw data, annotates it with ontological terms, normalizes those terms, inserts them into a queryable knowledge graph, queries that graph along pre-configured lines, turns the resulting knowledge graphs into documents, and indexes those documents in a full text search engine.\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8514662058828019,
      "result": {
        "original_header": "Link",
        "type": "Text_excerpt",
        "value": "Link ingests raw dbGaP study metadata and performs semantic annotation by\n* Parsing a TOPMed data dictionary XML file to extract variables.\n* Using the Monarch SciGraph named entity recognizer to identify ontology terms.\n* Using the Translator SRI identifier normalization service to\n  * Select a preferred identifier for the entity\n  * Determine the BioLink types applying to each entity\n* Writing each variable with its annotations as a JSON object to a file.\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8926035746258835,
      "result": {
        "original_header": "Load",
        "type": "Text_excerpt",
        "value": "In phase-1, we query Neo4J to create knowledge graphs. In phase-2 we'll use the Neo4J to create a Translator Knowledge Provider API. That API will be integrated using TranQL with other Translator reasoners like ROBOKOP. This will allow us to build more sophisticated graphs spanning federated ontological knowledge.\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8589228132432302,
      "result": {
        "original_header": "Crawl",
        "type": "Text_excerpt",
        "value": "* Runs those graph queries and caches knowledge graph responses.\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9621047918271847,
      "result": {
        "original_header": "Index",
        "type": "Text_excerpt",
        "value": "* Consumes knowledge graphs produced by the crawl.\n* Uses connections in the graph to create documents including both full text of variable descriptions and ontology terms.\n* Produces a queryable full text index of the variable set.\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.967694487927346,
      "result": {
        "original_header": "The Dug Data Development Kit (DDK)",
        "type": "Text_excerpt",
        "value": "Dug provides a tool chain for the ingest, annotation, knowledge graph representation, query, crawling, indexing, and search of datasets with metadata. The following sections provide an overview of the relevant components.\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9793361440712016,
      "result": {
        "original_header": "Ingest",
        "type": "Text_excerpt",
        "value": "Data formats for harmonized variables appear to be in flux, hence the multiple approaches. More on this soon. \nThere are three sets of example metadata files in the repo.\n* A COPDGene dbGaP metadata file is at `data/dd.xml`\n* A harmonized variable metadata CSV is at `data/harmonized_variable_DD.csv`\n* Files with names starting with: `data/topmed_*` \nThese can be run with \n```\nbin/dug link data/dd.xml\nbin/dug load data/dd_tagged.json\n```\nor \nBASH2*\nor\nBASH3*\nThe first two formats will likely go away.\nThe last format\n* Consists of two sets of files following that naming convention.\n* Combines the link and load phases into link.\n* Optionally allows the --index <arg> flag. This will run graph queries and index data in Elasticsearch.\n  \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.922104155540702,
      "result": {
        "original_header": "Crawl &amp; Index",
        "type": "Text_excerpt",
        "value": "Exposing the Elasticsearch interface to the internet is strongly discouraged for security reasons. Instead, we have a REST API. We'll use this as a place to enforce a schema and validate requests so that the search engine's network endpoint is strictly internal.\n| Command        | Description           | Example                              |\n| -------------- | --------------------- | ------------------------------------ |\n| bin/dug api    | Run the REST API.     | bin/dug api [--debug] [--port={int}] | \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9328874499222347,
      "result": {
        "original_header": "Development",
        "type": "Text_excerpt",
        "value": "**Developers:** Internal to bin/dug, an environment file is automatically created. That file is in `docker/.env`.\nIf you are running in development, and are not using a public IP address and hostname, you'll want to create a separate .env file to allow programs to connect to the docker containers as services. This matters if, for example, you want to run bin/test, as the clients in that test need to know how to connect to each of the services they call. Copy the generated docker/.env to docker/.env.dev. Change all hostnames to `localhost`. That should do it. Be sure to keep the generated passwords from the generated .env the same. \n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8262833641616899,
      "result": {
        "original_header": "Testing",
        "type": "Text_excerpt",
        "value": "Dug's automated functional tests:\n* Delete the test index\n* Execute the link and load phases for the dbGaP data dictionary and harmonized variables.\n* Execute the crawl and index phases.\n* Execute a number of searches over the generated search index. \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9732590945810584,
      "result": {
        "original_header": "Data Formats",
        "type": "Text_excerpt",
        "value": "TOPMed phenotypic concept data is [here](https://github.com/helxplatform/dug/tree/master/data). \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.847661395420124,
      "result": {
        "original_header": "Release",
        "type": "Text_excerpt",
        "value": "To release, commit the change and select feature.\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/helxplatform/dug/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/helxplatform/dug/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "helxplatform/dug"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Dug: digging up dark data"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/helxplatform/dug/develop/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/helxplatform/dug/develop/debug.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/helxplatform/dug/develop/data/bdc_dbgap_download.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/306971/94348055-4eb22180-0007-11eb-8093-4e321735ebaf.png"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/306971/77009445-513c0c00-693e-11ea-83ed-722ec896d3e9.png"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/306971/77230029-b9ba0180-6b67-11ea-9ccf-748955aa1931.png"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/306971/77681466-bcec2d80-6f6b-11ea-93c5-87eee57d4b66.png"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/63300314/85741468-7627e400-b6d0-11ea-849c-7b6da8b630b3.png"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/306971/77009780-e939f580-693e-11ea-8a02-ca2fd59d4366.png"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.992389748194307,
      "result": {
        "original_header": "Quickstart",
        "type": "Text_excerpt",
        "value": "NOTE: You must run `make init` once you've cloned the repo to enable the commit-msg git hook so that conventional commits will apply automatically. \nTo install Dug in your environment , run `make install`. Alternatively,\n```shell\npip install -r requirements.txt\npip install -e .\n```\nTo run the tests , run `make test`. Alternatively,\n```shell\npytest .\n```\n \nTo bring up the backend services, run:\n```shell\ndocker-compose up\n```\nIf you're running dug-specific commands (i.e. `dug`) outside the docker container,\nyou have to make sure the env vars are set. Also, make sure all hostnames are correct\nfor the environment you're running in. For example, to be able to connect to dug backend\nservices from outside the container (but in a shell env), run:\n```shell\nsource .env\nexport $(cut -d= -f1 .env)\nexport ELASTIC_API_HOST=localhost\nexport REDIS_HOST=localhost\n```\n \nAfter crawling, you can search:\n```shell\ndug search -q \"vein\" -t \"concepts\"\ndug search -q \"vein\" -t \"variables\" -k \"concept=UBERON:0001638\"\n``` \nYou can also query Dug's REST API:\n```shell\nquery=\"`echo '{\"index\" : \"concepts_index\", \"query\" : \"vein\"}'`\"\n\ncurl --data \"$query\" \\\n     --header \"Content-Type: application/json\" \\\n     --request POST \\\n     http://localhost:5551/search\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999924425004223,
      "result": {
        "original_header": "Additional Notes",
        "type": "Text_excerpt",
        "value": "If you want to change or re-configure the dug service authentication credentials\nto be different from the defaults, run:\n```shell\nmv .env .env.bak\nDATA_DIR=/path/to/dug-data-storage RANDOM=$RANDOM envsubst < .env.template > .env\ndocker-compose down\ndocker system prune -a  # NOTE: This will remove *all* images, layers, and volumes.\n                        #       Be sure you're okay with this before running.\ndocker-compose up\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9638855785989843,
      "result": {
        "original_header": "Ingest",
        "type": "Text_excerpt",
        "value": "| Command           | Description                                         | Example                  |\n| ----------------- | --------------------------------------------------- | ------------------------ |\n| bin/dug link      | Use NLP, etc to add ontology identifiers and types. | bin/dug link {input}     |\n| bin/dug load      | Create a knowledge graph database.                  | bin/dug load {input}     | \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9208334397920979,
      "result": {
        "original_header": "Crawl &amp; Index",
        "type": "Text_excerpt",
        "value": "| Command        | Description                                                       | Example              |\n| -------------- | ----------------------------------------------------------------- | -------------------- |\n| bin/dug crawl  | Execute graph queries and accumulate knowledge graphs in response.| bin/dug crawl        |\n| bin/dug index  | Analyze crawled knowledge graphs and create search engine indices.| bin/dug index        |\n| bin/dug query  | Test the index by querying the search engine from Python.         | bin/dug query {text} |\n \n### Search API \nExposing the Elasticsearch interface to the internet is strongly discouraged for security reasons. Instead, we have a REST API. We'll use this as a place to enforce a schema and validate requests so that the search engine's network endpoint is strictly internal.\n| Command        | Description           | Example                              |\n| -------------- | --------------------- | ------------------------------------ |\n| bin/dug api    | Run the REST API.     | bin/dug api [--debug] [--port={int}] | \nTo call the API endpoint using curl:\n| Command             | Description           | Example                   |\n| ------------------- | --------------------- | ------------------------- |\n| bin/dug query_api   | Call the REST API.    | bin/dug query_api {query} |\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.935771723948004,
      "result": {
        "original_header": "Development",
        "type": "Text_excerpt",
        "value": "This system can be started with the following command: \n| Command             | Description                | Example          |\n| ------------------- | -------------------------- | ---------------- |\n| bin/dug stack       | Runs all services          | bin/dug stack    | \n**Developers:** Internal to bin/dug, an environment file is automatically created. That file is in `docker/.env`.\nIf you are running in development, and are not using a public IP address and hostname, you'll want to create a separate .env file to allow programs to connect to the docker containers as services. This matters if, for example, you want to run bin/test, as the clients in that test need to know how to connect to each of the services they call. Copy the generated docker/.env to docker/.env.dev. Change all hostnames to `localhost`. That should do it. Be sure to keep the generated passwords from the generated .env the same. \n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9956434272776202,
      "result": {
        "original_header": "Testing",
        "type": "Text_excerpt",
        "value": "| Command             | Description                    | Example      |\n| ------------------- | ------------------------------ | ------------ |\n| bin/dug test        | Run automated functional tests | bin/dug test | \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9462180562200169,
      "result": {
        "original_header": "Fail on Vulnerability Detection",
        "type": "Text_excerpt",
        "value": "During PR's several vulnerability scanners are run. If there are vulnerabilities detected, the pr checks will fail and a report will be sent to Github Security Dashboard for viewing. Please ensure the vulnerability is mitigated prior to continuing the merge to protected branches. \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8368872376378949,
      "result": {
        "original_header": "Quickstart",
        "type": "Text_excerpt",
        "value": "Then you can actually crawl the data:\n```shell\ndug crawl tests/integration/data/test_variables_v1.0.csv -p \"TOPMedTag\"\n````\n \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9084220325126051,
      "result": {
        "original_header": "Testing",
        "type": "Text_excerpt",
        "value": "| Command             | Description                    | Example      |\n| ------------------- | ------------------------------ | ------------ |\n| bin/dug test        | Run automated functional tests | bin/dug test | \n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/helxplatform/dug/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 RENCI - Renaissance Computing Institute\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dug"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "helxplatform"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 325249,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2756,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1660,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 626,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-08-12T19:47:47Z",
        "date_published": "2024-08-14T16:53:07Z",
        "description": "## What's Changed\n* End point program name by @yskale in https://github.com/helxplatform/dug/pull/346\n* #370 Added simple_search_query for concepts by @vladimir2217 in https://github.com/helxplatform/dug/pull/345\n* Program id search by @YaphetKG in https://github.com/helxplatform/dug/pull/347\n* End point study nameid by @yskale in https://github.com/helxplatform/dug/pull/344\n* Fix to var search by @vladimir2217 in https://github.com/helxplatform/dug/pull/349\n* Updated BDC dbGaP IDs to the latest from BDC Gen3 by @gaurav in https://github.com/helxplatform/dug/pull/343\n* Fix for missing score by @vladimir2217 in https://github.com/helxplatform/dug/pull/353\n* Fix program name search by @yskale in https://github.com/helxplatform/dug/pull/354\n* Add Programs for BDC studies by @gaurav in https://github.com/helxplatform/dug/pull/355\n* order_program_list by @YaphetKG in https://github.com/helxplatform/dug/pull/358\n* Radx parser by @YaphetKG in https://github.com/helxplatform/dug/pull/348\n* new parsers and fun things annotation change, config additions for t\u2026 by @YaphetKG in https://github.com/helxplatform/dug/pull/356\n* added program description and sorted the program names alphabetically by @yskale in https://github.com/helxplatform/dug/pull/360\n* increase bucket size by @YaphetKG in https://github.com/helxplatform/dug/pull/361\n* Fix consent id by @yskale in https://github.com/helxplatform/dug/pull/362\n* Bagel integration by @YaphetKG in https://github.com/helxplatform/dug/pull/363\n* remove type from sapbert call to make things faster by @YaphetKG in https://github.com/helxplatform/dug/pull/364\n* Fix missing program and studies by @yskale in https://github.com/helxplatform/dug/pull/365\n* fix bug; by @YaphetKG in https://github.com/helxplatform/dug/pull/366\n* fix program query by @YaphetKG in https://github.com/helxplatform/dug/pull/367\n\n## New Contributors\n* @yskale made their first contribution in https://github.com/helxplatform/dug/pull/346\n\n**Full Changelog**: https://github.com/helxplatform/dug/compare/2.13.1...2.13.2",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.13.2",
        "name": "2.13.2",
        "release_id": 170221052,
        "tag": "2.13.2",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.13.2",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/170221052",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/170221052",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.13.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-02-08T17:35:45Z",
        "date_published": "2024-02-08T17:38:23Z",
        "description": "## What's Changed\n* Ctn parser by @YaphetKG in https://github.com/helxplatform/dug/pull/340\n\n\n**Full Changelog**: https://github.com/helxplatform/dug/compare/2.13.0...2.13.1",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.13.1",
        "name": "2.13.1",
        "release_id": 140640439,
        "tag": "2.13.1",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.13.1",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/140640439",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/140640439",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.13.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-01-25T16:33:23Z",
        "date_published": "2024-01-25T16:38:59Z",
        "description": "## What's Changed\n* Minor improvements to bin/vlmd_to_dbgap_xml.py by @gaurav in https://github.com/helxplatform/dug/pull/321\n* Added CORSMiddleware to allow Dug to make CORS requests by @gaurav in https://github.com/helxplatform/dug/pull/326\n* Trivy action - CICD-198 by @joshua-seals in https://github.com/helxplatform/dug/pull/332\n* Cde links 2 by @YaphetKG in https://github.com/helxplatform/dug/pull/331\n* bump versions by @YaphetKG in https://github.com/helxplatform/dug/pull/335\n* Feat/165 sapbert annotator by @braswent in https://github.com/helxplatform/dug/pull/334\n* 329 annotator modules by @braswent in https://github.com/helxplatform/dug/pull/330\n* Patch nrslv resp by @YaphetKG in https://github.com/helxplatform/dug/pull/337\n\n\n**Full Changelog**: https://github.com/helxplatform/dug/compare/2.12.0...2.13.0",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.13.0",
        "name": "2.13.0",
        "release_id": 138549085,
        "tag": "2.13.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.13.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/138549085",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/138549085",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.13.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-10-24T20:21:10Z",
        "date_published": "2023-10-24T20:24:38Z",
        "description": "## What's Changed\n* rti-dug merge by @YaphetKG in https://github.com/helxplatform/dug/pull/322\n* Dug merge by @YaphetKG in https://github.com/helxplatform/dug/pull/327\n\n\n**Full Changelog**: https://github.com/helxplatform/dug/compare/2.11.2...2.12.0",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.12.0",
        "name": "2.12.0",
        "release_id": 126492179,
        "tag": "2.12.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.12.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/126492179",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/126492179",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.12.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-09-29T18:07:31Z",
        "date_published": "2023-09-29T18:31:57Z",
        "description": "## What's Changed\n* fix: Add retries into the annotator class by @HowardLander in https://github.com/helxplatform/dug/pull/319\n* Bacpac fix by @YaphetKG in https://github.com/helxplatform/dug/pull/320\n* Add script to download dbGaP study identifiers from BDC Gen3 by @gaurav in https://github.com/helxplatform/dug/pull/323\n\n\n**Full Changelog**: https://github.com/helxplatform/dug/compare/2.11.1...2.11.2",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.11.2",
        "name": "2.11.2",
        "release_id": 123163209,
        "tag": "2.11.2",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.11.2",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/123163209",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/123163209",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.11.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-09-06T13:43:56Z",
        "date_published": "2023-09-06T14:54:48Z",
        "description": "## What's Changed\n* Added script for converting VLMD to dbGaP XML files by @gaurav in https://github.com/helxplatform/dug/pull/315\n* Mds import to dev by @YaphetKG in https://github.com/helxplatform/dug/pull/316\n\n\n**Full Changelog**: https://github.com/helxplatform/dug/compare/2.11.0...2.11.1",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.11.1",
        "name": "2.11.1",
        "release_id": 120137322,
        "tag": "2.11.1",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.11.1",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/120137322",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/120137322",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.11.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-08-21T14:16:26Z",
        "date_published": "2023-08-21T16:13:54Z",
        "description": "## What's Changed\n* Fix type filter search pagination by @frostyfan109 in https://github.com/helxplatform/dug/pull/310\n* Try to pull study name from GapExchange file first by @Hoid in https://github.com/helxplatform/dug/pull/308\n* Update nn desc by @YaphetKG in https://github.com/helxplatform/dug/pull/311\n\n\n**Full Changelog**: https://github.com/helxplatform/dug/compare/2.10.2...2.11.0",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.11.0",
        "name": "2.11.0",
        "release_id": 118045504,
        "tag": "2.11.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.11.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/118045504",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/118045504",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.11.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2023-08-14T15:18:10Z",
        "date_published": "2023-08-14T15:19:09Z",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.10.3-rc",
        "name": "Pre-release 2.10.3",
        "release_id": 117180071,
        "tag": "v2.10.3-rc",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.10.3-rc",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/117180071",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/117180071",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.10.3-rc"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-08-04T12:30:07Z",
        "date_published": "2023-08-04T12:31:04Z",
        "description": "## What's Changed\n* Release/2.8.0 by @YaphetKG in https://github.com/helxplatform/dug/pull/198\n* Release/v2.9.0 by @YaphetKG in https://github.com/helxplatform/dug/pull/201\n* Release/2.9.1 by @YaphetKG in https://github.com/helxplatform/dug/pull/205\n* Update _version.py by @YaphetKG in https://github.com/helxplatform/dug/pull/206\n* Release/2.9.2 by @YaphetKG in https://github.com/helxplatform/dug/pull/209\n* Release 2.9.3 by @YaphetKG in https://github.com/helxplatform/dug/pull/244\n* Release/2.9.4 by @YaphetKG in https://github.com/helxplatform/dug/pull/260\n* Release/2.9.5 by @YaphetKG in https://github.com/helxplatform/dug/pull/266\n* Release 2.9.6 by @YaphetKG in https://github.com/helxplatform/dug/pull/272\n* Release v2.9.8 by @YaphetKG in https://github.com/helxplatform/dug/pull/279\n* Release 2.10.0 by @YaphetKG in https://github.com/helxplatform/dug/pull/293\n* Master back to dev (#297) by @YaphetKG in https://github.com/helxplatform/dug/pull/298\n* dev to master test ci build  by @YaphetKG in https://github.com/helxplatform/dug/pull/299\n* Dev to master sync by @YaphetKG in https://github.com/helxplatform/dug/pull/304\n* Feature/concept type backend search by @mbacon-renci in https://github.com/helxplatform/dug/pull/300\n* Master dev sync by @YaphetKG in https://github.com/helxplatform/dug/pull/305\n* Release 2.10.2 by @YaphetKG in https://github.com/helxplatform/dug/pull/306\n* Master by @YaphetKG in https://github.com/helxplatform/dug/pull/307\n\n## New Contributors\n* @mbacon-renci made their first contribution in https://github.com/helxplatform/dug/pull/300\n\n**Full Changelog**: https://github.com/helxplatform/dug/compare/2.10.1...2.10.2",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.10.2",
        "name": "2.10.2",
        "release_id": 115107081,
        "tag": "2.10.2",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.10.2",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/115107081",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/115107081",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.10.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-07-31T13:09:05Z",
        "date_published": "2023-08-01T18:26:27Z",
        "description": "## What's Changed\n* adds reconnect to timed out ftp session by @YaphetKG in https://github.com/helxplatform/dug/pull/302\n* Ftp fixes by @YaphetKG in https://github.com/helxplatform/dug/pull/303\n* Add explain to concept search results by @frostyfan109 in https://github.com/helxplatform/dug/pull/301\n\n## New Contributors\n* @frostyfan109 made their first contribution in https://github.com/helxplatform/dug/pull/301\n\n**Full Changelog**: https://github.com/helxplatform/dug/compare/2.10.0...2.10.1",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.10.1",
        "name": "2.10.1",
        "release_id": 114696495,
        "tag": "2.10.1",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.10.1",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/114696495",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/114696495",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.10.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-07-19T15:59:31Z",
        "date_published": "2023-07-19T16:03:13Z",
        "description": "## What's Changed\n* Lib bump by @YaphetKG in https://github.com/helxplatform/dug/pull/273\n* Dev master sync by @YaphetKG in https://github.com/helxplatform/dug/pull/274\n* Async web api by @YaphetKG in https://github.com/helxplatform/dug/pull/276\n* Update docker-compose.yaml by @YaphetKG in https://github.com/helxplatform/dug/pull/280\n* Add generic dbGaP downloader by @gaurav in https://github.com/helxplatform/dug/pull/283\n* Feat/GitHub actions by @joshua-seals in https://github.com/helxplatform/dug/pull/284\n* Add BDC dbGaP IDs by @gaurav in https://github.com/helxplatform/dug/pull/285\n* Validation search by @YaphetKG in https://github.com/helxplatform/dug/pull/287\n* Fix BDC dbGaP CSV header by @gaurav in https://github.com/helxplatform/dug/pull/288\n* Add script to download all HEAL Platform MDS  by @gaurav in https://github.com/helxplatform/dug/pull/281\n* DUG-155 Consistently incorrect concept counts in some cases by @vladimir2217 in https://github.com/helxplatform/dug/pull/290\n* Fix merge conflicts with master  by @YaphetKG in https://github.com/helxplatform/dug/pull/291\n* Merge master by @YaphetKG in https://github.com/helxplatform/dug/pull/294\n* Master dev sync by @YaphetKG in https://github.com/helxplatform/dug/pull/296\n* Master back to dev by @YaphetKG in https://github.com/helxplatform/dug/pull/297\n\n## New Contributors\n* @gaurav made their first contribution in https://github.com/helxplatform/dug/pull/283\n* @joshua-seals made their first contribution in https://github.com/helxplatform/dug/pull/284\n* @vladimir2217 made their first contribution in https://github.com/helxplatform/dug/pull/290\n\n**Full Changelog**: https://github.com/helxplatform/dug/compare/v2.9.6...2.10.0",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.10.0",
        "name": "2.10.0",
        "release_id": 112839031,
        "tag": "2.10.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/112839031",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/112839031",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2023-04-27T15:39:40Z",
        "date_published": "2023-04-27T15:41:16Z",
        "description": "- Async Elasticsearch search api \r\n- search api flask to fastapi overhaul",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.9.8",
        "name": "Release v2.9.8",
        "release_id": 101144297,
        "tag": "v2.9.8",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.9.8",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/101144297",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/101144297",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.9.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2023-01-24T18:56:51Z",
        "date_published": "2023-01-26T18:04:19Z",
        "description": "Bumps libraries ",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.9.7",
        "name": "Release v2.9.7",
        "release_id": 90333854,
        "tag": "v2.9.7",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.9.7",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/90333854",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/90333854",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.9.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2022-12-19T21:47:23Z",
        "date_published": "2023-01-04T14:29:22Z",
        "description": "Release Notes:\r\n* Adds Bacpac Parser (Issue [DUG-113](https://renci.atlassian.net/browse/DUG-113)) in https://github.com/helxplatform/dug/pull/270\r\n* Implement auto versioning and add commit-msg hook by @Hoid in https://github.com/helxplatform/dug/pull/268\r\n* adding dug installer in makefile by @YaphetKG in https://github.com/helxplatform/dug/pull/271\r\n\r\n\r\n**Full Changelog**: https://github.com/helxplatform/dug/compare/2.7.0...v2.9.6",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.9.6",
        "name": "Release v2.9.6",
        "release_id": 87896874,
        "tag": "v2.9.6",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.9.6",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/87896874",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/87896874",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.9.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2022-12-19T16:29:38Z",
        "date_published": "2022-12-19T20:52:13Z",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.9.6dev",
        "name": "Dev 2.9.6dev",
        "release_id": 86582056,
        "tag": "v2.9.6dev",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.9.6dev",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/86582056",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/86582056",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.9.6dev"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2022-10-04T16:41:10Z",
        "date_published": "2022-10-04T17:06:07Z",
        "description": "Adds Heal Data SPRINT parser",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.9.5",
        "name": "v2.9.5",
        "release_id": 78972985,
        "tag": "v2.9.5",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.9.5",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/78972985",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/78972985",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.9.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2022-08-23T14:31:16Z",
        "date_published": "2022-08-25T14:29:22Z",
        "description": "\r\n\r\n## What's Changed\r\n* Release/2.9.4 by @YaphetKG in https://github.com/helxplatform/dug/pull/260\r\n\r\n  - Parser re-structuring to parse NCPI data. Parameterized parsers to label outputs as \r\n       - AnVIL\r\n       - Cancer Data Commons\r\n       - Kids First\r\n  - Jenkins pipeline overhaul for Kanico builds.\r\n\r\n**Full Changelog**: https://github.com/helxplatform/dug/compare/v2.9.3...v2.9.4",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.9.4",
        "name": "Release v2.9.4",
        "release_id": 75352466,
        "tag": "v2.9.4",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.9.4",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/75352466",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/75352466",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.9.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2022-07-12T13:04:07Z",
        "date_published": "2022-07-12T13:14:24Z",
        "description": "* Adds a new api to dug webserver to dump all elasticsearch data. \r\n   - Usage :\r\n      ```\r\n       curl -X POST http://localhost/search-api/dump_concepts -H 'Content-Type: application/json' -d '{\"index\": \"concepts_index\"}'\r\n      ```\r\n      \"concepts_index\", \"variables_index\" and \"kg_index\" are all valid. \r\n* NCPI datasets split up into subcategories :\r\n     - AnVIL \r\n     - KFDRC\r\n     -  CDRC",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.9.3",
        "name": "Release 2.9.3",
        "release_id": 71801108,
        "tag": "v2.9.3",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.9.3",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/71801108",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/71801108",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.9.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2022-05-05T14:20:54Z",
        "date_published": "2022-05-05T15:31:58Z",
        "description": "- Anvil dataset and Anvil parser addition",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.9.2",
        "name": "Release 2.9.2",
        "release_id": 66130733,
        "tag": "v2.9.2",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/66130733",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/66130733",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2022-04-18T18:31:45Z",
        "date_published": "2022-05-05T15:31:19Z",
        "description": "Elastic scores on dug search API",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.9.1",
        "name": "Release 2.9.1",
        "release_id": 66130666,
        "tag": "v2.9.1",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/66130666",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/66130666",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2022-03-29T14:19:50Z",
        "date_published": "2022-03-29T14:40:29Z",
        "description": "Adds Elastic Scores to search endpoint",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.9.0",
        "name": "Release 2.9.0",
        "release_id": 63045191,
        "tag": "v2.9.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/63045191",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/63045191",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2022-02-08T20:12:27Z",
        "date_published": "2022-02-08T20:22:12Z",
        "description": "Changes:\r\n- Support for extracting dug elements from tranql graph queries. ",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/v2.8.0",
        "name": "Release 2.8.0",
        "release_id": 59052143,
        "tag": "v2.8.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/v2.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/59052143",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/59052143",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/v2.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2021-10-18T16:24:34Z",
        "date_published": "2021-10-18T16:27:03Z",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.6.0",
        "name": "Release 2.6.0",
        "release_id": 51554672,
        "tag": "2.6.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/51554672",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/51554672",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaphetKG",
          "type": "User"
        },
        "date_created": "2021-09-09T13:47:03Z",
        "date_published": "2021-09-09T13:54:20Z",
        "description": "Adds Biolink Chemical types:\r\n - Small molecule\r\n - Chemical Entity\r\n - Chemical mixture",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.5.0",
        "name": "Release 2.5.0",
        "release_id": 49279616,
        "tag": "2.5.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/49279616",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/49279616",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cschreep",
          "type": "User"
        },
        "date_created": "2021-08-19T14:17:42Z",
        "date_published": "2021-08-19T14:20:08Z",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.4.0",
        "name": "Release 2.4.0",
        "release_id": 48118650,
        "tag": "2.4.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/48118650",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/48118650",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cschreep",
          "type": "User"
        },
        "date_created": "2021-07-12T14:59:32Z",
        "date_published": "2021-07-12T15:03:27Z",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.3.0",
        "name": "Release 2.3.0",
        "release_id": 46063723,
        "tag": "2.3.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/46063723",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/46063723",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cschreep",
          "type": "User"
        },
        "date_created": "2021-06-10T15:26:04Z",
        "date_published": "2021-06-10T15:29:48Z",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.2.0",
        "name": "Release 2.2.0",
        "release_id": 44423634,
        "tag": "2.2.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/44423634",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/44423634",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cschreep",
          "type": "User"
        },
        "date_created": "2021-05-17T12:46:17Z",
        "date_published": "2021-05-17T12:47:21Z",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/release-2.1.0",
        "name": "Release 2.1.0",
        "release_id": 43055050,
        "tag": "release-2.1.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/release-2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/43055050",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/43055050",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/release-2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cschreep",
          "type": "User"
        },
        "date_created": "2021-04-15T20:28:40Z",
        "date_published": "2021-04-15T20:51:49Z",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.0.1",
        "name": "v2.0.1",
        "release_id": 41507745,
        "tag": "2.0.1",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/41507745",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/41507745",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cschreep",
          "type": "User"
        },
        "date_created": "2021-04-15T19:45:26Z",
        "date_published": "2021-04-15T20:50:27Z",
        "html_url": "https://github.com/helxplatform/dug/releases/tag/2.0.0",
        "name": "v2.0.0",
        "release_id": 41507678,
        "tag": "2.0.0",
        "tarball_url": "https://api.github.com/repos/helxplatform/dug/tarball/2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/helxplatform/dug/releases/41507678",
        "value": "https://api.github.com/repos/helxplatform/dug/releases/41507678",
        "zipball_url": "https://api.github.com/repos/helxplatform/dug/zipball/2.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:15:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 32
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Documents and Query Behavior",
        "parent_header": [
          "Dug: digging up dark data",
          "Elasticsearch Logic"
        ],
        "type": "Text_excerpt",
        "value": "Two toy examples of indexed documents, `blood_color` and `blood_shape`, are shown below to demonstrate query behavior.\n\n![image](https://user-images.githubusercontent.com/63300314/85741468-7627e400-b6d0-11ea-849c-7b6da8b630b3.png)\n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Query",
        "parent_header": [
          "Dug: digging up dark data",
          "Elasticsearch Logic",
          "Example Documents and Query Behavior"
        ],
        "type": "Text_excerpt",
        "value": "The query searches the fields in all indexed documents to return a matching subset of documents.\n\n```\nquery = {\n            'query_string': {\n                'query' : query,\n                'fuzziness' : fuzziness,\n                'fields': ['name', 'description', 'instructions', 'nodes.name', 'nodes.synonyms'],\n                'quote_field_suffix': \".exact\"\n            }\n        }\n````\n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tests",
        "parent_header": [
          "Dug: digging up dark data",
          "Elasticsearch Logic",
          "Example Documents and Query Behavior"
        ],
        "type": "Text_excerpt",
        "value": "| Query|Behavior|\n| :--- |  :---- |\n| **blood** | This returns both documents (`blood_color` and `blood_shape`). |\n| **blood AND magenta**  | This returns only `blood_color`. |\n| **magenta AND cerulean** | This returns `blood_color` even though this might be unexpected.  The words 'magenta' and 'cerulean' appear in the same document in the searched fields, even though they appear in different fields, so the document is still returned. |\n| **blue AND square** | No documents are returned. |\n| **blue and square** | This returns both documents because the 'and' term is treated as just another term instead of an operator because it is not capitalized.  The actual search resolves to **blue OR and OR square** |\n| **\"round blood\"** | No documents are returned. |\n| **\"blood, round\"** | This returns `blood_shape`|\n| **\"blood round\"** | The document `blood_shape` is returned - the standard analyzer performs tokenization based on grammar separators, including commas in this case. |\n\n"
      },
      "source": "https://raw.githubusercontent.com/helxplatform/dug/develop/README.md",
      "technique": "header_analysis"
    }
  ]
}