{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "ASHIC"
        ],
        "type": "Text_excerpt",
        "value": "Ye, T., & Ma, W. (2020). ASHIC: hierarchical Bayesian modeling of diploid chromatin contacts and structures. *Nucleic acids research*, 48(21), e123-e123. DOI: https://doi.org/10.1093/nar/gkaa872\n"
      },
      "source": "https://raw.githubusercontent.com/wmalab/ASHIC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wmalab/ASHIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-06T03:05:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-18T02:03:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Allele-specific modeling of diploid Hi-C data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9885314974568754,
      "result": {
        "original_header": "ASHIC",
        "type": "Text_excerpt",
        "value": "Allele-specific modeling of diploid Hi-C data\n \n"
      },
      "source": "https://raw.githubusercontent.com/wmalab/ASHIC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.954557669479511,
      "result": {
        "original_header": "Generate input data from mapped read pairs",
        "type": "Text_excerpt",
        "value": "We use the mapped read pairs file from Bonora et al. (2018) ([GSM2863686](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM2863686)) as an example to show the steps to generate ASHIC input data. \nThe mapped read pairs file should be tab-delimited text format and contains at least the following columns: \n- chromosome of 1st read end\n- genomic coordinate of 1st read end\n- allele of 1st read end\n- chromosome of 2nd read end\n- genomic coordinate of 2nd read end\n- allele of 2nd read end \nThe *allele* of each read end should be some tag representing maternal-specific, paternal-specific, and allele-ambiguous reads.\nIn the case of the example, we use 'ref' for maternal-specific reads, 'alt' for paternal-specific reads, and 'both-ref' for allele-ambiguous reads.  \nFirst, we split the read pairs into allele-certain and allele-ambiguous read pairs per chromosome using `ashic-data split2chrs` command. \nReplace `<FILENAME>` with the read pairs file name, and `<OUTPUT>` with the destination directory to store split allele-certain and allele-ambiguous read pairs per chromosome.\nUse `<PREFIX>` to specify the prefix of the output files. \nIf you use input file format different from Bonora et al. (2018), you need to specify the *allele* tags used, and the index (1-based) of each column as listed before. Please refer to the following detailed explanation of options to do so. The default option values are for Bonora et al. (2018) data. \n```\n> ashic-data split2chrs -h\n\nUsage: ashic-data split2chrs [OPTIONS] FILENAME OUTPUTDIR\n\n  Split contacts into intra-chromosomal allele-certain and allele-ambiguous contacts.\n\n  The input file will be split into the followings:\n  Allele-certain contacts:\n          <FILENAME>_<CHR>_<MAT>_<MAT>\n          <FILENAME>_<CHR>_<PAT>_<PAT>\n          <FILENAME>_<CHR>_<MAT>_<PAT>\n  Allele-ambiguous contacts:\n          <FILENAME>_<CHR>_<MAT>_<AMB>\n          <FILENAME>_<CHR>_<PAT>_<AMB>\n          <FILENAME>_<CHR>_<AMB>_<AMB>\n\nOptions:\n  --prefix TEXT      Prefix of the output files. If not provided, the input\n                     filename will be used.\n  --mat TEXT         Allele flag of maternal-specific reads.  [default: ref]\n  --pat TEXT         Allele flag of paternal-specific reads.  [default: alt]\n  --amb TEXT         Allele flag of allele-ambiguous reads.  [default: both-ref]\n  --chr1 INTEGER     Column index (1-based) of chromosome of the 1st end.\n                     [default: 3]\n  --allele1 INTEGER  Column index (1-based) of allele of the 1st end.\n                     [default: 5]\n  --chr2 INTEGER     Column index (1-based) of chromosome of the 2nd end.\n                     [default: 8]\n  --allele2 INTEGER  Column index (1-based) of allele of the 2nd end.\n                     [default: 10]\n  -h, --help         Show this message and exit.\n```\nThen, bin the split read pairs files of a chromosome into contact matrices at chosen resolution.\n```\nashic-data binning --res=<RES> --chrom=<CHROM> <PREFIX> <OUTPUT>\n```\n \nReplace `<RES>` with the resolution in base pair, `<CHROM>` with chosen chromosome, `<OUTPUT>` with the destination directory to store binned '.npy' matrix files. `<PREFIX>` is the common prefix of the split read pairs files with *directory* included, e.g. `<PREFIX>_chrX_ref_ref` is the file containing both-end maternal-specific read pairs on chrX. \nIf you use input file format different from Bonora et al. (2018), you need to specify the *allele* tags used, and the index (1-based) of each column as listed before. If the reads were mapped use reference genome other than 'mm10', a two-column tab-delimited text file ('.chrom.sizes') containing each chromosome name and size in base pair should be provided.\nPlease refer to the following detailed explanation of options to do so. The default option values are for Bonora et al. (2018) data.\n```\n> ashic-data binning -h\n\nUsage: ashic-data binning [OPTIONS] PREFIX OUTPUTDIR\n\n  Bin the mapped read pairs of chromosome <CHROM> into contact matrices.\n\n  The input files containing allele-certain and allele-ambiguous read pairs\n  should have name in format of <PREFIX>_<CHROM>_<MAT>_<MAT> and etc. PREFIX\n  need to include the PATH to the files as well.\n\nOptions:\n  --res INTEGER    Resolution in base pair of the binned contact matrices.\n                   [default: 100000]\n  --chrom TEXT     Chromosome to generate the binned contact matrices.\n                   [required]\n  --genome TEXT    Genome reference. Built-in supports 'mm10'. Other genome\n                   can be supported by providing a '**.chrom.sizes' file.\n                   [default: mm10]\n  --start INTEGER  If provided, instead of binning the whole chromosome, only\n                   region after <start> (inclusive) will be binned.\n  --end INTEGER    If provided, instead of binning the whole chromosome, only\n                   region before <end> (inclusive) will be binned.\n  --mat TEXT       Allele flag of maternal-specific reads.  [default: ref]\n  --pat TEXT       Allele flag of paternal-specific reads.  [default: alt]\n  --amb TEXT       Allele flag of allele-ambiguous reads.  [default: both-ref]\n  --c1 INTEGER     Column index (1-based) of chromosome of the 1st end.\n                   [default: 3]\n  --p1 INTEGER     Column index (1-based) of coordinate of the 1st end.\n                   [default: 4]\n  --a1 INTEGER     Column index (1-based) of allele of the 1st end.  \n                   [default: 5]\n  --c2 INTEGER     Column index (1-based) of chromosome of the 2nd end.\n                   [default: 8]\n  --p2 INTEGER     Column index (1-based) of coordinate of the 2nd end.\n                   [default: 9]\n  --a2 INTEGER     Column index (1-based) of allele of the 2nd end.  \n                   [default: 10]\n  -h, --help       Show this message and exit.\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/wmalab/ASHIC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9369146179386086,
      "result": {
        "original_header": "Generate binned matrices from HiC-Pro *validPairs* files",
        "type": "Text_excerpt",
        "value": "Another approach to generate mapped allele specific read pairs from raw FASTQ files is to run [HiC-Pro](https://github.com/nservant/HiC-Pro) with [allele specific mode](https://nservant.github.io/HiC-Pro/AS.html).\nIt will generate *validPairs* files which contain one additional column with the allele assignment of each read pair. \nWe will generate the binned matrices from HiC-Pro *validPairs* files using the `ashic-data bin-hicpro` command: \n```\nashic-data bin-hicpro <VALIDPAIRS> <OUTPUT> --res=<RES> --region=<REGION> --genome=<CHROM.SIZES>\n```\n \nAnd three required options:\n- `--res=<RES>`: resolution of binned matrices in base-pair\n- `--region=<REGION>`: chromosomes(s) or region(s) to generate the binned matrices e.g. `chr1` or `chr1:1000000-5000000`, if multiple regions, separate each region with comma `,`\n- `--genome=<CHROM.SIZES>`: path to the `chrom.sizes` file that specify the chromosome lengths for a given genome \nThe default values for other options are consistent with HiC-Pro *validPairs* file format.\nPlease refer to the full description of each option below: \n```\n> ashic-data bin-hicpro -h\nUsage: ashic-data bin-hicpro [OPTIONS] FILENAME OUTPUT\n\nOptions:\n  --prefix TEXT  .npy files prefix. If not provide, use <filename>.\n  --res INTEGER  Resolution in base pair of the binned contact matrices.\n                 [required]\n  --region TEXT  Chromosome(s) or region(s) to generate the binned contact\n                 matrices.  [required]\n  --genome PATH  Genome reference (.chrom.sizes) file.\n  --mat TEXT     Allele flag of maternal-specific reads.  [default: 1]\n  --pat TEXT     Allele flag of paternal-specific reads.  [default: 2]\n  --amb TEXT     Allele flag of allele-ambiguous reads.  [default: 0]\n  --c1 INTEGER   Column index (1-based) of chromosome of the 1st end.\n                 [default: 2]\n  --p1 INTEGER   Column index (1-based) of coordinate of the 1st end.\n                 [default: 3]\n  --a1 INTEGER   Column index (1-based) of allele of the 1st end.  \n                 [default: 13]\n  --c2 INTEGER   Column index (1-based) of chromosome of the 2nd end.\n                 [default: 5]\n  --p2 INTEGER   Column index (1-based) of coordinate of the 2nd end.\n                 [default: 6]\n  --a2 INTEGER   Column index (1-based) of allele of the 2nd end.  \n                 [default: 13]\n  --sep TEXT     Delimiter string to separate allele flags of 1st and 2nd ends\n                 if they are in the same column.  [default: -]\n  -h, --help     Show this message and exit.\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/wmalab/ASHIC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9976032681660941,
      "result": {
        "original_header": "Pack binned matrices into ASHIC input data",
        "type": "Text_excerpt",
        "value": "Finally, we pack the binned matrices into pickle data with some essential parameters (length of chromosome, distance decay exponent, etc.) and filter low mappability loci.\nThe output pickle data can be used as input for ASHIC.\n```\nashic-data pack --perc=<PERC> <INPUT> <OUTPUT>\n```\nReplace `<INPUT>` with the *directory* containing the binned '.npy' matrix files of a chromosome, and `<OUTPUT>` with the destination directory to store the pickle data. \nUse `<PERC>` to specify the percentage of rows or columns have the lowest contacts to filter out.\nSpecify the *allele* tags if different from the example.\n```\n> ashic-data pack -h\n\nUsage: ashic-data pack [OPTIONS] DATADIR OUTPUTDIR\n\n  Pack allele-certain and allele-ambiguous binned matrices in DATADIR into\n  ASHIC input format. Filter and mask loci with low mappability in allele-\n  certain intra-chromosomal contact matrices.\n\n  DATADIR should contain .npy format matrices files with names in format of\n\n  *_<MAT>_<MAT>_*.npy,\n  *_<MAT>_<PAT>_*.npy,\n  *_<PAT>_<PAT>_*.npy,\n  *_<MAT>_<AMB>_*.npy,\n  *_<PAT>_<AMB>_*.npy,\n  *_<AMB>_<AMB>_*.npy\n\nOptions:\n  --diag INTEGER  Number of diagonals ignored in the contact matrix.\n                  [default: 1]\n  --perc FLOAT    Percentage (%) of rows/columns that interact the least to\n                  filter out. Range from 0 to 100.  [default: 2]\n  --mat TEXT      Allele flag of maternal-specific reads.  [default: ref]\n  --pat TEXT      Allele flag of paternal-specific reads.  [default: alt]\n  --amb TEXT      Allele flag of allele-ambiguous reads.  [default: both-ref]\n  -h, --help      Show this message and exit.\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/wmalab/ASHIC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wmalab/ASHIC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wmalab/ASHIC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wmalab/ASHIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ASHIC"
      },
      "source": "https://raw.githubusercontent.com/wmalab/ASHIC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ASHIC"
        ],
        "type": "Text_excerpt",
        "value": "Create a conda env with `ASHIC` installed:\n\n```bash\nconda env create -f environment.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/wmalab/ASHIC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8061102822053996,
      "result": {
        "original_header": "Generate binned matrices from HiC-Pro *validPairs* files",
        "type": "Text_excerpt",
        "value": "`ashic-data bin-hicpro` has two arguments: \n- `<VALIDPAIRS>`: path to the HiC-Pro *validPairs* file \n- `<OUTPUT>`: output directory to store binned matrices \n"
      },
      "source": "https://raw.githubusercontent.com/wmalab/ASHIC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wmalab/ASHIC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Wenxiu Ma Lab @ UCR\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/wmalab/ASHIC/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ASHIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "wmalab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 272522,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wmalab/ASHIC/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:00:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "ASHIC"
        ],
        "type": "Text_excerpt",
        "value": "```\n> ashic -h\n\nUsage: ashic [OPTIONS]\n\n  ASHIC: Hierarchical Bayesian modeling of diploid chromatin contacts and structures.\n"
      },
      "source": "https://raw.githubusercontent.com/wmalab/ASHIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "ASHIC",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "  Refer to README.md for <INPUT> format detail and how to generate with command `ashic-data`.\n\nOptions:\n  -i, --inputfile PATH           Input file name.  [required]\n  -o, --outputdir PATH           Directory to save output files.  [required]\n  --model [ASHIC-ZIPM|ASHIC-PM]  Choose between the Poisson-multinomial\n                                 (ASHIC-PM) or the zero-inflated Poisson-\n                                 multinomial (ASHIC-ZIPM) model.  [default:\n                                 ASHIC-ZIPM]\n  --diag INTEGER                 Number of diagonals ignored in the contact\n                                 matrix.  [default: 1]\n  --max-iter INTEGER             Maximum iterations allowed for EM algorithm.\n                                 [default: 30]\n  --tol FLOAT                    Minimum relative difference between the last\n                                 two iterations when EM algorithm converges.\n                                 [default: 0.0001]\n  --seed INTEGER                 Seed of the random number generator\n                                 initializing structures and gamma values.\n                                 [default: 0]\n  --gamma-share INTEGER          Number of diagonals from the last share the\n                                 same gamma value. If not provided, each\n                                 diagonal will use different gamma value.\n  --init-x TEXT                  Method to initialize structure: 'random',\n                                 'MDS' or a TEXT file containing precomputed\n                                 structure.  [default: MDS]\n  --max-func INTEGER             Maximum iterations allowed for each structure\n                                 optimization by L-BFGS-B.  [default: 200]\n  --separate / --no-separate     Whether or not optimize each structure\n                                 separately then combine.  [default: True]\n  --normalize                    Incorporate ICE bias into model.  [default:\n                                 False]\n  --save-iter / --no-save-iter   Whether or not save model file from each\n                                 iteration.  [default: False]\n  -h, --help                     Show this message and exit.\n```\n\n### Example\n\nSample data can be found at `examples/sample_data/GSM2863686_chrX_1000000.pickle`. The data file can be generated with `ashic-data` command.\n\nRun `ASHIC-ZIPM` model on the example data:\n```bash\nashic -i examples/sample_data/GSM2863686_chrX_1000000.pickle -o output --model ASHIC-ZIPM\n```\n\nRun `ASHIC-PM` model on the example data:\n```bash\nashic -i examples/sample_data/GSM2863686_chrX_1000000.pickle -o output --model ASHIC-PM\n```\n\nThe `output` directory includes:\n\n- model.json: ASHIC-ZIPM/ASHIC-PM model saved in JSON format\n- structure_3d.html: interactive view of predicted 3D structure\n- progress.txt: saved log-likelihood for each iteration\n- log.json: log information about convergence\n- matrices:\n  - t_mm.txt (maternal), t_mp.txt (inter-homologous), t_pp.txt (paternal): diploid contact matrices in text format (shape: n * n)\n  - structure.txt: predicted 3D structure in text format (shape: n * 3)\n"
      },
      "source": "https://raw.githubusercontent.com/wmalab/ASHIC/master/README.md",
      "technique": "header_analysis"
    }
  ]
}