{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "type": "Text_excerpt",
        "value": "Li Liu, Pramod Chandrashekar, Biao Zeng, Maxwell D. Sanderford, Sudhir Kumar, Greg Gibson (2020) TreeMap: A Structured Approach to Fine Mapping of eQTL Variants. Bioinformatics 37(8):1125-1134 https://doi.org/10.1093/bioinformatics/btaa927 \n"
      },
      "source": "https://raw.githubusercontent.com/liliulab/treemap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/liliulab/treemap"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributors",
        "type": "Text_excerpt",
        "value": "Li Liu developed the algorithm of TreeMap. Pramod Chandrashekar implemented tree-guided group lasso in R based on matlab codes from the SLEP package. Please contact liliu at asu.edu for any questions or suggestions.\n"
      },
      "source": "https://raw.githubusercontent.com/liliulab/treemap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-11T04:31:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-07T22:40:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TreeMap: A Structured Approach to Fine Mapping of eQTL Variants"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9349721657977138,
      "result": {
        "original_header": "TreeMap - A Structured Approach to Fine Mapping of eQTL Variants",
        "type": "Text_excerpt",
        "value": "TreeMap prioritizes putative causal variants in cis-eQTL accounting for multisite effects and genetic linkage at a locus.  \nIt takes a 3-layer nested design to remove uninformative variants and reduce redundancies among informative variants progressively.  At the outer layer, tree-guided penalized regression selects groups of variants in LD or individual variants associated with transcriptional changes. At the middle layer, stepwise conditional analysis iterates combinations of variants within each LD block to identify a block-specific optimal solution. At the inner layer, variants selected from the previous layers are aggregated and passed through a Bayesian multivariate analysis to derive a global optimal solution.  \nTreeMap supports parallel processing in cluster environment.\n \n"
      },
      "source": "https://raw.githubusercontent.com/liliulab/treemap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/liliulab/treemap/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/liliulab/treemap/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "liliulab/treemap"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/liliulab/treemap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "type": "Text_excerpt",
        "value": "````\n devtools::install_github('liliulab/treemap')\n````\n"
      },
      "source": "https://raw.githubusercontent.com/liliulab/treemap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/liliulab/treemap/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "treemap"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "liliulab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 89037,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/liliulab/treemap/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "````\nRtools is required for Windows systems. It can be installed by following instructions on https://cran.r-project.org/bin/windows/Rtools/\n\nOther packages that need to be installed include stringr, tictoc, parallel, MASS, BayesFactor, igraph, intervals, DMwR, and TreeGuidedLasso. \nIn case auto-installation does not work, you can install these packages manually.\n install.packages(c('stringr', 'tictoc', 'parallel', 'MASS', 'BayesFactor', 'igraph', 'intervals')\n remotes::install_github(\"cran/DMwR\")\n devtools::install_github('liliulab/treemap')\n````\n"
      },
      "source": "https://raw.githubusercontent.com/liliulab/treemap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:30:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "```` \nlibrary(treemap)\n\n# perform treemap analysis. \n# A sample input file \"SMNT.exp_geno.txt\" is available in the \"examples\" folder. \ntreemap(input.folder='examples/', pattern='.exp_geno.txt', output.folder='examples/output/', steps=1:9, mc.cores=1) \n\n# perform treemap analysis with functional weighting. \n# set weighted='func'.\n# A sample annotation file \"SMNT.anno.txt\" is available in the \"examples\" folder. \ntreemap(input.folder='examples/', pattern='.exp_geno.txt', output.folder='examples/output/', steps=1:9, mc.cores=1, weighted='func')\n\n# Compare the output file \"SMNT.treemap.out\" from the above command with the \"examples/SMNT.treemap.out\" file in the \"examples/\" folder. \n# Note that only variants passing the p-value<0.0001 threshold are included in the \".treemap.out\" file. If this file is missing, users can examine other files, e.g., \".comb.out\" for intermediate results.\n# Several intermediates files are produced that can be reused during re-analysis to save time. \n# For re-analysis, users can specify \"steps\" to execute outer-, middle- or inner-layer functions. \n# Additional usages can be found via using \"?treemap\" after installing the R treemap package.\n \n# perform simple stepwise conditional analysis. \nconditional(input.folder='examples/', pattern='.simulated.txt', output.folder='examples/output/', mc.cores=1)\n# Compare the output file \"SMNT.cond.out\" from the above command with the \"examples/SMNT.cond.out\" file in the \"examples/\" folder.  \n# This function is provided in case users prefer simple stepwise conditional analysis for fine mapping. \n# Additional usages can be found via using \"?conditional\" after installing the R treemap package.\n\n````\n\nThe input file is a tab-delimited text file. The first line has column headers with no specific restrictions. The remaining lines have sample ID in the 1st column, gene expression value in the 2nd column, and genotype data in the other columns. Genotypes values are coded as 0/1/2 for homozygous reference, heterozygous and homozygous alternative, respectively. Each row has data from one individual. A sample input file \"SMNT.simulated.txt\" is available in the \"examples/\" folder. Below is a brief example.<br>\nind_id\tILphe\tv1\tv2\tv3<br>\nHG00096\t4.03\t0\t2\t0<br>\nHG00097\t-1.24\t0\t2\t0<br>\nHG00099\t0.60\t0\t1\t0<br>\n\nThe optional annotation file is a tab-delimited text file. The first line has column headers with no specific restrictions. The remaining lines have variant IDs in the 1st column and functional scores in the 2nd column. Variants with high functional scores have increased chance of being selected as causal. A sample input file \"SMNT.simulated.txt\" is available in the \"examples/\" folder. Below is a brief example.<br>\n"
      },
      "source": "https://raw.githubusercontent.com/liliulab/treemap/master/README.md",
      "technique": "header_analysis"
    }
  ]
}