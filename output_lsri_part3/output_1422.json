{
  "application_domain": [
    {
      "confidence": 15.33,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/almaan/sepal"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-22T09:15:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-03T14:34:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sepal : Spatial Expression PAttern Locator"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9902342618755765,
      "result": {
        "original_header": "sepal : Identifying Transcription Profiles with Spatial Patterns by Diffusion-based Modeling",
        "type": "Text_excerpt",
        "value": "\nThis repo contains:\n* the sepal python package, and installation files\n* tutorials and examples of usage (CLI and as a imported package)\n* data used in the publication\n* results presented in the publication \n"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9765690591927103,
      "result": {
        "original_header": "Supported Files and Format",
        "type": "Text_excerpt",
        "value": "The input to `sepal` is required to be in the format `n_locations x n_genes`,\nhowever if your data is structured in the opposite way (`n_genes x n_locations`)\nsimply provide the `--transpose` flag when running either the simulation or\nanalysis and this will be taken care of.  \nWe currently support `.csv`,`.tsv` and `.h5ad` formats. For the latter, your file should be structured\naccording to [THIS](https://github.com/almaan/space2h5ad/) format. We expect that there will be a release from the \n`scanpy` team in the near future, where a standardized format for spatial data is presented, but until then we will be\nusing the aforementioned standard. \n"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9518106794063439,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "All real data we used is public, and can be found accessed at the following links: \n"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9580816746818209,
      "result": {
        "original_header": "Results",
        "type": "Text_excerpt",
        "value": "All the results presented in the study can be found in the `res` folder, both for \nthe real and synthetic data. For each sample we have structured the results accordingly:\n* `res/`\n    * `sample-name/`\n        * `X-diffusion-times.tsv` : diffusion times for all ranked genes\n        * `analysis/` : contains output of secondary analysis\n \n"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and Install",
        "parent_header": [
          "sepal : Identifying Transcription Profiles with Spatial Patterns by Diffusion-based Modeling"
        ],
        "type": "Text_excerpt",
        "value": "`sepal` requires `python3`, preferably a version later than or equal to 3.5. To\ndownload and install, open the terminal and change to a directory where you want\n`sepal` to be downloaded to and do:\n\n```sh\n\ngit clone https://github.com/almaan/sepal.git\ncd sepal\nchmod +x setup.py\n./setup.py install\n\n```\nDepending on your user privileges, you may have to add `--user`  as an argument to `setup.py`.\nRunning the setup will give you the minimal required install to compute the diffusion times. However,\nif you want to be able to use the analysis modules, you also need to install the recommended packages.\nTo do this, simply (in the same directory) run:\n\n```sh\npip install -e \".[full]\"\n```\nagain, the `--user` could be necessary to include. Also, you may have to use `pip3` if this is the way you've set up your `python-pip` interface. If your using `conda` or virtual environments, follow their recommendations for installation of packages.\n\nThis should install both a command line interface (CLI) and a standard package.\nTo test and see whether the installation was successful you could try executing the command:\n\n```sh\nsepal -h\n\n```\nWhich should print the help message associated with sepal. If everything worked out for you so far,\nyou may proceed to the example section to see `sepal` in action!\n"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/almaan/sepal/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/almaan/sepal/master/examples/melanoma.ipynb"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/examples/melanoma.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/almaan/sepal/master/examples/.ipynb_checkpoints/melanoma-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/examples/.ipynb_checkpoints/melanoma-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/almaan/sepal/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "almaan/sepal"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sepal : Identifying Transcription Profiles with Spatial Patterns by Diffusion-based Modeling"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.4573237"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/almaan/sepal/master/img/run-example.gif?raw=true"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/almaan/sepal/master/img/analyze-ex.gif?raw=true"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/almaan/sepal/master/img/mob-ex.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/almaan/sepal/master/img/mob-motif.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and Install",
        "parent_header": [
          "sepal : Identifying Transcription Profiles with Spatial Patterns by Diffusion-based Modeling"
        ],
        "type": "Text_excerpt",
        "value": "`sepal` requires `python3`, preferably a version later than or equal to 3.5. To\ndownload and install, open the terminal and change to a directory where you want\n`sepal` to be downloaded to and do:\n\n```sh\n\ngit clone https://github.com/almaan/sepal.git\ncd sepal\nchmod +x setup.py\n./setup.py install\n\n```\nDepending on your user privileges, you may have to add `--user`  as an argument to `setup.py`.\nRunning the setup will give you the minimal required install to compute the diffusion times. However,\nif you want to be able to use the analysis modules, you also need to install the recommended packages.\nTo do this, simply (in the same directory) run:\n\n```sh\npip install -e \".[full]\"\n```\nagain, the `--user` could be necessary to include. Also, you may have to use `pip3` if this is the way you've set up your `python-pip` interface. If your using `conda` or virtual environments, follow their recommendations for installation of packages.\n\nThis should install both a command line interface (CLI) and a standard package.\nTo test and see whether the installation was successful you could try executing the command:\n\n```sh\nsepal -h\n\n```\nWhich should print the help message associated with sepal. If everything worked out for you so far,\nyou may proceed to the example section to see `sepal` in action!\n"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999647429911135,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "\n[1]: https://www.spatialresearch.org/resources-published-datasets/doi-10-1126science-aaf2403/\n[2]: https://support.10xgenomics.com/spatial-gene-expression/datasets/1.0.0/V1_Adult_Mouse_Brain\n[3]: https://support.10xgenomics.com/spatial-gene-expression/datasets/1.0.0/V1_Human_Lymph_Node\n[4]: https://www.spatialresearch.org/resources-published-datasets/doi-10-1158-0008-5472-can-18-0747\n[5]: https://singlecell.broadinstitute.org/single_cell/data/public/SCP354/slide-seq-study\n \n"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/almaan/sepal/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright 2021 Alma Andersson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sepal"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "almaan"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 115514,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 2679,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/almaan/sepal/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "almaan",
          "type": "User"
        },
        "date_created": "2021-02-26T10:31:06Z",
        "date_published": "2021-03-02T13:22:06Z",
        "description": "First release in conjunction with manuscript being accepted in Oxford Academics Bioinformatics journal.",
        "html_url": "https://github.com/almaan/sepal/releases/tag/v1.0.0",
        "name": "First release",
        "release_id": 39116790,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/almaan/sepal/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/almaan/sepal/releases/39116790",
        "value": "https://api.github.com/repos/almaan/sepal/releases/39116790",
        "zipball_url": "https://api.github.com/repos/almaan/sepal/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:56:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "CLI",
        "parent_header": [
          "sepal : Identifying Transcription Profiles with Spatial Patterns by Diffusion-based Modeling",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "The recommended usage of sepal is by \nthe command line interface. Both the simulations\nin order to compute the diffusion times as well\nas subsequent analysis or inspection of the results\ncan easily be performed by typing `sepal` followed by \neither `run` or `analyze`. The `analyze` module has different\noptions, to visualize the results (`inspect`),\nsort the profiles into pattern families (`family`) or subject \nthe identified families to functional enrichment analysis (`fea`). For a \ncomplete list of commands available, do  `sepal module -h`, where module\nis one of `run` and `analyze`. Below, we illustrate\nhow sepal may be used to find transcription profiles with spatial patterns.\n\nWe will create a folder to hold our results, which will also figure\nas our working directory. From the main directory of the repo, do:\n```sh\ncd res\nmkdir example\ncd example\n```\n\nThe MOB sample will be used to exemplify our analysis. We begin\nwith calculating diffusion times for each transcription profile:\n\n```sh\nsepal run -c ../../data/real/mob.tsv.gz -mo 10 -mc 5 -o . -ar 1\n```\nBelow is an example (with an additional display of the help command)\nof how this might look\n\n![CLI run example][run_ex]\n\nHaving computed the diffusion times, we want to inspect the result, like\nin the study, we will look at the top 20 profiles. We can easily generate\nimages from our result by running the command:\n```sh\n sepal analyze -c ../../data/real/mob.tsv.gz \\\n-r 20200409173043610345-top-diffusion-times.tsv \\\n-ar 1k -o . inspect -ng 20 -nc 5\n```\nWhich would look something in the line of this:\n\n![CLI analyze example][anl_ex]\n\nThe output wil be the following image:\n\n![Analysis output][viz_ex]\n\nThen, to sort the 100 top ranked genes into\na set of pattern families, where 85% of the variance in our patterns\nshould be explained by the eigenpatterns, do:\n\n```sh\nsepal analyze -c ../../data/real/mob.tsv.gz \\\n-r 20200409173043610345-top-diffusion-times.tsv \\\n-ar 1k -o . family -ng 100 -nbg 100 -eps 0.85 --plot -nc 3\n```\n\nFrom this, we obtain the following three \nrepresentative motifs for each family:\n\n![Representative motifs][mob-motif]\n\n\n[anl_ex]: https://github.com/almaan/sepal/blob/master/img/analyze-ex.gif?raw=true\n[run_ex]: https://github.com/almaan/sepal/blob/master/img/run-example.gif?raw=true\n[viz_ex]: https://github.com/almaan/sepal/blob/master/img/mob-ex.png?raw=true\n[mob-motif]: https://github.com/almaan/sepal/blob/master/img/mob-motif.png?raw=true\n\nWe may subject our families to enrichment analysis, by running:\n\n```sh\nsepal analyze -c ../../data/real/mob.tsv.gz \\\n      -r 20200409173043610345-top-diffusion-times.tsv \\\n   -ar 1k -o . fea -fl mob.tsv-family-index.tsv -or \"mmusculus\"\n```\n\nwhere we for example see that Family 2 is enriched for several processes related to neuronal function, generation and regulation:\n\n|    |   family | native     | name                                          |     p_value | source   |   intersection_size |\n|---:|---------:|:-----------|:----------------------------------------------|------------:|:---------|--------------------:|\n|  2 |        2 | GO:0007399 | nervous system development                    | 0.00035977  | GO:BP    |                  26 |\n|  3 |        2 | GO:0050773 | regulation of dendrite development            | 0.000835883 | GO:BP    |                   8 |\n|  4 |        2 | GO:0048167 | regulation of synaptic plasticity             | 0.00196494  | GO:BP    |                   8 |\n|  5 |        2 | GO:0016358 | dendrite development                          | 0.00217167  | GO:BP    |                   9 |\n|  6 |        2 | GO:0048813 | dendrite morphogenesis                        | 0.00741589  | GO:BP    |                   7 |\n|  7 |        2 | GO:0048814 | regulation of dendrite morphogenesis          | 0.00800399  | GO:BP    |                   6 |\n|  8 |        2 | GO:0048666 | neuron development                            | 0.0114088   | GO:BP    |                  16 |\n|  9 |        2 | GO:0099004 | calmodulin dependent kinase signaling pathway | 0.0159572   | GO:BP    |                   3 |\n| 10 |        2 | GO:0050804 | modulation of chemical synaptic transmission  | 0.0341913   | GO:BP    |                  10 |\n| 11 |        2 | GO:0099177 | regulation of trans-synaptic signaling        | 0.0347783   | GO:BP    |                  10 |\n\nOf course, this analysis is by no means exhaustive. But rather an quick example to show how one operates the CLI for  `sepal` .\n"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "As imported package",
        "parent_header": [
          "sepal : Identifying Transcription Profiles with Spatial Patterns by Diffusion-based Modeling",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "While `sepal` has been designed as a standalone tool, we've also constructed it\nto be functional as a standard python package from which functions may be\nimported and used in an integrated workflow. To show how this may be done, we\nprovide an example, reproducing the melanoma analysis. More examples may be added later on.\n\n* Melanoma analysis  : [LINK](https://github.com/almaan/sepal/blob/master/examples/melanoma.ipynb)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/almaan/sepal/master/README.md",
      "technique": "header_analysis"
    }
  ]
}