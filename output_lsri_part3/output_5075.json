{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phglab/MIRUReader"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-10T06:58:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-14T11:32:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "In-silico MIRU-VNTR typing using long reads"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "MIRUReader"
        ],
        "type": "Text_excerpt",
        "value": "Identify 24-locus MIRU-VNTR for *Mycobacterium tuberculosis* complex (MTBC) directly from long reads generated by Oxford Nanopore Technologies (ONT) and Pacific Biosciences (PacBio). Also work on assembled genome.\n"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8980430629902906,
      "result": {
        "original_header": "Troubleshooting",
        "type": "Text_excerpt",
        "value": "1. If an error message `OSError: primersearch is not found.` appears, please ensure your `primersearch` executable file is in your environment path (`echo $PATH`) and can be called directly. \n \n"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phglab/MIRUReader/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQ",
        "parent_header": [
          "MIRUReader"
        ],
        "type": "Text_excerpt",
        "value": "1. **Why are there two MIRU allele calling tables (MIRU_table and MIRU_table_0580)?** \n\nMIRU loci 0580 (MIRU_table_0580) consist of a different numbering system for determination of repeat numbers as compared to the other 23 MIRU locus (MIRU_table) for MTBC isolates.  \n\n"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phglab/MIRUReader/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "phglab/MIRUReader"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MIRUReader"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "MIRUReader"
        ],
        "type": "Text_excerpt",
        "value": "`git clone https://github.com/phglab/MIRUReader.git`\n"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9027027810399224,
      "result": {
        "original_header": "04/07/2019",
        "type": "Text_excerpt",
        "value": "- Update output format for option '--details'.\n \n"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9984696538744253,
      "result": {
        "original_header": "Troubleshooting",
        "type": "Text_excerpt",
        "value": "1. If an error message `OSError: primersearch is not found.` appears, please ensure your `primersearch` executable file is in your environment path (`echo $PATH`) and can be called directly. \n \n"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phglab/MIRUReader/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 NUS pathogen genomics\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MIRUReader"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "phglab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 8811,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "MIRUReader"
        ],
        "type": "Text_excerpt",
        "value": "* Linux\n* primersearch from [EMBOSS](http://emboss.sourceforge.net/download/)\n   * install from the official website or\n   * install via conda `conda install -c bioconda emboss`\n   * Ensure the primersearch command is in your device's environment path, where primersearch program can be executed directly by typing `primersearch` on the commandline\n* [*pandas*](https://pandas.pydata.org/) \n   * can be installed via conda `conda install pandas` or via PyPI `pip install pandas`\n* [*statistics*](https://pypi.org/project/statistics/)\n   * can be installed via PyPI `pip install statistics`\n"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:42:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage example",
        "parent_header": [
          "MIRUReader"
        ],
        "type": "Text_excerpt",
        "value": "For one sample analysis:\n```\npython /your/path/to/MIRUReader.py -r sample.fasta -p sampleID > miru.txt\n```\n\nFor multiple samples analysis:\n1. Create a mapping file (mappingFile.txt) that looks like:\n\n    sample_001.fasta sample_001 \\\n    sample_002.fasta sample_002 \\\n    ...\n\n2. Then run the program:\n```\ncat mappingFile.txt | while read -a line; do python /your/path/to/MIRUReader.py -r ${line[0]} -p ${line[1]}; done > miru.multiple.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output example",
        "parent_header": [
          "MIRUReader"
        ],
        "type": "Text_excerpt",
        "value": "```\nsample_prefix   0154    0424    0577    0580    0802    0960    1644    1955    2059    2163b   2165    2347    2401    2461    2531    2687    2996    3007    3171    3192    3690    4052    4156    4348\nsample_001      2       4       4       2       3       3       3       2       2       5       4       4       4       2       5       1       6       3       3       5       3       7       2       3\n```\n\nNotes:\n* The program is compatible to Python 2 and Python 3.\n* Accepted reads file format includes '.fastq', '.fastq.gz', '.fasta', and '.fasta.gz'.\n* The program output is a tab-delimited plain text which can be copied to or opened in Excel spreadsheet.\n"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Full usage",
        "parent_header": [
          "MIRUReader"
        ],
        "type": "Text_excerpt",
        "value": "| Main options | Description |\n| ------------ | ----------- |\n| -r READS | Input reads file in fastq/fasta format, can be gzipped or not gzipped |\n| -p PREFIX | Sample ID required for naming output file. |\n| --table TABLE | Allele calling table, default is MIRU_table. Can be user-defined in fixed format. However, providing custom allele calling table for other VNTR is not tested. |\n| --primers PRIMERS | Primers sequences, default is MIRU_primers. Can be user-defined in fixed format. |\n\n\n| Optional options | Description |\n| ---------------- | ----------- |\n| --amplicons | Use output from primersearch (\"prefix.18.primersearch.out\") and summarize MIRU profile directly. |\n| --details | This option is for further inspection. It displays details of repeat count for each loci with total mismatch error in the primer sequences alignment. |\n| --nofasta | Delete fasta file generated if your input read is in fastq format. |\n"
      },
      "source": "https://raw.githubusercontent.com/phglab/MIRUReader/master/README.md",
      "technique": "header_analysis"
    }
  ]
}