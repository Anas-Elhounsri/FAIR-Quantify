{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Vasimuddin Md, Sanchit Misra, Heng Li, Srinivas Aluru.\n<b> Efficient Architecture-Aware Acceleration of BWA-MEM for Multicore Systems. </b>\n<i> IEEE Parallel and Distributed Processing Symposium (IPDPS), 2019. [10.1109/IPDPS.2019.00041](https://doi.org/10.1109/IPDPS.2019.00041) </i>\n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bwa-mem2/bwa-mem2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-02-26T15:00:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-30T05:04:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The next version of bwa-mem "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "The tool bwa-mem2 is the next version of the bwa-mem algorithm in [bwa][bwa]. It\nproduces alignment identical to bwa and is ~1.3-3.1x faster depending on the use-case, dataset and the running machine.\n\nThe original bwa was developed by Heng Li (@lh3). Performance enhancement in\nbwa-mem2 was primarily done by Vasimuddin Md (@yuk12) and Sanchit Misra (@sanchit-misra)\nfrom Parallel Computing Lab, Intel.\nbwa-mem2 is distributed under the MIT license.\n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9769267896323142,
      "result": {
        "original_header": "Important Information",
        "type": "Text_excerpt",
        "value": "***We are happy to announce that the index size on disk is down by 8 times and in memory by 4 times due to moving to only one type of FM-index (2bit.64 instead of 2bit.64 and 8bit.32) and 8x compression of suffix array. For example, for human genome, index size on disk is down to ~10GB from ~80GB and memory footprint is down to ~10GB from ~40GB.***\n***There is a substantial reduction in index IO time due to the reduction and hardly any performance impact on read mapping.***\n***Due to this change in index structure (in commit #4b59796, 10th October 2020), you will need to rebuild the index.*** \n***As of commit e0ac59e, we have a git submodule safestringlib. To get it, use --recursive while cloning or use \"git submodule init\" and \"git submodule update\" in an already cloned repository (See below for more details).*** \n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8510423119233461,
      "result": {
        "original_header": "Performance",
        "type": "Text_excerpt",
        "value": "For example,  in our double socket (56 threads each) and double numa compute node, we used the following command line to align D2 to human_g1k_v37.fasta reference genome.  \n```\nnumactl -m 0 -C 0-27,56-83 ./bwa-mem2 index human_g1k_v37.fasta  \nnumactl -m 0 -C 0-27,56-83 ./bwa-mem2 mem -t 56 human_g1k_v37.fasta SRR7733443_1.fastq SRR7733443_2.fastq > d2_align.sam\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9961608095276142,
      "result": {
        "original_header": "bwa-mem2 seeding phase accelerated using LISA (Learned-Indexes for Sequence Analysis)",
        "type": "Text_excerpt",
        "value": "bwa-mem2-lisa is an accelerated version of bwa-mem2 where we apply learned-indexes to the seeding phase. bwa-mem2-lisa branch contains the source code of the implementation. Following are the features of bwa-mem2-lisa:\n1. Exact same output as bwa-mem2.\n2. All command-lines for creating an index and the read mapping are exactly same as bwa-mem2.\n3. bwa-mem2-lisa accelerates seeding phase (one of the major bottlenecks in bwa-mem2) by up to 4.5x compared to bwa-mem2.\n4. The memory footprint of bwa-mem2-lisa index is ~120GB for human genome.\n5. The code is present in bwa-mem2-lisa branch: https://github.com/bwa-mem2/bwa-mem2/tree/bwa-mem2-lisa \n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9842084152547556,
      "result": {
        "original_header": "bwa-mem2 seeding speedup with Enumerated Radix Trees (Code in ert branch)",
        "type": "Text_excerpt",
        "value": "The ert branch of bwa-mem2 repository contains codebase of enuerated radix tree based acceleration of bwa-mem2. The ert code is built on the top of bwa-mem2 (thanks to the hard work by @arun-sub). \nThe following are the highlights of the ert based bwa-mem2 tool: \n1. Exact same output as bwa-mem(2) \n2. The tool has two additional flags to enable the use of ert solution (for index creation and mapping), else it runs in vanilla bwa-mem2 mode \n3. It uses 1 additional flag to create ert index (different from bwa-mem2 index) and 1 additional flag for using that ert index (please see the readme of ert branch) \n4. The ert solution is 10% - 30% faster (tested on above machine configuration) in comparison to vanilla bwa-mem2 -- users are adviced to use option `-K 1000000` to see the speedups \n5. The memory foot print of the ert index is ~60GB \n6. The code is present in ert branch: https://github.com/bwa-mem2/bwa-mem2/tree/ert \n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bwa-mem2/bwa-mem2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 97
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bwa-mem2/bwa-mem2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bwa-mem2/bwa-mem2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/images/bwa-mem2-2.png"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/images/bwa-mem2-3.png"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/images/bwa-mem2-4.png"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "For general users, it is recommended to use the precompiled binaries from the\n[release page][rel]. These binaries were compiled with the Intel compiler and\nruns faster than gcc-compiled binaries. The precompiled binaries also\nindirectly support CPU dispatch. The `bwa-mem2` binary can automatically choose\nthe most efficient implementation based on the SIMD instruction set available\non the running machine. Precompiled binaries were generated on a CentOS7\nmachine using the following command line:\n```sh\nmake CXX=icpc multi\n```\n\n[bwa]: https://github.com/lh3/bwa\n[rel]: https://github.com/bwa-mem2/bwa-mem2/releases\n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9822985597318806,
      "result": {
        "original_header": "Important Information",
        "type": "Text_excerpt",
        "value": "***Added MC flag in the output sam file in commit a591e22. Output should match original bwa-mem version 0.7.17.*** \n***As of commit e0ac59e, we have a git submodule safestringlib. To get it, use --recursive while cloning or use \"git submodule init\" and \"git submodule update\" in an already cloned repository (See below for more details).*** \n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9992459691700388,
      "result": {
        "original_header": "Performance",
        "type": "Text_excerpt",
        "value": "Machine details:  \nProcessor: Intel(R) Xeon(R) 8280 CPU @ 2.70GHz  \nOS: CentOS Linux release 7.6.1810  \nMemory: 100GB   \n\nWe followed the steps below to collect the performance results:  \nA. Data download steps:\n1. Download SRA toolkit from https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=software#header-global    \n2. tar xfzv sratoolkit.2.10.5-centos_linux64.tar.gz  \n3. Download D2: sratoolkit.2.10.5-centos_linux64/bin/fastq-dump --split-files SRR7733443   \n4. Download D3: sratoolkit.2.10.5-centos_linux64/bin/fastq-dump --split-files SRR9932168   \n5. Download D4: sratoolkit.2.10.5-centos_linux64/bin/fastq-dump --split-files SRX6999918    \nB. Alignment steps:   \n1. git clone https://github.com/bwa-mem2/bwa-mem2.git   \n2. cd bwa-mem2   \n3. ```make CXX=icpc``` (using intel C/C++ compiler)   \nor   BASH2* (using gcc compiler)   \n4. ./bwa-mem2 index <ref.fa>   \n5. ./bwa-mem2 mem [-t <#threads>] <ref.fa> <in_1.fastq> [<in_2.fastq>]  >  <output.sam>    \n<p align=\"center\">\n<img src=\"https://github.com/bwa-mem2/bwa-mem2/blob/master/images/bwa-mem2-1.png\" height=\"400\"/a></br>\n<img src=\"https://github.com/bwa-mem2/bwa-mem2/blob/master/images/bwa-mem2-2.png\" height=\"400\"/a></br>\n<img src=\"https://github.com/bwa-mem2/bwa-mem2/blob/master/images/bwa-mem2-3.png\" height=\"400\"/a></br>\n<img src=\"https://github.com/bwa-mem2/bwa-mem2/blob/master/images/bwa-mem2-4.png\" height=\"400\"/a></br>\n</p> \n \n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bwa-mem2/bwa-mem2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, genomics, sequence-alignment"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                           The MIT License\n\n   BWA-MEM2  (Sequence alignment using Burrows-Wheeler Transform),\n   Copyright (C) 2019 Intel Corporation, Heng Li.\n\n   Permission is hereby granted, free of charge, to any person obtaining\n   a copy of this software and associated documentation files (the\n   \"Software\"), to deal in the Software without restriction, including\n   without limitation the rights to use, copy, modify, merge, publish,\n   distribute, sublicense, and/or sell copies of the Software, and to\n   permit persons to whom the Software is furnished to do so, subject to\n   the following conditions:\n\n   The above copyright notice and this permission notice shall be\n   included in all copies or substantial portions of the Software.\n\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n   BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n   ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n   CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   SOFTWARE.\n\nContacts: Vasimuddin Md <vasimuddin.md@intel.com>; Sanchit Misra <sanchit.misra@intel.com>;\n                                Heng Li <hli@jimmy.harvard.edu>\n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/images/bwa-mem2-1.png"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bwa-mem2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bwa-mem2"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 752509,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 91646,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 10036,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sanchit-misra",
          "type": "User"
        },
        "date_created": "2021-03-17T05:36:00Z",
        "date_published": "2021-03-17T06:13:06Z",
        "description": "Hotfix: Fixed the bug mentioned in #135.",
        "html_url": "https://github.com/bwa-mem2/bwa-mem2/releases/tag/v2.2.1",
        "name": "v2.2.1: Hotfix for v2.2",
        "release_id": 39921530,
        "tag": "v2.2.1",
        "tarball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/tarball/v2.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/39921530",
        "value": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/39921530",
        "zipball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/zipball/v2.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sanchit-misra",
          "type": "User"
        },
        "date_created": "2021-03-03T11:00:49Z",
        "date_published": "2021-03-08T07:50:21Z",
        "description": "Changes since the last release (2.1):\r\n\r\n* Passed the validation test on ~88 billions reads (Credits: Keiran Raine, CASM division, Sanger Institute)\r\n* Fixed bugs reported in #109 causing mismatch between bwa-mem and bwa-mem2\r\n* Fixed the issue (# 112) causing crash due to corrupted thread id \r\n* Using all the SSE flags to create optimized SSE41 and SSE42 binaries\r\n",
        "html_url": "https://github.com/bwa-mem2/bwa-mem2/releases/tag/v2.2",
        "name": "Bwa-mem2-2.2",
        "release_id": 39422668,
        "tag": "v2.2",
        "tarball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/tarball/v2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/39422668",
        "value": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/39422668",
        "zipball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/zipball/v2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sanchit-misra",
          "type": "User"
        },
        "date_created": "2020-10-07T04:55:07Z",
        "date_published": "2020-10-15T21:24:12Z",
        "description": "Release 2.1 of BWA-MEM2.\r\n\r\nChanges since the last release (2.0):\r\n* *Smaller index*: the index size on disk is down by 8 times and in memory by 4 times due to moving to only one type of FM-index (2bit.64 instead of 2bit.64 and 8bit.32) and 8x compression of suffix array. For example, for human genome, index size on disk is down to ~10GB from ~80GB and memory footprint is down to ~10GB from ~40GB. There is a substantial decrease in index IO time due to the reduction and hardly any performance impact on read mapping.\r\n\r\n* Added support for 2 more execution modes: sse4.2 and avx.\r\n\r\n* Fixed multiple bugs including those reported in Issues #71, #80 and #85.\r\n\r\n* Merged multiple pull requests.",
        "html_url": "https://github.com/bwa-mem2/bwa-mem2/releases/tag/v2.1",
        "name": "Bwa-mem2-2.1",
        "release_id": 32623935,
        "tag": "v2.1",
        "tarball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/tarball/v2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/32623935",
        "value": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/32623935",
        "zipball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/zipball/v2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yuk12",
          "type": "User"
        },
        "date_created": "2020-07-09T09:56:38Z",
        "date_published": "2020-07-09T11:31:07Z",
        "description": "This is the first production release of BWA-MEM2.\r\n\r\nChanges since the last release:\r\n* Made the source code more secure with more than 300 changes all across it.\r\n\r\n* Added support for memory re-allocations in case the pre-allocated fixed memory is insufficient.\r\n\r\n* Added support for MC flag in the sam file and support for -5, -q flags in the command line.\r\n\r\n* The output is now identical to the output of bwa-mem-0.7.17.\r\n\r\n* Merged index building code with FMI_Search class.\r\n\r\n* Added support for different ways to input read files, now, it is same as bwa-mem.\r\n\r\n* Fixed a bug in AVX512 sam processing part, which was leading to incorrect output.\r\n\r\nThe tool is described in the paper:\r\n* Vasimuddin Md, Sanchit Misra, Heng Li, Srinivas Aluru. Efficient Architecture-Aware Acceleration of BWA-MEM for Multicore Systems. IEEE Parallel and Distributed Processing Symposium (IPDPS), 2019.",
        "html_url": "https://github.com/bwa-mem2/bwa-mem2/releases/tag/v2.0",
        "name": "Bwa-mem2-2.0",
        "release_id": 28204531,
        "tag": "v2.0",
        "tarball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/tarball/v2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/28204531",
        "value": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/28204531",
        "zipball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/zipball/v2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lh3",
          "type": "User"
        },
        "date_created": "2020-02-03T14:11:23Z",
        "date_published": "2020-02-03T14:16:56Z",
        "description": "Miscellaneous changes:\r\n\r\n * Changed the license from GPL to MIT.\r\n\r\n * **IMPORTANT**: the index structure has changed since commit 6743183. Please\r\n   rebuild the index if you are using a later commit or the new release.\r\n\r\n * Added charts in README.md comparing the performance of bwa-mem2 with bwa-mem.\r\n\r\nMajor code changes:\r\n\r\n * Fixed working for variable length reads.\r\n\r\n * Fixed a bug involving reads of length greater than 250bp.\r\n\r\n * Added support for allocation of more memory in small chunks if large\r\n   pre-allocated fixed memory is insufficient. This is needed very rarely\r\n   (thus, having no impact on performance) but prevents asserts from failing\r\n   (code from crashing) in that scenario. \r\n\r\n * Fixed a memory leak due to not releasing the memory allocated for seeds\r\n   after smem.\r\n\r\n * Fixed a segfault due to non-alignment of small allocated memory in the\r\n   optimized banded Smith-Waterman.\r\n\r\n * Enabled working with genomes larger than 7-8 billion nucleotides (e.g. Wheat\r\n   genome).\r\n\r\n * Fixed a segfault occuring (with gcc compiler) while reading the index.\r\n",
        "html_url": "https://github.com/bwa-mem2/bwa-mem2/releases/tag/v2.0pre2",
        "name": "Bwa-mem2-2.0pre2",
        "release_id": 23340247,
        "tag": "v2.0pre2",
        "tarball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/tarball/v2.0pre2",
        "type": "Release",
        "url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/23340247",
        "value": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/23340247",
        "zipball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/zipball/v2.0pre2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lh3",
          "type": "User"
        },
        "date_created": "2019-05-20T00:30:44Z",
        "date_published": "2019-05-21T17:20:13Z",
        "description": "A pre-release.",
        "html_url": "https://github.com/bwa-mem2/bwa-mem2/releases/tag/v2.0pre1",
        "name": "Bwa-mem2-2.0pre1",
        "release_id": 17495081,
        "tag": "v2.0pre1",
        "tarball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/tarball/v2.0pre1",
        "type": "Release",
        "url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/17495081",
        "value": "https://api.github.com/repos/bwa-mem2/bwa-mem2/releases/17495081",
        "zipball_url": "https://api.github.com/repos/bwa-mem2/bwa-mem2/zipball/v2.0pre1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:50:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 716
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "type": "Text_excerpt",
        "value": "```sh\n# Use precompiled binaries (recommended)\ncurl -L https://github.com/bwa-mem2/bwa-mem2/releases/download/v2.2.1/bwa-mem2-2.2.1_x64-linux.tar.bz2 \\\n  | tar jxf -\nbwa-mem2-2.2.1_x64-linux/bwa-mem2 index ref.fa\nbwa-mem2-2.2.1_x64-linux/bwa-mem2 mem ref.fa read1.fq read2.fq > out.sam\n\n# Compile from source (not recommended for general users)\n# Get the source\ngit clone --recursive https://github.com/bwa-mem2/bwa-mem2\ncd bwa-mem2\n# Or\ngit clone https://github.com/bwa-mem2/bwa-mem2\ncd bwa-mem2\ngit submodule init\ngit submodule update\n# Compile and run\nmake\n./bwa-mem2\n```\n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "The usage is exactly same as the original BWA MEM tool. Here is a brief synopsys. Run ./bwa-mem2 for available commands.\n\n```sh\n# Indexing the reference sequence (Requires 28N GB memory where N is the size of the reference sequence).\n./bwa-mem2 index [-p prefix] <in.fasta>\nWhere \n<in.fasta> is the path to reference sequence fasta file and \n<prefix> is the prefix of the names of the files that store the resultant index. Default is in.fasta.\n\n# Mapping \n# Run \"./bwa-mem2 mem\" to get all options\n./bwa-mem2 mem -t <num_threads> <prefix> <reads.fq/fa> > out.sam\nWhere <prefix> is the prefix specified when creating the index or the path to the reference fasta file in case no prefix was provided.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/bwa-mem2/bwa-mem2/master/README.md",
      "technique": "header_analysis"
    }
  ]
}