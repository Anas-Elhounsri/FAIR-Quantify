{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "MetaPrism"
        ],
        "type": "Text_excerpt",
        "value": "MetaPrism: A Toolkit for Joint Taxa/Gene Analysis of Metagenomic Sequencing Data\nhttps://www.biorxiv.org/content/10.1101/664748v1\n"
      },
      "source": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jiwoongbio/MetaPrism"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-04-01T18:47:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-24T10:54:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Taxonomical and Functional Profiling for Shotgun Metagenomic Sequencing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9949867315912568,
      "result": {
        "original_header": "MetaPrism",
        "type": "Text_excerpt",
        "value": "MetaPrism: A Toolkit for Joint Analysis of Meta-genomic Sequencing Data  \nMetaPrism provides joint profile (infer both taxonomical and functional profile) for shotgun metagenomic sequencing data. It also offer tools to 1) classify sequence reads and estimate the abundances for taxa-specific genes; 2) tabularize and visualize taxa-specific gene abundances; 3) build asso-ciation and prediction models for comparative analysis.  \n"
      },
      "source": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jiwoongbio/MetaPrism/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jiwoongbio/MetaPrism/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jiwoongbio/MetaPrism"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Table of Contents"
      },
      "source": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/MetaPrism_data.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/MetaPrism.spades.paired.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/MetaPrism.megahit.paired.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/example.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P67/P67.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P66/P66.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P14/P14.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P46/P46.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P52/P52.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P59/P59.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P55/P55.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P23/P23.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P54/P54.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P61/P61.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P34/P34.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P30/P30.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P53/P53.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P25/P25.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P69/P69.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P68/P68.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P10/P10.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P28/P28.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P24/P24.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P63/P63.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P7/P7.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P35/P35.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P8/P8.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/example/P32/P32.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "MetaPrism"
        ],
        "type": "Text_excerpt",
        "value": "If you already have Git (https://git-scm.com) installed, you can get the latest development version using Git. It will take a few seconds.\n```\ngit clone https://github.com/jiwoongbio/MetaPrism.git\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jiwoongbio/MetaPrism/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MetaPrism"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jiwoongbio"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 125651,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 29007,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 15791,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "MetaPrism"
        ],
        "type": "Text_excerpt",
        "value": "1. Perl - https://www.perl.org\n2. R - http://www.r-project.org\n3. Perl module Statistics::R - https://metacpan.org/pod/Statistics::R\n4. R library caret - https://cran.r-project.org/web/packages/caret/index.html\n5. R library randomForest - https://cran.r-project.org/web/packages/randomForest/index.html\n6. DIAMOND - https://github.com/bbuchfink/diamond (recommended) or USEARCH - https://www.drive5.com/usearch/\n7. BWA - http://bio-bwa.sourceforge.net\n8. Samtools - http://www.htslib.org\n9. Centrifuge - https://ccb.jhu.edu/software/centrifuge/\n10. Linux commands: sort, wget - https://www.gnu.org/software/wget/\n11. MEGAHIT - https://github.com/voutcn/megahit (optional) \n\n"
      },
      "source": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:43:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "parent_header": [
          "MetaPrism"
        ],
        "type": "Text_excerpt",
        "value": "We present a short tutorial to help users quickly get started on their own analysis. The example datasets are based on [https://www.ncbi.nlm.nih.gov/bioproject/PRJNA397906](https://www.ncbi.nlm.nih.gov/bioproject/PRJNA397906) and the full command list is  available at [example/example.sh](example/example.sh).\n\n1. Prepare database files\n\nThis step will download necessary databases for MetaPrism in your current directory.\n\n```\nperl MetaPrism_gene_prepare.pl\n```\n\n2. De novo metagenome assembly (per sample)\n\nFor each sample, users need to perform de novo assembly. Suppose the input paired end sequence files are `sample1.1.fastq.gz` and `sample1.2.fastq.gz`. The commnad line is:\n\n```\nmegahit -1 sample1.1.fastq.gz -2 sample1.2.fastq.gz -o sample1.megahit\n```\n\n3. Gene annotation and abundance quantification (per sample)\n\nFor each sample, MetaPrism first quantify all gene abundances. The file `sample1.megahit/final.contigs.fa` is the output from the previous step.\n\n```\nperl MetaPrism_gene.pl sample1.gene sample1.megahit/final.contigs.fa sample1.1.fastq.gz,sample1.2.fastq.gz\n```\n\n4. Taxon annotation (per sample)\n\nMetaPrism will next infer the taxonomy for each contig. The file `sample1.gene.region.abundance.txt` is the output from the previous step. The result will be outputted to the console. We redirected it to the result file `sample1.gene_taxon.region.abundance.txt`.\n\n```\nperl MetaPrism_taxon_centrifuge.pl sample1.gene.region.abundance.txt sample1.megahit/final.contigs.fa centrifuge/data/p_compressed > sample1.gene_taxon.region.abundance.txt\n```\n\n5. Compare sample groups and identify differentially-abundant genes\n\nSuppose that you repeat step 2 to step 4, and you get a list of joint features (`sample1.gene_taxon.region.abundance.txt`, `sample2.gene_taxon.region.abundance.txt`, ..., `sample6.gene_taxon.region.abundance.txt`). MetaPrism can perform comparative analysis using the following command:\n\n```\nperl MetaPrism_comparison.pl -F gene sample.group.txt \\\n\tsample1=sample1.gene_taxon.region.abundance.txt \\\n\tsample2=sample2.gene_taxon.region.abundance.txt \\\n\tsample3=sample3.gene_taxon.region.abundance.txt \\\n\tsample4=sample4.gene_taxon.region.abundance.txt \\\n\tsample5=sample5.gene_taxon.region.abundance.txt \\\n\tsample6=sample6.gene_taxon.region.abundance.txt \\\n\t> gene.comparison.txt\n\nawk -F'\\t' '(NR == 1 || ($4 >= 1 && $5 <= 0.01))' gene.comparison.txt > gene.comparison.filtered.txt\n```\n\n* sample.group.txt is a text file containing lines of tab-delimited sample and group like following:\n\n````\n  sample1 group1\n  sample2 group1\n  sample3 group1\n  sample4 group2\n  sample5 group2\n  sample6 group2\n````\n\nHere `sample1`, `sample2`, and `sample3` are from `group1`, and the rest are from `group2`. For another example group file, see [example/sample.group.txt](example/sample.group.txt).\n\n6. Generate a heatmap webpage\n\nYou can also generate a heatmap webpage using the `MetaPrism_heatmap.pl` command.\n\n```\nperl MetaPrism_heatmap.pl -F gene -s -g gene.comparison.filtered.txt -r both \\\n\tsample1=sample1.gene_taxon.region.abundance.txt \\\n\tsample2=sample2.gene_taxon.region.abundance.txt \\\n\tsample3=sample3.gene_taxon.region.abundance.txt \\\n\tsample4=sample4.gene_taxon.region.abundance.txt \\\n\tsample5=sample5.gene_taxon.region.abundance.txt \\\n\tsample6=sample6.gene_taxon.region.abundance.txt \\\n\t> gene.heatmap.html\n```\n\n7. Generate a tabular result file\n\nUsers may also want to have a tabular file for their own analysis. This command will produce such tabular text file: \n\n```\nperl MetaPrism_table.pl -F taxon_average -s \\\n\tsample1=sample1.gene_taxon.region.abundance.txt \\\n\tsample2=sample2.gene_taxon.region.abundance.txt \\\n\tsample3=sample3.gene_taxon.region.abundance.txt \\\n\tsample4=sample4.gene_taxon.region.abundance.txt \\\n\tsample5=sample5.gene_taxon.region.abundance.txt \\\n\tsample6=sample6.gene_taxon.region.abundance.txt \\\n\t> taxon.table.txt\n```\n\n8. Build a prediction model\n\nUsers can build a prediction model using `MetaPrism_prediction.pl`. The option `-t xgbTree` uses the xgboost algorithm with leave-one-out cross validation. The result file `prediction.feature.txt` lists the feature importances, and the file `prediction.txt` lists the prediction accuracies.\n\n```\nperl MetaPrism_prediction.pl -t xgbTree -f prediction.feature.txt sample.group.txt \\\n\tsample1=sample1.gene_taxon.region.abundance.txt \\\n\tsample2=sample2.gene_taxon.region.abundance.txt \\\n\tsample3=sample3.gene_taxon.region.abundance.txt \\\n\tsample4=sample4.gene_taxon.region.abundance.txt \\\n\tsample5=sample5.gene_taxon.region.abundance.txt \\\n\tsample6=sample6.gene_taxon.region.abundance.txt \\\n\t> prediction.txt\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usages",
        "parent_header": [
          "MetaPrism"
        ],
        "type": "Text_excerpt",
        "value": "In this section, we list the command line option for all available `MetaPrism` functions.\n* MetaPrism_gene_prepare.pl\n```\nUsage:   perl MetaPrism_gene_preapare.pl [options]\n\nOptions: -h       display this help message\n         -r       redownload data\n         -m FILE  executable file path of mapping program, \"diamond\" or \"usearch\" [diamond]\n         -k       download prebuilt KEGG files\n         -a       download ARDB database\n         -b       download beta-lactamase database\n```\n\n* MetaPrism_gene.pl\n```\nUsage:   perl MetaPrism_gene.pl [options] output.prefix genome.fasta [input.fastq|input.R1.fastq,input.R2.fastq [...]]\n\nOptions: -h       display this help message\n         -A STR   prepared genome prefix\n         -B       input indexed sorted BAM file instead of FASTQ file\n         -m FILE  executable file path of mapping program, \"diamond\" or \"usearch\" [diamond]\n         -p INT   number of threads [1]\n         -e FLOAT maximum e-value to report alignments [10]\n         -t DIR   directory for temporary files [$TMPDIR or /tmp]\n         -a FLOAT search acceleration for ublast [0.5]\n         -C STR   codon and translation e.g. ATG=M [NCBI genetic code 11 (Bacterial, Archaeal and Plant Plastid)]\n         -S STR   comma-separated start codons [GTG,ATG,CTG,TTG,ATA,ATC,ATT]\n         -T STR   comma-separated termination codons [TAG,TAA,TGA]\n         -l INT   minimum translation length [10]\n         -c FLOAT minimum coverage [0.8]\n         -q INT   minimum mapping quality [0]\n         -s STR   strand specificity, \"f\" or \"r\"\n         -P STR   contig prefix used for abundance estimation\n```\n\n* MetaPrism_taxon_centrifuge.pl\n```\nUsage:   perl MetaPrism_taxon_centrifuge.pl [options] MetaPrism_gene.region.txt genome.fasta centrifuge.index > MetaPrism_gene.region.taxon.txt\n\nOptions: -h       display this help message\n         -p INT   number of threads [1]\n```\n\n* MetaPrism_comparison.pl\n```\nUsage:   perl MetaPrism_comparison.pl [options] sample.group.txt [sample=]abundance.txt [...] > MetaPrism_comparison.txt\n\nOptions: -h       display this help message\n         -A STR   abundance column [meanDepth/genome]\n         -R STR   taxon rank [genus]\n         -F STR   feature type, \"gene_taxon\", \"gene\", \"gene_average\", \"taxon\", \"taxon_average\" [gene_taxon]\n         -t STR   statistical test for comparing sample groups, \"kruskal\", \"anova\", \"poisson\", \"quasipoisson\", \"metagenomeSeq\" [kruskal]\n         -o FLOAT offset [1]\n```\n\n* MetaPrism_prediction.pl\n```\nUsage:   perl MetaPrism_prediction.pl [options] sample.group.txt [sample=]abundance.txt [...]\n\nOptions: -h       display this help message\n         -A STR   abundance column [meanDepth/genome]\n         -R STR   taxon rank [genus]\n         -F STR   feature type, \"gene_taxon\", \"gene\", \"gene_average\", \"taxon\", \"taxon_average\" [gene_taxon]\n         -t STR   train method [rf]\n         -c STR   train control method [LOOCV]\n         -m FILE  model file\n         -f FILE  important feature file\n         -s INT   seed [1]\n```\n\n* MetaPrism_table.pl\n```\nUsage:   perl MetaPrism_table.pl [options] [sample=]abundance.txt [...] > table.txt\n\nOptions: -h       display this help message\n         -A STR   abundance column [meanDepth/genome]\n         -R STR   taxon rank [genus]\n         -F STR   feature type, \"gene_taxon\", \"gene\", \"gene_average\", \"taxon\", \"taxon_average\" [gene_taxon]\n         -s       scale\n```\n\n* MetaPrism_heatmap.pl\n```\nUsage:   perl MetaPrism_heatmap.pl [options] [sample=]abundance.txt [...] > heatmap.html\n\nOptions: -h       display this help message\n         -A STR   abundance column [meanDepth/genome]\n         -R STR   taxon rank [genus]\n         -F STR   feature type, \"gene_taxon\", \"gene\", \"gene_average\", \"taxon\", \"taxon_average\" [gene_taxon]\n         -s       scale\n         -g FILE  feature file\n         -t INT   taxon abbreviation length [4]\n         -f INT   HTML font size [15]\n         -w INT   HTML table cell width [60]\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/jiwoongbio/MetaPrism/master/README.md",
      "technique": "header_analysis"
    }
  ]
}