{
  "application_domain": [
    {
      "confidence": 6.19,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/thinhong/MethPanel"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-03T01:48:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-27T01:58:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9019380290427047,
      "result": {
        "original_header": "*MethPanel*",
        "type": "Text_excerpt",
        "value": "*MethPanel* is a computational pipeline in Linux operating system with an interactive graphical interface for rapid analysis of multiplex bisulphite PCR sequencing data. The tool covers a complete analysis workflow from genomic alignment to DNA methylation calling and supports an unlimited number of PCR amplicons and input samples. Moreover *MethPanel* offers important and unique features, such as a epipolymorphism score and a bisulphite PCR bias correction. *MethPanel* can be run in parallel by samples on either a personal computer or a high performance computer. The outputs are automatically forwarded to a shinyApp for convenient display, visualisation and sharing of data with collaborators and clinicians. \nBefore applying our *MethPanel* workflow, all the primers for the multiplex bisulphite PCR can be designed using online tool [**PrimerSuite**](http://www.primer-suite.com/) (Lu J, Johnston A, Berichon P, Ru K-l, Korbie D, Trau M: PrimerSuite: a high throughput web-based primer design program for multiplex bisulphite PCR. Scientific reports 2017, 7:41328).\n \n"
      },
      "source": "https://raw.githubusercontent.com/thinhong/MethPanel/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9735125444206624,
      "result": {
        "original_header": "*MethPanel* shinyApp",
        "type": "Text_excerpt",
        "value": "For further details manual of *MethPanel* shinyApp, please visit our [**Wiki page**](https://github.com/thinhong/MethPanel/wiki). \n \n"
      },
      "source": "https://raw.githubusercontent.com/thinhong/MethPanel/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/thinhong/MethPanel/wiki"
      },
      "source": "https://raw.githubusercontent.com/thinhong/MethPanel/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/thinhong/MethPanel/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/thinhong/MethPanel/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "thinhong/MethPanel"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MethPanel"
      },
      "source": "https://raw.githubusercontent.com/thinhong/MethPanel/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/config/Example_MethPanel.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/script/install_dependencies.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/script/mergeToBigTableFullRead/mergeToBigTableFullRead.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/script/index_ref/index_ref.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/script/mergeToAmplicon/mergeToAmplicon.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/script/methylation_calling/bismark_methylation_extractor.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/script/methylation_pattern/methylation_pattern.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/script/trim_galore/trim_galore.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/script/alignment/bismark.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/script/mergeToBigTable/mergeToBigTable.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/script/metrics/metrics.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/script/plot_coverage_methylation/plot_coverage_methylation.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/figures/27102020_Figure.png"
      },
      "source": "https://raw.githubusercontent.com/thinhong/MethPanel/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/figures/shinyClient.png"
      },
      "source": "https://raw.githubusercontent.com/thinhong/MethPanel/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "*MethPanel*",
          "*MethPanel* workflow"
        ],
        "type": "Text_excerpt",
        "value": "* *MethPanel* is built based on in-house bash/python/R script, Bpipe and a collection of software packages:\n  * [bowtie2, 2.3.5.1]                   http://bowtie-bio.sourceforge.net/bowtie2/index.shtml\n  * [Bismark, 0.22.3]                    https://www.bioinformatics.babraham.ac.uk/projects/bismark/\n  * [bedtools, 2.28.0]                   https://github.com/arq5x/bedtools2\n  * [samtools, 1.9]                      https://github.com/samtools/\n  * [Bpipe, 0.9.9.9]                     https://github.com/ssadedin/bpipe\n  * [fastqc, 0.11.9]                     http://www.bioinformatics.babraham.ac.uk/projects/fastqc/\n  * [trim_galore, 0.6.5]                 https://www.bioinformatics.babraham.ac.uk/projects/trim_galore/\n  * [python, 3.7.4]                      https://www.python.org/\n  * [python modules] configobj, argparse\n  * [R, 3.6.1]                           https://www.r-project.org/\n  * [R and Bioconductor packages] rtracklayer, Biostrings, GenomicRanges, data.table, ggplot2, gplots, reshape2, shiny, shinyauthr, shinyjs, plotly\n  * [multiqc]                            https://multiqc.info/\n  * [java, jdk-13.33]                    https://java.com/en/download/\n  * [shiny server] Visit our [**Wiki page**](https://github.com/thinhong/MethPanel/wiki/2.-shinyApp-client) for a detailed installation manual of shiny server and shinyapp\n  \n* Dependencies\n  \n  Download this [**script**](https://raw.githubusercontent.com/thinhong/MethPanel/master/script/install_dependencies.sh) to automatically download all the above listed software packages, install python and R packages, and clone *MethPanel* github repository. After downloading, execute the command below:\n  ```\n  bash ./install_dependencies.sh\n  ```\n  \n  Or manually download the above listed software packages, install python and R packages\n    * [python version >= 3.7.4]\n      ```\n      python -m pip install configobj argparse\n      ```\n    * [R version >= 3.6.1] \n      ```\n      install.packages(c(\"ggplot2\", \"data.table\", \"gplots\", \"reshape2\", \"shiny\", \"shinyauthr\", \"shinyjs\", \"plotly\"))\n      ```\n      ```\n      if (!requireNamespace(\"BiocManager\", quietly = TRUE))\n      install.packages(\"BiocManager\")\n\n      BiocManager::install(c(\"Biostrings\", \"GenomicRanges\", \"rtracklayer\"))\n      ```\n\n    * Clone *MethPanel* github repository\n      ```\n      git clone git@github.com:/thinhong/MethPanel.git\n      ```\n      * or\n      ```\n      git clone https://github.com/thinhong/MethPanel.git\n      ```\n  \n* Inputs required\n  * Single/paired fastq files in .gz format for each sample\n  * Filled sample config file, [example](https://raw.githubusercontent.com/thinhong/MethPanel/master/config/sample.Example.pre.config)\n  * Filled system config file, [example](https://raw.githubusercontent.com/thinhong/MethPanel/master/config/system.Example.pre.config)\n  * DNA methylation marker panel file, [example](https://raw.githubusercontent.com/thinhong/MethPanel/master/config/amplicons.tsv)\n  * Note: \n       * The fastq files are located in `/path/to/upstream/analysis/<user>/${project}/raw/Sample1/Sample1_R1.fastq.gz`,                                        `/path/to/upstream/analysis/<user>/${project}/raw/Sample1/Sample1_R2.fastq.gz` (if paired-end) for each sample.\n"
      },
      "source": "https://raw.githubusercontent.com/thinhong/MethPanel/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9958735408947603,
      "result": {
        "original_header": "*MethPanel* shinyApp",
        "type": "Text_excerpt",
        "value": "<img src=\"https://raw.githubusercontent.com/thinhong/MethPanel/master/figures/shinyClient.png\" height=\"500\"> \n"
      },
      "source": "https://raw.githubusercontent.com/thinhong/MethPanel/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/thinhong/MethPanel/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MethPanel"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "thinhong"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 97524,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 19240,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 8782,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thinhong/MethPanel/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run *MethPanel*",
        "parent_header": [
          "*MethPanel*",
          "*MethPanel* workflow"
        ],
        "type": "Text_excerpt",
        "value": "```\nproject=\"<project_name>\"\nsample_config=\"/path/to/upstream/analysis/<user>/${project}/config/sample.${project}.pre.config\"\nsystem_config=\"/path/to/upstream/analysis/<user>/${project}/config/system.${project}.pre.config\"\n```\nThe fastq files are located in `/path/to/upstream/analysis/<user>/<project_name>/raw/`\n```\npython \"/path/to/pipe/run_Bpipe.py\" $sample_config $system_config\n```"
      },
      "source": "https://raw.githubusercontent.com/thinhong/MethPanel/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:41:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ]
}