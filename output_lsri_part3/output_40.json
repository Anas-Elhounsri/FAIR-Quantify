{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments",
        "parent_header": [
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "PEMA uses a series of tools, datasets as well as Big Data Script language. We thank all the groups that developed them.\nThe tools & databases that PEMA uses are: \n* BigDataScript programming language - https://pcingola.github.io/BigDataScript/\n* FASTQC - https://www.bioinformatics.babraham.ac.uk/projects/fastqc/\n* Trimmomatic - http://www.usadellab.org/cms/?page=trimmomatic\n* Cutadapt - https://cutadapt.readthedocs.io/en/stable/\n* BayesHammer - included in SPAdes - http://cab.spbu.ru/software/spades/\n* PANDAseq - https://github.com/neufeld/pandaseq\n* OBITools - https://pythonhosted.org/OBITools/welcome.html\n* BLAST Command Line Applications - https://www.ncbi.nlm.nih.gov/books/NBK52640/\n* VSEARCH-2.9.1 - https://github.com/torognes/vsearch/releases/tag/v2.9.1\n* SWARM - https://github.com/torognes/swarm\n* CROP - https://github.com/tingchenlab/CROP\n* CREST - https://github.com/lanzen/CREST\n* RDPClassifier - https://github.com/rdpstaff/classifier\n(RPDtools are required in order to execute RDPClassifier)\n* SILVA db - https://www.arb-silva.de/no_cache/download/archive/current/Exports/\n* MIDORI db - http://reference-midori.info/index.html\n* PR2 db - https://pr2-database.org/\n* \"phat\" algorithm, from the \"gappa\" package - https://github.com/lczech/gappa/wiki/Subcommand:-phat\n* MAFFT - https://mafft.cbrc.jp/alignment/software/\n* RAxML -ng - https://github.com/amkozlov/raxml-ng\n* PaPaRa - https://cme.h-its.org/exelixis/web/software/papara/index.html\n* EPA-ng - https://github.com/Pbdas/epa-ng\n* phyloseq R package - http://joey711.github.io/phyloseq/index.html\n* vegan R package - https://cran.r-project.org/web/packages/vegan/index.html \n* ncbi-taxonomist - https://ncbi-taxonomist.readthedocs.io/en/latest/\n\nAnd of course the container-based technologies:\n* Docker - https://www.docker.com/\n* Singularity - https://sylabs.io/singularity/\n\n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 36.89,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "Haris Zafeiropoulos, Ha Quoc Viet, Katerina Vasileiadou, Antonis Potirakis, Christos Arvanitidis, Pantelis Topalis, Christina Pavloudi, Evangelos Pafilis, PEMA: a flexible Pipeline for Environmental DNA Metabarcoding Analysis of the 16S/18S ribosomal RNA, ITS, and COI marker genes, GigaScience, Volume 9, Issue 3, March 2020, giaa022, https://doi.org/10.1093/gigascience/giaa022\n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hariszaf/pema"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n# Contribute to the `PEMA` repo!\n\n:rocket:  :metal: Thank you all for taking the time to contribute! :rocket:  :metal:\n\nThe following is a set of guidelines for contributing, in terms of guidelines, not rules.\nFeel free to contribute to this document as in the rest of the repo! :wink:\n\n## Table of Contents\n\n  * [Dependencies](#dependencies)\n  * [Fork `PEMA` repository to build your own repo](#fork-pema-repository-to-build-your-own-repo)\n  * [Prepare to contribute!](#prepare-to-contribute)\n    + [GitFlow workflow](#gitflow-workflow)\n    + [Create new branch for your work](#create-new-branch-for-your-work)\n  * [Make your contributions on your branch](#make-your-contributions-on-your-branch)\n  * [Pull request (PR) and the job is done](#pull-request-pr-and-the-job-is-done)\n  * [Review](#review)\n  * [Acknowledgements](#acknowledgements)\n\n   \n## Dependencies\n\n* `git` (see [Getting Started with Git](https://help.github.com/en/github/using-git/getting-started-with-git-and-github))\n* configured GitHub account\n* you also need to have [Docker](https://www.docker.com/get-started) on your machine as PEMA is a containerized-oriented software\n\nIn terms of contributing to the PEMA image you need to set you code feasible to run on its PEMA's acutal container, meaning a container.\nSo, before you start coding, you need to make sure that you can build your own images using the `docker build` command, and run your code\nover there as part of the PEMA environment. \n\nTo have a look on what you need to end up with, you can just download the current version of PEMA and run a small test. \n\nClone the repository, \n\n    git clone git@github.com:hariszaf/pema.git pema\n    cd pema\n    git branch -vv\n\nthe last command should tell you that you are in `develop` branch.\n\nNow you may try to run current version of PEMA locally by making use of the [```analysis_directory```](https://github.com/hariszaf/pema/tree/master/analysis_directory) following the instructions presented on the [PEMA tutorial](https://docs.google.com/presentation/d/1lVH23DPa2NDNBhVvOTRoip8mraw8zfw8VQwbK4vkB1U/edit?fbclid=IwAR14PpWfPtxB8lLBBnoxs7UbG3IJfkArrJBS5f2kRA__kvGDUb8wiJ2Cy_s#slide=id.g464fa2cc59_0_57)\n\n\n\n## Fork `PEMA` repository to build your own repo\n\nWorking directly in the original PEMA repository is not possible to you, therefore you should create your own fork. \n\nThis way you can modify the code and when the job is done send a pull request to merge your changes with the original repository.\n\nHere are the steps to do that:\n\n1. Login on `GitHub`\n2. Go to [PEMA repository](https://github.com/hariszaf/pema)\n3. Click the 'Fork' button\n4. Choose your profile and wait a bit!\n6. Now you are ready to contribute!\n\nYou may find further information regarding `fork` over [here](https://guides.github.com/activities/forking/)\n\n\n**Verify if your fork works**\n\nGo out of `pema` directory you built in the *Get the development branch of PEMA* step \n\n    cd ..\n\nclone your repository and checkout to the ```develop``` branch\n\n    git clone git@github.com:<your_github_profile_name>/pema.git pema_fork\n    cd pema_fork\n    git checkout develop\n    git branch -vv\n    git pull\n\nsee commits\n\n    git log\n    gitk\n\nYou should be able to see exactly the same commits as in `pema` repository now.\n\n## Prepare to contribute!\n\n### GitFlow workflow\n\nPEMA is using the [GitFlow](http://nvie.com/posts/a-successful-git-branching-model/) workflow. \nEach repository using this model should contain two main branches:\n\n* master - release-ready version of the library\n* develop - development version of the library\n \nand could contain various supporting branches for new features and hotfixes. \n\nAs a contributor you'll be adding new features or fixing bugs in the **development** version. \nThis means that **for each contribution** you should **create a new branch originating from the develop branch**, \nmodify it and send a pull request in order to merge it, again with the develop branch.\n\n### Create new branch for your work\n\nMake sure you're in **develop branch** running\n\n    git status\n    \nThe first line of the returned message should be\n\n    On branch develop\n    \n\nNow you need to pick a name for your new branch that doesn't already exist. \nChecks existing remote branches with\n\n    git branch -a\n\n\nLet's assume you want to name it `greatest_branch_ever`.\n\nCreate new branch first locally\n\n    git branch greatest_branch_ever\n    git checkout greatest_branch_ever\n\nand then push it to your fork\n\n    git push -u my_fork greatest_branch_ever\n\nVerify your new branch by running\n\n    git branch -vv\n\n**Attention!**\n* Note that the `-u` switch also sets up the tracking of the remote branch. Your new branch now is now ready to contribute!\n* Note that without the `-u` switch you wouldn't see the tracking information for your new branch.\n\nYou can see your newly created remote branch also on GitHub on your fork repo, not in the initial PEMA repo! \n\n\n## Make your contributions on your branch\n\nBefore contributiong to a library by adding a new feature, or a bugfix, \nyou need **always** to contact the PEMA developers team (pema@hcmr.gr) or by opening an issue.\n\nYou also need to run your version locally to make sure that your contribution leads to a robust new Docker and Singularity image.\n\nTo do so, you need to re-build ```pema``` or ```pemabase``` Docker images and for the primer, the correponding Singularity file as\nyou can see [here](https://github.com/hariszaf/pema/tree/master/singularity).\n\nIt is your images that will be tested by the PEMA group to review your contribution. \n\n\nNow you can push your changes to the remote branch\n\n    git push my_fork feature/the_fastest_sampling_algo_ever\n\nor if your local branch is tracking the remote one, just\n\n    git push\n\n## Pull request (PR) and the job is done\n\nYour work is already on `GitHub` but as already mentioned, just on your fork. \n\nYou can now go there and click \"Compare and pull request\" button or the \"New pull request\" button.\n\nAdd title and description and click the \"Create pull request\" button.\n\n## Review\n\nAfter creating a pull request your code will be reviewed and if there are no objections and your contribution is valid, your changes will be merged.\n\nIf you see some comments under the pull request and/or under specific lines of your code, you have to make the required changes, commit them and push to your branch. \n\nThose changes will also be part of the same pull request.\n\nThis procedure will be repeated until the code is ready for merging.\n\n\n## Acknowledgements\n\n:tada::tada: Contributing takes quite some time and energy so we thank you all for your effort and it is highy appreciated! A list with all the PEMA contributors will be soon available! :tada::tada:\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-23T10:07:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-08T14:13:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PEMA: a flexible Pipeline for Environmental DNA Metabarcoding Analysis of the 16S/18S rRNA, ITS and COI marker genes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.991640994892333,
      "result": {
        "original_header": "a flexible Pipeline for Environmental DNA Metabarcoding Analysis of the 16S/18S rRNA, ITS and COI marker genes",
        "type": "Text_excerpt",
        "value": "*PEMA is reposited in* [*Docker Hub*](https://hub.docker.com/r/hariszaf/pema) *as well as in* [*Singularity Hub*](https://singularity-hub.org/collections/2295)\n \n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9552841916609566,
      "result": {
        "original_header": "PEMA: biodiversity in all its different levels",
        "type": "Text_excerpt",
        "value": "PEMA supports the metabarcoding analysis of four marker genes, **16S rRNA** (Bacteria), **ITS** (Fungi) as well as **COI** and **18S rRNA** (metazoa). As input, PEMA accepts .fastq.gz files as returned by Illumina sequencing platforms. \nSince the `v.2.1.4` release, PEMA supports also the analysis of the 12S rRNA marker gene! \nPEMA processes the reads from each sample and **returns an OTU- or an ASV-table with the taxonomies** of the taxa found and their abundances in each sample. It also returns statistics and a FASTQC diagram about the quality of the reads for each sample. Finally, PEMA supports **downstream ecological analysis** of the profiles retrieved, facilitated by the [phyloseq](http://joey711.github.io/phyloseq/index.html) R package. \nPEMA supports both OTU clustering (VSEARCH) and ASV inference (Swarm). \n\nFor the case of the 16S rRNA marker gene, PEMA includes two separate approaches for taxonomy assignment: alignment-based and phylogenetic-based. \nFor the latter, a reference tree of 1000 taxa was created using SILVA_132_SSURef, EPA-ng and RaxML-ng. \nPEMA has been implemented in [BigDataScript](https://pcingola.github.io/BigDataScript/) programming language. BDS\u2019s ad hoc task parallelism and task synchronization, supports heavyweight computation. Thus, PEMA inherits such features and it also supports roll-back checkpoints and on-demand partial pipeline execution. In addition, PEMA takes advantage of all the computational power available on a specific machine; for example, if PEMA is executed on a personal laptop with 4 cores, it is going to use all four of them.  \nFinally, container-based technologies such as Docker and Singularity, make PEMA easy accessible for all operating systems.\nAs you can see in the [PEMA_tutorial.pdf](https://github.com/hariszaf/pema/blob/master/help_files/GitHub%20tutorial.pdf), once you have either Docker or Singularity on your computational environment (see below which suits your case better), running PEMA is cakewalk. You can also find the [**PEMA tutorial**](https://docs.google.com/presentation/d/1lVH23DPa2NDNBhVvOTRoip8mraw8zfw8VQwbK4vkB1U/edit?usp=sharing) as a Google Slides file. \n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9601998134030525,
      "result": {
        "original_header": "A container-based tool",
        "type": "Text_excerpt",
        "value": "PEMA can run either on a HPC environment (server, cluster etc) or on a simple PC. \nHowever, we definitely suggest to run it on an HPC environment to exploit the full potential of PEMA. Running on a powerful server or a cluster can be time-saving since it would require significantly \nless computational time than in a common PC. \nHowever, in some cases, for analyses with a small number of samples, a common PC can suffice.\nFor COI, a minimum of 20 GB of RAM for the taxonomy assignment step is required.  \nPEMA runs either as a [**Docker**](https://www.docker.com/) or as a [**Singularity**](https://sylabs.io/singularity/) image. On the following chapters, you can find how to install PEMA both in Docker and Singlularity including examples. \n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9251804915944968,
      "result": {
        "original_header": "Parameters' file",
        "type": "Text_excerpt",
        "value": "The most crucial component in running PEMA is the parameters file. \nThis file must be located **in** the *analysis directory* and the user needs to fill it **every time** PEMA is about to be called. \nIf you need more than one analyses to run, then you need to make copies of the parameters' file and have one of those in eah of the analysis directrories you create. \nSo, here is the [***parameters.tsv***](https://github.com/hariszaf/pema/blob/master/analysis_directory/parameters.tsv) file as it looks like, in a study case of our own.  \n**Always remember** to have the same version of the parameters file with the pema version you are about to use! \n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9125363528371806,
      "result": {
        "original_header": "Downstream ecological analysis",
        "type": "Text_excerpt",
        "value": "PEMA performs all the basic functions of the \"phyloseq\" R package. In addition, it performs certain functions of the [***vegan***](https://cran.r-project.org/web/packages/vegan/index.html) R package.  \nWhen the user asks for a downstream analysis using the \"phyloseq\" R package, then an extra input file called [***\"phyloseq_script.R\"***](https://github.com/hariszaf/pema/blob/master/analysis_directory/phyloseq_in_PEMA.R) needs to be imported in the \"analysis_directory\". In PEMA's main repository, you can find a template of this file; this file needs to be as it would run on your own computer, as you would run *phyloseq* in any case. PEMA will create the *\"phyloseq object\"* automatically and then it will perform the analysis as asked. The output will be placed in an extra subfolder in the main output directory of PEMA called *phyloseq_analysis*.  \nIn addition, the ***metadata.tsv*** file is also required when the phyloseq option has been selected. An example of this file you can find [here](https://raw.githubusercontent.com/hariszaf/pema/master/analysis_directory/metadata.csv). \n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/hariszaf/pema/wiki"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hariszaf/pema/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "For any troubles you may have when running PEMA or for any potential improvevments you would like to suggest, please share on the <a href=\"https://gitter.im/pema-helpdesk/community\">PEMA Gitter community</a>.",
        "parent_header": [
          "PEMA:",
          "a flexible Pipeline for Environmental DNA Metabarcoding Analysis of the 16S/18S rRNA, ITS and COI marker genes"
        ],
        "type": "Text_excerpt",
        "value": "\n[![Gitter](https://badges.gitter.im/pema-helpdesk/community.svg)](https://gitter.im/pema-helpdesk/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n\n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hariszaf/pema/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hariszaf/pema"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PEMA:"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/.gitlabci/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/.gitlabci/setup.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/convertPhylipToFasta.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/keepOnlyPerCentSimilartityForSwarm.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/nonOverlappingMerge.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/keepOnlyPerCentSimilartityForCrop.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/prepareForPandaseq.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/getColumnFromRDPFinalTable.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/buildAllTableFile.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/createOtuContingencyTable.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/cropOutputTranformations.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/dereplicateSwarm.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/makePhyloseqForCoiCase.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/trainDbForCREST.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/convertIllumunaRawDataToEnaFormat.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/croParameters.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/trainDbForRDPClassifier.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/scripts/makeMotuTableForRDPClassifier.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/pema_docker_image/sanity_check/run_sannity_check.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.paste.pics/870189fadf668a958c8aac83f38e799c.png"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Set",
        "parent_header": [
          "Table of Contents",
          "Get-set-go PEMA!"
        ],
        "type": "Text_excerpt",
        "value": "In the step, you need to create a directory where you will have everything PEMA needs to \nperform an analysis. We will call this the ***analysis directory***.\n\nIn the *analysis directory*, you need to add the following **mandatory** files:\n\n   * the [***parameters.tsv***](https://github.com/hariszaf/pema/blob/master/analysis_directory/parameters.tsv) file \n   (you can download it from this repository and then **complete it** according to the needs of your analysis) \n   > **ATTENTION!** You always need to check that you have the corresponding version of the parameters file with the pema version you are about to use! For example, if you are about to use `pema:v.2.1.4` then, your parameters file needs to be the [`v.2.1.4`](https://github.com/hariszaf/pema/blob/ARMS/analysis_directory/parameters.tsv) \n\n   * a subdirectory called ***mydata*** where your .fastq.gz files will be located <br />\n\nIf your need to perform phyloseq, in the analysis directory you also need to add the following **optionally** files:\n\n   * the [***phyloseq_in_PEMA.R***](https://github.com/hariszaf/pema/blob/master/analysis_directory/phyloseq_in_PEMA.R) which you can also download from this repository and set it the way you want (that is an R script which we have implemented and has some main features that need to stay always the same in order to be executed as part of PEMA and some parts where the user can set what exactly needs to get from the phyloseq package)\n\n   * the [***metadata.csv***](https://raw.githubusercontent.com/hariszaf/pema/master/analysis_directory/metadata.csv) file which has to be in a **comma separated** format (you can find an example of this file on PEMA's GitHub repository).\n\n\n> **Attention!**  <br />\nPEMA will **fail** unless you name the aforementioned files and directories **exactly** as described above.\n<br />\n\nHere is an example of how your *analysis directory* should be in case you do want a phyloseq analysis:\n\n```bash\nuser@home-PC:~/Desktop/analysis_directory$ ls\nmydata  parameters.tsv  phyloseq_in_PEMA.R  metadata.csv\n```\n\nand in case you do not:\n\n```bash\nuser@home-PC:~/Desktop/analysis_directory$ ls\nmydata  parameters.tsv \n```\n\n[**Here**](https://github.com/hariszaf/pema/tree/master/analysis_directory) you can find an example of an *analysis directory*.\n\n**An extended list with PEMA's ouput can be found [**here**](https://github.com/hariszaf/pema/blob/master/help_files/PEMA's%20output%20files.md).**\n\n\nNow you are ready to run!\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8401230157564246,
      "result": {
        "original_header": "PEMA: biodiversity in all its different levels",
        "type": "Text_excerpt",
        "value": "Finally, container-based technologies such as Docker and Singularity, make PEMA easy accessible for all operating systems.\nAs you can see in the [PEMA_tutorial.pdf](https://github.com/hariszaf/pema/blob/master/help_files/GitHub%20tutorial.pdf), once you have either Docker or Singularity on your computational environment (see below which suits your case better), running PEMA is cakewalk. You can also find the [**PEMA tutorial**](https://docs.google.com/presentation/d/1lVH23DPa2NDNBhVvOTRoip8mraw8zfw8VQwbK4vkB1U/edit?usp=sharing) as a Google Slides file. \n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9950051484068071,
      "result": {
        "original_header": "A container-based tool",
        "type": "Text_excerpt",
        "value": "PEMA runs either as a [**Docker**](https://www.docker.com/) or as a [**Singularity**](https://sylabs.io/singularity/) image. On the following chapters, you can find how to install PEMA both in Docker and Singlularity including examples. \n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8760296433072529,
      "result": {
        "original_header": "Parameters' file",
        "type": "Text_excerpt",
        "value": "**Always remember** to have the same version of the parameters file with the pema version you are about to use! \n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hariszaf/pema/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "PEMA is under the GNU GPLv3 license (for 3rd party components separate licenses apply).\n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pema"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hariszaf"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 32884,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 16110,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 8532,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 7963,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 2015,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 1425,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 1335,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Singularity",
        "size": 797,
        "type": "Programming_language",
        "value": "Singularity"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://cutadapt.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://ncbi-taxonomist.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hariszaf",
          "type": "User"
        },
        "date_created": "2023-06-19T20:29:36Z",
        "date_published": "2023-09-29T13:42:09Z",
        "description": "## What's Changed\r\n\r\n* essential fixes to make the embeded yaml parse by @marc-portier in https://github.com/hariszaf/pema/pull/37\r\n* Issues raised from the Arms project  by @hariszaf in https://github.com/hariszaf/pema/pull/57\r\n\r\n## New Contributors\r\n* @marc-portier made their first contribution in https://github.com/hariszaf/pema/pull/37\r\n\r\n\r\n",
        "html_url": "https://github.com/hariszaf/pema/releases/tag/v.2.1.5",
        "name": "v.2.1.5",
        "release_id": 123126708,
        "tag": "v.2.1.5",
        "tarball_url": "https://api.github.com/repos/hariszaf/pema/tarball/v.2.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/hariszaf/pema/releases/123126708",
        "value": "https://api.github.com/repos/hariszaf/pema/releases/123126708",
        "zipball_url": "https://api.github.com/repos/hariszaf/pema/zipball/v.2.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hariszaf",
          "type": "User"
        },
        "date_created": "2021-12-04T14:29:52Z",
        "date_published": "2021-12-04T19:40:13Z",
        "description": "This new PEMA release: \r\n\r\n   - is based on a new `pemabase` Docker image ([`pemabase:v.2.1.1`](https://hub.docker.com/layers/hariszaf/pemabase/v.2.1.1/images/sha256-d89052ae0be96c8eaa7f0b5c6b3908d5bac3cfe3c9891a9f26329181352ea29c?context=explore)) which is now completely indepedent from any local resources and the user can build it through the [`Dockerfile.pemabase`](https://github.com/hariszaf/pema/blob/ARMS/pema_docker_image/pemabase/Dockerfile.pemabase) file\r\n   - a new marker gene, the 12S rRNA, is now also supported, by exploiting the [12S Vertebrate Classifier v2.0.0-ref](https://github.com/terrimporter/12SvertebrateClassifier/releases) database\r\n   - for the case of 18S rRNA marker gene, the [PR2 database](https://pr2-database.org/) has been integrated so now the user may select between Silva and PR2  \r\n   - thanks to the [`ncbi-taxonomist`](https://ncbi-taxonomist.readthedocs.io/en/latest/index.html) software, PEMA now provides an extended OTU/ASV table where in last column the NCBI Taxonomy Id \r\n   for the taxonomic level closer to the species name rank for which there is one, is available   \r\n\r\nIn addition, in this release: \r\n   - a `sannity_check` folder with datasets and parameters files for multiple combinations are now available, so tests can be performed to check whether `pema` runs properly after edits.\r\n   - bugs during the analysis of 18S data have been fixed\r\n   - the `perSample` outputs have been fixed \r\n   - convertion of non ena format raw data for multiple sequencers is supported  \r\n",
        "html_url": "https://github.com/hariszaf/pema/releases/tag/v.2.1.4",
        "name": "pema v.2.1.4",
        "release_id": 54637138,
        "tag": "v.2.1.4",
        "tarball_url": "https://api.github.com/repos/hariszaf/pema/tarball/v.2.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/hariszaf/pema/releases/54637138",
        "value": "https://api.github.com/repos/hariszaf/pema/releases/54637138",
        "zipball_url": "https://api.github.com/repos/hariszaf/pema/zipball/v.2.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hariszaf",
          "type": "User"
        },
        "date_created": "2021-12-04T14:29:52Z",
        "date_published": "2021-12-01T17:37:07Z",
        "description": "This new PEMA release (Docker image can be found [here](https://hub.docker.com/layers/hariszaf/pema/v.2.1.4/images/sha256-f41c70a6fb89f325fa4f7c031a830a9e4b72da0ef3e2e33a96e58ce36fd9d37c?context=repo)) has the following: \r\n\r\n- it is based on this new `pemabase` (see `Dockerfile.pemabase`)\r\n- this new [`pemabase` (v.2.1.1)](https://hub.docker.com/layers/hariszaf/pemabase/v.2.1.0/images/sha256-52760a055cf8e951dc0aa464a015d1a4c21dbe41d27aaba0e138084813e0925d?context=explore) image is now available addressing issue #31  \r\n- the `perSample` outputs have been fixed (bug issue #25 )\r\n- enhanced convertion of non ena format raw data (issue #19 )\r\n- bugs during the analysis of 18S data have been fixed (issues #22 and #24 )\r\n- a `sannity_check` folder with datasets and parameters files for multiple combinations are now available, so tests can be performed to check whether `pema` runs properly after edits.\r\n\r\n\r\n\r\n\r\n",
        "html_url": "https://github.com/hariszaf/pema/releases/tag/v.2.1.4_beta",
        "name": "pema v.2.1.4",
        "release_id": 54340181,
        "tag": "v.2.1.4_beta",
        "tarball_url": "https://api.github.com/repos/hariszaf/pema/tarball/v.2.1.4_beta",
        "type": "Release",
        "url": "https://api.github.com/repos/hariszaf/pema/releases/54340181",
        "value": "https://api.github.com/repos/hariszaf/pema/releases/54340181",
        "zipball_url": "https://api.github.com/repos/hariszaf/pema/zipball/v.2.1.4_beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hariszaf",
          "type": "User"
        },
        "date_created": "2021-06-05T18:20:46Z",
        "date_published": "2021-06-10T17:55:05Z",
        "description": "This is the first PEMA release under its new architecture. \r\n\r\nCustom reference databases are now supported too. \r\n\r\n",
        "html_url": "https://github.com/hariszaf/pema/releases/tag/v.2.1.3",
        "name": "pema v.2.1.3",
        "release_id": 44432565,
        "tag": "v.2.1.3",
        "tarball_url": "https://api.github.com/repos/hariszaf/pema/tarball/v.2.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/hariszaf/pema/releases/44432565",
        "value": "https://api.github.com/repos/hariszaf/pema/releases/44432565",
        "zipball_url": "https://api.github.com/repos/hariszaf/pema/zipball/v.2.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hariszaf",
          "type": "User"
        },
        "date_created": "2019-11-25T12:27:21Z",
        "date_published": "2019-11-25T12:28:49Z",
        "description": "\r\n[pema_v1_2.txt](https://github.com/hariszaf/pema/files/3886650/pema_v1_2.txt)\r\n\r\n\r\n",
        "html_url": "https://github.com/hariszaf/pema/releases/tag/v1.2",
        "name": "PEMA.bds",
        "release_id": 21730926,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/hariszaf/pema/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/hariszaf/pema/releases/21730926",
        "value": "https://api.github.com/repos/hariszaf/pema/releases/21730926",
        "zipball_url": "https://api.github.com/repos/hariszaf/pema/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hariszaf",
          "type": "User"
        },
        "date_created": "2019-11-25T12:20:09Z",
        "date_published": "2019-11-25T12:25:44Z",
        "description": "[pema_v1_1.txt](https://github.com/hariszaf/pema/files/3886553/pema_v1_1.txt)\r\n",
        "html_url": "https://github.com/hariszaf/pema/releases/tag/v1.1",
        "name": "PEMA.bds",
        "release_id": 21730848,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/hariszaf/pema/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/hariszaf/pema/releases/21730848",
        "value": "https://api.github.com/repos/hariszaf/pema/releases/21730848",
        "zipball_url": "https://api.github.com/repos/hariszaf/pema/zipball/v1.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "For any troubles you may have when running PEMA or for any potential improvevments you would like to suggest, please share on the <a href=\"https://gitter.im/pema-helpdesk/community\">PEMA Gitter community</a>.",
        "parent_header": [
          "PEMA:",
          "a flexible Pipeline for Environmental DNA Metabarcoding Analysis of the 16S/18S rRNA, ITS and COI marker genes"
        ],
        "type": "Text_excerpt",
        "value": "\n[![Gitter](https://badges.gitter.im/pema-helpdesk/community.svg)](https://gitter.im/pema-helpdesk/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n\n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "download",
    "requirements",
    "contact",
    "contributors",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:29:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get",
        "parent_header": [
          "Table of Contents",
          "Get-set-go PEMA!"
        ],
        "type": "Text_excerpt",
        "value": "### Get\n\nTo get PEMA running you first need to make sure you either have **[Singularity]( https://www.sylabs.io/guides/3.0/user-guide/quick_start.html#quick-installation-steps )** , \nor Docker on your computing environment. \n\nIn case you are working on Singularity, you may run the following command to get the PEMA Singularity image:\n\n```\n singularity pull pema_v.2.1.4.sif https://gitlab.com/microbactions/pema-singularity-images-v.2.1.4/-/raw/main/pema_v.2.1.4.sif \n```\n\nThis will take some time but once it's downloaded you have PEMA ready to go!\n\n\nSimilarly, in case you are working on Docker you need to run: \n```bash=\ndocker pull hariszaf/pema:v.2.1.4\n```\ninstead.\n\nA version of Docker is avalable for all Windows, Mac and Linux. \nIf you have Windows 10 Pro or your Mac's hardware in after 2010, then you can insall Docker straightforward. \nOtherwise, you need to install the [Docker toolbox](https://docs.docker.com/toolbox/) instead. \nYou can check if your System Requirements are according to the ones mentioned below in order to be sure what you need to do.\n\n\nYou are now ready to set up your analysis PEMA run! \n\n\n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Go",
        "parent_header": [
          "Table of Contents",
          "Get-set-go PEMA!"
        ],
        "type": "Text_excerpt",
        "value": "Either you are working on Docker or in Singularity, running PEMA has two discrete steps: \n\n   1. A container needs to be initiated having your analysis directory mounted under a certain directory\n   2. Run pema\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker",
        "parent_header": [
          "Table of Contents",
          "Get-set-go PEMA!",
          "Go"
        ],
        "type": "Text_excerpt",
        "value": "To do so using Docker, you will first run:\n\n```bash\ndocker run -it -v /<path_to_analysis_directory>/:/mnt/analysis hariszaf/pema\n```\n\nThe `-v` flag allows to the container you built, have access to everything included under your `<path_to_analysis_directory>`. \nAll PEMA's outuput will be there too\n\n\nFrom the inside of the PEMA container, the only thing remaining to do now, is to run PEMA:\n\n```bash\n./pema_latest.bds\n```\n\nPEMA is now running!\n\nThe runtime of PEMA depends on the computational features of your environment, on the size of your data, as well as the parameters you chose.\n\n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Singularity",
        "parent_header": [
          "Table of Contents",
          "Get-set-go PEMA!",
          "Go"
        ],
        "type": "Text_excerpt",
        "value": "In case you are working on Singularity, you may implement both these steps with a single command \nby running:\n\n```bash\nsingularity run -B /<path_to_analysis_directory>/:/mnt/analysis /<path_to>/pema_v.2.1.4.sif\n```\n\nThe `pema_v.2.1.4.sif` may be called differently according to the pema version you 're using.\n\n\n\n> For further information, you can always check on [PEMA's website](https://hariszaf.github.io/pema_documentation/2.running_general/).\n\n\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/hariszaf/pema/master/README.md",
      "technique": "header_analysis"
    }
  ]
}