{
  "application_domain": [
    {
      "confidence": 12.05,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PlusoneD/scSemiAE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-19T11:59:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-15T03:56:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "the source code of  scSemiAE"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9879001427858801,
      "result": {
        "original_header": "scSemiAE",
        "type": "Text_excerpt",
        "value": "The implementation of \"scSemiAE: A deep model with semi-supervised learning for single-cell transcriptomics\". Single cell Semi-supervised AutoEncoder is a dimensionality reduction approach for better identification of cell subpopulations. For reproducing the paper results, please visit ***. \n"
      },
      "source": "https://raw.githubusercontent.com/PlusoneD/scSemiAE/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PlusoneD/scSemiAE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PlusoneD/scSemiAE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PlusoneD/scSemiAE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scSemiAE"
      },
      "source": "https://raw.githubusercontent.com/PlusoneD/scSemiAE/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "scSemiAE"
        ],
        "type": "Text_excerpt",
        "value": "pip install git+https://github.com/PlusoneD/scSemiAE.git\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/PlusoneD/scSemiAE/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9584713544347936,
      "result": {
        "original_header": "About file",
        "type": "Text_excerpt",
        "value": "\u2502  README.md    // help\n\u2514\u2500code                // related codes of scSemiAE\n    \u2502  data.py        //  data simulation for test\n    \u2502  run.py          //  an example\n    \u2502  dataset \n          \u2502   expression_matrix.txt       \n          \u2514\u2500  metadata.txt          \n    \u2514\u2500model\n          \u2502   dataset.py        // dataset type for training model \n          \u2502    inference.py    // classification method\n          \u2502   loss.py              //  loss function\n          \u2502    metrics.py       //  metrics calculation \n          \u2502   net.py                //  model network \n          \u2502   scSemiAE.py     //  model class\n          \u2514\u2500  utils.py            //  some tool function \n"
      },
      "source": "https://raw.githubusercontent.com/PlusoneD/scSemiAE/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PlusoneD/scSemiAE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scSemiAE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "PlusoneD"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 31347,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PlusoneD/scSemiAE/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:36:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "scSemiAE"
        ],
        "type": "Text_excerpt",
        "value": "To train a model based on a dataset, please run 'run.py'. The parameters are listed below.\n\n\n\n--data_path: path to the dataset folder, default=\"./dataset/\"\n\n--save_path: path to the output directory, default=\"./output/\"\n\n--lab_size: labeled set size for each cell type, default=10\n\n--lab_ratio: labeled set ratio for each cell type, default= -1\n\n--cuda: enables cuda\n\n--pretrain_batch: batch size for pretraining, default=100\n\n--epochs: number of epochs to train for, default=60\n\n--nepoch_pretrain: number of epochs to pretrain for, default=50\n\n--learning_rate: learning rate for the model, default=0.001\n\n--lr_scheduler_step: StepLR learning rate scheduler step, default=10\n\n--lr_scheduler_gamma: StepLR learning rate scheduler gamma, default=0.5\n\n--Lambda: weight for L2, default=1\n\n--visual: visualization of data. default=False\n\n\n\nif you don't want to change the parameter, you can only put the data (two files) into \"./dataset/\" and execute: \n\npython run.py\n\nof note\uff0cthe data need to meet some requirements such as \"expression_matrix.txt\" and \"metadata.txt\".\n"
      },
      "source": "https://raw.githubusercontent.com/PlusoneD/scSemiAE/master/README.md",
      "technique": "header_analysis"
    }
  ]
}