{
  "application_domain": [
    {
      "confidence": 0.8628767899220129,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite",
        "type": "Text_excerpt",
        "value": "If you used our work in your research, please consider citing our paper\n\nQiao Liu, Zhiqiang Hu, Rui Jiang, Mu Zhou, DeepCDR: a hybrid graph convolutional network for predicting cancer drug response, Bioinformatics, 2020, 36(2):i911-i918.\n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kimmo1019/DeepCDR"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "If you have any question regard our code or data, please do not hesitate to open a issue or directly contact me (liuqiao@stanford.edu)\n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-25T01:59:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-13T08:05:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Cancer Drug Response Prediction via a Hybrid Graph Convolutional Network"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.996683483510248,
      "result": {
        "original_header": "DeepCDR",
        "type": "Text_excerpt",
        "value": "This work has been accepted to [ECCB2020](https://eccb2020.info/)([slides](https://github.com/kimmo1019/DeepCDR/blob/master/DeepCDR_ECCB_presentation.pdf)) and was also published in the journal [Bioinformatics](https://academic.oup.com/bioinformatics/article/36/Supplement_2/i911/6055929).\n \n ![model](https://github.com/kimmo1019/DeepCDR/blob/master/model.png)\n \n DeepCDR is a hybrid graph convolutional network for cancer drug response prediction. It takes both multi-omics data of cancer cell lines and drug structure as inputs and predicts the drug sensitivity (binary or contineous IC50 value). \n \n # Requirements\n- Keras==2.1.4\n- TensorFlow==1.13.1\n- hickle >= 2.1.0\n \n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9101877978818268,
      "result": {
        "original_header": "Instructions",
        "type": "Text_excerpt",
        "value": "We provide detailed step-by-step instructions for running DeepCDR model including data preprocessing, model training, and model test.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9170919415063673,
      "result": {
        "original_header": "Model implementation",
        "type": "Text_excerpt",
        "value": "**Step 1: Data Preparing** \n\nThree types of raw data are required to generate genomic mutation matrix, gene expression matrix and DNA methylation matrix from CCLE database. \nAfter data preprocessed, the three following preprocessed files will be in located in `data` folder. \n`genomic_mutation_34673_demap_features.csv` --  genomic mutation matrix where each column denotes mutation locus and each row denotes a cell line \n`genomic_expression_561celllines_697genes_demap_features.csv` -- gene expression matrix where each column denotes a coding gene and each row denotes a cell line \n`genomic_methylation_561celllines_808genes_demap_features.csv` -- DNA methylation matrix where each column denotes a methylation locus and each row denotes a cell line \nWe recommend to start from the preprocessed data. Please note that each preprocessed file is in `csv` format, of which the column and row name are provided to speficy `mutation location`, `gene name`, `methylation location` and corresponding `Cell line`. \nEach drug in our study will be represented as a graph containing nodes and edges. From the GDSC database, we collected 223 drugs that have unique Pubchem ids. Note that a drug under different screening condition (different GDSC drug id) may share the same Pubchem id.\nHere, we used [deepchem](https://github.com/deepchem/deepchem) library for extracting node features and gragh of a drug. The node feature  (75 dimension) corresponds to a stom in within a drug, which includes atom type, degree and hybridization, etc.  \nWe recorded three types of features in a list as following\n```python\ndrug_feat = [node_feature, adj_list, degree_list]\nnode_feature - features of all atoms within a drug with size (nb_atom, 75)\nadj_list - adjacent list of all atoms within a drug. It denotes the all the neighboring atoms indexs\ndegree_list - degree list of all atoms within a drug. It denotes the number of neighboring atoms \n```\n \nPlease note that we provided the extracted features of 223 drugs from GDSC database, just unzip the `drug_graph_feat.zip` file in `data/GDSC` folder \n\n**Step 3: DeepCDR model training and testing** \n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9240423630612608,
      "result": {
        "original_header": "External patient data",
        "type": "Text_excerpt",
        "value": "We also provided the external patient data downloaded from [Firehose Broad GDAC](http://gdac.broadinstitute.org/runs/stddata__2016_01_28/). The patient data were preprocessed the same way as cell line data. The preprocessed data can be downloaded from our [Server](https://cloud.tsinghua.edu.cn/f/f0d3420e712c43c9a688/).  \n`mut.csv` - Genomic mutation profile of patients \n`expr.csv` - Gene expression profile of patients \n`methy.csv` - DNA methylation profile of patients \nNote that the preprocessed patient data (`csv` format) have exact the same columns names as the three cell line data (`genomic_mutation_34673_demap_features.csv`, `genomic_expression_561celllines_697genes_demap_features.csv`, `genomic_methylation_561celllines_808genes_demap_features.csv`). The only difference is that the row name of patient data were replaced with patient unique barcode instead of cell line name. \nSuch format-consistent data is easy for external evaluation by repacing the cell line data with patient data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9311905198969462,
      "result": {
        "original_header": "Predicted missing data",
        "type": "Text_excerpt",
        "value": "As GDSC database only measured IC50 of part cell line and drug paires. We applied DeepCDR to predicted the missing IC50 values in GDSC database. The predicted results can be find at `data/Missing_data_pre/records_pre_all.txt`. Each record represents a predicted drug and cell line pair. The records were sorted by the predicted median IC50 values of a drug (see Fig.2E).\n \n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kimmo1019/DeepCDR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kimmo1019/DeepCDR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kimmo1019/DeepCDR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepCDR"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/model.png"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "DeepCDR can be downloaded by\n```shell\ngit clone https://github.com/kimmo1019/DeepCDR\n```\nInstallation has been tested in a Linux/MacOS platform.\n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8275173754759118,
      "result": {
        "original_header": "Model implementation",
        "type": "Text_excerpt",
        "value": "`CCLE_RRBS_TSS_1kb_20180614.txt` - DNA methylation profile from CCLE database \n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8179133177743818,
      "result": {
        "original_header": "Model implementation",
        "type": "Text_excerpt",
        "value": "\n`CCLE_mutations.csv` - Genomic mutation profile from CCLE database \n`CCLE_expression.csv` - Gene expression profile from CCLE database \n`CCLE_RRBS_TSS_1kb_20180614.txt` - DNA methylation profile from CCLE database \n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9263523945979931,
      "result": {
        "original_header": "DeepCDR regression model",
        "type": "Text_excerpt",
        "value": "```python\npython run_DeepCDR.py -gpu_id [gpu_id] -use_mut [use_mut] -use_gexp [use_gexp] -use_methy [use_methy] \n[gpu_id] - set GPU card id (default:0)\n[use_mut] - whether use genomic mutation data (default: True)\n[use_gexp] - whether use gene expression data (default: True)\n[use_methy] - whether use DNA methylation data (default: True)\n```\nOne can run `python run_DeepCDR.py -gpu_id 0 -use_mut True -use_gexp True -use_methy True` to implement the DeepCDR regression model. \n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.928872908313477,
      "result": {
        "original_header": "DeepCDR classification model",
        "type": "Text_excerpt",
        "value": "```python\npython run_DeepCDR_classify.py -gpu_id [gpu_id] -use_mut [use_mut] -use_gexp [use_gexp] -use_methy [use_methy] \n[gpu_id] - set GPU card id (default:0)\n[use_mut] - whether use genomic mutation data (default: True)\n[use_gexp] - whether use gene expression data (default: True)\n[use_methy] - whether use DNA methylation data (default: True)\n```\nOne can run `python run_DeepCDR_classify.py -gpu_id 0 -use_mut True -use_gexp True -use_methy True` to implement the DeepCDR classification model. \n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kimmo1019/DeepCDR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Qiao Liu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "This project is licensed under the MIT License - see the LICENSE.md file for details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepCDR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "kimmo1019"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 49556,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kimmo1019/DeepCDR/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:22:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 69
      },
      "technique": "GitHub_API"
    }
  ]
}