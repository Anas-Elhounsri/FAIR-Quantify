{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "SearcHPV"
        ],
        "type": "Text_excerpt",
        "value": "SearcHPV: a novel approach to identify and assemble human papillomavirus-host genomic integration events in cancer --- Accepted by Cancer\n"
      },
      "source": "https://raw.githubusercontent.com/mills-lab/SearcHPV/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mills-lab/SearcHPV"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "SearcHPV"
        ],
        "type": "Text_excerpt",
        "value": "wenjingu@umich.edu\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/mills-lab/SearcHPV/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-22T06:02:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-02T06:46:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An HPV integration point detection tool for targeted capture sequencing data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8297006039296675,
      "result": {
        "original_header": "SearcHPV",
        "type": "Text_excerpt",
        "value": "An HPV integration point detection tool for targeted capture sequencing data\n \n"
      },
      "source": "https://raw.githubusercontent.com/mills-lab/SearcHPV/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9798233843067015,
      "result": {
        "original_header": "Introdution",
        "type": "Text_excerpt",
        "value": "* SearcHPV detects HPV fusion sites on both human genome and HPV genome\n* SearcHPV is able to provide locally assembled contigs for each integration events. It will report at least one and at most two contigs for each integration sites. The two contigs will provide information captured for left and right sides of the event.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mills-lab/SearcHPV/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8469776551890636,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "1. Alignment: the marked dupliaction alignment bam file and customized reference genome.\\\\\n2. Genome Fusion Point Calling: orignal callset, filtered callset, filtered clustered callset.\\\\\n3. Assemble: supportive reads, contigs for each integration events (unfiltered).\\\\\n4. HPV fusion Point Calling: alignment bam file for contigs againt human and HPV genome.\\\\\nFinal outputs are under the folder \"call_fusion_virus\": \nsummary of all the integration events : \"HPVfusionPointContig.txt\"\ncontig sequences for all the integration events: \"ContigsSequence.fa\"\n \n"
      },
      "source": "https://raw.githubusercontent.com/mills-lab/SearcHPV/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mills-lab/SearcHPV/tree/main/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://searchpv.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/mills-lab/SearcHPV/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mills-lab/SearcHPV/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mills-lab/SearcHPV/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mills-lab/SearcHPV"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SearcHPV"
      },
      "source": "https://raw.githubusercontent.com/mills-lab/SearcHPV/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9882296852321375,
      "result": {
        "type": "Text_excerpt",
        "value": "|Host | Downloads |\n|:----|:---------:|\n|PyPI | \n"
      },
      "source": "https://raw.githubusercontent.com/mills-lab/SearcHPV/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mills-lab/SearcHPV/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 WenjinGudaisy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/mills-lab/SearcHPV/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SearcHPV"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "mills-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 161897,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 114032,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 11997,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 6519,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mills-lab/SearcHPV/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "WenjinGudaisy",
          "type": "User"
        },
        "date_created": "2021-02-22T06:31:32Z",
        "date_published": "2021-02-22T06:32:32Z",
        "html_url": "https://github.com/mills-lab/SearcHPV/releases/tag/1.0.2",
        "name": "searcHPV 1.0.2",
        "release_id": 38407134,
        "tag": "1.0.2",
        "tarball_url": "https://api.github.com/repos/mills-lab/SearcHPV/tarball/1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/mills-lab/SearcHPV/releases/38407134",
        "value": "https://api.github.com/repos/mills-lab/SearcHPV/releases/38407134",
        "zipball_url": "https://api.github.com/repos/mills-lab/SearcHPV/zipball/1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "WenjinGudaisy",
          "type": "User"
        },
        "date_created": "2021-01-21T20:15:07Z",
        "date_published": "2021-01-21T20:16:38Z",
        "html_url": "https://github.com/mills-lab/SearcHPV/releases/tag/1.0.0",
        "release_id": 36734745,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/mills-lab/SearcHPV/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/mills-lab/SearcHPV/releases/36734745",
        "value": "https://api.github.com/repos/mills-lab/SearcHPV/releases/36734745",
        "zipball_url": "https://api.github.com/repos/mills-lab/SearcHPV/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:20:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting started",
        "parent_header": [
          "SearcHPV"
        ],
        "type": "Text_excerpt",
        "value": "1. Required resources\n* Unix like environment\n\n\n2. Download and install\nFirstly, download and install the required resources.\n    1) Download Anaconda >=4.11.0: https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html#install-linux-silent\n\n    2) Download the \"environment.yaml\" file under this repository\n\n    3) Creat conda environment for SearcHPV:\n        ```\n        conda env create -f [your_path]/environment.yaml\n\n        ```\n        This command will automatically set up all the third-party tools and packages required for SearcHPV and install latest version of SearcHPV. The name of the environment is \"searcHPV\".\n\n        You can check the packages and tools in this environment by:\n\n        ```\n        conda list -n searcHPV\n\n        ```\n\n        You can update the environment by:\n        ```\n        conda env update -f [your_path]/environment.yaml\n\n        ```\n\n\n\n3. Usage\n\nSearcHPV have four main steps. You could either run it start-to-finish or run it step-by-step.\n\n* Before running SearcHPV, active the conda environment:\n\n```\nconda activate searcHPV\n\n```\n\nIf you are running commands in a bash script, start with:\n\n```\n#!/bin/bash\nsource ~/anaconda3/etc/profile.d/conda.sh;\nconda activate searcHPV; \n#[searcHPV commands...]\n```\nNote: Please check your path of \"conda.sh\" if you did not install Anaconda in the home directory.\n\n* Usage of searcHPV:\n\n```\nsearcHPV <options> ...\n```\n* Standard options:\n```\n -fastq1 <str>  sequencing data: fastq/fq.gz file\n -fastq2 <str>  sequencing data: fastq/fq.gz file\n -humRef <str>  human reference genome: fasta file\n -virRef <str>  HPV reference genome: fasta file\n```\n* Optional options:\n```\n-h, --help      show this help message and exit\n-window <int>   the length of region searching for informative reads, default=300\n-output <str>   output directory, default \"./\"\n-alignment      run the alignment step, step1\n-genomeFusion   call the genome fusion points, step2\n-assemble local assemble for each integration event, step3\n-hpvFusion call the HPV fusion points, step4\n-clusterWindow <int> the length of window of clustering integration sites,default=100\n-gz             if fastq files are in gz format\n-poly(dn) N     poly(n), n*d(A/T/C/G), will report low confidence if contig contains poly(n), default=20\n-index          index the original human and virus reference files, default=False\n```\n\nNote: If you've already indexed the virus and human reference files for BWA, Samtools, Picard, you do not need to add the \"-index\" option, especailly when you are running for a batch of samples that share the same virus and human reference files and you do not want to spend time on indexing references every time running a sample. The commands for indexing the virus and human reference files:\n\n```\n#activate SearcHPV conda environment first to make sure using the correct versions of tools\nref = '[path_of_your_reference_file]'\nbwa index {ref}\nsamtools faidx {ref}\npicard CreateSequenceDictionary R={ref} O={ref.replace('.fa','.dict')\n```\n\n\n4. Examples:\n\n    1) Run it start-to-finish and submit a SBATCH job:\n        ```\n        #!/bin/bash\n        #SBATCH --job-name=searcHPV\n        #SBATCH --mail-user=wenjingu@umich.edu\n        #SBATCH --mail-type=BEGIN,END\n        #SBATCH --cpus-per-task=1\n        #SBATCH --nodes=1\n        #SBATCH --ntasks-per-node=8\n        #SBATCH --mem=40gb\n        #SBATCH --time=100:00:00\n        #SBATCH --account=XXXXX\n        #SBATCH --partition=standard\n        #SBATCH --output=searcHPV.log\n        #SBATCH --error=searcHPV.err\n        source ~/anaconda3/etc/profile.d/conda.sh;\n        conda activate searcHPV;      \n        searcHPV -fastq1 Sample_81279.R1.fastq.gz -fastq2 Sample_81279.R2.fastq.gz -humRef hs37d5.fa -virRef HPV.fa -output /home/scratch/HPV_fusion/Sample_81279 -gz -index;\n        ```\n\n\n    2) Run it step-by-step:\n\n\n        ```\n        searchHPV -alignment -fastq1 Sample_81279.R1.fastq.gz -fastq2 Sample_81279.R2.fastq.gz -humRef hs37d5.fa -virRef HPV.fa -output /home/scratch/HPV_fusion/Sample_81279 -gz -index\n        searchHPV -genomeFusion -fastq1 Sample_81279.R1.fastq.gz -fastq2 Sample_81279.R2.fastq.gz -humRef hs37d5.fa -virRef HPV.fa -output /home/scratch/HPV_fusion/Sample_81279 -gz\n        searchHPV -assemble -fastq1 Sample_81279.R1.fastq.gz -fastq2 Sample_81279.R2.fastq.gz -humRef hs37d5.fa -virRef HPV.fa -output /home/scratch/HPV_fusion/Sample_81279 -gz\n        searchHPV -hpvFusion -fastq1 Sample_81279.R1.fastq.gz -fastq2 Sample_81279.R2.fastq.gz -humRef hs37d5.fa -virRef HPV.fa -output /home/scratch/HPV_fusion/Sample_81279 -gz\n\n        ```\n        Note: if run it step-by-step, please make sure the output directories for all steps are the same.\n"
      },
      "source": "https://raw.githubusercontent.com/mills-lab/SearcHPV/main/README.md",
      "technique": "header_analysis"
    }
  ]
}