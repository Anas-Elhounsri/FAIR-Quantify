{
  "application_domain": [
    {
      "confidence": 0.9446909576325657,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/horsedayday/DualGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-29T14:09:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-10T09:47:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9987909974742021,
      "result": {
        "original_header": "DualGCN",
        "type": "Text_excerpt",
        "value": "DualGCN is a unified Dual Graph Convolutional Network model to predict cancer drug response. It takes chemical structure information of a drug and gene features of a cancer sample as inputs and outputs IC50. \n"
      },
      "source": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/horsedayday/DualGCN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/horsedayday/DualGCN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "horsedayday/DualGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DualGCN"
      },
      "source": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/./model.png"
      },
      "source": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "DualGCN can be downloaded by\n```shell\ngit clone https://github.com/horsedayday/DualGCN\n```\nInstallation has been tested in a Linux/MacOS platform.\n"
      },
      "source": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Cell line data preparation",
        "parent_header": [
          "Instructions"
        ],
        "type": "Text_excerpt",
        "value": "We collected gene expression and copy number variation data from [CCLE database](https://depmap.org/portal/download/). These gene features of cell lines could be found in `data/CCLE/omics_data`. We curated cancer-related genes from the TCGA and COSMIC. These genes were used and could be found in `data/CCLE/gene_list.txt`. We filtered out cell lines if (1) either gene expression or CNV data are unavailable, or (2) cancer type annotations are missed, or (3) sample size of the corresponding cancer type is less than 10. Finally, we collected 525 cell lines covering 27 kinds of cancers. Lists of these cell lines could be found in `data/CCLE/cellline_list.txt`. We built graphs of cancer samples with protein-protein interactions (PPIs). These PPIs were obtained from [STRING database](https://string-db.org/) (version 11.0). These PPI data could be found in `data/PPI/PPI_network.txt`. \n"
      },
      "source": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Drug data preparation",
        "parent_header": [
          "Instructions"
        ],
        "type": "Text_excerpt",
        "value": "Drug information was obtained from the [GDSC database](https://www.cancerrxgene.org/compounds)(version: GDSC1). We only kept drugs that are recorded in the PubChem. In addition, drugs sharing the same PubChem identifiers but owning different GDSC identifiers were also filtered out. Finally, we collected 208 drugs. We applied [deepchem](https://github.com/deepchem/deepchem) library to extract features of atoms of drugs. The parsed features and adjacency information of drugs were put in `data/drug/drug_graph_feat`.\n"
      },
      "source": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9996669070696504,
      "result": {
        "original_header": "DualGCN",
        "type": "Text_excerpt",
        "value": " ![model](./model.png)\n \n # Requirements\n- Keras == 2.1.4\n- TensorFlow == 1.13.1\n- hickle == 2.1.0\n- numpy >= 1.19.2\n- scipy >= 1.5.2\n- sklearn >= 0.24.2\n- pandas >= 1.1.3\n \n"
      },
      "source": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8448091268694092,
      "result": {
        "original_header": "DualGCN prediction",
        "type": "Text_excerpt",
        "value": "Main function and models were put in the code folder. \n```python\npython DualGCN.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/horsedayday/DualGCN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Tianxing Ma\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "This project is licensed under the MIT License - see the LICENSE.md file for details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DualGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "horsedayday"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 25997,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/horsedayday/DualGCN/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:45:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ]
}