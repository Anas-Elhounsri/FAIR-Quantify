{
  "application_domain": [
    {
      "confidence": 29.39,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite",
        "type": "Text_excerpt",
        "value": "- :smile_cat: This work has been presented at [ISMB/ECCB 2019](https://www.iscb.org/ismbeccb2019);\n- :paw_prints: Go to [my poster](https://f1000research.com/posters/8-1359);\n- :page_with_curl: Reference: *Wu M, Kanev K, Roelli P and Zehn D. PySCNet:\nA tool for reconstructing and analyzing gene regulatory network from single-cell RNA-Seq data [version 1; not peer reviewed]. F1000Research 2019, 8(ISCB Comm J):1359 (poster) (doi: 10.7490/f1000research.1117280.1)*\n"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MingBit/PySCNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-04-18T15:22:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-17T18:38:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A python package for single cell network analysis"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9812710571819412,
      "result": {
        "original_header": "PySCNet: A tool for reconstructing and analyzing gene regulatory network from single-cell RNA-Seq data",
        "type": "Text_excerpt",
        "value": "There are four modules:\n1) **Pro-precessing**: initialize a gnetData object consisting of Expression Matrix, Cell Attributes, Gene Attributes and Network Attributes;\n2) **BuildNet**: reconstruct GRNs by various methods implemented in docker;\n3) **NetEnrich**: network analysis including consensus network detection, gene module identification and trigger path prediction as well as network fusion;\n4) **Visulization**: network illustration. \n"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9929510998147006,
      "result": {
        "original_header": ":tada: :confetti_ball: Create your own GRNs",
        "type": "Text_excerpt",
        "value": "[Dashboard](https://github.com/MingBit/PySCNet/blob/master/images/pyscnet_dashboard.gif) is available now for creating your own GRNs.\nCell specific GRNs and network analysis results can be saved as a pickle object and upload onto PySCNet-Dashboard.\nIt provides parameter settings and allows for parameter adjustment and GRNs customization. <br/>\nTo run the python dashboard: <br/>\n`cd PySCNet/pyscnet/dash_pyscnet/` <br/>\n`python app.py`  \n"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9585720474499207,
      "result": {
        "original_header": "TO-DO",
        "type": "Text_excerpt",
        "value": "1) Add an Auto-ML based pipeline to Pre-Processing module;\n2) Collect more GRN methods to BuildNet module;\n3) Update network fusion algorithms to NetEnrich module;\n5) Test with integrated sc RNA-seq data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pyscnet.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MingBit/PySCNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MingBit/PySCNet/master/tutorial/pyscnet_stream.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/tutorial/pyscnet_stream.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MingBit/PySCNet/master/tutorial/pyscnet_scanpy.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/tutorial/pyscnet_scanpy.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MingBit/PySCNet/master/tutorial/scanpy_pbmc.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/tutorial/scanpy_pbmc.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MingBit/PySCNet/master/tutorial/stream_trajectory.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/tutorial/stream_trajectory.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MingBit/PySCNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MingBit/PySCNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PySCNet: A tool for reconstructing and analyzing gene regulatory network from single-cell RNA-Seq data"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MingBit/PySCNet/master/pyscnet/BuildNet/Docker_App/SCNODE2VEC/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/pyscnet/BuildNet/Docker_App/SCNODE2VEC/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MingBit/PySCNet/master/pyscnet/BuildNet/Docker_App/GRNBOOST2/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/pyscnet/BuildNet/Docker_App/GRNBOOST2/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MingBit/PySCNet/master/pyscnet/BuildNet/Docker_App/PIDC/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/pyscnet/BuildNet/Docker_App/PIDC/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MingBit/PySCNet/master/pyscnet/BuildNet/Docker_App/GENIE3/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/pyscnet/BuildNet/Docker_App/GENIE3/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MingBit/PySCNet/master/pyscnet/BuildNet/Docker_App/CORR/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/pyscnet/BuildNet/Docker_App/CORR/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MingBit/PySCNet/master/images/workflow_update.png"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Make sure you have [Docker](https://docs.docker.com/engine/install/ubuntu/) and [graph_tool](https://git.skewed.de/count0/graph-tool/-/wikis/installation-instructions) manually installed. <br/>\n`conda create --name gt -c conda-forge graph-tool python=3.9.7` <br/>\n`conda activate gt`\n\n1) clone from github:\n`git clone https://github.com/MingBit/PySCNet`\n2) create a new folder and set up:\n`mkdir dist | python setup.py sdist`\n3) install pyscnet:\n`pip install dist/pyscnet-0.0.3.tar.gz`\n"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MingBit/PySCNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "docker, network-analysis, single-cell"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2018 The Python Packaging Authority\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PySCNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "MingBit"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 10583100,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 7635050,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 89677,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 22754,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2084,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 958,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Julia",
        "size": 307,
        "type": "Programming_language",
        "value": "Julia"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Procfile",
        "size": 25,
        "type": "Programming_language",
        "value": "Procfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MingBit/PySCNet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://scanpy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MingBit",
          "type": "User"
        },
        "date_created": "2020-07-28T20:31:43Z",
        "date_published": "2020-07-29T07:31:34Z",
        "description": "\r\n",
        "html_url": "https://github.com/MingBit/PySCNet/releases/tag/0.0.2",
        "release_id": 29059808,
        "tag": "0.0.2",
        "tarball_url": "https://api.github.com/repos/MingBit/PySCNet/tarball/0.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/MingBit/PySCNet/releases/29059808",
        "value": "https://api.github.com/repos/MingBit/PySCNet/releases/29059808",
        "zipball_url": "https://api.github.com/repos/MingBit/PySCNet/zipball/0.0.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:31:27",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "type": "Text_excerpt",
        "value": "Make sure you have [scanpy](https://scanpy.readthedocs.io/en/stable/installation.html) and [stream](https://github.com/pinellolab/STREAM) manually installed. <br/>\n`pip install jupyterlab scanpy==1.5.0` <br/>\n`conda install -c bioconda stream` <br/>\n\nYou might need to re-install anndata: `pip install anndata==0.7.4`\n\nMouse HSC data preprocessed and analyzed by stream as explained in this \n[tutorial](https://github.com/MingBit/PySCNet/blob/master/tutorial/pyscnet_stream.ipynb). \n\nopen jupyter-notebook with `/miniconda3/envs/gt/bin/./jupyter-notebook ~/PySCNet/tutorial/pyscnet_stream.ipynb `\n"
      },
      "source": "https://raw.githubusercontent.com/MingBit/PySCNet/master/README.md",
      "technique": "header_analysis"
    }
  ]
}