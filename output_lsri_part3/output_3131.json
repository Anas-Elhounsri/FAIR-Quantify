{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments",
        "parent_header": [
          "MU-Net"
        ],
        "type": "Text_excerpt",
        "value": "R.D.F.'s work has received funding from the European Union's Horizon 2020 Framework Programme under the Marie Sk\u0142odowska Curie grant agreement No #691110 (MICROBRADAM) and J.M.V.' work was founded from Marie Sk\u0142odowska Curie grant agreement No #740264 (GENOMMED). \n\nThe content is solely the responsibility of the authors and does not necessarily represent the official views of the European commission.\n\nWe also extend our thanks to the Academy of Finland, grants (#275453 to A.S. and #298007 to O.G.).\n\n"
      },
      "source": "https://raw.githubusercontent.com/Hierakonpolis/MU-Net/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 39.9,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Hierakonpolis/MU-Net"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-31T11:20:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-23T16:15:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Multi-task U-Net for the simultaneous segmentation and skull-stripping of mouse brain MRI"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9384459191288573,
      "result": {
        "original_header": "MU-Net",
        "type": "Text_excerpt",
        "value": "**[Multi-task U-Net for the simultaneous segmentation and skull-stripping of mouse brain MRI](https://www.biorxiv.org/content/10.1101/2020.02.25.964015v1)**\n![sample image](sample.png)\nThis convolutional neural network is designed to perform skull-stripping and region segmentation on mouse brain MRI. A jupyter notebook going over the deails of this project and the training procedure is available [here](https://github.com/Hierakonpolis/NN4Kubiac). To train this on your data we recommend using the scripts found in our more recent release [MU-Net-R](https://github.com/Hierakonpolis/MU-Net-R) \nDeveloped in PyTorch 1.0.1, the included script also requires nibabel, skimage and tqdm.  \nThis network is trained on coronal T2 mouse brain MRI delineated with a bounding box, and so for the network to function correctly MRI volumes need to be cropped to a bounding box around the brain. To automate this task we include a lightweight auxiliary network. You can exclude this step by using the \"--boundingbox False\" option. \n"
      },
      "source": "https://raw.githubusercontent.com/Hierakonpolis/MU-Net/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Hierakonpolis/MU-Net/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Hierakonpolis/MU-Net/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Hierakonpolis/MU-Net"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MU-Net"
      },
      "source": "https://raw.githubusercontent.com/Hierakonpolis/MU-Net/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Hierakonpolis/MU-Net/master/sample.png"
      },
      "source": "https://raw.githubusercontent.com/Hierakonpolis/MU-Net/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation:",
        "parent_header": [
          "MU-Net"
        ],
        "type": "Text_excerpt",
        "value": "It is recommended to create a virtual environment. For this guide we will assume you are using the [Anaconda](https://www.anaconda.com/) data science platform. You can download Anaconda for your system [here](https://www.anaconda.com/distribution/).\n\n0. Creating a new environment: \n\n    `conda create --name MyEnv`\n    \n1. Activate it: \n\n    `conda activate MyEnv`\n\n2. Install PyTorch. Visit https://pytorch.org/get-started/locally/ and select your OS, package manager and CUDA version. Input the suggested line in your conda environment. It should look like this: \n\n    `conda install pytorch torchvision cudatoolkit=10.0 -c pytorch`\n\n3. Install other required packages: \n\n    `conda install tqdm numpy`\n\n4. These packages are available from a different channel: \n\n    `conda install -c conda-forge scikit-image nibabel scipy`\n\n5. Clone this repository: \n\n    `git clone https://github.com/Hierakonpolis/MU-Net`\n"
      },
      "source": "https://raw.githubusercontent.com/Hierakonpolis/MU-Net/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9209390460453679,
      "result": {
        "original_header": "MU-Net",
        "type": "Text_excerpt",
        "value": "runMU-Net.py : script to run segmentation on nifti MRI volumes \nDeveloped in PyTorch 1.0.1, the included script also requires nibabel, skimage and tqdm.  \n"
      },
      "source": "https://raw.githubusercontent.com/Hierakonpolis/MU-Net/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8171693267985625,
      "result": {
        "original_header": "MU-Net",
        "type": "Text_excerpt",
        "value": "MUNet.py: network definitions \nrunMU-Net.py : script to run segmentation on nifti MRI volumes \n"
      },
      "source": "https://raw.githubusercontent.com/Hierakonpolis/MU-Net/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Hierakonpolis/MU-Net/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Riccardo De Feo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Hierakonpolis/MU-Net/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MU-Net"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Hierakonpolis"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 46603,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Hierakonpolis/MU-Net/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:41:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 22
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage:",
        "parent_header": [
          "MU-Net"
        ],
        "type": "Text_excerpt",
        "value": "python3 runMU-Net.py [options] [list of volumes]\n\n[list of volumes] is a list of paths to nifti volumes separated by spaces\n\nIf a folder path is specified, all .nii and .ni.gz files will be added recursvely\n\nOptions:\n\n--overwrite [True/False]: Overwrite outputs if file already exists (default: False)\n    \n--N3 [True/False]: Load model weights for N3 corrected volumes (default False)\n    \n--multinet [True/False]: use networks trained on all folds and apply majority voting. (default True)\n\n--probmap [True/False]: output unthresholded probability maps rather than the segmented volumes (default False)\n\n--boundingbox [True/False]: automatically estimate bounding box using auxiliary network (default True)\n\n--useGPU [True/False]: run on GPU, requires a CUDA enabled GPU and PyTorch installed with GPU support (default True)\n\n--namemask: only include files containing this string (case sensitive). Example: --namemask MySeq.nii\n\n--nameignore: exclude all files containing this string (case sensitive). Example: --nameignore NotThisSeq.nii\n\nMask volumes are generated in the same folder as the segmented files.\n\nExample: \n\npython3 runMU-Net.py --overwrite True my/favourite/mouse.nii my/other/one.nii\n"
      },
      "source": "https://raw.githubusercontent.com/Hierakonpolis/MU-Net/master/README.md",
      "technique": "header_analysis"
    }
  ]
}