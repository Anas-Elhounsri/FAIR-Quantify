{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hoffmangroup/acidbio"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "`michael.hoffman at utoronto dot ca`\r\n"
      },
      "source": "https://raw.githubusercontent.com/hoffmangroup/acidbio/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-23T19:30:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-28T09:57:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.8433993819118761,
      "result": {
        "original_header": "Acidbio",
        "type": "Text_excerpt",
        "value": "\r\n> Niu YN, Roberts EG, Denisko D, Hoffman MM. 2022. [Assessing and assuring interoperability of a genomics file format](https://doi.org/10.1093/bioinformatics/btac327). *Bioinformatics*, btac327. [https://doi.org/10.1093/bioinformatics/btac327](https://doi.org/10.1093/bioinformatics/btac327)\r\n\r\nThe BED test harness runs tools with a command-line interface against a test suite of expected success and expected fail BED files.\r\nThe test suite aims to improve interoperability of software parsing the BED format as input.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/hoffmangroup/acidbio/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9001614602925802,
      "result": {
        "original_header": "BED badge",
        "type": "Text_excerpt",
        "value": "\r\nAfter testing software on the test harness, you may display a GitHub badge to indicate your software's conformance to the BED specification.\r\n\r\nUsing [shields.io](https://shields.io/), you may configure a badge that describes which BED variants your software parses.\r\nFor example, the following badge indicates that the software parses BED3, BED4, or BED6 files.\r\n\r\n![BED Parser](https://img.shields.io/badge/BED%20Parser-BED3%20%7C%20BED4%20%7C%20BED6-informational)\r\n\r\nYou may also add a badge that indicates your software's performance on the test suite.\r\nFor example, the following badges indicate differing levels of performance on BED6 tests.\r\n\r\n![BED Performance BAD](https://img.shields.io/badge/BED6-61.5%25-red)\r\n![BED Performance](https://img.shields.io/badge/BED6-80.7%25-yellow)\r\n![BED Performance](https://img.shields.io/badge/BED6-100%25-success)\r\n\r\n\r\nWe suggest that performance of $\\leq$ 70% be given `red` background color, performance between 70% and 100% be given `yellow` background color, and performance of 100% be given `success` background color.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/hoffmangroup/acidbio/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hoffmangroup/acidbio/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hoffmangroup/acidbio/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hoffmangroup/acidbio"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Acidbio"
      },
      "source": "https://raw.githubusercontent.com/hoffmangroup/acidbio/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Acidbio"
        ],
        "type": "Text_excerpt",
        "value": "\r\nTo run the test harness, Python 3.5+ is required. The PyYAML package is required for parsing the configuration file.\r\nTo install PyYAML, run `python3 -m pip install -r bed/requirements.txt`. \r\nAlternatively, PyYAML can also be installed using Conda by `conda install -c conda-forge pyyaml`.\r\n\r\nFor testing your own software, clone the repository.\r\n\r\nFor reproducing results from the 80 packages tested in *Assessing and assuring interoperability of a genomics file format*, download the repository from [Zenodo](\r\nhttps://doi.org/10.5281/zenodo.5784763). The Zenodo contains the files in this repository along with the Conda environments used to test the 80 packages.\r\nFor reproducing the results, Conda is required as we tested tools found on Bioconda.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/hoffmangroup/acidbio/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9953005436694049,
      "result": {
        "original_header": "Quickstart",
        "type": "Text_excerpt",
        "value": "\r\nTo test your own software, set up the `config.yaml` file and run the test harness as described below.\r\nConda is not required for testing your own software.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/hoffmangroup/acidbio/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9998066761046793,
      "result": {
        "original_header": "Troubleshooting",
        "type": "Text_excerpt",
        "value": "\r\n- If the software cannot run correctly, the test harness will always show that the software failed on each test case.\r\n- If the test harness does not output anything, it could be because the current Conda environment and the Conda environment in `config.yaml` do not match.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/hoffmangroup/acidbio/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hoffmangroup/acidbio/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "acidbio is free software: you can redistribute it and/or modify it under the terms of version 2 of the GNU General Public License as published by the Free Software Foundation.\r\n\r\nacidbio is distributed in the hope that it will be useful, but WITHOUT\r\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\nFITNESS FOR A PARTICULAR PURPOSE.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/hoffmangroup/acidbio/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "acidbio"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "hoffmangroup"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 21248,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "ANTLR",
        "size": 9653,
        "type": "Programming_language",
        "value": "ANTLR"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 223,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hoffmangroup/acidbio/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the test harness",
        "parent_header": [
          "Acidbio",
          "Quickstart"
        ],
        "type": "Text_excerpt",
        "value": "\r\nThe test harness is run against one BED variant (BED03 to BED12).\r\nYou must specify which BED variant to run and directory to output the result files to.\r\nFirst, navigate into the `bed` directory of the repository.\r\nWithin the `bed` directory, to run the test harness, run the following:\r\n\r\n```bash\r\npython3 bedrunall.py BED03 ./\r\n```\r\nThis will run the test harness on BED3 tests and log the outputs to the current directory.\r\n\r\nThe full usage of the test harness is:\r\n```\r\nusage: bedrunall.py [-h] [-V] [-v] [-t TOOL] [-e EXCLUDE]\r\n                    [--results-array-file RESULTS_FILENAME]\r\n                    [--failed-good GOOD_TESTS_FILENAME]\r\n                    [--passed-bad BAD_TESTS_FILENAME]\r\n                    bed-version outdir\r\n\r\nTests the tools in config.yaml to see if they appropriately throw warnings or\r\nerrors against a suite of BED files\r\n\r\npositional arguments:\r\n  bed-version           Which BED type to test. Must be one of BED03, BED04,\r\n                        ..., BED12\r\n  outdir                location where all output files go\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -V, --version         show program's version number and exit\r\n  -v, --verbose         display all results\r\n  -t TOOL, --tool TOOL  test a specific program. If unspecified, all tools in\r\n                        config.yaml will be tested.\r\n  -e EXCLUDE, --exclude EXCLUDE\r\n                        test all tools except for this tool. If unspecified,\r\n                        all tools will be tested\r\n  --results-array-file RESULTS_FILENAME\r\n                        output binary results to file. If unspecified, no\r\n                        binary results will be outputted.\r\n  --failed-good GOOD_TESTS_FILENAME\r\n                        output incorrect good test cases to file\r\n  --passed-bad BAD_TESTS_FILENAME\r\n                        output incorrect bad test cases to file\r\n```\r\n\r\nThe `failed-good` output file contains the tested tool's output from expected pass test cases that the tool incorrectly failed. The `passed-bad` output file contains the tested tool's output from expected fail test cases that the tool incorrectly passed. The `results-array-file` is used only for collecting results for visualization.\r\nFor just testing a tool against the test suite, this option should not be specified.\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/hoffmangroup/acidbio/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:25:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "Acidbio",
          "Quickstart"
        ],
        "type": "Text_excerpt",
        "value": "To run the test harness on Samtools, first create a new Conda environment using `conda create -n test_env` and activate it with `conda activate test_env`. Then, install Samtools using `conda install -c bioconda samtools`.\r\nFinally, the use the configuration file below to specify the execution of Samtools from command line and save the file as `config.yaml` in the `bed` directory.\r\n```YAML\r\nsettings:\r\n    file-locations:\r\n        BAM: data/toy.bam\r\ntools:\r\n    - samtools:\r\n        bedcov: samtools bedcov FILE BAM\r\nconda-environment:\r\n    samtools: test_env\r\n```\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/hoffmangroup/acidbio/master/README.md",
      "technique": "header_analysis"
    }
  ]
}