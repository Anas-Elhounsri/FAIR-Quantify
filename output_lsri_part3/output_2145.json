{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cc2qe/vawk"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-06-03T20:34:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-26T17:03:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An awk-like VCF parser"
      },
      "technique": "GitHub_API"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/cc2qe/vawk/wiki"
      },
      "source": "https://raw.githubusercontent.com/cc2qe/vawk/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cc2qe/vawk/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cc2qe/vawk/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cc2qe/vawk"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vawk"
      },
      "source": "https://raw.githubusercontent.com/cc2qe/vawk/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cc2qe/vawk/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2014 Colby Chiang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/cc2qe/vawk/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vawk"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "cc2qe"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 10642,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cc2qe/vawk/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cc2qe",
          "type": "User"
        },
        "date_created": "2014-10-24T01:37:26Z",
        "date_published": "2014-10-24T14:26:22Z",
        "html_url": "https://github.com/cc2qe/vawk/releases/tag/0.0.1",
        "release_id": 651502,
        "tag": "0.0.1",
        "tarball_url": "https://api.github.com/repos/cc2qe/vawk/tarball/0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/cc2qe/vawk/releases/651502",
        "value": "https://api.github.com/repos/cc2qe/vawk/releases/651502",
        "zipball_url": "https://api.github.com/repos/cc2qe/vawk/zipball/0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:51:27",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 54
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "vawk"
        ],
        "type": "Text_excerpt",
        "value": "usage: vawk [-h] [-v VAR] [--header] [--debug] cmd [vcf]\n\npositional arguments:\n  cmd                vawk command syntax is exactly the same as awk syntax with\n                          a few additional features. The INFO field can be split using\n                          the I$ prefix and the SAMPLE field can be split using\n                          the S$ prefix. For example, I$AF prints the allele frequency of\n                          each variant and S$NA12878 prints the entire SAMPLE field for the\n                          NA12878 individual for each variant.\n\n                          The SAMPLE field can be further split based on the keys in the\n                          FORMAT field of the VCF (column 9). For example, S$NA12877$GT\n                          returns the genotype of the NA12878 individual. S$* returns all samples.\n                          \n                          ex: '{ if (I$AF>0.5) print $1,$2,$3,I$AN,S$NA12878,S$NA12877$GT }'\n\n  vcf                VCF file (default: stdin)\n\noptional arguments:\n  -h, --help         show this help message and exit\n  -v VAR, --var VAR  declare an external variable (e.g.: SIZE=10000)\n  --header           print VCF header\n  --debug            debugging level verbosity\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/cc2qe/vawk/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "vawk"
        ],
        "type": "Text_excerpt",
        "value": "Print the variant genotypes for sample CHM1.\n```\n$ vawk '{ print S$CHM1$GT }' CHM1.lumpy.vcf\n```\n\nIf the genotype is 0/1 in CHM1, print a subset of the fields.\n```\n$ vawk -v MYGT=\"0/1\" '{ if (S$CHM1$GT==MYGT) print $1,$2,$3,$4,$5,S$CHM1$SUP }' CHM1.lumpy.vcf  | head\n# 1    755446\t   1  T\t <DEL>\t\t   16\n# 1    839915\t   2  C\t <DEL>\t\t   10\n# 1    900049\t   3  C\t <DEL>\t\t   9\n# 1    965024\t   4  T\t <DEL>\t\t   5\n# 1    2038157\t   5  A\t <DEL>\t\t   5\n# 1    2143123\t   6  T\t <DUP>\t\t   9\n# 1    2367925\t   7  C\t <DEL>\t\t   4\n# 1    2765775\t   8  G\t <DEL>\t\t   4\n# 1    3027000\t   9  G\t <DEL>\t\t   4\n# 1    3092611\t   10 T\t <DUP>\t\t   11\n```\n\nIf the genotype of sample NA12878 is 0/1 and QUAL > 6, print the genotype and supporting evidence types for the variant.\n```\n$ zcat ceph1463.lumpy.vcf.gz | vawk '{if (S$NA12878$GT==\"0/1\" && $6>6) print S$NA12891$GT, I$EVTYPE}'  | head\n# 0/1   PE_ALONE\n# 0/0   PE_ALONE\n# 0/1   PE_ALONE\n# 0/1   PE_ALONE\n# 0/0   PE_ALONE\n# 0/1   SR_ALONE\n# 0/0   PE_ALONE\n# 0/1   PE_SR\n# 0/0   PE_ALONE\n# 0/1   PE_ALONE\n```\n\nIf the genotype of sample NA12878 is 0/1, print the entire line. Also, include the VCF header in the output.\n```\n$ zcat ceph1463.lumpy.vcf.gz | vawk --header 'S$NA12878$GT==\"0/1\"'\n```\n\nIf the variant has split-read support greater than 3, print a subset of the info fields.\n```\n$ zcat ceph1463.lumpy.vcf.gz | vawk '{ if (I$SRSUP>3) print $1,$4,$5,$2,I$END, I$END-$2, I$SVLEN, I$EVTYPE, I$PESUP, I$SRSUP} ' | head\n# 1 A   <DEL>   988595  988622  27  -27 PE_SR   1   9\n# 1 C   <DEL>   991860  991981  121 -121    SR_ALONE    0   21\n# 1 G   <DEL>   1142719 1143139 420 -420    PE_SR   1   12\n# 1 C   <DEL>   1362765 1362821 56  -56 SR_ALONE    0   6\n# 1 A   <DEL>   1530383 1530685 302 -302    PE_SR   2   86\n# 1 T   <DUP>   1880413 1880554 141 141 SR_ALONE    0   8\n# 1 G   <DUP>   1912966 1913504 538 538 SR_ALONE    0   4\n# 1 T   <DEL>   2054429 2055813 1384    -1384   SR_ALONE    0   40\n# 1 C   <DUP>   2212237 2213976 1739    1739    SR_ALONE    0   9\n# 1 G   <DEL>   2837835 2837901 66  -66 SR_ALONE    0   113\n```\n\nPrint a genotype field for all samples with '*'\n```\n$ zcat mult_gt_rd.sv.vcf.gz | vawk '{ print S$*$GT }' | head\n# 0/0  0/0\n# 0/1  1/1\n# 0/0  0/0\n# 0/0  0/1\n# 0/0  0/1\n# 0/1  0/0\n# 0/0  0/0\n# 0/0  0/0\n# 0/0  0/0\n# 0/0  0/1\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cc2qe/vawk/master/README.md",
      "technique": "header_analysis"
    }
  ]
}