{
  "application_domain": [
    {
      "confidence": 88.14,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jbohnslav/deepethogram"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-08-18T16:13:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T09:32:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9409112622646382,
      "result": {
        "original_header": "DeepEthogram",
        "type": "Text_excerpt",
        "value": "DeepEthogram is an open-source package for automatically classifying each frame of a video into a set of pre-defined \nbehaviors. Designed for neuroscience research, it could be used in any scenario where you need to detect actions from \neach frame of a video. \nExample use cases:\n* Measuring itching or scratching behaviors to assess the differences between wild-type and mutant animals\n* Measuring the amount of time animals spend courting, and comparing between experimental conditions\n* Counting licks from video for appetite measurement\n* Measuring reach onset times for alignment with neural activity \nDeepEthogram uses state-of-the-art algorithms for *temporal action detection*. We build on the following previous machine \nlearning research into action detection:\n* [Hidden Two-Stream Convolutional Networks for Action Recognition](https://arxiv.org/abs/1704.00389)\n* [Temporal Gaussian Mixture Layer for Videos](https://arxiv.org/abs/1803.06316) \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9427438992741293,
      "result": {
        "original_header": "COLAB",
        "type": "Text_excerpt",
        "value": "I've written a Colab notebook that shows how to upload your data and train models. You can also use this if you don't \nhave access to a decent GPU.  \nTo use it, please [click this link to the Colab notebook](https://colab.research.google.com/drive/1Nf9FU7FD77wgvbUFc608839v2jPYgDhd?usp=sharing). \nThen, click `copy to Drive` at the top. You won't be able to save your changes to the notebook as-is.  \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9496682119159248,
      "result": {
        "original_header": "News",
        "type": "Text_excerpt",
        "value": "We now support docker! Docker is a way to run `deepethogram` in completely reproducible environments, without interacting\nwith other system dependencies. [See docs/Docker for more information](docs/docker.md)\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8204642421676196,
      "result": {
        "original_header": "Pretrained models",
        "type": "Text_excerpt",
        "value": "Rather than start from scratch, we will start with model weights pretrained on the Kinetics700 dataset. Go to \nTo download the pretrained weights, please use [this Google Drive link](https://drive.google.com/file/d/1ntIZVbOG1UAiFVlsAAuKEBEVCVevyets/view?usp=sharing).\nUnzip the files in your `project/models` directory. Make sure that you don't add an extra directory when unzipping! The path should be \n`your_project/models/pretrained_models/{models 1:6}`, not `your_project/models/pretrained_models/pretrained_models/{models1:6}`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9733210384504557,
      "result": {
        "original_header": "Licensing",
        "type": "Text_excerpt",
        "value": "Copyright (c) 2020 - President and Fellows of Harvard College. All rights reserved. \nThis software is free for academic use. For commercial use, please contact the Harvard Office of Technology \nDevelopment (hms_otd@harvard.edu) with cc to Dr. Chris Harvey. For details, see [license.txt](license.txt). \n \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.909351934377416,
      "result": {
        "original_header": "testing",
        "type": "Text_excerpt",
        "value": "First, download a copy of [`testing_deepethogram_archive.zip`](https://drive.google.com/file/d/1IFz4ABXppVxyuhYik8j38k9-Fl9kYKHo/view?usp=sharing)\n Make a directory in tests called `DATA`. Unzip this and move it to the `deepethogram/tests/DATA` \ndirectory, so that the path is `deepethogram/tests/DATA/testing_deepethogram_archive/{DATA,models,project_config.yaml}`. Then run `pytest tests/` to run. \nthe `zz_commandline` test module will take a few minutes, as it is an end-to-end test that performs model training \nand inference. Its name reflects the fact that it should come last in testing. \n \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9284085615561765,
      "result": {
        "original_header": "Changelog",
        "type": "Text_excerpt",
        "value": "* 0.1.4: bugfixes for dependencies; added docker\n* 0.1.2/3: fixes for multiclass (not multilabel) training\n* 0.1.1.post1/2: batch prediction\n* 0.1.1.post0: flow generator metric bug fix\n* 0.1.1: bug fixes\n* 0.1: deepethogram beta! See above for details. \n* 0.0.1.post1: bug fixes and video conversion scripts added\n* 0.0.1: initial version\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jbohnslav/deepethogram/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jbohnslav/deepethogram/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/drive/1Nf9FU7FD77wgvbUFc608839v2jPYgDhd?usp=sharing"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 32
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jbohnslav/deepethogram/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jbohnslav/deepethogram"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepEthogram"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation\n\n## Brief version\n* Install Anaconda\n* Create a new anaconda environment: `conda create --name deg python=3.7`\n* Activate your environment: `conda activate deg`\n* Install PySide2: `conda install -c conda-forge pyside2==5.13.2`\n* Install PyTorch: [Use this link for official instructions.](https://pytorch.org/) \n* `pip install deepethogram`. \n\n## Installing from source\n* `git clone https://github.com/jbohnslav/deepethogram.git`\n* `cd deepethogram`\n* `conda env create -f environment.yml`\n    * Be prepared to wait a long time!! On mechanical hard drives, this may take 5-10 minutes (or more). Interrupting here will cause installation to fail. \n* `conda activate deg`\n* `python setup.py develop`\n\n### Installing Anaconda\nFor instructions on installing anaconda, \nplease [use this link](https://www.anaconda.com/distribution/). This will install Python, some basic dependencies, and \ninstall the Anaconda package manager. This will ensure that if you use some other project that (say) requires Python 2, \nyou can have both installed on your machine without interference.\n\n* First things first, download and install Anaconda for your operating system. You can find the downloads [here](https://www.anaconda.com/distribution/#download-section). Make sure you pick the Python 3.7 version. When you're installing, make sure you pick the option something along the lines of \"add anaconda to path\". That way, you can use `conda` on the command line.\n* Install git for your operating system (a good idea anyway!) [Downloads page here](https://git-scm.com/download)\n* Open up the command line, such as terminal on mac or cmd.exe. **VERY IMPORTANT: On Windows, make sure you run the command prompt as an administrator! To do this, right click the shortcut to the command prompt, click `run as administrator`, then say yes to whatever pops up.**\n\n## Installing from pip\nFirst install the latest version of PyTorch for your system. [Use this link for official instructions.](https://pytorch.org/) \nIt should be as simple as `conda install pytorch torchvision cudatoolkit=10.2 -c pytorch`. \n\nNote: if you have an RTX3000 series graphics card, such as a 3060 or 3090, please use `cudatoolkit=11.1` or higher. \n\nAfter installing PyTorch, simply use `pip install deepethogram`. \n\n## Install FFMPEG\nWe use FFMPEG for reading and writing `.mp4` files (with libx264 encoding). Please use [this link](https://www.ffmpeg.org/)\nto install on your system.\n    \n## Startup\n* `conda activate deg`. This activates the environment.\n* type `python -m deepethogram`, in the command line to open the GUI.\n\n## Upgrading to Beta\nPlease see [the beta docs for instructions](beta.md)\n\n## Common installation problems\n* You might have dependency issues with other packages you've installed. Please make a new anaconda or miniconda \nenvironment with `conda create --name deg python=3.8` before installation. \n* `module not found: PySide2`. Some versions of PySide2 install poorly from pip. use `pip uninstall pyside2`, then \n`conda install -c conda-forge pyside2`\n* When opening the GUI, you might get `Segmentation fault (core dumped)`. In this case; please `pip uninstall pyside2`, \n`conda uninstall pyside2`. `pip install pyside2`\n* `ImportError: C:\\Users\\jbohn\\.conda\\envs\\deg2\\lib\\site-packages\\shiboken2\\libshiboken does not exist`\n  * something went wrong with your PySide2 installation, likely on Windows. \n  * Make sure you have opened your command prompt as administrator\n  * If it tells you to install a new version of Visual Studio C++, please do that. \n  * Now you should be set up: let's reinstall PySide2 and libshiboken. \n  * `pip install --force-reinstall pyside2`\n* `_init_pyside_extension is not defined`\n  * This is an issue where Shiboken and PySide2 are not playing nicely together. Please `pip uninstall pyside2` and `conda remove pyside2`. Don't manually install these packages; instead, let DeepEthogram install it for you via pip. Therefore, `pip uninstall deepethogram` and `pip install deepethogram`.\n*  `qt.qpa.plugin: Could not load the Qt platform plugin \"xcb\" in \".../python3.8/site-packages/cv2/qt/plugins\"  even though it was found. This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.`\n   * This is an issue with a recent version of `opencv-python` not working well with Qt. Please do `pip install --force-reinstall opencv-python-headless==4.1.2.30`\n\n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/docs/installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "DeepEthogram"
        ],
        "type": "Text_excerpt",
        "value": "For full installation instructions, see [this readme file](docs/installation.md). \n\nIn brief: \n* [Install PyTorch](https://pytorch.org/) \n* `pip install deepethogram`\n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9939501710217152,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "**NEW!** All datasets collected and annotated by the DeepEthogram authors are now available from this DropBox link: \nhttps://www.dropbox.com/sh/3lilfob0sz21och/AABv8o8KhhRQhYCMNu0ilR8wa?dl=0 \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9856715406386543,
      "result": {
        "original_header": "COLAB",
        "type": "Text_excerpt",
        "value": "I've written a Colab notebook that shows how to upload your data and train models. You can also use this if you don't \nhave access to a decent GPU.  \nTo use it, please [click this link to the Colab notebook](https://colab.research.google.com/drive/1Nf9FU7FD77wgvbUFc608839v2jPYgDhd?usp=sharing). \nThen, click `copy to Drive` at the top. You won't be able to save your changes to the notebook as-is.  \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.84201161331368,
      "result": {
        "original_header": "News",
        "type": "Text_excerpt",
        "value": "We now support docker! Docker is a way to run `deepethogram` in completely reproducible environments, without interacting\nwith other system dependencies. [See docs/Docker for more information](docs/docker.md)\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9990794996368497,
      "result": {
        "original_header": "Pretrained models",
        "type": "Text_excerpt",
        "value": "Rather than start from scratch, we will start with model weights pretrained on the Kinetics700 dataset. Go to \nTo download the pretrained weights, please use [this Google Drive link](https://drive.google.com/file/d/1ntIZVbOG1UAiFVlsAAuKEBEVCVevyets/view?usp=sharing).\nUnzip the files in your `project/models` directory. Make sure that you don't add an extra directory when unzipping! The path should be \n`your_project/models/pretrained_models/{models 1:6}`, not `your_project/models/pretrained_models/pretrained_models/{models1:6}`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jbohnslav/deepethogram/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/docs/images/deepethogram_schematic.png"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "deepethogram"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jbohnslav"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 851763,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1803.06316"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1704.00389"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "DeepEthogram"
        ],
        "type": "Text_excerpt",
        "value": "The major dependencies for DeepEthogram are as follows: \n* pytorch, torchvision: all the neural networks, training, and inference pipelines were written in PyTorch\n* pytorch-lightning: for nice model training base classes\n* kornia: for GPU-based image augmentations\n* pyside2: for the GUI\n* opencv: for video and image reading and writing\n* opencv_transforms: for fast image augmentation\n* scikit-learn, scipy: for binary classification metrics\n* matplotlib: plotting metrics and neural network outputs\n* pandas: reading and writing CSVs\n* h5py: saving inference outputs as HDF5 files\n* omegaconf: for smoothly integrating configuration files and command line inputs\n* tqdm: for nice progress bars\n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Hardware requirements",
        "parent_header": [
          "DeepEthogram"
        ],
        "type": "Text_excerpt",
        "value": "For GUI usage, we expect that the users will be working on a local workstation with a good NVIDIA graphics card. For training via a cluster, you can use the command line interface. \n\n* CPU: 4 cores or more for parallel data loading\n* Hard Drive: SSD at minimum, NVMe drive is better.\n* GPU: DeepEthogram speed is directly related to GPU performance. An NVIDIA GPU is absolutely required, as PyTorch uses \nCUDA, while AMD does not. \nThe more VRAM you have, the more data you can fit in one batch, which generally increases performance. a\nI'd recommend 6GB VRAM at absolute minimum. 8GB is better, with 10+ GB preferred.\nRecommended GPUs: `RTX 3090`, `RTX 3080`, `Titan RTX`, `2080 Ti`, `2080 super`, `2080`, `1080 Ti`, `2070 super`, `2070` \nSome older ones might also be fine, like a `1080` or even `1070 Ti`/ `1070`. \n"
      },
      "source": "https://raw.githubusercontent.com/jbohnslav/deepethogram/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:20:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 98
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}