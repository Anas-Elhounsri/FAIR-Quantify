{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgement",
        "parent_header": [
          "Motivation"
        ],
        "type": "Text_excerpt",
        "value": "NiftyTorch would not be possible without liberal imports of the excellent [pytorch](https://pytorch.org), [torchvision](https://pytorch.org/docs/stable/torchvision/index.html), [nipy](https://nipy.org), [numpy](https://numpy.org), [pandas](https://pandas.pydata.org), [matplotlib](https://matplotlib.org) and [optuna](https://github.com/optuna/optuna) libraries. \n"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 29.57,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NiftyTorch/NiftyTorch.doc"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Other Contributors",
        "parent_header": [
          "Motivation"
        ],
        "type": "Text_excerpt",
        "value": "**Sankareswari Govindarajan** and **Haoyu Lan**  \nINI Microstructural imaging Group ([IMG](https://www.ini.usc.edu/IMG/))  \n"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-12T00:50:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-16T04:40:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Python API for deploying deep neural networks for Neuroimaging research. Powered by IMG at Stevens Neuroimaging and Informatics Institute, KSOM, USC."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.989734465940558,
      "result": {
        "original_header": "Motivation",
        "type": "Text_excerpt",
        "value": "The motivation behind the development of such a library is that there is no centralized tool for deploying 3D deep learning for neuroimaging. In addition, most of the existing tools require expert technical know-how in deep learning or programming, creating a barrier for entry. The goal is to provide a one stop API using which the users can perform classification tasks, Segmentation tasks and Image Generation tasks. The intended audience are the members of neuroimaging who would like to explore deep learning but have no background in coding.<br> \n"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9906709506317408,
      "result": {
        "original_header": "Highlighted Features",
        "type": "Text_excerpt",
        "value": "<ul>\n<li>Pytorch Embedded End to End data-loading pipeline\n<li>Built-in Attention module to demographic data and other modalities or mask\n<li>Additional Loss Functions (not in PyTorch) incorporated to easily use with any network use\n<li>Automatic Hyperparameter tuning for each network\n<li>Easily Customizable to use your own network\n<li>Multi-scale Training\n<li>Built-in classification networks\n<li>Built-in CNNs units such as Bottleneck, BinaryActivation\n</ul>\n \n"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.989273041128799,
      "result": {
        "original_header": "Resources",
        "type": "Text_excerpt",
        "value": "- For **Tutorials and Demos**, please visit [Demo Repository](https://github.com/NiftyTorch/NiftyTorch.v.0.1/tree/master/Demo). For **Documentation**, please visit [niftytorch.github.io](http://niftytorch.github.io/doc/).  \n- For **Announcements and News**, follow us on Twitter [@NiftyTorch](https://twitter.com/NiftyTorch).  \n- For Please submit your **questions** and **suggestions** via `niftytorch @ gmail.com`. We appreciate your constructive inputs. \n \n"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9933170510990093,
      "result": {
        "original_header": "Developers",
        "type": "Text_excerpt",
        "value": "**Adithya Subramanian** and **Farshid Sepehrband**  \nINI Microstructural imaging Group ([IMG](https://www.ini.usc.edu/IMG/))  \nMark and Mary Stevens Neuroimaging and Informatics Institute ([INI](https://www.ini.usc.edu/))  \nKeck School of Medicine of **USC**\n \n"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9687295753917091,
      "result": {
        "type": "Text_excerpt",
        "value": "**NiftyTorch is a Python API for deploying deep neural networks for Neuroimaging research.** \n"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NiftyTorch/NiftyTorch.doc/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/5.%20Segmentation%20Demo%20%20-%20UNet%20.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/5.%20Segmentation%20Demo%20%20-%20UNet%20.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/7-%20Gender%20classification%20using%20AlexNet.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/7-%20Gender%20classification%20using%20AlexNet.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/1-%20Getting%20Started.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/1-%20Getting%20Started.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/2-%20Visualization%20Example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/2-%20Visualization%20Example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/4-%20Custom%20Neural%20Network%20Training.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/4-%20Custom%20Neural%20Network%20Training.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/6-%20Gender%20classification%20using%20ResNet.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/6-%20Gender%20classification%20using%20ResNet.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/3-%20Automated%20Hyperparameter%20Tuning.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/3-%20Automated%20Hyperparameter%20Tuning.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/.ipynb_checkpoints/5-%20Segmentation%20using%20Unet-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/.ipynb_checkpoints/5-%20Segmentation%20using%20Unet-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/.ipynb_checkpoints/1-%20Getting%20Started-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/Demo/.ipynb_checkpoints/1-%20Getting%20Started-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NiftyTorch/NiftyTorch.doc/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NiftyTorch/NiftyTorch.doc"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Motivation"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Motivation"
        ],
        "type": "Text_excerpt",
        "value": "NiftyTorch can be installed using:  \n```python\npip install niftytorch\n```\nIf you encounter problem, check dependencies. NiftyTorch requires `torch==1.4.0`, `torchvision==0.5.0` and `optuna==1.4.0`. We also noted in some machines latest Numpy generates error (if so, change to an older version, such as `numpy-1.16.4` using `pip install numpy==1.16.4`). For a complete demo on how to set up the requirement and getting started see **Getting Started** notebook in the [Demo](https://github.com/NiftyTorch/NiftyTorch.v.0.1/tree/master/Demo) folder.\n"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9520095082619728,
      "result": {
        "original_header": "Resources",
        "type": "Text_excerpt",
        "value": "- For **Tutorials and Demos**, please visit [Demo Repository](https://github.com/NiftyTorch/NiftyTorch.v.0.1/tree/master/Demo). For **Documentation**, please visit [niftytorch.github.io](http://niftytorch.github.io/doc/).  \n- For **Announcements and News**, follow us on Twitter [@NiftyTorch](https://twitter.com/NiftyTorch).  \n- For Please submit your **questions** and **suggestions** via `niftytorch @ gmail.com`. We appreciate your constructive inputs. \n \n"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NiftyTorch/NiftyTorch.doc/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# License\n\nThis software is Copyright \u00a9 2020 The University of Southern California. All Rights Reserved. \n \nPermission to use, copy, modify, and distribute this software and its documentation for educational, research and non-profit purposes, without fee, and without a written agreement is hereby granted, provided that the above copyright notice, this paragraph and the following three paragraphs appear in all copies. \n \nPermission to make commercial use of this software may be obtained by contacting:  \nUSC Stevens Center for Innovation    \nUniversity of Southern California    \n1150 S. Olive Street, Suite 2300   \nLos Angeles, CA 90115, USA   \n \nThis software program and documentation are copyrighted by The University of Southern California. The software program and documentation are supplied \"as is\", without any accompanying services from USC. USC does not warrant that the operation of the program will be uninterrupted or error-free. The end-user understands that the program was developed for research purposes and is advised not to rely exclusively on the program for any reason. \n \nIN NO EVENT SHALL THE UNIVERSITY OF SOUTHERN CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF SOUTHERN CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. THE UNIVERSITY OF SOUTHERN CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN \"AS IS\" BASIS, AND THE UNIVERSITY OF SOUTHERN CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/img/NiftyTorchLogo_1.png"
      },
      "source": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NiftyTorch.doc"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "NiftyTorch"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NiftyTorch/NiftyTorch.doc/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "requirements",
    "contact",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:09:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 37
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "notebook-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}