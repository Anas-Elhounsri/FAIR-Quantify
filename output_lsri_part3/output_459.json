{
  "application_domain": [
    {
      "confidence": 16.18,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/qingyunpkdd/single_cell_fem"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-02T06:43:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-02T07:22:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "single cell function expression algrithms source code"
      },
      "technique": "GitHub_API"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "data download",
        "parent_header": [
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "Download link for all data:\n\nPBMC dataset\uff1a\nhttps://www.10xgenomics.com/resources/datasets\nhttps://cf.10xgenomics.com/samples/cell/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz\n\nreference :\n10X Genomics official website (https://www.10xgenomics.com/resources/datasets)\n\n\n\nliver dataset\uff1a\n\nhttps://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE81252\n\nreference :\n\nCamp, J. G. et al. Multilineage communication regulates human liver bud development from pluripotency. Nature 546, 533\u2013538 (2017)\n\n\n\npancreas dataset\uff1a\n\nhttps://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE85241\n\nreference :\n\nMuraro, M. J. et al. A Single-Cell Transcriptome Atlas of the Human Pancreas. Cell Syst 3, 385\u2013394.e3 (2016)\n\n"
      },
      "source": "https://raw.githubusercontent.com/qingyunpkdd/single_cell_fem/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/qingyunpkdd/single_cell_fem/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/qingyunpkdd/single_cell_fem/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qingyunpkdd/single_cell_fem"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "How to use"
      },
      "source": "https://raw.githubusercontent.com/qingyunpkdd/single_cell_fem/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qingyunpkdd/single_cell_fem/master/./GUI_Image.jpg"
      },
      "source": "https://raw.githubusercontent.com/qingyunpkdd/single_cell_fem/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "R and python script to reproduce three data sets (PBMC, liver, pancreas)",
        "parent_header": [
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "All data processing codes in Seurat are placed in the script\\R_script directory.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/qingyunpkdd/single_cell_fem/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/qingyunpkdd/single_cell_fem/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "single_cell_fem"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "qingyunpkdd"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 89116,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 88409,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qingyunpkdd/single_cell_fem/master/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:00:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "require",
        "parent_header": [
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "```python\npyqt5==5.15.1\nscipy==1.5.2\nnumpy==1.19.1\npandas==1.1.1\ntqdm==4.49.0\n```"
      },
      "source": "https://raw.githubusercontent.com/qingyunpkdd/single_cell_fem/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "data input",
        "parent_header": [
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "Our tool supports 10x data and gene expression matrix data. 10x data can be used directly as input. For expression matrix data, we provide the following conversion tools.\n```python\n'''\nbatch_processing_version\\src\\py_main\\utils\\data_processing\\to_10x_batch.py is a batch conversion tool.\n\n\nFor the to_10x_batch.py script, users can call \n'''\n\nto_10x_batch.py --input_dir example_directory --output_dir example_output_directory for batch transcription.\n\nThe specific parameters of to_10x_batch.py are as follows:\n'--input_dir','-i', type=str, default='./totenxtest/datadir', help='the input data directory!'\n'--output_dir','-o', type=str, default='./totenxtest/outdatadir', help='the output data directory!'\n'--trim','-trm', type=str, default='\"', help='tirm the symbol!'\n'--seperater','-spr', type=str, default='', help='tirm the symbol! s for space '\n```\n"
      },
      "source": "https://raw.githubusercontent.com/qingyunpkdd/single_cell_fem/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GUI version",
        "parent_header": [
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "```python\n\n# go to the gui__versioin\\src\\py_main directory\ncd ./gui__versioin/src/py_main\npython main.py\n\n\n```\n\n\n\n![image-20201202143317111](./GUI_Image.jpg)\n\n\n\nexpression data directory is the 10x format single cell expression data directory.\n\ngmt data directory is the gene set data that similar to the misgdb format data directory.\n\noutput directory is the function expression data directory.\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/qingyunpkdd/single_cell_fem/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Batch processing version",
        "parent_header": [
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "```python\n\n# go to the \\batch_processing_version\\src\\py_main\ncd ./batch_processing_version/src/py_main\npython main.py\n\n\n# the default data and result directory are below:\nbatch_expr_dir = \"../../data/expressions\"\nbatch_gmt_dir = \"../../data/gene_sets\"\nout_dir = \"../../result/gsea_out\"\n\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/qingyunpkdd/single_cell_fem/master/readme.md",
      "technique": "header_analysis"
    }
  ]
}