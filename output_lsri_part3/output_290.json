{
  "application_domain": [
    {
      "confidence": 53.28,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SJLeo/FFSD"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-30T13:05:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-22T15:02:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pytorch implementation of our paper accepted by IEEE TNNLS, 2022 -- Distilling a Powerful Student Model via Online Knowledge Distillation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9291726785301745,
      "result": {
        "original_header": "Distilling a Powerful Student Model via Online Knowledge Distillation (<a href=\"https://arxiv.org/abs/2103.14473\">Link</a>)<img alt=\"\" src=\"https://visitor-badge.glitch.me/badge?page_id=sjleo.ffsd\" />.",
        "type": "Text_excerpt",
        "value": "The framework of our proposed FFSD for online knowledge distillation. First, student 1 and student 2 learn from each other in a collaborative way. Then by shifting the attention of student 1 and distilling it to student 2, we are able to enhance the diversity among students. Last, the feature fusion module fuses all the students\u2019 information into a fused feature map. The fused representation is then used to assist the learning of the student leader. After training, we simply adopt the student leader which achieves superior performance over all other students.\n \n"
      },
      "source": "https://raw.githubusercontent.com/SJLeo/FFSD/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8970513957046479,
      "result": {
        "original_header": "Experimental Results",
        "type": "Text_excerpt",
        "value": "We provide the student leader models in the experiments, along with their training loggers and configurations. \n"
      },
      "source": "https://raw.githubusercontent.com/SJLeo/FFSD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SJLeo/FFSD/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SJLeo/FFSD/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SJLeo/FFSD"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/SJLeo/FFSD/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SJLeo/FFSD/master/img/framework.png"
      },
      "source": "https://raw.githubusercontent.com/SJLeo/FFSD/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9651323681387387,
      "result": {
        "original_header": "FFSD",
        "type": "Text_excerpt",
        "value": "- You can run the following code to train models on CIFAR-100: \n- You can run the following code to train models on ImageNet: \n"
      },
      "source": "https://raw.githubusercontent.com/SJLeo/FFSD/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8676796694129754,
      "result": {
        "original_header": "Experimental Results",
        "type": "Text_excerpt",
        "value": "You can use the following code to test our models.\n```shell\npython test.py\n\t--dataroot ./database/cifar100\n\t--dataset cifar100\n\t--model resnet32\n\t--gpu_ids 0\n\t--load_path ./resnet32/cifar100_resnet32_div1e-5_sd1000_fusion10_1/modelleader_best.pth\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/SJLeo/FFSD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9422771331714203,
      "result": {
        "original_header": "FFSD",
        "type": "Text_excerpt",
        "value": "  ```shell\n  python cifar.py\n  \t--dataroot ./database/cifar100\n  \t--dataset cifar100\n  \t--model resnet32\n  \t--lambda_diversity 1e-5\n  \t--lambda_self_distillation 1000\n  \t--lambda_fusion 10\n  \t--gpu_ids 0\n  \t--name cifar100_resnet32_div1e-5_sd1000_fusion10\n  ``` \n  ```shell\n  python distribute_imagenet.py\n  \t--dataroot ./database/imagenet\n  \t--dataset imagenet\n  \t--model resnet18\n  \t--lambda_diversity 1e-5\n  \t--lambda_self_distillation 1000\n  \t--lambda_fusion 10\n  \t--gpu_ids 0,1\n  \t--name imagenet_resnet18_div1e-5_sd1000_fusion10\n  ``` \n"
      },
      "source": "https://raw.githubusercontent.com/SJLeo/FFSD/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9500787208824395,
      "result": {
        "original_header": "Experimental Results",
        "type": "Text_excerpt",
        "value": "You can use the following code to test our models.\n```shell\npython test.py\n\t--dataroot ./database/cifar100\n\t--dataset cifar100\n\t--model resnet32\n\t--gpu_ids 0\n\t--load_path ./resnet32/cifar100_resnet32_div1e-5_sd1000_fusion10_1/modelleader_best.pth\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/SJLeo/FFSD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SJLeo/FFSD/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FFSD"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "SJLeo"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 162826,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SJLeo/FFSD/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2103.14473"
      },
      "source": "https://raw.githubusercontent.com/SJLeo/FFSD/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:24:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "Distilling a Powerful Student Model via Online Knowledge Distillation (<a href=\"https://arxiv.org/abs/2103.14473\">Link</a>)<img alt=\"\" src=\"https://visitor-badge.glitch.me/badge?page_id=sjleo.ffsd\" />."
        ],
        "type": "Text_excerpt",
        "value": "The code has been tested using Pytorch1.5.1 and CUDA10.2 on Ubuntu 18.04.\n\nPlease type the command \n\n```shell\npip install -r requirements.txt\n```\n\nto install dependencies.\n"
      },
      "source": "https://raw.githubusercontent.com/SJLeo/FFSD/master/README.md",
      "technique": "header_analysis"
    }
  ]
}