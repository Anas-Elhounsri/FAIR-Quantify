{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "If you find this tool useful in your research, please consider citing:",
        "parent_header": [
          "VarBen",
          "Format Introduction",
          "svFile format"
        ],
        "type": "Text_excerpt",
        "value": "> Li Z, Fang S, Zhang R, Yu L, Zhang J, Bu D, Sun L, Zhao Y, Li J. VarBen: Generating in Silico Reference Data Sets for Clinical Next-Generation Sequencing Bioinformatics Pipeline Evaluation. J Mol Diagn. 2020 Dec 18:S1525-1578(20)30585-7. doi: 10.1016/j.jmoldx.2020.11.010. Epub ahead of print. PMID: 33346148.\n"
      },
      "source": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nccl-jmli/VarBen"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-09-20T07:14:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-21T22:36:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "mutFile format",
        "parent_header": [
          "VarBen",
          "Format Introduction"
        ],
        "type": "Text_excerpt",
        "value": "```\n#chrom  start end AF  type  alt\n\nchr1  899778  899778  0.9 snv T\n\nchr1  3712508 3712508 0.9 snv T\n\nchr1  1158637 1158638 0.9 ins TAG\n\nchr1\t3397038 3397039 0.9 ins AGGTAG\n\nchr1\t6533124 6533126 0.9 del .\n\nchr1\t7910946 7910956 0.9 del .\nchr7\t55242467 55242481 0.3 Sub TTC\t### Complex indel format: EGFR, c.2237_2251>TTC(p.E746_T751>VP)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "del &amp; inv format",
        "parent_header": [
          "VarBen",
          "Format Introduction",
          "svFile format"
        ],
        "type": "Text_excerpt",
        "value": "```\n#chrom  start end type  AF\n\nchrX  12994966  12996009  del 0.6\n\nchrX  20172336  20176010  del 0.6\n\nchrX  105121310\t105134706\tdel 0.6\n\nchrX  108614726\t108616334\tdel 0.6\n\nchrX  13703890  14134046  inv 0.6\n\nchrX  19975999  20064786  inv 0.6\n\nchrX  32391049  32794255  inv 0.6\n\nchrX  40994338  41012689  inv 0.6\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "dup format",
        "parent_header": [
          "VarBen",
          "Format Introduction",
          "svFile format"
        ],
        "type": "Text_excerpt",
        "value": "```\n#chrom  start end type  AF  dup_num\n\nchr1  15808448  15814030  dup 0.6 3\n\nchr1  16076907  16086182  dup 0.6 4\n\nchr1  23665443  23711586  dup 0.6 3\n\nchr1  28057278  28081157  dup 0.6 3\n```\n"
      },
      "source": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "trans_chrom &amp; trans_balance &amp; trans_unbalance format",
        "parent_header": [
          "VarBen",
          "Format Introduction",
          "svFile format"
        ],
        "type": "Text_excerpt",
        "value": "```\n#CHR1 CHR1_start  CHR1_end  type  AF  CHR2  CHR2_start  CHR2_end\n\nchr10 7059511 7059511 trans_chrom 0.5 chr19 17396810  17396810\n\nchr19 17327977  17327977  trans_chrom 0.5 chr3  186528041 186528041\n\nchr3  107598967 107598967 trans_chrom 0.5 chr7  38371959  38371959\n\nchr1  31561816  31561816  trans_chrom 0.5 chr6  41297838  41297838\n\nchr2  29754284  29754947  trans_balance 0.5 chr2  42522695  42523089\n\nchr10 43608984  43609308  trans_unbalance 0.5 chr6  117640981 117640982\n```\n"
      },
      "source": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CNV format",
        "parent_header": [
          "VarBen",
          "Format Introduction",
          "svFile format"
        ],
        "type": "Text_excerpt",
        "value": "```\n#chrom  start end type  AF  cnv_type\n\nchrX 66764255 66950650 cnv 2.5 gain \n\nchr20 52186265 52200826 cnv 1 loss\n\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.974918041935323,
      "result": {
        "original_header": "VarBen",
        "type": "Text_excerpt",
        "value": "A tool for adding variant simulation to .bam files, including single-nucleotide variants, short insertions and deletions, and large structural variants. \nAs for SV editing, we can use VarBen to add variations like deletion, inversion, duplication, translocation (include balance translocation, unbalance translocation, chromosome translocation) in .bam files. \n"
      },
      "source": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nccl-jmli/VarBen/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nccl-jmli/VarBen/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nccl-jmli/VarBen/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nccl-jmli/VarBen"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VarBen"
      },
      "source": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/examples/src/02-spikein_sv_Illumina_WGS.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/examples/src/01-spikein_snv_and_indel_IonTorrent.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/examples/src/03-spikein_snv_and_indel_Illumina.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "VarBen"
        ],
        "type": "Text_excerpt",
        "value": "Dependencies: \n+ pysam (python package >=0.9.4)\n+ numpy\n\n```\npython2 -m pip install pysam\npython2 -m pip install numpy\n```\n\n+ samtools (http://samtools.sourceforge.net/)\n\n```\ngit clone https://github.com/samtools/htslib.git\nmake -C htslib\n\ngit clone https://github.com/samtools/samtools.git\nmake -C samtools\ncp samtools/samtools $HOME/bin\n\ngit clone https://github.com/samtools/bcftools.git\nmake -C bcftools\ncp bcftools/bcftools $HOME/bin\n```\n\n+ bwa (http://bio-bwa.sourceforge.net/)\n\n```\ngit clone https://github.com/lh3/bwa.git\nmake -C bwa\ncp bwa/bwa $HOME/bin\n```\n"
      },
      "source": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nccl-jmli/VarBen/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2018 Shuangsang Fang (fangshuangsang@ict.ac.cn)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VarBen"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "nccl-jmli"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 198692,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:39:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "parent_header": [
          "VarBen"
        ],
        "type": "Text_excerpt",
        "value": "+ Spike point mutations (SNV & InDel) into bam file. (Illumina platform)\n\n```bash\npython2 /opt/VarBen/bin/muteditor.py -m ./mutFile.tsv \\\n-b ./Illumina_normal.bam \\\n-r ./reference/hg19/ucsc.hg19.fasta \\\n-p 4 \\\n--aligner bwa \\\n--alignerIndex ./reference/hg19/ucsc.hg19.fasta \\\n--seqer illumina \\\n--haplosize 10 \\\n--mindepth 500 \\\n--minmutreads 5 \\\n--snpfrac 0.1 \\\n-o ./Illumina_mut_out/\n\n```\n+ Spike point mutations (SNV & InDel) into bam file. (Ion torrent platform)\n\n```bash\npython2 /opt/VarBen/bin/muteditor.py -m ./mutFile.tsv \\\n-b ./IonXpress_001_realigned.bam \\\n-r ./referenceLibrary/tmap-f3/hg19/hg19.fasta \\\n-p 4 \\\n--aligner tmap \\\n--alignerIndex ./referenceLibrary/tmap-f3/hg19/hg19.fasta \\\n--seqer life \\\n--haplosize 10 \\\n--mindepth 500 \\\n--minmutreads 5 \\\n--snpfrac 0.1 \\\n--libkey TCAG \\\n--barcode CTAAGGTAACGAT \\\n--floworder TACGTACGTCTGAGCATCGATCGATGTACAGC \\\n-g \\\n-o ./Ion_mut_out/\n\n```\n\n+ Spike SVs into bam file.  (Illumina platform)\n\n```bash\npython2 /opt/VarBen/bin/sveditor.py -m ./svFile.tsv \\\n-b ./Illumina_normal.bam \\\n-r ./reference/hg19/ucsc.hg19.fasta \\\n--aligner bwa \\\n--alignerIndex ./reference/hg19/ucsc.hg19.fasta \\\n--seqer illumina \\\n--mindepth 100 \\\n--minmutreads 10 \\\n-p 12 \\\n-l 100 \\\n-o ./sv_out/\n\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/nccl-jmli/VarBen/master/README.md",
      "technique": "header_analysis"
    }
  ]
}