{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"Ben Guebila\"\n  given-names: Marouen\n  orcid: https://orcid.org/0000-0001-5934-966X\ntitle: \"VFFVA: dynamic load balancing enables large-scale flux variability analysis\"\ndoi: 10.1186/s12859-020-03711-2\nurl: https://github.com/marouenbg/VFFVA\nversion: 0.3\ndate-released: 2020-05-27\njournal: BMC Bioinformatics\n"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "\u00b9[Gudmundsson and Thiele. Computationally efficient flux variability analysis.](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-11-489)\n\n\u00b2[Heirendt et al. DistributedFBA.jl: high-level, high-performance flux balance analysis in Julia](https://academic.oup.com/bioinformatics/article/33/9/1421/2908434)\n\n\u00b3[Mahadevan and Schilling. The effects of alternate optimal solutions in constraint-based genome-scale metabolic models.](https://www.ncbi.nlm.nih.gov/pubmed/14642354)\n"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/marouenbg/VFFVA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-07-26T19:01:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-10T18:52:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Dynamically load balanced FVA through a hybrid MPI/OpenMP architecture."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9854615518896498,
      "result": {
        "original_header": "Motivation",
        "type": "Text_excerpt",
        "value": "FVA\u00b3 is the workhorse of metabolic modeling. It allows to characterize the boundaries of the solution space of a metabolic model and delineates the bounds\nfor reaction rates. \nFFVA\u00b9 brought considerable speed up over FVA through the use C over MATLAB, and the reuse of the same LP object which allows to avoid solving the optimization problem from\nscratch for every reaction. Although, with the increase of the size of metabolic models, FFVA is run usually in parallel.  \nThe parallel setting for the common FVA implementations<sup>1,2</sup> relies on dividing the 2n tasks (one maximization and one minimization for the n reactions) among the p workers equally.\nSuch as each worker gets 2n/p reactions to process. This is called **static load balancing** and would be the optimal startegy if each of the n reactions is solved in equal times (left figure). \nOne approach would be to estimate *a priori* the solution time of each reaction and distribute to each worker 2n/p reactions of equal solution time. But, estimating the solution\ntime of a reaction *a priori* could be a challenging task. \nVFFVA performs **dynamic load blancing**. In runtime, each worker gets a small chunk of reactions to process and once finished, gets another one and so on (right figure). This setting allows i)\nfast workers to process more reactions which allows all the workers to finish at the same time, and ii) does not require *a priori* balancing as the workers will automatically\nget chunk of reactions assigned from the queue.  \n"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8333473165055008,
      "result": {
        "original_header": "Presentations",
        "type": "Text_excerpt",
        "value": "VFFVA has been presented in the poster session of the [2017 International Conference on Systems Biology of Human Disease in Heidelberg, Germany.](https://www.sbhd-conference.org/)\n \n"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.988563912896935,
      "result": {
        "original_header": "Code of Conduct",
        "type": "Text_excerpt",
        "value": "Please note that this project is released with a [Contributor Code of Conduct](CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n \n"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9845867837282049,
      "result": {
        "type": "Text_excerpt",
        "value": "This repository provides the code and result figures with the paper: \n"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://vffva.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/marouenbg/VFFVA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/marouenbg/VFFVA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "marouenbg/VFFVA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/lib/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/travis/build-run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/travis/install-mpi.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/142482470"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/./dynamicBalancing-01.png"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Please install each of the 3 dependencies separately as specified in the [documentation](https://vffva.readthedocs.io/en/latest/).\n- IBM ILOG CPLEX [free academic version](https://www.ibm.com/products/ilog-cplex-optimization-studio)\n- [MPI](www.open-mpi.org)\n- OpenMP is installed by default on most platforms except recent MacOS versions that require a dedicated installation. \n"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/marouenbg/VFFVA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "constraint-based-modeling, flux-balance-analysis, metabolic-models"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "The software is free and is licensed under the MIT license, see the file [LICENSE](<https://github.com/marouenbg/VFFVA/blob/master/LICENSE.txt>) for details.\n"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VFFVA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "marouenbg"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 60987,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JetBrains MPS",
        "size": 26226,
        "type": "Programming_language",
        "value": "JetBrains MPS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 12829,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 11209,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 3484,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2427,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "marouenbg",
          "type": "User"
        },
        "date_created": "2023-03-30T02:12:23Z",
        "date_published": "2023-03-30T02:12:53Z",
        "description": "- support for unbiased FVA",
        "html_url": "https://github.com/marouenbg/VFFVA/releases/tag/0.4.2",
        "name": "0.4.2",
        "release_id": 97414776,
        "tag": "0.4.2",
        "tarball_url": "https://api.github.com/repos/marouenbg/VFFVA/tarball/0.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/marouenbg/VFFVA/releases/97414776",
        "value": "https://api.github.com/repos/marouenbg/VFFVA/releases/97414776",
        "zipball_url": "https://api.github.com/repos/marouenbg/VFFVA/zipball/0.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "marouenbg",
          "type": "User"
        },
        "date_created": "2023-03-29T04:05:58Z",
        "date_published": "2023-03-29T04:06:55Z",
        "description": "- Fix for FVAex reactions list IO parsing",
        "html_url": "https://github.com/marouenbg/VFFVA/releases/tag/0.4.1",
        "name": "0.4.1",
        "release_id": 97264585,
        "tag": "0.4.1",
        "tarball_url": "https://api.github.com/repos/marouenbg/VFFVA/tarball/0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/marouenbg/VFFVA/releases/97264585",
        "value": "https://api.github.com/repos/marouenbg/VFFVA/releases/97264585",
        "zipball_url": "https://api.github.com/repos/marouenbg/VFFVA/zipball/0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "marouenbg",
          "type": "User"
        },
        "date_created": "2022-08-10T15:31:01Z",
        "date_published": "2022-08-10T15:33:17Z",
        "description": "- Support for Cv < d constraints\r\n- Updated installation instructions",
        "html_url": "https://github.com/marouenbg/VFFVA/releases/tag/0.4",
        "name": "0.4",
        "release_id": 74117130,
        "tag": "0.4",
        "tarball_url": "https://api.github.com/repos/marouenbg/VFFVA/tarball/0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/marouenbg/VFFVA/releases/74117130",
        "value": "https://api.github.com/repos/marouenbg/VFFVA/releases/74117130",
        "zipball_url": "https://api.github.com/repos/marouenbg/VFFVA/zipball/0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "marouenbg",
          "type": "User"
        },
        "date_created": "2020-05-27T21:39:16Z",
        "date_published": "2020-05-27T21:40:43Z",
        "description": "- Python 3 wrapper\r\n- indices of reactions to optimize as an option",
        "html_url": "https://github.com/marouenbg/VFFVA/releases/tag/0.3",
        "name": "0.3",
        "release_id": 26965955,
        "tag": "0.3",
        "tarball_url": "https://api.github.com/repos/marouenbg/VFFVA/tarball/0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/marouenbg/VFFVA/releases/26965955",
        "value": "https://api.github.com/repos/marouenbg/VFFVA/releases/26965955",
        "zipball_url": "https://api.github.com/repos/marouenbg/VFFVA/zipball/0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "marouenbg",
          "type": "User"
        },
        "date_created": "2020-03-03T21:14:44Z",
        "date_published": "2020-03-03T21:15:40Z",
        "description": "- Added optPerc the objective value optimization percentage as an additional argument in VFFVA",
        "html_url": "https://github.com/marouenbg/VFFVA/releases/tag/0.2.1",
        "name": "0.2.1",
        "release_id": 24187823,
        "tag": "0.2.1",
        "tarball_url": "https://api.github.com/repos/marouenbg/VFFVA/tarball/0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/marouenbg/VFFVA/releases/24187823",
        "value": "https://api.github.com/repos/marouenbg/VFFVA/releases/24187823",
        "zipball_url": "https://api.github.com/repos/marouenbg/VFFVA/zipball/0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "marouenbg",
          "type": "User"
        },
        "date_created": "2019-03-16T22:23:43Z",
        "date_published": "2019-03-29T19:25:40Z",
        "description": "Add a wrapper for MATLAB that includes a support for COBRA models.",
        "html_url": "https://github.com/marouenbg/VFFVA/releases/tag/0.2",
        "name": "MATLAB support",
        "release_id": 16445218,
        "tag": "0.2",
        "tarball_url": "https://api.github.com/repos/marouenbg/VFFVA/tarball/0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/marouenbg/VFFVA/releases/16445218",
        "value": "https://api.github.com/repos/marouenbg/VFFVA/releases/16445218",
        "zipball_url": "https://api.github.com/repos/marouenbg/VFFVA/zipball/0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "marouenbg",
          "type": "User"
        },
        "date_created": "2018-10-02T00:01:15Z",
        "date_published": "2018-10-02T00:06:37Z",
        "description": "The first version of VFFVA released to the public.",
        "html_url": "https://github.com/marouenbg/VFFVA/releases/tag/0.1",
        "name": "Public VFFVA",
        "release_id": 13192122,
        "tag": "0.1",
        "tarball_url": "https://api.github.com/repos/marouenbg/VFFVA/tarball/0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/marouenbg/VFFVA/releases/13192122",
        "value": "https://api.github.com/repos/marouenbg/VFFVA/releases/13192122",
        "zipball_url": "https://api.github.com/repos/marouenbg/VFFVA/zipball/0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:25:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "The supported languages are: C (veryfastFVA.c) with wrappers in  MATLAB (VFFVA.m) and Python (VFFVA.py). IBM CPLEX has stopped its support for MATLAB since version 12.10, therefore VFFVA can be an alternative to access new CPLEX versions through its C API.\n\nPlease refer to the [documentation](https://vffva.readthedocs.io/en/latest/) and the [UserGuide](UserGuide.md) for veryfastFVA (VFFVA) usage.\n\nIn MATLAB, add the project folder to your MATLAB path and save it, then use `VFFVA()`. In Python, `import VFFA` to use `VFFVA()`.\n\nFor the comparison with fastFVA (FFVA), you can install FFVA [here](http://wwwen.uni.lu/lcsb/research/mol_systems_physiology/fastfva).\n"
      },
      "source": "https://raw.githubusercontent.com/marouenbg/VFFVA/master/README.md",
      "technique": "header_analysis"
    }
  ]
}