{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ddche/PFBNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-19T12:09:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-16T13:54:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9870565691019147,
      "result": {
        "original_header": "PFBNet: Prior fused boosting method for gene regulatory network inference",
        "type": "Text_excerpt",
        "value": "we present a novel method, namely prior fused boosting network inference method (PFBNet), to infer GRNs from time-series expression data by using the non-linear model of Boosting and the prior information (e.g., the knockout data) fusion scheme. The experiments on the benchmark datasets from DREAM challenge as well as the E.coli datasets show that PFBNet achieves significantly better performance than other state-of-the-art methods (HiDi, iRafNet and BiXGBoost).   \n"
      },
      "source": "https://raw.githubusercontent.com/ddche/PFBNet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ddche/PFBNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ddche/PFBNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ddche/PFBNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PFBNet: Prior fused boosting method for gene regulatory network inference"
      },
      "source": "https://raw.githubusercontent.com/ddche/PFBNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Pip install",
        "parent_header": [
          "PFBNet: Prior fused boosting method for gene regulatory network inference",
          "Dependency"
        ],
        "type": "Text_excerpt",
        "value": "    Python version=3.7\n    xgboost Version>=0.6\n    Pandas>=0.19.x\n    Numpy>=1.12.x\nNow, we give a code example in two data sets, dream4 and Ecoil, respectively.    "
      },
      "source": "https://raw.githubusercontent.com/ddche/PFBNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ddche/PFBNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PFBNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ddche"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 12462,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ddche/PFBNet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://xgboost.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/ddche/PFBNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency",
        "parent_header": [
          "PFBNet: Prior fused boosting method for gene regulatory network inference"
        ],
        "type": "Text_excerpt",
        "value": "Xgboost Version=0.6 [Reference Link](https://xgboost.readthedocs.io/en/latest/build.html \"\u60ac\u505c\u663e\u793a\")"
      },
      "source": "https://raw.githubusercontent.com/ddche/PFBNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:35:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dream4 example",
        "parent_header": [
          "PFBNet: Prior fused boosting method for gene regulatory network inference"
        ],
        "type": "Text_excerpt",
        "value": "    from dream4.iXGBNet_dream4 import * \n    import pandas as pd\n    for i in range(1, 6):\n      # Read data\n      file_tm = \"data/timeseries_data/insilico_size100_{}_timeseries.csv\".format(i)\n      tm = pd.read_csv(file_tm).to_numpy()\n      file_ko = \"data/knockout_data/insilico_size100_{}_knockout.csv\".format(i)\n      ko = pd.read_csv(file_ko).to_numpy()\n      \n      # Compute weights of gene regulatory network\n      vv = main(tm, 10, 2, 0.45, 1000, ko)\n      \n      # Export result\n      df = pd.DataFrame(vv)\n      df.to_csv(\"result/dream4_d{}.csv\".format(i), index=False)"
      },
      "source": "https://raw.githubusercontent.com/ddche/PFBNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dream4 parameters",
        "parent_header": [
          "PFBNet: Prior fused boosting method for gene regulatory network inference",
          "Dream4 example"
        ],
        "type": "Text_excerpt",
        "value": "    data_tm: Time-series experimental data.\n    sample_num: Number of time-series experimental's samples.\n    k: Previous k time points.\n    alpha: Decay factor.\n    iter_num: Number of iterations in XGBoost model.\n    data_ko: Knockout experimental data.       \n"
      },
      "source": "https://raw.githubusercontent.com/ddche/PFBNet/master/README.md",
      "technique": "header_analysis"
    }
  ]
}