{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Don't build reference (-dbr, --dont_build_reference)",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "When using very long barcodes, reference building can take a long time. Select this option to skip the reference building step, which for long barcodes will be faster overall.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ulelab/ultraplex"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-09-10T14:55:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-02T12:12:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ultra-fast 5' and 3' demultiplexer"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9474417357855194,
      "result": {
        "original_header": "What is Ultraplex?",
        "type": "Text_excerpt",
        "value": "Ultraplex is an all-in-one software package for processing and demultiplexing fastq files. It performs the following processing steps: \n- Moves unique molecular identifiers (UMIs) to the read header for downstream deduplication \n- Detects 5\u2019 and (optionally) 3\u2019 barcodes for (combinatorial) demultiplexing \n- Writes out files for each barcode (or barcode combination) \nUltraplex was designed with speed and ease of use in mind. It is capable of demultiplexing an entire HiSeq lane, consisting of ~400 million reads, in just 20 minutes. It relies heavily on code from the excellent Cutadapt tool.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.979401469642889,
      "result": {
        "original_header": "Toubleshooting",
        "type": "Text_excerpt",
        "value": "Ultraplex was primarily designed for small barcodes. To improve speed during demultiplexing, it builds a 'reference' dictionary of sequence-to-barcode matches prior to demultiplexing. For long barcodes, this can result in a lengthy wait before demultiplexing and extremely high RAM usage. It is therefore recommended to using the --dont_build_reference command when using barcodes longer than 8 nt. \n \n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ulelab/ultraplex/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ulelab/ultraplex/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ulelab/ultraplex"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "What is Ultraplex?"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda",
        "parent_header": [
          "How do I use Ultraplex?",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Build an ultraplex environment straight from our yaml:\n```\nconda env create -f environment.yml\n```\nOr add ultraplex to your existing environment (note python >= 3.7 is required)\n```\nconda install -c conda-forge -c bioconda ultraplex\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pip",
        "parent_header": [
          "How do I use Ultraplex?",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Ultraplex is also available from python package manager pip.\n```\npip install ultraplex\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ulelab/ultraplex/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Ulelab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\nMuch of the code was from Cutadapt, for which the license is:\nCopyright (c) 2010-2020 Marcel Martin <marcel.martin@scilifelab.se>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ulelab/ultraplex/master/gif_logo.gif"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ultraplex"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ulelab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 228623,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 28062,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5425,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CharlotteAnne",
          "type": "User"
        },
        "date_created": "2023-12-05T13:33:29Z",
        "date_published": "2023-12-05T13:34:18Z",
        "description": "fix bug of reporting using -inm setting",
        "html_url": "https://github.com/ulelab/ultraplex/releases/tag/1.2.10",
        "name": "v1.2.10",
        "release_id": 132669620,
        "tag": "1.2.10",
        "tarball_url": "https://api.github.com/repos/ulelab/ultraplex/tarball/1.2.10",
        "type": "Release",
        "url": "https://api.github.com/repos/ulelab/ultraplex/releases/132669620",
        "value": "https://api.github.com/repos/ulelab/ultraplex/releases/132669620",
        "zipball_url": "https://api.github.com/repos/ulelab/ultraplex/zipball/1.2.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CharlotteAnne",
          "type": "User"
        },
        "date_created": "2023-11-21T13:33:34Z",
        "date_published": "2023-11-21T13:38:07Z",
        "description": "make dynamic versioning more stable",
        "html_url": "https://github.com/ulelab/ultraplex/releases/tag/1.2.9",
        "name": "v1.2.9",
        "release_id": 130663158,
        "tag": "1.2.9",
        "tarball_url": "https://api.github.com/repos/ulelab/ultraplex/tarball/1.2.9",
        "type": "Release",
        "url": "https://api.github.com/repos/ulelab/ultraplex/releases/130663158",
        "value": "https://api.github.com/repos/ulelab/ultraplex/releases/130663158",
        "zipball_url": "https://api.github.com/repos/ulelab/ultraplex/zipball/1.2.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CharlotteAnne",
          "type": "User"
        },
        "date_created": "2023-11-10T19:17:02Z",
        "date_published": "2023-11-10T19:17:41Z",
        "description": "Adding setuptools_scm to required packages and specifying cython version",
        "html_url": "https://github.com/ulelab/ultraplex/releases/tag/1.2.8",
        "name": "v1.2.8",
        "release_id": 128963866,
        "tag": "1.2.8",
        "tarball_url": "https://api.github.com/repos/ulelab/ultraplex/tarball/1.2.8",
        "type": "Release",
        "url": "https://api.github.com/repos/ulelab/ultraplex/releases/128963866",
        "value": "https://api.github.com/repos/ulelab/ultraplex/releases/128963866",
        "zipball_url": "https://api.github.com/repos/ulelab/ultraplex/zipball/1.2.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Delayed-Gitification",
          "type": "User"
        },
        "date_created": "2023-11-10T15:15:08Z",
        "date_published": "2023-11-10T15:16:44Z",
        "description": "Several changes:\r\n\r\nTSO mode and 3' barcode only mode\r\n\r\nAlso changed default adapter to p7\r\n\r\nAlso changed mismatch number to 0 default for 5' barcode\r\n\r\nAlso changed replacement of spaces to underscore instead of nothing",
        "html_url": "https://github.com/ulelab/ultraplex/releases/tag/1.2.7",
        "name": "v1.2.7",
        "release_id": 128927467,
        "tag": "1.2.7",
        "tarball_url": "https://api.github.com/repos/ulelab/ultraplex/tarball/1.2.7",
        "type": "Release",
        "url": "https://api.github.com/repos/ulelab/ultraplex/releases/128927467",
        "value": "https://api.github.com/repos/ulelab/ultraplex/releases/128927467",
        "zipball_url": "https://api.github.com/repos/ulelab/ultraplex/zipball/1.2.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CharlotteAnne",
          "type": "User"
        },
        "date_created": "2023-10-25T10:54:00Z",
        "date_published": "2023-10-25T10:55:24Z",
        "description": "Improved reporting of read counts in the log file and automatic version updating.",
        "html_url": "https://github.com/ulelab/ultraplex/releases/tag/1.2.6",
        "name": "v1.2.6",
        "release_id": 126579759,
        "tag": "1.2.6",
        "tarball_url": "https://api.github.com/repos/ulelab/ultraplex/tarball/1.2.6",
        "type": "Release",
        "url": "https://api.github.com/repos/ulelab/ultraplex/releases/126579759",
        "value": "https://api.github.com/repos/ulelab/ultraplex/releases/126579759",
        "zipball_url": "https://api.github.com/repos/ulelab/ultraplex/zipball/1.2.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Delayed-Gitification",
          "type": "User"
        },
        "date_created": "2021-03-09T18:22:47Z",
        "date_published": "2021-03-31T14:12:54Z",
        "html_url": "https://github.com/ulelab/ultraplex/releases/tag/1.1.4",
        "name": "Ultraplex release",
        "release_id": 40762285,
        "tag": "1.1.4",
        "tarball_url": "https://api.github.com/repos/ulelab/ultraplex/tarball/1.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ulelab/ultraplex/releases/40762285",
        "value": "https://api.github.com/repos/ulelab/ultraplex/releases/40762285",
        "zipball_url": "https://api.github.com/repos/ulelab/ultraplex/zipball/1.1.4"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:34:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 24
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Should I use Ultraplex?",
        "type": "Text_excerpt",
        "value": "Ultraplex is primarily designed for the demultiplexing of sequencing data generated using in-house library preparation protocols, with custom adaptors (for example iCLIP libraries). If instead you are using a commercial library prep kit (eg Illumina Truseq or Lexogen Quantseq) then in all likelihood the sequencing facility will already have demultiplexed the files for you, so Ultraplex is probably not for you. Furthermore, if you are doing single cell RNA-seq or using, for example, Oxford Nanopore long-read sequencing, there are other softwares specifically designed for these purposes.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda",
        "parent_header": [
          "How do I use Ultraplex?",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Build an ultraplex environment straight from our yaml:\n```\nconda env create -f environment.yml\n```\nOr add ultraplex to your existing environment (note python >= 3.7 is required)\n```\nconda install -c conda-forge -c bioconda ultraplex\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pip",
        "parent_header": [
          "How do I use Ultraplex?",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Ultraplex is also available from python package manager pip.\n```\npip install ultraplex\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required inputs",
        "parent_header": [
          "How do I use Ultraplex?"
        ],
        "type": "Text_excerpt",
        "value": "Ultraplex requires two inputs: a gzip-compressed fastq file, and a comma-separated file (csv) containing all the barcodes you have used. There are also multiple optional inputs, which are detailed below.\n\nThe simplest usage of Ultraplex is as follows:\n```\nultraplex -i your_fastq_file.fastq.gz -b your_barcode_csv.csv\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Fastq file (-i, --inputfastq):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Required inputs"
        ],
        "type": "Text_excerpt",
        "value": "The fastq file should be a 4-line per read fastq. It should be in gzipped format. If your fastq is uncompressed, or compressed in a different format, convert it to gzipped format or Ultraplex will not work.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Barcode csv (-b, --barcodes):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Required inputs"
        ],
        "type": "Text_excerpt",
        "value": "For the barcode csv, the first column contains a list of all the 5\u2019 barcodes, and (optionally) the other column(s) contain the 3\u2019 barcode(s) linked to that specific 5\u2019 barcode. For example, the following csv has three 5\u2019 barcodes, the second of which is linked to two 3\u2019 barcodes: \n\nNNNATGNN,\n\nNNNCCGNN,ATG,TCA\n\nNNNCACNN,\n\nThere are certain constraints on the barcode sequences that can be used. It is required that the length and position of the non-N nucleotides in the barcodes be consistent for all 5\u2019 barcodes, and all 3\u2019 barcodes linked to that specific 5\u2019 barcode if used. 3\u2019 barcodes linked to different 5\u2019 barcodes do not have to be consistent with each other. 5\u2019 barcodes do not have to be consistent with 3\u2019 barcodes. Barcodes can have different numbers of Ns, provided that the non-N characters are all consistent.\n\nFor example, the 5\u2019 barcodes...\n\nNNN ATG NN\n\nNNN CCG NNN\n\nNNN ATG \n\n...are all consistent because the non-N characters are all in positions 4-6 relative to the 5\u2019 end of the read. However\u2026\n\nNN ATG NN\n\nNNN ATGC NN\n\n... are not consistent with the first three barcodes (or each other) because, relative to the 5\u2019 end the barcodes are in positions 3-5 and 4-7 respectively.\n\nThe rules governing 3\u2019 barcodes are the same, except that the positions are defined relative to the 3\u2019 end of the read. For example...\n\nNN ATG NNN\n\n N CCG NNN\n\n...are consistent (positions -6 to -4), but...\n\n NN ATG NN\n\n...is not (positions -5 to -3).\n\nN characters denote positions which contain randomers. These are of no use for demultiplexing; instead, they allow the removal of PCR duplicates further downstream (for example by UMI-Tools). The bases detected in positions corresponding to the \u201cN\u201ds in the barcode are removed from the read and placed in the read header, after \u201crbc:\u201d (which stands for \u201crandom barcode\u201d). Note that if Ultraplex is run sequentially on the same fastqs (for particularly complex demultiplexing jobs), \u201crbc:\u201d will only be added to the read header once (on the first run).\n\nWe have noticed that some programs save csvs in a format that is incompatible with Ultraplex. If unexpected errors emerge, try saving the csv as a plain comma-separated file, avoiding any operating system-specific encoding.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Adding sample names",
        "parent_header": [
          "How do I use Ultraplex?",
          "Required inputs",
          "Barcode csv (-b, --barcodes):"
        ],
        "type": "Text_excerpt",
        "value": "Optionally, one can add sample names to the barcodes csv. After each barcode, add a colon, followed by the sample name. Ensure that all sample names are unique. Also ensure that if 3\u2019 barcodes are specified, no name is specified for the 5\u2019 barcode. Some samples can be left unnamed. For example:\n\nNNNATGNN:sample1,\n\nNNNCCGNN,ATG:sample2,TCA:sample3,\n\nNNNCACNN,\n\n...is fine, but...\n\nNNNATGNN:sample1,\n\nNNNCCGNN:sample2,ATG:sample3,TCA:sample4,\n\nNNNCACNN,\n\n\u2026is not, because sample2 is assigned to a 5\u2019 barcode that is linked to 3\u2019 barcodes, which doesn\u2019t make sense.\n\nTemporary files will still have barcodes in the filename - only once demultiplexing and compression has finished will the files be renamed to the sample names specified.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional inputs",
        "parent_header": [
          "How do I use Ultraplex?"
        ],
        "type": "Text_excerpt",
        "value": "Second input for paired end sequencing (-i2, --input_2):\nThis allows paired end data to be demultiplexed. This is especially useful for when 3\u2019 barcodes are used as the forward read will not detect the 3\u2019 barcode for long reads, but the reverse read will. (Note that interleaved fastqs are not currently supported)\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output directory (-d, --directory):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "This allows you to specify an output directory to which the temporary and final files, and the log file, are saved. If the directory does not already exist, Ultraplex will create it automatically.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Threads (-t, --threads):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "The number of threads used for multithreaded operation. Larger values result in a less-than-additive increase in speed, until the limits of your machine are reached. By default this is set to 4, however a small speed increase may be seen by setting this to 8 or 16.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5\u2019 mismatches (-m5, --fiveprimemismatches):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "This option allows the user to specify how many mismatches are permitted when detecting which 5\u2019 barcode a read contains. If set to zero, then the 5\u2019 barcode must match the expected barcode perfectly. By default, this value is set to one mismatch.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3\u2019 mismatches (-m3, --threeprimemismatches):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "This option allows the user to specify how many mismatches are permitted when detecting which 3\u2019 barcode a read contains. If set to zero, then the 3\u2019 barcode must match the expected barcode perfectly. By default, this value is set to zero mismatches.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Adapter sequence (-a, --adapter):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "The 3\u2019 adapter sequence to be removed. By default this is the Illumina universal sequencing adapter \"AGATCGGAAGAGCACACGTCTGAA\". For paired-end demultiplexing, this adapter only applies to the forward read (i.e. input 1, option -i)\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Adapter sequence 2 (-a2, --adapter2):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "The 3\u2019 adapter to be removed for the reverse read (option -i2) for paired-end demultiplexing. By default this is \u201cAGATCGGAAGAGCACACGTCTGAA\u201d.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Minimum quality score (-q, --phredquality):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "The minimum quality score for 3\u2019 end trimming (this uses the Cutadapt functionality). By default this is set to 30 (0.1% error rate). However, in some circumstances (especially when 3\u2019 adaptors are used) it may be desirable to reduce the stringency of this.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Minimum 5\u2019 quality score (-q5, --phred_quality_5_prime):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "The minimum quality score used for 5\u2019 end trimming. By default this is set to zero. It is strongly recommended that this is kept at 0, as 5\u2019 end trimming will result in incorrect detection of 5\u2019 barcodes.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Ultra mode and sbatch compression (-u, --ultra; -sb, --sbatchcompression):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "These are two optional running modes that can increase the speed of the program. By default, Ultraplex writes compressed temporary files. Ultra mode instead writes uncompressed temporary files, then compresses at the end. Depending on the system, this may slightly increase performance, at the expense of requiring large amounts of free storage space.\n\nLarger performance gains from ultra mode are seen when it is used in conjunction with sbatch compression mode. This mode is only compatible with high performance computing clusters which have SLURM job management. After temporary files are concatenated, they are compressed using sbatch commands, thus enabling the compression workload to be spread across multiple nodes of a supercomputing cluster. Using ultra mode and sbatch compression mode together may double overall performance. Sbatch compression mode is only relevant when using ultra mode.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Minimum length (-l, --min_length):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "NOTE - THIS HAS BEEN UPDATED. This option gives the minimum length of the read after the barcode(s) and UMI(s) have been removed. For paired end, both must be at least this length for the pair of reads to be written. It is no longer necessary to specify a minimum length of at least the length of your longest adaptor.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Minimum trim for single-end 3\u2019 demultiplexing (-mt, --min_trim):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "When demultiplexing using 3\u2019 adapters using the forward read (i.e. when single-end sequencing has been used), it is possible to obtain spurious barcode matches from the sequence at the 3\u2019 end of the read if this is not the true end of the insert (i.e. it is not adjacent to the sequencing adaptor). To prevent this, this option ensures that at least N bases of the sequencing adapter (specified by option -a) have been detected and trimmed. By default its value is 3.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output file prefix (-o, --outputprefix):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "A prefix that is added to the output files to help identify which sequencing run they are derived from. By default this is \u201cdemux\u201d.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Ignore free space warning (-ig, --ignore_space_warning):",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "When Ultraplex is run, it first estimates how much free space is needed for the job to complete, and then checks whether there is enough space. If there is not, it will not run. This option overrides this behaviour, allowing Ultraplex to run even if it does not think there is enough free storage space.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Keep barcodes (-kbc, --keep_barcodes)",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "This option keeps barcodes and UMIs in the read after demultiplexing - note that UMIs will still be added to the read header.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Ignore no match (-inm, --ignore_no_match)",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "This option does not write out reads for which there was no barcode match, which may save time.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3 prime only (--three_prime_only)",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "This is when you only have 3' barcodes. In this case, write each barcode on a new line in the barcode csv. Feel free to add names too like with 5' barcodes. The format of the barcode CSV should be exactly the same as if you only had 5' barcodes (see above). Barcode sequences should be as they would be in read 1 (just as above for 3' barcodes). Ultraplex uses the read 2 for demultiplexing here, and handles all reverse complementing internally.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "TSO seq (--tso_seq)",
        "parent_header": [
          "How do I use Ultraplex?",
          "Optional inputs"
        ],
        "type": "Text_excerpt",
        "value": "This is used solely in conjunction with the option --three_prime_barcode. It is solely for TSOs that have a p5 sequence (i.e. give rise to the read 1). Give a sequence of Ns followed by Is. Ns are moved to the UMI. Is are trimmed from the read but not moved to the UMI. For example, if using a TSO of sequence (p5)NNNNNrGrGrG, you would specify --tso_seq NNNNNIII. This would move the five random bases to the UMI, but the three non-random bases from the rGs would be trimmed and ignored.\n"
      },
      "source": "https://raw.githubusercontent.com/ulelab/ultraplex/master/README.md",
      "technique": "header_analysis"
    }
  ]
}