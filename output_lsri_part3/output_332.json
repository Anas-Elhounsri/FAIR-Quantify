{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "MeRIPseqPipe"
        ],
        "type": "Text_excerpt",
        "value": "Thanks to nf-core for the support and guidance!\n\nYou can cite the nf-core publication as follows:\n\n> The nf-core framework for community-curated bioinformatics pipelines.\n> \n> Philip Ewels, Alexander Peltzer, Sven Fillinger, Harshil Patel, Johannes Alneberg, Andreas Wilm, Maxime Ulysse Garcia, Paolo Di Tommaso & Sven Nahnsen.\n> Nat Biotechnol. 2020 Feb 13. doi: 10.1038/s41587-020-0439-x.\n"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 27.81,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "MeRIPseqPipe"
        ],
        "type": "Text_excerpt",
        "value": "MeRIPseqPipe was originally written by Xiaoqiong Bao, Kaiyu Zhu.\n"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "MeRIPseqPipe"
        ],
        "type": "Text_excerpt",
        "value": "Xiaoqiong Bao, Kaiyu Zhu, Xuefei Liu, Zhihang Chen, Ziwei Luo, Qi Zhao, Jian Ren, Zhixiang Zuo, MeRIPseqPipe: an integrated analysis pipeline for MeRIP-seq data based on Nextflow, Bioinformatics, 2022;, btac025, https://doi.org/10.1093/bioinformatics/btac025.\n"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team on [Slack](https://nf-co.re/join/slack/). The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/canceromics/MeRIPseqPipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-12T06:02:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-19T06:08:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MeRIPseqPipe\uff1aAn integrated analysis pipeline for MeRIP-seq data based on Nextflow."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "MeRIPseqPipe"
        ],
        "type": "Text_excerpt",
        "value": "Here, we present MeRIPseqPipe, an integrated analysis pipeline for MeRIP-seq data based on Nextflow. It integrates ten main functional modules including data preprocessing, quality control, read mapping, peak calling, peak merging, motif searching, peak annotation, differential methylation analysis, differential expression analysis, and data visualization, which covers the basic analysis of MeRIP-seq data. \n\nAll the analysis modules are generated by [Nextflow](https://www.nextflow.io/), and all the third-party tools are encapsulated in the [Docker](https://www.docker.com/resources/what-container) container.\n"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9092997506170962,
      "result": {
        "original_header": "MeRIPseqPipe",
        "type": "Text_excerpt",
        "value": "**MeRIP-seq analysis pipeline arranged multiple alignment tools, peakCalling tools, Merge Peaks\\' methods and methylation analysis methods.** \n"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9965166425842592,
      "result": {
        "original_header": "Pipeline overview",
        "type": "Text_excerpt",
        "value": "This pipeline is built using Nextflow and integrates tools as follows: \n* **Quality control and preprocessing of raw data**\n  * [fastp](https://github.com/OpenGene/fastp): quality trimming and adapter clipping\n  * [FastQC](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/): generate quality reports\n  * [RSeQC](http://rseqc.sourceforge.net/): assess mapping performance to give more insight into data quality\n* **Read alignment**\n  * [STAR](https://github.com/alexdobin/STAR): Spliced Transcripts Alignment to a Reference\n  * [HISAT2](http://daehwankimlab.github.io/hisat2/): memory efficient splice aware alignment to a reference\n  * [TopHat2](https://ccb.jhu.edu/software/tophat/index.shtml): accurate alignment of transcriptomes in the presence of insertions, deletions and gene fusions\n  * [BWA](https://github.com/lh3/bwa): fast and accurate short read alignment with Burrows-Wheeler transform\n* **Peak calling**\n  * [MACS2](https://github.com/macs3-project/MACS): Model-based Analysis of ChIP-seq\n  * [MeTPeak](https://github.com/compgenomics/MeTPeak): a novel, graphical model-based peak-calling method\n  * [MATK](http://matk.renlab.org/): a deep learning-based MeRIP-seq analysis tool at single-nucleotide-resolution\n  * [Meyer](https://pubmed.ncbi.nlm.nih.gov/22608085/): a peak-calling tool based on Fisher's exact test\n* **Peak merging**\n  * [RobustRankAggreg](https://pubmed.ncbi.nlm.nih.gov/22247279/): a rank aggregation algorithm\n  * [MSPC](https://genometric.github.io/MSPC/): using combined evidence from replicates to evaluate ChIP-seq peaks\n  * [BEDTools](https://bedtools.readthedocs.io/en/latest/): using \"mergeBed\" and \"intersectBed\" function\n* **Peak annotation**\n  * Perl scripts: peak start/end position, gene start/end position, transcript ID, strand, gene type (coding or noncoding, lncRNA or mRNA, etc.), peak location, gene ensemble ID, etc.\n  * [annotatePeaks.pl](http://homer.ucsd.edu/homer/ngs/annotation.html): whether a peak is in the TSS (transcription start site), TTS (transcription termination site), Exon (Coding), 5' UTR Exon, 3' UTR Exon, Intronic, or Intergenic and also shows the distance to TSS\n* **Motif searching**\n  * [HMOER](http://homer.ucsd.edu/homer/motif/): Hypergeometric Optimization of Motif EnRichment\n* **M6A sites predicition**\n  * [MATK](http://matk.renlab.org/): predict m6A sites at single nucleotide resolution\n* **Differential expression analysis**\n  * [featureCounts](https://pubmed.ncbi.nlm.nih.gov/24227677/): read counting relative to gene biotype\n  * [DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html): for differential expression analysis of RNA-Seq, SAGE-Seq, ChIP-Seq or HiC count data\n  * [edgeR](https://bioconductor.org/packages/release/bioc/html/edgeR.html): for differential expression analysis of RNA-Seq, SAGE-Seq, ChIP-Seq or HiC count data\n* **Differential methylation analysis**\n  * [QNB](https://pubmed.ncbi.nlm.nih.gov/28859631/): a statistical approach for differential RNA methylation analysis with count-based small-sample sequencing data\n  * [MATK](http://matk.renlab.org/): using a Bayesian hierarchical model to eliminate the effect of basal expression and quantify the true m6A level by Markov Chain Monte Carlo sampling\n  * Wilcox-test: results are generated by custom R scripts referred to RPKM methods\n  * [DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html): use a generalized linear model to detect changes in IP coverage while controlling for differences in Input coverage\n  * [edgeR](https://bioconductor.org/packages/release/bioc/html/edgeR.html): use a generalized linear model to detect changes in IP coverage while controlling for differences in Input coverage\n* **Report**\n  * [MultiQC](https://multiqc.info/): summarize all results from quality control and alignment\n  * R packages\n \n"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/canceromics/MeRIPseqPipe/tree/main/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "MeRIPseqPipe"
        ],
        "type": "Text_excerpt",
        "value": "The MeRIPseqPipe documentation is split into the following files:\n\n1. [Usage](docs/usage.md)\n    * [Parameter Documentation](docs/parameter_docs.md)\n    * An overview of how the pipeline works, how to run it and a description of all of the different command-line flags.\n    * let us know if you need more customization!\n2. [Output](docs/output.md)\n    * An overview of the different results produced by the pipeline\n"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/canceromics/MeRIPseqPipe/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/canceromics/MeRIPseqPipe/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "canceromics/MeRIPseqPipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MeRIPseqPipe"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/bin/m6Aprediction.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/bin/merge_peaks_by_rank.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/bin/bed_count.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/bin/merge_peaks_by_mspc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/bin/merge_peaks_by_bedtools.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/bin/create_IGV_js.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/bin/MATK_quantification.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/bin/MATK_diffm6A.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/canceromics/MeRIPseqPipe/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) Kaiyu Zhu, Xiaoqiong Bao\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MeRIPseqPipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "canceromics"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 84970,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 53394,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 22869,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 15975,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Groovy",
        "size": 6432,
        "type": "Programming_language",
        "value": "Groovy"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 6337,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 2469,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1463,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "canceromics",
          "type": "User"
        },
        "date_created": "2022-03-03T01:43:17Z",
        "date_published": "2022-03-03T03:58:49Z",
        "description": "Updated DESeq2.R to fixed some code issues.",
        "html_url": "https://github.com/canceromics/MeRIPseqPipe/releases/tag/v1.0.1",
        "name": "MeRIPseqPipe-v1.0.1",
        "release_id": 60854160,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/canceromics/MeRIPseqPipe/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/canceromics/MeRIPseqPipe/releases/60854160",
        "value": "https://api.github.com/repos/canceromics/MeRIPseqPipe/releases/60854160",
        "zipball_url": "https://api.github.com/repos/canceromics/MeRIPseqPipe/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "canceromics",
          "type": "User"
        },
        "date_created": "2021-11-04T08:52:57Z",
        "date_published": "2022-03-03T03:24:59Z",
        "html_url": "https://github.com/canceromics/MeRIPseqPipe/releases/tag/v1.0",
        "name": "MeRIPseqPipe-v1.0",
        "release_id": 60852729,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/canceromics/MeRIPseqPipe/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/canceromics/MeRIPseqPipe/releases/60852729",
        "value": "https://api.github.com/repos/canceromics/MeRIPseqPipe/releases/60852729",
        "zipball_url": "https://api.github.com/repos/canceromics/MeRIPseqPipe/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:32:40",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 31
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributions and Support",
        "parent_header": [
          "MeRIPseqPipe"
        ],
        "type": "Text_excerpt",
        "value": "If you would like to contribute to this pipeline, please see the [contributing guidelines](.github/CONTRIBUTING.md).\n"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "parent_header": [
          "MeRIPseqPipe"
        ],
        "type": "Text_excerpt",
        "value": "1. install [`nextflow`](https://nf-co.re/usage/installation)\n\n2. pull [`docker`](https://docs.docker.com/engine/installation/) image from dockerhub: [`kingzhuky/meripseqpipe:dev`](https://hub.docker.com/r/kingzhuky/meripseqpipe)\n\n3. cloning this repository\n\n    ```bash\n    git clone https://github.com/canceromics/MeRIPseqPipe.git\n    nextflow run /path/to/MeRIPseqPipe --help\n    ```\n\n4. test it on a minimal dataset with a single command\n\n    ```bash\n    nextflow run path/to/meripseqpipe -profile test,docker\n    ```\n\n5. Start running your own analysis!\n\n    ```bash\n    nextflow run path/to/meripseqpipe -profile docker --designfile designfile.tsv --comparefile compare.txt -resume --aligners star --fasta hg38_genome.fa --gtf gencode.v25.annotation.gtf --rRNA_fasta hg38_rRNA.fasta --outdir path/to/results --skip_createbedgraph --peakMerged_mode rank --star_index hg38/starindex --skip_meyer --skip_matk --methylation_analysis_mode Wilcox-test\n    ```\n\nSee [usage docs](docs/usage.md) for more details and all of the available options when running the pipeline.\n"
      },
      "source": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/canceromics/MeRIPseqPipe/main/main.nf"
      },
      "technique": "file_exploration"
    }
  ]
}