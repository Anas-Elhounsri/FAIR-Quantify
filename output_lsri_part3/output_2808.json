{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lumevr/vLume_OpenSourcePlugins"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-15T13:08:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-26T00:37:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Repository of scripts designed to run in the vLume application."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9917827364627088,
      "result": {
        "original_header": "*v*LUME Open Source Scripts",
        "type": "Text_excerpt",
        "value": "An important feature of *v*LUME the ability to perform local analysis on a subregion of point-cloud data (RoI). C#\nscripts can be programmed to perform any custom analysis once uploaded to the folder\n\\vLume_Data\\StreamingAssets\\Scripts within the *v*LUME installation directory (.cs file extension). You can find\nfurther information on how program and use the scripts in the software manual.\nWe include four useful functions as .cs scripts for the *v*LUME interpreter that can be used for local cloud data-point\nanalysis and that are often used in SMLM. You can apply them by selecting a RoI and toggling to the scripting menu\n(see manual). Note: depending on the complexity of the script you might see a busy indicator (out of the virtual\nenvironment) when called which is normal. Also be aware that some operations require more than the available memory\nparticularly in large datasets (i.e. density plots with millions of points that need to compute every single distance from\none point to another).\n \n"
      },
      "source": "https://raw.githubusercontent.com/lumevr/vLume_OpenSourcePlugins/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9891439657728719,
      "result": {
        "original_header": "The Community",
        "type": "Text_excerpt",
        "value": "Users can contribute to *v*LUME by uploading their own open-source code and communicate with other users through this repository. In this area, contributors are able to create new branches and request pulls, in order to develop a sub-project that can later be committed and merged to the main branch.\n \n"
      },
      "source": "https://raw.githubusercontent.com/lumevr/vLume_OpenSourcePlugins/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.930509436122308,
      "result": {
        "original_header": "First provided scripts",
        "type": "Text_excerpt",
        "value": "We include four scripts however it is our hope that we will nucleate communities to develop and share their own,\nincluded are:\n \n"
      },
      "source": "https://raw.githubusercontent.com/lumevr/vLume_OpenSourcePlugins/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9855494590999097,
      "result": {
        "original_header": "Ripley\u2019s K function",
        "type": "Text_excerpt",
        "value": "Ripley\u2019s K function (filename: CalcRipleysK.cs). is a spatial point statistics analysis commonly used to\nevaluate clustering in SMLM data. The script computes the Euclidian distance from a series of pairwise\npoints in a RoI and counts the number of neighbours from a single point to a moving 3D radius (defined by\nthe user and prompted as RegionSize and RegionStep). The input units need to be the same as the dataset. The output of the script is the L function, the linearized and localized Ripley\u2019s K function11, for every RegionStep from 0 to RegionSize. The script also outputs a .txt file (named after the type of analysis and the time it was performed) in StreamingAssets\\Scripts\\Output saving the number of points in the RoI, the volume, region size and the step value. Then the computed, L(radius), and finally the position of every single point within the RoI. Note: The function is only taken within the RoI as an isolated region and does not take into account any points\nin the periphery. Be aware that every single distance from point to point is computed, therefore large RoIs\nshould be executed only in systems with large amounts of memory. The volume is computed as the smallest\nbounding box containing the whole dataset, which may be a suitable approximation for irregular volumes.\n \n"
      },
      "source": "https://raw.githubusercontent.com/lumevr/vLume_OpenSourcePlugins/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9698063653768767,
      "result": {
        "original_header": "Nearest Neighbour",
        "type": "Text_excerpt",
        "value": "Nearest Neighbour Plot (filename: CalcNearestNeighbour.cs). A widely used analysis tool in SR. The\nuser is prompted for the value of the ThresholdRadius (that has to be inputted in the same units as the dataset)\nwhich will be used to compute the number of neighbours of every single point in the RoI up to the\nThresholdRadius. The script then assigns a false colour depending on that number. These numbers are\nnormalized with reference to the maximum number of neighbours, red being the lower density and blue the\nhighest within a colour gradient (note: the colours will be plotted on top of the selection). The script also\noutputs a .txt file (named after the type of analysis and the time it was performed) in StreamingAssets\\Scripts\\Output, saving the number of points of the RoI, the radius tested, and the number of neighbours of every single point within the RoI together with its position. Note: The function is only taken within the RoI as an isolated region and does not take into account any pointsin the periphery. Be aware that every single distance from point to point is computed therefore, large RoIs should be executed only in systems with large amounts of memory.\n \n"
      },
      "source": "https://raw.githubusercontent.com/lumevr/vLume_OpenSourcePlugins/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9830687703543868,
      "result": {
        "original_header": "Calculate the Density of Points in RoI",
        "type": "Text_excerpt",
        "value": "Calculate the Density of Points in RoI (filename: CalcDensity.cs). We provide a very simple\nimplementation that calculates the points within the RoI and divides this value by the volume of RoI to create\nthe localization density. The result is printed within vLUME as points/volume using the units of the .csv\ndataset. Note: The volume is computed as the smallest bounded box that can contain the selected dataset, this is only\nan approximation for irregular volumes.\n \n"
      },
      "source": "https://raw.githubusercontent.com/lumevr/vLume_OpenSourcePlugins/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.988937760479681,
      "result": {
        "original_header": "Calculate the Maximum and the Minimum Distances between Points in RoI",
        "type": "Text_excerpt",
        "value": "Calculate the Maximum and the Minimum Distances between points in RoI (filename:\nCalcShortAndFarDistances.cs). For syntax purposes, we provide a very simple script that calculates the\nmaximum and minimum distance between all the points within the RoI. The result is printed within vLUME\nusing the units of the .csv dataset. Note: Be aware that every single distance from point to point is computed therefore, large RoIs should be executed only in systems with large amounts of memory.\n \n"
      },
      "source": "https://raw.githubusercontent.com/lumevr/vLume_OpenSourcePlugins/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.980022956430519,
      "result": {
        "original_header": "Video Sample",
        "type": "Text_excerpt",
        "value": "As a demonstration of the capabilities of *v*LUME we show example videoes corresponding to the key benefits using scripts for cutting edge SMLM samples. These and other videos can be found in the BioRXiv preprint repository. \n|                |Link                          |Description                         |\n|----------------|---------------------------------|-----------------------------|\n|Bespoke Analysis          |[Video 1](https://www.biorxiv.org/content/biorxiv/early/2020/01/21/2020.01.20.912733/DC6/embed/media-6.zip?download=true) |Nearest Neighbour script application to a NPC dataset|\n|Bespoke Analysis |[Video 2](https://www.dropbox.com/s/cn55nty7r7yoy4o/vLUME_video7.mp4?dl=0) | Density Calculation of Spectrin Rings in Plated Neurons|\n \n"
      },
      "source": "https://raw.githubusercontent.com/lumevr/vLume_OpenSourcePlugins/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lumevr/vLume_OpenSourcePlugins/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lumevr/vLume_OpenSourcePlugins/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lumevr/vLume_OpenSourcePlugins"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/lumevr/vLume_OpenSourcePlugins/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lumevr/vLume_OpenSourcePlugins/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vLume_OpenSourcePlugins"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "lumevr"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C#",
        "size": 36777,
        "type": "Programming_language",
        "value": "C#"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lumevr/vLume_OpenSourcePlugins/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:23:19",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}