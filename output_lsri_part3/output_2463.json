{
  "application_domain": [
    {
      "confidence": 28.29,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/medicslaboratory/NOMIS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-24T15:25:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-13T17:01:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NOrmative Morphometry Image Statistics (NOMIS) for FreeSurfer 6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9713190319684589,
      "result": {
        "type": "Text_excerpt",
        "value": "NOMIS is licensed under a modified BSD. Permission to use, copy, modify, and distribute this software and its documentation for any purpose and without fee is hereby granted, provided that the above copyright notice appear in all copies. The author make no representations about the suitability of this software for any purpose. It is provided \"as is\" without express or implied warranty. \n>>> \nNOMIS computes normative Z-score effect size with a mean of 0 and a standard deviation of 1. Depending on the user need, there are four versions of Z-score adjusted on different sets of variables. All versions includes head size and image quality. The full version also includes age and sex while the other 3 versions are variants: with age, with sex, or without age and sex. Please note that in order to avoid as much as possible potential biases that could be introduced by differences in participants\u2019 characteristics at each site/scanner, NOMIS solely uses information from the images themselves (CNR and surface holes) instead of magnetic field strength and scanner vendor. \n   -s               The path to the directory containing the FreeSurfer subjects folders that you want to analyze.\n   \n optional arguments:\n   -h, --help       Show this help message\n   -o               Output directory where the normative z scores will be saved. Default is Calculator/Example/out/\n   -a               Atlas name. Choices are DK, DKT, Destrieux, Default is DK. By default, norms for other atlases (aseg, ex vivo, brainstem subfields, hippocampal subfields) are computed.\n   -v {on/off}      Verbose. Default is on\n   -w {on/off}      Print code warnings. Default is off\n \n \n>>> Example\n A working example is supply with this tool (Example.zip). Extract the files in the same folder as the NOMIS directory and should produce normative data in \u201c./NOMIS/Example/out\u201d folder. In a Terminal window, change your working directory where the NOMIS.py tool is (the folder \"NOMIS/\") and try:\n python NOMIS.py -csv Example/csv_example_ageandsex.csv -s Example/freesurfer_dir -o Example/out -a DK  \n Atlas files, region suffixes and region names are identical to those within the FreeSurfer stats files, except:\n \tLarger regions such as brainsegvol appearing at the head of the aseg file are in files labeled as 'aseg_bigregions'\n  cc = sum of the corpus callosum divisions: cc_posterior + cc_mid_posterior + cc_central + cc_mid_anterior + 'cc_anterior\n \tventricles = sum of all ventricles: 3rd-ventricle + 4th-ventricle + left-inf-lat-vent + left-lateral-ventricle' + right-inf-lat-vent + right-lateral-ventricle \n\n>>> Other\n Although it is not required, if you want to compute pial surfaces stats for DKT and a2009s atlases, please see parcstats step in https://surfer.nmr.mgh.harvard.edu/fswiki/ReconAllTableStableV6.0. For the calculator we called them aparc.pial.DKT and aparc.pial.a2009s, but these names are arbitrary and can be changed easily within the NOMIS.py file (see atlaslist). \n"
      },
      "source": "https://raw.githubusercontent.com/medicslab/NOMIS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/medicslab/NOMIS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/medicslaboratory/NOMIS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "medicslaboratory/NOMIS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NOMIS"
      },
      "source": "https://raw.githubusercontent.com/medicslab/NOMIS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9612493690213961,
      "result": {
        "type": "Text_excerpt",
        "value": "\n* The script automatically choose the Z-score version according to the information available in the csv input file. \n These normative values are aimed to be applied on FreeSurfer 6.0 output already processed with fully-automated directive parameters: \u201crecon-all -all\u201d command without any manual or expert flag option (https://surfer.nmr.mgh.harvard.edu/fswiki/recon-all).\n All processed images should have finished without error and the user should verify the segmentation quality first. \nThis tool was built on MacOS using Python 3.7.4 with the following modules: \n argparse version 1.1\n nibabel version 2.5.1\n numpy version 1.17.2\n pandas version 0.25.1\n pickle version 4.0\n sklearn version 0.21.3\n  \n\n>>> Script\n Extract the NOMIS.zip file \n Run the python script (NOMIS.py) from a terminal \n   -s               The path to the directory containing the FreeSurfer subjects folders that you want to analyze.\n   \n optional arguments:\n   -h, --help       Show this help message\n   -o               Output directory where the normative z scores will be saved. Default is Calculator/Example/out/\n   -a               Atlas name. Choices are DK, DKT, Destrieux, Default is DK. By default, norms for other atlases (aseg, ex vivo, brainstem subfields, hippocampal subfields) are computed.\n   -v {on/off}      Verbose. Default is on\n   -w {on/off}      Print code warnings. Default is off\n \n \n>>> Example\n A working example is supply with this tool (Example.zip). Extract the files in the same folder as the NOMIS directory and should produce normative data in \u201c./NOMIS/Example/out\u201d folder. In a Terminal window, change your working directory where the NOMIS.py tool is (the folder \"NOMIS/\") and try:\n python NOMIS.py -csv Example/csv_example_ageandsex.csv -s Example/freesurfer_dir -o Example/out -a DK  \n"
      },
      "source": "https://raw.githubusercontent.com/medicslab/NOMIS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9197534016785444,
      "result": {
        "type": "Text_excerpt",
        "value": "\n>>> Script\n Extract the NOMIS.zip file \n Run the python script (NOMIS.py) from a terminal \n usage: python NOMIS.py [-h] -csv <csvpath> -s <subject_dir> [-o <outputpath>] [-a <atlas>] [-v <verbose>] [-w <warnings>] \n required arguments:\n   -csv             csv file containing \"id\" as in FreeSurfer\u2019s subject directory, \"sex\" categorized as M/F and \"age\". \n                    1) For a csv file example, see \"/Example/csv_example_ageandsex.csv\" \n   -s               The path to the directory containing the FreeSurfer subjects folders that you want to analyze.\n   \n optional arguments:\n   -h, --help       Show this help message\n   -o               Output directory where the normative z scores will be saved. Default is Calculator/Example/out/\n   -a               Atlas name. Choices are DK, DKT, Destrieux, Default is DK. By default, norms for other atlases (aseg, ex vivo, brainstem subfields, hippocampal subfields) are computed.\n   -v {on/off}      Verbose. Default is on\n   -w {on/off}      Print code warnings. Default is off\n \n \n>>> Example\n A working example is supply with this tool (Example.zip). Extract the files in the same folder as the NOMIS directory and should produce normative data in \u201c./NOMIS/Example/out\u201d folder. In a Terminal window, change your working directory where the NOMIS.py tool is (the folder \"NOMIS/\") and try:\n python NOMIS.py -csv Example/csv_example_ageandsex.csv -s Example/freesurfer_dir -o Example/out -a DK  \n"
      },
      "source": "https://raw.githubusercontent.com/medicslab/NOMIS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/medicslaboratory/NOMIS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2021, OPMEDICS\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/medicslab/NOMIS/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NOMIS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "medicslaboratory"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/medicslab/NOMIS/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:57:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}