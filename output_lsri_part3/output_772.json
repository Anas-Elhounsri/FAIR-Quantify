{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HectorRDB/Caldera_ISMB"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-04T18:31:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-11T13:38:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9922887203831751,
      "result": {
        "original_header": "Organisation",
        "type": "Text_excerpt",
        "value": "This repository is organized as follow: \n* [Dockerfile](./Dockerfile) is a docker instruction file that will install all requirements, both for CALDERA and for pre-processing and post-processing the data\n* [Makefile](./Makefile) contains a list of make commands. `make build` builds to docker image using the `Dockerfile`. Further make commands are listed in the Analysis section\n* [Raw](./Raw/): A folder where the raw data is\n* [Data](./Data/): A folder where the pre-processed data is stored, before running CALDERA\n* [Output](./Output/)`: The final output of each analysis\n* [Analysis](./Analysis/): A folder which contains the scripts for the three analyses. More details in the Analysis section\n* [Figures](./Figures/): A folder containing the Caldera algorithm, as well as our implementation of  COIN,  FACS and All Unitigs.\n* [src](./src/): Scripts to generate the figures from the main paper and supplementary\n \n"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9734570673172332,
      "result": {
        "original_header": "All options",
        "type": "Text_excerpt",
        "value": "```sh\nusage: caldera-script [-h] -l LOC [-o OUTPUT] [-t THREADS] [-C COMMUNITIES]\n                      [-P COMFILE] [--Lmax LMAX] [-s SMAX] [-b BATCH_SIZE]\n                      [--alpha ALPHA] [-v] [--kmax KMAX] [--dfs] [--save_int]\n                      [--restart]\n\nRun the CALDERA script.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l LOC, --loc LOC     where to find the step 1 folder from DGWAS.\n  -o OUTPUT, --output OUTPUT\n                        Where to store the output. Default to loc/step2/\n  -t THREADS, --threads THREADS\n                        How many threads to use. Default to 1\n  -C COMMUNITIES, --communities COMMUNITIES\n                        Number of communities to find. Default to 3\n  -P COMFILE, --comFile COMFILE\n                        Location of the community assignement file. If none is\n                        specified, default to k-means with k = communities\n  --Lmax LMAX           Maximum size of each subgraph in bp. Default to 100\n  -s SMAX, --Smax SMAX  Maximum value on number of stages to avoid exploring\n                        the full graph. Default to 300\n  -b BATCH_SIZE, --batch_size BATCH_SIZE\n                        Maximum breath size. If it is reached, leads to hybrid\n                        exploration. Default to 10 ** 10\n  --alpha ALPHA         FWER Control value. Defaul to 10 ** (-8). A value of\n                        zero will means that alpha is picked automatically.\n  -v, --verbose         Wether to be verbose. If not specified (default), it\n                        will not be verbose.\n  --kmax KMAX           Maximum value on k to avoid exploring the full graph.\n                        Default to 10 ** 8\n  --dfs                 If this option is set, the code will be run in DFS\n  --save_int            If this option is set, the current list of subgraphs\n                        will be saved for future reruns.\n  --restart             If this option is set, the code assumes that there is\n                        a restart.\n\nThis program will save the list of significant connected subgraphs as well as\nthe associated p-values in the specified folder. Note that if runtime is too\nslow, either increase the value of alpha, decrease sMax or increase the number\nof cores. Caldera is quite memory intensive so make sure to keep track of\nmemory usage if running on a large file.\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HectorRDB/Caldera_Recomb/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/COIN/docs/StatTests.ipynb"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/COIN/docs/StatTests.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/COIN/docs/Subgraphs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/COIN/docs/Subgraphs.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/COIN/docs/Explo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/COIN/docs/Explo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/CALDERA/docs/DFS.ipynb"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/CALDERA/docs/DFS.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/CALDERA/docs/Parallel.ipynb"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/CALDERA/docs/Parallel.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/CALDERA/docs/BFS.ipynb"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/CALDERA/docs/BFS.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HectorRDB/Caldera_ISMB/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HectorRDB/Caldera_ISMB"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CALDERA Paper"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Akkermansia/Caldera.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Pseudomonas/CALDERA.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Pseudomonas/Comp_DBGWAS.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Pseudomonas/Pyseer.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Pseudomonas/Comp_AllUnitigs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Pseudomonas/Comp_COIN.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Simulations/Run_imbalance.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Simulations/Run_memory.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Simulations/Run_speed.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Explo/comparisons.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Ath/getPatterns.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Ath/ath.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/Analysis/Example/Caldera.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999827330240729,
      "result": {
        "original_header": "Using the docker container",
        "type": "Text_excerpt",
        "value": "Clone the repo with:\n```sh\ngit clone https://github.com/HectorRDB/Caldera_ISMB.git\n```\n \nThen, build the dockerfile (you can use `make build`). To run the example, you can start an intereactive session via `make link`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HectorRDB/Caldera_ISMB/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2018 The Python Packaging Authority\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/src/CALDERA/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Caldera_ISMB"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "HectorRDB"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 5438204,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 2608791,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 522944,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "SCSS",
        "size": 251022,
        "type": "Programming_language",
        "value": "SCSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Less",
        "size": 247734,
        "type": "Programming_language",
        "value": "Less"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 175820,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 65016,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 55692,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 18244,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 6621,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1107,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running Caldera",
        "parent_header": [
          "CALDERA Paper"
        ],
        "type": "Text_excerpt",
        "value": "Assuming we are on a docker container created via the [Dockerfile](./Dockerfile), we first create a test dataset.\n\n```sh\nout=/Example/Output\nraw=/Example/Raw\ndata=/Example/Data/\nmkdir -p $out $raw/Genomes\nR CMD BATCH Analysis/Example/generate.R ${out}/generate.out\n```\n\nThis creates fasta files, one per genome, as well as a strains file. For more information, see `DBGWAS -h` to understand the proper format.\n\nWe then run the actual scripts:\n\n* Run DBGWAS step1 (via the `-only1` parameter) to build the DBG.\n* Run the `toMajor.py` script to prepare the format.\n* Run the Caldera script with two threads (`-t 2`), on one community (`-C 1`).\n* Run DBGWAS step 3 (`-skip1 -skip2`) to visualize the results. This creates an html file in Outpout/caldera/step3 where we can visualize the significant CCS.\n\n```sh\nDBGWAS -strains ${raw}/strains -only1 -nb-cores 2 -output ${data} \npython3 src/CALDERA/bin/Pre-Process/toMajor.py -l ${data}\npython3 src/CALDERA/bin/caldera-script -l ${data} -o ${out}/caldera/ -v -t 2 -C 1\nDBGWAS -strains ${raw}/strains -skip1 -skip2  -nb-cores 2 \\\n    -output ${out}/caldera/ -nh 200 -caldera \n```\n\nAll those files can also be found [here](./Output/Example/).\n"
      },
      "source": "https://raw.githubusercontent.com/HectorRDB/Caldera_Recomb/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:17:56",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}