{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite",
        "parent_header": [
          "Deconvoluting Spatial Transcriptomics data through Graph-based convolutional networks (DSTG)"
        ],
        "type": "Text_excerpt",
        "value": "Please cite our paper if you use this code in your own work:\n\n```\nQianqian Song, Jing Su, DSTG: deconvoluting spatial transcriptomics data through graph-based artificial intelligence, Briefings in Bioinformatics, 2021;, bbaa414, https://doi.org/10.1093/bib/bbaa414\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Su-informatics-lab/DSTG/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Su-informatics-lab/DSTG"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-19T00:48:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-17T17:50:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Deconvoluting Spatial Transcriptomics Data through Graph-based Artificial Intelligence "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9998352421725294,
      "result": {
        "original_header": "Deconvoluting Spatial Transcriptomics data through Graph-based convolutional networks (DSTG)",
        "type": "Text_excerpt",
        "value": "This is a TensorFlow implementation of DSTG for decomposing spatial transcriptomics data, which is described in our paper: \n \n"
      },
      "source": "https://raw.githubusercontent.com/Su-informatics-lab/DSTG/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Su-informatics-lab/DSTG/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Su-informatics-lab/DSTG/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Su-informatics-lab/DSTG"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Deconvoluting Spatial Transcriptomics data through Graph-based convolutional networks (DSTG)"
      },
      "source": "https://raw.githubusercontent.com/Su-informatics-lab/DSTG/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Deconvoluting Spatial Transcriptomics data through Graph-based convolutional networks (DSTG)"
        ],
        "type": "Text_excerpt",
        "value": "```bash\npython setup.py install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Su-informatics-lab/DSTG/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Su-informatics-lab/DSTG/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License\n\nCopyright (c) 2020 Qianqian Song\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/Su-informatics-lab/DSTG/main/LICENCE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DSTG"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Su-informatics-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 35029,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 12535,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Su-informatics-lab/DSTG/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Deconvoluting Spatial Transcriptomics data through Graph-based convolutional networks (DSTG)"
        ],
        "type": "Text_excerpt",
        "value": "* tensorflow (>0.12)\n* networkx\n"
      },
      "source": "https://raw.githubusercontent.com/Su-informatics-lab/DSTG/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the demo",
        "parent_header": [
          "Deconvoluting Spatial Transcriptomics data through Graph-based convolutional networks (DSTG)"
        ],
        "type": "Text_excerpt",
        "value": "load the example data using the convert_data.R script\nIn the example data, we provide two synthetic spatial transcriptomics data generated from scRNA-seq data (GSE72056). Each synthetic data consists of 1,000 spots, which can be found in folder synthetic_data.\n```bash\ncd DSTG\nRscript convert_data.R # load example data \npython train.py # run DSTG\n```\nPredicted compositions within each spot are saved in will be shown in the DSTG_Result folder.\n\nPerformance of JSD score will be shown if you run\n```\nRscript evaluation.R\n```\nIf you want to use your own scRNA-seq data to deconvolute your spatail transcriptomcis data, provide you data to script below:\n"
      },
      "source": "https://raw.githubusercontent.com/Su-informatics-lab/DSTG/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run your own data",
        "parent_header": [
          "Deconvoluting Spatial Transcriptomics data through Graph-based convolutional networks (DSTG)"
        ],
        "type": "Text_excerpt",
        "value": "When using your own scRNA-seq data to deconvolute your spatail transcriptomcis data, you have to provide \n* the raw scRNA-seq data matrix and label, which are saved as .RDS format (e.g. 'scRNAseq_data.RDS' & 'scRNAseq_label.RDS')\n* the raw spatial transcriptomics data matrix saved as .RDS format (e.g. 'spatial_data.RDS')\n\n```\ncd DSTG\nRscript  convert_data.R  scRNAseq_data.RDS  spatial_data.RDS  scRNAseq_label.RDS\npython train.py # run DSTG\n```\nThen you will get your results in the DSTG_Result folder.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Su-informatics-lab/DSTG/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:12:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the demo",
        "parent_header": [
          "Deconvoluting Spatial Transcriptomics data through Graph-based convolutional networks (DSTG)"
        ],
        "type": "Text_excerpt",
        "value": "load the example data using the convert_data.R script\nIn the example data, we provide two synthetic spatial transcriptomics data generated from scRNA-seq data (GSE72056). Each synthetic data consists of 1,000 spots, which can be found in folder synthetic_data.\n```bash\ncd DSTG\nRscript convert_data.R # load example data \npython train.py # run DSTG\n```\nPredicted compositions within each spot are saved in will be shown in the DSTG_Result folder.\n\nPerformance of JSD score will be shown if you run\n```\nRscript evaluation.R\n```\nIf you want to use your own scRNA-seq data to deconvolute your spatail transcriptomcis data, provide you data to script below:\n"
      },
      "source": "https://raw.githubusercontent.com/Su-informatics-lab/DSTG/main/README.md",
      "technique": "header_analysis"
    }
  ]
}