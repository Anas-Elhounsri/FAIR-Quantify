{
  "application_domain": [
    {
      "confidence": 0.894518422740633,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "*BLAST-QC*"
        ],
        "type": "Text_excerpt",
        "value": "Special thanks to Norman Lab\n"
      },
      "source": "https://raw.githubusercontent.com/torkian/blast-QC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/torkian/blast-QC"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contribute",
        "parent_header": [
          "*BLAST-QC*"
        ],
        "type": "Text_excerpt",
        "value": ">Coming soon\n"
      },
      "source": "https://raw.githubusercontent.com/torkian/blast-QC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-18T18:00:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-27T00:54:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Quality Control filter and parser for NCBI BLAST XML results."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9981435776532688,
      "result": {
        "original_header": "Motivation",
        "type": "Text_excerpt",
        "value": "- Norman lab's motivation for this project was to provide a simple Python script that allows for easy quality control of BLAST XML results. \n- With recent controversy over [certian parameters of the BLAST application](academic.oup.com/bioinformatics/article/35/9/1613/5106166), the team felt that another method of condensing results produced when using BLAST for analysis of large datasets of sequences in bioinformatic research.   \n \n"
      },
      "source": "https://raw.githubusercontent.com/torkian/blast-QC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9863616796740793,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- Norman lab\u2019s BLAST-QC script has been designed for integration into bioinformatic and genomic workflows and provides options for users to modify and specify the desired functionality.\n- Provides the ability to filter the number of hits returned per query sequence.\n- Provides the ability to order the output by any of the threshold values the user wants.\n- Provides threshold values to tailor the filtered results to whatever specifications the user requires.\n- Provides a range value that when specified allows for researchers to select the sequences that produced a more detailed definition within that range.\n    - Ex.- the top hit has an e-value of .00010 but little info. in the definition, with a set e-value range of .00005 a hit with an e-value of .00015 that has a more detailed definition will be returned in its place.\n    - This is one of the features the team finds the most useful as it avoids the problem of finding a high scoring sequence that provides no real relevant information, as there is little use in knowing that a hit accurately matches an unknown sequence. \n"
      },
      "source": "https://raw.githubusercontent.com/torkian/blast-QC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9809703654217431,
      "result": {
        "original_header": "Arguments/options:",
        "type": "Text_excerpt",
        "value": "- `-f, --filename {filename}`\n>Specifiy the Blast XML results input file.\n- `-o, --output {outfile name}`\n>Specify the output file base name (no extension). BLAST-QC will output 3 text files with this base name `{}.hits.txt`, `{}.nohits.txt`, and `{}.hits.header`\n- `-t, --type {(n, p)}`\n>Specify which version of BLAST you are running (Protein or Nucleotide)\n- `-n, --number {num hits}`\n>Specify the number of hits to return per query sequence. This parameter defaults to return all hits that fit the input values. (Integer value)\n- `-e, --evalue {evalue threshold}`\n>Specify an e-value threshold. This is the maximum acceptable evalue that will pass the filtering process. Can be provided as a decimal or scientific notation in the format: (1E+10)\n- `-b, --bitscore {bitscore threshold}`\n>Specify a bit-score threshold as a decimal or sci-notation.(Minimum acceptable bitscore)\"\n- `-i, --identity {%identity threshold}`\n>Specify a threshold in the percent identity of a hit as a decimal or sci-notation. (Minimum acceptable percentage) \n- `-d, --definition {definition threshold}`\n>Specify a threshold in the level of definition provided. This is defined by how many separate lines are present in the Hit definition '<Hit_def>' of the XML file. (Integer value)\n- `-or, --order {(e,b,i,t)}` \n>Specify the order of the results. By lowest evalue `e`, highest bitscore `b`, highest percent identity `i`, or most detailed definition `d`.\n- `-er, --erange {range value}`\n>Sets a range of acceptable deviation from the lowest evalue hit in which a more detailed definition would be prefered. Must order by evalue to use this functionality.\n- `-br, --brange {range value}`\n>Sets a range of acceptable deviation from the highest bitscore hit in which a more detailed definition would be prefered. Must order by bitscore to use this functionality.\n- `-ir, --irange {range value}` \n>Sets a range of acceptable deviation from the highest percent identity hit (Decimal value) in which a more detailed definition would be prefered. Must order by percent identity to use this functionality. \n"
      },
      "source": "https://raw.githubusercontent.com/torkian/blast-QC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/torkian/blast-QC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/torkian/blast-QC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "torkian/blast-QC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BLAST-QC"
      },
      "source": "https://raw.githubusercontent.com/torkian/blast-QC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "*BLAST-QC*"
        ],
        "type": "Text_excerpt",
        "value": "- Download BLAST-QC and install the latest version of [Python](https://www.python.org/downloads/).\n"
      },
      "source": "https://raw.githubusercontent.com/torkian/blast-QC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/torkian/blast-QC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bitscore, blast-qc, blast-xml, percent-identity, qc-script"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Torkian\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/torkian/blast-QC/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "*BLAST-QC*"
        ],
        "type": "Text_excerpt",
        "value": "This program is free software: you can redistribute it and/or modify\nit under the terms of the [MIT License](https://opensource.org/licenses/MIT) as published by the Open Source Initiative.\n"
      },
      "source": "https://raw.githubusercontent.com/torkian/blast-QC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "blast-QC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "torkian"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 418110,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 33018,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 25930,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Objective-C",
        "size": 19353,
        "type": "Programming_language",
        "value": "Objective-C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 12593,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 386,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/torkian/blast-QC/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "torkian",
          "type": "User"
        },
        "date_created": "2020-05-27T16:35:10Z",
        "date_published": "2020-08-21T21:59:16Z",
        "html_url": "https://github.com/torkian/blast-QC/releases/tag/0.1",
        "name": "version 0.1",
        "release_id": 30000917,
        "tag": "0.1",
        "tarball_url": "https://api.github.com/repos/torkian/blast-QC/tarball/0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/torkian/blast-QC/releases/30000917",
        "value": "https://api.github.com/repos/torkian/blast-QC/releases/30000917",
        "zipball_url": "https://api.github.com/repos/torkian/blast-QC/zipball/0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:41:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Code Example",
        "parent_header": [
          "*BLAST-QC*"
        ],
        "type": "Text_excerpt",
        "value": ">Running BLAST-QC on a sample result file (replicating -max_target_seqs 1):\n\n    python BLAST-QC.py -f sampleResults.xml -t x -o outfiles/example.out -n 1 -or e\n\n>*sampleResults.xml:*\n<details>\n<summary>Click to expand</summary>     \n<p>\n    \n```\n<?xml version=\"1.0\"?>\n<!DOCTYPE BlastOutput PUBLIC \"-//NCBI//NCBI BlastOutput/EN\" \"http://www.ncbi.nlm.nih.gov/dtd/NCBI_BlastOutput.dtd\">\n<BlastOutput>\n  <BlastOutput_program>blastx</BlastOutput_program>\n  <BlastOutput_version>BLASTX 2.9.0+</BlastOutput_version>\n  <BlastOutput_reference>Stephen F. Altschul, Thomas L. Madden, Alejandro A. Sch&amp;auml;ffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), &quot;Gapped BLAST and PSI-BLAST: a new generation of protein database search programs&quot;, Nucleic Acids Res. 25:3389-3402.</BlastOutput_reference>\n  <BlastOutput_db>nr</BlastOutput_db>\n  <BlastOutput_query-ID>Query_1</BlastOutput_query-ID>\n  <BlastOutput_query-def>M01535:64:000000000-AYEHH:1:1101:12986:1498 1:N:0:ATTCAA</BlastOutput_query-def>\n  <BlastOutput_query-len>301</BlastOutput_query-len>\n  <BlastOutput_param>\n    <Parameters>\n      <Parameters_matrix>BLOSUM62</Parameters_matrix>\n      <Parameters_expect>10</Parameters_expect>\n      <Parameters_gap-open>11</Parameters_gap-open>\n      <Parameters_gap-extend>1</Parameters_gap-extend>\n      <Parameters_filter>L;</Parameters_filter>\n    </Parameters>\n  </BlastOutput_param>\n<BlastOutput_iterations>\n<Iteration>\n <Iteration_iter-num>1</Iteration_iter-num>\n  <Iteration_query-ID>Query_1</Iteration_query-ID>\n  <Iteration_query-def>M01535:64:000000000-AYEHH:1:1101:12986:1498 1:N:0:ATTCAA</Iteration_query-def>\n  <Iteration_query-len>301</Iteration_query-len>\n<Iteration_hits>\n<Hit>\n  <Hit_num>1</Hit_num>\n  <Hit_id>gi|1353573126|ref|WP_105010973.1|</Hit_id>\n  <Hit_def>DEAD/DEAH box helicase [Salinibacter sp. 10B] &gt;gi|1350987538|gb|PQJ33618.1| hypothetical protein BSZ35_02490 [Salinibacter sp. 10B]</Hit_def>\n  <Hit_accession>WP_105010973</Hit_accession>\n  <Hit_len>959</Hit_len>\n  <Hit_hsps>\n    <Hsp>\n      <Hsp_num>1</Hsp_num>\n      <Hsp_bit-score>37.5</Hsp_bit-score>\n      <Hsp_score>109</Hsp_score>\n      <Hsp_evalue>0.23</Hsp_evalue>\n      <Hsp_query-from>2</Hsp_query-from>\n      <Hsp_query-to>58</Hsp_query-to>\n      <Hsp_hit-from>566</Hsp_hit-from>\n      <Hsp_hit-to>584</Hsp_hit-to>\n      <Hsp_query-frame>2</Hsp_query-frame>\n      <Hsp_hit-frame>0</Hsp_hit-frame>\n      <Hsp_identity>18</Hsp_identity>\n      <Hsp_positive>19</Hsp_positive>\n      <Hsp_gaps>0</Hsp_gaps>\n      <Hsp_align-len>19</Hsp_align-len>\n      <Hsp_qseq>LQHAAAQVIHYELPWNPNR</Hsp_qseq>\n      <Hsp_hseq>LQHAAAQVVHYELPWNPNR</Hsp_hseq>\n      <Hsp_midline>LQHAAAQV+HYELPWNPNR</Hsp_midline>\n    </Hsp>\n  </Hit_hsps>\n</Hit>\n<Hit>\n  <Hit_num>2</Hit_num>\n  <Hit_id>gi|1475497631|ref|WP_118839028.1|</Hit_id>\n  <Hit_def>protein of unknown function DUF1680 [Cyclobacterium marinum DSM 745]</Hit_def>\n  <Hit_accession>WP_118839028</Hit_accession>\n  <Hit_len>962</Hit_len>\n  <Hit_hsps>\n    <Hsp>\n      <Hsp_num>1</Hsp_num>\n      <Hsp_bit-score>32.4</Hsp_bit-score>\n      <Hsp_score>106</Hsp_score>\n      <Hsp_evalue>0.0015</Hsp_evalue>\n      <Hsp_query-from>2</Hsp_query-from>\n      <Hsp_query-to>58</Hsp_query-to>\n      <Hsp_hit-from>567</Hsp_hit-from>\n      <Hsp_hit-to>585</Hsp_hit-to>\n      <Hsp_query-frame>2</Hsp_query-frame>\n      <Hsp_hit-frame>0</Hsp_hit-frame>\n      <Hsp_identity>17</Hsp_identity>\n      <Hsp_positive>19</Hsp_positive>\n      <Hsp_gaps>0</Hsp_gaps>\n      <Hsp_align-len>19</Hsp_align-len>\n      <Hsp_qseq>LQHAAAQVIHYELPWNPNR</Hsp_qseq>\n      <Hsp_hseq>LQHAASQVVHYELPWNPNR</Hsp_hseq>\n      <Hsp_midline>LQHAA+QV+HYELPWNPNR</Hsp_midline>\n    </Hsp>\n  </Hit_hsps>\n</Hit>\n<Hit>\n  <Hit_num>3</Hit_num>\n  <Hit_id>gi|1119308666|ref|WP_072286629.1|</Hit_id>\n  <Hit_def>multidrug efflux RND transporter permease subunit [Pelobacter acetylenicus] &gt;gi|1109391397|gb|APG24783.1| RND transporter [Pelobacter acetylenicus] &gt;gi|1109565394|gb|APG42840.1| RND transporter [Pelobacter acetylenicus]</Hit_def>\n  <Hit_accession>WP_072286629</Hit_accession>\n  <Hit_len>1044</Hit_len>\n  <Hit_hsps>\n    <Hsp>\n      <Hsp_num>1</Hsp_num>\n      <Hsp_bit-score>66.5</Hsp_bit-score>\n      <Hsp_score>161</Hsp_score>\n      <Hsp_evalue>.005</Hsp_evalue>\n      <Hsp_query-from>3</Hsp_query-from>\n      <Hsp_query-to>134</Hsp_query-to>\n      <Hsp_hit-from>459</Hsp_hit-from>\n      <Hsp_hit-to>502</Hsp_hit-to>\n      <Hsp_query-frame>3</Hsp_query-frame>\n      <Hsp_hit-frame>0</Hsp_hit-frame>\n      <Hsp_identity>33</Hsp_identity>\n      <Hsp_positive>39</Hsp_positive>\n      <Hsp_gaps>0</Hsp_gaps>\n      <Hsp_align-len>44</Hsp_align-len>\n      <Hsp_qseq>AMMGGITGRLYQQFALTISTASVFSSIISLTLSPALFCILLRPT</Hsp_qseq>\n      <Hsp_hseq>AFLGGITGQLYRQFALTISTATVFSSINALTLSPALCAVFLRPT</Hsp_hseq>\n      <Hsp_midline>A +GGITG+LY+QFALTISTA+VFSSI +LTLSPAL  + LRPT</Hsp_midline>\n    </Hsp>\n  </Hit_hsps>\n</Hit>\n<Hit>\n  <Hit_num>4</Hit_num>\n  <Hit_id>gi|694076356|ref|WP_032422082.1|</Hit_id>\n  <Hit_def>efflux RND transporter permease subunit [Klebsiella pneumoniae] &gt;gi|583674352|gb|EWF36727.1| hypothetical protein L397_05578 [Klebsiella pneumoniae BWH 22] &gt;gi|583701812|gb|EWF63548.1| hypothetical protein L391_00438 [Klebsiella pneumoniae MGH 45] &gt;gi|1202410181|gb|OVG28595.1| hydrophobe/amphiphile efflux-1 family RND transporter [Klebsiella pneumoniae] &gt;gi|1202586925|gb|OVI01311.1| hydrophobe/amphiphile efflux-1 family RND transporter [Klebsiella pneumoniae] &gt;gi|1373538222|gb|AVU26564.1| hydrophobe/amphiphile efflux-1 family RND transporter [Klebsiella pneumoniae] &gt;gi|1477383496|gb|RIH95380.1| hydrophobe/amphiphile efflux-1 family RND transporter [Klebsiella pneumoniae] &gt;gi|1513401962|gb|RNV45321.1| hydrophobe/amphiphile efflux-1 family RND transporter [Klebsiella pneumoniae] &gt;gi|1513656270|gb|RNX93985.1| hydrophobe/amphiphile efflux-1 family RND transporter [Klebsiella pneumoniae subsp. pneumoniae] &gt;gi|1513661422|gb|RNX99016.1| hydrophobe/amphiphile efflux-1 family RND transporter [Klebsiella pneumoniae subsp. pneumoniae] &gt;gi|1513969571|gb|ROB00382.1| hydrophobe/amphiphile efflux-1 family RND transporter [Klebsiella pneumoniae subsp. pneumoniae] &gt;gi|1513970973|gb|ROB01748.1| hydrophobe/amphiphile efflux-1 family RND transporter [Klebsiella pneumoniae subsp. pneumoniae]</Hit_def>\n  <Hit_accession>WP_032422082</Hit_accession>\n  <Hit_len>1030</Hit_len>\n  <Hit_hsps>\n    <Hsp>\n      <Hsp_num>1</Hsp_num>\n      <Hsp_bit-score>45.5</Hsp_bit-score>\n      <Hsp_score>132</Hsp_score>\n      <Hsp_evalue>.002</Hsp_evalue>\n      <Hsp_query-from>3</Hsp_query-from>\n      <Hsp_query-to>137</Hsp_query-to>\n      <Hsp_hit-from>457</Hsp_hit-from>\n      <Hsp_hit-to>501</Hsp_hit-to>\n      <Hsp_query-frame>3</Hsp_query-frame>\n      <Hsp_hit-frame>0</Hsp_hit-frame>\n      <Hsp_identity>26</Hsp_identity>\n      <Hsp_positive>36</Hsp_positive>\n      <Hsp_gaps>0</Hsp_gaps>\n      <Hsp_align-len>45</Hsp_align-len>\n      <Hsp_qseq>AMMGGITGRLYQQFALTISTASVFSSIISLTLSPALFCILLRPTP</Hsp_qseq>\n      <Hsp_hseq>ALLPGIVGELYRQFAVTLSTAVALSSLVALTLTPALCALLLRPRP</Hsp_hseq>\n      <Hsp_midline>A++ GI G LY+QFA+T+STA   SS+++LTL+PAL  +LLRP P</Hsp_midline>\n    </Hsp>\n  </Hit_hsps>\n</Hit>\n<Hit>\n  <Hit_num>5</Hit_num>\n  <Hit_id>gi|924509782|ref|WP_053514927.1|</Hit_id>\n  <Hit_def>efflux RND transporter permease subunit, partial [Enterobacter hormaechei] &gt;gi|923343267|gb|KOQ87399.1| multidrug RND transporter, partial [Enterobacter hormaechei]</Hit_def>\n  <Hit_accession>WP_053514927</Hit_accession>\n  <Hit_len>920</Hit_len>\n  <Hit_hsps>\n    <Hsp>\n      <Hsp_num>1</Hsp_num>\n      <Hsp_bit-score>55.5</Hsp_bit-score>\n      <Hsp_score>132</Hsp_score>\n      <Hsp_evalue>.0023</Hsp_evalue>\n      <Hsp_query-from>3</Hsp_query-from>\n      <Hsp_query-to>137</Hsp_query-to>\n      <Hsp_hit-from>457</Hsp_hit-from>\n      <Hsp_hit-to>501</Hsp_hit-to>\n      <Hsp_query-frame>3</Hsp_query-frame>\n      <Hsp_hit-frame>0</Hsp_hit-frame>\n      <Hsp_identity>26</Hsp_identity>\n      <Hsp_positive>36</Hsp_positive>\n      <Hsp_gaps>0</Hsp_gaps>\n      <Hsp_align-len>45</Hsp_align-len>\n      <Hsp_qseq>AMMGGITGRLYQQFALTISTASVFSSIISLTLSPALFCILLRPTP</Hsp_qseq>\n      <Hsp_hseq>ALLPGIVGELYRQFAVTLSTAVTLSSLVALTLTPALCALLLRPRP</Hsp_hseq>\n      <Hsp_midline>A++ GI G LY+QFA+T+STA   SS+++LTL+PAL  +LLRP P</Hsp_midline>\n    </Hsp>\n  </Hit_hsps>\n</Hit>\n</Iteration_hits>\n  <Iteration_stat>\n    <Statistics>\n      <Statistics_db-num>203109248</Statistics_db-num>\n      <Statistics_db-len>73914922604</Statistics_db-len>\n      <Statistics_hsp-len>69</Statistics_hsp-len>\n      <Statistics_eff-space>1856911919252</Statistics_eff-space>\n      <Statistics_kappa>0.041</Statistics_kappa>\n      <Statistics_lambda>0.267</Statistics_lambda>\n      <Statistics_entropy>0.14</Statistics_entropy>\n    </Statistics>\n  </Iteration_stat>\n</Iteration>\n</BlastOutput_iterations>\n</BlastOutput>\n```\n\n</p>  \n</details>  \n\n<br/>\n\n>*outfiles/example.out:*\n\n    query_name      query_length    accession_number        subject_length  subject_description     E value bit score       frame   query_start     query_end       hit_start       hit_end %_conserved     %_identity\n    M01535:64:000000000-AYEHH:1:1101:12986:1498 1:N:0:ATTCAA        301     WP_118839028    962     protein of unknown function DUF1680 [Cyclobacterium marinum DSM 745]    0.0015  32.4    2       2       58      567     585     100.0%  89.5%\n\n> Resulting files are output in a tabular format ready for import into a spreadsheet program.\n"
      },
      "source": "https://raw.githubusercontent.com/torkian/blast-QC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use?",
        "parent_header": [
          "*BLAST-QC*"
        ],
        "type": "Text_excerpt",
        "value": "- Once BLAST-QC and python have been downloaded simply run the program according to usage information above on a BLAST XML results file.\n- If implementing as part of a larger workflow or pipeline simply add BLAST-QC to existing code in the workflow and pipe the XML results into the script, or create a small script and specify all thresholds and options you would like to apply.    \n"
      },
      "source": "https://raw.githubusercontent.com/torkian/blast-QC/master/README.md",
      "technique": "header_analysis"
    }
  ]
}