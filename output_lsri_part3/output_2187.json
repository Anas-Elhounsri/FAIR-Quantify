{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jbelyeu/unfazed"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-21T19:26:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-14T17:48:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Unfazed by genomic variant phasing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.978786920902483,
      "result": {
        "original_header": "Unfazed: phasing tool for *de novo* SNVs and SVs",
        "type": "Text_excerpt",
        "value": "Unfazed identifies the parent of origin for _de novo_ variants, accepting input from either a vcf file or bed file of variant information. Unfazed works for point mutations (SNVs and INDELs) as well as larger structural mutations. Also see (and cite) our Bioinformatics paper at https://academic.oup.com/bioinformatics/article/37/24/4860/6306405.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9364718668549988,
      "result": {
        "original_header": "Extended read-backed phasing (SNV/INDEL/DEL/DUP/INV)",
        "type": "Text_excerpt",
        "value": "Unfazed identifies 'informative sites' upstream or downstream from a _de novo_ variant, using a VCF/BCF of SNVs for the trio (the child and both parents). These informative sites are variants inherited from the parents that allow identification of the origin of the read (maternal or paternal).  \nInformative sites must be HET in the child and discernibly different in parents, specifically HOM_REF|HOM_ALT, HET|HOM_ALT, or HET|HOM_REF. These patterns allow identification of the parent of origin for the allele found at that site in each read spanning the region. \nExtended read-backed phasing adds sensitivity by chaining reads together using mutually overlapped heterozygous sites, i.e. if two reads have the same allele for a given het site, those reads must come from the same parent. This allows the search distance from a given de novo variant to extend farther than possible with a single read pair. \nCaveat: unfazed is not a variant validation tool, and assumes variants to phase are accurate _de novo_ calls.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9508622957421077,
      "result": {
        "original_header": "Allele-balance CNV phasing (DUP/DEL)",
        "type": "Text_excerpt",
        "value": "Unfazed also applies an additional phasing technique to copy-number variants (CNVs), by using the allele balance of heterozygous sites are found **inside** the copy-altered region. \n* In a deletion, the allele of the _de novo_ CNV's origin parent disappears and therefore the site should appear to be HOM_REF for the other parent's allele (although actually hemizygous).\n* In a duplication, the allele balance of the _de novo_ CNV's origin parent should be about double in proportion to the allele from the other parent. If parents share no alleles, this is fairly simple: if the allele balance of the alelle from parent A increases relatively, that is the origin parent. If the parents share one allele (one parent being HET, the other HOMREF or HOMALT) the DUP can only be phased if the non-shared allele is duplicated, as an increase in allele balance of the shared allele could come from a duplication in either parent. Unfazed requires an allele-balance of 0.66 in favor of the duplicated allele for each informative site.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.973577364648417,
      "result": {
        "original_header": "Sex-chromosome autophasing",
        "type": "Text_excerpt",
        "value": "Variants which lie on the X chromosome in male samples can generally be automatically phased to the mother and those from the Y can be phased to the father. The pseudoautosomal region (PAR) is the exception, where the X and Y are indistinguishable. Unfazed will therefore perform read-based or allele-balance phasing for PAR variants but will automatically phase other sex chromosome variants in males. This requires genome build information which is specified via the `--build` parameter. Build defaults to build 38 and works for HG38 and GRCh38. Note that only human genome builds 19/37 and 38 are supported for special sex-chromosome phasing.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9600570218061358,
      "result": {
        "original_header": "VCF annotations",
        "type": "Text_excerpt",
        "value": "Unfazed adds two tags to the FORMAT field of the VCF.\n* UOPS: support for the UOP call (count of informative sites)\n* UET: evidence type(s) for the UOP call, which may be 0 (readbacked), 1 (allele-balance, for CNVs only), 2 (both readbacked and allele-balance), 3 (ambiguous-\nreadbacked), 4 (ambiguous-allele-balance), 5 (ambiguous-both), -1 (missing).\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9124326657876388,
      "result": {
        "original_header": "Important notes:",
        "type": "Text_excerpt",
        "value": "* Unfazed replaces `/` with `|` in the GT tag for phased variants to indicate phasing, following the phase order paternal|maternal. \n* VCF output is only possible when `--dnms` is a VCF file. \n* Unfazed is not effective for SV types that have neither clear discordant pair evidence nor a copy-number impact. Thus, it does not work for insertion variants (INS) or breakends (BNDs). \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8321413872295307,
      "result": {
        "original_header": "After:",
        "type": "Text_excerpt",
        "value": "<pre>\n22\t16256430\t.\tA\tG\t453874\tPASS\tAC=3;AF=0.495;AN=6\tGT:AD:DP:GQ:PL:UOPS:UET\t0/1:17,12:29:99:267,0,418:-1:-1\t0/1:11,9:20:99:206,0,266:-1:-1\t0/1:17,15:32:99:347,0,410:-1:-1\n22\t16256512\t.\tT\tC\t834865\tPASS\tAC=3;AF=0.494;AN=6\tGT:AD:DP:GQ:PL:UOPS:UET\t0/1:10,14:24:99:343,0,224:-1:-1\t0/1:13,11:24:99:254,0,312:-1:-1\t0/1:26,20:46:99:478,0,660:-1:-1\n22\t30857373\t.\tA\tC\t939637\tPASS\tAC=3;AF=0.63;AN=6\tGT:AD:DP:GQ:PL:UOPS:UET\t<b>1|0:47,47:94:99:1478,0,1355:2:0</b>\t0/1:48,38:86:99:1166,0,1416:-1:-1\t0/1:72,73:145:99:2241,0,1931:-1:-1\n22\t30857448\t.\tA\tG\t815602\tPASS\tAC=3;AF=0.606;AN=6\tGT:AD:DP:GQ:PL:UOPS:UET\t<b>1|0:32,31:63:99:861,0,932:2:0</b>\t0/1:33,40:73:99:1058,0,876:-1:-1\t0/1:60,66:126:99:1904,0,1635:-1:-1\n</pre>\nThe GT alleles are separated with `|` for phased variants (where FORMAT fields are __bold__). The added UOPS and UET tags are added to each record, with -1 for variants/samples that were not phased.\n</details> \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.900754407113112,
      "result": {
        "original_header": "BED output",
        "type": "Text_excerpt",
        "value": "Evidence counts and types in BED output match those in VCF output. \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9586271169684208,
      "result": {
        "original_header": "BED output (no entries for variants that cannot be phased)",
        "type": "Text_excerpt",
        "value": "**Ambiguous results** derive from inconsistent phasing (different parent of origin indicated by different informative sites or reads. These may indicate sequencing errors or mosaic events and will *not* be reported unless the `--include-ambiguous` argument is included.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9847050304390542,
      "result": {
        "original_header": "Performance",
        "type": "Text_excerpt",
        "value": "Many variants lack informative sites and are therefore can't be phased. Unfazed also makes no attempt to phase multiallelic sites (which should be very rare among _de novo_ calls). Generally a little under 30% of _de novo_ SNVs/INDELs are phaseable via unfazed, and about 50% of CNV/SV variants. These results may very by quite a bit, depending on the factors like the types of variants. For example, INDELs caused by short tandem repeats are less likely to accurately phase than other INDELs. Large CNVs are also more likely to phase than other SV types, as they are more likely to contain usable informative sites for allele-balance phasing. Unfazed has also been exclusively texted with relatively deep sequencing data (30x coverage or more) and will be less effective with lower depth sequencing. \nThe runtime of unfazed is highly dependent on the size of the sites VCF, as well as the number of variants and coverage depth. A multithreaded approach is used to improve runtime; however, as the operations are bound by file IO, using more than 2 threads yields diminishing returns (and can even cause a slowdown due to race conditions). Running with 2 threads (default option) is therefore recommended. (Expert note: running with 1 thread can often produce more informative error messages in the case of a silent failure).  \nUnfazed was tested on a set of 29,029 _de novo_ SNVs/INDELs for a set of 603 samples in the CEPH-Utah cohort, with a set of 19,905,682 variants in the `--sites` vcf. This very large input set finished in 58.6 hours with two process threads, a total of 111.5 hours of runtime with 13.8 seconds per input variant.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jbelyeu/unfazed/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jbelyeu/unfazed"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Unfazed: phasing tool for de novo SNVs and SVs"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/runtests.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/.circleci/setup.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://circleci.com/gh/jbelyeu/unfazed/tree/master.svg?style=svg"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8959478689463743,
      "result": {
        "original_header": "Important notes:",
        "type": "Text_excerpt",
        "value": "* Unfazed replaces `/` with `|` in the GT tag for phased variants to indicate phasing, following the phase order paternal|maternal. \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8317781346960026,
      "result": {
        "original_header": "BED output (no entries for variants that cannot be phased)",
        "type": "Text_excerpt",
        "value": "**Ambiguous results** derive from inconsistent phasing (different parent of origin indicated by different informative sites or reads. These may indicate sequencing errors or mosaic events and will *not* be reported unless the `--include-ambiguous` argument is included.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Jon Belyeu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "unfazed"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jbelyeu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 107867,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 71004,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jbelyeu",
          "type": "User"
        },
        "date_created": "2021-02-10T05:17:53Z",
        "date_published": "2021-02-10T05:26:18Z",
        "description": "fixed various bugs in autophasing for male sex chrom variants. Added new notes in readme and output to remind user of the build",
        "html_url": "https://github.com/jbelyeu/unfazed/releases/tag/v1.0.2",
        "name": "sex chrom phasing fix",
        "release_id": 37841849,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/jbelyeu/unfazed/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/jbelyeu/unfazed/releases/37841849",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/releases/37841849",
        "zipball_url": "https://api.github.com/repos/jbelyeu/unfazed/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jbelyeu",
          "type": "User"
        },
        "date_created": "2021-02-05T17:04:05Z",
        "date_published": "2021-02-05T18:32:04Z",
        "description": "a function call (multithread_find_many()) in informative_site_finder was missing an arg. ",
        "html_url": "https://github.com/jbelyeu/unfazed/releases/tag/v1.0.1",
        "name": "fixed missing arg bug",
        "release_id": 37424133,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/jbelyeu/unfazed/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jbelyeu/unfazed/releases/37424133",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/releases/37424133",
        "zipball_url": "https://api.github.com/repos/jbelyeu/unfazed/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jbelyeu",
          "type": "User"
        },
        "date_created": "2021-01-26T02:26:24Z",
        "date_published": "2021-01-26T03:10:14Z",
        "description": "With this release I've added options to modify all the previously hard-coded options for quality thresholds and so forth, although still recommend using defaults. CI should remain thus for the foreseeable future. ",
        "html_url": "https://github.com/jbelyeu/unfazed/releases/tag/v1.0.0",
        "name": "Stable release",
        "release_id": 36892688,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/jbelyeu/unfazed/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jbelyeu/unfazed/releases/36892688",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/releases/36892688",
        "zipball_url": "https://api.github.com/repos/jbelyeu/unfazed/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jbelyeu",
          "type": "User"
        },
        "date_created": "2020-05-09T17:36:49Z",
        "date_published": "2020-05-09T17:46:22Z",
        "description": "I was annotating phasing incorrectly, so I switched to the standard method (pipes in GT field). Also added CRAM support",
        "html_url": "https://github.com/jbelyeu/unfazed/releases/tag/v0.2.3",
        "name": "fixed vcf output formatting + cram support",
        "release_id": 26344430,
        "tag": "v0.2.3",
        "tarball_url": "https://api.github.com/repos/jbelyeu/unfazed/tarball/v0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/jbelyeu/unfazed/releases/26344430",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/releases/26344430",
        "zipball_url": "https://api.github.com/repos/jbelyeu/unfazed/zipball/v0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jbelyeu",
          "type": "User"
        },
        "date_created": "2020-05-02T05:51:20Z",
        "date_published": "2020-05-02T05:52:55Z",
        "description": "added considerable testing and performed code review and linting with isort, pyflakes, black, and flake8. Should be ready for real use now",
        "html_url": "https://github.com/jbelyeu/unfazed/releases/tag/v0.2.2",
        "name": "enhanced tests, linting",
        "release_id": 26101606,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/jbelyeu/unfazed/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/jbelyeu/unfazed/releases/26101606",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/releases/26101606",
        "zipball_url": "https://api.github.com/repos/jbelyeu/unfazed/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jbelyeu",
          "type": "User"
        },
        "date_created": "2020-04-30T01:57:08Z",
        "date_published": "2020-04-30T01:58:08Z",
        "description": "python 2 is for chumps anyway. Might try again later, though",
        "html_url": "https://github.com/jbelyeu/unfazed/releases/tag/v0.1.5",
        "name": "stopped trying to support python2",
        "release_id": 26029475,
        "tag": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/jbelyeu/unfazed/tarball/v0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/jbelyeu/unfazed/releases/26029475",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/releases/26029475",
        "zipball_url": "https://api.github.com/repos/jbelyeu/unfazed/zipball/v0.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jbelyeu",
          "type": "User"
        },
        "date_created": "2020-04-30T01:28:21Z",
        "date_published": "2020-04-30T01:30:47Z",
        "description": "added missing future import of print to support python 2",
        "html_url": "https://github.com/jbelyeu/unfazed/releases/tag/v0.1.4",
        "name": "fixed backward compat issue",
        "release_id": 26029014,
        "tag": "v0.1.4",
        "tarball_url": "https://api.github.com/repos/jbelyeu/unfazed/tarball/v0.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/jbelyeu/unfazed/releases/26029014",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/releases/26029014",
        "zipball_url": "https://api.github.com/repos/jbelyeu/unfazed/zipball/v0.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jbelyeu",
          "type": "User"
        },
        "date_created": "2020-04-15T19:30:35Z",
        "date_published": "2020-04-15T19:32:48Z",
        "description": "previous prefix fix made readbacked fazing stop working, so this version fixes it",
        "html_url": "https://github.com/jbelyeu/unfazed/releases/tag/v0.1.2",
        "name": "improved prefix fix ",
        "release_id": 25544269,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/jbelyeu/unfazed/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/jbelyeu/unfazed/releases/25544269",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/releases/25544269",
        "zipball_url": "https://api.github.com/repos/jbelyeu/unfazed/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jbelyeu",
          "type": "User"
        },
        "date_created": "2020-04-09T19:32:40Z",
        "date_published": "2020-04-09T19:33:51Z",
        "description": "fixed a bug in the prefix assignment",
        "html_url": "https://github.com/jbelyeu/unfazed/releases/tag/v0.1.1",
        "name": "prefix bugfix",
        "release_id": 25374764,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/jbelyeu/unfazed/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jbelyeu/unfazed/releases/25374764",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/releases/25374764",
        "zipball_url": "https://api.github.com/repos/jbelyeu/unfazed/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jbelyeu",
          "type": "User"
        },
        "date_created": "2020-01-08T05:02:05Z",
        "date_published": "2020-04-08T22:08:13Z",
        "description": "Not ready for widespead use, but useable if you really know what you're doing. ",
        "html_url": "https://github.com/jbelyeu/unfazed/releases/tag/v0.1.0",
        "name": "first release",
        "release_id": 25340361,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/jbelyeu/unfazed/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jbelyeu/unfazed/releases/25340361",
        "value": "https://api.github.com/repos/jbelyeu/unfazed/releases/25340361",
        "zipball_url": "https://api.github.com/repos/jbelyeu/unfazed/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:05:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use it",
        "parent_header": [
          "Unfazed: phasing tool for *de novo* SNVs and SVs"
        ],
        "type": "Text_excerpt",
        "value": "Unfazed is available for install from conda. Requires at least Python 3.5.\n\n`conda install -c bioconda unfazed `\n\n<details>\n  <summary>Unfazed options:</summary>\n  \n  ```\n\nUNFAZED v1.0.2\nusage: unfazed [-h] [-v] -d DNMS -s SITES -p PED [-b BAM_DIR] [--bam-pairs [BAM_PAIRS [BAM_PAIRS ...]]] [-t THREADS] [-o {vcf,bed}] [--include-ambiguous] [--verbose]\n               [--outfile OUTFILE] [-r REFERENCE] -g {37,38,na} [--no-extended] [--multiread-proc-min MULTIREAD_PROC_MIN] [-q] [--min-gt-qual MIN_GT_QUAL]\n               [--min-depth MIN_DEPTH] [--ab-homref AB_HOMREF] [--ab-homalt AB_HOMALT] [--ab-het AB_HET] [--evidence-min-ratio EVIDENCE_MIN_RATIO]\n               [--search-dist SEARCH_DIST] [--insert-size-max-sample INSERT_SIZE_MAX_SAMPLE] [--min-map-qual MIN_MAP_QUAL] [--stdevs STDEVS] [--readlen READLEN]\n               [--split-error-margin SPLIT_ERROR_MARGIN] [--max-reads MAX_READS]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         Installed version (1.0.2)\n  -d DNMS, --dnms DNMS  valid VCF OR BED file of the DNMs of interest> If BED, must contain chrom, start, end, kid_id, var_type columns (default: None)\n  -s SITES, --sites SITES\n                        sorted/bgzipped/indexed VCF/BCF file of SNVs to identify informative sites. Must contain each kid and both parents (default: None)\n  -p PED, --ped PED     ped file including the kid and both parent IDs (default: None)\n  -b BAM_DIR, --bam-dir BAM_DIR\n                        directory where bam/cram files (named {sample_id}.bam or {sample_id}.cram) are stored for offspring. If not included, --bam-pairs must be set\n                        (default: None)\n  --bam-pairs [BAM_PAIRS [BAM_PAIRS ...]]\n                        space-delimited list of pairs in the format {sample_id}:{bam_path} where {sample_id} matches an offspring id from the dnm file. Can be used with\n                        --bam-dir arg, must be used in its absence (default: None)\n  -t THREADS, --threads THREADS\n                        number of threads to use (default: 2)\n  -o {vcf,bed}, --output-type {vcf,bed}\n                        choose output type. If --dnms is not a VCF/BCF, output must be to BED format. Defaults to match --dnms input file (default: None)\n  --include-ambiguous   include ambiguous phasing results (default: False)\n  --verbose             print verbose output including sites and reads used for phasing. Only applies to BED output (default: False)\n  --outfile OUTFILE     name for output file. Defaults to stdout (default: /dev/stdout)\n  -r REFERENCE, --reference REFERENCE\n                        reference fasta file (required for crams) (default: None)\n  -g {37,38,na}, --build {37,38,na}\n                        human genome build, used to determine sex chromosome pseudoautosomal regions. If `na` option is chosen, sex chromosomes will not be auto-phased.\n                        HG19/GRCh37 interchangeable (default: None)\n  --no-extended         do not perform extended read-based phasing (default True) (default: False)\n  --multiread-proc-min MULTIREAD_PROC_MIN\n                        min number of variants required to perform multiple parallel reads of the sites file (default: 1000)\n  -q, --quiet           no logging of variant processing data (default: False)\n  --min-gt-qual MIN_GT_QUAL\n                        min genotype and base quality for informative sites (default: 20)\n  --min-depth MIN_DEPTH\n                        min coverage for informative sites (default: 10)\n  --ab-homref AB_HOMREF\n                        allele balance range for homozygous reference informative sites (default: 0.0:0.2)\n  --ab-homalt AB_HOMALT\n                        allele balance range for homozygous alternate informative sites (default: 0.8:1.0)\n  --ab-het AB_HET       allele balance range for heterozygous informative sites (default: 0.2:0.8)\n  --evidence-min-ratio EVIDENCE_MIN_RATIO\n                        minimum ratio of evidence for a parent to provide an unambiguous call. Default 10:1 (default: 10)\n  --search-dist SEARCH_DIST\n                        maximum search distance from variant for informative sites (in bases) (default: 5000)\n  --insert-size-max-sample INSERT_SIZE_MAX_SAMPLE\n                        maximum number of read inserts to sample in order to estimate concordant read insert size (default: 1000000)\n  --min-map-qual MIN_MAP_QUAL\n                        minimum map quality for reads (default: 1)\n  --stdevs STDEVS       number of standard deviations from the mean insert length to define a discordant read (default: 3)\n  --readlen READLEN     expected length of input reads (default: 151)\n  --split-error-margin SPLIT_ERROR_MARGIN\n                        margin of error for the location of split read clipping in bases (default: 5)\n  --max-reads MAX_READS\n                        maximum number of reads to collect for phasing a single variant (default: 100)\n```\n\nMany of the above optional arguments consist of options for user-defined deviation from tested defaults. For example, the `--stdevs` options allow a user to alter the definition of a discordant read. By default, it is defined as a paired-end read in which the insert size is greater than 3 standard deviations above the mean, and where mean is calculated from the first million reads in an alignment file, excluding the top 0.5%. A user can decide to alter the number of standard deviations for greater or lesser sensitivity to discordant pairs, but the set defaults are used for all testing and are generally recommended.\n</details>\n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "A simple use case is:",
        "parent_header": [
          "Unfazed: phasing tool for *de novo* SNVs and SVs",
          "How to use it"
        ],
        "type": "Text_excerpt",
        "value": "```\nunfazed\\\n  -d mydenovos.vcf.gz\\\n  -s sites.vcf.gz\\\n  -p myped.ped\\\n  -g 38 \\\n  --bam-pairs a_sample:a_sample.bam\n```\nThis will print an annotated vcf file of phased variants. Note that unfazed requires each input VCF to have the `GT`, `AD`, and `GQ` fields.\n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Unfazed will also accept a bed file as input:",
        "parent_header": [
          "Unfazed: phasing tool for *de novo* SNVs and SVs",
          "How to use it"
        ],
        "type": "Text_excerpt",
        "value": "```\nunfazed\\\n  -d mydenovos.bed\\\n  -s sites.vcf.gz\\\n  -p myped.ped\\\n  -g 38 \\\n  --bam-pairs a_sample:a_sample.bam\n```\n\nThis will print a bed file of phased variants. The input bed file must have the following tab-separated columns: chrom, start, end, kid_id, var_type, where var_type is SNV, INDEL, POINT, DEL, DUP, INV, INS, MEI, or BND.\n"
      },
      "source": "https://raw.githubusercontent.com/jbelyeu/unfazed/master/README.md",
      "technique": "header_analysis"
    }
  ]
}