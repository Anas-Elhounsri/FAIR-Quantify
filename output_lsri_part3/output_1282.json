{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "To cite TrendCatcher",
        "parent_header": [
          "Documentation and Further details"
        ],
        "type": "Text_excerpt",
        "value": "<a id=\"1\"></a> \nWang X, Sanborn MA, Dai Y, Rehman J. Temporal transcriptomic analysis using TrendCatcher identifies early and persistent neutrophil activation in severe COVID-19. JCI Insight. 2022 Apr 8;7(7):e157255. doi: 10.1172/jci.insight.157255. PMID: 35175937; PMCID: PMC9057597.\n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jaleesr/TrendCatcher"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-26T14:52:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-13T09:38:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TrendCatcher is an open source R-package that allows users to systematically analyze and visualize time course data. Please cite \"Temporal transcriptomic analysis using TrendCatcher identifies early and persistent neutrophil activation in severe COVID-19\" by Xinge Wang et al published in JCI Insight (2022) - https://insight.jci.org/articles/view/157255"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "TrendCatcher is a versatile R package for identifying dynamic differentially expressed genes (DDEGs) in RNA-seq longitudinal studies. A time course experiment is a widely used design in the study of cellular processes such as cell differentiation or response to external stimuli. Temporal changes to the gene expression, such as mRNA, is the key to characterizing such biological processes. Here, we present a versatile R package named TrendCatcher to identify the dynamic differentially expressed genes along the biological process time course. \n\n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9969136003692587,
      "result": {
        "original_header": "TrendCatcher Framework Overview",
        "type": "Text_excerpt",
        "value": "TrendCatcher requires 2 main inputs: the raw count table C of a temporal study with a dimension of m \u00d7 n, where m denotes the number of genes and n denotes the number of samples, and a user-defined baseline time variable T, such as \u201c0 hour\u201d. Since samples may have different sequencing depths and batch effect, TrendCatcher integrates with limma and provides preprocessing steps, such as batch correction and normalization. For scRNA-Seq data sets, TrendCatcher extracts cells for each cell type annotated in the meta data slot of Seurat object and converts it into a cell type\u2013specific \u201cpseudobulk\u201d time course RNA library. Based on a user-specified threshold, genes of relatively low abundance are removed from the count table, reads are normalized, and batch effects are removed. TrendCatcher\u2019s core algorithm is composed of 5 main steps: (a) baseline fluctuation confidence interval estimation, (b) model dynamic longitudinal count, (c) time point dynamic P value calculation, (d) gene-wise dynamic P value calculation, and (e) break point screening and gene-wise dynamic pattern assignment. Mathematical details will be expanded in the following sections.  \nFor the output of TrendCatcher, there are mainly 2 components: a master table and a set of functions for versatile visualization purposes. The master table contains all the dynamic details of each single gene, including its dynamic P value, its break point location time, and its dynamic trajectory pattern. In addition to the master table, TrendCatcher produces 5 main types of visualizations: (a) a figure showing the observed counts and fitted splines of each gene, (b) genes trajectories from each trajectory pattern group, (c) a hierarchical pie chart that represents trajectory pattern composition, (d) a TimeHeatmap to infer trajectory dynamics of top dynamic biological pathways, and (e) a 2-sided bar plot to show the top most positively and negatively changed (averaged accumulative log2FC) biological pathways. \n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8892245371672657,
      "result": {
        "original_header": "4. Visualize biological pathway dynamic progamming using TimeHeatmap",
        "type": "Text_excerpt",
        "value": "Generate a TimeHeatmap to visualize the most dynamic top N biological pathways enrichment change \nover time, we designed a window-sliding strategy to capture all the up-regulated or \ndown-regulated genes for each time interval.\n```r\ntime_heatmap<-draw_TimeHeatmap_GO(master.list = master.list, logFC.thres = 0, top.n = 10, dyn.gene.p.thres = 0.05, keyType = \"SYMBOL\", OrgDb = \"org.Mm.eg.db\", ont = \"BP\", term.width = 80, GO.enrich.p = 0.05, figure.title = \"TimeHeatmap\")  \nprint(time_hetmap$time.heatmap)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jaleesr/TrendCatcher/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation and Demo Scripts",
        "type": "Text_excerpt",
        "value": "Instructions, documentation, and tutorials can be found at:\n\n+ [https://jaleesr.github.io/TrendCatcher](https://jaleesr.github.io/TrendCatcher/)\n\n\nA PDF manual [TrendCatcher_1.0.0.pdf](./TrendCatcher_1.0.0.pdf) can be found in the repository.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation and Further details",
        "type": "Text_excerpt",
        "value": "Instructions, documentation, and tutorials can be found at:\n\n+ [https://jaleesr.github.io/TrendCatcher](https://jaleesr.github.io/TrendCatcher/)\n\n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jaleesr/TrendCatcher/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jaleesr/TrendCatcher/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jaleesr/TrendCatcher"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TrendCatcher"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/./man/figures/IndividualGeneTraj.png"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/./man/figures/TrajClusterGrid.png"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/./man/figures/Full_TimeHeatmap.png"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/./man/figures/CompareCurves.png"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "* Install latest development version from GitHub (requires [devtools](https://github.com/hadley/devtools) package):\n\n```r\nif (!require(\"devtools\")) {\n  install.packages(\"devtools\")\n}\ndevtools::install_github(\"jaleesr/TrendCatcher\", dependencies = TRUE, build_vignettes = FALSE)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9799332252550094,
      "result": {
        "original_header": "1. Identify dynamic differentially expressed genes (DDEGs) and generate master.list object",
        "type": "Text_excerpt",
        "value": "```r\nlibrary(\"TrendCatcher\")\nexample.file.path<-system.file(\"extdata\", \"Brain_DemoCountTable.csv\", package = \"TrendCatcher\")\nmaster.list<-run_TrendCatcher(count.table.path = example.file.path, \nbaseline.t = 0,\ntime.unit = \"h\",\nmin.low.count = 1,\npara.core.n = NA,\ndyn.p.thres = 0.05)\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9718498843810331,
      "result": {
        "original_header": "2. Draw individual gene trajectory with observed data and fitted data",
        "type": "Text_excerpt",
        "value": "```r\ngene.symbol.arr<-unique(master.list$master.table$Symbol)[1:6]\np<-draw_GeneTraj(master.list = master.list, gene.symbol.arr = gene.symbol.arr, ncol = 3, nrow = 2)\np\n```\n![plot](./man/figures/IndividualGeneTraj.png) \n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9393472513056508,
      "result": {
        "original_header": "3. Group genes based on their trajectory pattern type",
        "type": "Text_excerpt",
        "value": "```r\ndraw_TrajClusterGrid(\n  master.list,\n  min.traj.n = 10,\n  save.as.PDF = NA,\n  pdf.width = 10,\n  pdf.height = 10\n)\n```\n![plot](./man/figures/TrajClusterGrid.png) \n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8180488291203684,
      "result": {
        "original_header": "1. Identify dynamic differentially expressed genes (DDEGs) and generate master.list object",
        "type": "Text_excerpt",
        "value": "```r\nlibrary(\"TrendCatcher\")\nexample.file.path<-system.file(\"extdata\", \"Brain_DemoCountTable.csv\", package = \"TrendCatcher\")\nmaster.list<-run_TrendCatcher(count.table.path = example.file.path, \nbaseline.t = 0,\ntime.unit = \"h\",\nmin.low.count = 1,\npara.core.n = NA,\ndyn.p.thres = 0.05)\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jaleesr/TrendCatcher/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "r, rna-seq, single-cell, temporal-data, transcriptome, transcriptomics, visualization"
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/man/figures/TrendCatcherWorkFlow.png"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TrendCatcher"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jaleesr"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 132017,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:27:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation and Demo Scripts",
        "type": "Text_excerpt",
        "value": "Instructions, documentation, and tutorials can be found at:\n\n+ [https://jaleesr.github.io/TrendCatcher](https://jaleesr.github.io/TrendCatcher/)\n\n\nA PDF manual [TrendCatcher_1.0.0.pdf](./TrendCatcher_1.0.0.pdf) can be found in the repository.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jaleesr/TrendCatcher/master/README.md",
      "technique": "header_analysis"
    }
  ]
}