{
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations."
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sandialabs/OperonSEQer"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-27T16:29:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-04T15:56:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.999308996136266,
      "result": {
        "original_header": "OperonSEQer",
        "type": "Text_excerpt",
        "value": "OperonSEQer takes RNA-sequencing data and transforms to output a Kruskal-Wallis statistic and p-value for similarity in expression of contiguous gene pairs and the intergentic region. Following this, the data is run through a suite of 6 machine learning models which determine whether each gene pair is an operon pair or not. Finally, a voting system is implemented to establish confidence in the operon pair calls.  \n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9041416398430621,
      "result": {
        "original_header": "Expected output files",
        "type": "Text_excerpt",
        "value": "[Model]_result.csv - specs for each of the six models (XGB, MLP, SVM, RF, LR and GNB) if a prediction was provided \n[Model]_predictions.csv - operon pair predictions for each of the six models \n[Model] ROC curve - ROC curve for each of the six models \nOperonSEQer_vote_result.csv - final vote tally of operon pair calls\n \n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.913917212438182,
      "result": {
        "original_header": "For advanced users:",
        "type": "Text_excerpt",
        "value": "B)\nA folder called TrainingModels contains the code to train all six ML models with new data\n \n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.891736319639932,
      "result": {
        "type": "Text_excerpt",
        "value": "(c) 2021: National Technology & Engineering Solutions of Sandia, LLC (NTESS) \n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sandialabs/OperonSEQer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sandialabs/OperonSEQer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sandialabs/OperonSEQer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OperonSEQer"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "OperonSEQer"
        ],
        "type": "Text_excerpt",
        "value": "It is highly recommended to install OperonSEQer in a virtual environment such as conda:\n\n**conda create -n OperonSEQer_env python=3.7**\n\n**conda activate OperonSEQer_env**\n\n**cd \\path\\to\\cloned\\repository**\n\n**pip install -r requirements.txt**\n\n**pip install .**\n\nNote: If you are having trouble downloading dependencies through pip install (due to firewall or proxy), manually download the modules listed in the requirements file\n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9245167545104314,
      "result": {
        "original_header": "Expected output files",
        "type": "Text_excerpt",
        "value": "Data_CoverageExtracted.txt - intermediate file with extracted coverages \nData_predsMerged.txt - intermediate file with predictions merged if a prediction was provided \n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8841438940161027,
      "result": {
        "original_header": "For advanced users:",
        "type": "Text_excerpt",
        "value": "A)\nIndividual scripts are provided for more advanced users that want to run individual parts of the pipeline.  \n1) extractCoverageInts.py\n2) mergepreds.py\n3) formatData.py\n4) OperonSEQer.py\n5) voting.py \n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.819378264742526,
      "result": {
        "original_header": "Expected output files",
        "type": "Text_excerpt",
        "value": "Data_CoverageExtracted.txt - intermediate file with extracted coverages \n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9019229624171622,
      "result": {
        "original_header": "For advanced users:",
        "type": "Text_excerpt",
        "value": "1) extractCoverageInts.py\n2) mergepreds.py\n3) formatData.py\n4) OperonSEQer.py\n5) voting.py \n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sandialabs/OperonSEQer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scr-2679, snl-data-analysis"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD-3-Clause\n\nMLP 2.0\n\nCopyright 2021 National Technology & Engineering Solutions of Sandia, LLC (NTESS). Under the terms of Contract DE-NA0003525 with NTESS, the U.S. Government retains certain rights in this software.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OperonSEQer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "sandialabs"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 194688,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "OpenEdge ABL",
        "size": 134,
        "type": "Programming_language",
        "value": "OpenEdge ABL"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "OperonSEQer"
        ],
        "type": "Text_excerpt",
        "value": "OperonSEQer is designed to be run on Linux or Mac platforms and requires Python 3.7 or greater. \nSee setup.py file for specific requirements (they will be automatically installed if the protocol below is followed, but can also be installed manually)\n\nNOTE: If the RF.p file from the repo isn't working, please download the RF.p file from the following location: \nhttps://drive.google.com/file/d/1FVCuHcQWX2pSnVBA-jfTwY2df3EuS1M2/view?usp=sharing\n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:54:15",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "parent_header": [
          "OperonSEQer"
        ],
        "type": "Text_excerpt",
        "value": "**python OperonSEQer -h**\n\n~~~\nusage: OperonSEQer [-h] -c COVFILE -g GFF -o OUT [-p PREDS] [-k] [-t PATH] [-d DELIMITER]\n\nOperonSEQer\n\noptional arguments:\n  -h, --help                          show this help message and exit\n  -c COVFILE, --coverage COVFILE      scaled coverage file from RNA-seq\n  -g GFF, --gff GFF                   modified gff file for organism (chr archive type start stop . strand . geneName)\n  -o OUT, --output_name OUT           output prefix\n  -t THRESH, --threshold THRESH       threshold for number of calls to become an operon (default is 3)\n  -p PREDS, --preds PREDS             prediction file (optional)\n  -k, --pickleit                      if true, saves the processed data as a pickle file\n  -t PATH, --path PATH                optional folder path where input files are and output files go (if not specified, current directory is used)\n  -d DELIMITER, --delimiter DELIMITER optional delimiter for gff file (if not specified, tab is assumed)\n~~~\n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "OperonSEQer"
        ],
        "type": "Text_excerpt",
        "value": "In the folder ExampleFiles, the following input files are provided as an example:\n\n**SRR10775302_sort.cov** - Coverage file generated from SRR10775302 (Culviner et al, 2020, DOI: https://doi.org/10.1128/mBio.00010-20)\n\n**MicrobesOnline_Operon_Ecoli_MG1655.txt** - Operon prediciton downloaded from Microbes Online (http://www.microbesonline.org/, Dehal et al, 2009, DOI: 10.1093/nar/gkp919)\n\n**Escherichia_coli_mg1655_lite.txt** - GFF file modified from original downloaded at https://bacteria.ensembl.org/index.html\n\nUse the following to obtain output files from the example:\n\npython OperonSEQer -c SRR10775302_sort.cov -g Escherichia_coli_mg1655_lite.txt -p MicrobesOnline_Operon_Ecoli_MG1655.txt -k -d space [-t if you want to specify an output path please do so]\n"
      },
      "source": "https://raw.githubusercontent.com/sandialabs/OperonSEQer/main/README.md",
      "technique": "header_analysis"
    }
  ]
}