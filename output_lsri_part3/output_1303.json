{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/midiacom/BNS-Framework"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-18T18:59:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-12T08:56:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.8306592450582073,
      "result": {
        "original_header": "OMNeT++ 4.6",
        "type": "Text_excerpt",
        "value": "In general OMNeT++ requires that its bin directory should be in the PATH. You should add a line something like this to your .bashrc: \nThe configure script detects installed software and configuration of your system. \n"
      },
      "source": "https://raw.githubusercontent.com/midiacom/BNS-Framework/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8657680102119184,
      "result": {
        "original_header": "Castalia with BNS Framework",
        "type": "Text_excerpt",
        "value": "If you\u2019ve downloaded a compressed file (instead of cloning the project) then untar and unzip it: \n"
      },
      "source": "https://raw.githubusercontent.com/midiacom/BNS-Framework/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.891039703777235,
      "result": {
        "type": "Text_excerpt",
        "value": "If you use this framework, please refer to: \n"
      },
      "source": "https://raw.githubusercontent.com/midiacom/BNS-Framework/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/midiacom/BNS-Framework/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/midiacom/BNS-Framework/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "midiacom/BNS-Framework"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OMNeT++ 4.6"
      },
      "source": "https://raw.githubusercontent.com/midiacom/BNS-Framework/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9876997057357235,
      "result": {
        "original_header": "OMNeT++ 4.6",
        "type": "Text_excerpt",
        "value": "Website: https://omnetpp.org/software/2014/12/02/omnet-4-6-released \n$ ipfs get /ipns/ipfs.omnetpp.org/release/4.6/omnetpp-4.6-src.tgz \n$ tar xvfz omnetpp-4.6-src.tgz \nIn general OMNeT++ requires that its bin directory should be in the PATH. You should add a line something like this to your .bashrc: \n$ export PATH=$PATH:$HOME/omnetpp-4.6/bin \nYou may also have to specify the path where shared libraries are loaded from. Use: \n$ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/omnetpp-4.6/lib \nIf configure complains about not finding the Tcl library directory, you may specify it by setting the TCL_LIBRARY environment variable. \nThe configure script detects installed software and configuration of your system. \nWhen ./configure has finished, you can compile OMNeT++. Type in the terminal: \n"
      },
      "source": "https://raw.githubusercontent.com/midiacom/BNS-Framework/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9948369196314995,
      "result": {
        "original_header": "Antidote Library",
        "type": "Text_excerpt",
        "value": "Install the modified Antidote Library. \nUse the code and follow the steps in: https://github.com/conqlima/Antidote\n \n"
      },
      "source": "https://raw.githubusercontent.com/midiacom/BNS-Framework/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9379856616377964,
      "result": {
        "original_header": "Castalia with BNS Framework",
        "type": "Text_excerpt",
        "value": "If you\u2019ve downloaded a compressed file (instead of cloning the project) then untar and unzip it: \n$ tar \u2013xvzf Castalia-master.tar.gz \n$ cd Castalia/Castalia  (or cd Castalia-yourchosenname) \n"
      },
      "source": "https://raw.githubusercontent.com/midiacom/BNS-Framework/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9900442500904301,
      "result": {
        "type": "Text_excerpt",
        "value": "To install you must have OMNeT++ 4.6 and Antidote Library. \nFollow the steps: \n"
      },
      "source": "https://raw.githubusercontent.com/midiacom/BNS-Framework/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8195841109693269,
      "result": {
        "original_header": "OMNeT++ 4.6",
        "type": "Text_excerpt",
        "value": "Download: \n$ tar xvfz omnetpp-4.6-src.tgz \n"
      },
      "source": "https://raw.githubusercontent.com/midiacom/BNS-Framework/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/midiacom/BNS-Framework/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/midiacom/BNS-Framework/main/Castalia/LICENSE"
      },
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BNS-Framework"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "midiacom"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1377694,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 67574,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 53597,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/midiacom/BNS-Framework/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:31:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}