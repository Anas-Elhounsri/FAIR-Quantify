{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tjgu/miTAR"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-17T01:00:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-15T07:46:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.8696969554766191,
      "result": {
        "original_header": "Process for identifying the optimal parameters for each model",
        "type": "Text_excerpt",
        "value": "To obtain the best hyperparameters for each model, multiple hyperparameters were tested at a wide range: the learning rates at 0.2, 0.1, 0.05, 0.01, 0.005, and 0.001; the dropout rates at 0.1, 0.2, 0.3, 0.4, and 0.5; and the batch sizes at 10, 30, 50, 100, and 200. The program, parameter_sel_CNN_BiRNN_DeepMirTar_miTAR1.py, was used to identify the best parameters for miTAR1; parameter_sel_CNN_BiRNN_miRAW_miTAR2.py was used to identify the best parameters for miTAR2; and parameter_sel_CNN_BiRNN_MirTarRAW_miTAR.py was used to identify the best parameters for miTAR. After obtaining the best hyperparameters, each dataset was randomly split 30 times into training, validation and test datasets and the performance of each model was reported using the average accuracy with 95% confidence interval. evals_CNN_BiRNN_DeepMirTar_miTAR1_sampling.py, evals_CNN_BiRNN_miRAW_miTAR2_sampling.py, and evals_CNN_BiRNN_MirTarRAW_miTAR_sampling.py were used to perform 30 times' training, validation and test separately for each model. The three models with the best parameters were saved in results folder. They are miTAR1_CNN_BiRNN_b30_lr0.005_dout0.2.h5, miTAR2_CNN_BiRNN_b200_lr0.1_dout0.4.h5, and miTAR_CNN_BiRNN_b100_lr0.005_dout0.2.h5.\n \n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8667247717733714,
      "result": {
        "original_header": "Tools for predicting miRNA targets using trained models",
        "type": "Text_excerpt",
        "value": "predict_multimiRmultimRNA.py can be used to predict the targets for multiple miRNAs. An example is shown here:  \n**The model used in the predict_multimiRmultimRNA.py and predict_onemiRmultimRNA.py is miTAR. If you would like to use a different model, please replace the model with another one, and change the fragment length to match the model input.**\n \n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9537108199584637,
      "result": {
        "original_header": "Understanding the output",
        "type": "Text_excerpt",
        "value": "The results from predict_onemiRmultimRNA.py and predict_multimiRmultimRNA.py were saved to the file following -o, such as results/tests/mirna_multiple_predictedTar.fa as shown in the above example. In the fasta file, each line following > contains the miRNA/gene information. For example, the first line in the results/tests/mirna_multiple_predictedTar.fa file: >hsa-miR-22-3p|1_long|2|4|0.9964378. \nhsa-miR-22-3p is the miRNAID; 1_long is the geneID; 2 is the total number of target site identified as the target location in one gene ( in this case, two miRNA target sites were identified in 1_long gene); 4 is the number of target site tested starting from 0 (in this case, the 4th target site); 0.9964378 is the probability of the prediction for this specific target site. \n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9827570201574198,
      "result": {
        "original_header": "conda",
        "type": "Text_excerpt",
        "value": "This directory contains a Conda package with all the packages and dependencies installed. We supplied the package for 11 platforms. The package is renamed as mitar. \n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9477120186589734,
      "result": {
        "original_header": "scripts_data_models",
        "type": "Text_excerpt",
        "value": "This directory contains all the raw scripts, the data used for generating the models (data directory), and the trained models (in results directory).\n \n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8146178506588443,
      "result": {
        "original_header": "Suggestions on selecting high confident miRNA targets",
        "type": "Text_excerpt",
        "value": "You can increase the prediction probablity for each site that has been found; or increase the number of target sites per gene\n \n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tjgu/miTAR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tjgu/miTAR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tjgu/miTAR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "miRNA target prediction"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999785247330921,
      "result": {
        "original_header": "conda",
        "type": "Text_excerpt",
        "value": "This directory contains a Conda package with all the packages and dependencies installed. We supplied the package for 11 platforms. The package is renamed as mitar. \n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999830322,
      "result": {
        "original_header": "mitar",
        "type": "Text_excerpt",
        "value": "This directory contains the package of miTAR, which renamed: mitar-0.0.1.tar.gz but without dependencies installed.\n###### How to use it:\nDownload the package, uncompress it and use the scripts directly or install by \n`python setup.py install`\n \n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8630078600627104,
      "result": {
        "original_header": "Tools for predicting miRNA targets using trained models",
        "type": "Text_excerpt",
        "value": "predict_onemiRmultimRNA.py can be used to predict the targets for one miRNA. An example is shown here: \n    python predict_onemiRmultimRNA.py -i1 data/tests/mrna_multiple_mixedLongShort.fa -i2 data/tests/mirna_hsa-miR-139-5p.txt -o results/tests/mir139-5p_predictedTar.fa -p 0.8 -ns 1 -s 22 \nThe meaning of the parameters can be obtained by python predict_onemiRmultimRNA.py -h \npredict_multimiRmultimRNA.py can be used to predict the targets for multiple miRNAs. An example is shown here:  \n    python predict_multimiRmultimRNA.py -i1 data/tests/mrna_multiple_mixedLongShort.fa -i2 data/tests/mirna_multiple.fa -o results/tests/mirna_multiple_predictedTar.fa -s 22 -p 0.8 -ns 1\nThe meaning of the parameters are the same as predict_onemiRmultimRNA.py and can be otained by python predict_multimiRmultimRNA.py -h \n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tjgu/miTAR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "miTAR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "tjgu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 62170,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "miRNA target prediction"
        ],
        "type": "Text_excerpt",
        "value": "The following packages should be installed before running the scripts\n\npython: >=3.6\n\ntensorflow: 1.14.0\n\nkeras: 2.2.4\n\nh5py: 2.9.0\n\nnumpy\n\nmatplotlib\n\nscipy\n\nsklearn\n\nThe input of our tools are: whole sequence/sequences of miRNA/miRNAs from 5'->3'; gene sequence/sequences from 5'->3'. For longer gene sequence, the tools will automatically split into overlapped short sequences that matches the model requirement. \n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:29:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Report issues:",
        "parent_header": [
          "miRNA target prediction"
        ],
        "type": "Text_excerpt",
        "value": "If you have any questions or suggestions or meet any issues, please contact Tongjun Gu: tgu at ufl.edu.\n   \n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use it:",
        "parent_header": [
          "miRNA target prediction",
          "mitar"
        ],
        "type": "Text_excerpt",
        "value": "Download the package and install it on your local machine by \n`conda install --use-local mitar`\n"
      },
      "source": "https://raw.githubusercontent.com/tjgu/miTAR/master/readme.md",
      "technique": "header_analysis"
    }
  ]
}