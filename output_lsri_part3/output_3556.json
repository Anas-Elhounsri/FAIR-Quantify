{
  "application_domain": [
    {
      "confidence": 0.8561949253964521,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vlasmirnov/MAGUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-19T03:32:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-12T13:28:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Graph Clustering Merger"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9780673798392008,
      "result": {
        "original_header": "Purpose and Functionality",
        "type": "Text_excerpt",
        "value": "MAGUS is a tool for piecewise large-scale multiple sequence alignment.  \nThe dataset is divided into subsets, which are independently aligned with a base method (currently MAFFT -linsi). These subalignments are merged together with the Graph Clustering Merger (GCM). GCM builds the final alignment by clustering an alignment graph, which is constructed from a set of backbone alignments. This process allows MAGUS to effectively boost MAFFT -linsi to over a million sequences. \nThe basic procedure is outlined below. Steps 4-7 are GCM.\n1. The input is a set of unaligned sequences. Alternatively, the user can provide a set of multiple sequence alignments and skip the next two steps.\n2. The dataset is decomposed into subsets.\n3. The subsets are aligned with MAFFT -linsi. \n4. A set of backbone alignments are generated with MAFFT -linsi (or provided by the user).\n5. The backbones are compiled into an alignment graph.\n6. The graph is clustered with MCL.\n7. The clusters are resolved into a final alignment. \n"
      },
      "source": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.972892590023501,
      "result": {
        "original_header": "Controlling the pipeline",
        "type": "Text_excerpt",
        "value": "*-t* specifies the guide tree method to use, and is the main way to set the decomposition strategy.  \nAvailable options are fasttree (default), parttree, clustal (recommended for very large datasets), and random.  \n*--maxnumsubsets* sets the desired number of subsets to decompose into (default 25).  \n*--maxsubsetsize* sets the threshold to stop decomposing subsets below this number (default 50).  \nDecomposition proceeds until maxnumsubsets is reached OR all subsets are below maxsubsetsize. \n*-r* and *-m* specify the number of MAFFT backbones and their maximum size, respectively. Default to 10 and 200.  \nAlternatively, the user can provide his own backbones; *-b* can be used to provide a directory or a list of files. \n*--graphtracemethod* is the flag that governs the graph trace method. Options are minclusters (default and recommended), fm, mwtgreedy (recommended for very large graphs), rg, or mwtsearch. \nBy default, MAGUS constrains the merged alignment to induce all subalignments. This constraint can be disabled with *-c false*.  \nThis drastically slows MAGUS and is strongly not recommended above 200 sequences.  \n"
      },
      "source": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9877173507658572,
      "result": {
        "original_header": "Things to Keep in Mind",
        "type": "Text_excerpt",
        "value": "* MAGUS will not overwrite existing backbone, graph and cluster files.  \nPlease delete them/specify a different working directory to perform a clean run.\n* Related issue: if MAGUS is stopped while running MAFFT, MAFFT's output backbone files will be empty.  \nThis will cause errors if MAGUS reruns and finds these empty files.\n* A large number of subalignments (>100) will start to significantly slow down the ordering phase, especially for very heterogenous data.  \nI would generally disadvise using more than 100 subalignments, unless the data is expected to be well-behaved.   \n"
      },
      "source": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vlasmirnov/MAGUS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vlasmirnov/MAGUS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vlasmirnov/MAGUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MAGUS"
      },
      "source": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing MAGUS",
        "parent_header": [
          "MAGUS"
        ],
        "type": "Text_excerpt",
        "value": "Deepest thanks to Baqiao Liu for setting up the MAGUS PyPI package (https://pypi.org/project/magus-msa/)  \nThis is currently the easiest way to get started with MAGUS.   \nThe package can be installed with   \n  \n*pip3 install magus-msa*  \n  \nand executed with   \n  \n*magus \\<arguments\\>*  \n  \nAlternatively, you can download and extract the code from this repository to a directory of your choice.  \nThen, you can run MAGUS with \n  \n*python3 <directory_path>/magus.py <arguments>*\n\n- - - -\n"
      },
      "source": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9859705316492318,
      "result": {
        "original_header": "Controlling the pipeline",
        "type": "Text_excerpt",
        "value": "**Specify subset decomposition behavior**  \n*python3 ../magus.py -d outputs -i unaligned_sequences.txt -t fasttree --maxnumsubsets 100 --maxsubsetsize 50 -o magus_result.txt*   \n**Specify beckbones for alignment graph**  \n*python3 ../magus.py -d outputs -i unaligned_sequences.txt -r 10 -m 200 -o magus_result.txt*  \n*python3 ../magus.py -d outputs -s subalignments -b backbones -o magus_result.txt*   \n**Specify graph trace method**  \n*python3 ../magus.py -d outputs -i unaligned_sequences.txt --graphtracemethod mwtgreedy -o magus_result.txt*   \n**Unconstrained alignment**  \n*python3 ../magus.py -d outputs -i unaligned_sequences.txt -c false -o magus_result.txt*   \n"
      },
      "source": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8592685445601934,
      "result": {
        "original_header": "Controlling the pipeline",
        "type": "Text_excerpt",
        "value": "**Specify beckbones for alignment graph**  \n*python3 ../magus.py -d outputs -i unaligned_sequences.txt -r 10 -m 200 -o magus_result.txt*  \n*python3 ../magus.py -d outputs -s subalignments -b backbones -o magus_result.txt*   \n**Unconstrained alignment**  \n*python3 ../magus.py -d outputs -i unaligned_sequences.txt -c false -o magus_result.txt*   \n"
      },
      "source": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vlasmirnov/MAGUS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MAGUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "vlasmirnov"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 196521,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 115299,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 58575,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 19321,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 257,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lrauschning",
          "type": "User"
        },
        "date_created": "2024-03-25T09:53:33Z",
        "date_published": "2024-03-25T09:55:59Z",
        "description": "This release changes the packaging of MAGUS to a single Python package built using a `pyproject.toml`.\r\nIt should also fix some issues related to container deployment.",
        "html_url": "https://github.com/vlasmirnov/MAGUS/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 148179978,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/vlasmirnov/MAGUS/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/vlasmirnov/MAGUS/releases/148179978",
        "value": "https://api.github.com/repos/vlasmirnov/MAGUS/releases/148179978",
        "zipball_url": "https://api.github.com/repos/vlasmirnov/MAGUS/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lrauschning",
          "type": "User"
        },
        "date_created": "2024-02-26T16:02:20Z",
        "date_published": "2024-02-26T16:04:18Z",
        "description": "Minor update enabling MAGUS to write output to `stdout`. Also changes the logging to default to `stderr` instead of `stdout`.",
        "html_url": "https://github.com/vlasmirnov/MAGUS/releases/tag/v0.1.3",
        "name": "v0.1.3",
        "release_id": 143656975,
        "tag": "v0.1.3",
        "tarball_url": "https://api.github.com/repos/vlasmirnov/MAGUS/tarball/v0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/vlasmirnov/MAGUS/releases/143656975",
        "value": "https://api.github.com/repos/vlasmirnov/MAGUS/releases/143656975",
        "zipball_url": "https://api.github.com/repos/vlasmirnov/MAGUS/zipball/v0.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lrauschning",
          "type": "User"
        },
        "date_created": "2023-09-15T13:33:12Z",
        "date_published": "2023-09-15T13:34:03Z",
        "description": "Forgot to bump version number earlier.",
        "html_url": "https://github.com/vlasmirnov/MAGUS/releases/tag/v0.1.2a",
        "name": "v0.1.2a",
        "release_id": 121303864,
        "tag": "v0.1.2a",
        "tarball_url": "https://api.github.com/repos/vlasmirnov/MAGUS/tarball/v0.1.2a",
        "type": "Release",
        "url": "https://api.github.com/repos/vlasmirnov/MAGUS/releases/121303864",
        "value": "https://api.github.com/repos/vlasmirnov/MAGUS/releases/121303864",
        "zipball_url": "https://api.github.com/repos/vlasmirnov/MAGUS/zipball/v0.1.2a"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lrauschning",
          "type": "User"
        },
        "date_created": "2023-09-15T12:55:11Z",
        "date_published": "2023-09-15T12:56:40Z",
        "description": "Should fix an issue with the conda build env not finding the version number.",
        "html_url": "https://github.com/vlasmirnov/MAGUS/releases/tag/v0.1.2",
        "name": "v0.1.2",
        "release_id": 121298620,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/vlasmirnov/MAGUS/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/vlasmirnov/MAGUS/releases/121298620",
        "value": "https://api.github.com/repos/vlasmirnov/MAGUS/releases/121298620",
        "zipball_url": "https://api.github.com/repos/vlasmirnov/MAGUS/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lrauschning",
          "type": "User"
        },
        "date_created": "2023-09-15T12:00:24Z",
        "date_published": "2023-09-15T12:16:35Z",
        "description": "Added a --version parameter, changed how version is handled internally.",
        "html_url": "https://github.com/vlasmirnov/MAGUS/releases/tag/v0.1.1",
        "name": "v0.1.1",
        "release_id": 121293358,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/vlasmirnov/MAGUS/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/vlasmirnov/MAGUS/releases/121293358",
        "value": "https://api.github.com/repos/vlasmirnov/MAGUS/releases/121293358",
        "zipball_url": "https://api.github.com/repos/vlasmirnov/MAGUS/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "MAGUS"
        ],
        "type": "Text_excerpt",
        "value": "MAGUS requires\n* Python 3\n* MAFFT (linux version is included)\n* MCL (linux version is included)\n* FastTree and Clustal Omega are needed if using these guide trees (linux versions included) \n\nIf you would like to use some other version of MAFFT and/or MCL (for instance, if you're using Mac),\nyou will need to edit the MAFFT/MCL paths in configuration.py  \n(I'll pull these out into a separate config file to make it simpler).\n\n- - - -\n"
      },
      "source": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:12:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 32
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "MAGUS"
        ],
        "type": "Text_excerpt",
        "value": "Please navigate your terminal to the \"example\" directory to get started with some sample data.  \nA few basic ways of running MAGUS are shown below.  \nRun \"magus.py -h\" to view the full list of arguments. \n\n**Align a set of unaligned sequences from scratch**  \n*python3 ../magus.py -d outputs -i unaligned_sequences.txt -o magus_result.txt*  \n\n*-o* specifies the output alignment path  \n*-d* (optional) specifies the working directory for GCM's intermediate files, like the graph, clusters, log, etc.  \n\n**Merge a prepared set of alignments**  \n*python3 ../magus.py -d outputs -s subalignments -o magus_result.txt*  \n\n*-s* specifies the directory with subalignment files. Alternatively, you can pass a list of file paths.   \n\n- - - -\n"
      },
      "source": "https://raw.githubusercontent.com/vlasmirnov/MAGUS/master/README.md",
      "technique": "header_analysis"
    }
  ]
}