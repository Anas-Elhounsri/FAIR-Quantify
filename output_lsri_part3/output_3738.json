{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite",
        "parent_header": [
          "5. without prior knowledge, run the function with several lambda across multiple datasets"
        ],
        "type": "Text_excerpt",
        "value": "Please cite our paper if you use this code in your own work:\n\n```\nSong, Q., Su, J., Miller, L.D. and Zhang, W., 2021. scLM: automatic detection of consensus gene clusters across multiple single-cell datasets. Genomics, Proteomics & Bioinformatics, 19(2), pp.330-341.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/QSong-github/scLM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-02T18:07:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-23T09:38:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Automatic detection of consensus gene clusters across multiple single-cell datasets"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8319227796334867,
      "result": {
        "original_header": "scLM",
        "type": "Text_excerpt",
        "value": "A R-based tool to do the automatic identification of co-expressed genes across mulitple single cell RNA-seq datasets simultaneously\n \n"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8732809393895178,
      "result": {
        "original_header": "2. Input scRNA-seq Data File Format",
        "type": "Text_excerpt",
        "value": "scLM works with multiple single cell RNA-seq dataset as inputs. It also works with one single cell dataset. Bascially, the format looks like the following. Example data files can be found in the ```Data``` folder. \nThe gourd truth labels for cells in each dataset can also be input. The format is as following \n"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/QSong-WF/scLM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/QSong-github/scLM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "QSong-github/scLM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scLM"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/205911304"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Installation",
        "type": "Text_excerpt",
        "value": "```\ndevtools::install_github(\"QSong-github/scLM\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/QSong-github/scLM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scLM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "QSong-github"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 13408,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 9306,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "QSong-github",
          "type": "User"
        },
        "date_created": "2020-12-05T23:00:50Z",
        "date_published": "2023-07-07T15:32:48Z",
        "html_url": "https://github.com/QSong-github/scLM/releases/tag/v1.0.0",
        "name": "scLM",
        "release_id": 111430208,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/QSong-github/scLM/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/QSong-github/scLM/releases/111430208",
        "value": "https://api.github.com/repos/QSong-github/scLM/releases/111430208",
        "zipball_url": "https://api.github.com/repos/QSong-github/scLM/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3.4 run the function with specific lambda across multiple datasets",
        "parent_header": [
          "3. How to use"
        ],
        "type": "Text_excerpt",
        "value": "```\nresult1 <- Multi_NB(datalist=example1, K=3, N=nrow(example1[[1]]))\n```\nresult1 contains the latent variables accompanied with other coefficients, the identified co-expression clusters\n"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5.2 Identify the optimal lambda and co-expression clusters",
        "parent_header": [
          "5. without prior knowledge, run the function with several lambda across multiple datasets"
        ],
        "type": "Text_excerpt",
        "value": "```\nfiles <- list.files(path=path1, pattern='results.RData')\n\n# load all the results in the resA with the list structure\n\ncount <- 0\nresA <- vector('list')\nfor ( i in files){\n    load(i)\n    count <- count +1\n    resA[[count]] <-  results\n    names(resA[[count]]) <- paste0('res_',strsplit(strsplit(i,'_')[[1]][4],'results')[[1]][1])}\n\n\n# identify the result with least BIC value\n\nbicS <- lapply(1:length(resA),function(i){ Res <- resA[[i]][[1]]$BIC })\noptimal.lambda <- grep(min(unlist(bicS)),unlist(bicS))\n\n# optimal co-expression clusters\n\nload(files[optimal.lambda])\nopitmal.cluster <- results$clusters\n```"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:53:56",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3.1 load scLM package",
        "parent_header": [
          "3. How to use"
        ],
        "type": "Text_excerpt",
        "value": "```\nlibrary(scLM)\n```\nrecommend the linux system to run the codes\n"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.2 read in scRNA-seq datasets",
        "parent_header": [
          "3. How to use"
        ],
        "type": "Text_excerpt",
        "value": "```\n#' load the example data\ndata(\"example1\")\n# or \n# data(\"example2\")\n```\nIn this example, we define 3 co-expression clusters for each dataset of the input list example1 and example2\n"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.3 read in ground truth cell labels (this is optional)",
        "parent_header": [
          "3. How to use"
        ],
        "type": "Text_excerpt",
        "value": "```\ndata(example1.member)\n# data(example2.member)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.5 evaluate of clustering results using ground truth (this is optional)",
        "parent_header": [
          "3. How to use"
        ],
        "type": "Text_excerpt",
        "value": "```\n# calculate the Adjusted Rand Index\n\nlibrary(clues)\nadjustedRand(result1$clusters,example1.member)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Examples and reproducible results",
        "type": "Text_excerpt",
        "value": "can be found using the example.R script\n"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5.1 How to use",
        "parent_header": [
          "5. without prior knowledge, run the function with several lambda across multiple datasets"
        ],
        "type": "Text_excerpt",
        "value": "```\nfor (lambda in 1:20)\n{\n    results <- Multi_NB(datalist=example1, K=lambda, N=nrow(example1[[1]]))\n    save(results,file=paste0('path1',lambda,'results.RData')\uff09\n}\n```\nOutput results in a designated path \"path1\"\n"
      },
      "source": "https://raw.githubusercontent.com/QSong-WF/scLM/master/README.md",
      "technique": "header_analysis"
    }
  ]
}