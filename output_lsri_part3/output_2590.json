{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/athalexiou/DIANA-mAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-25T20:44:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-04T13:13:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DIANA-mAP is an automated microRNA NGS analysis pipeline with an emphasis on pre-processing."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9774619980223868,
      "result": {
        "original_header": "DIANA-mAP",
        "type": "Text_excerpt",
        "value": "DIANA-microRNA-Analysis-Pipeline (DIANA-mAP) is a fully automated computational pipeline that allows the user to perform miRNA NGS data analysis from raw sRNA-Seq libraries to quantification and Differential Expression Analysis in an easy, scalable, efficient, and intuitive way.\nEmphasis has been given to data pre-processing, an early, critical step in the analysis for the robustness of the final results and conclusions. Through modularity, parallelizability and customization, DIANA-mAP produces high quality expression results, reports and graphs for downstream data mining and statistical analysis. \nThe tool is free to use under MIT licence, please cite:\n>Alexiou, A.; Zisis, D.; Kavakiotis, I.; Miliotis, M.; Koussounadis, A.; Karagkouni, D.; Hatzigeorgiou, A.G. DIANA-mAP: Analyzing miRNA from Raw NGS Data to Quantification. Genes 2021, 12, 46. (DOI: [10.3390/genes12010046](https://doi.org/10.3390/genes12010046)) \nDIANA-mAP was funded by \u201cELIXIR-GR: The Greek Research Infrastructure for Data Management and Analysis in Life Sciences\u201d (MIS 5002780) which is implemented under the Action \u201cReinforcement of the Research and Innovation Infrastructure\u201d, funded by the Operational Programme \u201cCompetitiveness, Entrepreneurship and Innovation\u201d (NSRF 2014-2020) and co-financed by Greece and the European Union (European Regional Development Fund) \n"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8733380852595949,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "The main DIANA_mAP script used for the analysis of a single sample. The file input can be either in .fq/.fastq format or in compressed .gz format. \n\n**Warning:** If the pre-process step is omitted using the -p flag, the input has to be pre-processed (i.e. without contaminants) and cannot be in compressed .gz format, it has to be provided in .fq/.fastq format. \nThe \"pipeline_arguments\" will be passed to every pipeline run with this script and can be in the form of: diana_map_multi.r \"input_directory\" \"output_directory\" \"number_of_cores\" \"-c 'value' -m 12 -d 'value'\" etc. If no parameters are to be passed to the pipeline, please use empty quotes to nominate that (eg. \"\"). For more information on the parameters available please use the help flag on the diana_map.r script. \n## Output\nThe output results are organized into folders for each sample using the input file name, any value provided in the '-e' parameter (DIANA-mAP script) and the timestamp. Upon the successful completion of the analysis each sample folder contains:\n  - A **Counts.txt result file** containing per known miRNA the raw quantified reads and the normalized quantified reads (RPM)\n  - A **Final_Report.txt file** containing a summary of the analysis statistics\n  - A **Pie chart** showing the distribution of reads after the pre-processing step of the analysis\n  - Two **Sequence Length Distribution graphs**, one before and one after the pre-processing step\n  - A **QC folder** containing the FastQC output files depicting the sample quality before and after pre-processing\n  - An **Intermediate Results folder** produced during the various analysis steps\n \n"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9577458257930747,
      "result": {
        "original_header": "KNOWN ISSUES",
        "type": "Text_excerpt",
        "value": "- `dnapi.py: error: [Errno 28] No space left on device`\n>When analyzing multiple samples in parallel, sometimes python gets overloaded and crashes providing the error above. Please set the parameter 'number_of_cores' of diana_map_multi.r to 5 or less and run the analysis on failed samples again.\nThis issue has been occasionally observed when multiple large samples (5 million reads or more) are analyzed simultaneously.\n \n"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/athalexiou/DIANA-mAP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/athalexiou/DIANA-mAP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "athalexiou/DIANA-mAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DIANA-mAP"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/DIANA-mAP_overview.png"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "DOCKER",
        "parent_header": [
          "DIANA-mAP",
          "INSTALLATION"
        ],
        "type": "Text_excerpt",
        "value": "DIANA-mAP is available as a Docker image in the public repository of Docker Hub under the name of _**athalexiou/diana_map**_. Inside the image all the scripts are available, along with the human GRCh38 reference genome, the v21 and v22 of the miRBase hairpin and mature known miRNAs and finally 4 test sample datasets allowing for a test run upon loading the image on a container. This is the recommended way of running this tool, as there is no need for any complex dependency installations.\n\nThrough the volume option of Docker (-v flag explained below), it is easy to provide the data to be analyzed by DIANA-mAP and the results to be accessible and/or stored locally outside of the container. \n\n**_Please do note that any results not transfered outside of the container will be lost upon exit._**\n\n\n1. **Follow the installation instructions on the docker website to install docker on your machine.**\n\t- If you are a user in an HPC or cluster and do not have root access, ask the IT administrator to install Docker for you and to follow [this guide](https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user) in order to allow your user to run Docker commands without the need for root access or sudo.\n\n2. **Start a container using the DIANA_mAP image from Docker Hub.**\n    1. Provide a directory in your local machine to connect with the container in the flag -v of the command below by changing the \"/local/directory/to/connect/to/container/\" with the local directory of your choosing. By doing that, you will be able to transfer data in or out of the container through the directory \"/home/my-data/\" inside the container.\n         - `docker run -it --name diana_map_container -v /local/directory/to/connect/to/container/:/home/my-data/ -w=\"/home/DIANA_mAP/\" --entrypoint \"/home/init.sh\" athalexiou/diana_map:v1.0 /bin/bash`\n    2. The above command with start the container and position your terminal into the \"DIANA_mAP\" folder, where all the DIANA_mAP scripts are.\n    3. To test the pipeline, the following command will perform an analysis on the 4 test samples provided in the image. Please provide the desired output directory and the number of cores to use in the following command:\n        - `Rscript diana_map_multi.r -d /home/DIANA_mAP/example_DE_conditions_table.csv /home/test_data/ /path/to/output/directory/ {number_of_cores} \"\"`\n\n"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "STANDALONE",
        "parent_header": [
          "DIANA-mAP",
          "INSTALLATION"
        ],
        "type": "Text_excerpt",
        "value": "DIANA_mAP can be downloaded from this repository and run standalone on unix-based systems. The following dependencies must be installed and their paths adjusted into the \"diana_map_config.r\" file. All the downloaded files of this repository must remain in the same directory. Due to the amount of dependencies and the required R libraries, it is highly recommended to run this tool through Docker as described above.\n\nFor Red Hat, CentOS, and Fedora systems substitute all the \"apt-get\" with \"yum\" on the following commands.\n\n1. **Install R** (tested with v3.6)\n\n2. **Install JAVA jre** (for FastQC)\n    - `apt-get install openjdk-8-jre`\n    - test: `java -version`\n\n3. **Install FastQC** (tested with v.0.11.7)\n    - Download the fastqc.zip from the fastqc repository\n    - Unzip into folder of choice, get into created folder\n    - `chmod 755 fastqc`\t(provide execution rights to the fastqc executable)\n    - `sudo ln -s /path/to/fastqc/fastqc /usr/local/bin/fastqc`\t\t(to be able to run fastqc from anywhere)\n\n4. **Install Python 2** (for DNApi)\n    - `apt-get install python2.7`\n    - `sudo ln -s /usr/bin/python2.7 /usr/bin/python`\n    - test: `python --version`\n\n5. **Install DNApi** (tested with v1.1)\n    - Download the DNApi-master.zip from the DNApi github\n    - Unzip, move into the created directory\n    - test: `python dnapi.py -h`\n\n6. **Install CURL** (for PIP)\n    - `apt-get install curl`\n\n7. **Install PIP** (for Cutadapt)\n    - `curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py`\n    - `python get-pip.py`\n\n8. **Install Cutadapt** (tested with v1.18)\n    - `pip install cutadapt`\n    - test: `cutadapt -h`\n\n9. **Install Perl** (for miRDeep2)\n    - `apt-get install perl`\n    - test: `perl --version`\n\n10. **Install miRDeep2** (tested with v0.1.0)\n    - Download the zip file from github\n    - Unpack and get in the folder\n    - `perl install.pl` (follow instructions)\n    - test: get into the tutorial_dir/ and: `bash run_tut.sh`\n\n11. **Install swan**\n    - Download the precompiled binary file from the EMBL-EBI Kraken directory (Reaper-Tally-Minion package), and save as \"swan\"\n    - `sudo ln -s /path/to/swan /usr/local/bin/swan`  (to be able to be run from anywhere)\n\n12. **Install SRAtoolkit** (for downloader script, tested with v2.9.6)\n    - Download and unzip into the directory of choice\n\n13. **Acquire a reference Genome**\t\t(tested predominantly with human genome GRCh37 and GRCh38)\n    - Download the reference genome to the directory of choice\n    - Use the bowtie tool from miRDeep2/essentials to create an index for your genome\n    - `/path/to/miRDeep2/essentials/bowtie-1.1.1/bowtie-build reference_genome outfile_base`\t(for more info please visit the bowtie 1.x manual)\n\n14. **Download the known miRNAs from miRBase**\t\t(tested with miRBase v20,21,22)\n    - visit the miRBase website and download the hairpin and mature sequences\n\n15. **Adjust the path variables in the Configuration file**\n    - Inside the \"diana_map_config.r\" file adjust the path variables with the proper locations on your machine for: FastQC, DNApi, Cutadapt, mirDeep2 (and its aligner executable), the known_adapter_library.fa file, your indexed reference genome, the miRBase hairpin and mature fasta files.\n    - Make sure that the path to mirDeep2/essentials folder is in your path variable.\n    - If needed for downloading samples from SRA, adjust the path to your sratoolkit folder inside the \"diana_map_downloader.r\" file.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9056455649390989,
      "result": {
        "original_header": "DIANA_mAP Downloader script:",
        "type": "Text_excerpt",
        "value": "A DIANA-mAP R-script to automatically download biological datasets from various online databases using their Accession Numbers (Tested using R version 3.6). Additionally, instead of standalone accession numbers in the terminal, a text file can be provided containing one accession number per line.\nCurrent databases supported: NCBI GEO, NCBI SRA, ENCODE. \nNote: Absolute path to sratoolkit needs to be set manually through line 2 in the script.\n```\nUsage: \nRscript diana_map_downloader.r [-d <output_path>] [--geofilter <filter_regex>] [--encodefilter <filter_type>] [--srafilter <filter_type>] (-i <input>...) \n"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999361787201554,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "\t\t\n\t--geofilter <filter_regex>\n\t\tFilter downloaded GEO files by regular expression ex. BED [default: NULL] (only works for R version > 3.5.0)\n\t\t\n\t--encodefilter <filter_type>\n\t\tFilter downloaded ENCODE files ex. fastq [default: all]\n\t\t\n\t--srafilter <filter_type>\n\t\tFile type to be download ex.fastq or sam to call the corresponding sratoolkit dumper. Only fastq and sam files supported. [default: fastq]\n\t\n\t-h --help\n\t\tShow the help screen```\n\nArguments:\n\t-i <input>...\n\t\tOne or more file accession numbers to download. Also, a file path may be provided including one accession number per line. \u03a4he -i flag is needed before each argument.\n```\n**Example:**\n`Rscript diana_map_downloader.r -d /home/ -i SRR033731 -i GSM508011 -i ENCFF522BMH` \n"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8208182746614215,
      "result": {
        "original_header": "DIANA_mAP Downloader script:",
        "type": "Text_excerpt",
        "value": "A DIANA-mAP R-script to automatically download biological datasets from various online databases using their Accession Numbers (Tested using R version 3.6). Additionally, instead of standalone accession numbers in the terminal, a text file can be provided containing one accession number per line.\nCurrent databases supported: NCBI GEO, NCBI SRA, ENCODE. \n"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8607889645870946,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "\t\t\n\t--geofilter <filter_regex>\n\t\tFilter downloaded GEO files by regular expression ex. BED [default: NULL] (only works for R version > 3.5.0)\n\t\t\n\t--encodefilter <filter_type>\n\t\tFilter downloaded ENCODE files ex. fastq [default: all]\n\t\t\n\t--srafilter <filter_type>\n\t\tFile type to be download ex.fastq or sam to call the corresponding sratoolkit dumper. Only fastq and sam files supported. [default: fastq]\n\t\n\t-h --help\n\t\tShow the help screen```\n\nArguments:\n\t-i <input>...\n\t\tOne or more file accession numbers to download. Also, a file path may be provided including one accession number per line. \u03a4he -i flag is needed before each argument.\n```\n**Example:**\n`Rscript diana_map_downloader.r -d /home/ -i SRR033731 -i GSM508011 -i ENCFF522BMH` \n"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/athalexiou/DIANA-mAP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Athanasios Alexiou\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DIANA-mAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "athalexiou"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 68808,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/athalexiou/DIANA-mAP/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "athalexiou",
          "type": "User"
        },
        "date_created": "2021-02-25T11:17:24Z",
        "date_published": "2021-04-28T21:21:18Z",
        "html_url": "https://github.com/athalexiou/DIANA-mAP/releases/tag/v1.0",
        "name": "v1.0",
        "release_id": 42166151,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/athalexiou/DIANA-mAP/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/athalexiou/DIANA-mAP/releases/42166151",
        "value": "https://api.github.com/repos/athalexiou/DIANA-mAP/releases/42166151",
        "zipball_url": "https://api.github.com/repos/athalexiou/DIANA-mAP/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:27:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}