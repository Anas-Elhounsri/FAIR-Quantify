{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gvignolle/FunOrder"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-19T14:06:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-14T19:55:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The Functional Order (FunOrder) tool - Identification of essential biosynthetic genes through computational molecular co-evolution \u2013 novel tool that allows automated identification of essential genes in a biosynthetic gene clusters (BGC) based solely on genomic data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.951367750844699,
      "result": {
        "original_header": "FunOrder 2",
        "type": "Text_excerpt",
        "value": "The Functional Order (FunOrder) tool - Identification of essential biosynthetic genes through computational molecular co-evolution \u2013 searches for co-evolutionary linked genes in a set of inputted genes. The functionality and applicability was tested with biosynthetic gene clusters (BGCs). The resulting information can be used to choose which genes of a gene cluster are most likely the core genes necessary for the biosynthesis of a secondary metabolite. The flexibility and adaptability of the core program allows the integration of any protein database and can thus be adapted for different phyla and research objectives. FunOrder might be used for the analysis of co-evolution on a whole proteome, enabling the genome wide detection of evolutionary linked genes. \nThe Functional Order (FunOrder) tool - Identification of essential biosynthetic genes through computational molecular co-evolution. FunOrder is copyright 2020 Gabriel A. Vignolle, Denise Schaffer, Robert L. Mach, Astrid R. Mach-Aigner and Christian Derntl, and is released under the MIT License. If you find FunOrder useful to your work, please cite: \nVignolle GA, Mach RL, Mach-Aigner AR and Zimmermann C (2022) **FunOrder 2.0 \u2013 a method for the fully automated curation of co-evolved genes in fungal biosynthetic gene clusters.** Front. Fungal Biol. 3:1020623. doi: [10.3389/ffunb.2022.1020623](https://doi.org/10.3389/ffunb.2022.1020623) \nhttps://zenodo.org/record/5827722 and DOI: 10.5281/zenodo.5827722 for the code and \nVignolle GA, Schaffer D, Zehetner L, Mach RL, Mach-Aigner AR, Derntl C (2021) **FunOrder: A robust and semi-automated method for the identification of essential biosynthetic genes through computational molecular co-evolution.** PLoS Comput Biol 17(9): e1009372. doi: https://doi.org/10.1371/journal.pcbi.1009372 \nThe software input files are biosynthetic gene clusters (BGC) with gene translations in genbank file format or fasta format, that contain the amino acid sequences of all the genes found in the BGC of interest.  \nFunOrder performs a sequence similarity search using blastp on our manually curated database, multiple sequence alignment using the ClustalW algorithm, calculates the best scoring ML tree with RAxML (Randomized Axelerated Maximum Likelihood) for each gene and uses the TreeKO algorithm to calculate the pairwise distances between these trees. Based on these distances **FunOrder 2** automatically determines the optimal number of clusters in the output, and a subsequent k-means clustering based on the first three principal components of the PCAs clusters the genes/proteins into co-evolutionary linked protein families. See our newest publications for further details. \nFunOrder 2 is provided with a database of ascomycete proteomes and can therefore be used for the detection of co-evolution of proteins in this fungal division. If other divisions, classes, or even kingdoms shall be analyzed, a suitable new proteome database must be compiled and tested, see our Wiki for further details. \n"
      },
      "source": "https://raw.githubusercontent.com/gvignolle/FunOrder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/gvignolle/FunOrder/wiki"
      },
      "source": "https://raw.githubusercontent.com/gvignolle/FunOrder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gvignolle/FunOrder/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gvignolle/FunOrder/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gvignolle/FunOrder"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FunOrder 2"
      },
      "source": "https://raw.githubusercontent.com/gvignolle/FunOrder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "FunOrder 2"
        ],
        "type": "Text_excerpt",
        "value": "These instructions should work on [Debian](https://www.debian.org)-based linux distributions such as [Ubuntu](https://www.ubuntu.com).\n\nFirst we install the EMBOSS package according to the instructions.\nThen we install RAxML according to the instructions.\nAfter R, Perl and Python is installed, install the ete2 package.\n\n```\npip install ete2\n```\n\nNow install the R packages if not already installed.\n\n```\ninstall.packages('readr') # at the R prompt\ninstall.packages('stats') # at the R prompt\ninstall.packages('gplots') # at the R prompt\ninstall.packages('car') # at the R prompt\ninstall.packages('mdatools') # at the R prompt\ninstall.packages('xlsx') # at the R prompt\ninstall.packages('cluster') # at the R prompt\ninstall.packages('NbClust') # at the R prompt\ninstall.packages('randtests') # at the R prompt\n```\n\nNow download FunOrder **funorder_XX.tar.xz** and unpack the archive.\n\n```\ntar -xf funorder_XX.tar.xz\n```\n\nopen the scripts funorder.sh ; funorder_fasta_only.sh ; funorder_server.sh ; funorder_server_fasta_only.sh\nchange 'SOURCEDIR' value in line 43 in funorder.sh ; funorder_fasta_only.sh and line 45 in funorder_server.sh ; funorder_server_fasta_only.sh:\n\n```\nSOURCEDIR=~/funorder_proj/funorder_XX/ \n```\nto (path to the funorder_XX directory: e.g. ~/path/to/your/directory/)\n```\nSOURCEDIR=~/path/to/your/directory/funorder_XX/\n```\n\nYou can now add the FunOrder/pipeline directory to your $PATH environmental variable.\nAlternativeley you can call the FunOrder/pipeline directory directly.\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/gvignolle/FunOrder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output files produced by funorder.sh",
        "parent_header": [
          "FunOrder 2",
          "Installation",
          "3) using FunOrder in server mode with gbk files"
        ],
        "type": "Text_excerpt",
        "value": "File                                | Description\n------------------------------------|------------\nFunOrder_Supplementary_Rplots.pdf   | PDF file with the Analyze.R output as described in our publication FunOrder 2\nFunOrder_clustering_Rplots_pred.pdf | PDF file with the Analyze_clustering_pred.R output as described in our publication FunOrder 2\ncluster_definition_pred.xlsx        | XLSX file with the Analyze_clustering_pred.R output as described in our publication FunOrder 2\nstrict_distance.matrix              | matrix of the strict distance\nevol_distance.matrix                | matrix of the evolutionary [speciation] distance\nInternal_coevolution_quotient.txt   | text file containing the ICQ analysis\n\nif the automatic clustering failed then the outputfiles are\n\nFile                                   | Description\n---------------------------------------|------------\nFunOrder_Supplementary_Rplots.pdf      | PDF file with the Analyze.R output as described in our publication FunOrder 2\nFunOrder_clustering_Rplots_defined.pdf | PDF file with the Analyze_clustering_defined.R output as described in our publication FunOrder 2\ncluster_definition_3.xlsx              | XLSX file with the Analyze_clustering_defined.R output as described in our publication FunOrder 2\nstrict_distance.matrix                 | matrix of the strict distance\nevol_distance.matrix                   | matrix of the evolutionary [speciation] distance\nInternal_coevolution_quotient.txt      | text file containing the ICQ analysis\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/gvignolle/FunOrder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output files produced by funorder_fasta_only.sh",
        "parent_header": [
          "FunOrder 2",
          "Installation",
          "4) using FunOrder in server mode with fasta files"
        ],
        "type": "Text_excerpt",
        "value": "File                                | Description\n------------------------------------|------------\nFunOrder_Supplementary_Rplots.pdf   | PDF file with the Analyze.R output as described in our publication FunOrder 2\nFunOrder_clustering_Rplots_pred.pdf | PDF file with the Analyze_clustering_pred.R output as described in our publication FunOrder 2\ncluster_definition_pred.xlsx        | XLSX file with the Analyze_clustering_pred.R output as described in our publication FunOrder 2\nstrict_distance.matrix              | matrix of the strict distance\nevol_distance.matrix                | matrix of the evolutionary [speciation] distance\nInternal_coevolution_quotient.txt   | text file containing the ICQ analysis\n\nif the automatic clustering failed then the outputfiles are\n\nFile                                   | Description\n---------------------------------------|------------\nFunOrder_Supplementary_Rplots.pdf      | PDF file with the Analyze.R output as described in our publication FunOrder 2\nFunOrder_clustering_Rplots_defined.pdf | PDF file with the Analyze_clustering_defined.R output as described in our publication FunOrder 2\ncluster_definition_3.xlsx              | XLSX file with the Analyze_clustering_defined.R output as described in our publication FunOrder 2\nstrict_distance.matrix                 | matrix of the strict distance\nevol_distance.matrix                   | matrix of the evolutionary [speciation] distance\nInternal_coevolution_quotient.txt      | text file containing the ICQ analysis\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/gvignolle/FunOrder/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gvignolle/FunOrder/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bgc, bioinformatics, bioinformatics-pipeline, bioinformatics-tool, biosynthesis, biosynthetic-gene-clusters, evolutionary-computation"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FunOrder"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "gvignolle"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gvignolle/FunOrder/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gvignolle",
          "type": "User"
        },
        "date_created": "2022-07-26T16:33:11Z",
        "date_published": "2022-07-27T16:25:15Z",
        "description": "Update on the funorder.sh code.",
        "html_url": "https://github.com/gvignolle/FunOrder/releases/tag/v2.0.1",
        "name": "v.2.0.1 update",
        "release_id": 72981962,
        "tag": "v2.0.1",
        "tarball_url": "https://api.github.com/repos/gvignolle/FunOrder/tarball/v2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/gvignolle/FunOrder/releases/72981962",
        "value": "https://api.github.com/repos/gvignolle/FunOrder/releases/72981962",
        "zipball_url": "https://api.github.com/repos/gvignolle/FunOrder/zipball/v2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gvignolle",
          "type": "User"
        },
        "date_created": "2022-01-07T12:13:02Z",
        "date_published": "2022-01-07T12:19:19Z",
        "description": "FunOrder 2.0 \u2013 a fully automated method for the identification of co-evolved genes",
        "html_url": "https://github.com/gvignolle/FunOrder/releases/tag/v2.0.0",
        "name": "v2.0.0",
        "release_id": 56606318,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/gvignolle/FunOrder/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/gvignolle/FunOrder/releases/56606318",
        "value": "https://api.github.com/repos/gvignolle/FunOrder/releases/56606318",
        "zipball_url": "https://api.github.com/repos/gvignolle/FunOrder/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gvignolle",
          "type": "User"
        },
        "date_created": "2021-07-21T11:34:14Z",
        "date_published": "2021-07-21T11:49:42Z",
        "description": "This is the updated FunOrder version 1.2.0 - Integrated calculation of Internal co-evolutionary quotient (ICQ)",
        "html_url": "https://github.com/gvignolle/FunOrder/releases/tag/v1.2.0",
        "name": "v1.2.0",
        "release_id": 46536233,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/gvignolle/FunOrder/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/gvignolle/FunOrder/releases/46536233",
        "value": "https://api.github.com/repos/gvignolle/FunOrder/releases/46536233",
        "zipball_url": "https://api.github.com/repos/gvignolle/FunOrder/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gvignolle",
          "type": "User"
        },
        "date_created": "2021-05-21T11:47:58Z",
        "date_published": "2021-05-21T12:27:06Z",
        "description": "This is the updated FunOrder version 1.1.0 ",
        "html_url": "https://github.com/gvignolle/FunOrder/releases/tag/v1.1.0",
        "release_id": 43349273,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/gvignolle/FunOrder/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/gvignolle/FunOrder/releases/43349273",
        "value": "https://api.github.com/repos/gvignolle/FunOrder/releases/43349273",
        "zipball_url": "https://api.github.com/repos/gvignolle/FunOrder/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gvignolle",
          "type": "User"
        },
        "date_created": "2021-02-02T13:25:35Z",
        "date_published": "2021-04-08T06:24:50Z",
        "html_url": "https://github.com/gvignolle/FunOrder/releases/tag/v1.0.0",
        "name": "First release FunOrder",
        "release_id": 41100530,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/gvignolle/FunOrder/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/gvignolle/FunOrder/releases/41100530",
        "value": "https://api.github.com/repos/gvignolle/FunOrder/releases/41100530",
        "zipball_url": "https://api.github.com/repos/gvignolle/FunOrder/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "FunOrder 2"
        ],
        "type": "Text_excerpt",
        "value": "Third party programs\n\n* [Python 2](https://www.anaconda.com)\n* [Perl](https://www.perl.org/get.html)\n* [R](https://www.r-project.org/)\n* [Emboss](http://emboss.sourceforge.net/download/)\n* [RAxML](https://github.com/stamatak/standard-RAxML)\n\nPerl packages:\n\n* [Bio::SeqIO](https://metacpan.org/pod/Bio::SeqIO)\n\nPython packages:\n\n* [ete2](https://pypi.org/project/ete2/)\n\nR packages:\n\n* readr\n* stats\n* gplots\n* car\n* mdatools\n* xlsx\n* cluster\n* NbClust\n* randtests\n\n"
      },
      "source": "https://raw.githubusercontent.com/gvignolle/FunOrder/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:51:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example usage for generic antiSMASH output:",
        "parent_header": [
          "FunOrder 2",
          "Installation",
          "3) using FunOrder in server mode with gbk files"
        ],
        "type": "Text_excerpt",
        "value": "within the antiSMASH output-folder create a new directory \"funorder_output\"\n\n```\nmkdir funorder_output\n```\n\nthen from within the antiSMASH output-folder run following command:\n\n```\nfor file in *cluster*.gbk; do echo $file; sh ~/path/to/directory/funorder_XX/funorder_server.sh [Thread number] $file [absolute path to \"funorder_output\" directory] [database] ; done\n```\n\nThis will perform a FunOrder analysis for each cluster predicted by antiSMASH.\n"
      },
      "source": "https://raw.githubusercontent.com/gvignolle/FunOrder/master/README.md",
      "technique": "header_analysis"
    }
  ]
}