{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "ModEx"
        ],
        "type": "Text_excerpt",
        "value": "Saman Farahmand, Todd Riley, Kourosh Zarringhalam, \"ModEx: A text mining system for extracting mode of regulation of Transcription Factor-gene regulatory interaction\", BioRxiv, 2019\n"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/samanfrm/ModEx"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-06-09T17:45:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-24T07:13:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A text mining system for extracting mode of regulation of Transcription Factor-gene regulatory interaction"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9525775695667973,
      "result": {
        "original_header": "ModEx",
        "type": "Text_excerpt",
        "value": "A text mining system for extracting mode of regulation of Transcription Factor-gene regulatory interaction\n \n"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9631346824416261,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "Deciphering the network of TF-target interactions with information on mode of regulation (activation vs. repression) is an important step toward understanding the regulatory pathways that underlie complex traits. There are many experimental, computational, and manually curated databases of TF-gene interactions. In particular, high-throughput ChIP-seq datasets provide a large-scale map or transcriptional regulatory interactions. \nHowever, these interactions are not annotated with information on context and mode of regulation. Such information is crucial to gain a global picture of gene regulatory mechanisms and can aid in developing machine learning models for applications such as biomarker discovery, prediction of response to therapy, and precision medicine.  \nwe introduce a text-mining system, to annotate ChIP-seq derived interaction with such meta data through mining PubMed articles.\n \n"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/samanfrm/modex/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/samanfrm/modex/master/Scripts/example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/Scripts/example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/samanfrm/modex/master/Scripts/.ipynb_checkpoints/TRRUST-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/Scripts/.ipynb_checkpoints/TRRUST-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/samanfrm/modex/master/Scripts/.ipynb_checkpoints/Untitled1-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/Scripts/.ipynb_checkpoints/Untitled1-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/samanfrm/modex/master/Scripts/.ipynb_checkpoints/example-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/Scripts/.ipynb_checkpoints/example-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/samanfrm/modex/master/Scripts/.ipynb_checkpoints/Untitled-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/Scripts/.ipynb_checkpoints/Untitled-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/samanfrm/ModEx/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "samanfrm/ModEx"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ModEx"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/samanfrm/modex/master/Scripts/.ipynb_checkpoints/run-checkpoint.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies and Installation",
        "parent_header": [
          "ModEx"
        ],
        "type": "Text_excerpt",
        "value": "ModEx can be installed using the GitHub repository. All of the dependencies will be installed via setup.py script.\n```\ngit clone https://github.com/samanfrm/ModEx\ncd gbnet\npython3 setup.py install --user\ncd ..\n```"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9848539523144711,
      "result": {
        "original_header": "Import libraries",
        "type": "Text_excerpt",
        "value": "We need to import required libraries into the script:\n```python\nimport pandas as pd\nimport functions as fn\nimport os\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8626437205358276,
      "result": {
        "original_header": "Import libraries",
        "type": "Text_excerpt",
        "value": "We need to import required libraries into the script:\n```python\nimport pandas as pd\nimport functions as fn\nimport os\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/samanfrm/ModEx/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Saman Farahmand\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ModEx"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "samanfrm"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 154731,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 27183,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 331,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/samanfrm/modex/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies and Installation",
        "parent_header": [
          "ModEx"
        ],
        "type": "Text_excerpt",
        "value": "ModEx can be installed using the GitHub repository. All of the dependencies will be installed via setup.py script.\n```\ngit clone https://github.com/samanfrm/ModEx\ncd gbnet\npython3 setup.py install --user\ncd ..\n```"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the system for a sample query interaction",
        "parent_header": [
          "ModEx"
        ],
        "type": "Text_excerpt",
        "value": "First, the paths to necessary files and dictionaries must be defined based on relative path from script directory:\n\n```python\ninput_directory=os.path.realpath('../Data')\n\nPositive=[]\n[Positive.append(line.strip().upper()) for line in open(input_directory+\"/Positive.txt\")]\nNegative=[]\n[Negative.append(line.strip().upper()) for line in open(input_directory+\"/Negative.txt\")]\n\ngenes_ents=input_directory + \"/ALL_Human_Genes_Info.csv\"\ngenes=pd.read_csv(genes_ents,sep=',',header=(0))\ngenes.fillna('', inplace=True)\n\nlookup_ids=pd.read_csv(input_directory+\"/ncbi_id_lookup.csv\",sep='\\t',header=(0))\n```\nThen, we need to create the query variables and assign them with the transcription factor and target genes entrez IDs respectively:\n\n```python\n# [TF_ID, Target_ID]\nquery_id=[26574,4609]\n```\n\nNext, we need to set the binding port to [Stanford CoreNLP](https://stanfordnlp.github.io/CoreNLP/) as the parser:\n\n```python\nparser_port=\"8000\"\n```\nAlso, optional values for the MeSH term and email address should be defined:\n\n```python\nmesh='humans'\nemail='example@mail.com'\n```\nFinally, we can run the test mining system to annotate the query interaction as well as associated evidence and citations:\n\n```python\nres=fn.modex(query_id,parser_port,Positive,Negative,lookup_ids,genes,mesh,email)\n```\nThe result is a dataframe including mode of regulation and all of the associated citations and evidence sentences for the annotation:\n\n| src_entrez  |  trg_entrez | srcname  | trgname  |  mode     | score  | evi_pmid        | evi_sent                  |\n|-------------|-------------|----------|----------|-----------|--------|-----------------|---------------------------|\n|  26574      |  4609       | AATF     |  MYC     |  positive | 4      | 20924650;2054...| [20924650]WE HAVE UNAMB...|\n\n"
      },
      "source": "https://raw.githubusercontent.com/samanfrm/modex/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:38:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}