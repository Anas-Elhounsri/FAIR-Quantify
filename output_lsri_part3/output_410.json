{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kitneylab/cmatch"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-28T08:49:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-09T04:02:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kitneylab/cmatch/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kitneylab/cmatch/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kitneylab/cmatch"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cMatch"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kitneylab/cmatch/main/run.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "cMatch"
        ],
        "type": "Text_excerpt",
        "value": "Install a virtual environment if you want.\n\n```\n    $ python3 -m venv --prompt cmatch venv\n    $ source ./venv/bin/activate\n```\n\nInstall teh dependencies\n\n```\n    $ pip install -r requirements.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9406069603061525,
      "result": {
        "original_header": "cMatch command line tool",
        "type": "Text_excerpt",
        "value": "run cmatch.py\n```\n    $ ./cmatch.py --help \n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9336391889065431,
      "result": {
        "original_header": "cMatch command line tool",
        "type": "Text_excerpt",
        "value": "run cmatch.py\n```\n    $ ./cmatch.py --help \n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kitneylab/cmatch/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 kitneylab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cmatch"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "kitneylab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 281743,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PowerShell",
        "size": 8834,
        "type": "Programming_language",
        "value": "PowerShell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4215,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisite",
        "parent_header": [
          "cMatch"
        ],
        "type": "Text_excerpt",
        "value": "You need Python 3.9 and pip the package installer for Python [pip](https://pip.pypa.io/en/stable/)\n\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the tests for algorithm CM_0",
        "parent_header": [
          "cMatch",
          "Run the tests"
        ],
        "type": "Text_excerpt",
        "value": "```\n    $ python Testing_Algorithm_CM_0.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the tests for algorithm CM_1",
        "parent_header": [
          "cMatch",
          "Run the tests"
        ],
        "type": "Text_excerpt",
        "value": "```\n    $ python Testing_Algorithm_CM_1.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the tests for algorithm CM_2 First Example",
        "parent_header": [
          "cMatch",
          "Run the tests"
        ],
        "type": "Text_excerpt",
        "value": "```\n    $ python test_cm2_vio_easy_1vs1_th75.py\n    $ python test_cm2_vio_easy_1vs1_th99.py\n    $ python test_cm2_vio_hard_1vs1_th75.py\n    $ python test_cm2_vio_hard_1vs1_th99.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the tests for algorithm CM_2 Second Example",
        "parent_header": [
          "cMatch",
          "Run the tests"
        ],
        "type": "Text_excerpt",
        "value": "```\n    $ python test_cm2_vio_easy_1vsAll_th75.py\n    $ python test_cm2_vio_easy_1vsAll1_th99.py\n    $ python test_cm2_vio_hard_1vsAll1_th75.py\n    $ python test_cm2_vio_hard_1vsAll1_th99.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the tests for algorithm CM_2 Real life example Lycopene Operon",
        "parent_header": [
          "cMatch",
          "Run the tests"
        ],
        "type": "Text_excerpt",
        "value": "```\n    $ python test_cm2_lycopene_sanger_10.py\n    $ python test_cm2_lycopene_sanger_100.py\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the tests for algorithms CM_1, CM_2 Violacein-0000 cat x2 and cat x3",
        "parent_header": [
          "cMatch",
          "Run the tests"
        ],
        "type": "Text_excerpt",
        "value": "```\n    $ python cm1_cat2.py\n    $ python cm1_cat2min.py\n```\n\n```\n    $ python cm1_cat3.py\n    $ python cm1_cat3min.py\n```\n\n```\n    $ python cm2_cat2.py\n    $ python cm2_cat2min.py\n```\n\n```\n    $ python cm2_cat3.py\n    $ python cm2_cat3min.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "description",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:50:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Simple Example",
        "parent_header": [
          "cMatch"
        ],
        "type": "Text_excerpt",
        "value": "Run cMatch on a simple example, matching the violacein template (template.json) and two synthetic violacein constructs (vio-B0030-B0030-B0030-B0030-B0030.seq, vio-B0030-B0031-B0032-B0033-B0064.seq).\n\n\n```\n    $ cd simple_example/\n    $ ../cmatch.py template.json vio-B0030-B0030-B0030-B0030-B0030.seq vio-B0030-B0031-B0032-B0033-B0064.seq\n```\n\nThe cmatch tool will output JSON.\n\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the tests for algorithm CM_2 First Example",
        "parent_header": [
          "cMatch",
          "Run the tests"
        ],
        "type": "Text_excerpt",
        "value": "```\n    $ python test_cm2_vio_easy_1vs1_th75.py\n    $ python test_cm2_vio_easy_1vs1_th99.py\n    $ python test_cm2_vio_hard_1vs1_th75.py\n    $ python test_cm2_vio_hard_1vs1_th99.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the tests for algorithm CM_2 Second Example",
        "parent_header": [
          "cMatch",
          "Run the tests"
        ],
        "type": "Text_excerpt",
        "value": "```\n    $ python test_cm2_vio_easy_1vsAll_th75.py\n    $ python test_cm2_vio_easy_1vsAll1_th99.py\n    $ python test_cm2_vio_hard_1vsAll1_th75.py\n    $ python test_cm2_vio_hard_1vsAll1_th99.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the tests for algorithm CM_2 Real life example Lycopene Operon",
        "parent_header": [
          "cMatch",
          "Run the tests"
        ],
        "type": "Text_excerpt",
        "value": "```\n    $ python test_cm2_lycopene_sanger_10.py\n    $ python test_cm2_lycopene_sanger_100.py\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kitneylab/cmatch/main/README.md",
      "technique": "header_analysis"
    }
  ]
}