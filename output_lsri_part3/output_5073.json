{
  "application_domain": [
    {
      "confidence": 14.16,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hendrixlab/miRWoods"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-06-24T03:24:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-03-08T20:25:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "miRWoods - stacked random forests for the sensitive detection of microRNAs"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.984507349831348,
      "result": {
        "original_header": "miRWoods",
        "type": "Text_excerpt",
        "value": "miRWoods is a software designed for the\n    sensitive detection microRNAs, including those with only one read.\n    miRWoods uses two random forests. The \n    first random forest referred to as the miR Product Random Forsest (MPRF) \n    assembles read stacks into products and scores them. Products which \n    don't pass through the MRPF are filtered out, and those which do are \n    combined with surrounding products and folded to produce hairpins. \n    Each hairpin is scored and then passed through a Hairpin Precursor \n    Random Forest (HPRF) to obtain the final results. \n     \n"
      },
      "source": "https://raw.githubusercontent.com/hendrixlab/miRWoods/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hendrixlab/miRWoods/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hendrixlab/miRWoods/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hendrixlab/miRWoods"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "miRWoods"
      },
      "source": "https://raw.githubusercontent.com/hendrixlab/miRWoods/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "1. Add the Scripts directory to your path\n2. Add the Perl Modules directory to your PERL5LIB path\n"
      },
      "source": "https://raw.githubusercontent.com/hendrixlab/miRWoods/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparing Bam Files To Be Used By miRWoods",
        "type": "Text_excerpt",
        "value": "The software takes it's inputs in the form of bam files.  These may be created from fastq files using the following command:  \n`createBam.pl < fastq file > < 3' adaptor > < min avg quality score > < bowtie index >`\n\nHere < min avg quality score > is set to the average quality score requred for a read to be kept.  \nWe set < min avg quality score > to 30 for our experiments.  \n\nAfter creating each of the bam files you should place them into a tab delimited bam file list (see **example_bamlist.txt** for an example.)\n"
      },
      "source": "https://raw.githubusercontent.com/hendrixlab/miRWoods/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hendrixlab/miRWoods/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "miRWoods"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hendrixlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 654149,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hendrixlab/miRWoods/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "miRWoods Requires the Vienna RNA fold package and Perl Library which may be downloaded here:  \nhttps://www.tbi.univie.ac.at/RNA/\n\nCutadapt is used for adapter trimming and may be downloaded using the following command:  \n`pip3 install --user --upgrade cutadapt`\n\nBowtie is used for read mapping and may be downloaded at the following address:  \nhttp://bowtie-bio.sourceforge.net/index.shtml\n\nmiRWoods uses Bio::DB::Sam which requires an earlier version of samtools.  This version may be downloaded at the following address:  \nhttp://sourceforge.net/projects/samtools/files/samtools/0.1.18/samtools-0.1.18.tar.bz2  \nWhen installing samtools, edit the Makefile so that CFLAGS= '-g -Wall -O2 -fPIC #-m64 #-arch ppc'\n\nThe following perl libraries are required and can be downloaded using CPAN:\n- Bio::DB::Sam\n- Statistics::R\n- Math::CDF\n\nmiRWoods also uses some R code which may be downloaded here:  \nhttps://www.r-project.org/  \n\nR will require the following libraries which can be downloaded using CRAN:\n- ROCR\n- randomForest\n- mlbench\n"
      },
      "source": "https://raw.githubusercontent.com/hendrixlab/miRWoods/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running miRWoods",
        "type": "Text_excerpt",
        "value": "The easiest way to pass inputs to miRWoods is through a config file (see **example_config.txt**)  The config file includes the following information:  \n- scriptDir - the location of the miRWoods/Scripts directory\n- hairpinRF - the location of the HPRF model file\n- productRF - the location of the MPRF model file\n- SizesFile - A tab chrom.sizes file containing each chrom and it's size \n- genomeDir - the directory of the genome (each chrom must be split into individual files)\n- geneModels - a gff file containing the genome annotations\n- mirbaseGff - the gff with the mirbase annotations \n- bamListFile - a tab delimited file containing the list of bam files\n- minReadLength - the minimum read length for a mapped read to be processed\n- maxReadLength - the maximum read length for a mapped read to be processed\n- HPDVCutoff - the HPDVCutoff threshold\n- ARPMCutoff - the ARPMCutoff threshold\n\nAfter the config file is setup, miRWoods may be run with the following command:  \n`miRWoods -L <config file>`\n"
      },
      "source": "https://raw.githubusercontent.com/hendrixlab/miRWoods/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:41:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}