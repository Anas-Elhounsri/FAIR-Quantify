{
  "application_domain": [
    {
      "confidence": 16.94,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "BionoiNet"
        ],
        "type": "Text_excerpt",
        "value": "If you find this work useful, please cite our papers in your work :)   \n\nShi W, Lemoine JM, Shawky MA, Singha M, Pu L, Yang S, Ramanujam J, Brylinski M. (2020) BionoiNet: Ligand-binding site classification with off-the-shelf deep neural network. Bioinformatics 36 (10): 3077-3083.   \n\nFeinstein J, Shi W, Ramanujam J, Brylinski M. Bionoi: A Voronoi Diagram-Based Representation of Ligand-Binding Sites in Proteins for Machine Learning Applications. Methods Mol Biol. 2021;2266:299-312. doi: 10.1007/978-1-0716-1209-5_17. PMID: 33759134.   \n"
      },
      "source": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CSBG-LSU/BionoiNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-01T20:48:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-21T04:46:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pytorch implementation of BionoiNet, which is a deep learning-based software to classify ligand-binding sites."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9867766081789482,
      "result": {
        "original_header": "BionoiNet",
        "type": "Text_excerpt",
        "value": "BionoiNet is a deep learning-based framework for ligand-binding site classification. It transforms 3-d structures of ligand-binding sites into 2-d images, and then these images are processed by a deep neural network (DNN) to generate classification results. The pipeline of BionoiNet is shown below: \nThe 2-d images of ligand-binding sites are generated using the [Bionoi](https://github.com/CSBG-LSU/BionoiNet/tree/master/bionoi) software and the DNN is implemented with the APIs of [Pytorch](https://pytorch.org/). The datasets are divided into 5 folds for cross-validation and the sequence identity between the training and validation sets is less than 20%.\n \n"
      },
      "source": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9818100577177286,
      "result": {
        "original_header": "Folders",
        "type": "Text_excerpt",
        "value": "* bionoi: a software that transforms ligand-binding sites (.mol2 files) into Voronoi diagrams.\n* bionoi_autoencoder: autoencoder that trained on Bionoi images in an un-supervised manner. The trained autoencoder can be used to produce latent space vectors of Bionoi images for machine learning applications.\n* bionoi_cnn_homology_reduced: a convolutional neural network (CNN) trained on the Voronoi representations of ligand-binding sites for classification.\n* dependency: dependency python packages.\n* homology_reduced_folds: files containing folds such that the sequence identity between train and validation is less than 20%.\n* lecacy: codes produced during research, not used in final version.\n \n"
      },
      "source": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CSBG-LSU/BionoiNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CSBG-LSU/BionoiNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CSBG-LSU/BionoiNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BionoiNet"
      },
      "source": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/bionoi_cnn_homology_reduced/resnet18.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/legacy/bionoi_ml_homology_reduced/mlp_img.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/legacy/bionoi_ml_homology_reduced/rf_autoencoder_vec.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/legacy/bionoi_ml_homology_reduced/mlp_autoencoder_vec.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/bionoi/img_gen.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CSBG-LSU/BionoiNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "binding-sites, convolutional-neural-network, deep-learning, deep-neural-network, drug-design, structural-biology"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 CSBG-LSU\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/figures/BionoiNet.PNG"
      },
      "source": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BionoiNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CSBG-LSU"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 272181,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4058,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency",
        "parent_header": [
          "BionoiNet"
        ],
        "type": "Text_excerpt",
        "value": "Install the dependency package using this file: ```dependency/environment.yml```. This denpendency file is exported by [Anaconda](https://www.anaconda.com/). To install the environment:\n```\nconda env create -f environment.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:42:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "BionoiNet"
        ],
        "type": "Text_excerpt",
        "value": "1. Unzip the .mol2 files located at ```/homology_reduced_folds/mols.zip```.\n2. Download this repository and put it where you extract the .mol2 files. The layout of the project should be like following:   \n```\n    .\n    \u251c\u2500\u2500 BionoiNet\n    \u2514\u2500\u2500 homology_reduced_mols      \n        \u251c\u2500\u2500 control\n            \u251c\u2500\u2500 fold_1   \n            \u251c\u2500\u2500 fold_2\n            \u251c\u2500\u2500 ...\n            \u2514\u2500\u2500 fold_5\n        \u251c\u2500\u2500 heme\n            \u251c\u2500\u2500 fold_1   \n            \u251c\u2500\u2500 fold_2\n            \u251c\u2500\u2500 ...\n            \u2514\u2500\u2500 fold_5\n        \u2514\u2500\u2500 nucleotide\n            \u251c\u2500\u2500 fold_1   \n            \u251c\u2500\u2500 fold_2\n            \u251c\u2500\u2500 ...\n            \u2514\u2500\u2500 fold_5\n```\n3. Run Bionoi by executing ```/bionoi/img_gen.sh``` to transform .mol2 files to images. \n4. Train the convolutional neural network (CNN) at ```/bionoi_cnn_homology_reduced/``` for cross-validation:    \n```\npython homology_reduced_cnn_cv_resnet18.py -op control_vs_nucleotide -root_dir ../../bionoi_output/residue_type/ -batch_size 32 -result_file_suffix 1st\n```\n5. Grab a cup of coffee and wait for results.\n"
      },
      "source": "https://raw.githubusercontent.com/CSBG-LSU/BionoiNet/master/README.md",
      "technique": "header_analysis"
    }
  ]
}