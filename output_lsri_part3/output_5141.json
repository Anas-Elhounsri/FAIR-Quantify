{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Build MSI reference with *MIAmS Learn*",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing",
          "Prepare analysis"
        ],
        "type": "Text_excerpt",
        "value": "The following command must be used on large number of stable and unstable samples\ncoming from your laboratory. Take in mind the sentence of mSINGS's authors:\n\"_Baseline statistics vary markedly from assay-to-assay and lab-to-lab. It is\nCRITICAL that you prepare a baseline file that is specific for your analytic\nprocess, and for which data have been generated using the same protocols._\"\n\n    source ${APP_DIR}/envs/miniconda3/bin/activate MIAmS\n    ${APP_DIR}/jflow/bin/jflow_cli.py miamslearn \\\n      --R1-pattern ${APP_DIR}/test/data/stable/\\*_L001_R1.fastq.gz \\\n      --R2-pattern ${APP_DIR}/test/data/stable/\\*_L001_R2.fastq.gz \\\n      --annotations ${APP_DIR}/test/data/learn_annot.tsv \\\n      --targets ${APP_DIR}/test/data/targets.bed \\\n      --genome-seq ${APP_DIR}/test/bank/Homo_sapiens.GRCh37.75.dna.chromosome.14.fa \\\n      --intervals ${APP_DIR}/test/data/intervals.tsv \\\n      --output-baseline ${APP_DIR}/test/out_model/baseline.tsv \\\n      --output-training ${APP_DIR}/test/out_model/models.json \\\n      --output-log ${APP_DIR}/test/out_model/baseline_log.txt\n    source ${APP_DIR}/envs/miniconda3/bin/deactivate\n\n*For the test dataset, add the argument `--min-support-samples 1` to reduce the\nnumber of samples required in the model. By default, this value is set to 10:\n10 unstable and 10 stable.*\n\nThe annotations file (format TSV) describes the status of each locus for all the\nsamples used in model creation.\n\n    sample\tB25\tB26\tN21\n    splA\tMSI\tMSI\tUndetermined\n    splB\tMSS\tMSS\tMSI\n\nThe title line contains \"sample\" in first column and in others the names of the\nlocus present in the fourth column of the BED file. Each other row corresponds\nto one sample and contains:\n\n* The sample name.\n* For each locus the stability status: `MSS` or `MSI` or `Undetermined`.\n\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "If you use MIAmS in a scientific publication, we would appreciate citations:\n\nFr\u00e9d\u00e9ric Escudi\u00e9, Charles Van Goethem, David Grand, Julie Vendrell, Anna Vigier,\nPierre Brousset, Sol\u00e8ne M Evrard, J\u00e9r\u00f4me Solassol, Janick Selves, MIAmS:\nmicrosatellite instability detection on NGS amplicons data, Bioinformatics, ,\nbtz797, https://doi.org/10.1093/bioinformatics/btz797\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bialimed/miams"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "escudie.frederic@iuct-oncopole.fr\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-16T21:26:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-07T09:39:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Workflow for detecting microsatellite instability by next-generation sequencing on amplicons."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "Workflow for detecting microsatellite instability by next-generation sequencing\non amplicons.\n\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9124250152531873,
      "result": {
        "original_header": "2. Configure application",
        "type": "Text_excerpt",
        "value": "    [global]\n    # uncomment and set if not in the PATH, should be version >= 4.4.3\n    #makeflow = ###APP_FOLDER###/envs/miniconda3/envs/###APP_ENV_NAME###/bin/makeflow\n    # batch system type: local, condor, sge, moab, cluster, wq, hadoop, mpi-queue\n    batch_system_type = sge\n    # add these options to all batch submit files\n    batch_options =\n    # add these options to limit the number of jobs sumitted in parallel\n    limit_submission = 100\n    # on which socket host should run the web server\n    server_socket_host = 127.0.0.1\n    # on which socket port should run the web server\n    server_socket_port = 8080\n    # date format\n    date_format = %d/%m/%Y \nIn this example Makeflow is accessible in PATH, the scheduler system used is\n[SGE](https://arc.liv.ac.uk/trac/SGE/) and the graphical interface will be\naccessible on `localhost:8080` if you run the jflow server. \n    [email]\n    # if you want an email to be sent at the end of the workflow execution\n    # set the smtp_server and the from_address values\n    smtp_server =\n    smtp_port =\n    from_address =\n    from_password =\n    # uncomment and set if you want to use these values for all the workflow\n    # these variables can be overloaded within the workflow implementation by\n    # using self.set_to_address(\"address\"), self.set_subject(\"subject\"),\n    # self.set_message(\"message\") functions\n    #to_address =\n    #subject =\n    #message = \nThis section is used to send mails at the end of a workflow execution. In this\nexample no mail are sended. \nRessources booked by each component of the workflow. If your *batch system type*\nis **local** these options are not necessary. \n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9234773249679874,
      "result": {
        "original_header": "For monitoring all workflows",
        "type": "Text_excerpt",
        "value": "In this example the workflows 1 and 2 have been processed and completed with\nsuccess the workflow 3 has failed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.888123853564756,
      "result": {
        "original_header": "For monitoring a specific workflow",
        "type": "Text_excerpt",
        "value": "The first block of the output indicate the status and the elapsed time of the\nworkflow. \nThe second block details the status and the elapsed time of each components of\nthe workflow. \"Total\" represents the number of commands defined by the component:\na components can be composed of several commands executed on several input files. \n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bialimed/miams/tree/master/jflow/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Download code",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing",
          "Intallation"
        ],
        "type": "Text_excerpt",
        "value": "Use one of the following:\n\n* [user way] Downloads the latest released versions from `https://github.com/bialimed/miams/releases`.\n* [developper way] Clones the repository from the latest unreleased version: `git clone https://github.com/bialimed/miams.git`.\n\nThe application folder has the following structure:\n\n    <APP_DIR>/\n    \u251c\u2500\u2500 install/                        # Scripts for install the application\n    \u251c\u2500\u2500 jflow/\n    \u2502   \u251c\u2500\u2500 bin/                        # Scripts for workflows management (run, rerun, monitor)\n    \u2502   \u251c\u2500\u2500 ...\n    \u2502   \u2514\u2500\u2500 application.properties.tpl  # Application configuration file\n    \u251c\u2500\u2500 README.md\n    \u2514\u2500\u2500 test/                           # Scripts and data to test the workflows\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bialimed/miams/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bialimed/miams/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bialimed/miams"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MIAmS: Microsatellites Instability by AMplicon Sequencing"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bialimed/miams/master/doc/assessment/data_ERP114314/launch_assessment.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bialimed/miams/master/doc/assessment/data_ERP114314/launch_accuracy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bialimed/miams/master/doc/assessment/data_ERP110591/launch_assessment.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bialimed/miams/master/doc/assessment/data_ERP110591/launch_accuracy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bialimed/miams/master/install/install_makeflow.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bialimed/miams/master/install/install_app.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bialimed/miams/master/install/create_env.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bialimed/miams/master/install/install_msings.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://virtualenv.pypa.io/en/latest/installation/\">virtualenv</a>",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing",
          "Intallation",
          "3. Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "    pip install --user virtualenv\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "zlib",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing",
          "Intallation",
          "3. Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "On CentOS / Fedora / RHEL\n\n    yum install zlib zlib-devel\n\nOn Debian\n\n    sudo apt-get install zlib zlibc zlib1-g zlib1g\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "ncurses",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing",
          "Intallation",
          "3. Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "On CentOS / Fedora / RHEL\n\n    yum install ncurses-devel ncurses\n\nOn Debian\n\n    sudo apt-get install libncurses5-dev\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Prepare analysis",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "MIAmS is mainly based on [mSINGS](https://bitbucket.org/uwlabmed/msings). This\nsoftware works in 3 steps:\n\n* Convert a BED describing loci to an interval format.\n* Learn from many stable samples the standard distribution of InDel size by loci.\nThis step create a model used in following analyses.\n* Find MSI status by comparison between InDel profile in sample and InDel\nprofile in model.\n\nThe two first steps described below should be proceed once contrary to to the\nthird described in *Workflows management* that must be processed for each analysis.\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Convert BED to interval",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing",
          "Prepare analysis"
        ],
        "type": "Text_excerpt",
        "value": "    ${APP_DIR}/envs/msings/scripts/create_intervals.py \\\n      --input-bed ${APP_DIR}/test/data/msi.bed \\\n      --output ${APP_DIR}/test/out_model/msi_intervals.tsv\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9537575229484878,
      "result": {
        "original_header": "2. Configure application",
        "type": "Text_excerpt",
        "value": "All the detail on configuration options can be find in `app/docs/jflow_advanced_configuration.html`. \n    [global]\n    # uncomment and set if not in the PATH, should be version >= 4.4.3\n    #makeflow = ###APP_FOLDER###/envs/miniconda3/envs/###APP_ENV_NAME###/bin/makeflow\n    # batch system type: local, condor, sge, moab, cluster, wq, hadoop, mpi-queue\n    batch_system_type = sge\n    # add these options to all batch submit files\n    batch_options =\n    # add these options to limit the number of jobs sumitted in parallel\n    limit_submission = 100\n    # on which socket host should run the web server\n    server_socket_host = 127.0.0.1\n    # on which socket port should run the web server\n    server_socket_port = 8080\n    # date format\n    date_format = %d/%m/%Y \nIn this example Makeflow is accessible in PATH, the scheduler system used is\n[SGE](https://arc.liv.ac.uk/trac/SGE/) and the graphical interface will be\naccessible on `localhost:8080` if you run the jflow server. \n    # Set cluster parameters of some components\n    [components]\n    BamAreasToFastq.batch_options = -V -l h_vmem=5G -l mem=5G -q normal\n    BAMIndex.batch_options = -V -l h_vmem=5G -l mem=5G -q normal\n    BWAmem.batch_options = -V -l h_vmem=10G -l mem=10G -q normal\n    CombinePairs.batch_options = -V -l h_vmem=2G -l mem=2G -q normal\n    CreateMSIRef.batch_options = -V -l h_vmem=5G -l mem=5G -q normal\n    Cutadapt.batch_options = -V -l h_vmem=5G -l mem=5G -q normal\n    GatherLocusRes.batch_options = -V -l h_vmem=3G -l mem=3G -q normal\n    MIAmSClassify.batch_options = -V -l h_vmem=5G -l mem=5G -q normal\n    MSINGS.batch_options = -V -l h_vmem=10G -l mem=10G -q normal\n    MSINGSBaseline.batch_options = -V -l h_vmem=10G -l mem=10G -q normal\n    MSIMergeReports.batch_options = -V -l h_vmem=3G -l mem=3G -q normal \n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9447421008876544,
      "result": {
        "original_header": "4. Launch installer",
        "type": "Text_excerpt",
        "value": "    ${APP_DIR}/install/install_app.sh \nThis command: \n* creates a virtual environment for the application\n* installs dependencies on this environment\n* writes the final configuration (jflow/application.properties) from your template\n* checks the installation by running workflows on a small dataset\n \n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9891382919435131,
      "result": {
        "original_header": "Launch",
        "type": "Text_excerpt",
        "value": "The following command is the example used in installation test: \n    source ${APP_DIR}/envs/miniconda3/bin/activate MIAmS\n    ${APP_DIR}/jflow/bin/jflow_cli.py miamstag \\\n      --R1-pattern ${APP_DIR}/test/data/unstable/\\*_L001_R1.fastq.gz \\\n      --R2-pattern ${APP_DIR}/test/data/unstable/\\*_L001_R2.fastq.gz \\\n      --models ${APP_DIR}/test/data/models.json \\\n      --targets ${APP_DIR}/test/data/msi.bed \\\n      --genome-seq ${APP_DIR}/test/bank/Homo_sapiens.GRCh37.75.dna.chromosome.14.fa \\\n      --intervals ${APP_DIR}/test/data/msi_intervals.tsv \\\n      --baseline ${APP_DIR}/test/data/MSI_BASELINE.tsv \\\n      --output-dir ${APP_DIR}/test/out_detection\n    source ${APP_DIR}/envs/miniconda3/bin/deactivate \n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8942144541586783,
      "result": {
        "original_header": "For monitoring all workflows",
        "type": "Text_excerpt",
        "value": "    ${APP_DIR}/jflow/bin/jflow_admin.py status \nThis command has the following output: \n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9732300385577123,
      "result": {
        "original_header": "For monitoring a specific workflow",
        "type": "Text_excerpt",
        "value": "Use the following command: \n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9985520633377585,
      "result": {
        "original_header": "Rerun",
        "type": "Text_excerpt",
        "value": "You can rerun failed/incomplete steps with the following command: \n    source ${APP_DIR}/envs/miniconda3/bin/activate MIAmS\n    ${APP_DIR}/jflow/bin/jflow_admin.py rerun \\\n      --workflow-id ${YOUR_WF_ID}\n    source ${APP_DIR}/envs/miniconda3/bin/deactivate \n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8703352420361868,
      "result": {
        "original_header": "Launch",
        "type": "Text_excerpt",
        "value": "    source ${APP_DIR}/envs/miniconda3/bin/activate MIAmS\n    ${APP_DIR}/jflow/bin/jflow_cli.py miamstag \\\n      --R1-pattern ${APP_DIR}/test/data/unstable/\\*_L001_R1.fastq.gz \\\n      --R2-pattern ${APP_DIR}/test/data/unstable/\\*_L001_R2.fastq.gz \\\n      --models ${APP_DIR}/test/data/models.json \\\n      --targets ${APP_DIR}/test/data/msi.bed \\\n      --genome-seq ${APP_DIR}/test/bank/Homo_sapiens.GRCh37.75.dna.chromosome.14.fa \\\n      --intervals ${APP_DIR}/test/data/msi_intervals.tsv \\\n      --baseline ${APP_DIR}/test/data/MSI_BASELINE.tsv \\\n      --output-dir ${APP_DIR}/test/out_detection\n    source ${APP_DIR}/envs/miniconda3/bin/deactivate \n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8359641025644611,
      "result": {
        "original_header": "For monitoring all workflows",
        "type": "Text_excerpt",
        "value": "    ${APP_DIR}/jflow/bin/jflow_admin.py status \n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bialimed/miams/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "GNU GPL v3\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "miams"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bialimed"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 1013735,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 937356,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 235663,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 52817,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 9711,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Smarty",
        "size": 3437,
        "type": "Programming_language",
        "value": "Smarty"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bialimed/miams/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://virtualenv.pypa.io/en/latest/installation/\">virtualenv</a>",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing",
          "Intallation",
          "3. Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "    pip install --user virtualenv\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "zlib",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing",
          "Intallation",
          "3. Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "On CentOS / Fedora / RHEL\n\n    yum install zlib zlib-devel\n\nOn Debian\n\n    sudo apt-get install zlib zlibc zlib1-g zlib1g\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "ncurses",
        "parent_header": [
          "MIAmS: Microsatellites Instability by AMplicon Sequencing",
          "Intallation",
          "3. Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "On CentOS / Fedora / RHEL\n\n    yum install ncurses-devel ncurses\n\nOn Debian\n\n    sudo apt-get install libncurses5-dev\n"
      },
      "source": "https://raw.githubusercontent.com/bialimed/miams/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:55:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}