{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/haschka/sequence_in_sequence_finder"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-14T17:15:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-12T15:14:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A tool that finds a nucleic sub-sequence string ( from a FASTA file ) in a FASTA file using the fourier transform."
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/haschka/sequence_in_sequence_finder/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/haschka/sequence_in_sequence_finder/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "haschka/sequence_in_sequence_finder"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A FASTA - Fourier Transform based Sequence in Sequence Finder"
      },
      "source": "https://raw.githubusercontent.com/haschka/sequence_in_sequence_finder/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/406458347"
      },
      "source": "https://raw.githubusercontent.com/haschka/sequence_in_sequence_finder/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "This tool requires the FFTW3 library with double precision support. In\norder to build this tool also the -dev package (i.e. header files) are\nrequired. On debian/ubuntu based distributions you may install this package\nusing:\n\n```sudo apt-get install build-essential fftw3 fftw3-dev```\n\nOnce all dependencies are installed you may compile this tool on your system\nlike this:\n\n```gcc -O3 -march=native binary_array.c dataset.c seq_in_seq.c -lfftw3_threads -lfftw3 -lm -o seq_in_seq```\n\nOnce you have compiled this tool you can call it with the following arguments:\n```\n  [fasta] sequence to search sequence in \n  [fasta] sequence to be searched for \n  [int] number of sequence to search in \n        in the first fasta file. Beginning with 1\n  [int] 1 created a wisdom file during this run (if you do not have one) \n        0 use a wisdom file already available \n  [wisdom] path of a wisdom file, always to be specified \n  [int] cutoff - number of sequence changes to accept \n  [string] chromosome specifier \n  [int] number of threads fftw can use \n```\n\nThe first run of the program might be long as you are supposed to generate a\n*wisdom file* for the sequence to be searched in. This allows you to find the\noptimal fourier transformation for your system as well as the size of your\nproblem. Once this is done a sequence in a sequence can be found very quickly\nusing such a *wisdom file*. I.e. if you are searching frequently in hg38\nI suggest you create wisdom files for each chromosome.\nThe *chromosome specifier* is the first string that will be written in your\nbed coordinates output. I.e. if you search on hg38-chr1 and type chr1 you can\nupload your output to the UCSC Genome Browser and visulize the locations of\nthe sequence that you are searching for.\n"
      },
      "source": "https://raw.githubusercontent.com/haschka/sequence_in_sequence_finder/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/haschka/sequence_in_sequence_finder/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, bioinformatics-tool, fasta, fasta-files, fourier-transform, fourier-transformation, sequence, sequence-finder, unix-tools"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (C) 2021 Thomas Haschka\n\nThis software is provided \u2019as-is\u2019, without any express or implied warranty.\nIn no event will the authors be held liable for any dam- ages arising\nfrom the use of this software. Permission is granted to anyone to use\nthis software for any purpose, including commercial applications, and\nto alter it and redistribute it freely, subject to the following\nrestrictions:\n\n1. The origin of this software must not be\nmisrepresented; you must not claim that you wrote the original\nsoftware. If you use this software in a product, an acknowledgment in\nthe product documentation would be appreciated but is not\nrequired.\n\n2. Altered source versions must be plainly marked as such,\nand must not be misrepresented as being the original soft-\nware.\n\n3. This notice may not be removed or altered from any source,\nbinary distribution and this manual. "
      },
      "source": "https://raw.githubusercontent.com/haschka/sequence_in_sequence_finder/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sequence_in_sequence_finder"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "haschka"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 32079,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/haschka/sequence_in_sequence_finder/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "haschka",
          "type": "User"
        },
        "date_created": "2021-09-14T17:16:37Z",
        "date_published": "2021-09-15T15:11:53Z",
        "description": "Public Release of the Sequence Finder written for and used inside the MNHN Biophysics group c.f. https://biophysique.mnhn.fr/fr",
        "html_url": "https://github.com/haschka/sequence_in_sequence_finder/releases/tag/v1.0",
        "name": "Initial Public Release",
        "release_id": 49609959,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/haschka/sequence_in_sequence_finder/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/haschka/sequence_in_sequence_finder/releases/49609959",
        "value": "https://api.github.com/repos/haschka/sequence_in_sequence_finder/releases/49609959",
        "zipball_url": "https://api.github.com/repos/haschka/sequence_in_sequence_finder/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:48:15",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Video Tutorial",
        "type": "Text_excerpt",
        "value": "A video explaination on the internals of this tool and how to use it.\nhttps://youtu.be/qsWkuF8Cla0\n"
      },
      "source": "https://raw.githubusercontent.com/haschka/sequence_in_sequence_finder/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Memory usage",
        "type": "Text_excerpt",
        "value": "The current version requires a lot of memory. A machine with 32 GB of memory\nshould nevertheless be sufficant to search all of Hg38-chr1. On a 64 GB\nsearching Hg38-chr1 poses no problem. On machines with less ram you might cut\nyour fasta files into pieces and perform the search piecwise. A fix for this\nmight come up in a future version that performs this cut automatically on low\nmemory machines.\n"
      },
      "source": "https://raw.githubusercontent.com/haschka/sequence_in_sequence_finder/main/README.md",
      "technique": "header_analysis"
    }
  ]
}