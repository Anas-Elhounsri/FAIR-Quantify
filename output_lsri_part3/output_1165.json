{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rastanton/GAMMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-25T20:19:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-02T21:28:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gene Allele Mutation Microbial Assessment"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9365403071417944,
      "result": {
        "original_header": "GAMMA",
        "type": "Text_excerpt",
        "value": "**Introduction** \nGAMMA (Gene Allele Mutation Microbial Assessment) is a command line tool that finds gene matches in microbial genomic data using protein coding (rather than nucleotide) identity, and then translates and annotates the match by providing the type (i.e., mutant, truncation, etc.) and a translated description (i.e., Y190S mutant, truncation at residue 110, etc.). Because microbial gene families often have multiple alleles and existing databases are rarely exhaustive, GAMMA is helpful in both identifying and explaining how unique alleles differ from their closest known matches. \nThe input for GAMMA is a genome or assembly in fasta format and a multifasta database of the coding sequence of genes. GAMMA was tested using AR gene databases from AMRFinderPlus (https://ftp.ncbi.nlm.nih.gov/pathogen/Antimicrobial_resistance/AMRFinderPlus/database/), ARG-ANNOT (http://backup.mediterranee-infection.com/arkotheque/client/ihumed/_depot_arko/articles/2041/arg-annot-v4-aa-may2018_doc.fasta), and ResFinder (https://bitbucket.org/genomicepidemiology/resfinder_db/src/master/). \nThe default output is a \".gamma\" file that includes non-overlapping matches to any genes from your database found in your genome. It is run with this command:\n```\nGAMMA.py my_genome.fasta gene_db.fasta output_name [optional arguments]\n```\nThere are seven optional arguments:\n  \n  -a,--all:            Returns all (including overlapping) gene matches\n  \n  -e, --extended:      Returns all gene mutations, otherwise if there are more than 10 mutations present the count is given\n  \n  -f, --fasta:         Writes out a multifasta file of the gene matches\n  \n  -g, --gff:            Generates a general feature format (.gff) file of the output gene matches\n  \n  -n, --name:            Writes the output name in front of each gene match line in the .gamma output file\n  \n  -l, --headless:            Removes the column headers in the .gamma output file\n  \n  -i, --identity:      The minimum nucleotide sequence identity % used by the Blat search, input as an integer (i.e., \"-i 95\" for a 95% threshold), default is 90 \nThe default output of GAMMA is a tab-delimited file with a \u201c.gamma\u201d extension with 15 columns:\n1. Gene \u2013 The name of the closest matching gene (target) from the database. If there are ambiguous gene matches (i.e., multiple target matches with the same number of non-degenerate codon changes, basepair changes, and transversions), the gene match will be appended with a \"\u2021\".\n2. Contig \u2013 The name of the contig on which the match was found.\n3. Start \u2013 The start position of the sequence matching the gene on the contig.\n4. Stop \u2013 The end position of the sequence matching the gene on the contig.\n5. Match_Type \u2013 The type of the gene match based on the translation of the sequence (i.e., the protein sequence). Can be native (for identical amino acid sequences to the target), mutant (for nonsynonymous mutations), truncation (for nonsense mutations), indels (for insertions/deletions), nonstop (for a missing stop codon), contig edge (for matches that are truncated at the start or stop of a contig), or a combination of multiple types (i.e., indel truncation).\n6. Description \u2013 A short description of the match type.\n7. Codon_Changes \u2013 The count of the non-degenerate codon changes in the sequence versus the closest match from the datbase.\n8. BP_Changes - The count of the basepair changes in the sequence versus the closest match from the datbase.\n9. Transversions - The count of basepair changes that are transversions (i.e., purine to pyrimidine or vice versa, such as an A -> C or a T -> G)\n10. Codon_Percent \u2013 The percent (expressed as a decimal value) of the degenerate codon similarity between the query and match sequence. Gene matches with large insertions may show a negative value.\n11. BP_Percent - The percent (expressed as a decimal value) of the basepair similarity between the query and match sequence. Gene matches with large insertions may show a negative value.\n12. Percent_Length - The percent (expressed as a decimal value) of the length of the target covered by the matching sequence, maximum of 1.\n13. Match_Length \u2013 The length (in basepairs) of the matching sequence.\n14. Target_Length - The length (in basepairs) of the target sequence.\n15. Strand \u2013 The sense of the strand (+ or -) on which the match is found. \nAdditional outputs in the .gff format and a fasta of the gene matches (in the positive sense) can be generated using the -g and -f options, respectively. \nGAMMA-S (Gene Allele Mutation Microbial Assessment-Sequence) finds best matches from a gene database without translating them--so it will find the best match by nucleotides, rather by the translated protein sequence. However, it can perform protein-protein sequence matching as well, which requires two protein fastas as the input. Details on the usage, arguments, and outputs of GAMMA-S are described in a seperate GAMMA-S_README.md included in this package. \nStanton RA, Vlachos N, Halpin AL. GAMMA: a tool for the rapid identification, classification, and annotation of translated gene matches from sequencing data. Bioinformatics. 2021 Aug 20:btab607. doi: 10.1093/bioinformatics/btab607. Epub ahead of print. PMID: 34415321.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rastanton/GAMMA/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rastanton/GAMMA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rastanton/GAMMA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rastanton/GAMMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GAMMA"
      },
      "source": "https://raw.githubusercontent.com/rastanton/GAMMA/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9991190805710827,
      "result": {
        "original_header": "GAMMA",
        "type": "Text_excerpt",
        "value": "**Quick Installation via Conda:** \nGAMMA (and all the dependencies) can be installed via Conda: \nhttps://bioconda.github.io/recipes/gamma/README.html \nTo create a new conda environment (called GAMMA) and install GAMMA into the environment:\n```\nconda create -n GAMMA gamma -y\n```\nActivate the Conda environment using the following command:\nBASH2*\nRun the GAMMA.py script to see usage:\nBASH3*\nDeactivate the Conda environment after you are finished (to protect the environment from clashing with other programs):\nBASH4*\nIf you download directly via Git, GAMMA requires Python 3+, the Biopython package (https://github.com/biopython), and Blat (http://hgdownload.soe.ucsc.edu/admin/exe/), which has to be in your $PATH. \nThe input for GAMMA is a genome or assembly in fasta format and a multifasta database of the coding sequence of genes. GAMMA was tested using AR gene databases from AMRFinderPlus (https://ftp.ncbi.nlm.nih.gov/pathogen/Antimicrobial_resistance/AMRFinderPlus/database/), ARG-ANNOT (http://backup.mediterranee-infection.com/arkotheque/client/ihumed/_depot_arko/articles/2041/arg-annot-v4-aa-may2018_doc.fasta), and ResFinder (https://bitbucket.org/genomicepidemiology/resfinder_db/src/master/). \nThe sample GAMMA output shown below was generated from running GAMMA on a drug resistant *Klebsiella pneumoniae* (Accession: SAMN11054834) using a combination of all of the ResFinder AR gene databases (https://bitbucket.org/genomicepidemiology/resfinder_db/src/master/) downloaded on 05-06-2020. Your install of GAMMA can be tested using the following command with the test genome and gene database included (the output file will be called \"GAMMA_Test.gamma\"):\n```\nGAMMA.py DHQP1701672_complete_genome.fasta ResFinderDB_Combined_05-06-20.fsa GAMMA_Test\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/rastanton/GAMMA/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rastanton/GAMMA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/rastanton/GAMMA/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GAMMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "rastanton"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 74788,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rastanton/GAMMA/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rastanton",
          "type": "User"
        },
        "date_created": "2022-08-25T18:41:14Z",
        "date_published": "2022-08-25T18:44:50Z",
        "description": "Corrected UnicodeEncodeError: 'ascii' codec can't encode character '\\u2021' for \"\u2021\" symbol denoting ambivalent gene calls.",
        "html_url": "https://github.com/rastanton/GAMMA/releases/tag/v2.2",
        "name": "v2.2",
        "release_id": 75382002,
        "tag": "v2.2",
        "tarball_url": "https://api.github.com/repos/rastanton/GAMMA/tarball/v2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/rastanton/GAMMA/releases/75382002",
        "value": "https://api.github.com/repos/rastanton/GAMMA/releases/75382002",
        "zipball_url": "https://api.github.com/repos/rastanton/GAMMA/zipball/v2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rastanton",
          "type": "User"
        },
        "date_created": "2022-04-06T13:30:18Z",
        "date_published": "2022-04-06T13:33:41Z",
        "description": "Updated main python scripts to remove carriage return (\"\\r\").",
        "html_url": "https://github.com/rastanton/GAMMA/releases/tag/v2.1",
        "name": "v2.1",
        "release_id": 63749366,
        "tag": "v2.1",
        "tarball_url": "https://api.github.com/repos/rastanton/GAMMA/tarball/v2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/rastanton/GAMMA/releases/63749366",
        "value": "https://api.github.com/repos/rastanton/GAMMA/releases/63749366",
        "zipball_url": "https://api.github.com/repos/rastanton/GAMMA/zipball/v2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rastanton",
          "type": "User"
        },
        "date_created": "2022-04-05T20:11:47Z",
        "date_published": "2022-04-05T20:15:47Z",
        "description": "Updated main script (GAMMA.py) with two additional arguments and also introduced new script (GAMMA-S.py) for making untranslated matches.",
        "html_url": "https://github.com/rastanton/GAMMA/releases/tag/v2.0",
        "name": "v2.0",
        "release_id": 63672447,
        "tag": "v2.0",
        "tarball_url": "https://api.github.com/repos/rastanton/GAMMA/tarball/v2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/rastanton/GAMMA/releases/63672447",
        "value": "https://api.github.com/repos/rastanton/GAMMA/releases/63672447",
        "zipball_url": "https://api.github.com/repos/rastanton/GAMMA/zipball/v2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rastanton",
          "type": "User"
        },
        "date_created": "2021-08-26T17:41:05Z",
        "date_published": "2021-08-26T17:49:58Z",
        "description": "Added a citation to the readme and fixed an oversight to mark ambiguous gene calls for matches on contig edges.",
        "html_url": "https://github.com/rastanton/GAMMA/releases/tag/v1.4",
        "name": "v1.4",
        "release_id": 48519818,
        "tag": "v1.4",
        "tarball_url": "https://api.github.com/repos/rastanton/GAMMA/tarball/v1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/rastanton/GAMMA/releases/48519818",
        "value": "https://api.github.com/repos/rastanton/GAMMA/releases/48519818",
        "zipball_url": "https://api.github.com/repos/rastanton/GAMMA/zipball/v1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rastanton",
          "type": "User"
        },
        "date_created": "2021-07-15T00:48:32Z",
        "date_published": "2021-07-15T00:50:33Z",
        "description": "Updated README to include links to gene databases.",
        "html_url": "https://github.com/rastanton/GAMMA/releases/tag/v1.3",
        "name": "v1.3",
        "release_id": 46222367,
        "tag": "v1.3",
        "tarball_url": "https://api.github.com/repos/rastanton/GAMMA/tarball/v1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/rastanton/GAMMA/releases/46222367",
        "value": "https://api.github.com/repos/rastanton/GAMMA/releases/46222367",
        "zipball_url": "https://api.github.com/repos/rastanton/GAMMA/zipball/v1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rastanton",
          "type": "User"
        },
        "date_created": "2021-07-14T19:13:16Z",
        "date_published": "2021-07-14T19:16:07Z",
        "description": "Changed the GAMMA output to denote ambiguous matches (\"\u2021\" appended to the end of the matching target gene in the output), and also included a new column to show the number of transversions between the target and query sequence. Also included a sample genome and gene database to test with",
        "html_url": "https://github.com/rastanton/GAMMA/releases/tag/GAMMAv1.2",
        "name": "GAMMAv1.2",
        "release_id": 46209214,
        "tag": "GAMMAv1.2",
        "tarball_url": "https://api.github.com/repos/rastanton/GAMMA/tarball/GAMMAv1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/rastanton/GAMMA/releases/46209214",
        "value": "https://api.github.com/repos/rastanton/GAMMA/releases/46209214",
        "zipball_url": "https://api.github.com/repos/rastanton/GAMMA/zipball/GAMMAv1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rastanton",
          "type": "User"
        },
        "date_created": "2020-12-03T01:40:27Z",
        "date_published": "2020-12-03T01:59:03Z",
        "description": "Updated readme with expanded instructions.",
        "html_url": "https://github.com/rastanton/GAMMA/releases/tag/v1.1",
        "name": "GAMMAv1.1",
        "release_id": 34728632,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/rastanton/GAMMA/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/rastanton/GAMMA/releases/34728632",
        "value": "https://api.github.com/repos/rastanton/GAMMA/releases/34728632",
        "zipball_url": "https://api.github.com/repos/rastanton/GAMMA/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rastanton",
          "type": "User"
        },
        "date_created": "2020-11-16T19:52:05Z",
        "date_published": "2020-11-16T20:00:09Z",
        "description": "Initial release of GAMMA",
        "html_url": "https://github.com/rastanton/GAMMA/releases/tag/v1.0",
        "name": "GAMMAv1.0",
        "release_id": 34021815,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/rastanton/GAMMA/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/rastanton/GAMMA/releases/34021815",
        "value": "https://api.github.com/repos/rastanton/GAMMA/releases/34021815",
        "zipball_url": "https://api.github.com/repos/rastanton/GAMMA/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:48:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}