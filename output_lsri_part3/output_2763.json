{
  "application_domain": [
    {
      "confidence": 50.95,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/trasse/OpSeF-IV"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Why &amp; How to Contribute",
        "type": "Text_excerpt",
        "value": "Many ML-based segmentation tools can be classified as \"developer to end-user\" solution. The number of parameter accessible to the end-user is very limited. Often these tools are promoted with statements such as \"no knowledge in machine learning required\". \n\nOpSeF follows a different approach. Using it without basic knowledge in machine learning and the desire to dive deeper into possibilities for optimization will most likely lead to frustration (and is thus discouraged).\n\nOpSeF is designed as \"image analyst to image analyst\"  project.\n\nOpSeF allows for straightforward integration of large number of pre-trained model. We hope that OpSeF will be widely accepted as frame-work through which novel model can be made available to other image analysts. \n\nAt current OpSeF-IV is still at the  prove of concept stage and contains currently only four pre-trained model & the to-do list is long.\n\nIt will reach it's full potential only by being transformed into a community project.\n\nThus, if you lack a feature, please try to add it yourself.\n\nPlease find the current to-do list here: \n\n[To Do](./To_Do/to_do.txt)\n\nPlease consider to solve one of these tasks.\n\nIf you train new model, please make them available in OpSeF.\n\nHopefully, we will publish the OpSeF-XL update (with 40 pre-trained model instead of 4) within a year as a community paper.\n\nPlease contribute new Demo_Notebooks & teaching material.\n\nIf you get stuck please e-mail me & I will try to troubleshoot.\n\nThen please consider to multiply you knowledge by volunteering to help other analysts in using and developing OpSeF.  \n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-15T06:18:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-29T15:32:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary",
        "type": "Text_excerpt",
        "value": "Various pre-trained deep-learning models for the segmentation of biomedical images have been made available to users with little to no knowledge in machine learning. However, testing these tools individually is tedious and success is uncertain. \n\nHere, we present OpSeF, a Python framework for deep-learning based semantic segmentation that was developed to promote the collaboration of biomedical user with experienced image-analysts. The performance of pre-trained models can be improved by using pre-processing to make the new input data more closely resemble the data the selected models were trained on. OpSeF assists analysts with the semi-automated exploration of different pre-processing parameters. OpSeF integrates in a single framework: scikit-image, a collection of Python algorithms for image processing, and three mechanistically distinct convolutional neural network (CNN) based segmentation methods, the U-Net implementation used in Cellprofiler 3.0, StarDist, and Cellpose. The optimization of parameters used for preprocessing and selection of a suitable model for segmentation form one functional unit. Even if sufficiently good results are not achievable with this approach, OpSeF results can inform the analysts in the selection of the most promising CNN-architecture in which the biomedical user might invest the effort of manually labeling training data. \n\nWe provide two generic non-microscopy image collections to illustrate common segmentation challenges. Further datasets exemplify the segmentation of a mono-layer of fluorescent cells, fluorescent tissue, cells in which various compartments have been stained with a single dye, as well as histological sections stained with one or two dyes. We provide Jupyter notebooks to support analysts in user training and as a template for the systematic search for the best combination of preprocessing and CNN-based segmentation. Results can be analyzed and visualized using matplotlib, pandas, scikit-image, and scikit-learn. They can be refined by object-selection based on their region properties, a biomedical-user-provided or an auto-generated mask. Additionally, results might be exported to AnnotatorJ for editing or classification in ImageJ. After refinement, the analyst can re-import results and further analyze them in OpSeF. \n\nWe encourage biomedical users to provide further image collections, analysts Jupyter notebooks, and pre-trained models. Thereby, OpSeF might soon become, both a \u201cmodel store\u201d, in which appropriate model might be identified with reasonable effort and a valuable resource for teaching biomedical user CNN-based segmentation.\n\n"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Technical description",
        "type": "Text_excerpt",
        "value": "OpSeF has been primarily developed for staff image analysts with solid knowledge in image analysis, thorough understating of the principles of machine learning, and ideally basic skills in Python. \n\nThe analysis pipeline consists of four principal sets of functions to *import and reshape* the data, to *pre-process* it, to *segment* objects, and to *analyze and classify* results. \n\n<img src=\"./Demo_Notebooks/Figures_Demo/Fig_M1.jpg\" alt = \"Paper Fig M1\" style = \"width: 500px;\"/>\n\nCurrently, OpSeF can process individual tiff-files and the Leica \u201c.lif\u201d container file format. During *import and reshape,* the following options are available for tiff-input: *tile* in 2D and 3D, *scale*, and make *sub-stacks* . For lif-files, only the make *sub-stacks* option is supported. \n\nPre-processing is mainly based on scikit-image. It consists of a linear pipeline: \n\n<img src=\"./Demo_Notebooks/Figures_Demo/Fig_M3.jpg\" alt = \"Paper Fig M3\" style = \"width: =500px;\"/>\n\nImages are filtered in 2D, background is removed, and then stacks are projected. Next, the following optional pre-processing operations might be performed: histogram adjustment, edge enhancement, and inversion of images. \n\nSegmentation in cooperates the pre-trained U-Net implementation used in Cellprofiler 3.0, the StarDist 2D model and Cellpose. \n\nImportantly, OpSeF is designed such that parameters for pre-processing and selection of the ideal model for segmentation are one functional unit. \n\n<img src=\"./Demo_Notebooks/Figures_Demo/Fig_M4.jpg\" alt = \"Paper Fig M4\" style = \"width: 400px;\"/>\n\nLeft panel: Illustration of a processing pipeline, in which three different models are applied to data generated by four different pre-processing pipelines each. Right panel: Resulting images are classified into results that are correct; suffer from under- or over-segmentation or fail to detect objects. \n\n"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/trasse/OpSeF-IV/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/OpSeF_IV_Configure_001.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/OpSeF_IV_Configure_001.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/OpSeF_IV_Reimport_002.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/OpSeF_IV_Reimport_002.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/OpSeF_IV_Run_002_dev.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/OpSeF_IV_Run_002_dev.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/OpSeF_IV_Run_001.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/OpSeF_IV_Run_001.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Reimport_002-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Reimport_002-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Run_002b-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Run_002b-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Reimport_001-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Reimport_001-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Run_002_dev-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Run_002_dev-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Run_001-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Run_001-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Configure_001-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Configure_001-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Run_002-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/.ipynb_checkpoints/OpSeF_IV_Run_002-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_SDB_EpiCells.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_SDB_EpiCells.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_HE_Kidney.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_HE_Kidney.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_Cobblestones.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_Cobblestones.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Advanced_Filter_Plot_CSV_to_Fiji_0001_SDB_EpiCells.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Advanced_Filter_Plot_CSV_to_Fiji_0001_SDB_EpiCells.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_Leaves.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_Leaves.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_SDB_SmallNuclei.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_SDB_SmallNuclei.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_SkeletalMuscle.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_0001_SkeletalMuscle.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Advanced_User_Mask_Cluster_Plot_CSV_toFiji_0002dev_SkeletalMuscle_mask.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Advanced_User_Mask_Cluster_Plot_CSV_toFiji_0002dev_SkeletalMuscle_mask.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_001_BBBC027.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Basic_001_BBBC027.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Advanced_Cluster_Plot_CSV_toFiji_0001_SkeletalMuscle.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/OpSeF_IV_Setup_Advanced_Cluster_Plot_CSV_toFiji_0001_SkeletalMuscle.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_SDB_EpiCells-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_SDB_EpiCells-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_Leaves-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_Leaves-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_Filter_Plot_CSV_to_Fiji_0001_SDB_EpiCells-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_Filter_Plot_CSV_to_Fiji_0001_SDB_EpiCells-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_User_Mask_Cluster_Plot_CSV_toFiji_0001_SkeletalMuscle_mask-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_User_Mask_Cluster_Plot_CSV_toFiji_0001_SkeletalMuscle_mask-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_Setup_IV_0001-SDB_EpiCells-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_Setup_IV_0001-SDB_EpiCells-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_0001_Cobblestones-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_0001_Cobblestones-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_toFiji_0001_SkeletalMuscle-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_toFiji_0001_SkeletalMuscle-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_001_BBBC027-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_001_BBBC027-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_0001_HE_Kidney-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_0001_HE_Kidney-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_SDB_SmallNuclei-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_SDB_SmallNuclei-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_HE_Kidney-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_HE_Kidney-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_0001_Leaves-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_0001_Leaves-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_User_Mask_Cluster_Plot_CSV_toFiji_0002dev_SkeletalMuscle_mask-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_User_Mask_Cluster_Plot_CSV_toFiji_0002dev_SkeletalMuscle_mask-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001-SDB_EpiCells-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001-SDB_EpiCells-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_001_BBBC027-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_001_BBBC027-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_User_Mask_Cluster_Plot_CSV_toFiji_0001_SkeletalMuscle_2Ch-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_User_Mask_Cluster_Plot_CSV_toFiji_0001_SkeletalMuscle_2Ch-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_User_Mask_Cluster_Plot_CSV_toFiji_0001_SkeletalMuscle_two_Ch-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_User_Mask_Cluster_Plot_CSV_toFiji_0001_SkeletalMuscle_two_Ch-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_SkeletalMuscle-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_SkeletalMuscle-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_Cluster_Plot_CSV_toFiji_0001_SkeletalMuscle-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Advanced_Cluster_Plot_CSV_toFiji_0001_SkeletalMuscle-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_Cobblestones-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_Basic_0001_Cobblestones-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_0001_SkeletalMuscle-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_0001_SkeletalMuscle-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_0001_SDB_SmallNuclei-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/Demo_Notebooks/.ipynb_checkpoints/OpSeF_IV_Setup_0001_SDB_SmallNuclei-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/trasse/OpSeF-IV/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "trasse/OpSeF-IV"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/./Demo_Notebooks/Figures_Demo/Fig_M1.jpg"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/./Demo_Notebooks/Figures_Demo/Fig_M3.jpg"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/./Demo_Notebooks/Figures_Demo/Fig_M4.jpg"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/./Demo_Notebooks/Figures_Demo/Fig_M5.jpg"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/./Demo_Notebooks/Figures_Demo/Fig_M6_A.jpg"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/./Demo_Notebooks/Figures_Demo/Fig_M6_B.jpg"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/./Demo_Notebooks/Figures_Demo/Fig_M6_C.jpg"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/./Demo_Notebooks/Figures_Demo/Fig_Muscle_MaskD_E.jpg"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/./Demo_Notebooks/Figures_Demo/Fig_Muscle_Mask_FG.jpg"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/trasse/OpSeF-IV/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2020, Tobias Rasse\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OpSeF-IV"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "trasse"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 4985055,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 95173,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "spreka",
          "type": "User"
        },
        "date_created": "2020-05-07T13:13:11Z",
        "date_published": "2020-05-07T13:49:15Z",
        "description": "Initial release of AnnotatorJ with integrated OpSeF support; contains bugfixes.\r\nCross-platform. Already contains a basic ImageJ instance, no installation is needed.\r\n\r\nHow to use:\r\n1. Extract this archive to any empty folder on your computer.\r\n2. Run *annotator_Project-0.0.1-SNAPSHOT.jar* in this folder (for detailed instuctions see /annotatorj-opsef/README.md or /Documentation/AnnotatorJ_documentation.pdf)",
        "html_url": "https://github.com/trasse/OpSeF-IV/releases/tag/v0.0.1-alpha",
        "name": "AnnotatorJ-OpSeF plugin pre-built v0.0.1-alpha",
        "release_id": 26271884,
        "tag": "v0.0.1-alpha",
        "tarball_url": "https://api.github.com/repos/trasse/OpSeF-IV/tarball/v0.0.1-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/trasse/OpSeF-IV/releases/26271884",
        "value": "https://api.github.com/repos/trasse/OpSeF-IV/releases/26271884",
        "zipball_url": "https://api.github.com/repos/trasse/OpSeF-IV/zipball/v0.0.1-alpha"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "spreka",
          "type": "User"
        },
        "date_created": "2020-04-29T19:23:45Z",
        "date_published": "2020-04-29T20:10:44Z",
        "description": "Initial release of AnnotatorJ with integrated OpSeF support.\r\nCross-platform. Already contains a basic ImageJ instance, no installation is needed.\r\n\r\nHow to use:\r\n1. Extract this archive to any empty folder on your computer.\r\n2. Run *annotator_Project-0.0.1-SNAPSHOT.jar* in this folder (for detailed instuctions see /annotatorj-opsef/README.md or /Documentation/AnnotatorJ_documentation.pdf)",
        "html_url": "https://github.com/trasse/OpSeF-IV/releases/tag/v0.0.1",
        "name": "AnnotatorJ-OpSeF plugin pre-built v0.0.1",
        "release_id": 26020519,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/trasse/OpSeF-IV/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/trasse/OpSeF-IV/releases/26020519",
        "value": "https://api.github.com/repos/trasse/OpSeF-IV/releases/26020519",
        "zipball_url": "https://api.github.com/repos/trasse/OpSeF-IV/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:13:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 25
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to get started:",
        "type": "Text_excerpt",
        "value": "1) Clone repository\n\n2) Download data from https://owncloud.gwdg.de/index.php/s/nSUqVXkkfUDPG5b\n\n3) Setup environment\n\n4) Execute OpSeF_IV_Configure_001.ipynb (only once after installation)\n\n5) Open any \"Basic\" demo notebook\n\n6) Define the path, where you put the data (see QuickStart.pdf) and execute notebook\n\n7) Copy this file-path of the .pkl file (see QuickStart.pdf)\n\n8) Open OpSeF_IV_Run_001.ipynb and point the variable file_path to the .pkl file generated in 7) \n\n\u200b     (see QuickStart.pdf)\n\nLink to QuickStart.pdf: \n\n[QuickStart.pdf](./Documentation/Quick_Start_OpSeF.pdf)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Define your own project:",
        "parent_header": [
          "Advanced Use:"
        ],
        "type": "Text_excerpt",
        "value": "1) Copy an existing Demo Notebook\n\n2) Organize all input data in one folder\n\n*using .lif as input:*\n\n\u200b\troot/myimage_container.lif\n\n*using .tif as input:*\n\n\u200b\troot/tiff/myimage1.tif (in case this folder is the direct input to the pre-processing pipeline)\n\n\u200b\troot/tiff/myimage2.tif ...\n\n\u200b\troot/tiff_raw_2D/myimage1.tif (if you want to make patches in 2D)\n\n\u200b\troot/tiff_to_split/myimage1.tif (if you want ONLY create substacks, no binning or creation of patches) \n\n\u200b\troot/tiff_raw/myimage1.tif (for all pipelines that start with patching or binning and use stacks)\n\n3) Point Demo Notebook to this folder & give notebook a common name:\n\n```python\ninput_def[\"root\"] = \"/home/trasse/Desktop/MLTestData/leaves\"\ninput_def[\"dataset\"] = \"leaves\"\n```\n\n4) Define input type\n\n```python\ninput_def[\"input_type\"] = \".tif\"\n```\n\n5) Define first test run (give it a Run_ID, define pre-processing & which model to test)\n\n```python\nrun_def[\"run_ID\"] = \"001\"  # give each run a new ID \n                           #(unless you want to overwrite the old data)\n\nrun_def[\"pre_list\"] = [[\"Median\",3,50,\"Max\",False,run_def[\"clahe_prm\"],\"no\",False],\n                       [\"Median\",3,50,\"Max\",True,run_def[\"clahe_prm\"],\"no\",False],\n                       [\"Median\",3,50,\"Max\",False,run_def[\"clahe_prm\"],\"sobel\",False],\n                       [\"Median\",3,50,\"Max\",False,run_def[\"clahe_prm\"],\"no\",True]]\n\n# For Cellpose\nrun_def[\"rescale_list\"] = [0.2,0.4,0.6] # run1\n\n# Define model\nrun_def[\"ModelType\"] = [\"CP_nuclei\",\"CP_cyto\",\"SD_2D_dsb2018\",\"UNet_CP001\"] # run1\n```\n\n6) Execute Run in OpSeF_IV_Run_001.ipynb (as described for the demo notebooks)\n"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Explore Post-Processing Options:",
        "parent_header": [
          "Advanced Use:"
        ],
        "type": "Text_excerpt",
        "value": "Segmented objects can be filtered by their region properties or a mask, results might be exported to AnnotatorJ and re-imported for further analysis. Blue arrows define the default processing pipeline, grey arrows feature available options. Dark Blue boxes are core components, light blue boxes are optional processing steps.\n\n<img src=\"./Demo_Notebooks/Figures_Demo/Fig_M5.jpg\" alt = \"Paper Fig M5\" style = \"width: 500px;\"/>\n\n\n\nExplore the Demo Notebook: OpSeF_IV_Setup_Advanced_Filter_Plot_CSV_to_Fiji_0001_SDB_EpiCells.\n\nThis notebook illustrates how results can be improved by simple filtering.\n\nStarDist segmentation of the Multi-labeled Cells Datasets detected nuclei reliably but caused many false positive detections. These resembles the typical shape of cells but are larger than true nuclei. Orange arrows point at nuclei that were missed, the white arrow at two nuclei that were not split, the blue arrows at false positive detection that could not be removed by filtering. \n\n<img src=\"./Demo_Notebooks/Figures_Demo/Fig_M6_A.jpg\" alt = \"Paper Fig M6A\" style = \"width: 400px;\"/>\n\nScatter plot of segmentation results shown in A. Left panel: Mean intensity plotted against area. Right panel: Circularity plotted against area. Blue Box illustrating parameter used to filter results. \n\n<img src=\"./Demo_Notebooks/Figures_Demo/Fig_M6_B.jpg\" alt = \"Paper Fig M6B\" style = \"width: 500px;\"/>\n\nFiltered Results. Orange arrows point at nuclei that were missed, the white arrow at two nuclei that were not split, the blue arrows at false positive detection that could not be removed by filtering.\n\n<img src=\"./Demo_Notebooks/Figures_Demo/Fig_M6_C.jpg\" alt = \"Paper Fig M6C\" style = \"width: 400px;\"/>\n\n\nExplore the Demo Notebook:\n\nOpSeF_IV_Setup_Advanced_User_Mask_Cluster_Plot_CSV_toFiji_0002dev_SkeletalMuscle_mask\nThis notebook illustrates the use of a user provided mask.\n\n!! Execute the parameter from this Notebook in OpSeF_IV_Run_002_dev.ipynb !!\n\n<img src=\"./Demo_Notebooks/Figures_Demo/Fig_Muscle_MaskD_E.jpg\" alt = \"Paper Fig MM_DE\" style = \"width: 500px;\"/>\n\n(D,E) Example for the use of a user provided mask to classify segmented objects. The segmentation results (false colored nuclei) are is superimposed onto the original image subjected to [median 3x3] preprocessing. All nuclei located in the green area assigned to Class 1, all others to Class 2. Red box indicates region shown enlarged in (E). From left to right in E: original image, nuclei assigned to class 1, nuclei assigned to class 2. \n\nT-distributed Stochastic Neighbor Embedding (t-SNE) analysis and Principal component analysis (PCA) were used to whether there is a difference between the two classes. Nuclei are not clustered by their color-coded class (class 1 (purple), class 2 (yellow)).\n\nTo this aim the pc[\"Do_ClusterAnalysis\"] has to be set to True and\n```python\nif pc[\"Do_ClusterAnalysis\"]: # Define (below) which values will be included in the TSNE:\n    pc[\"Cluster_How\"] = \"Mask\" # or \"Mask\"\n```\n\n<img src=\"./Demo_Notebooks/Figures_Demo/Fig_Muscle_Mask_FG.jpg\" alt = \"Paper Fig MM_FG\" style = \"width: 500px;\"/>\n\n(F) (t-SNE) analysis of nuclei assigned to class 1 (purple) or class 2 (yellow). \n(G) PCA of nuclei assigned to class 1 (purple) or class 2 (yellow).\n"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Export to and Import from AnnotatorJ",
        "parent_header": [
          "Advanced Use:"
        ],
        "type": "Text_excerpt",
        "value": "AnnotatorJ is and ImageJ/Fiji plugin for semi-automatic object annotation using deep learning.\n\nPlease see the [AnnotatorJ repository](https://github.com/spreka/annotatorj) about the plugin and install instructions, specifically the [OpSeF import](https://github.com/spreka/annotatorj#opsef-import) and the [general usage](https://github.com/spreka/annotatorj#how-to-annotate) sections.\n\nSee details in the [documentation](https://github.com/spreka/annotatorj/blob/master/AnnotatorJ_documentation.pdf) too.\n"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Further Information:",
        "parent_header": [
          "Advanced Use:"
        ],
        "type": "Text_excerpt",
        "value": "Documentation of naming schemes used: \n\nguide_to_folder_structure_and_file_naming.txt\n\nDocumentation of main variables used: \n\nguide_to_variables.txt\n\nFurther Questions:\n\nsee FAQ :\n\n[FAQ](./Documentation/FAQ.pdf)\n\nGuide how to create masks for classification:\nGuide_user_provided_masks.txt\n"
      },
      "source": "https://raw.githubusercontent.com/trasse/OpSeF-IV/master/README.md",
      "technique": "header_analysis"
    }
  ]
}