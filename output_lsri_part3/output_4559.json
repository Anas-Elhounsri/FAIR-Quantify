{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hosseinshn/AITL"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-12-21T20:22:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-25T15:14:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A repository for Adversarial Inductive Transfer Learning with input and output space adaptation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9500835134156955,
      "result": {
        "original_header": "AITL: Adversarial Inductive Transfer Learning with input and output space adaptation for pharmacogenomics",
        "type": "Text_excerpt",
        "value": "Repository for \"AITL: Adversarial Inductive Transfer Learning with input and output space adaptation for pharmacogenomics\" [[paper]](https://academic.oup.com/bioinformatics/article/36/Supplement_1/i380/5870479?login=true) \nAuthors : Hossein Sharifi Noghabi, Shuman Peng, Olga Zolotareva, Colin Collins and Martin Ester\n \n"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9859502781056856,
      "result": {
        "original_header": "Structure of the data",
        "type": "Text_excerpt",
        "value": "The data contains pharmacogenomics datasets for 4 different cancer treatment drugs, namely **Bortezomib**, **Cisplatin**, **Docetaxel**, and **Paclitaxel**. The source and target pharmacogenomics datasets for each drug are included in the folders `data/split/[drug]`, where `drug=[Bortezomib, Cisplatin, Docetaxel, Paclitaxel]`. A detailed structure of the pre-processed data downloaded using our provided link above is shown below.\n```\ndata\n\u251c\u2500\u2500 split\n|   \u251c\u2500\u2500 Bortezomib\n|       \u251c\u2500\u2500 stratified                              # for 3-fold cross validation\n|           \u251c\u2500\u2500 source_3_folds\n|               \u251c\u2500\u2500 split1\n|                   \u251c\u2500\u2500 X_train_source.tsv          # for AITL training (inputs)\n|                   \u251c\u2500\u2500 X_val_source.tsv            # for AITL validation (inputs)\n|                   \u251c\u2500\u2500 Y_logIC50train_source.tsv   # for AITL training (continuous outputs)\n|                   \u251c\u2500\u2500 Y_logIC50val_source.tsv     # for AITL validation (continuous outputs)\n|                   \u251c\u2500\u2500 Y_train_source.tsv          # binarized outputs\n|                   \u251c\u2500\u2500 Y_val_source.tsv            # binarized outputs\n|               \u251c\u2500\u2500 split2\n|                   \u251c\u2500\u2500 ...     # contains the same files as split1\n|               \u251c\u2500\u2500 split3\n|                   \u251c\u2500\u2500 ...     # contains the same files as split1\n|           \u251c\u2500\u2500 target_3_folds\n|               \u251c\u2500\u2500 split1\n|                   \u251c\u2500\u2500 X_train_target.tsv          # for AITL training (inputs)\n|                   \u251c\u2500\u2500 X_test_target.tsv           # for AITL testing (inputs)\n|                   \u251c\u2500\u2500 Y_train_target.tsv          # for AITL training (outputs)\n|                   \u251c\u2500\u2500 Y_test_target.tsv           # for AITL testing (outputs)\n|               \u251c\u2500\u2500 split2\n|                   \u251c\u2500\u2500 ...    # contains the same files as split1\n|               \u251c\u2500\u2500 split3\n|                   \u251c\u2500\u2500 ...    # contains the same files as split1\n|       \u251c\u2500\u2500 Source_exprs_resp_z.Bortezomib.tsv              # original source data (not stratified for 3-fold cross validation)\n|       \u251c\u2500\u2500 Target_combined_expr_resp_z.Bortezomib.tsv      # original target data (not stratified for 3-fold cross validation)\n|   \u251c\u2500\u2500 Cisplatin\n|       \u251c\u2500\u2500 ...   # follows the same pattern as Bortezomib\n|   \u251c\u2500\u2500 Docetaxel  \n|       \u251c\u2500\u2500 ...   # follows the same pattern as Bortezomib\n|   \u251c\u2500\u2500 Paclitaxel\n|       \u251c\u2500\u2500 ...   # follows the same pattern as Bortezomib\n\u2514\u2500\u2500\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9038012263446233,
      "result": {
        "original_header": "Training an AITL model using specified hyper-parameters",
        "type": "Text_excerpt",
        "value": "**Step 2:** update the hyper-parameter values in `aitl_train_best_model`. You may use the hyper-parameters we provided in our [supplementary materials](https://github.com/hosseinshn/AITL/blob/master/AITL_Supp%20Material.pdf) (page 3). \n"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading our pre-processed data",
        "parent_header": [
          "Datasets"
        ],
        "type": "Text_excerpt",
        "value": "You can download the pre-processed data that we used to train and evaluate our AITL models [here](https://drive.google.com/drive/folders/1r4iw-qp6gep5XzYlQzaxI22cGgqI0MRG?usp=sharing).\n"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hosseinshn/AITL/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hosseinshn/AITL/master/preprocessing/RNAseq.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/preprocessing/RNAseq.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hosseinshn/AITL/master/preprocessing/microarrays.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/preprocessing/microarrays.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hosseinshn/AITL/master/preprocessing/GEO_annotations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/preprocessing/GEO_annotations.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hosseinshn/AITL/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hosseinshn/AITL"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AITL: Adversarial Inductive Transfer Learning with input and output space adaptation for pharmacogenomics"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda environment",
        "parent_header": [
          "Installation",
          "Requirements"
        ],
        "type": "Text_excerpt",
        "value": "Use the provided `environment.yml` in `AITL/AITL_submit/` to create a conda environment with the required packages.\n```\ncd AITL_submit/\nconda env create -f environment.yml\n```\nRunning the command above will create the `py36aitl` environment. To activate the `py36aitl` environment, use:\n```\nconda activate py36aitl\n```\n"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9000056620331065,
      "result": {
        "original_header": "Training an AITL model using specified hyper-parameters",
        "type": "Text_excerpt",
        "value": "**Step 2:** update the hyper-parameter values in `aitl_train_best_model`. You may use the hyper-parameters we provided in our [supplementary materials](https://github.com/hosseinshn/AITL/blob/master/AITL_Supp%20Material.pdf) (page 3). \n"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hosseinshn/AITL/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AITL"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hosseinshn"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 432639,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 117104,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hosseinshn/AITL/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "* Python 3.6\n* Conda\n* PyTorch 1.1\n"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda environment",
        "parent_header": [
          "Installation",
          "Requirements"
        ],
        "type": "Text_excerpt",
        "value": "Use the provided `environment.yml` in `AITL/AITL_submit/` to create a conda environment with the required packages.\n```\ncd AITL_submit/\nconda env create -f environment.yml\n```\nRunning the command above will create the `py36aitl` environment. To activate the `py36aitl` environment, use:\n```\nconda activate py36aitl\n```\n"
      },
      "source": "https://raw.githubusercontent.com/hosseinshn/AITL/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:51:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ]
}