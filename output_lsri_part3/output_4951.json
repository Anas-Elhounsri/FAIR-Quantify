{
  "application_domain": [
    {
      "confidence": 18.35,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 21.95,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "ncRF"
        ],
        "type": "Text_excerpt",
        "value": "[1] P. Das, C. Brodbeck, J. Z. Simon, B. Babadi, [Direct Cortical Localization of the MEG Auditory Temporal Response \r\nFunction: a Non-Convex Optimization Approach](https://isr.umd.edu/Labs/CSSL/simonlab/pubs/SFN2018.pdf); Proceedings \r\nof the 47th Annual Neuroscience Meeting (SfN 2018), Nov. 2-7, San Diego, CA.\r\n\r\n[2] P. Das, C. Brodbeck, J. Z. Simon, B. Babadi, [Cortical Localization of the Auditory Temporal Response Function from \r\nMEG via Non-Convex Optimization](https://isr.umd.edu/Labs/CSSL/simonlab/pubs/Asilomar2018.pdf); 2018 Asilomar Conference\r\n on Signals, Systems, and Computers, Oct. 28\u201331, Pacific Grove, CA (invited)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/proloyd/neuro-currentRF"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Bug reports / Contact",
        "parent_header": [
          "ncRF"
        ],
        "type": "Text_excerpt",
        "value": "*Since this is a dev version, and I will be adding more functionality over time, so feel free to ask me to add any other functionality, or report if anything is broken.\r\nIf you want to contact the author, you can do so under the following email-address: proloy@umd.edu*\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-06T05:05:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-17T02:09:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Unified Approach to MEG Source Analysis under the Continuous Stimuli Paradigm"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9960072357660494,
      "result": {
        "original_header": "ncRF",
        "type": "Text_excerpt",
        "value": "The magnetoencephalography (MEG) response to continuous auditory stimuli, such as speech, is commonly described using a linear filter, the auditory temporal response function (TRF). Though components of the sensor level TRFs have been well characterized, the cortical distributions of  the underlying neural responses are not well-understood. In our recent work, we provide a unified framework for determining the TRFs of neural sources directly from the MEG data, by integrating the TRF and distributed forward  source models into one, and casting the joint estimation task as a Bayesian optimization problem. Though the resulting  problem emerges as non-convex, we propose efficient solutions that leverage recent advances in evidence maximization. For more details please refer to [1], [2].\r\n\r\nThis repository contains the implementation of our direct TRF estimation algorithm in python (version 3.6 and above). \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9907899808500503,
      "result": {
        "original_header": "Results",
        "type": "Text_excerpt",
        "value": "We applied the algorithm on a subset of MEG data collected from 17 adults (aged 18-27 years) under an auditory task described in the papers. In short, during the task, the participants listened to `1 min` long segments from an audio-book recording of [The Legend of Sleepy Hollow by Washington Irving](https://librivox.org/the-legend-of-sleepy-hollow-by-washington-irving/), narrated by a male speaker. We consider localizing the TRFs using a total of `6 min` data from each participant. MNE-python 0.14 was used in pre-processing the raw data to automatically detect and discard flat channels, remove  extraneous artifacts, and to band-pass filter the data in the range `1 - 80 Hz`. The six `1 min` long data epochs were then down-sampled to `200 Hz`. As the stimulus variable, we used the speech envelope reflecting the momentary acoustic power, by averaging the auditory spectrogram representation (generated using a model of the \r\nauditory periphery) across the frequency bands, sampled at `200 Hz`.  A volume source space for individual subjects was defined on a 3D regular grid with a resolution of `7 mm` in each direction. The lead-field matrix was then computed by placing free orientation virtual dipoles on the resulting `3322` grid points. The consistent components of our estimated `1 s`-long 3D TRFs across all `17` subjects looks like following:\r\n\r\n![Demo](https://user-images.githubusercontent.com/28169943/49410670-bf51c500-f733-11e8-9894-43880aa8d49e.gif)\r\n\r\nIsn't that cool? Do expect to see something like that with any other source localization method? If you realize you could use this method on your data, please feel free to use the codes. You can reach me at proloy@umd.edu if you have any issues with the codes. And don't forget to go over the papers/ posters before applying the algorithm. \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.984606452547774,
      "result": {
        "type": "Text_excerpt",
        "value": "**Wanna try ncRFs for your data???** \r\n\r\nTutorial on real dataset is now available . \n"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/proloyd/neuro-currentRF/wiki"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/proloyd/neuro-currentRF/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/example/example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/example/example.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/proloyd/neuro-currentRF/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "proloyd/neuro-currentRF"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ncRF"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/28169943/49410670-bf51c500-f733-11e8-9894-43880aa8d49e.gif"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ci.appveyor.com/api/projects/status/s0b4si7yj280f9t8?svg=true"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ncRF"
        ],
        "type": "Text_excerpt",
        "value": "After successfully installing Eelbrain, one can follow either of the methods to install different versions the repository.   \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing the release version",
        "parent_header": [
          "ncRF",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The following comment will install the latest released version:\r\n```commandline\r\npip install ncrf\r\n```\r\nNote: yet to be released on PyPI yet. \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Development version from GiHub",
        "parent_header": [
          "ncRF",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "After cloning the GitHub repository, install using pip: \r\n\r\n```commandline\r\ngit clone https://github.com/proloyd/neuro-currentRF.git\r\ncd neuro-currentRF\r\npip install -e .\r\n```\r\nand there you go!\r\nIf the last command throws any error, ``Cython`` is most likely not installed. Then try installing ``Cython`` by following\r\ncommand: \r\n```commandline\r\nconda install cython\r\n```\r\nthen enter the last command again, and that should do the trick. \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/proloyd/neuro-currentRF/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause \"Simplified\" License",
        "spdx_id": "BSD-2-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-2-clause",
        "value": "https://api.github.com/licenses/bsd-2-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 2-Clause License\n\nCopyright (c) 2019, Proloy Das\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Terms of Use / License",
        "parent_header": [
          "ncRF"
        ],
        "type": "Text_excerpt",
        "value": "----------------------\r\nThis repository is free software, covered by the Apache License 2.0. However since they have been mainly developed for academic use, the author would appreciate being given academic credit for it. \r\nWhenever you use this software to produce a publication or talk, please cite the following references.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "neuro-currentRF"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "proloyd"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 91545,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 20421,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 15073,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 6671,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "proloyd",
          "type": "User"
        },
        "date_created": "2021-09-15T20:03:50Z",
        "date_published": "2021-09-15T22:06:27Z",
        "description": "- Supports different `tstop`s for different predictor variables \r\n\r\n- Width of Gaussian basis is now a parameter",
        "html_url": "https://github.com/proloyd/neuro-currentRF/releases/tag/v0.4",
        "name": "ENH variable kernel lengths and smoothing",
        "release_id": 49634924,
        "tag": "v0.4",
        "tarball_url": "https://api.github.com/repos/proloyd/neuro-currentRF/tarball/v0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/proloyd/neuro-currentRF/releases/49634924",
        "value": "https://api.github.com/repos/proloyd/neuro-currentRF/releases/49634924",
        "zipball_url": "https://api.github.com/repos/proloyd/neuro-currentRF/zipball/v0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "proloyd",
          "type": "User"
        },
        "date_created": "2019-09-09T04:43:32Z",
        "date_published": "2019-09-09T04:46:15Z",
        "description": "migration to ncrf from dstrf",
        "html_url": "https://github.com/proloyd/neuro-currentRF/releases/tag/v0.3",
        "name": "v0.3",
        "release_id": 19840341,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/proloyd/neuro-currentRF/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/proloyd/neuro-currentRF/releases/19840341",
        "value": "https://api.github.com/repos/proloyd/neuro-currentRF/releases/19840341",
        "zipball_url": "https://api.github.com/repos/proloyd/neuro-currentRF/zipball/v0.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements:",
        "parent_header": [
          "ncRF"
        ],
        "type": "Text_excerpt",
        "value": "Eelbrain ([Download/ Installation Instructions](https://github.com/christianbrodbeck/Eelbrain/wiki/Installing#release))\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "faq",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:12:19",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Bug reports / Contact",
        "parent_header": [
          "ncRF"
        ],
        "type": "Text_excerpt",
        "value": "*Since this is a dev version, and I will be adding more functionality over time, so feel free to ask me to add any other functionality, or report if anything is broken.\r\nIf you want to contact the author, you can do so under the following email-address: proloy@umd.edu*\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use:",
        "parent_header": [
          "ncRF"
        ],
        "type": "Text_excerpt",
        "value": "run\r\n```python\r\nmodel = fit_ncrf(meg, stim, lead_field, noise, mu='auto', tstop=1.0, nlevels=2, n_splits=3, normalize='l1')\r\n```\r\nto perform a 3-fold cross-validation and then construct the model for 1s long TRF with the regularization weight among the given range that gives least generalization error. The signature of the ``meg`` and ``stim`` could be as follows:\r\n\r\n    [        megA (case, sensor, time),                       megB (case, sensor, time),               ...]\r\n    [[featA1 (case, time), featA2 (case, time), ...], [featB1 (case, time), featB2 (case, time), ...], ...]\r\n\r\nFor more options, please look at the docstring. The learned TRF, `h` can be retrieved using:\r\n```python\r\nh = model.h\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Terms of Use / License",
        "parent_header": [
          "ncRF"
        ],
        "type": "Text_excerpt",
        "value": "----------------------\r\nThis repository is free software, covered by the Apache License 2.0. However since they have been mainly developed for academic use, the author would appreciate being given academic credit for it. \r\nWhenever you use this software to produce a publication or talk, please cite the following references.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/proloyd/neuro-currentRF/master/README.md",
      "technique": "header_analysis"
    }
  ]
}