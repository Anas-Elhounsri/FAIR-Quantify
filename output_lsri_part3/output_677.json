{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mcollatz/ConsensusPrime"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-03T12:46:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-27T14:51:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9913798322070149,
      "result": {
        "original_header": "ConsensusPrime",
        "type": "Text_excerpt",
        "value": "Pipeline for filtering and cleaning of multiple sequence alignments to identify ideal consensus regions from homologue sequences for primer design. \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8360634360322654,
      "result": {
        "original_header": "Results",
        "type": "Text_excerpt",
        "value": "The results are stored in the specified /out directory or in the current directory under \"/results\". The intermediate results of the individual filter steps are also located in this directory. The predicted primers are listed in the \"consensus_prime_summary.html\" with all related details. The predicted primers can be viewed in \"final_alignment.fna\" using an alignment visualization program such as ClustalX. \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mcollatz/ConsensusPrime/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mcollatz/ConsensusPrime/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mcollatz/ConsensusPrime"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ConsensusPrime"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation &amp; Dependencies",
        "parent_header": [
          "ConsensusPrime"
        ],
        "type": "Text_excerpt",
        "value": "Install Python3.8 in miniconda. https://docs.conda.io/en/latest/miniconda.html\n\nDownload and uncompress all files from the GitHub repository.\n```bash\nwget https://github.com/mcollatz/ConsensusPrime/archive/refs/heads/main.zip\nunzip main.zip\n```\n\nAdept the primer3_parameters.txt to your needs. For details see https://primer3.org/manual.html\n\nInstall MAFFT, Primer3 and ClustalX (optional for alignment visualzation)\n```bash\nsudo apt-get update -y\nsudo apt-get install -y mafft\nsudo apt-get install -y primer3\nsudo apt-get install -y clustalx\n```\n\nCreate and activate new Python environment for ConsensusPrime\n```bash\nconda create -n consensus_prime\nconda activate consensus_prime\n```\nInstall pandas\n```bash\nconda install pandas\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9896943066131806,
      "result": {
        "original_header": "We also provide a Docker image for ConsensusPrime",
        "type": "Text_excerpt",
        "value": "Simply pull and run a ready-to-use image from Dockerhub: \nDownload the example_data.fna and primer3_parameters.txt then run the following command (remember to adjust the file paths accordingly).\n```bash\ndocker run -t --rm -v /path/to/dir/with/your/input/files/:/in \\\n-v /path/to/dir/for/results/:/out \\\n-u `id -u $USER`:`id -g $USER` \\\nmcollatz/consensusprime:1.0 \\\n/consensus_prime.py --infile /in/example_data.fna --primer3 /in/primer3_parameters.txt --outdir /out\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8703412450997787,
      "result": {
        "original_header": "We also provide a Docker image for ConsensusPrime",
        "type": "Text_excerpt",
        "value": "**Example** \nDownload the example_data.fna and primer3_parameters.txt then run the following command (remember to adjust the file paths accordingly).\n```bash\ndocker run -t --rm -v /path/to/dir/with/your/input/files/:/in \\\n-v /path/to/dir/for/results/:/out \\\n-u `id -u $USER`:`id -g $USER` \\\nmcollatz/consensusprime:1.0 \\\n/consensus_prime.py --infile /in/example_data.fna --primer3 /in/primer3_parameters.txt --outdir /out\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8027461368830479,
      "result": {
        "original_header": "Results",
        "type": "Text_excerpt",
        "value": "For an example output check the example_results.zip. \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mcollatz/ConsensusPrime/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 mcollatz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ConsensusPrime"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mcollatz"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 31260,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 324,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System Requirements",
        "parent_header": [
          "ConsensusPrime"
        ],
        "type": "Text_excerpt",
        "value": "The pipeline is developed and testet for:\n\nSoftware | Version\n  ------------- | -------------\nLinux   | 20.04\nMafft   | 7.453\nPrimer3 | 2.5.0\n\nOn the hardware side, the alignments with mafft are the bottleneck. The length and number of sequences play a decisive role. Alignments with a few hundred sequences of moderate length can be calculated in a few seconds to minutes even on simple laptops. Larger alignments require a system with more RAM.\n\nThe duration of the installation is a few minutes and depends among other things on whether various requirements are already installed, such as conda.\n\nThe processing time of the sample dataset is about 15 sec on a laptop with Intel(R) Core(TM) i7-10750H CPU @ 2.60GHz and 16 GB RAM.\n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation &amp; Dependencies",
        "parent_header": [
          "ConsensusPrime"
        ],
        "type": "Text_excerpt",
        "value": "Install Python3.8 in miniconda. https://docs.conda.io/en/latest/miniconda.html\n\nDownload and uncompress all files from the GitHub repository.\n```bash\nwget https://github.com/mcollatz/ConsensusPrime/archive/refs/heads/main.zip\nunzip main.zip\n```\n\nAdept the primer3_parameters.txt to your needs. For details see https://primer3.org/manual.html\n\nInstall MAFFT, Primer3 and ClustalX (optional for alignment visualzation)\n```bash\nsudo apt-get update -y\nsudo apt-get install -y mafft\nsudo apt-get install -y primer3\nsudo apt-get install -y clustalx\n```\n\nCreate and activate new Python environment for ConsensusPrime\n```bash\nconda create -n consensus_prime\nconda activate consensus_prime\n```\nInstall pandas\n```bash\nconda install pandas\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:55:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "ConsensusPrime"
        ],
        "type": "Text_excerpt",
        "value": "Download the example_data.fna and primer3_parameters.txt then run the following command (remember to adjust the file paths accordingly).\n```bash\npython3.8 /path_to/consensus_prime.py --infile /path_to/example_data.fna --primer3 /path_to/primer3_parameters.txt\n```\n\n**Options:**\n\ncommand | what it does\n  ------------- | -------------\n-i, --infile              |Multi-Fasta file with gene sequences.  [required]\n-x, --primer3             |Primer3 parameter file. [required]\n-o, --outdir              |Specifies output directory. Default = .\n-t, --threads             |Number of threads used by MAFFT. Default = -1 (all)\n-k, --keepduplicates      |Keep duplicate sequences. Default = False\n-c, --consensusthreshold  |Consensus threshold bitween 0 and 1 with 1 beeing a perfect consensus. Default = 0.95\n-s, --consensussimilarity |Minimum similarity threshold for sequences in the input alignment when comparing each sequence to the consensus sequence. Default = 0.8\n--primers                 |Known primers for visualisation in the final alignment in multifasta format.\n--negativesequences       |File with sequences that get their consensus sequence added to the final alignment in multifasta format.\n-h, --help                |show this message and exit\n\n\nExit the conda environment when you are done\n```bash\nconda deactivate\n```\n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/ConsensusPrime/main/README.md",
      "technique": "header_analysis"
    }
  ]
}