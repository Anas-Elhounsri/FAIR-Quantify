{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HEGANLDA/HEGANLDA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-01T07:24:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-03T08:12:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "a computational model for potential lncRNA-disease association prediction based on multiple heterogeneous networks"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HEGANLDA/HEGANLDA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HEGANLDA/HEGANLDA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HEGANLDA/HEGANLDA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HEGANLDA"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/edge.png"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "&emsp; * TensorFlow version &gt;= 1.14",
        "parent_header": [
          "HEGANLDA",
          "Get started",
          "Evironment Setting"
        ],
        "type": "Text_excerpt",
        "value": "* ### 1.Datasets\n##### &emsp;&emsp; HEGANLDA collected six networks data (lncRNA-disease, lncRNA-miRNA, disease-miRNA, lncRNA-lncRNA, disease-disease, and miRNA-miRNA) to construct a lncRNA-miRNA-disease heterogeneous network. \n\n* ### 2.Nodevector\n#####  &emsp; &emsp; HeGAN (B. Hu et al., 2019) algorithm is employed to map all the nodes in the lncRNA-miRNA-disease heterogeneous network into low-dimensional vectors.\n#### &emsp;&emsp; * Config/Usage\n##### &emsp;&emsp;&emsp;&emsp; Input parameter : \n##### &emsp;&emsp;&emsp;&emsp;&emsp; **python train.py -m HeGAN -d LD**\n##### &emsp;&emsp;&emsp;&emsp; If you want to train your own dataset, create the file (./dataset/LD/edge.txt) and the format is as follows:\n\n![edge.png](https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/edge.png)\n\n\n##### &emsp;&emsp; &emsp;&emsp;And the input graph is directed and the undirected needs to be transformed into directed graph.\n#### &emsp;&emsp; * Modle Setup\n##### &emsp;&emsp;&emsp;&emsp; The model parameter could be modified in the file ( ./src/config.ini ). \n##### &emsp;&emsp;&emsp;&emsp; Common parameter :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * dim : dimension of output\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * epoch : the number of iterations\n##### &emsp;&emsp;&emsp;&emsp; Output :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; The results are stored in the file (./output/embedding/HeGAN).  \n\n* ### 3. lncRNA-disease_association_vector\n#####  &emsp; &emsp; Five methods are implemented to gain the lncRNA-disease vectors.<br>&emsp; &emsp; For the LDVCHN method, each node was assigned to a corresponding weight according to the structural information of the heterogeneous network. \n\n* ### 4. Classifier\n#####  &emsp; &emsp; The ROC curve and AUC value of the model with five different classifiers are compared based on vector. And the Xgboost classifier is adopted to predict potential lncRNA-disease associations.<br>&emsp; &emsp; The LDVCHN method is chosen to calculate the vector based on the AUC value.<br>&emsp; &emsp; The AUC values of the HEGANLDA model were compared when \u03bb is set to 32, 64, and 128 through 10-fold cross validation. And the value of \u03bb is set to 128.\n\n* ### 5.Predict\n#####  &emsp; &emsp; Firstly, the vectors of all unknown lncRNA-disease associations are calculated. Then, XGBoost classifier is used to predict the possibility of association between node pairs\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "&emsp;&emsp;&emsp;&emsp;&emsp; The results are stored in the file (./output/embedding/HeGAN).",
        "parent_header": [
          "HEGANLDA",
          "Get started",
          "2.Nodevector",
          "&emsp;&emsp; * Modle Setup"
        ],
        "type": "Text_excerpt",
        "value": "* ### 3. lncRNA-disease_association_vector\n#####  &emsp; &emsp; Five methods are implemented to gain the lncRNA-disease vectors.<br>&emsp; &emsp; For the LDVCHN method, each node was assigned to a corresponding weight according to the structural information of the heterogeneous network. \n\n* ### 4. Classifier\n#####  &emsp; &emsp; The ROC curve and AUC value of the model with five different classifiers are compared based on vector. And the Xgboost classifier is adopted to predict potential lncRNA-disease associations.<br>&emsp; &emsp; The LDVCHN method is chosen to calculate the vector based on the AUC value.<br>&emsp; &emsp; The AUC values of the HEGANLDA model were compared when \u03bb is set to 32, 64, and 128 through 10-fold cross validation. And the value of \u03bb is set to 128.\n\n* ### 5.Predict\n#####  &emsp; &emsp; Firstly, the vectors of all unknown lncRNA-disease associations are calculated. Then, XGBoost classifier is used to predict the possibility of association between node pairs\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "&emsp; &emsp; The ROC curve and AUC value of the model with five different classifiers are compared based on vector. And the Xgboost classifier is adopted to predict potential lncRNA-disease associations.<br>&emsp; &emsp; The LDVCHN method is chosen to calculate the vector based on the AUC value.<br>&emsp; &emsp; The AUC values of the HEGANLDA model were compared when \u03bb is set to 32, 64, and 128 through 10-fold cross validation. And the value of \u03bb is set to 128.",
        "parent_header": [
          "HEGANLDA",
          "Get started",
          "4. Classifier"
        ],
        "type": "Text_excerpt",
        "value": "* ### 5.Predict\n#####  &emsp; &emsp; Firstly, the vectors of all unknown lncRNA-disease associations are calculated. Then, XGBoost classifier is used to predict the possibility of association between node pairs\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HEGANLDA/HEGANLDA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 BUPTDM\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/2.nodevector/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HEGANLDA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "HEGANLDA"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 291475,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:10:28",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "&emsp; * TensorFlow version &gt;= 1.14",
        "parent_header": [
          "HEGANLDA",
          "Get started",
          "Evironment Setting"
        ],
        "type": "Text_excerpt",
        "value": "* ### 1.Datasets\n##### &emsp;&emsp; HEGANLDA collected six networks data (lncRNA-disease, lncRNA-miRNA, disease-miRNA, lncRNA-lncRNA, disease-disease, and miRNA-miRNA) to construct a lncRNA-miRNA-disease heterogeneous network. \n\n* ### 2.Nodevector\n#####  &emsp; &emsp; HeGAN (B. Hu et al., 2019) algorithm is employed to map all the nodes in the lncRNA-miRNA-disease heterogeneous network into low-dimensional vectors.\n#### &emsp;&emsp; * Config/Usage\n##### &emsp;&emsp;&emsp;&emsp; Input parameter : \n##### &emsp;&emsp;&emsp;&emsp;&emsp; **python train.py -m HeGAN -d LD**\n##### &emsp;&emsp;&emsp;&emsp; If you want to train your own dataset, create the file (./dataset/LD/edge.txt) and the format is as follows:\n\n![edge.png](https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/edge.png)\n\n\n##### &emsp;&emsp; &emsp;&emsp;And the input graph is directed and the undirected needs to be transformed into directed graph.\n#### &emsp;&emsp; * Modle Setup\n##### &emsp;&emsp;&emsp;&emsp; The model parameter could be modified in the file ( ./src/config.ini ). \n##### &emsp;&emsp;&emsp;&emsp; Common parameter :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * dim : dimension of output\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * epoch : the number of iterations\n##### &emsp;&emsp;&emsp;&emsp; Output :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; The results are stored in the file (./output/embedding/HeGAN).  \n\n* ### 3. lncRNA-disease_association_vector\n#####  &emsp; &emsp; Five methods are implemented to gain the lncRNA-disease vectors.<br>&emsp; &emsp; For the LDVCHN method, each node was assigned to a corresponding weight according to the structural information of the heterogeneous network. \n\n* ### 4. Classifier\n#####  &emsp; &emsp; The ROC curve and AUC value of the model with five different classifiers are compared based on vector. And the Xgboost classifier is adopted to predict potential lncRNA-disease associations.<br>&emsp; &emsp; The LDVCHN method is chosen to calculate the vector based on the AUC value.<br>&emsp; &emsp; The AUC values of the HEGANLDA model were compared when \u03bb is set to 32, 64, and 128 through 10-fold cross validation. And the value of \u03bb is set to 128.\n\n* ### 5.Predict\n#####  &emsp; &emsp; Firstly, the vectors of all unknown lncRNA-disease associations are calculated. Then, XGBoost classifier is used to predict the possibility of association between node pairs\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1.Datasets",
        "parent_header": [
          "HEGANLDA",
          "Get started"
        ],
        "type": "Text_excerpt",
        "value": "# HEGANLDA\n\n#### Source code for paper \" HEGANLDA\uff1aa computational model for potential lncRNA-disease association prediction based on multiple heterogeneous networks\u201d.\n\n## Get started\n\n#### Evironment Setting\n##### &emsp; * Python version >= 3.6\n##### &emsp; * PyTorch version >= 1.4.0\n##### &emsp; * TensorFlow version >= 1.14\n\n* ### 1.Datasets"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "&emsp;&emsp; HEGANLDA collected six networks data (lncRNA-disease, lncRNA-miRNA, disease-miRNA, lncRNA-lncRNA, disease-disease, and miRNA-miRNA) to construct a lncRNA-miRNA-disease heterogeneous network.",
        "parent_header": [
          "HEGANLDA",
          "Get started",
          "1.Datasets"
        ],
        "type": "Text_excerpt",
        "value": "* ### 2.Nodevector\n#####  &emsp; &emsp; HeGAN (B. Hu et al., 2019) algorithm is employed to map all the nodes in the lncRNA-miRNA-disease heterogeneous network into low-dimensional vectors.\n#### &emsp;&emsp; * Config/Usage\n##### &emsp;&emsp;&emsp;&emsp; Input parameter : \n##### &emsp;&emsp;&emsp;&emsp;&emsp; **python train.py -m HeGAN -d LD**\n##### &emsp;&emsp;&emsp;&emsp; If you want to train your own dataset, create the file (./dataset/LD/edge.txt) and the format is as follows:\n\n![edge.png](https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/edge.png)\n\n\n##### &emsp;&emsp; &emsp;&emsp;And the input graph is directed and the undirected needs to be transformed into directed graph.\n#### &emsp;&emsp; * Modle Setup\n##### &emsp;&emsp;&emsp;&emsp; The model parameter could be modified in the file ( ./src/config.ini ). \n##### &emsp;&emsp;&emsp;&emsp; Common parameter :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * dim : dimension of output\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * epoch : the number of iterations\n##### &emsp;&emsp;&emsp;&emsp; Output :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; The results are stored in the file (./output/embedding/HeGAN).  \n\n* ### 3. lncRNA-disease_association_vector\n#####  &emsp; &emsp; Five methods are implemented to gain the lncRNA-disease vectors.<br>&emsp; &emsp; For the LDVCHN method, each node was assigned to a corresponding weight according to the structural information of the heterogeneous network. \n\n* ### 4. Classifier\n#####  &emsp; &emsp; The ROC curve and AUC value of the model with five different classifiers are compared based on vector. And the Xgboost classifier is adopted to predict potential lncRNA-disease associations.<br>&emsp; &emsp; The LDVCHN method is chosen to calculate the vector based on the AUC value.<br>&emsp; &emsp; The AUC values of the HEGANLDA model were compared when \u03bb is set to 32, 64, and 128 through 10-fold cross validation. And the value of \u03bb is set to 128.\n\n* ### 5.Predict\n#####  &emsp; &emsp; Firstly, the vectors of all unknown lncRNA-disease associations are calculated. Then, XGBoost classifier is used to predict the possibility of association between node pairs\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2.Nodevector",
        "parent_header": [
          "HEGANLDA",
          "Get started"
        ],
        "type": "Text_excerpt",
        "value": "# HEGANLDA\n\n#### Source code for paper \" HEGANLDA\uff1aa computational model for potential lncRNA-disease association prediction based on multiple heterogeneous networks\u201d.\n\n## Get started\n\n#### Evironment Setting\n##### &emsp; * Python version >= 3.6\n##### &emsp; * PyTorch version >= 1.4.0\n##### &emsp; * TensorFlow version >= 1.14\n\n* ### 1.Datasets\n##### &emsp;&emsp; HEGANLDA collected six networks data (lncRNA-disease, lncRNA-miRNA, disease-miRNA, lncRNA-lncRNA, disease-disease, and miRNA-miRNA) to construct a lncRNA-miRNA-disease heterogeneous network. \n\n* ### 2.Nodevector"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "&emsp;&emsp;&emsp;&emsp; If you want to train your own dataset, create the file (./dataset/LD/edge.txt) and the format is as follows:",
        "parent_header": [
          "HEGANLDA",
          "Get started",
          "2.Nodevector",
          "&emsp;&emsp; * Config/Usage"
        ],
        "type": "Text_excerpt",
        "value": "![edge.png](https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/edge.png)\n\n"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "&emsp;&emsp;&emsp;&emsp;&emsp; The results are stored in the file (./output/embedding/HeGAN).",
        "parent_header": [
          "HEGANLDA",
          "Get started",
          "2.Nodevector",
          "&emsp;&emsp; * Modle Setup"
        ],
        "type": "Text_excerpt",
        "value": "* ### 3. lncRNA-disease_association_vector\n#####  &emsp; &emsp; Five methods are implemented to gain the lncRNA-disease vectors.<br>&emsp; &emsp; For the LDVCHN method, each node was assigned to a corresponding weight according to the structural information of the heterogeneous network. \n\n* ### 4. Classifier\n#####  &emsp; &emsp; The ROC curve and AUC value of the model with five different classifiers are compared based on vector. And the Xgboost classifier is adopted to predict potential lncRNA-disease associations.<br>&emsp; &emsp; The LDVCHN method is chosen to calculate the vector based on the AUC value.<br>&emsp; &emsp; The AUC values of the HEGANLDA model were compared when \u03bb is set to 32, 64, and 128 through 10-fold cross validation. And the value of \u03bb is set to 128.\n\n* ### 5.Predict\n#####  &emsp; &emsp; Firstly, the vectors of all unknown lncRNA-disease associations are calculated. Then, XGBoost classifier is used to predict the possibility of association between node pairs\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. lncRNA-disease_association_vector",
        "parent_header": [
          "HEGANLDA",
          "Get started"
        ],
        "type": "Text_excerpt",
        "value": "# HEGANLDA\n\n#### Source code for paper \" HEGANLDA\uff1aa computational model for potential lncRNA-disease association prediction based on multiple heterogeneous networks\u201d.\n\n## Get started\n\n#### Evironment Setting\n##### &emsp; * Python version >= 3.6\n##### &emsp; * PyTorch version >= 1.4.0\n##### &emsp; * TensorFlow version >= 1.14\n\n* ### 1.Datasets\n##### &emsp;&emsp; HEGANLDA collected six networks data (lncRNA-disease, lncRNA-miRNA, disease-miRNA, lncRNA-lncRNA, disease-disease, and miRNA-miRNA) to construct a lncRNA-miRNA-disease heterogeneous network. \n\n* ### 2.Nodevector\n#####  &emsp; &emsp; HeGAN (B. Hu et al., 2019) algorithm is employed to map all the nodes in the lncRNA-miRNA-disease heterogeneous network into low-dimensional vectors.\n#### &emsp;&emsp; * Config/Usage\n##### &emsp;&emsp;&emsp;&emsp; Input parameter : \n##### &emsp;&emsp;&emsp;&emsp;&emsp; **python train.py -m HeGAN -d LD**\n##### &emsp;&emsp;&emsp;&emsp; If you want to train your own dataset, create the file (./dataset/LD/edge.txt) and the format is as follows:\n\n![edge.png](https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/edge.png)\n\n\n##### &emsp;&emsp; &emsp;&emsp;And the input graph is directed and the undirected needs to be transformed into directed graph.\n#### &emsp;&emsp; * Modle Setup\n##### &emsp;&emsp;&emsp;&emsp; The model parameter could be modified in the file ( ./src/config.ini ). \n##### &emsp;&emsp;&emsp;&emsp; Common parameter :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * dim : dimension of output\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * epoch : the number of iterations\n##### &emsp;&emsp;&emsp;&emsp; Output :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; The results are stored in the file (./output/embedding/HeGAN).  \n\n* ### 3. lncRNA-disease_association_vector"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "&emsp; &emsp; Five methods are implemented to gain the lncRNA-disease vectors.<br>&emsp; &emsp; For the LDVCHN method, each node was assigned to a corresponding weight according to the structural information of the heterogeneous network.",
        "parent_header": [
          "HEGANLDA",
          "Get started",
          "3. lncRNA-disease_association_vector"
        ],
        "type": "Text_excerpt",
        "value": "* ### 4. Classifier\n#####  &emsp; &emsp; The ROC curve and AUC value of the model with five different classifiers are compared based on vector. And the Xgboost classifier is adopted to predict potential lncRNA-disease associations.<br>&emsp; &emsp; The LDVCHN method is chosen to calculate the vector based on the AUC value.<br>&emsp; &emsp; The AUC values of the HEGANLDA model were compared when \u03bb is set to 32, 64, and 128 through 10-fold cross validation. And the value of \u03bb is set to 128.\n\n* ### 5.Predict\n#####  &emsp; &emsp; Firstly, the vectors of all unknown lncRNA-disease associations are calculated. Then, XGBoost classifier is used to predict the possibility of association between node pairs\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Classifier",
        "parent_header": [
          "HEGANLDA",
          "Get started"
        ],
        "type": "Text_excerpt",
        "value": "# HEGANLDA\n\n#### Source code for paper \" HEGANLDA\uff1aa computational model for potential lncRNA-disease association prediction based on multiple heterogeneous networks\u201d.\n\n## Get started\n\n#### Evironment Setting\n##### &emsp; * Python version >= 3.6\n##### &emsp; * PyTorch version >= 1.4.0\n##### &emsp; * TensorFlow version >= 1.14\n\n* ### 1.Datasets\n##### &emsp;&emsp; HEGANLDA collected six networks data (lncRNA-disease, lncRNA-miRNA, disease-miRNA, lncRNA-lncRNA, disease-disease, and miRNA-miRNA) to construct a lncRNA-miRNA-disease heterogeneous network. \n\n* ### 2.Nodevector\n#####  &emsp; &emsp; HeGAN (B. Hu et al., 2019) algorithm is employed to map all the nodes in the lncRNA-miRNA-disease heterogeneous network into low-dimensional vectors.\n#### &emsp;&emsp; * Config/Usage\n##### &emsp;&emsp;&emsp;&emsp; Input parameter : \n##### &emsp;&emsp;&emsp;&emsp;&emsp; **python train.py -m HeGAN -d LD**\n##### &emsp;&emsp;&emsp;&emsp; If you want to train your own dataset, create the file (./dataset/LD/edge.txt) and the format is as follows:\n\n![edge.png](https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/edge.png)\n\n\n##### &emsp;&emsp; &emsp;&emsp;And the input graph is directed and the undirected needs to be transformed into directed graph.\n#### &emsp;&emsp; * Modle Setup\n##### &emsp;&emsp;&emsp;&emsp; The model parameter could be modified in the file ( ./src/config.ini ). \n##### &emsp;&emsp;&emsp;&emsp; Common parameter :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * dim : dimension of output\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * epoch : the number of iterations\n##### &emsp;&emsp;&emsp;&emsp; Output :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; The results are stored in the file (./output/embedding/HeGAN).  \n\n* ### 3. lncRNA-disease_association_vector\n#####  &emsp; &emsp; Five methods are implemented to gain the lncRNA-disease vectors.<br>&emsp; &emsp; For the LDVCHN method, each node was assigned to a corresponding weight according to the structural information of the heterogeneous network. \n\n* ### 4. Classifier"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5.Predict",
        "parent_header": [
          "HEGANLDA",
          "Get started"
        ],
        "type": "Text_excerpt",
        "value": "# HEGANLDA\n\n#### Source code for paper \" HEGANLDA\uff1aa computational model for potential lncRNA-disease association prediction based on multiple heterogeneous networks\u201d.\n\n## Get started\n\n#### Evironment Setting\n##### &emsp; * Python version >= 3.6\n##### &emsp; * PyTorch version >= 1.4.0\n##### &emsp; * TensorFlow version >= 1.14\n\n* ### 1.Datasets\n##### &emsp;&emsp; HEGANLDA collected six networks data (lncRNA-disease, lncRNA-miRNA, disease-miRNA, lncRNA-lncRNA, disease-disease, and miRNA-miRNA) to construct a lncRNA-miRNA-disease heterogeneous network. \n\n* ### 2.Nodevector\n#####  &emsp; &emsp; HeGAN (B. Hu et al., 2019) algorithm is employed to map all the nodes in the lncRNA-miRNA-disease heterogeneous network into low-dimensional vectors.\n#### &emsp;&emsp; * Config/Usage\n##### &emsp;&emsp;&emsp;&emsp; Input parameter : \n##### &emsp;&emsp;&emsp;&emsp;&emsp; **python train.py -m HeGAN -d LD**\n##### &emsp;&emsp;&emsp;&emsp; If you want to train your own dataset, create the file (./dataset/LD/edge.txt) and the format is as follows:\n\n![edge.png](https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/edge.png)\n\n\n##### &emsp;&emsp; &emsp;&emsp;And the input graph is directed and the undirected needs to be transformed into directed graph.\n#### &emsp;&emsp; * Modle Setup\n##### &emsp;&emsp;&emsp;&emsp; The model parameter could be modified in the file ( ./src/config.ini ). \n##### &emsp;&emsp;&emsp;&emsp; Common parameter :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * dim : dimension of output\n##### &emsp;&emsp;&emsp;&emsp;&emsp; * epoch : the number of iterations\n##### &emsp;&emsp;&emsp;&emsp; Output :\n##### &emsp;&emsp;&emsp;&emsp;&emsp; The results are stored in the file (./output/embedding/HeGAN).  \n\n* ### 3. lncRNA-disease_association_vector\n#####  &emsp; &emsp; Five methods are implemented to gain the lncRNA-disease vectors.<br>&emsp; &emsp; For the LDVCHN method, each node was assigned to a corresponding weight according to the structural information of the heterogeneous network. \n\n* ### 4. Classifier\n#####  &emsp; &emsp; The ROC curve and AUC value of the model with five different classifiers are compared based on vector. And the Xgboost classifier is adopted to predict potential lncRNA-disease associations.<br>&emsp; &emsp; The LDVCHN method is chosen to calculate the vector based on the AUC value.<br>&emsp; &emsp; The AUC values of the HEGANLDA model were compared when \u03bb is set to 32, 64, and 128 through 10-fold cross validation. And the value of \u03bb is set to 128.\n\n* ### 5.Predict"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "&emsp; &emsp; Firstly, the vectors of all unknown lncRNA-disease associations are calculated. Then, XGBoost classifier is used to predict the possibility of association between node pairs",
        "parent_header": [
          "HEGANLDA",
          "Get started",
          "5.Predict"
        ],
        "type": "Text_excerpt",
        "value": "\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HEGANLDA/HEGANLDA/main/README.md",
      "technique": "header_analysis"
    }
  ]
}