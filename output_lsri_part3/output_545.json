{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/LewisResearchGroup/ms-mint"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-13T22:57:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-30T12:43:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python library for large-scale targeted metabolomics."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9981150244078572,
      "result": {
        "original_header": "ms-mint: A Python library for targeted metabolomics",
        "type": "Text_excerpt",
        "value": "The `ms-mint` library is a tool designed to assist with targeted metabolomics studies, which involves the systematic analysis of small chemical compounds called metabolites that are present in biological samples. These metabolites can provide valuable information about the state of an organism, including indicators of disease or other physiological changes. In order to perform a targeted metabolomics study, researchers typically use liquid chromatography-mass spectrometry (LCMS) to identify and quantify specific metabolites of interest. \nThe `ms-mint` library includes a range of functions for processing LCMS data from targeted metabolomics experiments, and it is particularly well-suited for handling large amounts of data (10,000+ files). To use `ms-mint`, you provide it with a target list of the specific metabolites you want to analyze, as well as the names of the mass spectrometry files containing the data. ms-mint then extracts peak intensities and other relevant information from the data, allowing you to gain insights into the concentrations and profiles of the metabolites in your samples. This information can be used to identify biomarkers, which are indicators of disease or other physiological changes that can be used in the development of diagnostic tests or other medical applications.\n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8794751507663724,
      "result": {
        "original_header": "News",
        "type": "Text_excerpt",
        "value": "Starting with version 1.0.0, we have updated the installation setup to use pyproject.toml. Additionally, each release of the repository will now be assigned a DOI to facilitate citation of the software.\n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8982938252516923,
      "result": {
        "original_header": "ms-mint application with graphical user iterface (GUI)",
        "type": "Text_excerpt",
        "value": "MINT has been split into the Python library and the app. This repository contains the Python library. For the app follow [this link](https://github.com/LewisResearchGroup/ms-mint-app).\n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9365955919615649,
      "result": {
        "original_header": "Contributions",
        "type": "Text_excerpt",
        "value": "All contributions, bug reports, code reviews, bug fixes, documentation improvements, enhancements, and ideas are welcome.\nBefore you modify the code please reach out to us using the [issues](https://github.com/LewisResearchGroup/ms-mint/issues) page.\n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9493155354906617,
      "result": {
        "original_header": "Code standards",
        "type": "Text_excerpt",
        "value": "The project follows PEP8 standard and uses Black and Flake8 to ensure a consistent code format throughout the project.\n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9680283659639294,
      "result": {
        "original_header": "Load files",
        "type": "Text_excerpt",
        "value": "Or you can use the `Mint.load_files()` method which supports a string with regular expressions. The files in the previous function you could load with: \nThis has the advantage that you can wildcards and you can chain your commands. For examle like this: \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.832537349016685,
      "result": {
        "original_header": "Load target list",
        "type": "Text_excerpt",
        "value": "You can also prepare a `pandas.DataFrame` with the column names as shown above and assign it directly to the `Mint.targets` attribute: \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9185793891175029,
      "result": {
        "original_header": "Processing a large number of files",
        "type": "Text_excerpt",
        "value": "If you want to process a large number of files, you should provide an output filename. Then the results are written directly to that file instead of being stored in memory.  \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9795347331611393,
      "result": {
        "original_header": "Optimize retention times",
        "type": "Text_excerpt",
        "value": "If you only have retention time (Rt) values for your targets, or if the Rt values you have are not accurate, you can use the `mint.opt.rt_min_max()` function from the ms-mint library to generate better values for the `rt_min` and `rt_max` parameters. These parameters define the range of retention times within which `ms-mint` will search for peaks corresponding to your targets. By optimizing these values, you can improve the accuracy and reliability of your results. \nTo use the `mint.opt.rt_min_max()` function, you will need to provide it with a list of retention times for your targets and the names of the mass spectrometry files containing your data. The function will then search through the data to find the optimal `rt_min` and `rt_max` values, which you can use to refine your analysis. You can then use these optimized values in conjunction with the other functions and methods of the `Mint` class to process and analyze your data. \nThe `mint.opt.rt_min_max()` function in the ms-mint library allows you to optimize the `rt_min` and `rt_max` values for your analysis. These values define the range of retention times within which ms-mint will search for peaks corresponding to your targets. By optimizing these values, you can improve the accuracy and reliability of your results. \nIf you do not provide a list of peak_labels to the `mint.opt.rt_min_max()` function, it will run the optimization for all metabolites. Similarly, if you do not provide a list of filenames for the fn parameter, the function will use all of the files currently loaded into mint.ms_files. It is generally recommended to use a maximum of 20-40 files for the optimization process. If you have run a set of standards along with your samples (which is highly recommended), you can use the standard files to perform the optimization. \nAfter running the optimization, it is a good idea to perform a manual fine-tuning of the `rt_min` and `rt_max` values, especially for complicated peaks (peaks with multiple components, noisy peaks, etc.). You can use the `mint.plot.peak_shapes()` function to visualize the peak shapes and identify any areas that may require further attention.\n    \n![](https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/img/optimize-rt_min_max.png) \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9249931166539748,
      "result": {
        "original_header": "Plotting and data exploration",
        "type": "Text_excerpt",
        "value": "The `Mint` class has a few convenient methods to visualize and explore the processed data. The results can be viewed directly in JupyterLab or stored to files using `matplotlib` and `seaborn` syntax. The figures are matplotlib objects and can be easily customised. \n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9782662211601161,
      "result": {
        "original_header": "Hierarchical clustering",
        "type": "Text_excerpt",
        "value": "Mint ca be used to cluster the extracted data. An agglomerative hierarchical clustering is a bottom-up clustering technique where each data point starts as its own cluster and then are merged with other clusters in a hierarchical manner based on their proximity or similarity until a single cluster is formed or a specified stopping criteria is met. The proximity is usually determined by a distance metric, such as Euclidean distance, and the similarity is usually determined by a linkage function, such as ward linkage or complete linkage. The result is a tree-like representation called a dendrogram, which can be used to determine the number of clusters and the cluster assignments of the data points. \nMint uses `scipy.spartial.distance` to generate the distance matrix and `scipy.cluster.hierarchy.linkage` to perform the clustering. By default a 'cosine' metric is used to calculate the distances. Distances between row vectors and column vectors respectively can also be done using different metrics for each set. To do so a tuple with the names of the metrics has to be provided: `mint.hierarchical_clustering(metric=(\"euclidean\", \"cosine\")`. \nBefore clustering the data can be transformed and scaled. By default `log2p1(x) = log_2(x+1)` is used to transform the data and the standard scaler (z-scores) is used to normalize the variables for each target. \n    mint.plot.hierarchical_clustering(\n        data=None,  # Optional, dataframe. if None, mint.crosstab(targets_var) is executed to generate the data.\n        peak_labels=None,  # List of targets to include\n        ms_files=None,  # List of filenames to include\n        title=None,  # Title to add to the figure\n        figsize=(8, 8),  # Figure size\n        targets_var=\"peak_max\",  # Data variable to plot if data is None.\n        vmin=-3,  # Minimum value for color bar\n        vmax=3,  # Maximum value for color bar\n        xmaxticks=None,  # Maximum number of x-ticks to display\n        ymaxticks=None,  # Maximum number of y-ticks to display\n        transform_func=\"log2p1\",  # Transformation to use before scaling and clustering\n        scaler_ms_file=None,  # Experimental\n        scaler_peak_label=\"standard\",  # Scaler to use to normalize the data before clustering\n        metric=\"cosine\",  # Metric either a string or a 2-tuple of strings\n        transform_filenames_func=\"basename\",  # Transformation function to shorten filenames\n        transposed=False,  # Transpose the plot     \n        top_height=2,  # Height of the top-dendrogram\n        left_width=2,  # Width of the left-dendrogram\n        cmap=None  # Name of a matplotlib color map                \n    ) \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9927777838101448,
      "result": {
        "original_header": "Principal Components Analysis",
        "type": "Text_excerpt",
        "value": "Principal Component Analysis (PCA) is a widely used statistical technique for dimensionality reduction. It transforms the original high-dimensional data into a new set of linearly uncorrelated variables, called Principal Components (PCs), that capture the maximum variance in the data. The first PC accounts for the largest variance in the data, the second PC for the second largest variance, and so on. PCA is commonly used for data visualization, data compression, and noise reduction. By reducing the number of dimensions in the data, PCA allows us to more easily identify patterns and relationships in the data. \nBefore clustering the data can be transformed and scaled. By default log2p1(x) = log_2(x+1) is used to transform the data and the standard scaler (z-scores) is used to normalize the variables for each target. \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "ms-mint: A Python library for targeted metabolomics"
        ],
        "type": "Text_excerpt",
        "value": "The code documentation can be accessed [here](https://lewisresearchgroup.github.io/ms-mint/readme.html).\n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/LewisResearchGroup/ms-mint/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/Example-run-mint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/Example-run-mint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/Example-plotting.ipynb"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/Example-plotting.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/Chromatogram.ipynb"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/Chromatogram.ipynb",
      "technique": "file_exploration"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "What is a target list",
        "parent_header": [
          "ms-mint: A Python library for targeted metabolomics",
          "FAQ"
        ],
        "type": "Text_excerpt",
        "value": "A target list is a pandas dataframe with specific columns. \n\n-   **peak_label**: string, Label of the peak (must be unique).\n-   **mz_mean**: numeric value, theoretical m/z value of the target ion to extract.\n-   **mz_width**: numeric value, width of the peak in \\[ppm\\]. It is used to calculate the width of the mass window  according to the formula: `\u0394m = m/z * 1e-6 * mz_width`.\n-   **rt**: numeric value, (optional), expected time of the peak. This value is not used during processing, but it can inform the peak optimization procedure.\n-   **rt_min**: numeric value, starting time for peak integration.\n-   **rt_max**: numeric value, ending time for peak integration.\n-   **rt_unit**: one of `s` or `min` for seconds or minutes respectively.\n-   **intensity_threshold**: numeric value (>=0), minimum intensity value to include, serves as a noise filter. We recommend setting this to 0. \n-   **target_filename**: string (optional), name of the target list file. It is not used for processing, just to keep track of what files were used.\n\nThe target list can be stored as csv or Excel file. \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "What input files can be used",
        "parent_header": [
          "ms-mint: A Python library for targeted metabolomics",
          "FAQ"
        ],
        "type": "Text_excerpt",
        "value": "`ms_mint` can be used with `mzXML`, `mzML`, `mzMLb` and experimental formats in `.feather` and `.parquet` format.\n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameters from target list",
        "parent_header": [
          "ms-mint: A Python library for targeted metabolomics",
          "FAQ",
          "Which properties does ms-mint extract"
        ],
        "type": "Text_excerpt",
        "value": "-   **ms_file**: Filename of MS-file\n-   **peak_label**: From target list\n-   **mz_mean**: From target list\n-   **mz_width**: From target list\n-   **rt**: From target list\n-   **rt_min**: From target list\n-   **rt_max**: From target list\n-   **rt_unit**: Unit of retention times, default is s (seconds), from [s, min]\n-   **intensity_threshold**: From target list\n-   **target_filename**: From target list\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Results columns",
        "parent_header": [
          "ms-mint: A Python library for targeted metabolomics",
          "FAQ",
          "Which properties does ms-mint extract"
        ],
        "type": "Text_excerpt",
        "value": "-   **peak_area**: The sum of all intensities in the extraction window\n-   **peak_area_top3**: The average of the 3 largest intensities in the extraction window\n-   **peak_n_datapoints**: Number of datapoints\n-   **peak_max**: Intensity of peak maximum\n-   **peak_rt_of_max**: Retentiontime of peak maximum\n-   **peak_min**: Minimum peak intensity (offset)\n-   **peak_median**: Median of all intensities \n-   **peak_mean**: Average of all intensities\n-   **peak_delta_int**: Difference between first and last intensity\n-   **peak_shape_rt**: Array of retention times\n-   **peak_shape_int**: Array of projected intensities\n-   **peak_mass_diff_25pc**: 25th percentile between *mz_mean* minus m/z values of all datapoints\n-   **peak_mass_diff_50pc**: Median between *mz_mean* minus m/z values of all datapoints\n-   **peak_mass_diff_75pc**: 75th percentile between *mz_mean* minus m/z values of all datapoints\n-   **peak_score**: Score of peak quality (experimental)\n-   **total_intensity**: Sum of all intensities in the file\n-   **ms_path**: Path of the MS-file\n-   **ms_file_size**: Size of the MS-file in MB\n---\n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LewisResearchGroup/ms-mint"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ms-mint: A Python library for targeted metabolomics"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/doi/10.5281/zenodo.12733875"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/images/coverage.svg"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/img/peak-shapes-before-opt.png"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/img/optimize-rt_min_max.png"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/img/peak-shapes-after-opt.png"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/img/peak-shapes-after-opt.png"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/img/hierarchical_clustering.png"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/img/pca-pairplot.png"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ms-mint: A Python library for targeted metabolomics"
        ],
        "type": "Text_excerpt",
        "value": "    pip install ms-mint\n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9049529825811518,
      "result": {
        "original_header": "News",
        "type": "Text_excerpt",
        "value": "Starting with version 1.0.0, we have updated the installation setup to use pyproject.toml. Additionally, each release of the repository will now be assigned a DOI to facilitate citation of the software.\n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8300711590070285,
      "result": {
        "original_header": "Contributions",
        "type": "Text_excerpt",
        "value": "All contributions, bug reports, code reviews, bug fixes, documentation improvements, enhancements, and ideas are welcome.\nBefore you modify the code please reach out to us using the [issues](https://github.com/LewisResearchGroup/ms-mint/issues) page.\n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9133622642370335,
      "result": {
        "original_header": "Load files",
        "type": "Text_excerpt",
        "value": "This has the advantage that you can wildcards and you can chain your commands. For examle like this: \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8830849491823431,
      "result": {
        "original_header": "Load files",
        "type": "Text_excerpt",
        "value": "    mint.load_files('./input/*.*').load_targets('targets.csv').run()\n     \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9055763914661012,
      "result": {
        "original_header": "Processing a large number of files",
        "type": "Text_excerpt",
        "value": "    mint.run(fn='my-mint-output.csv')\n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8873283965687877,
      "result": {
        "original_header": "Optimize retention times",
        "type": "Text_excerpt",
        "value": "    mint.opt.rt_min_max(\n        fns=[...]\n        peak_labels=['Xanthine', 'Succinate', 'Citrulline'],\n        plot=True, rel_height=0.7, sigma=50, col_wrap=1, aspect=3,\n        height=4\n    ) \n    mint.run()\n    mint.plot.peak_shapes(col_wrap=3) \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8638316220537748,
      "result": {
        "original_header": "Plot peak shapes",
        "type": "Text_excerpt",
        "value": "    mint.plot.peak_shapes(col_wrap = 3) \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8598198108452139,
      "result": {
        "original_header": "Principal Components Analysis",
        "type": "Text_excerpt",
        "value": "    mint.pca.run(n_components=5)\n    \nAfter running the PCA the results can be plotted with:    \n    \n    mint.pca.plot.pairplot(n_components=5, interactive=False)\n    \n![](https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/notebooks/img/pca-pairplot.png)\n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "extracts-data, interactive, mass-spectrometry, metabolomics, mint, python, visualization"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                       Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2022] [Lewis Research Group]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ms-mint"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "LewisResearchGroup"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 16831776,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 177757,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 543,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2024-07-29T11:37:18Z",
        "date_published": "2024-07-29T11:38:49Z",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v1.0.0",
        "release_id": 167633403,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/167633403",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/167633403",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2023-08-22T17:34:29Z",
        "date_published": "2023-08-22T17:40:16Z",
        "description": "- fixes a bug with `peak_rt_of_max`\r\n- adds optional `ax` argument for `MintPlotter.chromatogram`\r\n",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.3.3",
        "name": "v0.3.3",
        "release_id": 118249274,
        "tag": "v0.3.3",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/118249274",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/118249274",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2023-08-18T18:58:02Z",
        "date_published": "2023-08-18T21:23:26Z",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.3.2",
        "name": "v0.3.2",
        "release_id": 117820675,
        "tag": "v0.3.2",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/117820675",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/117820675",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2023-07-14T20:57:31Z",
        "date_published": "2023-07-14T21:04:25Z",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.3.1",
        "name": "v0.3.1",
        "release_id": 112314225,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/112314225",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/112314225",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2023-07-12T15:44:18Z",
        "date_published": "2023-07-12T16:23:22Z",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.3.0",
        "name": "v0.3.0",
        "release_id": 111981382,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/111981382",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/111981382",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2023-07-11T19:19:20Z",
        "date_published": "2023-07-11T19:38:09Z",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.2.5",
        "name": "v0.2.5",
        "release_id": 111853471,
        "tag": "v0.2.5",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/111853471",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/111853471",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2023-05-09T16:35:26Z",
        "date_published": "2023-05-09T16:41:42Z",
        "description": "Removes debugging log messages.",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.2.4",
        "name": "v0.2.4",
        "release_id": 102376959,
        "tag": "v0.2.4",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/102376959",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/102376959",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2023-04-26T22:56:04Z",
        "date_published": "2023-04-27T15:29:32Z",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.2.3",
        "name": "v0.2.3",
        "release_id": 101142606,
        "tag": "v0.2.3",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/101142606",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/101142606",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2023-03-09T21:53:52Z",
        "date_published": "2023-03-09T21:56:51Z",
        "description": "- connected legend of `mint.pca.plot.pairplot(interactive=True)`",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.2.2",
        "name": "v0.2.2",
        "release_id": 95137324,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/95137324",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/95137324",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2023-03-01T23:44:38Z",
        "date_published": "2023-03-02T00:54:06Z",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.2.1",
        "name": "v0.2.1",
        "release_id": 94165556,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/94165556",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/94165556",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2023-02-09T21:57:15Z",
        "date_published": "2023-02-09T22:52:22Z",
        "description": "peak_area_top3 is not equivalent to El-Maven peakAreaTop.",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 91959506,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/91959506",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/91959506",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2022-10-14T17:45:35Z",
        "date_published": "2022-10-15T20:15:18Z",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.1.8.3",
        "release_id": 79997871,
        "tag": "v0.1.8.3",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.1.8.3",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/79997871",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/79997871",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.1.8.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2022-06-09T20:49:29Z",
        "date_published": "2022-06-09T21:31:39Z",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.1.7",
        "name": "v0.1.7",
        "release_id": 69103880,
        "tag": "v0.1.7",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/69103880",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/69103880",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2022-05-26T20:18:37Z",
        "date_published": "2022-05-26T20:24:06Z",
        "description": "Refactored a lot. ",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.1.6",
        "name": "v0.1.6",
        "release_id": 67964890,
        "tag": "v0.1.6",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/67964890",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/67964890",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sorenwacker",
          "type": "User"
        },
        "date_created": "2022-05-13T19:26:24Z",
        "date_published": "2022-05-13T19:30:42Z",
        "description": "All code for the MINT app (Dashboard) was moved to a different repository. \r\nFrom now on this repository only contains the Python libraries for metabolomics processing. ",
        "html_url": "https://github.com/LewisResearchGroup/ms-mint/releases/tag/v0.1.5",
        "name": "Python library",
        "release_id": 66851582,
        "tag": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/tarball/v0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/66851582",
        "value": "https://api.github.com/repos/LewisResearchGroup/ms-mint/releases/66851582",
        "zipball_url": "https://api.github.com/repos/LewisResearchGroup/ms-mint/zipball/v0.1.5"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run data extraction",
        "parent_header": [
          "ms-mint: A Python library for targeted metabolomics",
          "Data extraction"
        ],
        "type": "Text_excerpt",
        "value": "When filenames and targets are loaded, the processing can be started by calling the `run()` method:\n\n    mint.run()  # Use mint.run(output_fn='results') for many files to prevent memory issues.\n\nThen the results will be stored in the `results` attribute:\n    mint.results\n    >>>\n    ...\n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:21:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "ms-mint: A Python library for targeted metabolomics"
        ],
        "type": "Text_excerpt",
        "value": "To use the main class of the ms-mint library, you can import it into your code with the following command:\n\n    from ms_mint.Mint import Mint\n\nThis will import a lightweight version of the class with the essential functionality. If you want to use the ms-mint tool interactively in a Jupyter Notebook or JupyterLab, you can import the class with the following command:\n\n    from ms_mint.notebook import Mint\n\nThis version of the class is designed specifically for use in Jupyter notebooks and includes additional functions. Once you have imported the appropriate version of the class, you can create an instance of the Mint class and use its methods to process your data.\n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "ms-mint in JupyterLab, or the Jupyter Notebook",
        "parent_header": [
          "ms-mint: A Python library for targeted metabolomics",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "In the JupyterLab you would first instantiate the main class and then load a number of mass-spectrometry (MS) files and a target list.\n\n    %pylab inline\n    from ms_mint.notebook import Mint\n    mint = Mint()\n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ms-mint/develop/README.md",
      "technique": "header_analysis"
    }
  ]
}