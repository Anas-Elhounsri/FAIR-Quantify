{
  "application_domain": [
    {
      "confidence": 30.37,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Resource and reference",
        "parent_header": [
          "SAME-ECOS"
        ],
        "type": "Text_excerpt",
        "value": "- Conventional analysis method non-negative least squares (NNLS) and the extended phase graph (EPG) algorithm can be requested at this URL: https://mriresearch.med.ubc.ca/news-projects/myelin-water-fraction/\n- Please reference this paper: http://doi.org/10.1002/mrm.29000\n"
      },
      "source": "https://raw.githubusercontent.com/hanwencat/SAME-ECOS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hanwencat/SAME-ECOS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-16T05:53:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-07T19:04:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A data-driven analysis method for myelin water imaging"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction to SAME-ECOS",
        "parent_header": [
          "SAME-ECOS"
        ],
        "type": "Text_excerpt",
        "value": "- A data-driven analysis workflow for multi-echo relaxation data acquired in magnetic resonance experiments (e.g. myelin water imaging sequences).\n- Decompose each imaging voxel's T2 relaxation data into a T2 spectrum.\n- Developed based on resolution limit and machine learning neural network algorithms.\n- Tailored for different MR experimental conditions such as SNR.\n"
      },
      "source": "https://raw.githubusercontent.com/hanwencat/SAME-ECOS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8221448399420346,
      "result": {
        "original_header": "SAME-ECOS",
        "type": "Text_excerpt",
        "value": "Spectrum analysis for multiple exponentials via experimental condition oriented simulation\n \n"
      },
      "source": "https://raw.githubusercontent.com/hanwencat/SAME-ECOS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9085727436183285,
      "result": {
        "original_header": "How does SAME-ECOS work",
        "type": "Text_excerpt",
        "value": "The SAME-ECOS workflow takes 4 steps: **simulate, train, test, and deploy.**\n1. **Simulate** sufficient ground truth training examples of random T2 spectra and their MR signals (obeying the T2 resolution limit and experimental conditions).\n2. **Train** a neural network model to learn the mapping between the simulated decay signals and the ground truth spectra.\n3. **Test** the trained model using customized tests (e.g. compare with baseline method) and adjust Step 1 & 2 until obtaining satisfactory test results. \n4. **Deploy** the trained model to experimental data and get T2 spectrum for each imaging voxel.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hanwencat/SAME-ECOS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9503607057881313,
      "result": {
        "original_header": "What are the files in this repository",
        "type": "Text_excerpt",
        "value": "This Repository provides one specific example (32-echo spin echo sequence) as a paradigm to demonstrate the usage of SAME-ECOS. This repo contains the following files:\n- *SAME_ECOS_functions.py* contains the source code that is required by the SAME-ECOS workflow. \n- *example_usage.ipynb* contains the SAME-ECOS workflow. Change the variable default values accordingly based on experimental conditions (e.g. SNR range, T2 range, echo times, flip angle etc.)\n- *EPG_decay_library_32echo.mat* is a pre-computed library for the 32-echo spin echo decay sequence using extended phase graph (EPG) algorithm. Using a pre-computed EPG library is more efficient, compared with invoking the EPG functions at every simulation realization.\n- *NN_model_example.h5* is the trained model that takes 32-echo input data and outputs a T2 spectrum depicted by 40 basis t2s. \nDownload this repo, lauch Jupyter Notebook server, and open *example_usage.ipynb*, then you can play with SAME-ECOS. In general, we recommend the users to use their own datasets to train their models adaptively instead of using the example trained model provided in this repository, although it might work as well.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hanwencat/SAME-ECOS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hanwencat/SAME-ECOS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hanwencat/SAME-ECOS/master/example_usage.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hanwencat/SAME-ECOS/master/example_usage.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hanwencat/SAME-ECOS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hanwencat/SAME-ECOS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SAME-ECOS"
      },
      "source": "https://raw.githubusercontent.com/hanwencat/SAME-ECOS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hanwencat/SAME-ECOS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SAME-ECOS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hanwencat"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 3144787,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 31562,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hanwencat/SAME-ECOS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Package dependencies",
        "parent_header": [
          "SAME-ECOS"
        ],
        "type": "Text_excerpt",
        "value": "The following packages need to be installed and imported properly:\n- Numpy\n- Scipy\n- Tensorflow\n- Keras\n- SKlearn\n\nFile *package-list.txt* contains the full list of all packages installed in this project environment.\n"
      },
      "source": "https://raw.githubusercontent.com/hanwencat/SAME-ECOS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:23:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}