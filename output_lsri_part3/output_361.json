{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download the LD reference panel:",
        "parent_header": [
          "NeuPred",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "- Download the 1000 Genome Project reference panel:\n\n`wget https://zenodo.org/record/7768714/files/1000G_Phase3_plinkfiles.tgz?download=1`\n\n`tar -xvzf 1000G_Phase3_plinkfiles.tgz`\n\n- Users could also specify their own LD reference files with plink bfile format (.bim, .fam, .bed).\n- Note that the LD reference plink bfile data should either be a single file (merge 22 chromosomes with plink), or by each chromosome with the names ended by the number of chromosomes, e.g., 1000G.EUR.QC.1.bim (,.fam, .bed), ..., 1000G.EUR.QC.22.bim (,.fam, .bed). \n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/shuangsong0110/NeuPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-06T13:07:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-12-30T13:22:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Implementation codes for \"A flexible Bayesian regression approach  for accurate polygenic risk prediction\""
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "NeuPred (GWAS summary statistics based PRS approach)",
        "parent_header": [
          "NeuPred",
          "Using NeuPred / NeuPred-I"
        ],
        "type": "Text_excerpt",
        "value": "```r\nlibrary(NeuPred)\nNeuPred.run(summs=SUMMARY_STATISTICS (required),\n\t    LDpath=PATH_TO_LD_REFERENCE,\n\t    LDpath_chr=PATH_TO_LD_REFERENCE_FOR_EACH_CHROMOSOME (either LDpath or LDpath_chr is required),\n\t    n=GWAS_SAMPLE_SIZE (required),\n\t    external.ld=EXTERNAL_LD_REFERENCE (T / F , required),\n\t    ethnic=ETHNIC ('EUR'/'AFR'/'ASN', optional, default='EUR'),\n\t    plinkpath=PATH_TO_PLINK (required),\n\t    path=OUTPUT_DIR (required),\n            [prior=PRIOR_TO_BE_USED ('auto' / 'L' / 'C' / 'HS', optional, default='auto'),\n            testpath=PATH_TO_TEST_DATA (optional),\n  \t    MCMC=MCMC_ITERATIONS (optional),\n   \t    BURN=BURNING_TIMES (optional),\n    \t    parallel=T / F (optional, default=T),\n     \t    cores=NUMBER_OF_RUNNING_CORES (optional),\n     \t    chr=CHROM (optionall, default=1:22),\n\t    plot=ROC_PLOT (T / F, optional),\n\t    tmp=TEMP_FILES (T / F, optional)])                    \n```\n- SUMMARY_STATISTICS (required):\nPrepare the summary statistics in the following format (including the header line):\n```\n   CHR        SNP      A1    A2      BETA        P\n    1      rs4040617    G     A      0.013     8.42e-01\n    1      rs4075116    C     T     -0.308     5.18e-01\n    1      rs9442385    T     G      0.001     9.87e-01\n    ...\n```\nOr:\n```\n   CHR        SNP      A1    A2         OR        P\n    1      rs4040617    G     A      1.013     8.42e-01\n    1      rs4075116    C     T      0.970     5.18e-01\n    1      rs9442385    T     G      1.001     9.87e-01\n    ...\n```\nwhere SNP is the rs ID, A1 is the effect allele, A2 is the alternative allele, BETA/OR is the effect/odds ratio of the A1 allele, P is the p-value of the effect. In fact, BETA/OR is used to determine the direction of an association. \n\n- PATH_TO_LD_REFERENCE (required): Either `LDpath` or `LDpath_chr` is required.  If the data are prepared as a single file, the `LDpath` should include the file name (without .bim/.fam/.bed) and the `LDpath_chr` is not required; if the data are split into chromosomes, the `LDpath_chr` should include the file name but not the exact number of chromosome (e.g., LDpath_chr='path/1000G.EUR.QC.').\n\n- GWAS_SAMPLE_SIZE (required): Sample size of the GWAS.\n\n- EXTERNAL_LD_REFERENCE (required): T / F, which indicated whether the LD reference is from an external LD panel (T) or from in-sample LD (F). \n\n- ETHNIC (optional): 'EUR' / 'AFR' / 'ASN', EUR: European ancestry; AFR: African ancestry; ASN: Asian ancestry.\n\n- PATH_TO_PLINK (required): Full path to the plink software.\n\n- OUTPUT_DIR (required): Full path for output files.\n\n- PRIOR_TO_BE_USED (optional): chooose from 'auto' / 'L' / 'C' / 'HS'. If not specified, when `external.ld=T`, the prior would be set to 'L'; when `external.ld=F`, meaning that the LD is accurately estimated, the prior would be set to 'auto', and the algorithm will use a CV strategy to automatically select the best-performing prior for each chromosome using only training data (details are provided in the paper). \n\n- PATH_TO_TEST_DATA (optional): Full path to the test data (plink bfile format). If the test data is provided, the algorithm will calculate the overlapped SNPs between test data and training data, and then present the predictive r^2 and AUC (for binary traits), and give a ROC plot. If the test data is not provided, the algorithm will derive the posterior effect sizes for all SNPs in training dataset.\n\n- MCMC_ITERATIONS (optional): The number of MCMC iteration times, default is 1e4.\n\n- BURNING_TIMES (optional): The number of MCMC burning times, default is 2000.\n\n- PARALLEL (optional): T / F. To decide whether to run the algorithm in parallel to speed up, default=T. Note that `parallel=T` will improve the computational effiency, but pay attention to the limits of memory.\n\n- NUMBER_OF_CORES (optional): Number of cores for running MCMC when `parallel=T`, the optional is 5.\n\n- CHROM (optional): The chromosome(s) on which the model is fitted, e.g., `chr=c(1, 3, 5)`. The default is `chr=1:22`.\n\n- PLOT (optional): T / F. If `plot=T` and the outcome is binary, the software will provide an ROC plot.\n\n- TEMP_FILES (optional): T / F. If `tmp=T`, the temp files will be kept, including the LD blocks, test files, etc. If `tmp=F`, the temp files will be deleted after the results have been generated.\n\n- SCALE (optional): T / F. If the effect sizes are used for standardized genotypes, please set `scale=T`; if the effect sizes are used for raw genotypes (0,1,2), such as calculating scores with PLINK, please set `scale=F`.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9448384319984935,
      "result": {
        "original_header": "NeuPred",
        "type": "Text_excerpt",
        "value": "**NeuPred** is an R implementation of a unified Bayesian framework for polygenic risk scores construction. \n- add a data-adaptive estimation on global shrinkage parameter \n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9337864577623022,
      "result": {
        "original_header": "NeuPred (GWAS summary statistics based PRS approach)",
        "type": "Text_excerpt",
        "value": "- PRIOR_TO_BE_USED (optional): chooose from 'auto' / 'L' / 'C' / 'HS'. If not specified, when `external.ld=T`, the prior would be set to 'L'; when `external.ld=F`, meaning that the LD is accurately estimated, the prior would be set to 'auto', and the algorithm will use a CV strategy to automatically select the best-performing prior for each chromosome using only training data (details are provided in the paper).  \n- PATH_TO_TEST_DATA (optional): Full path to the test data (plink bfile format). If the test data is provided, the algorithm will calculate the overlapped SNPs between test data and training data, and then present the predictive r^2 and AUC (for binary traits), and give a ROC plot. If the test data is not provided, the algorithm will derive the posterior effect sizes for all SNPs in training dataset. \n- MCMC_ITERATIONS (optional): The number of MCMC iteration times, default is 1e4. \n- BURNING_TIMES (optional): The number of MCMC burning times, default is 2000. \n- NUMBER_OF_CORES (optional): Number of cores for running MCMC when `parallel=T`, the optional is 5. \n- CHROM (optional): The chromosome(s) on which the model is fitted, e.g., `chr=c(1, 3, 5)`. The default is `chr=1:22`. \n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9373520424116719,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "$res: predictive r2 and the AUC (for qualitative traits) \nThe effect sizes for each variant are saved as files in folder `./posterior` \n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download the LD reference panel:",
        "parent_header": [
          "NeuPred",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "- Download the 1000 Genome Project reference panel:\n\n`wget https://zenodo.org/record/7768714/files/1000G_Phase3_plinkfiles.tgz?download=1`\n\n`tar -xvzf 1000G_Phase3_plinkfiles.tgz`\n\n- Users could also specify their own LD reference files with plink bfile format (.bim, .fam, .bed).\n- Note that the LD reference plink bfile data should either be a single file (merge 22 chromosomes with plink), or by each chromosome with the names ended by the number of chromosomes, e.g., 1000G.EUR.QC.1.bim (,.fam, .bed), ..., 1000G.EUR.QC.22.bim (,.fam, .bed). \n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/shuangsong0110/NeuPred/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/shuangsong0110/NeuPred/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "shuangsong0110/NeuPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NeuPred"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.913207431729758,
      "result": {
        "original_header": "NeuPred-I (Individual-level data based PRS method)",
        "type": "Text_excerpt",
        "value": "The individual-level data version, NeuPred-I can be run using the following command:\n```r\nlibrary(NeuPred)\nNeuPred.I.run(trainpath=PATH_TO_TRAINING_DATA (required),\n              plinkpath=PATH_TO_PLINK (required),\n\t      path=OUTPUT_DIR (required),\n\t      [prior=PRIOR_TO_BE_USED ('auto' / 'L' / 'C' / 'HS', optional),\n              testpath=PATH_TO_TEST_DATA (optional),\n\t      MCMC=MCMC_ITERATIONS (optional),\n   \t      BURN=BURNING_TIMES (optional),\n    \t      parallel=T / F (optional),\n     \t      cores=NUMBER_OF_RUNNING_CORES (optional),\n     \t      chr=CHROM (optional),\n\t      plot=ROC_PLOT (T / F, optional),\n\t      tmp=TEMP_FILES (T / F, optional) ]),\n\t      scale=SCALE (T / F, optional) ])\n             \n``` \n- PATH_TO_PLINK (required): Full path to the plink software.\n- OUTPUT_DIR (required): Full path for output files. \n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9841630893202458,
      "result": {
        "original_header": "NeuPred (GWAS summary statistics based PRS approach)",
        "type": "Text_excerpt",
        "value": "- TEMP_FILES (optional): T / F. If `tmp=T`, the temp files will be kept, including the LD blocks, test files, etc. If `tmp=F`, the temp files will be deleted after the results have been generated. \n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/shuangsong0110/NeuPred/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Shuang Song\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NeuPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "shuangsong0110"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 57562,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Other dependencies",
        "parent_header": [
          "NeuPred",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "- Install [plink](http://zzz.bwh.harvard.edu/plink/) (could be ignored if is already installed)\n- We have attached ldetect files for European, African, and Asian ancestries in our software. (Berisa T, Pickrell J K. Approximately independent linkage disequilibrium blocks in human populations[J]. Bioinformatics, 2016, 32(2): 283.)\n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:38:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "NeuPred"
        ],
        "type": "Text_excerpt",
        "value": "NeuPred is an R package which can be installed using the command:\n```r\ndevtools::install_github('shuangsong0110/NeuPred')\n```\n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "A toy example",
        "parent_header": [
          "NeuPred"
        ],
        "type": "Text_excerpt",
        "value": "Clone this repository using the following git command:\n\n$ git clone https://github.com/shuangsong0110/NeuPred.git\n\n$ cd ./NeuPred\n\nRun with R:\n```r\nlibrary(NeuPred)\npath0 <- getwd()\nplinkpath <- 'PATH_TO_PLINK_SOFTWARE'\npath <- paste0(path0, '/example/')\ndir.create(path, recursive=T)\nLDpath <- paste0(path0, '/test_dat/test')\nsumms <- fread(paste0(path0, '/test_dat/train.txt'))\ntestpath <- paste0(path0, '/test_dat/test')\nn <- 3000\nres <- NeuPred.run(summs=summs, LDpath=LDpath, n=n, prior='L', external.ld = F, ethnic='EUR',\n                    plinkpath=plinkpath, path=path, testpath=testpath,\n                    chr=22, parallel=T, cores=5, MCMC=1e4, BURN=2e3, plot=T)\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/shuangsong0110/NeuPred/main/README.md",
      "technique": "header_analysis"
    }
  ]
}