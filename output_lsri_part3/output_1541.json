{
  "application_domain": [
    {
      "confidence": 48.87,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "5. References",
        "parent_header": [
          "<img alt=\"image\" src=\"https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/figure/Dice-XMBD.jpg\" />"
        ],
        "type": "Text_excerpt",
        "value": "[1] Xiao X, Qiao Y, Jiao Y, Fu N, Yang W, Wang L, Yu R and Han J (2021) Dice-XMBD: Deep Learning-Based Cell Segmentation for Imaging Mass Cytometry. Front. Genet. 12:721229. [https://doi.org/10.3389/fgene.2021.721229](https://doi.org/10.3389/fgene.2021.721229)\n[2] BodenmillerGroup. 2020. ImcPluginsCP. [https://github.com/BodenmillerGroup/ImcPluginsCP](https://github.com/BodenmillerGroup/ImcPluginsCP); ImcSegmentationPipeline. [https://github.com/BodenmillerGroup/ImcSegmentationPipeline/tree/main/cp3_pipelines](https://github.com/BodenmillerGroup/ImcSegmentationPipeline/tree/main/cp3_pipelines)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xmuyulab/Dice-XMBD"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-03T11:53:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-20T15:58:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Deep learning-based cell segmentation tool for imaging mass cytometry"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9981680822848782,
      "result": {
        "original_header": "<img alt=\"image\" src=\"https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/figure/Dice-XMBD.jpg\" />",
        "type": "Text_excerpt",
        "value": "[comment]:<img src=\"https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/figure/Dice-XMBD.jpg\" align=center />\nDice-XMBD<sup>1</sup> is marker agnostic and can perform cell segmentation for multiplexed images of different channel configurations without modification. This project contains code, a generic model, and example test datasets for single cell segmentaion of multiplexed imaging data. \n \n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xmuyulab/Dice-XMBD/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xmuyulab/Dice-XMBD/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xmuyulab/Dice-XMBD"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/src/download.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/src/test.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/figure/Dice-XMBD.jpg"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Install with docker image",
        "parent_header": [
          "<img alt=\"image\" src=\"https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/figure/Dice-XMBD.jpg\" />"
        ],
        "type": "Text_excerpt",
        "value": "Open terminal and go to the folder you want to store the project. Then type the following command:\n```\ngit clone https://github.com/xmuyulab/Dice-XMBD.git\n```\n\nNext, the required environment and dependencies can be builded from a dorker image.\nPull dorker image:\n```\ndocker pull xiaoxu9907/dice-xmbd:latest\n```\n\nThe image data in total might be large, we suggest to put image data in another folder having enough capacity (thereafter we refer as \"your_data_dir\").\nCreate a container with GPU:\n```\ndocker run -it --gpus all --name use-dice-xmbd \\\n-v /your_data_dir:/mnt/data \\\n-v /path_to_Dice-XMBD/:/workspace/ \\\nxiaoxu9907/dice-xmbd:latest /bin/bash\n```\n\nCreate a container with CPU:\n```\ndocker run -it --name use-dice-xmbd \\\n-v /your_data_dir:/mnt/data \\\n-v /path_to_Dice-XMBD/:/workspace/ \\\nxiaoxu9907/dice-xmbd:latest /bin/bash\n```\n\nSome docker commands:\n```\ndocker exec -it use-dice-xmbd bash # enter the container\nexit # or use ctrl+d to quit the container\ndocker start use-dice-xmbd\ndocker stop use-dice-xmbd\n```\n\nYou may need to open permission for the folder if you want to modity the code in the docker container:\n```\nchmod +777 -R /path_to_Dice-XMBD/\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xmuyulab/Dice-XMBD/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/figure/Dice-XMBD.jpg"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Dice-XMBD"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "xmuyulab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 318820,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1895,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:23:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Use a trained model",
        "parent_header": [
          "<img alt=\"image\" src=\"https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/figure/Dice-XMBD.jpg\" />"
        ],
        "type": "Text_excerpt",
        "value": "(1) Run an example with a trained model which can be downloaded [here](https://ndownloader.figshare.com/files/28301040) (put the model in */your_data_dir/model* or use the following command):\n```\n# download the trained model\n\nDATAPATH=\"/home/xiaoxu/IMC/Dice-XMBD/data/\" # change to /your_data_dir/\nmkdir -p \"$DATAPATH\"/model\nwget https://ndownloader.figshare.com/files/28301040 -O \"$DATAPATH\"model/02-15-20-14_threshold-99.7_withAugnoise-0.5_model_80.pth\n\ndocker exec -it use-dice-xmbd bash\n\n# predict pixel probability map\npython /workspace/src/main_probability.py --action predict --weight=\"/mnt/data/model/02-15-20-14_threshold-99.7_withAugnoise-0.5_model_80.pth\" --preddir '/workspace/data/predict_BRCA2/'\n```\n\n(2) Get single cell mask from CellProfiler:\nDownload [CellProfiler 3.1.9](https://cellprofiler.org/previous-releases) and use */path_to_Dice-XMBD/process/2_generate_cellmask.cpproj* pipeline (from [Bernd Bodenmiller lab<sup>2</sup>](https://github.com/BodenmillerGroup/ImcSegmentationPipeline/tree/main/cp3_pipelines)) to post-process pixel probability maps from step(1). Some modules in this pipeline are required in the folder */path_to_Dice-XMBD/process/ImcPluginsCP/plugins*, which can be downloaded in [Bernd Bodenmiller lab<sup>2</sup>](https://github.com/BodenmillerGroup/ImcPluginsCP) as well. \n\nFor CellProfiler GUI: modify the CellProfiler Preferences to the plugin folder (path_to/ImcPluginsCP/plugins) and then restart cellprofiler.\n\nFor command line: --plugins-directory=path_to/ImcPluginsCP/plugins\n\n\n(3) Extract mean protein intensity of single cells:\n```\npython /workspace/process/3_imc_extract_pro.py \n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Quick start to train a model",
        "parent_header": [
          "<img alt=\"image\" src=\"https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/figure/Dice-XMBD.jpg\" />"
        ],
        "type": "Text_excerpt",
        "value": "(0) resize image to 512*512 and combine multiple channels to 2 channel-input image (the given panel file need to have the same ordered with img channels: at least contains two columns(\"nuclear\",\"membrane_cytoplasm\"))\n```\n# example: \npython /workspace/process/1_preprocess_img.py --process pre\npython /workspace/process/1_preprocess_img.py --process pre --workdir /mnt/data/yourimgs --panel /mnt/data/yourimgs_panel_info\n```\n\n(1) Training a model use your own training dataset which should contain *train* and *test* datasets, training datasets example can be download here: [train](https://ndownloader.figshare.com/files/28298646) and [test](https://ndownloader.figshare.com/files/28297719) (put datasets in */your_data_dir/data/* folder or use the following command).\n```\n# download training datasets and put in */path_to_Dice-XMBD/data/* folder\nDATAPATH=\"/home/xiaoxu/IMC/Dice-XMBD/data/\" # change to /your_data_dir/\n\nmkdir -p \"$DATAPATH\"\nmkdir -p \"$DATAPATH\"/BRCA1\n\n#download training and validation dataset\nwget https://ndownloader.figshare.com/files/28298646 -O \"$DATAPATH\"BRCA1/train.zip\nwget https://ndownloader.figshare.com/files/28297719 -O \"$DATAPATH\"BRCA1/test.zip\n\n# unzip files:\nunzip \"$DATAPATH\"BRCA1/test.zip -d \"$DATAPATH\"BRCA1/\nunzip \"$DATAPATH\"BRCA1/train.zip -d \"$DATAPATH\"BRCA1/\n\n# enter the container\ndocker exec -it use-dice-xmbd bash\n\npython /workspace/src/main_probability.py --action train --workdir /mnt/data/BRCA1\n```\n\n(2) Predict pixel probability map from a trained model:\n```\n# example: \npython /workspace/src/main_probability.py --action predict --weight='/mnt/data/model/02-15-20-14_threshold-99.7_withAugnoise-0.5_model_80.pth' --preddir '/workspace/data/predict_BRCA2/'\npython /workspace/src/main_probability.py --action predict --weight='/mnt/data/your_dataset/model/model_name.pth' --preddir '/mnt/data/your_test_dataset' --testname 'combined2_image'\n\n# merge resized images to the original size of image:\npython /workspace/process/1_preprocess_img.py --process post\n```\n\n(3) Get single cell mask from CellProfiler:\nDownload [CellProfiler](https://cellprofiler.org/previous-releases) and use */path_to_Dice-XMBD/process/2_generate_cellmask.cpproj* pipeline to post-process pixel probability maps from step(2)\n\n(4) Extract mean protein intensity of single cells:\n```\npython /workspace/process/3_imc_extract_pro.py \n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/Dice-XMBD/main/README.md",
      "technique": "header_analysis"
    }
  ]
}