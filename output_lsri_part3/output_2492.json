{
  "application_domain": [
    {
      "confidence": 11.75,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "MNI SISCOM"
        ],
        "type": "Text_excerpt",
        "value": "Please cite the following paper if you use MNI SISCOM in your research:\n\nMoreau JT, Saint-Martin C, Baillet S, Dudley RWR. MNI SISCOM: an Open-Source Tool for Computing Subtraction Ictal Single-Photon Emission CT Coregistered to MRI. J Digit Imaging. 2021 Feb 18; Available from: http://dx.doi.org/10.1007/s10278-021-00422-9\n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jeremymoreau/mnisiscom"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-06T03:29:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-06T21:35:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Simple tool for computing subtraction ictal SPECT coregistered to MRI (SISCOM)."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9881709697062844,
      "result": {
        "original_header": "MNI SISCOM",
        "type": "Text_excerpt",
        "value": "MNI SISCOM is a Windows/Mac/Linux desktop and command line application for computing Subtraction ictal single-photon emission CT coregistered to MRI (SISCOM). The underlying Python library that implements the functionality of MNI SISCOM is also available on PyPi. Please cite the following paper if you use MNI SISCOM in a paper: [reference to come].\n \n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jeremymoreau/mnisiscom/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jeremymoreau/mnisiscom/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jeremymoreau/mnisiscom"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MNI SISCOM"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/build_mac.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/build_linux.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/icons/icon-gen/favicon-120.png"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "MNI SISCOM desktop app",
        "parent_header": [
          "MNI SISCOM",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Download MNI SISCOM: <https://github.com/jeremymoreau/mnisiscom/releases>\n\n- Windows: Double click mnisiscom_setup.exe and follow the instructions.\n- Mac: Double click mnisiscom.dmg and move mnisiscom.app to your Applications folder\n  - If you get a notification that `\"mnisiscom\" can't be opened because it is from an unidentified developer`, right-click on the app and select `Open`, then click on the `Open` button.\n- Linux: Double click on mnisiscom.\n  - If this doesn't work, you may need to right-click mnisiscom -> select `Properties` -> then the `Permissions` tab, and check the `Allow executing file as program` box.\n\n> **Note 1:** You **must also install [SPM12](https://www.fil.ion.ucl.ac.uk/spm/) standalone** to use MNI SISCOM (SPM is used for SPECT/MRI image coregistration). See below for installation instructions for [Windows](#Windows), [Mac](#Mac-OS), and [Linux](#Linux). Once installed, set the installation path of SPM in the settings menu of MNI SISCOM.\n\n> **Note 2:** **[Google Chrome](https://www.google.com/chrome/) or Chromium is also required** to use the desktop app interface of MNI SISCOM.\n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MNI SISCOM command line tool &amp; Python module",
        "parent_header": [
          "MNI SISCOM",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you would like to use the command-line version of mnisiscom or the Python module, you can also install MNI SISCOM from PyPi. If you do not have python 3 yet, the Anaconda Python distribution is recommended: <https://www.anaconda.com/distribution/#download-section>\n\nTo install mnisiscom simply run:\n`pip install mnisiscom`\n\n> **Note:** On Windows you may need to install Visual Studio C++. See this question for more information: <https://stackoverflow.com/questions/29846087/microsoft-visual-c-14-0-is-required-unable-to-find-vcvarsall-bat>\n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SPM12 Installation",
        "parent_header": [
          "MNI SISCOM"
        ],
        "type": "Text_excerpt",
        "value": "The standalone version of [SPM12](https://www.fil.ion.ucl.ac.uk/spm/) is required for MNI SISCOM to run (it is used for SPECT and MRI image coregistration). For a more complete installation guide, see the SPM website: <https://en.wikibooks.org/wiki/SPM/Standalone>\n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows",
        "parent_header": [
          "MNI SISCOM",
          "SPM12 Installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Download and install the Microsoft Visual C++ runtime components (`vcredist_x64.exe`) and the MATLAB Compiler Runtime (MCR) for SPM (`MCRInstaller.exe`)\n<https://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/MCR/win64/>\n\n    - Note: If you are running an older (32 bit) version of Windows, download and install the files from this link instead: <https://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/MCR/win32/>\n\n2. Download the current version of SPM12 standalone (e.g. `spm12_r7487.zip`)\n<https://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/>\n\n3. Unzip the downloaded file and move the `spm12` folder to where you would like to save it (e.g. in `C:\\Users\\YourUsername\\spm12`)\n\n4. Start SPM12 to verify that it is properly installed (SPM12 will also need to unpack some files the first time it is run). Reboot your computer first if you run into any errors.\n    - Open the spm12 folder (e.g. in `C:\\Users\\YourUsername\\spm12`) and double click on `spm12_win64.exe`\n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Mac OS",
        "parent_header": [
          "MNI SISCOM",
          "SPM12 Installation"
        ],
        "type": "Text_excerpt",
        "value": "Follow the instructions in this step-by-step installation guide: <https://github.com/jeremymoreau/mnisiscom/blob/master/doc/mnisiscom_installation_manual_macOS.pdf>\n\n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Linux",
        "parent_header": [
          "MNI SISCOM",
          "SPM12 Installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Download and install the MATLAB Compiler Runtime (MCR) for SPM (`MCRInstaller.bin`)\n<https://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/MCR/glnxa64/>\n    - Note: If you are running a 32-bit Linux distro, download and install the file from this link instead: <https://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/MCR/glnx86/>\n\n2. Download the current version of SPM12 standalone (e.g. `spm12_r7487.zip`)\n<https://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/>\n\n3. Unzip the downloaded file and move the `spm12` folder to where you would like to save it (e.g. in `/home/YourUsername/spm12`)\n\n4. Start SPM12 to verify that it is properly installed (SPM12 will also need to unpack some files the first time it is run). Reboot your computer first if you run into any errors.\n    - Open a terminal\n    - Type in `cd /path/to/where/you/put/the/spm12/folder` (e.g. `cd /home/YourUsername/spm12`)\n    - Then enter `./run_spm12.sh /usr/local/MATLAB/MATLAB_Compiler_Runtime/v713/`. Note: you may need to change `/usr/local/MATLAB/MATLAB_Compiler_Runtime/v713/` if you installed the MATLAB Compiler Runtime in a different location in step 1.\n\n> **Note:** If you have trouble installing SPM12 or the Matlab MCR for any reason, you can try downloading one of the more recent SPM12 standalone releases from [here](https://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/dev/). In which case, you will need to download and install the matching Matlab MCR from the [MathWorks website](https://www.mathworks.com/products/compiler/matlab-runtime.html) (e.g. if you download spm12_r7487_*_R2019b.zip, then download and install MCR version R2019b).\n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9418030422323727,
      "result": {
        "original_header": "MNI SISCOM",
        "type": "Text_excerpt",
        "value": "<img src=\"https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/icons/icon-gen/favicon-120.png\" align=\"left\" height=\"110\" width=\"110\" hspace=\"10\"> \nMNI SISCOM is a Windows/Mac/Linux desktop and command line application for computing Subtraction ictal single-photon emission CT coregistered to MRI (SISCOM). The underlying Python library that implements the functionality of MNI SISCOM is also available on PyPi. Please cite the following paper if you use MNI SISCOM in a paper: [reference to come].\n \n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jeremymoreau/mnisiscom/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Author: Jeremy Moreau\nCopyright \u00a9 2020, McGill University\n\nLicense Information\n===================\n\nMNI SISCOM is distributed under the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with your software, You can obtain one at https://mozilla.org/MPL/2.0/.\n\nMNI SISCOM is also distributed under the terms of the following Healthcare Disclaimer.\n\nHealthcare Disclaimer\n---------------------\nIn Canada, the United States, or any other jurisdictions where they may apply, the following additional disclaimer of warranty and limitation of liability are hereby incorporated into the terms and conditions of MPL 2.0:\n\nNo warranties of any kind whatsoever are made as to the results that You will obtain from relying upon the covered code (or any information or content obtained by way of the covered code), including but not limited to compliance with privacy laws or regulations or clinical care industry standards and protocols. Use of the covered code is not a substitute for a health care provider\u2019s standard practice or professional judgment. Any decision with regard to the appropriateness of treatment, or the validity or reliability of information or content made available by the covered code, is the sole responsibility of the health care provider. Consequently, it is incumbent upon each health care provider to verify all medical history and treatment plans with each patient.\n\nUnder no circumstances and under no legal theory, whether tort (including negligence), contract, or otherwise, shall any Contributor, or anyone who distributes Covered Software as permitted by the license, be liable to You for any indirect, special, incidental, consequential damages of any character including, without limitation, damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other damages or losses, of any nature whatsoever (direct or otherwise) on account of or associated with the use or inability to use the covered content (including, without limitation, the use of information or content made available by the covered code, all documentation associated therewith, and the failure of the covered code to comply with privacy laws and regulations or clinical care industry standards and protocols), even if such party shall have been informed of the possibility of such damages.\n\nLicense Information by [OpenMRS](https://openmrs.org/license) / [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/)\n\n\nOpenSans-Regular.ttf\n====================\nApache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n\nMNI152_T1.nii\n=============\nCopyright (C) 1993\u20132009 Louis Collins, McConnell Brain Imaging Centre, Montreal Neurological Institute, McGill University. Permission to use, copy, modify, and distribute this software and its documentation for any purpose and without fee is hereby granted, provided that the above copyright notice appear in all copies. The authors and McGill University make no representations about the suitability of this software for any purpose. It is provided \u201cas is\u201d without express or implied warranty. The authors are not responsible for any data loss, equipment damage, property loss, or injury to subjects or patients resulting from the use or misuse of this software package.\nhttp://nist.mni.mcgill.ca/?page_id=714\n\n\nOther licenses\n==============\n- [click](https://github.com/pallets/click) - [BSD-3-Clause](https://github.com/pallets/click/blob/master/LICENSE.rst)\n- [colorama](https://github.com/tartley/colorama) - [BSD 3-Clause](https://github.com/tartley/colorama/blob/master/LICENSE.txt)\n- [dipy](https://github.com/nipy/dipy) - [BSD 3-Clause](https://github.com/nipy/dipy/blob/master/LICENSE)\n- [eel](https://github.com/samuelhwilliams/Eel) - [MIT License](https://github.com/samuelhwilliams/Eel/blob/master/LICENSE)\n- [nibabel](https://github.com/nipy/nibabel) - [MIT License](https://github.com/nipy/nibabel/blob/master/COPYING)\n- [numpy](https://github.com/numpy/numpy) - [BSD 3-Clause](https://github.com/numpy/numpy/blob/master/LICENSE.txt)\n- [nilearn](https://github.com/nilearn/nilearn) - [New BSD License](https://github.com/nilearn/nilearn/blob/master/LICENSE)\n- [matplotlib](https://github.com/matplotlib/matplotlib) - [Matplotlib License](https://github.com/matplotlib/matplotlib/blob/master/LICENSE/LICENSE)\n- [Pillow](https://github.com/python-pillow/Pillow) - [PIL Software License](https://github.com/python-pillow/Pillow/blob/master/LICENSE)\n- [scikit-learn](https://github.com/scikit-learn/scikit-learn) - [New BSD License](https://github.com/scikit-learn/scikit-learn/blob/master/COPYING)\n- [argon](https://github.com/creativetimofficial/argon-design-system) - [MIT License](https://github.com/creativetimofficial/argon-design-system/blob/master/LICENSE.md)\n- [bootstrap](https://github.com/twbs/bootstrap) - [MIT License](https://github.com/twbs/bootstrap/blob/master/LICENSE)\n- [fontawesome](https://github.com/FortAwesome/Font-Awesome) - [Font Awesome Free License](https://github.com/FortAwesome/Font-Awesome/blob/master/LICENSE.txt)\n- [jquery](https://github.com/jquery/jquery) - [MIT License](https://github.com/jquery/jquery/blob/master/LICENSE.txt) \n- [noUiSlider](https://github.com/leongersen/noUiSlider) - [MIT License](https://github.com/leongersen/noUiSlider/blob/master/LICENSE.md)\n- [Popper.js](https://github.com/popperjs/popper.js) - [MIT License](https://github.com/popperjs/popper.js/blob/master/LICENSE.md)\n\n\n\n\n\nMozilla Public License Version 2.0\n====================================\n\n\n1. Definitions\n-------------------\n\n1.1. \u201cContributor\u201d\n\nmeans each individual or legal entity that creates, contributes to the creation of, or owns Covered Software.\n\n1.2. \u201cContributor Version\u201d\n\nmeans the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor\u2019s Contribution.\n\n1.3. \u201cContribution\u201d\n\nmeans Covered Software of a particular Contributor.\n\n1.4. \u201cCovered Software\u201d\n\nmeans Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.\n\n1.5. \u201cIncompatible With Secondary Licenses\u201d\n\nmeans\n\n1.  that the initial Contributor has attached the notice described in Exhibit B to the Covered Software; or\n\n2.  that the Covered Software was made available under the terms of version 1.1 or earlier of the License, but not also under the terms of a Secondary License.\n\n\n1.6. \u201cExecutable Form\u201d\n\nmeans any form of the work other than Source Code Form.\n\n1.7. \u201cLarger Work\u201d\n\nmeans a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software.\n\n1.8. \u201cLicense\u201d\n\nmeans this document.\n\n1.9. \u201cLicensable\u201d\n\nmeans having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License.\n\n1.10. \u201cModifications\u201d\n\nmeans any of the following:\n\n1.  any file in Source Code Form that results from an addition to, deletion from, or modification of the contents of Covered Software; or\n\n2.  any new file in Source Code Form that contains any Covered Software.\n\n\n1.11. \u201cPatent Claims\u201d of a Contributor\n\nmeans any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version.\n\n1.12. \u201cSecondary License\u201d\n\nmeans either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses.\n\n1.13. \u201cSource Code Form\u201d\n\nmeans the form of the work preferred for making modifications.\n\n1.14. \u201cYou\u201d (or \u201cYour\u201d)\n\nmeans an individual or a legal entity exercising rights under this License. For legal entities, \u201cYou\u201d includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, \u201ccontrol\u201d means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n\n2. License Grants and Conditions\n---------------------------------\n\n### 2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n\n1.  under intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and\n\n2.  under Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version.\n\n\n### 2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution.\n\n### 2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor:\n\n1.  for any code that a Contributor has removed from Covered Software; or\n\n2.  for infringements caused by: (i) Your and any other third party\u2019s modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or\n\n3.  under Patent Claims infringed by Covered Software in the absence of its Contributions.\n\n\nThis License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4).\n\n### 2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3).\n\n### 2.5. Representation\n\nEach Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License.\n\n### 2.6. Fair Use\n\nThis License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents.\n\n### 2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1.\n\n3. Responsibilities\n--------------------\n\n### 3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients\u2019 rights in the Source Code Form.\n\n### 3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n1.  such Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and\n\n2.  You may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients\u2019 rights in the Source Code Form under this License.\n\n\n### 3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s).\n\n### 3.4. Notices\n\nYou may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies.\n\n### 3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n----------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it.\n\n5. Termination\n---------------\n\n5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination.\n\n6. Disclaimer of Warranty\n--------------------------\n\n_Covered Software is provided under this License on an \u201cas is\u201d basis, without warranty of any kind, either expressed, implied, or statutory, including, without limitation, warranties that the Covered Software is free of defects, merchantable, fit for a particular purpose or non-infringing. The entire risk as to the quality and performance of the Covered Software is with You. Should any Covered Software prove defective in any respect, You (not any Contributor) assume the cost of any necessary servicing, repair, or correction. This disclaimer of warranty constitutes an essential part of this License. No use of any Covered Software is authorized under this License except under this disclaimer._\n\n7. Limitation of Liability\n---------------------------\n\n_Under no circumstances and under no legal theory, whether tort (including negligence), contract, or otherwise, shall any Contributor, or anyone who distributes Covered Software as permitted above, be liable to You for any direct, indirect, special, incidental, or consequential damages of any character including, without limitation, damages for lost profits, loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses, even if such party shall have been informed of the possibility of such damages. This limitation of liability shall not apply to liability for death or personal injury resulting from such party\u2019s negligence to the extent applicable law prohibits such limitation. Some jurisdictions do not allow the exclusion or limitation of incidental or consequential damages, so this exclusion and limitation may not apply to You._\n\n8. Litigation\n--------------\n\nAny litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party\u2019s ability to bring cross-claims or counter-claims.\n\n9. Miscellaneous\n-----------------\n\nThis License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n----------------------------\n\n### 10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number.\n\n### 10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward.\n\n### 10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License).\n\n### 10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\n\nIf You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n> This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \u201cIncompatible With Secondary Licenses\u201d Notice\n---------------------------------------------------------\n\n> This Source Code Form is \u201cIncompatible With Secondary Licenses\u201d, as defined by the Mozilla Public License, v. 2.0.\n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/icons/mnisiscom_screenshot.png"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mnisiscom"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jeremymoreau"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 105874,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 42344,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 11361,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3427,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 2501,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Inno Setup",
        "size": 2105,
        "type": "Programming_language",
        "value": "Inno Setup"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PowerShell",
        "size": 1818,
        "type": "Programming_language",
        "value": "PowerShell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jeremymoreau",
          "type": "User"
        },
        "date_created": "2020-01-09T02:27:57Z",
        "date_published": "2020-01-09T03:24:15Z",
        "description": "First public Release of MNI SISCOM.\r\n\r\nSystem Requirements:\r\nWindows (mnisiscom_setup.exe): Windows 10\r\nMac (mnisiscom.0.4.0.dmg): macOS 10.11 or later\r\nLinux (mnisiscom_0.4.0.zip): Ubuntu 18.04 LTS\r\n\r\n- Added Desktop app GUI\r\n- Added packaged binaries with PyInstaller\r\n- Added Windows installer\r\n- Added Mac dmg installer\r\n- Added documentation and installation instructions\r\n- Removed nipype dependency (replaced with direct call to SPM12 standalone)\r\n- Cleaned up file output\r\n- Fixed coronal slice cropping bug\r\n- Refactoring",
        "html_url": "https://github.com/jeremymoreau/mnisiscom/releases/tag/v0.4.0",
        "name": "v0.4.0",
        "release_id": 22698343,
        "tag": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/jeremymoreau/mnisiscom/tarball/v0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jeremymoreau/mnisiscom/releases/22698343",
        "value": "https://api.github.com/repos/jeremymoreau/mnisiscom/releases/22698343",
        "zipball_url": "https://api.github.com/repos/jeremymoreau/mnisiscom/zipball/v0.4.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:04:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "MNI SISCOM"
        ],
        "type": "Text_excerpt",
        "value": "Input MRI and SPECT volumes in NIfTI (.nii) format are supported. If you have raw DICOM images you can use a tool like dcm2nii (now available with [MRIcron](https://www.nitrc.org/projects/mricron), in the \"Import\" menu) to convert them to NIfTI format. Details about each parameter can be viewed by hovering over the label in the desktop app or via `mnisiscom --help` for the command line tool. Resulting images will be saved in the selected output folder.\n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic command line tool usage:",
        "parent_header": [
          "MNI SISCOM",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "`mnisiscom -t1 T1.nii -ii interictal_spect.nii -i ictal_spect.nii -o /path/to/output/folder`\n\nYou can also launch the Desktop GUI from the command line:\n`mnisiscom_gui`\n"
      },
      "source": "https://raw.githubusercontent.com/jeremymoreau/mnisiscom/master/README.md",
      "technique": "header_analysis"
    }
  ]
}