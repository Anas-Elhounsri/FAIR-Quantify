{
  "application_domain": [
    {
      "confidence": 33.37,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "SyntaLinker (Automatic Fragment Linking with Deep Conditional Transformer Neural Networks)"
        ],
        "type": "Text_excerpt",
        "value": "If you find this work useful in your research, please consider citing the paper:\n\"SyntaLinker: Automatic Fragment Linking with Deep Conditional Transformer Neural Networks\".\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YuYaoYang2333/SyntaLinker"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-30T07:35:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-31T03:49:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Automatic Fragment Linking with Deep Conditional Transformer Neural Networks"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9313565147839615,
      "result": {
        "original_header": "SyntaLinker (Automatic Fragment Linking with Deep Conditional Transformer Neural Networks)",
        "type": "Text_excerpt",
        "value": "This is the code for the \"SyntaLinker: Automatic Fragment Linking with Deep Conditional Transformer Neural Networks\" paper found on [ChemRxiv](https://ChemRxiv.org/). \nTo implement our models we were based on [OpenNMT-py (v0.4.1)](http://opennmt.net/OpenNMT-py/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8854994118774352,
      "result": {
        "original_header": "Pre-processing",
        "type": "Text_excerpt",
        "value": "We use a shared vocabulary. The `vocab_size` and `seq_length` are chosen to include the whole datasets. \n"
      },
      "source": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YuYaoYang2333/SyntaLinker/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 50
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YuYaoYang2333/SyntaLinker/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "YuYaoYang2333/SyntaLinker"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SyntaLinker (Automatic Fragment Linking with Deep Conditional Transformer Neural Networks)"
      },
      "source": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/training.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/recovery.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/preprocess.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/testing_beam_search.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/average_models.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install requirements",
        "parent_header": [
          "SyntaLinker (Automatic Fragment Linking with Deep Conditional Transformer Neural Networks)"
        ],
        "type": "Text_excerpt",
        "value": "Create a new conda environment:\n\n```bash\nconda env create -f environment.yml\nconda activate SyntaLinker\n```\n"
      },
      "source": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.811646478471295,
      "result": {
        "original_header": "Training",
        "type": "Text_excerpt",
        "value": "Model training can be started by running the [training.sh](https://github.com/YuYaoYang2333/SyntaLinker/edit/master/training.sh) script \n"
      },
      "source": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YuYaoYang2333/SyntaLinker/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Peanuts\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SyntaLinker"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "YuYaoYang2333"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 606062,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 27722,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install requirements",
        "parent_header": [
          "SyntaLinker (Automatic Fragment Linking with Deep Conditional Transformer Neural Networks)"
        ],
        "type": "Text_excerpt",
        "value": "Create a new conda environment:\n\n```bash\nconda env create -f environment.yml\nconda activate SyntaLinker\n```\n"
      },
      "source": "https://raw.githubusercontent.com/YuYaoYang2333/SyntaLinker/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:21:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 52
      },
      "technique": "GitHub_API"
    }
  ]
}