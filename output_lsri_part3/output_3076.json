{
  "application_domain": [
    {
      "confidence": 0.9487932440085934,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Lemon:  A framework for rapidly mining structural information from the Protein Data Bank"
        ],
        "type": "Text_excerpt",
        "value": "If you find **Lemon** useful, please cite:\n\nJonathan Fine, Gaurav Chopra, Lemon: a framework for rapidly mining structural information from the Protein Data Bank, Bioinformatics, , btz178, https://doi.org/10.1093/bioinformatics/btz178\n"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chopralab/lemon"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-07-14T11:47:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-08T07:51:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A framework for rapidly mining structural information from the Protein Data Bank"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9574486330733363,
      "result": {
        "original_header": "What is Lemon's purpose?",
        "type": "Text_excerpt",
        "value": "**Lemon** is a tool for mining features used in downstream structural biology software dealing with 3D Macromolecules.  It is designed to be fast and flexible, allowing users to quickly query the 3D features of a given collection of 3D structures.  To do so, the user writes a workflow function which is applied to all the structures in the PDB. Currently, these workflows can be developed using C++(typically through lambdas) and Python. \nDue to the incredibly fast parsing speed of the MMTF format, Lemon uses this format by default.  This helps **Lemon** query the entire Protein Data Bank under 10 minutes on an 8 core machine. Lemon handles all the threading, compression, and MMTF parsing leaving the rest up to the user! \nWith these ideas in mind, the major, and crucial role of **Lemon** is the creation of standardized workflows for mining structural features. Since **Lemon** handles the rest, these workflows can be used for any future versions of the PDB. Hopefully, the structural biology community can use our software to replace custom/in-house scripts that need to be run on the ever growing PDB! \nYou can read more about lemon in our [publication](https://doi.org/10.1093/bioinformatics/btz178).\n \n"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9015608715222778,
      "result": {
        "original_header": "C++ Library",
        "type": "Text_excerpt",
        "value": "Technically speaking, **Lemon** is a *header-only* library. This means to use lemon in your own chemfiles-based project, just copy the `include/lemon` directory into your project and include the file `lemon/lemon.hpp`. There is *no* need to link a special library or package. \n**Lemon** is developed to have as few dependencies as possible. You only need a recent **C++** compiler which supports C++11. If you plan on building Python support, you will also need a copy of the Python interpreter and occompaning libraries and header files. All other dependencies are installed for you by the build system.\n```bash\ngit clone https://github.com/chopralab/lemon.git\n\ncd lemon\n\nmkdir build\n\ncd build\n\ncmake .. -DCMAKE_BUILD_TYPE=Release\n\nmake -j 2\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9730535051797938,
      "result": {
        "original_header": "Python Module",
        "type": "Text_excerpt",
        "value": "For details on how to use this module, please see the [Getting Starting](https://chopralab.github.io/lemon/latest/getting_started.html#using-the-pypi-pip-package) page of the documentation.\n \n"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9869048929229066,
      "result": {
        "original_header": "Copyright",
        "type": "Text_excerpt",
        "value": "**Lemon** is &copy; 2018 Chopra Lab and Purdue University, developed by Jonathan Fine and is available as open source under the terms of the [BSD License](http://opensource.org/licenses/BSD). \n \n"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chopralab/lemon/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chopralab/lemon/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chopralab/lemon"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chopralab/lemon/master/scripts/build-doc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chopralab/lemon/master/scripts/clang_tidy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chopralab/lemon/master/scripts/upload_pypi.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chopralab/lemon/master/scripts/circleci/manylinux-build-wheels.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chopralab/lemon/master/scripts/circleci/dockcross-manylinux-build-wheels.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chopralab/lemon/master/scripts/travis/macpython-install-python.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chopralab/lemon/master/scripts/travis/macpython-build-wheels.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chopralab/lemon/master/scripts/travis/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chopralab/lemon/master/dubs/benchmark.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://circleci.com/gh/chopralab/lemon.svg?style=svg"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ci.appveyor.com/api/projects/status/gsbuqupcn2598l4d/branch/master?svg=true"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9719943648342901,
      "result": {
        "original_header": "C++ Library",
        "type": "Text_excerpt",
        "value": "Technically speaking, **Lemon** is a *header-only* library. This means to use lemon in your own chemfiles-based project, just copy the `include/lemon` directory into your project and include the file `lemon/lemon.hpp`. There is *no* need to link a special library or package. \n**Lemon** is developed to have as few dependencies as possible. You only need a recent **C++** compiler which supports C++11. If you plan on building Python support, you will also need a copy of the Python interpreter and occompaning libraries and header files. All other dependencies are installed for you by the build system.\n```bash\ngit clone https://github.com/chopralab/lemon.git\n\ncd lemon\n\nmkdir build\n\ncd build\n\ncmake .. -DCMAKE_BUILD_TYPE=Release\n\nmake -j 2\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999999432,
      "result": {
        "original_header": "Python Module",
        "type": "Text_excerpt",
        "value": "Pre-built **Python** modules for v3.5+ are on PyPI under the name `candiy-lemon`. You can install them with `pip` using the following command:\n```bash\npython3 -m pip install candiy-lemon\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chopralab/lemon/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cheminformatics, chemistry, computational-chemistry, data-mining, machine-learning, structural-biology"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2020, Purdue University and Chopra Lab\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chopralab/lemon//master/doc/icon.svg"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lemon"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "chopralab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 227098,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 33771,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 21714,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 18457,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 986,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PowerShell",
        "size": 308,
        "type": "Programming_language",
        "value": "PowerShell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:30:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 52
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How does one use Lemon?",
        "parent_header": [
          "Lemon:  A framework for rapidly mining structural information from the Protein Data Bank"
        ],
        "type": "Text_excerpt",
        "value": "The Protein Data Bank is used to test **Lemon**'s capabilites and is the source of the majority of structural biology benchmarking sets.  Therefore we have included a script to download the entire PDB archive.  It is recommended to use the latest Hadoop sequence files located [here](https://mmtf.rcsb.org/v1.0/hadoopfiles/full.tar).\n\nCurrently, the archive takes ~9Gb of space.\n\nTo run **Lemon**, select a program. For example, if one wants to query all the small molecules which interact with `SAM`, use the following command:\n\n```bash\ntar xf full.tar /dev/shm/\n/path/to/lemon/build/progs/count_sam_small_molecules -w /dev/shm/full -n <number of cores>\n```\n\nThe results for this program are printed to `stdout`.\n"
      },
      "source": "https://raw.githubusercontent.com/chopralab/lemon/master/README.md",
      "technique": "header_analysis"
    }
  ]
}