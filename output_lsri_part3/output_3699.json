{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wonderful1/CNV-PG"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-12T16:37:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-11T12:21:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CNV-PG: a machine-learning framework for accurate copy number variation predicting and genotyping"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9995876179370803,
      "result": {
        "original_header": "CNV-PG: a machine-learning framework for accurate copy number variation predicting and genotyping",
        "type": "Text_excerpt",
        "value": "CNV-PG is an open-source application written in Python, including two parts: CNV predicting (CNV-P) and CNV genotyping (CNV-G). For CNV-P, we trained on a subset of validated CNVs from different CNV callers separately to obtain the corresponding classifier used for the identification of true CNVs. For CNV-G, a genotyper, which is compatible with existing CNV callers and generating a uniform set of high-confidence genotypes. \n \n"
      },
      "source": "https://raw.githubusercontent.com/wonderful1/CNV-PG/master/readme.txt",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wonderful1/CNV-PG/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wonderful1/CNV-PG/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wonderful1/CNV-PG"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CNV-PG: a machine-learning framework for accurate copy number variation predicting and genotyping"
      },
      "source": "https://raw.githubusercontent.com/wonderful1/CNV-PG/master/readme.txt",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wonderful1/CNV-PG/master/CNV-P/CNV-P_predict.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wonderful1/CNV-PG/master/CNV-G/CNV-G_predict.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wonderful1/CNV-PG/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CNV-PG"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "wonderful1"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 26495,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3920,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "VBA",
        "size": 446,
        "type": "Programming_language",
        "value": "VBA"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wonderful1/CNV-PG/master/readme.txt"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wonderful1/CNV-PG/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites:",
        "parent_header": [
          "CNV-PG: a machine-learning framework for accurate copy number variation predicting and genotyping"
        ],
        "type": "Text_excerpt",
        "value": "[python3](https://www.python.org/)  \n[sklearn](https://pypi.org/project/sklearn/)  \n[matplotlib](https://pypi.org/project/matplotlib/)  \n[pysam](https://pypi.org/project/pysam/)  \n[pandas](https://pypi.org/project/pandas/)  \n[numpy](https://pypi.org/project/numpy/)  \n\n"
      },
      "source": "https://raw.githubusercontent.com/wonderful1/CNV-PG/master/readme.txt",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running:",
        "parent_header": [
          "CNV-PG: a machine-learning framework for accurate copy number variation predicting and genotyping",
          "Getting started",
          "1. CNV-P"
        ],
        "type": "Text_excerpt",
        "value": "Run \"$HOME/CNV-PG/CNV-P/CNV-P_predict.sh -h\" to see the usage information.The follow options are required:\n\n\t-i BAMFILE, the path of BAM file(generated by bwa commonly)   \n\t-b BASFILE, the path of BAS file (provided by user)  \n\t-v VCFFILE, the path of VCF file(the results of CNVcallers (breakdancer,Delly,Lumpy,Manta or Pindel)\n\t-p PYTHON, the path of python  \n\t-o OUTDIR, the results outdir  \n\t-n SAMPLENAME, the prefix of outputfile  \n\t-c CODE_PATH, the path of CNV-P code ($HOME/CNV-PG/CNV-P/)  \n\t-s CNVCALLER, the name of CNVcaller (breakdancer,Delly,Lumpy,Manta or Pindel)   \n\t\nIn the above command, \"BASFILE\" needs to be created extra, the format show as follow:  \nfor example:  \n\n\tbam_filename    md5     study   sample  platform        library readgroup       #_total_bases   #_mapped_bases  #_total_reads   #_mapped_reads  #_mapped_reads_paired_in_sequencing     #_mapped_reads_properly_paired  %_of_mismatched_bases   average_quality_of_mapped_bases mean_insert_size        insert_size_sd median_insert_size       insert_size_median_absolute_deviation   #_duplicate_reads       coverage  \n\tHG002   -       HG002   HG002   ILLUMINA        HG002   HG002   -       -       -       -       -      --       -       569     95      568.177944      163.819637      -       35.41  \n\n\nthe Columns of \"sample\", \"mean_insert_size\", \"insert_size_sd\" and \"coverage\" are required in the step of feature extraction.  \n\nRun \"$HOME/CNV-PG/CNV-P/CNV-P_predict.sh\" to  classify candidate CNV:  \n\n\t$HOME/CNV-PG/CNV-P/CNV-P_predict.sh \\  \n        -i $HOME/CNV-PG/test_data/BAMFILE \\\n        -b $HOME/CNV-PG/test_data/BASFILE \\\n        -e $HOME/CNV-PG/test_data/VCFFILE \\\n        -p $HOME/python/bin/python3 \\\n        -o $HOME/OUTDIR \\\n        -n SAMPLENAME \\\n        -c $HOME/CNV-PG/CNV-P \\\n        -s CNVCALLER \n"
      },
      "source": "https://raw.githubusercontent.com/wonderful1/CNV-PG/master/readme.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Runing:",
        "parent_header": [
          "CNV-PG: a machine-learning framework for accurate copy number variation predicting and genotyping",
          "Getting started",
          "2.CNV-G"
        ],
        "type": "Text_excerpt",
        "value": "Similar to the CNV-P, Run \"$HOME/CNV-PG/CNV-P/CNV-G_predict.sh -h\" to see the usage information.  \n\n\t$HOME/CNV-PG/CNV-P/CNV-P_predict.sh \\  \n        -i $HOME/CNV-PG/test_data/BAMFILE \\\n        -b $HOME/CNV-PG/test_data/BASFILE \\\n        -e $HOME/CNV-PG/test_data/BEDFILE \\\n        -p $HOME/python/bin/python3 \\\n        -o $HOME/OUTDIR \\\n        -n SAMPLENAME \\\n        -c $HOME/CNV-PG/CNV-P \\\n\nThe \"BEDFILE\" shuld be 5 Columns: chromsome, start, end, size of CNV, type of CNV (DUP:1,DEL:0); this also can be generate by CNV-P (such as CNVCALLER.SAMPLENAME.fil.mer.bed)  \nfor example:  \n\n\tchr1    10482480        10483779        1300    0\n\tchr1    16151940        16155439        3500    1\n\tchr1    35101421        35111976        10556   0\n\tchr1    39998214        40001244        3031    1\n\tchr1    58743909        58744822        914     0\n\tchr1    60048636        60049661        1026    0\n\n#### Outputs:  \nSAMPLENAME.feature.txt  #the features matrix  \nSAMPLENAME.pre.prop.txt #the results of genotype and probability for each CNV  \n\nPlease help us improve CNV-PG by reporting bugs or ideas on how to make things better.  \n"
      },
      "source": "https://raw.githubusercontent.com/wonderful1/CNV-PG/master/readme.txt",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:46:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Outputs:",
        "parent_header": [
          "CNV-PG: a machine-learning framework for accurate copy number variation predicting and genotyping",
          "Getting started",
          "2.CNV-G"
        ],
        "type": "Text_excerpt",
        "value": "CNVCALLER.SAMPLENAME.fil.mer.bed # the results of candidate CNV Extract from VCF file  \nCNVCALLER.SAMPLENAME.feature.txt # the features matrix    \nCNVCALLER.SAMPLENAME.pre.prop.txt # the results of predicting which provide category and probability for each CNV  \n\n"
      },
      "source": "https://raw.githubusercontent.com/wonderful1/CNV-PG/master/readme.txt",
      "technique": "header_analysis"
    }
  ]
}