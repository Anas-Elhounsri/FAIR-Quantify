{
  "application_domain": [
    {
      "confidence": 24.38,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CardioPy/CardioPy"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "Cardiopy"
        ],
        "type": "Text_excerpt",
        "value": "Pull requests are welcome! For major changes, please open an issue first to discuss what you would like to change.\n"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-21T20:56:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-21T09:42:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Heart rate variability analysis toolkit for single-lead EKG"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9881704464766108,
      "result": {
        "original_header": "Cardiopy",
        "type": "Text_excerpt",
        "value": "A flexibile package for R-peak detection and heart rate variability analysis of single-lead EKG data. <br>\n    <img src=\"https://github.com/CardioPy/CardioPy/blob/master/example_run/advice_images/example_detections.png\">\n    \nFull documentation is available [here](https://www.biorxiv.org/content/10.1101/2020.10.06.328856v1). If you use CardioPy or a derivative in your work, please cite: <br>\nGottshall, J. L., Recoder, N., Schiff, N. D. (2020). CardioPy: An open-source heart rate variability analysis toolkit for single-lead EKG. boiRxv. doi: 10.1101/2020.10.06.328856\n \n"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9991157961675476,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "__1. Data preprocessing and cleaning__<br>\n   * Load single-lead EKG data<br>\n   * Detect R-peaks using the Pan Tompkins method\n      - Option to detect R-peaks with flexible thresholding parameters for adjustment to noisy data and varying amplitudes<br>\n      - Option to filter especially noisy data prior to peak detection<br>\n   * Built-in detection visualization methods<br>\n   * Simple artifact removal methods for manual inspection of detected peaks<br>\n  \n__2. Export methods for cleaned peak detections__<br>\n   * Compatible with commonly used software such as Kubios HRV and Artiifact<br>\n   \n__3. HRV analysis methods__<br>\n   * Standard time-domain statistics<br>\n   * Standard frequency domain statistics<br>\n      - Option for regular and denoised Multitaper power spectral estimates<br>\n   * Confidence intervals\n      - Bootstrapping or Chi Squared methods\n    \n__4. HRV statistics export__<br>\n   * Single-file report exports in json format<br>\n   * Multi-file exports into .csv spreadsheets for group statistics<br>\n \n"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9919042245478338,
      "result": {
        "original_header": "Roadmap",
        "type": "Text_excerpt",
        "value": "The authors plan for future versions of CardioPy to include:\n* Support for additional commonly used data formats\n* A graphical user interface\n \n"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CardioPy/CardioPy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/example_run/CardioPy_Example_Analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/example_run/CardioPy_Example_Analysis.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CardioPy/CardioPy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CardioPy/CardioPy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Cardiopy"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/example_run/advice_images/example_detections.png"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/example_run/advice_images/EKG_paramshift.png"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Cardiopy"
        ],
        "type": "Text_excerpt",
        "value": "Use the package manager [pip](https://pip.pypa.io/en/stable/) to install CardioPy.\n\n```bash\npip install cardiopy\n```\n"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CardioPy/CardioPy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2020, authors of CardioPy\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Cardiopy"
        ],
        "type": "Text_excerpt",
        "value": "BSD 3-Clause\n"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CardioPy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CardioPy"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 4053597,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 88576,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:41:19",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use Cardiopy",
        "parent_header": [
          "Cardiopy"
        ],
        "type": "Text_excerpt",
        "value": "Cardiopy can be used in two ways:<br>\n   1. __As a preprocessing module for the import and cleaning of clinical EKG data in conjuction\n      with HRV analyses by standard software packages.__ For this use, run through feature sets 1 and 2 (listed below). The exported '*_nn.txt*' file is compatible with all major HRV software packages <br>\n   2. __As a stand-alone HRV analysis toolkit.__ For this use, continue through the workflow from feature set 1 through 4 (listed below). To ensure analytic reproducibilty, we highly recommend exporting cleaned nn detections at feature set 2.\n"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Cardiopy"
        ],
        "type": "Text_excerpt",
        "value": "Best when run with jupyter notebook. For detailed instructions download the [example jupyter notebook file](https://github.com/CardioPy/CardioPy/blob/master/example_run/CardioPy_Example_Analysis.ipynb) and the [example jupyter notebook file for manual cleaning](https://github.com/CardioPy/CardioPy/blob/master/example_run/CardioPy_Example_Analysis_Manual.ipynb), as well as the [de-identified data segment](https://github.com/CardioPy/CardioPy/blob/master/example_run/HCXXX_2001-01-01_awake_cycle1_epoch1_222000.csv) from [github](https://github.com/CardioPy/CardioPy/blob/master/example_run) <br>\n   *For optimal performance, close figure interactions ('off' button on the top right corner) when finished with each window.*\n"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameter Optimization &amp; Cleaning Tips",
        "parent_header": [
          "Cardiopy",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* Remove false interbeat intervals LAST, after all cleaning (addition/removal of peaks) has been done.\n* To maintain integrity of the artifact logs:\n   - Only remove incorrectly added peaks with EKG.undo_add_peak NOT with EKG.rm_peak.\n   - Only re-add incorrectly removed peaks with EKG.undo_rm_peak NOT with EKG.add_peak.\n\n* If R peak detections are not accurate, try using the manual thresholding method\n\n* If R peak detections are not accurate when using the manual thresholding method, try:\n   1. changing the moving window size\n   2. changing the upshift percentage\n   3. both<br>\n        <img src=\"https://github.com/CardioPy/CardioPy/blob/master/example_run/advice_images/EKG_paramshift.png\">\n"
      },
      "source": "https://raw.githubusercontent.com/CardioPy/CardioPy/master/README.md",
      "technique": "header_analysis"
    }
  ]
}