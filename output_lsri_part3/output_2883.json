{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion"
        ],
        "type": "Text_excerpt",
        "value": "[Li, Zhuliu, Tianci Song, Jeongsik Yong, and Rui Kuang. \"Imputation of spatially-resolved transcriptomes by graph-regularized tensor completion.\" PLoS computational biology 17, no. 4 (2021): e1008218.](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008218)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kuanglab/FIST"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-15T00:17:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-20T23:40:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1: download a Visium dataset.",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Tutorial to run FIST on a Visium dataset"
        ],
        "type": "Text_excerpt",
        "value": "You can downloaded any Visium data (Space Ranger v1.0.0) to from [10x genomics website](https://support.10xgenomics.com/spatial-gene-expression/datasets/).\nIn this tutorial, we will use a human heart dataset as an example. \n\nUnder Visium Spatial for FFPE Demonstration (v1 Chemistry)/Visium Demonstration (v1 Chemistray) choose tab \"Space Ranger v1.0.0\". Click the \"Human Heart\" link, fill in the form and check the consent to access the data. \n\nWe only use filtered feature-barcode matrix data and spatial coordindates provided in the download file list. They can also be downloaded with following links [filtered feature-barcode matrix data](https://cf.10xgenomics.com/samples/spatial-exp/1.0.0/V1_Human_Heart/V1_Human_Heart_filtered_feature_bc_matrix.tar.gz) and [spatial coordinates](https://cf.10xgenomics.com/samples/spatial-exp/1.0.0/V1_Human_Heart/V1_Human_Heart_spatial.tar.gz). \n\nThen unzip the downloaded data and organize folders using the following structure under a home-folder for your experiment:\n\n       . FIST_Tutorial\n       \u251c\u2500\u2500 V1_Human_Heart\n       \u2502   \u251c\u2500\u2500 filtered_feature_bc_matrix\n       \u2502   \u2502   \u251c\u2500\u2500 barcodes.tsv.gz\n       \u2502   \u2502   \u251c\u2500\u2500 features.tsv.gz\n       \u2502   \u2502   \u2514\u2500\u2500 matrix.mtx.gz \n       \u2502   \u251c\u2500\u2500 spatial\n       \u2502   \u2502   \u251c\u2500\u2500 tissue_positions_list.csv\n\n(more about [filtered feature-barcode matrix data](https://support.10xgenomics.com/spatial-gene-expression/software/pipelines/latest/output/matrices) and [spatial coordinates](https://support.10xgenomics.com/spatial-gene-expression/software/pipelines/latest/output/images))\n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kuanglab/FIST/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kuanglab/FIST/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kuanglab/FIST"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparation for the experiments",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion"
        ],
        "type": "Text_excerpt",
        "value": "To prepare for the experiments, 1) download the directory `FIST_data` from this [link](http://compbio.cs.umn.edu/FIST_package.tgz); and 2) download all the script files in this GitHub repo to the `FIST_data` directory.\nThe folders (10x_data, Replicates_data, FIST_utils, FIST_res, SpatialNN_res, REMAP_res, GWNMF_res, ZIFA_res) in `FIST_data` are described below:"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dataset folders",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Preparation for the experiments"
        ],
        "type": "Text_excerpt",
        "value": "- **`10x_data`:** 1) The spatial gene expression tensors from 10 tissue sections (HBA1, HBA2, HH, HLN, MKC, MBC, MB1P, MB2P, MB1A, MB2A); 2) The Homo sapiens and Mus musculus protein-protein interactions (PPI) networks obtained from [BioGRID](https://thebiogrid.org/);  3) The gene ids for each of the 10 tissue sections. \n- **`Replicates_data`**: 1) The spatial gene expression tensors from 3 replicates of mouse tissue (olfactory bulb);  2) The Mus musculus protein-protein interactions (PPI) networks obtained from [BioGRID](https://thebiogrid.org/); 3) The gene ids for each of the 3 replicates.\n\n(Note: We also provide the R script `Convert2Tensor_Visium.R` and `Convert2Tensor_ST.R` with step-by-step instructions on how to convert the raw spatial transcriptomic datasets from [10x Genomics](https://support.10xgenomics.com/spatial-gene-expression/datasets/) and [St\u00e5hl et al. (2016)](https://www.spatialresearch.org/resources-published-datasets/doi-10-1126science-aaf2403/) to tensors.)\n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Utility folder",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Preparation for the experiments"
        ],
        "type": "Text_excerpt",
        "value": "- **`FIST_utils`:** The utility files required for running FIST, which includes 1) the main function `FIST.m`; 2) the supporting functions `train_valid_FIST.m` and `test_FIST.m` for the gene-wise cross-validation on the 10x Genomics data; 3) all the files in the [MATLAB Tensor Toolbox](https://gitlab.com/tensors/tensor_toolbox) package."
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Result folder",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Preparation for the experiments"
        ],
        "type": "Text_excerpt",
        "value": "The cross-validation results for FIST are stored in `FIST_res`. The cross-validation results for the baseline methods [REMAP](https://github.com/hansaimlim/REMAP), [GWNMF](https://locus.siam.org/doi/pdf/10.1137/1.9781611972801.18), [ZIFA](https://github.com/epierson9/ZIFA) and Sptial-NN are stored in `REMAP_res`, `GWNMF_res`, `ZIFA_res` and `SpatialNN_res`. (Note: Spatial-NN is a baseline method created by ourselves, the implementation is provided in this GitHub repo.)\n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1: generate the tensor data from the raw data (skip this step if directly work on the processed tensor data in the preparation step)",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Instructions to run cross-validation experiments"
        ],
        "type": "Text_excerpt",
        "value": "The tensor data are already prepared by `Convert2Tensor_Visium.R` and `Convert2Tensor_ST.R` in the folder **`10x_data`**. \n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kuanglab/FIST/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FIST"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "kuanglab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 47692,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 8621,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2: convert the visium data file into tensor data for running FIST.",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Tutorial to run FIST on a Visium dataset"
        ],
        "type": "Text_excerpt",
        "value": "Under folder **`FIST_data`**, use the following command line to run the R script for converting the data\n\nRscript Convert2Tensor_Visium.R --input FIST_Tutorial --output FIST_Tutorial_Output\n\nAfter running the script, a matlab file V1_Human_Heart.mat and a gene list file V1_Human_Heart.csv will be generated in the folder **`FIST_Tutorial_Output`**.\n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 3: run FIST program",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Tutorial to run FIST on a Visium dataset"
        ],
        "type": "Text_excerpt",
        "value": "Open the script run_FIST_Tutorial.m in matlab. Replace yourpath in the line \"work_path = 'yourpath/FIST_data';\" with the FIST installation directory. Then run the script. The imputed tensor will be saved in V1_Human_Heart_output.mat in the folder **`FIST_Tutorial_Output`**\n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note:",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Tutorial to run FIST on a Visium dataset"
        ],
        "type": "Text_excerpt",
        "value": "This tutorial only works for human and mouse visium data. To work with other species, you need to dowload PPI networks and prepare them in .mat format under the folder **`FIST_Tutorial_Output`** and change the code in data_prep_10x.m to read in the PPI.\n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2: Run cross-validations on the spot fibers or gene slices of the processed tensors",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Instructions to run cross-validation experiments"
        ],
        "type": "Text_excerpt",
        "value": "Next, open MATLAB and load the `.mat` file provided in the preparation under **`10x_data`** folder or outputted by the `Rscript` command in the previous step, `cd` to the `FIST_utils` folder, and run `V = sptensor([V.x_aligned_coords V.y_aligned_coords V.variable], V.value, [double(X) double(Y) double(Z)]);` to generate the data tensor.\n\n- **Spot-wise cross-validation on the 10x Genomics data:**  Run `FIST_crossvalidation_10xfiber.m` and `SpatialNN_crossvalidation_10xfiber.m` to test FIST and the baseline Spatial-NN respectively.\n- **Gene-wise cross-validation on the 10x Genomics data:**  Run `FIST_crossvalidation_10xslice.m` and `SpatialNN_crossvalidation_10xslice.m` to test FIST and the baseline Spatial-NN respectively. \n- **Spot-wise cross-validation on the mouse tissue replicates data:**  Run `FIST_crossvalidation_replicates_fiber.m` and `SpatialNN_crossvalidation_replicates_fiber.m` to test FIST and the baseline Spatial-NN respectively.\n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 3: Display the results",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Instructions to run cross-validation experiments"
        ],
        "type": "Text_excerpt",
        "value": "Run `plot_Figure2.m`, `plot_Figure3.m`, `plot_Figure4.m`, `plot_Figure8.m`, `plot_Figure9.m`, `plot_FigureS345.m` and `generate_S1_Table.m` to display the key results in the paper.\n\n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "requirements",
    "contact",
    "description",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:39:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial folders",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Preparation for the experiments"
        ],
        "type": "Text_excerpt",
        "value": "- **`FIST_Tutorial`:** The folder used for the tutorial.\n- **`FIST_Tutorial_Output`:** The output folder of the tutorial.\n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note:",
        "parent_header": [
          "FIST: Fast Imputation of Spatially-resolved transcriptomes by graph-regularized Tensor completion",
          "Tutorial to run FIST on a Visium dataset"
        ],
        "type": "Text_excerpt",
        "value": "This tutorial only works for human and mouse visium data. To work with other species, you need to dowload PPI networks and prepare them in .mat format under the folder **`FIST_Tutorial_Output`** and change the code in data_prep_10x.m to read in the PPI.\n"
      },
      "source": "https://raw.githubusercontent.com/kuanglab/FIST/master/README.md",
      "technique": "header_analysis"
    }
  ]
}