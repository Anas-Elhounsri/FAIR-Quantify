{
  "application_domain": [
    {
      "confidence": 32.01,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite PyDesigner",
        "type": "Text_excerpt",
        "value": "Please include the following citation if you used PyDesigner in your\nwork or publication:\n\n1. Siddhartha Dhiman, Joshua B Teves, Kathryn E Thorn, Emilie T McKinnon, Hunter G Moss, Vitria Adisetiyo, Benjamin Ades-Aron, Jelle Veraart, Jenny Chen, Els Fieremans, Andreana Benitez, Joseph A Helpern, Jens H Jensen. PyDesigner: A Pythonic Implementation of the DESIGNER Pipeline for Diffusion Tensor and Diffusional Kurtosis Imaging. bioRxiv 2021.10.20.465189. doi: 10.1101/2021.10.20.465189\n"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "The PyDesigner software packages is based upon the the references\nlisted below. Please be sure to cite them if PyDesigner was used\nin any publications.\n\n1. Jensen JH, Helpern JA, Ramani A, Lu H, Kaczynski K. Diffusional kurtosis imaging: the quantification of non-Gaussian water diffusion by means of MRI. Magn Reson Med 2005;53:1432-1440. doi: 10.1002/mrm.20508\n2. Jensen JH, Helpern JA. MRI Quantification of non-Gaussian water diffusion by kurtosis analysis. NMR Biomed 2010;23:698-710. doi: 10.1002/nbm.1518\n3. Fieremans E, Jensen JH, Helpern JA. White matter characterization with diffusional kurtosis imaging. Neuroimage 2011;58:177-188. doi: 10.1016/j.neuroimage.2011.06.006\n4. Tabesh A, Jensen JH, Ardekani BA, Helpern JA. Estimation of tensors and tensor-derived measures in diffusional kurtosis imaging. Magn Reson Med 2011;65:823-836. doi: 10.1002/mrm.22655\n5. Glenn GR, Helpern JA, Tabesh A, Jensen JH. Quantitative assessment of diffusional kurtosis anisotropy. NMR Biomed 2015;28:448-459. doi: 10.1002/nbm.3271\n6. Jensen JH, Glenn GR, Helpern JA. Fiber ball imaging. Neuroimage 2016; 124:824-833. doi: 10.1016/j.neuroimage.2015.09.049\n7. McKinnon ET, Helpern JA, Jensen JH. Modeling white matter microstructure with fiber ball imaging. Neuroimage 2018;176:11-21. doi: 10.1016/j.neuroimage.2018.04.025\n8. Ades-Aron B, Veraart J, Kochunov P, McGuire S, Sherman P, Kellner E, Novikov DS, Fieremans E. Evaluation of the accuracy and precision of the diffusion parameter EStImation with Gibbs and NoisE removal pipeline. Neuroimage. 2018;183:532-543. doi: 10.1016/j.neuroimage.2018.07.066\n9. Moss H, McKinnon ET, Glenn GR, Helpern JA, Jensen JH. Optimization of data acquisition and analysis for fiber ball imaging. Neuroimage 2019;200;690-703. doi: 10.1016/j.neuroimage.2019.07.005\n10. Moss HG, Jensen JH. Optimized rectification of fiber orientation density function. Magn Reson Med. 2020 Jul 25. doi: 10.1002/mrm.28406. Online ahead of print.\n"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/muscbridge/PyDesigner"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-06-26T18:29:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-21T10:56:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A hands-free DTI, DKI, FBI and FBWM preprocessing pipeline. Information on algorithms and preprocessing steps are available at https://www.biorxiv.org/content/10.1101/2021.10.20.465189v1 A video tutorial on PyDesigner and its usage is now available at https://www.youtube.com/watch?v=mChQFuQqX3k"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9293903174106549,
      "result": {
        "original_header": "PyDesigner",
        "type": "Text_excerpt",
        "value": "PyDesigner was inspired by `NYU's DESIGNER`_ dMRI preprocessing pipeline\nto bring pre- and post- processing to every MRI imaging scientist. With PyDesigner,\nusers are no longer confined to specific file types, operating systems,\nor complicated scripts just to extract DTI or DKI parameters \u2013\nPyDesigner makes this easy, and you will love it! \n"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9573147485771191,
      "result": {
        "original_header": "Notable Features",
        "type": "Text_excerpt",
        "value": "- **100% Python-based** scripts\n- **Minimized package dependencies** for small package footprint\n- Preprocessing designed to **boost SNR**\n- **Accurate and fast** DTI and DKI metrics via cutting-edge algorithms\n- **One-shot** preprocessing to parameter extraction\n- **Cross-platform compatibility** between Windows, Mac and Linux using Docker\n- Highly flexible and **easy to use**\n- **Parallel processing** for quicker preprocessing and parameterization\n- **Easy install** with `pip`\n- Input **file-format agnostic** \u2013 works with .nii, .nii.gz, .mif and dicoms\n- **Quality control metrics** to evaluate data integrity \u2013 SNR graphs, outlier voxels, and head motion\n- Uses the **latest techniques** from DTI/DKI/FBI literature\n- Works with **DTI**, **DKI**, **WMTI**, **FBI**, or **FBWM** datasets\n- Supports **multi-TE** dataset processing\n- **Tractography ready:** Computes ODF spherical harmonic expansion for MRtrix3, and .fib files for DSI Studio\n- Installable modules for **Python or Jupyter Notebook scripting** of custom workflows \n\nWe welcome all DTI/DKI researchers to evaluate this software and pass\non their feedback or issues through the `Issues`_ and `Discussion`_ page of this\nproject\u2019s GitHub repository. \n**System Requirements**\n   Parallel processing in PyDesigner scales almost linearly with the\n   nummber of CPU cores present. The application is also memory-intensive\n   due to the number of parameter maps being computed. \n   Based on this evaluation, for processing a single DWI using\n   PyDesigner, we recommend the following minimum system specifications: \n"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9824566484017321,
      "result": {
        "original_header": "PyDesigner in Container",
        "type": "Text_excerpt",
        "value": "PyDesigner can run on all major platforms (x86, x64, and ARM) via Docker container technology. The containerized\nform of PyDesigner is called `NeuroDock`_ and comes preloaded with PyDesigner, FSL, and MRtrix3. \nObtaining the `FSL`_ software typically requires `registration`_. Therefore, we requeust users of NeuroDock who have\nnot previously registered as a user of the FSL software complete the registration process. This allows developers\nof FSL to be recognized for the utilization of their software. \n"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pydesigner.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/m-ama/PyDesigner/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/pydesigner/Tensor_Fit_Guide.ipynb"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/pydesigner/Tensor_Fit_Guide.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "muscbridge/PyDesigner"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyDesigner"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9760511710131327,
      "result": {
        "original_header": "PyDesigner",
        "type": "Text_excerpt",
        "value": ".. image:: https://img.shields.io/docker/pulls/dmri/neurodock?style=flat-square\n   :target: https://hub.docker.com/r/dmri/neurodock\n   :alt: Docker Pulls \n.. image:: https://img.shields.io/github/downloads-pre/m-ama/pydesigner/latest/total?style=flat-square\n   :target: https://github.com/m-ama/PyDesigner/releases/latest\n   :alt: GitHub release (latest SemVer including pre-releases) \n.. image:: https://img.shields.io/readthedocs/pydesigner?style=flat-square\n   :target: https://pydesigner.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status \n.. image:: https://results.pre-commit.ci/badge/github/muscbridge/PyDesigner/master.svg\n   :target: https://results.pre-commit.ci/latest/github/muscbridge/PyDesigner/master\n   :alt: pre-commit.ci status \n.. _NYU's DESIGNER: https://github.com/NYU-DiffusionMRI/DESIGNER \n.. image:: https://i.imgur.com/YeCvz8s.png\n   :width: 512pt\n   :target: https://pydesigner.readthedocs.io/en/latest/\n   :alt: Click here to view documentation \n.. image:: https://img.youtube.com/vi/mChQFuQqX3k/maxresdefault.jpg\n    :width: 512pt\n    :alt: PyDesigner Walkthrough Video: Software Setup & Usage\n    :target: https://www.youtube.com/watch?v=mChQFuQqX3k\n \n"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999980792841785,
      "result": {
        "original_header": "Notable Features",
        "type": "Text_excerpt",
        "value": ".. _Issues: https://github.com/m-ama/PyDesigner/issues\n.. _Discussion: https://github.com/m-ama/PyDesigner/discussions \n   - Ubuntu 18.04\n   - Intel i7-9700 or AMD Ryzen 1800X [8 cores]\n   - 16 GB RAM\n   - 12 GB free storage\n   - Nvidia CUDA-enabled GPU\n \n"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9994600320795441,
      "result": {
        "original_header": "PyDesigner in Container",
        "type": "Text_excerpt",
        "value": ".. _NeuroDock: https://hub.docker.com/repository/docker/dmri/neurodock/general\n.. _FSL: https://www.fmrib.ox.ac.uk/fsl\n.. _registration: https://fsl.fmrib.ox.ac.uk/fsldownloads_registration \n"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "diffusion-maps, diffusion-mri, diffusion-preprocessing, dmri, dmriprep, dwi, kurtosis, tractography"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "LICENSE\nAuthors: Benjamin Ades-Aron (Benjamin.Ades-Aron@nyulangone.org), Siddhartha Dhiman (dhiman@musc.edu)\nCopyright (c) 2022 Medical University of South Carolina (MUSC)\n\nPermission is hereby granted, free of charge, to any non-commercial entity\n('Recipient') obtaining a copy of this software and associated\ndocumentation files (the 'Software'), to the Software solely for\nnon-commercial research, including the rights to use, copy and modify the\nSoftware, subject to the following conditions:\n\n1. The above copyright notice and this permission notice shall be\nincluded by Recipient in all copies or substantial portions of the\nSoftware.\n\n2. The software is provided 'as is', without warranty of any kind,\nexpress or implied, including but not limited to the warrantiesof\nmerchantability, fitness for a particular purpose and noninfringement. In\nno event shall the authors or copyright holders beliable for any claim,\ndamages or other liability, whether in an action of contract, tort or\notherwise, arising from, out of or in connection with the software or the\nuse or other dealings in the software.\n\n3. In no event shall MUSC be liable for direct, indirect, special,\nincidental or consequential damages in connection with the Software.\nRecipient will defend, indemnify and hold MUSC harmless from any claims or\nliability resulting from the use of the Software by recipient.\n\n4. Neither anything contained herein nor the delivery of the Software to\nrecipient shall be deemed to grant the Recipient any right or licenses\nunder any patents or patent application owned by MUSC.\n\n5. The Software may only be used for non-commercial research and may not\nbe used for clinical care.\n\n6. Any publication by Recipient of research involving the Software shall\ncite the references listed below.\n\nREFERENCES\n```\nSiddhartha Dhiman, Joshua B Teves, Kathryn E Thorn, Emilie T McKinnon,\nHunter G Moss, Vitria Adisetiyo, Benjamin Ades-Aron, Jelle Veraart, Jenny Chen,\nEls Fieremans, Andreana Benitez, Joseph A Helpern, Jens H Jensen. PyDesigner: A\nPythonic Implementation of the DESIGNER Pipeline for Diffusion Tensor and\nDiffusional Kurtosis Imaging. bioRxiv 2021.10.20.465189. doi:\nhttps://doi.org/10.1101/2021.10.20.465189\n```\n"
      },
      "source": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyDesigner"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "muscbridge"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 4025452,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 99164,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 4062,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3444,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2933,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/m-ama/PyDesigner/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2023-01-13T13:33:39Z",
        "date_published": "2023-01-13T13:38:53Z",
        "description": "This update introduces tractography via DTI, DKI, and FBI ODFs to parse into MRtrix3's `tckgen`. Additionally, _.fib_ files are also created for tractography through DSI Studio. \r\n\r\nPyDesigner is now also published on PyPI for easy installation. Simple type `pip install PyDesigner-DWI` for easy installation. It is no longer a requirement to download this repository and manually installing PyDesigner.\r\n\r\n**Added**\r\n\r\n* Tractography modules `tractography.dsistudio`, `tractography.odf`,\r\n  `tractography.sphericalsampling`\r\n* ODF computations and spherical harmonic expansion for DTI and DKI\r\n* Option to add user-defined map for tractography stopping criteria\r\n* Added option to import multiple custom maps into DSI studio file\r\n* PyDesigner can now be pulled from PyPI with `pip install PyDesigner-DWI`\r\n\r\n**Changed**\r\n\r\n* Fixed a logic in multi-TE detection algorithm that prevented certain\r\n  datasets from processing\r\n* Overhauled how inputs paths are entered. Paths to input DWIs can now\r\n  be provided to PyDesigner without comma separation\r\n* Udpate `des2dke.m` for compatibility with nii_preprocess\r\n* Replaced FBI SH with tesseral SH\r\n\r\n**Removed**\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0.0",
        "name": "Tractography Tractography Tractography!",
        "release_id": 88850474,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/88850474",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/88850474",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2022-01-14T21:38:05Z",
        "date_published": "2022-01-14T21:40:39Z",
        "description": "This version removes the requirement to separate multiple inputs with a comma. Instead of parsing arguments as\r\n\r\n```\r\npydesigner -s --rpe_pairs 1 --verbose -o [PATH TO OUTPUT] /media/sid/Secondary/Datasets/Sid_Brain/nifti/18_DKI_BIPOLAR_2mm_64dir_62slices.nii,media/sid/Secondary/Datasets/Sid_Brain/nifti/19_DKI_BIPOLAR_2mm_topup_PA.nii\r\n```\r\n users can now replace the comma delimiter with space\r\n\r\n```\r\npydesigner -s --rpe_pairs 1 --verbose -o [PATH TO OUTPUT] /media/sid/Secondary/Datasets/Sid_Brain/nifti/18_DKI_BIPOLAR_2mm_64dir_62slices.nii media/sid/Secondary/Datasets/Sid_Brain/nifti/19_DKI_BIPOLAR_2mm_topup_PA.nii\r\n```\r\n\r\nThe new processing syntax is:\r\n\r\n```\r\npydesigner [OPTIONS] $DWI1 $DWI2 $DWI3\r\n```\r\n\r\nLogic to handle datasets with multiple echo times (multi-TE) has also been overhauled to enable processing of certain problematic datasets. Documentation has also been updated to reflect new files and flags.\r\n\r\n* None\r\n\r\n**Changed**\r\n\r\n* Fixed a logic in multi-TE detection algorithm that prevented certain\r\n  datasets from processing\r\n* Overhauled how inputs paths are entered. Paths to input DWIs can now\r\n  be provided to PyDesigner without comma separation\r\n\r\n**Removed**\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0-RC12",
        "name": "New Year, New Fixes",
        "release_id": 57154874,
        "tag": "v1.0-RC12",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0-RC12",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/57154874",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/57154874",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0-RC12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2021-12-01T21:52:17Z",
        "date_published": "2022-01-14T21:21:12Z",
        "description": "This release adds overhauls Gaussian smoothing to smooth CSF and non-CSF tissue separately without propagation to minimize CSF contamination. In doing so, we aim to minimize partial volume effect bleeding into dMRI metrics.\r\n\r\n**Added**:\r\n\r\n* CSF excluded smoothing to minimize partial volume effect (PVE).\r\n  Two methods to do this have been implemented - (1) `-cf or --csf_fsl`\r\n  using FSL FAST segmentation, and (2) `-cd or --csf_adc n` using\r\n  pseudo-ADC threshold of more than 2 (ADC > 2).\r\n* Various other support functions such as `mrpreproc.csfmask()` and\r\n  `mrinfoutil.shells()` to support CSF masking. These functions can\r\n  also be used for other applications\r\n* User provided brain mask is now rotated to the same orientation as\r\n  input DWI to prevent fitting errors from incorrect masking.\r\n\r\n**Changed**\r\n\r\n* Overhaul of preprocessing.smoothing to enable NaN-smoothing\r\n* B0 volumes are now excluded from IRLLS outlier detection to ensure\r\n  there are some minimum volumes present in tensor fitting. This\r\n  prevents various fitting errors.\r\n\r\n**Removed**\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0-RC11",
        "name": "Not a turkey but minimizes CSF contamination",
        "release_id": 54342480,
        "tag": "v1.0-RC11",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0-RC11",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/54342480",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/54342480",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0-RC11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2021-06-30T15:13:31Z",
        "date_published": "2021-06-30T15:14:30Z",
        "description": "This release adds multi TE support for datasets composed of multiple TEs. Concatenated DWI is now preprocessed together, but the tensor fitting regime extracts metric maps for each TE separately. Multi TE support primes PyDesigner for triple diffusion encoding (TDE) datasets.\r\n\r\nFBI and FBWM has also been overhauled to make calculations more stable. In some rare instances, rectification of FBI fODFs can degrade them instead. This is particularly true for excellent FBI acquisitions and requires that rectification be disabled with `--no_rectify` flag.\r\n\r\nThresholds have also been updated to more accurately classify datasets into DTI, DKI or FBI.\r\n\r\n**Added**:\r\n\r\n* Support for multi echo time (TE) datasets. PyDesigner will now\r\n  preprocess DWIs with multiple TEs together, but extract diffusion\r\n  metrics for each TE separately. Users need to parse `-te`\r\n  flag to enable this feature.\r\n* Added `dwiextract` function to *mrpreproc.py* to allow\r\n  splitting of *.mif* files.\r\n* Added function `fit_regime` to *dwipy.py* to automatically run\r\n  all tensor fitting steps in an appropriate manner.\r\n* Added `highprecisionpower` to *dwipy.py* to mitigate integer\r\n  overflow error when performing FBI fODF calculation.\r\n* Flag `--no_rectify` to disable rectification of FBI fODFs. In\r\n  some cases where FBI acquistion is excellent, rectification can\r\n  degrade fODFs instead. This flag is intended to disable\r\n  rectification of such datasets.\r\n\r\n\r\n**Changed**\r\n\r\n* Maximum DKI b-value threshold has been raised to 3,000 mm/s^2,\r\n  thereby enabling DKI support for researchers using b-values higher\r\n  than 2,000 mm/s^2 but less than 3,000 mm/s^2.\r\n* IRLLS now also includes B0 volumes when evaluating goodness-of-fit\r\n  to make outlier detection more robust and accurate.\r\n* Various stability patches for FBI and FBWM to ensure error-free\r\n  extraction of FBI/FBWM metrics.\r\n\r\n**Removed**\r\n\r\n* None\r\n",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0-RC10",
        "name": "Scenic Train through Echo Mountains",
        "release_id": 45455705,
        "tag": "v1.0-RC10",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0-RC10",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/45455705",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/45455705",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0-RC10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2021-03-16T19:48:23Z",
        "date_published": "2021-03-16T19:50:17Z",
        "description": "Fixes a bug when unditortion would halt when non-integer b-values are present in datasets.\r\n\r\nMar 16, 2021\r\n\r\n**Added**:\r\n\r\n* None\r\n\r\n**Changed**\r\n\r\n* B-values are first rounded to a float insted of integer directly to\r\n  prevent errors in preprocessing\r\n\r\n**Removed**\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0-RC9",
        "name": "Stability Patch for Eddy Current Correction",
        "release_id": 39902518,
        "tag": "v1.0-RC9",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0-RC9",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/39902518",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/39902518",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0-RC9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2021-02-26T20:46:53Z",
        "date_published": "2021-02-26T20:48:13Z",
        "description": "Rician correction was missing from `-s, --standard` preprocessing for some reason, this update fixes that.\r\n\r\n**Added**:\r\n\r\n* Added missing Rician preprocessing to `-s, --standard`\r\n  preprocessing\r\n\r\n**Changed**\r\n\r\n* Potential sources of errors in FBWM have been mitigated\r\n  with error-handling\r\n\r\n**Removed**\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0-RC8",
        "name": "Rician Please",
        "release_id": 38071478,
        "tag": "v1.0-RC8",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0-RC8",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/38071478",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/38071478",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0-RC8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2021-02-12T09:25:03Z",
        "date_published": "2021-02-12T09:25:21Z",
        "description": "This release fixes issues where radial kurtosis maps is identical to axial kurtosis due to a missing AKC calculation. WMTI metrics have also been updated to match those from DKE.\r\n\r\n**Added**:\r\n\r\n* Missing AKC calculation for radial kurtosis to fix RK being a duplicate of AK. This fixes the issue of `dki_ak.nii` and `dki_rk.nii` being the same, for real this time.\r\n* Missing Docker figures in RTD documentation\r\n\r\n**Changed**\r\n\r\n* Added error mitigation when FBI cost function fails to converge to\r\n  a minimum cost\r\n* Updated WMTI calculation to follow DKE outputs\r\n\r\n**Removed**\r\n* WMTI flags, since they are now standard outputs\r\n* Unnecessary WMTI calculations",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0-RC7",
        "name": "DKI and WMTI Fixes",
        "release_id": 37954867,
        "tag": "v1.0-RC7",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0-RC7",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/37954867",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/37954867",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0-RC7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2020-12-22T21:44:08Z",
        "date_published": "2020-12-22T21:45:12Z",
        "description": "**Added**:\r\n\r\n* None\r\n\r\n**Changed**\r\n\r\n* Replaced ``preprocessing.util.bvec_is_fullsphere()`` and \r\n  ``preprocessing.util.vecs_are_fullsphere()`` with \r\n  ``preprocessing.mrinfoutil.is_fullsphere()``. Even though datasets\r\n  may be half-shelled, it is inaccurate to label them as such because\r\n  distortion relative to b-value is not linear. As such, the\r\n  ``slm=linear`` makes no sense. This new method performs the proper\r\n  checks required before labelling a DWI as fully-shelled. A DWI is\r\n  half-shelled iff max B-value is less than 3000 AND the norm of the\r\n  mean direction vector is more than 0.3.\r\n\r\n**Removed**\r\n\r\n* See above",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0-RC6",
        "name": "Eddy correction fixes for high b-value shelled datasets",
        "release_id": 35634795,
        "tag": "v1.0-RC6",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0-RC6",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/35634795",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/35634795",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0-RC6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2020-12-07T14:49:08Z",
        "date_published": "2020-12-07T14:50:40Z",
        "description": "This release adds FBI fiber tracking via DSI Studio. After computing FBI parameters, an `fbi_tractography_dsi.fib` file is also created. This new file can be loaded into DSI Studio to perform fiber tracking.\r\n\r\n**Added**:\r\n\r\n* Check for b-value scaling in .bval file so values\r\n  specified as either 2.0 or 2000 can be processed.\r\n* ``fitting.dwipy()`` can now be pointed to user-defined\r\n  bvec and bval paths. It previously required bvec and\r\n  bval files to have the same name and path as DWI.\r\n* **DSI Studio tractography** for FBI. Processing FBI dataset now\r\n  produces an ``fbi_tractography_dsi.fib`` file that can be loaded\r\n  into DSI Studio to perform tractography.\r\n\r\n**Changed**:\r\n\r\n* Fixed issue where eddy correction would attempt\r\n to QC and fail despite parsing the ``--noqc`` flag.\r\n* SNR plotting works in very specific scenarious when\r\n  input DWIs are of the same same dimensions. A try/except\r\n  loop now ensure that the entire pipeline doesn't halt\r\n  due to errors in plotting.\r\n* Fixed issue with dki_ak.nii not being saved\r\n\r\n**Removed**:\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0-RC5",
        "name": "FBI Fiber Tracking",
        "release_id": 33075197,
        "tag": "v1.0-RC5",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0-RC5",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/33075197",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/33075197",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0-RC5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2020-09-22T17:01:51Z",
        "date_published": "2020-09-22T17:02:57Z",
        "description": "Bugfix for DTI protocols\r\n\r\n**Added**:\r\n\r\n* Reslicing compatibility udpated for new MRTrix3 version\r\n  where ``mrrelice`` has been changed to ``mrgrid``.\r\n  PyDesigner will work with either versions.\r\n\r\n**Changed**:\r\n\r\n* Fixed a bad indent in tensor reordering function\r\n  that produced an error in DTI protocols.\r\n\r\n**Removed**:\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0-RC4",
        "name": "PyDesigner v1.0-RC4",
        "release_id": 31666076,
        "tag": "v1.0-RC4",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0-RC4",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/31666076",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/31666076",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0-RC4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2020-09-21T22:07:28Z",
        "date_published": "2020-09-21T22:08:09Z",
        "description": "This version now optimally determines the best maximum spherical harmonic degree (l_max) for SH expansion. This will allow the expansion to always be well-conditioned despite the number of non-B0 single shells. This is implementation is based on https://mrtrix.readthedocs.io/en/dev/concepts/sh_basis_lmax.html.\r\n\r\nfODFs computed by FBI fitting are now also saved as `fbi_fodf.nii` to allow FBI tractography. Please refer to MRtrix3's guide on using fODFs for tractography. \r\n\r\n**Added**:\r\n* FBI fODF map for FBI tractography. Users may use MRTrix3\r\n  to further process this file.\r\n* Variable maximum spherical harmonic degree to improve\r\n  robustness of FBI fit. This was fixed at 6 previous, but has\r\n  been defaulted to 6 now. Users may change l_max with the\r\n  ``-l_max n`` flag. This is based on\r\n  information found at https://mrtrix.readthedocs.io/en/dev/concepts/sh_basis_lmax.html\r\n\r\n**Changed**:\r\n\r\n* None\r\n\r\n**Removed**:\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0-RC3",
        "name": "PyDesigner v1.0-RC3",
        "release_id": 30696774,
        "tag": "v1.0-RC3",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0-RC3",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/30696774",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/30696774",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0-RC3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2020-08-25T19:02:55Z",
        "date_published": "2020-08-25T19:04:06Z",
        "description": "**Added**:\r\n* References to README.rst\r\n\r\n**Changed**:\r\n\r\n* The minimum B-value required for FBI (4000) is now inclusive\r\n  instead of exclusive. This would allow executiong of FBI/FBWM\r\n  for datasets with b=4000 mm/s^2\r\n* Convert variable ``nthreads`` to string so ``subproces.run``\r\n  can recognize the flag\r\n* Updated Slack permalink in README.rst\r\n\r\n**Removed**:\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0_RC2",
        "name": "PyDesigner v1.0-RC2",
        "release_id": 30114079,
        "tag": "v1.0_RC2",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0_RC2",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/30114079",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/30114079",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0_RC2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2020-08-19T22:06:12Z",
        "date_published": "2020-08-19T22:11:22Z",
        "description": "This is a release candidate for a stable PyDesigner release. Despite most features being in their stable state, users are still encouraged to double check all extracted metrics. The notable features here are the addition of [FBI](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4651772/) and [FBWM](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6064190/) calculations.\r\n\r\n**Added**:\r\n\r\n* Methods to perform tensor only with compatible B-values. PyDesigner\r\n  previously use all B-values in a DWI to do so. This behavior has\r\n  been updated to use only B-values less than 2500\r\n* FBI and FBWM calculations\r\n* Brief documentation on how to run PyDesigner\r\n\r\n**Changed**:\r\n\r\n* Automatically issues ``dwipreproc`` or ``dwifslpreproc`` for\r\n  compatibility with MRtrix3 >= 3.0.1\r\n* Updated minimum version for required Python modules\r\n\r\n**Removed**:\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v1.0-RC1",
        "name": "PyDesigner v1.0-RC1",
        "release_id": 29891162,
        "tag": "v1.0-RC1",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v1.0-RC1",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/29891162",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/29891162",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v1.0-RC1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2020-04-21T20:37:35Z",
        "date_published": "2020-04-21T20:38:23Z",
        "description": "**Added**:\r\n\r\n* Intrinsic inter-axonal and mean extra-axonal diffusivity\r\n  calculation to WMTI\r\n\r\n**Changed**:\r\n\r\n* Method ``json2fslgrad`` converted from class method to function\r\n  definition\r\n* ``json2fslgrad`` now transposes B0s in BVAL file in accordance with\r\n  FSL's gradient scheme\r\n* Documentation update\r\n* ``Extras`` directory renamed to ``extras``\r\n* DKE conversion scripts modified to correctly create ft and dke\r\n  parameter files\r\n\r\n**Removed**:\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v0.32",
        "name": "PyDesigner v0.32",
        "release_id": 25404874,
        "tag": "v0.32",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v0.32",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/25404874",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/25404874",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v0.32"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2020-04-10T02:33:56Z",
        "date_published": "2020-04-10T02:38:37Z",
        "description": "**Added**:\r\n\r\n* NaN check in AWF calculculation that prevents further errors in intra-axonal\r\n  and extra-axonal WMTI metrics computation\r\n\r\n**Changed**:\r\n\r\n* ``designer.fitting.dwipy`` input file detection method\r\n* ``Dockerfile_release`` now deletes the correct temporary file to prevent build\r\n  error\r\n\r\n**Removed**:\r\n\r\n* None",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v0.31",
        "name": "PyDesigner v0.31",
        "release_id": 25338271,
        "tag": "v0.31",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v0.31",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/25338271",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/25338271",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v0.31"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2020-04-07T20:31:10Z",
        "date_published": "2020-04-10T02:37:56Z",
        "description": "**Added**:\r\n\r\n* Head motion plot from on eddy_qc outputs\r\n* Outlier plot from IRRLS outlier detection\r\n* Updated documentation\r\n* Option to reslice DWI with ``--reslice [x,y,z]``\r\n\r\n**Changed**:\r\n\r\n* Flag ``--epiboost [index]`` changed to ``--rpe_pairs n``, where\r\n  users can specify the number of reverse phase encoded B0 pairs to\r\n  use in EPI correction. Non-indexed B0s were previously destructively\r\n  removed from DWI, leading to incorrect weighing of B0s in tensor\r\n  estimation. The new method now preserves all B0s, thereby allowing\r\n  faster EPI distortion correction without degrading DTI/DKI maps.\r\n* Documentation moved to ReadTheDocs\r\n* Moved B0 production module from ``designer.preprocessing.brainmask`` to\r\n  a separate function at ``designer.preprocessing.extractmeanbzero()`` \r\n  that gets called by PyDesigner main. This allows a B0.nii to be\r\n  produced regardless of the ``--mask`` flag.\r\n\r\n**Removed**:\r\n\r\n* Documentation inconsistencies",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v0.3",
        "name": "PyDesigner v0.3",
        "release_id": 25296047,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/25296047",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/25296047",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2020-02-26T20:19:30Z",
        "date_published": "2020-02-26T20:25:29Z",
        "description": "With PyDesigner, users are no longer confined to specific file types, operating systems, or complicated scripts just to extract DTI or DKI parameters \u2013 PyDesigner makes this easy, and you will love it! You may download PyDesigner from GitHub, where you\u2019ll find documentation [WIP] and a communication channel to get in touch with the devs. This is the first official release of PyDesigner ready for public use.\r\n\r\n**Key Features:**\r\n\u2022\t100% Python-based scripts\r\n\u2022\tMinimized package dependencies for small package footprint\r\n\u2022\tPreprocessing designed to boost SNR\r\n\u2022\tAccurate and fast DTI and DKI metrics via cutting-edge algorithms\r\n\u2022\tOne-shot preprocessing to parameter extraction\r\n\u2022\tCross-platform compatibility between Windows, Mac and Linux using Docker\r\n\u2022\tHighly flexible and easy to use\r\n\u2022\tEasy install with `pip`\r\n\u2022\tInput file-format agnostic \u2013 works with .nii, .nii.gz, .mif and dicoms\r\n\u2022\tQuality control metrics to evaluate data integrity \u2013 SNR graphs and outlier voxels\r\n\u2022\tUses the latest techniques from DTI/DKI literature\r\n\u2022\tBoosts TOPUP speed with `--epiboost` flag for magnitudes faster EPI correction\r\n\r\nPlease direct all issues to the issues tab. Happy tensor imaging!\r\n\r\nEDIT: Added fix for exception raised by `--mask` flag when running in a Docker environment\r\n",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/v0.2",
        "name": "The Cupid Release",
        "release_id": 23685297,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/23685297",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/23685297",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2019-12-02T16:36:33Z",
        "date_published": "2019-12-02T19:48:19Z",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/dev-0.11",
        "name": "Bugfix update for 0.11-dev",
        "release_id": 21908362,
        "tag": "dev-0.11",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/dev-0.11",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/21908362",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/21908362",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/dev-0.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TheJaeger",
          "type": "User"
        },
        "date_created": "2019-10-22T15:05:40Z",
        "date_published": "2019-10-22T15:18:14Z",
        "description": "This is the first developmental release of PyDesigner. Here's a list of what's included:\r\n\r\n**Preprocessing**\r\n1. Denoising\r\n2. Degibbs\r\n3. Eddy + EPI correction\r\n4. Smoothing\r\n5. Rician correction\r\n6. Brain masking\r\n\r\n**Tensor Fitting**\r\n1. IRWLLS outlier detection\r\n2. WLLS fitting\r\n3. AKC outlier detection\r\n4. DTI/DKI parameter extraction\r\n\r\nReport issues in issues tab. We will update milestones for `0.2-dev` release based on feedback from this release's testing.",
        "html_url": "https://github.com/muscbridge/PyDesigner/releases/tag/0.1-dev",
        "release_id": 20886789,
        "tag": "0.1-dev",
        "tarball_url": "https://api.github.com/repos/muscbridge/PyDesigner/tarball/0.1-dev",
        "type": "Release",
        "url": "https://api.github.com/repos/muscbridge/PyDesigner/releases/20886789",
        "value": "https://api.github.com/repos/muscbridge/PyDesigner/releases/20886789",
        "zipball_url": "https://api.github.com/repos/muscbridge/PyDesigner/zipball/0.1-dev"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:14:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ]
}