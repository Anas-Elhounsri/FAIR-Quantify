{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures"
        ],
        "type": "Text_excerpt",
        "value": "If you are using **Sigflow** fow now in academic field, please cite:\n\nShixiang Wang, Ziyu Tao, Tao Wu, Xue-Song Liu, Sigflow: An Automated And Comprehensive Pipeline For Cancer Genome Mutational Signature Analysis, Bioinformatics, btaa895, https://doi.org/10.1093/bioinformatics/btaa895\n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ShixiangWang/sigflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-02T15:09:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-25T09:46:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Sigflow: Streamline Analysis Workflows for Mutational Signatures, https://github.com/ShixiangWang/sigflow/pkgs/container/sigflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9408519895032538,
      "result": {
        "original_header": "Sigflow: Streamline Analysis Workflows for Mutational Signatures",
        "type": "Text_excerpt",
        "value": "**Sigflow** provides useful mutational signature analysis workflows. It can auto-extract mutational signatures,\nfit mutation data to all/specified COSMIC reference signatures (SBS/DBS/INDEL) and run bootstrapping analysis for\nstudying signature stability.  \n<details>\n<summary>Table of content</summary> \n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9961310377921984,
      "result": {
        "original_header": "Updates",
        "type": "Text_excerpt",
        "value": "- 2024-04-01: upgraded sigminer to v2.3.\n- 2023-06-08: add thread controls in boostrap fit instead of using all available cores as workers.\n- 2022-02-13: add troubleshooting section.\n- 2021-06-17: upgraded sigminer to v2.0.2 to fix [issue #31](https://github.com/ShixiangWang/sigflow/issues/31).\n- 2021-04-02: upgraded sigminer to v2.0.\n- 2021-03-29: \n  - enhanced data check.\n  - upgraded sigminer to v1.9 (the alpha version for sigminer v2).\n- 2020-12-01: Another typo for hg38 reference genome build, thanks to @PalashPandey.\n- 2020-11-30: Fix a typo which incorrectly assign the reference genome, thanks to @PalashPandey.\n- 2020-10-19: Update citation paper.\n- 2020-09-28: Copy signature estimation output pdf file from SigProfiler to result directory, **release Sigflow 1.3**.\n- 2020-09-18: Update doc for `bt` command and add doc for `show` command.\n- 2020-09-15: Release **Sigflow 1.2**\n  - Upgrade sigminer version (v1.0.18) to fix bug when outputing results for only one signatures ([#17](https://github.com/ShixiangWang/sigflow/issues/17)).\n- 2020-09-15: Prepare and try to release **Sigflow 1.1**. This is a version with its co-evolutionary R package Sigminer v1.0.17 and gold-standard de-novo signature extraction tool SigProfilerExtractor v1.0.17 as backends.\n- 2020-09-14:\n  - Add new command `show` to search cancer type specific reference signature indices and plot COSMIC signatures.\n  - Support `--refit` in SigProfiler calling.\n  - Fix a bug in identifying COSMIC v2 indices in signature fitting.\n  - Upgrade sigminer version to v1.0.17.\n- 2020-09-09:\n  - Update README and documentation of input and usage.\n- 2020-09-03: \n  - Use sigminer v1.0.15 and support inputing reference signature index in `fit` and `bt` commands.\n  - Allow users to decide if refit the signature exposures after *de novo* extraction with `refit` option.\n  - Support matrix as input.\n- 2020-08-14: Use sigminer v1.0.11 to use SigProfilerExtractor v1.0.15 to avoid issue raised from SigProfilerExtractor updates.\n- 2020-08-05: **Release Sigflow 1.0** and related Docker image. This version is based on Sigminer v1.0.10, R v4.0.2 and SigProfilerExtractor v.1.0.15.\n  - Support SigProfiler.\n  - Add `verbose` option.\n  - Add `max` option.\n  - Add `hyper` option.\n  - More flexible and reasonable configuration.\n- 2020-07-29: **Release Sigflow 0.1** using Docker. Sigflow 0.1 is based on Sigminer v1.0.9 and R v4.0.2 \n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9423744902693436,
      "result": {
        "original_header": "Test",
        "type": "Text_excerpt",
        "value": "There are some example data sets in this repository, you can find how to test different workflows in [test/test.sh](test/test.sh).\nIt is time consuming to run all tests, just pick an example test similar to your task and see how it works. Before releasing a new version of **Sigflow**, I would run all tests to make sure they work well.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8991311008870095,
      "result": {
        "original_header": "Troubleshooting",
        "type": "Text_excerpt",
        "value": "1. Error like `the supplied end is > refwidth`. ([[#32](https://github.com/ShixiangWang/sigflow/issues/32)]) \nThe reference genome for variant calling is not (perfectly) match the specified genome in `sig_tally()`. If you make sure the reference genome is correct, please try finding the variant records with uncompatible position and removing them before rerun. \n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9639196432147639,
      "result": {
        "original_header": "Other tools",
        "type": "Text_excerpt",
        "value": "- For interactive analysis and visualization, please refer to its co-evolutionary R package [sigminer](https://github.com/ShixiangWang/sigminer).\n- For mutation analysis, please refer to [Maftools](https://github.com/PoisonAlien/maftools).\n \n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ShixiangWang/sigminer.workflow/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ShixiangWang/sigflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Sigflow: Streamline Analysis Workflows for Mutational Signatures"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/docker_build.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909141307.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144059.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909143533.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909143624.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144133.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909143815.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909143950.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144214.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144310.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144402.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144940.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145001.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145039.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145114.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145214.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145523.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145546.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145649.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150037.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150444.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909151002.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150608.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150902.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150743.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150646.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909152337.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909153710.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909153800.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909154812.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909154022.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909153952.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909154325.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909154555.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200918150257.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200918150649.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200918150754.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200918150825.png"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures"
        ],
        "type": "Text_excerpt",
        "value": "If you would like to use [Docker](https://hub.docker.com/r/shixiangwang/sigflow), skip the following installation step and go to PART ['Use Sigflow docker image'](#use-sigflow-docker-image) directly.\n\n> Using Sigflow Docker image is recommended for users without experiences in programming, especially in R.\n\nRequirements:\n\n- R (>3.6).\n- R package [sigminer](https://github.com/ShixiangWang/sigminer).\n- R package [docopt](https://cran.r-project.org/package=docopt).\n\nSteps:\n\n1. Install R - follow the instructions at <https://cran.r-project.org/>.\n2. Install R packages, run\n\n```r\ninstall.packages(\"docopt\")\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"sigminer\", dependencies = TRUE)\n# Update Sigminer version\ninstall.packages(\"remotes\")\nremotes::install_github(\"ShixiangWang/sigminer\")\n# Install specific version by\n# remotes::install_github(\"ShixiangWang/sigminer@v1.0.17\")\n```\n\n3. Clone this repository, run\n\n```bash\n$ git clone https://github.com/ShixiangWang/sigflow\n```\n\n4. Link the R script as a executable file (command)\n\n```bash\n$ cd sigflow\n$ ln -s $PWD/sigflow.R /usr/local/bin/sigflow  # You can choose another place instead of /usr/bin/sigflow\n```\n\n5. Try calling `sigflow`\n\n```bash\nsigflow -h\n```\n\n> Maybe you need to restart your terminal.\n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9879725265864344,
      "result": {
        "original_header": "Sigflow: Streamline Analysis Workflows for Mutational Signatures",
        "type": "Text_excerpt",
        "value": "<img alt=\"GitHub repo size\" src=\"https://img.shields.io/github/repo-size/shixiangwang/sigflow\"> <img alt=\"Docker Automated build\" src=\"https://img.shields.io/docker/automated/shixiangwang/sigflow\"> <img alt=\"Docker Image Version (latest by date)\" src=\"https://img.shields.io/docker/v/shixiangwang/sigflow?color=blue\"> <img alt=\"Docker Image Size (latest by date)\" src=\"https://img.shields.io/docker/image-size/shixiangwang/sigflow\"> <img alt=\"Docker Pulls\" src=\"https://img.shields.io/docker/pulls/shixiangwang/sigflow\"> \n```\n       .__        _____.__                 \n  _____|__| _____/ ____\\  |   ______  _  __\n /  ___/  |/ ___\\   __\\|  |  /  _ \\ \\/ \\/ /\n \\___ \\|  / /_/  >  |  |  |_(  <_> )     / \n/____  >__\\___  /|__|  |____/\\____/ \\/\\_/  \n     \\/  /_____/  \n``` \n> Any bugs or suggestions please report to [GitHub issues](https://github.com/ShixiangWang/sigflow/issues), I will respond as soon as possible. \n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Updates",
        "type": "Text_excerpt",
        "value": "- 2024-04-01: upgraded sigminer to v2.3.\n- 2023-06-08: add thread controls in boostrap fit instead of using all available cores as workers.\n- 2022-02-13: add troubleshooting section.\n- 2021-06-17: upgraded sigminer to v2.0.2 to fix [issue #31](https://github.com/ShixiangWang/sigflow/issues/31).\n- 2021-04-02: upgraded sigminer to v2.0.\n- 2021-03-29: \n  - enhanced data check.\n  - upgraded sigminer to v1.9 (the alpha version for sigminer v2).\n- 2020-12-01: Another typo for hg38 reference genome build, thanks to @PalashPandey.\n- 2020-11-30: Fix a typo which incorrectly assign the reference genome, thanks to @PalashPandey.\n- 2020-10-19: Update citation paper.\n- 2020-09-28: Copy signature estimation output pdf file from SigProfiler to result directory, **release Sigflow 1.3**.\n- 2020-09-18: Update doc for `bt` command and add doc for `show` command.\n- 2020-09-15: Release **Sigflow 1.2**\n  - Upgrade sigminer version (v1.0.18) to fix bug when outputing results for only one signatures ([#17](https://github.com/ShixiangWang/sigflow/issues/17)).\n- 2020-09-15: Prepare and try to release **Sigflow 1.1**. This is a version with its co-evolutionary R package Sigminer v1.0.17 and gold-standard de-novo signature extraction tool SigProfilerExtractor v1.0.17 as backends.\n- 2020-09-14:\n  - Add new command `show` to search cancer type specific reference signature indices and plot COSMIC signatures.\n  - Support `--refit` in SigProfiler calling.\n  - Fix a bug in identifying COSMIC v2 indices in signature fitting.\n  - Upgrade sigminer version to v1.0.17.\n- 2020-09-09:\n  - Update README and documentation of input and usage.\n- 2020-09-03: \n  - Use sigminer v1.0.15 and support inputing reference signature index in `fit` and `bt` commands.\n  - Allow users to decide if refit the signature exposures after *de novo* extraction with `refit` option.\n  - Support matrix as input.\n- 2020-08-14: Use sigminer v1.0.11 to use SigProfilerExtractor v1.0.15 to avoid issue raised from SigProfilerExtractor updates.\n- 2020-08-05: **Release Sigflow 1.0** and related Docker image. This version is based on Sigminer v1.0.10, R v4.0.2 and SigProfilerExtractor v.1.0.15.\n  - Support SigProfiler.\n  - Add `verbose` option.\n  - Add `max` option.\n  - Add `hyper` option.\n  - More flexible and reasonable configuration.\n- 2020-07-29: **Release Sigflow 0.1** using Docker. Sigflow 0.1 is based on Sigminer v1.0.9 and R v4.0.2 \n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9984052407520835,
      "result": {
        "original_header": "Troubleshooting",
        "type": "Text_excerpt",
        "value": "The reference genome for variant calling is not (perfectly) match the specified genome in `sig_tally()`. If you make sure the reference genome is correct, please try finding the variant records with uncompatible position and removing them before rerun. \n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mutational-signatures, pipeline, sigminer"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures"
        ],
        "type": "Text_excerpt",
        "value": "This software is released under [Academic Free License (\"AFL\") v.3.0](https://opensource.org/licenses/AFL-3.0)\n\nCopyright 2020 \u00a9 Shixiang Wang, Xue-Song Liu\n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sigflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ShixiangWang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 37889,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3272,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2427,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ShixiangWang",
          "type": "User"
        },
        "date_created": "2024-04-01T09:37:32Z",
        "date_published": "2024-04-07T02:39:25Z",
        "html_url": "https://github.com/ShixiangWang/sigflow/releases/tag/2.3.0",
        "name": "2.3.0",
        "release_id": 150087701,
        "tag": "2.3.0",
        "tarball_url": "https://api.github.com/repos/ShixiangWang/sigflow/tarball/2.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ShixiangWang/sigflow/releases/150087701",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/releases/150087701",
        "zipball_url": "https://api.github.com/repos/ShixiangWang/sigflow/zipball/2.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ShixiangWang",
          "type": "User"
        },
        "date_created": "2024-04-01T07:00:15Z",
        "date_published": "2024-04-01T08:11:41Z",
        "description": "- A update to fix the issue [Cannot set hg38 for genome in container model](https://github.com/ShixiangWang/sigflow/issues/34)",
        "html_url": "https://github.com/ShixiangWang/sigflow/releases/tag/2.3",
        "name": "2.3",
        "release_id": 149197388,
        "tag": "2.3",
        "tarball_url": "https://api.github.com/repos/ShixiangWang/sigflow/tarball/2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ShixiangWang/sigflow/releases/149197388",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/releases/149197388",
        "zipball_url": "https://api.github.com/repos/ShixiangWang/sigflow/zipball/2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ShixiangWang",
          "type": "User"
        },
        "date_created": "2023-10-26T01:42:38Z",
        "date_published": "2023-10-28T03:43:35Z",
        "description": "Removed sigprofiler as the default due to the install issue. If you wanna use the sigprofiler, please previous version or install it with interactive mode.",
        "html_url": "https://github.com/ShixiangWang/sigflow/releases/tag/2.2",
        "name": "2.2",
        "release_id": 127032978,
        "tag": "2.2",
        "tarball_url": "https://api.github.com/repos/ShixiangWang/sigflow/tarball/2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ShixiangWang/sigflow/releases/127032978",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/releases/127032978",
        "zipball_url": "https://api.github.com/repos/ShixiangWang/sigflow/zipball/2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ShixiangWang",
          "type": "User"
        },
        "date_created": "2020-12-01T08:29:18Z",
        "date_published": "2020-12-01T08:30:48Z",
        "description": "Another typo about hg38 reference build.",
        "html_url": "https://github.com/ShixiangWang/sigflow/releases/tag/1.5",
        "name": "Release 1.5",
        "release_id": 34619677,
        "tag": "1.5",
        "tarball_url": "https://api.github.com/repos/ShixiangWang/sigflow/tarball/1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/ShixiangWang/sigflow/releases/34619677",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/releases/34619677",
        "zipball_url": "https://api.github.com/repos/ShixiangWang/sigflow/zipball/1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ShixiangWang",
          "type": "User"
        },
        "date_created": "2020-11-30T13:00:50Z",
        "date_published": "2020-11-30T13:01:38Z",
        "description": "Fix a typo which incorrectly assign the reference genome, thanks to @PalashPandey.\r\n\r\n**This release is not recommended, see release 1.5 please**.",
        "html_url": "https://github.com/ShixiangWang/sigflow/releases/tag/1.4",
        "name": "Release 1.4",
        "release_id": 34575721,
        "tag": "1.4",
        "tarball_url": "https://api.github.com/repos/ShixiangWang/sigflow/tarball/1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ShixiangWang/sigflow/releases/34575721",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/releases/34575721",
        "zipball_url": "https://api.github.com/repos/ShixiangWang/sigflow/zipball/1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ShixiangWang",
          "type": "User"
        },
        "date_created": "2020-09-28T07:20:42Z",
        "date_published": "2020-09-28T07:55:17Z",
        "description": "- Add signature number selection plot to result directory.",
        "html_url": "https://github.com/ShixiangWang/sigflow/releases/tag/1.3",
        "name": "Release 1.3",
        "release_id": 31873131,
        "tag": "1.3",
        "tarball_url": "https://api.github.com/repos/ShixiangWang/sigflow/tarball/1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ShixiangWang/sigflow/releases/31873131",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/releases/31873131",
        "zipball_url": "https://api.github.com/repos/ShixiangWang/sigflow/zipball/1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ShixiangWang",
          "type": "User"
        },
        "date_created": "2020-09-15T04:43:07Z",
        "date_published": "2020-09-15T04:44:45Z",
        "description": "- 2020-09-15: Release **Sigflow 1.2**\r\n  - Upgrade sigminer version (v1.0.18) to fix bug when outputing results for only one signatures ([#17](https://github.com/ShixiangWang/sigflow/issues/17)).",
        "html_url": "https://github.com/ShixiangWang/sigflow/releases/tag/1.2",
        "name": "Release 1.2",
        "release_id": 31303224,
        "tag": "1.2",
        "tarball_url": "https://api.github.com/repos/ShixiangWang/sigflow/tarball/1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ShixiangWang/sigflow/releases/31303224",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/releases/31303224",
        "zipball_url": "https://api.github.com/repos/ShixiangWang/sigflow/zipball/1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ShixiangWang",
          "type": "User"
        },
        "date_created": "2020-09-14T15:06:13Z",
        "date_published": "2020-09-14T15:07:40Z",
        "description": "- 2020-09-15: Prepare and try to release **Sigflow 1.1**. This is a version with its co-evolutionary R package Sigminer v1.0.17 and gold-standard de-novo signature extraction tool SigProfilerExtractor v1.0.17 as backends.\r\n- 2020-09-14:\r\n  - Add new command `show` to search cancer type specific reference signature indices and plot COSMIC signatures.\r\n  - Support `--refit` in SigProfiler calling.\r\n  - Fix a bug in identifying COSMIC v2 indices in signature fitting.\r\n  - Upgrade sigminer version to v1.0.17.\r\n- 2020-09-09:\r\n  - Update README and documentation of input and usage.\r\n- 2020-09-03: \r\n  - Use sigminer v1.0.15 and support inputing reference signature index in `fit` and `bt` commands.\r\n  - Allow users to decide if refit the signature exposures after *de novo* extraction with `refit` option.\r\n  - Support matrix as input.\r\n- 2020-08-14: Use sigminer v1.0.11 to use SigProfilerExtractor v1.0.15 to avoid issue raised from SigProfilerExtractor updates.",
        "html_url": "https://github.com/ShixiangWang/sigflow/releases/tag/1.1",
        "name": "Release 1.1",
        "release_id": 31264457,
        "tag": "1.1",
        "tarball_url": "https://api.github.com/repos/ShixiangWang/sigflow/tarball/1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ShixiangWang/sigflow/releases/31264457",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/releases/31264457",
        "zipball_url": "https://api.github.com/repos/ShixiangWang/sigflow/zipball/1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ShixiangWang",
          "type": "User"
        },
        "date_created": "2020-08-05T05:43:43Z",
        "date_published": "2020-08-05T07:09:04Z",
        "description": "- Support SigProfiler (v1.0.15).\r\n- More clean code.\r\n- Support maximum signature number setting.\r\n- Support removing hyper-mutation for COSMIC signatures.\r\n\r\nThis release is based on sigminer v1.0.10 and R v4.0.2.",
        "html_url": "https://github.com/ShixiangWang/sigflow/releases/tag/1.0",
        "name": "Release 1.0",
        "release_id": 29350024,
        "tag": "1.0",
        "tarball_url": "https://api.github.com/repos/ShixiangWang/sigflow/tarball/1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ShixiangWang/sigflow/releases/29350024",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/releases/29350024",
        "zipball_url": "https://api.github.com/repos/ShixiangWang/sigflow/zipball/1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ShixiangWang",
          "type": "User"
        },
        "date_created": "2020-07-29T14:42:55Z",
        "date_published": "2020-07-29T14:45:16Z",
        "description": "- First stable release of sigflow\r\n- Well configured and tested Docker image",
        "html_url": "https://github.com/ShixiangWang/sigflow/releases/tag/0.1",
        "name": "Release 0.1",
        "release_id": 29076217,
        "tag": "0.1",
        "tarball_url": "https://api.github.com/repos/ShixiangWang/sigflow/tarball/0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ShixiangWang/sigflow/releases/29076217",
        "value": "https://api.github.com/repos/ShixiangWang/sigflow/releases/29076217",
        "zipball_url": "https://api.github.com/repos/ShixiangWang/sigflow/zipball/0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use Docker to run Sigflow",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures",
          "Use cases"
        ],
        "type": "Text_excerpt",
        "value": "If you use Docker to run Sigflow, you cannot directly call `sigflow` command. Instead, you should use `sudo docker run --rm -v /your_local_path:/docker_path shixiangwang/sigflow` to start a Docker container.\n\nFor example, if you want to accomplish the same task shown in `extract` command above, you need to run:\n\n```sh\n$ sudo docker run --rm -v /your_local_path:/docker_path shixiangwang/sigflow \\\n  extract -i /docker_path/tcga_laml.maf.gz \\\n          -o /docker_path/test_maf \\\n          -m MAF -r 10 -T 4 --max 10\n```\n\nHere,\n\n- `--rm` will delete this container when this task is finished.\n- `-v` is used for mounting your local directory `/your_local_path` as `/docker_path` in Docker image. **This is important**. You need to use the Docker container path in Sigflow arguments. So there must be a file called `/your_local_path/tcga_laml.maf.gz` exists in your computer, it will be treated as `/docker_path/test_maf` in the container.\n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:20:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use Sigflow docker image",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures"
        ],
        "type": "Text_excerpt",
        "value": "Use specified version (recommended way):\n\n```bash\n# docker pull shixiangwang/sigflow:version, e.g.\n$ docker pull shixiangwang/sigflow:1.0\n```\n\n> NOTE: Sigflow version has no prefix `v`.\n\nCurrent available tag versions:\n\n- <img alt=\"Docker Image Version\" src=\"https://img.shields.io/docker/v/shixiangwang/sigflow/0.1?color=blue\"> <img alt=\"Docker Image Size (tag)\" src=\"https://img.shields.io/docker/image-size/shixiangwang/sigflow/0.1\">\n- <img alt=\"Docker Image Version\" src=\"https://img.shields.io/docker/v/shixiangwang/sigflow/1.0?color=blue\"> <img alt=\"Docker Image Size (tag)\" src=\"https://img.shields.io/docker/image-size/shixiangwang/sigflow/1.0\">\n- <img alt=\"Docker Image Version\" src=\"https://img.shields.io/docker/v/shixiangwang/sigflow/1.1?color=blue\"> <img alt=\"Docker Image Size (tag)\" src=\"https://img.shields.io/docker/image-size/shixiangwang/sigflow/1.1\">\n- <img alt=\"Docker Image Version\" src=\"https://img.shields.io/docker/v/shixiangwang/sigflow/1.2?color=blue\"> <img alt=\"Docker Image Size (tag)\" src=\"https://img.shields.io/docker/image-size/shixiangwang/sigflow/1.2\">\n- <img alt=\"Docker Image Version\" src=\"https://img.shields.io/docker/v/shixiangwang/sigflow/1.3?color=blue\"> <img alt=\"Docker Image Size (tag)\" src=\"https://img.shields.io/docker/image-size/shixiangwang/sigflow/1.3\">\n- <img alt=\"Docker Image Version\" src=\"https://img.shields.io/docker/v/shixiangwang/sigflow/1.5?color=blue\"> <img alt=\"Docker Image Size (tag)\" src=\"https://img.shields.io/docker/image-size/shixiangwang/sigflow/1.5\">\n- <img alt=\"Docker Image Version\" src=\"https://img.shields.io/docker/v/shixiangwang/sigflow/2.0?color=blue\"> <img alt=\"Docker Image Size (tag)\" src=\"https://img.shields.io/docker/image-size/shixiangwang/sigflow/2.0\">\n- <img alt=\"Docker Image Version\" src=\"https://img.shields.io/docker/v/shixiangwang/sigflow/2.1?color=blue\"> <img alt=\"Docker Image Size (tag)\" src=\"https://img.shields.io/docker/image-size/shixiangwang/sigflow/2.1\">\n- <img alt=\"Docker Image Version\" src=\"https://img.shields.io/docker/v/shixiangwang/sigflow/2.2?color=blue\"> <img alt=\"Docker Image Size (tag)\" src=\"https://img.shields.io/docker/image-size/shixiangwang/sigflow/2.2\">\n\nUse latest version:\n\n```bash\n$ docker pull shixiangwang/sigflow:latest\n```\n\n> The latest version uses the latest (successful build) commit from GitHub, so it may have not been\n> prepared or fully tested. **So, be careful!**\n\nRun the docker by:\n\n```bash\n$ docker run shixiangwang/sigflow\n```\n\nSee [test/test_docker.sh](test/test_docker.sh) for examples.\n\nIf you want to go into the docker container terminal, run\n\n```bash\n$ docker run --rm --entrypoint /bin/bash -it shixiangwang/sigflow\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Commands and options",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "All Sigflow commands and options are described as the following.\n\n```\n=================================================================\nsigflow: Streamline Analysis Workflows for Mutational Signatures.\n\nAuthor: Shixiang Wang (wangshx@shanghaitech.edu.cn)\nCopyright: AFL@2020 [https://opensource.org/licenses/AFL-3.0]\n\nDesc:\n  There are several subcommands.\n  ==\n  extract - extract signatures by either automatic or semi-automatic way.\n            Of note, when you use manual way, you need to run 2 times, \n            firstly you should set --manual to get signature estimation results,\n            and secondly you should set --manual --number N to get N signatures.\n  ==\n  fit     - fit signatures in >=1 samples based on COSMIC reference signatures.\n  ==\n  bt      - run bootstrap signature fitting analysis in >=1 samples.\n  ==\n  show    - show some useful information or plots. See README for details.\n\nUsage:\n  sigflow extract --input=<file> [--output=<outdir>] [--mode=<class>] [--manual --number <sigs>] [--max <max>] [--genome=<genome>] [--nrun=<runs>] [--cores=<cores>] [--sigprofiler] [--refit] [--hyper] [--verbose]\n  sigflow fit --input=<file> [--output=<outdir>] [--index=<index>] [--mode=<class>] [--genome=<genome>] [--verbose]\n  sigflow bt  --input=<file> [--output=<outdir>] [--index=<index>] [--mode=<class>] [--genome=<genome>] [--nrun=<runs>] [--verbose]\n  sigflow show [--isearch=<keyword>] [--index=<index> --mode=<class>] [--output=<outdir>] [--verbose]\n  sigflow (-h | --help)\n  sigflow --version\n\nOptions:\n  -h --help     Show help message.\n  --version     Show version.\n  -i <file>, --input <file>       input CSV/EXCEL/MAF file or VCF directory path.\n  -o <outdir>, --output <outdir>  output directory path [default: ./sigflow_result/].\n  --index <index>                 reference signature index separated by comma, e.g. '1,2,3' [default: ALL].\n  -m <class>, --mode <class>      extract/fit mode, can be one of SBS, DBS, ID, MAF (for three types), CN (not supported in fit subcommand) [default: SBS].\n  --manual                        enable manual extraction, set -N=0 for outputing signature estimation firstly.\n  -N <sigs>, --number <sigs>      extract specified number of signatures [default: 0].\n  --max <max>                     maximum signature number, default is auto-configured, should >2 [default: -1].\n  -g <genome>, --genome <genome>  genome build, can be hg19, hg38 or mm10, [default: hg19].\n  -r <runs>, --nrun <runs>        run times of NMF (extract) or bootstrapping (bt) to get results [default: 30].\n  -T <cores>, --cores <cores>     cores to run the program, large dataset will benefit from it [default: 1].\n  --refit                         refit the de-novo signatures with quadratic programming or nnls (SigProfiler).\n  --hyper                         enable hyper mutation handling in COSMIC signatures (not used by SigProfiler approach).\n  --sigprofiler                   enable automatic extraction by SigProfiler software.\n  --isearch <keyword>             search and how cancer type specific reference signature index by keyword, e.g. breast.\n  -v, --verbose                   print verbose message.\n\n=================================================================\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Sigflow supports input data in VCF/MAF/CSV/EXCEL format. The file format is auto-detected by Sigflow.\n\nFor SBS/DBS/INDEL data in CSV (including TSV) or EXCEL format, the following columns typically described in MAF format are necessary:\n\n- `Hugo_Symbol`: gene symbol\n- `Chromosome`: chromosome name, e.g. \"chr1\"\n- `Start_Position`: start positionof the variant (1-based)\n- `End_Position`: end position of the variant (1-based) \n- `Reference_Allele`: reference allele of the variant, e.g. \"C\"\n- `Tumor_Seq_Allele2`: tumor sequence allele, e.g. \"T\"\n- `Variant_Classification`: variant classification, e.g. \"Missense_Mutation\"\n- `Variant_Type`: variant type, e.g. \"SNP\"\n- `Tumor_Sample_Barcode`: sample identifier\n\nFor copy number segment data in in CSV (including TSV) or EXCEL format, the following columns are necessary:\n\n- `Chromosome`: chromosome name, e.g. \"chr1\"\n- `Start.bp`: start breakpoint position of segment\n- `End.bp`: end breakpoint position of segment\n- `modal_cn`: integer copy number value\n- `sample`: sample identifier\n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use cases",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures"
        ],
        "type": "Text_excerpt",
        "value": "Example datasets along with many example code are available in clone repository above (you can read it online at [here](https://github.com/ShixiangWang/sigflow/tree/master/test)).\n\nThe following parts give an example for each command.\n\nResult directory of any command has the following structure.\n\n- Files with extension`.RData` and `.rds`  are R related files to reproduce the results, and can be imported into R for further analysis and visualization.\n- Files with extension`.pdf` are common visualization results used for communication.\n- Files with extension `.csv` are formated data tables used for inspection, communication or further analysis.\n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`extract` command",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures",
          "Use cases"
        ],
        "type": "Text_excerpt",
        "value": "```sh\n$ # Assume you have done the clone step\n$ # git clone https://github.com/ShixiangWang/sigflow\n$ cd sigflow/test\n$ sigflow extract -i tcga_laml.maf.gz -o test_results/test_maf -m MAF -r 10 -T 4 --max 10\n```\n\nThis will auto-extract SBS/DBS/INDEL signatures from data `toga_laml.maf.gz` (a gzipped MAF file from [Maftools](https://github.com/PoisonAlien/maftools)) by 10 Bayesian NMF runs with 4 computer threads and output results to directory `test_results/test_maf`. At default, **Bayesian NMF** approach is used, it starts from 10 signatures (set by `--max`) and reduces to a optimal signature number. If `--sigprofiler` is enabled, i.e.\n\n```sh\n$ sigflow extract -i tcga_laml.maf.gz -o test_results/test_maf -m MAF -r 10 -T 4 --max 10 --sigprofiler\n```\n\nSigflow will use the [SigProfiler](https://github.com/AlexandrovLab/SigProfilerExtractor) to auto-extract signatures, here it will extract 2 to 10 signatures and determine the optimal solution.\n\n> NOTE, **in practice, set `-r` to a value  `>=10` is recommended** for auto-extraction with Bayesian NMF, `>=100` for semi-automatic extraction with basic NMF and automatic extraction with SigProfiler (enabled by `--sigprofiler`).\n\nResults of `extract` command have the following structure:\n\n![](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909141307.png)\n\n> Here, no DBS records found in input data, so no corresponding result files exist.\n\n- Tally: mutation catalogue data and plots of all samples or individual samples are stored in files/directory contains `tally`.\n\n  ![](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144059.png)\n\n  ![](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909143533.png)\n\n  ![](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909143624.png)\n\n- Signature: signature profile (relative contribution in each signature) data and plots of all samples are stored in files contains `signature`.\n\n  ![](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144133.png)\n\n  ![](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909143815.png)\n\n  ![](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909143950.png)\n\n- Exposure: exposure profile (relative and absolute contribution of each signature to each sample) data and plots of all samples are stored in files contains `exposure`.\n\n  ![](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144214.png)\n\n  ![](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144310.png)\n\n  ![](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144402.png)\n\n- Similarity: to understand the etiologies of extracted signatures, cosine similarity analysis is applied to extracted signatures and reference signatures from COSMIC database. The result files contains `similarity` and `best_match`.\n\n  ![image-20200909144940222](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909144940.png)\n\n  ![image-20200909145001347](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145001.png)\n\n  ![image-20200909145039312](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145039.png)\n\n  ![image-20200909145114261](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145114.png)\n\n  ![image-20200909145214337](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145214.png)\n\n- Clustering: the samples can be clustered based on signature relative exposure. This analysis is done by kmeans and the results are outputed (Note, the cluster number is same as signature number).\n\n  ![image-20200909145522952](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145523.png)\n\n  ![image-20200909145546261](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145546.png)\n\n  ![image-20200909145649068](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909145649.png)\n\n  \n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`fit` command",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures",
          "Use cases"
        ],
        "type": "Text_excerpt",
        "value": "```sh\n$ # Assume you have done the clone step\n$ # git clone https://github.com/ShixiangWang/sigflow\n$ cd sigflow/test\n$ sigflow fit -i tcga_laml.maf.gz -o test_results/test_fitting -m MAF\n```\n\nThis will auto-fit input data `tcga_laml.maf.gz` to COSMIC SBS/DBS/INDEL signatures. Signature exposure data tables and plots are outputed.\n\nResults of `fit` command have the following structure:\n\n![image-20200909150037803](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150037.png)\n\n> Here, no DBS records found in input data, so no corresponding result files exist.\n>\n> `legacy` represents COSMIC v2 SBS signatures and `SBS` represents COSMIC v3 SBS signatures.\n\n- Tally: same as results from `extract` command.\n\n- Fitting: fitted relative/absolute signature exposure, reconstructed error (calculated by Frobenius norm) data and corresponding plots of all samples are stored in files contains `fitting`.\n\n  ![image-20200909150444291](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150444.png)\n\n  ![image-20200909151002018](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909151002.png)\n\n  > Relative signature exposure in each sample.\n\n  ![image-20200909150607896](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150608.png)\n\n  > Absolute signature exposure in each sample.\n\n  ![image-20200909150902466](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150902.png)\n\n  > Visualization of relative signature exposure.\n\n  ![image-20200909150743352](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150743.png)\n\n  > Visualization of absolute signature exposure.\n\n  \n\n  ![image-20200909150646872](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909150646.png)\n\n  > Reconstructed error for each sample.\n\n  \n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`bt` command",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures",
          "Use cases"
        ],
        "type": "Text_excerpt",
        "value": "Bootstrapping analysis was performed to evaluate the stability of signature exposure. For a tumor, this analysis firstly resamples mutations based on the observed mutation type (component) frequency and then applies signature fitting to the bootstrapping samples. For example, if a tumor harbors 100 mutations and 20 mutations are classified into T[C>T]T, then we resample 100 mutations and the probability to assign these mutation to T[C>T]T is 0.2. If we repeat such process many times, we can estimate the confidence interval of exposure of a signature in this tumor.\n\n> More details please read paper [Detecting presence of mutational signatures in cancer with confidence](https://academic.oup.com/bioinformatics/article/34/2/330/4209996).\n\n```sh\n$ # Assume you have done the clone step\n$ # git clone https://github.com/ShixiangWang/sigflow\n$ cd sigflow/test\n$ sigflow bt -i tcga_laml.maf.gz -o test_results/test_bt -m SBS -r 5\n```\n\nThis will  resample mutation catalogue of each sample based on observed mutation type frequency and run signature fitting using COSMIC SBS/DBS/INDEL signatures. The process is repeated multiple times and controlled by option `-r` (here is 5). This bootstrap analysis is used to estimate the instability of signature exposure. Data tables and plots of bootstrap signature exposures, errors and p values under different exposure cutoff are outputed.\n\n> NOTE, in practice, set `-r` to a value  `>=100` is recommended.\n\nResults of `bt` command have the following structure:\n\n![image-20200909152336875](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909152337.png)\n\n- Tally: same as results from `extract` command.\n\n- Bootstrap fitting: fitted relative/absolute signature exposure, reconstructed error (calculated by Frobenius norm of residue), signature instability data and corresponding plots of all bootstrapping samples and individual samples are stored in files/directory contains `bootstrap`.\n\n  ![image-20200909153710051](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909153710.png)\n\n  ![image-20200909153800225](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909153800.png)\n\n  > Bootstrap signature exposure distribution.\n\n  ![image-20200909154812780](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909154812.png)\n\n  > For each sample, the distribution of bootstrap exposures is plotted as boxplot and the fitting result with original input data is labelled by triangle. \n\n  ![image-20200909154022111](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909154022.png)\n\n  > Note, the sample data without bootstrapping process are also fitted and labelled as `type = \"optimal\"`\n\n  ![image-20200909153952230](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909153952.png)\n\n  ![image-20200909154325658](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909154325.png)\n\n  > The p values are calculated as the proportion of how many bootstrapping samples have exposures under specified exposure cutoff.\n\n  ![image-20200909154555142](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200909154555.png)\n\n  > Signature exposure instability is measured as MRSE between exposures in bootstrap samples and exposures in the original samples for each tumor/patient.\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`show` command",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures",
          "Use cases"
        ],
        "type": "Text_excerpt",
        "value": "`show` command provides extra information to help user analyze signatures. This includes:\n\n1. Search cancer type specific signature indices, this may help user to set the reference indices in `fit` and `bt` commands. This information could read [online](https://shixiangwang.github.io/sigminer-doc/sigflow.html#cancer-type-specific-signature-index-database).\n2. Generate COSMIC reference signature profiles.\n\nFor the no.1 task, one could run\n\n```sh\n$ sigflow show --isearch breast\n```\n\nThis will generate the following output:\n\n![image-20200918150257473](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200918150257.png)\n\nFor the no.2 task, one could run\n\n```sh\nsigflow show --mode SBS --index 1,2,3,7a -o test_show_sig_profile\n```\n\nThis will generate signature profile for signature 1,2,3,7. For SBS, two versions of plots exist.\n\n![image-20200918150649303](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200918150649.png)\n\nCOSMIC v2:\n\n![image-20200918150754770](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200918150754.png)\n\nCOSMIC v3:\n\n![image-20200918150825289](https://gitee.com/ShixiangWang/ImageCollection/raw/master/png/20200918150825.png)\n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use Docker to run Sigflow",
        "parent_header": [
          "Sigflow: Streamline Analysis Workflows for Mutational Signatures",
          "Use cases"
        ],
        "type": "Text_excerpt",
        "value": "If you use Docker to run Sigflow, you cannot directly call `sigflow` command. Instead, you should use `sudo docker run --rm -v /your_local_path:/docker_path shixiangwang/sigflow` to start a Docker container.\n\nFor example, if you want to accomplish the same task shown in `extract` command above, you need to run:\n\n```sh\n$ sudo docker run --rm -v /your_local_path:/docker_path shixiangwang/sigflow \\\n  extract -i /docker_path/tcga_laml.maf.gz \\\n          -o /docker_path/test_maf \\\n          -m MAF -r 10 -T 4 --max 10\n```\n\nHere,\n\n- `--rm` will delete this container when this task is finished.\n- `-v` is used for mounting your local directory `/your_local_path` as `/docker_path` in Docker image. **This is important**. You need to use the Docker container path in Sigflow arguments. So there must be a file called `/your_local_path/tcga_laml.maf.gz` exists in your computer, it will be treated as `/docker_path/test_maf` in the container.\n"
      },
      "source": "https://raw.githubusercontent.com/ShixiangWang/sigminer.workflow/master/README.md",
      "technique": "header_analysis"
    }
  ]
}