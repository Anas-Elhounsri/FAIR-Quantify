{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Licenses and Acknowledgements",
        "parent_header": [
          "mspack",
          "Caveats"
        ],
        "type": "Text_excerpt",
        "value": "mspack is available under the Apache License. It uses the tinyxml2 library by Lee Thomason, SHA1 by Dominik Reichl and base64 by William Sherif. Consult the source code for license information of these libraries. The mspack XML parsing code is partially based on the parsing code of [Masscomp](https://github.com/iochoa/MassComp) by Ruochen Yang, Xi Chen, and Idoia Ochoa.\n"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 0.9092391839457384,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fhanau/mspack"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-18T20:37:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-13T05:36:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "C++ lossless and lossy mass spectrometry compression"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9973283429029225,
      "result": {
        "original_header": "mspack",
        "type": "Text_excerpt",
        "value": "mspack is a C++ program for lossless and lossy mass spectrometry data compression, achieving a high compression ratio without sacrificing performance. It includes an example implementation for mzXML and mzML as well as a format-agnostic API.\n \n"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9556731491421359,
      "result": {
        "original_header": "API",
        "type": "Text_excerpt",
        "value": "The API is defined in ```include/mspack.h```. The mspack binary represents an example implementation to showcase the capabilities of the program. Users are encouraged to use the API for advanced usage and to use the mspack transforms in other software.\n \n"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9793190163390827,
      "result": {
        "original_header": "Caveats",
        "type": "Text_excerpt",
        "value": "Due to the XML library we use, whitespace is not preserved in the decoded file, although this does not cause a functional difference for the decoded file as XML is invariant to the addition or removal of whitespace. SHA1 checksum tags are recalculated when needed. \nThe current implementation depends on the mz values being increasing. This is sometimes not the case if a third data point is present, i.e. ion mobility in addition to mz and intensity. \nThe mzXML implementation does not support all features as the format has been superseded by mzML. mzXML is limited to 32-bit files and does not support the block-based I/O feature.\n \n"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9685826133826636,
      "result": {
        "original_header": "Authors",
        "type": "Text_excerpt",
        "value": "Felix Hanau and Idoia Ochoa, University of Illinois at Urbana-Champaign\n \n"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fhanau/mspack/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Encode lossily using default error",
        "parent_header": [
          "mspack",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "```./mspack --mzmle --mz-fixed-abs --int-log examples/BSA1.mzml BSA-lossy.mgz```"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fhanau/mspack/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fhanau/mspack"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mspack"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fhanau/mspack/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Licenses and Acknowledgements",
        "parent_header": [
          "mspack",
          "Caveats"
        ],
        "type": "Text_excerpt",
        "value": "mspack is available under the Apache License. It uses the tinyxml2 library by Lee Thomason, SHA1 by Dominik Reichl and base64 by William Sherif. Consult the source code for license information of these libraries. The mspack XML parsing code is partially based on the parsing code of [Masscomp](https://github.com/iochoa/MassComp) by Ruochen Yang, Xi Chen, and Idoia Ochoa.\n"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mspack"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "fhanau"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 259685,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 6091,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1062,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "mspack"
        ],
        "type": "Text_excerpt",
        "value": "- C++11 compatible compiler, preferably gcc/clang.\n- While a Unix environment is not required, compiling on Windows using other compilers might fail due to missing headers.\n- [gzip](https://ftp.gnu.org/gnu/gzip/), should already be installed on a Unix system. On Linux, please make sure to use the latest gzip version (gzip 1.10). The gzip included in macOS works as well.\n- [bsc](https://github.com/IlyaGrebnov/libbsc) for better, but slower compression (recommended)\n"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:06:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Binary Usage:",
        "parent_header": [
          "mspack"
        ],
        "type": "Text_excerpt",
        "value": "Compile by running make in src/ directory. This will place the binary in the top directory. Running the program without arguments will provide a help interface explaining the program usage, including lossy and advanced options. Use the .mgz file extension to use the gzip backend and .bsc to use bsc, which will improve compression significantly, but slow down compression.\n\nmzML encode:\n```mspack --mzmle (options) <in> <out><.mgz|.bsc>```\n\nmzml decode:\n```mspack --mzmld <in><.mgz|.bsc> <out>```\n\nmzXML encode:\n```mspack --mzxmle (options) <in> <out><.mgz|.bsc>```\n\nmzXML decode:\n```mspack --mzxmld <in><.mgz|.bsc> <out>```\n"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "mspack"
        ],
        "type": "Text_excerpt",
        "value": "The examples directory contains a test file which can be compressed using the following commands:"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Encode",
        "parent_header": [
          "mspack",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "```./mspack --mzmle examples/BSA1.mzml BSA.mgz```"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Encode file using bsc backend",
        "parent_header": [
          "mspack",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "```./mspack --mzmle examples/BSA1.mzml BSA.bsc```"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Decode",
        "parent_header": [
          "mspack",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "```./mspack --mzmld BSA.bsc BSA-decoded.mzml```\n"
      },
      "source": "https://raw.githubusercontent.com/fhanau/mspack/main/readme.md",
      "technique": "header_analysis"
    }
  ]
}