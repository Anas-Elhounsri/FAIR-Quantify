{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "ehreact",
          "Contact",
          "Copyright"
        ],
        "type": "Text_excerpt",
        "value": "Project based on the \n[Computational Molecular Science Python Cookiecutter](https://github.com/molssi/cookiecutter-cms) version 1.5.\n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 15.51,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age,\nbody size, disability, ethnicity, gender identity and expression, level of\nexperience, nationality, personal appearance, race, religion, or sexual\nidentity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\nMoreover, project maintainers will strive to offer feedback and advice to\nensure quality and consistency of contributions to the code.  Contributions\nfrom outside the group of project maintainers are strongly welcomed but the\nfinal decision as to whether commits are merged into the codebase rests with\nthe team of project maintainers.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an\nappointed representative at an online or offline event. Representation of a\nproject may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at 'eheid@mit.edu'. The project team will\nreview and investigate all complaints, and will respond in a way that it deems\nappropriate to the circumstances. The project team is obligated to maintain\nconfidentiality with regard to the reporter of an incident. Further details of\nspecific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 1.4, available at\n[http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hesther/ehreact"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Copyright",
        "parent_header": [
          "ehreact",
          "Contact"
        ],
        "type": "Text_excerpt",
        "value": "Copyright (c) 2021, Esther Heid\n\n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to contribute\n\nWe welcome contributions from external contributors, and this document\ndescribes how to merge code changes into this ehreact. \n\n## Getting Started\n\n* Make sure you have a [GitHub account](https://github.com/signup/free).\n* [Fork](https://help.github.com/articles/fork-a-repo/) this repository on GitHub.\n* On your local machine,\n  [clone](https://help.github.com/articles/cloning-a-repository/) your fork of\n  the repository.\n\n## Making Changes\n\n* Add some really awesome code to your local fork.  It's usually a [good\n  idea](http://blog.jasonmeridth.com/posts/do-not-issue-pull-requests-from-your-master-branch/)\n  to make changes on a\n  [branch](https://help.github.com/articles/creating-and-deleting-branches-within-your-repository/)\n  with the branch name relating to the feature you are going to add.\n* When you are ready for others to examine and comment on your new feature,\n  navigate to your fork of ehreact on GitHub and open a [pull\n  request](https://help.github.com/articles/using-pull-requests/) (PR). Note that\n  after you launch a PR from one of your fork's branches, all\n  subsequent commits to that branch will be added to the open pull request\n  automatically.  Each commit added to the PR will be validated for\n  mergability, compilation and test suite compliance; the results of these tests\n  will be visible on the PR page.\n* If you're providing a new feature, you must add test cases and documentation.\n* When the code is ready to go, make sure you run the test suite using pytest.\n* When you're ready to be considered for merging, check the \"Ready to go\"\n  box on the PR page to let the ehreact devs know that the changes are complete.\n  The code will not be merged until this box is checked, the continuous\n  integration returns checkmarks,\n  and multiple core developers give \"Approved\" reviews.\n\n# Additional Resources\n\n* [General GitHub documentation](https://help.github.com/)\n* [PR best practices](http://codeinthehole.com/writing/pull-requests-and-other-good-practices-for-teams-using-github/)\n* [A guide to contributing to software packages](http://www.contribution-guide.org)\n* [Thinkful PR example](http://www.thinkful.com/learn/github-pull-request-tutorial/#Time-to-Submit-Your-First-PR)\n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/.github/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-27T14:53:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-30T22:15:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Create and score extended Hasse diagrams"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9502937552940132,
      "result": {
        "original_header": "ehreact",
        "type": "Text_excerpt",
        "value": "\nA Python package for extracting and scoring reaction templates based on extended Hasse diagrams. The corresponding manuscript is available  [here](<https://pubs.acs.org/doi/10.1021/acs.jcim.1c00921>). \n**Documentation:** Documentation and a tutorial of EHreact is available at https://hesther.github.io/ehreact/.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9383584879327748,
      "result": {
        "original_header": "Creating a diagram",
        "type": "Text_excerpt",
        "value": "Use `train.py` to create a Hasse diagram and specify `--data_path <path>` (the path to the known reactions or substrates), `--train_mode <str>` (`transition_state` for reaction mode if the input is reactions or `single_reactant` for single reactant mode if the input is single substrates), `--save_path <path>` (file to save the created diagram to, optional), and `--save_plot <path>` (file to save an image of the diagram, optional). For example, to create a diagram for the reactions in `ehreact/data/reaction_training.dat`, run\n```\npython train.py --data_path ehreact/data/reaction_training.dat --save_path test_transition_state.pkl --train_mode transition_state --save_plot test.png\n```\n \nwhich creates an image of the diagram saved under `test.png` and a pickle file of the diagram under `test_transition_state.pkl`. Please refer to the [tutorial](https://hesther.github.io/ehreact/getting_started.html#tutorial) for more examples and options.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8973534304757713,
      "result": {
        "original_header": "Scoring on a diagram",
        "type": "Text_excerpt",
        "value": "Use `predict.py` to score a set of query substrates or reactions. Specify `--test_path <path>` (the path to the query reactions or substrates), `--load_path <path>` (the path to a saved Hasse diagram pickle file), `--predict_mode <str>` (`transition_state` to score reactions, `multi_reactant` to propose products based on reactants and score all reactions, `single_reactant` to propose products and co-substrates based on a reactant and score all reactions). For example, to score the reactions in `ehreact/data/reaction_test.dat`, run\n```\npython predict.py --test_path ehreact/data/reaction_test.dat --load_path test_transition_state.pkl --predict_mode transition_state\n```\n \nPlease refer to the [tutorial](https://hesther.github.io/ehreact/getting_started.html#tutorial) for more examples and options.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hesther/ehreact/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hesther/ehreact/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hesther/ehreact/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hesther/ehreact"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ehreact"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hesther/ehreact/main/devtools/legacy-miniconda-setup/before_install.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation of ehreact",
        "parent_header": [
          "ehreact",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "To install ehreact, make a new conda environment via\n\n1. `conda env create -f environment.yml`\n2. `conda activate ehreact`\n3. `pip install -e .`\n\n(Note: If you have an old version of conda (< conda 4.4), the second command is `source activate ehreact`). The environment\nsimply contains python, numpy, rdkit, and typed-argument-parser. If you do not like to use conda, you can instead install these\npackages yourself, and then run `pip install -e .`.\n\nTo check your installation, try to import ehreact in a Python session::\n\n`import ehreact`\n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation of optional packages",
        "parent_header": [
          "ehreact",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you want to automatically atom-map reactions, download ReactionDecoder from [Github](https://github.com/asad/ReactionDecoder/releases) (tested with rdt-2.4.1-jar-with-dependencies.jar), put the jar file into the folder `ReactionDecoder` (within the ehreact package folder) and rename the file to `ReactionDecoder.jar` This is optional, and you can run EHreact without ReactionDecoder.\n\nPlotting Hasse diagrams relies on dot (install for example graphviz) and rsvg-convert. If you do not have these packages on your system already, you can install both via homebrew on Macos::\n\n1. `brew install graphviz`\n2. `brew install librsvg`\n  \nor via apt-get on Linux (Ubuntu, Debian)::\n\n1. `sudo apt-get install graphviz`\n2. `sudo apt-get install librsvg2-bin`\n\nThere are other options to install, too. Installing dot and rsvg-convert is optional, and you can run EHreact without both, but will not be able to plot diagrams to an image.\n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9930381565726347,
      "result": {
        "original_header": "ehreact",
        "type": "Text_excerpt",
        "value": "**Documentation:** Documentation and a tutorial of EHreact is available at https://hesther.github.io/ehreact/.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8847113716585578,
      "result": {
        "original_header": "Creating a diagram",
        "type": "Text_excerpt",
        "value": "Use `train.py` to create a Hasse diagram and specify `--data_path <path>` (the path to the known reactions or substrates), `--train_mode <str>` (`transition_state` for reaction mode if the input is reactions or `single_reactant` for single reactant mode if the input is single substrates), `--save_path <path>` (file to save the created diagram to, optional), and `--save_plot <path>` (file to save an image of the diagram, optional). For example, to create a diagram for the reactions in `ehreact/data/reaction_training.dat`, run\n```\npython train.py --data_path ehreact/data/reaction_training.dat --save_path test_transition_state.pkl --train_mode transition_state --save_plot test.png\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hesther/ehreact/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\nCopyright 2021 Esther Heid\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the\nfollowing conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following\ndisclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\nproducts derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ehreact"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hesther"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 252469,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1344,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "ehreact"
        ],
        "type": "Text_excerpt",
        "value": "Ehreact uses Python 3.6+ and a number of python package. We assume you have Conda on your system. If this is not the case yet, install [Miniconda](<https://conda.io/miniconda.html>). However, Conda is optional and you may choose to install packages otherwise.\n"
      },
      "source": "https://raw.githubusercontent.com/hesther/ehreact/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:46:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ]
}