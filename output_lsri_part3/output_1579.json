{
  "application_domain": [
    {
      "confidence": 0.803964373900272,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/InscriptaLabs/BioCantor"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "BioCantor"
        ],
        "type": "Text_excerpt",
        "value": "Users are invited to submit pull requests. Maintainers reserve the right\nto close PRs if the requested change is deemed inappropriate for the \nlibrary or if resources are not available to sufficiently review the PR.\n\nSubmissions should follow the following guidelines:\n\n- Code must adhere to [PEP 8](https://www.python.org/dev/peps/pep-0008/) \n(as enforced by [Flake8](https://flake8.pycqa.org/en/latest/)) and \n[Black](https://pypi.org/project/black/) style conventions with maximum \nline length of 120.\n- New public elements must be documented with [NumPy style docstrings](https://numpydoc.readthedocs.io/en/latest/format.html)\n- Comprehensive unit tests must be added for new features.\n- Full test suite must pass. It is recommended that you run the full test suite locally before pushing to GitHub."
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-03T18:44:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-15T14:10:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9023211820514183,
      "result": {
        "original_header": "What does the name BioCantor mean?",
        "type": "Text_excerpt",
        "value": "Cantor devised the elegant [diagonal argument](https://en.wikipedia.org/wiki/Cantor%27s_diagonal_argument) \nproving that there is more than one level of infinity. \nAlso check out the [Cantor set](https://en.wikipedia.org/wiki/Cantor_set)\n, which could exist as a genomic feature in a universe where the \nbuilding blocks of genetic material are uncountably infinite.\n \n"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "BioCantor"
        ],
        "type": "Text_excerpt",
        "value": "Full package documentation is available on [Read The Docs](https://biocantor.readthedocs.io/en/latest/).\n"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "To build documentation HTML pages locally",
        "parent_header": [
          "BioCantor",
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "Install as above but with `libraries` and `docs` extras:\n\n```\npip install -e .[libraries,docs]\n```\n\nYou will also need to have [pandoc](https://pandoc.org/) installed. This can\nbe installed using `conda` with\n\n```\nconda install -y pandoc\n```\n\nYou can now build the docs with:\n\n```\ncd docs\nmake html\n```\n"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://biocantor.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/InscriptaLabs/BioCantor/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/location_operations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/location_operations.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/vignettes.ipynb"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/vignettes.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/instantiating_objects.ipynb"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/instantiating_objects.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/sequence_operations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/sequence_operations.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/parent_operations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/parent_operations.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/parsing_variants.ipynb"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/parsing_variants.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/parsing_gff3.ipynb"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/parsing_gff3.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/annotation_collections.ipynb"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/annotation_collections.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/parsing_genbank.ipynb"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/parsing_genbank.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/exporting_to_files.ipynb"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/docs/source/exporting_to_files.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "InscriptaLabs/BioCantor"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BioCantor"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "BioCantor"
        ],
        "type": "Text_excerpt",
        "value": "BioCantor can be added to a Python environment as follows.\n\nFrom PyPi:\n\n```\npip install BioCantor\n```\n\nLatest release from GitHub:\n\n```\npip install git+https://github.com/InscriptaLabs/BioCantor\n```\n\nFrom source code:\n\n```\ncd BioCantor\npip install .\n```"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BioCantor"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "InscriptaLabs"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1490460,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://numpydoc.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ifiddes",
          "type": "User"
        },
        "date_created": "2022-10-24T16:36:17Z",
        "date_published": "2023-01-26T19:35:13Z",
        "html_url": "https://github.com/InscriptaLabs/BioCantor/releases/tag/0.19.0",
        "name": "0.19.0",
        "release_id": 90344700,
        "tag": "0.19.0",
        "tarball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/tarball/0.19.0",
        "type": "Release",
        "url": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/90344700",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/90344700",
        "zipball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/zipball/0.19.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ifiddes",
          "type": "User"
        },
        "date_created": "2021-09-17T15:12:30Z",
        "date_published": "2021-09-17T15:59:22Z",
        "description": "## [0.10.0] 2021-09-17\r\n### Changed\r\n- `CDSInterval` object now has methods to access the number of codons and codon locations in both chunk-relative and chromosome coordinates. Chromosome accessors will always return the full original CDS.\r\n- If duplicate sequence identifiers are found when parsing GenBank/FASTA files, an exception is raised.\r\n- The `scan_codon_locations` methods on `CDSInterval` now operate on two algorithms, one simpler algorithm for canonical transcripts (no programmed frameshifts and no offset frames) and the original more robust algorithm otherwise. ",
        "html_url": "https://github.com/InscriptaLabs/BioCantor/releases/tag/0.10.0",
        "name": "0.10.0",
        "release_id": 49759622,
        "tag": "0.10.0",
        "tarball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/tarball/0.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759622",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759622",
        "zipball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/zipball/0.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ifiddes",
          "type": "User"
        },
        "date_created": "2021-09-03T19:24:47Z",
        "date_published": "2021-09-17T16:01:47Z",
        "description": "## [0.9.0] 2021-09-03\r\n### Fixed\r\n- `LocusTag` parser is now able to handle CDS-only features, and have more informative error reporting for locus tag collisions. \r\n- GenBank parser no longer raises an exception for multi-stranded feature; instead it warns and moves on",
        "html_url": "https://github.com/InscriptaLabs/BioCantor/releases/tag/0.9.0",
        "name": "0.9.0",
        "release_id": 49759758,
        "tag": "0.9.0",
        "tarball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/tarball/0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759758",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759758",
        "zipball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/zipball/0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ifiddes",
          "type": "User"
        },
        "date_created": "2021-08-12T23:39:24Z",
        "date_published": "2021-09-17T16:02:02Z",
        "description": "## [0.8.0]\r\n### Fixed\r\n- Do not trust feature type annotations to define coding vs. non-coding when parsing GenBank files; only rely on the presence/absence of CDS intervals associated with the transcript.\r\n- Setup requirements, build tests, and sphinx config updated to allow building of documentation without installing the package.\r\n- GenBank parser was not handling `exon` features as direct descendants of `gene` correctly.\r\n\r\n### Changed\r\n- `Sorted` parser now sorts features by position, then gene/mRNA/CDS/other. This helps deal with genbank files that are oddly ordered.\r\n- Introduced new `Hybrid` GenBank parser mode that does both `LocusTag` and `Sorted` parsing at the same time.\r\n- All `.chromosome_location` accessor of `Interval` objects always return the full length `Location`, even if the `Interval` itself is chunk relative such that the underlying `Location` object cannot represent the full length. As a result of this, the `.chromosome_location` of a chunk-relative location cannot have associated sequence information.\r\n\r\n### Added\r\n- `TranscriptInterval` and `FeatureInterval` now have accessor methods to get `Location` objects for their introns/gaps and full span.",
        "html_url": "https://github.com/InscriptaLabs/BioCantor/releases/tag/0.8.0",
        "name": "0.8.0",
        "release_id": 49759776,
        "tag": "0.8.0",
        "tarball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/tarball/0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759776",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759776",
        "zipball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/zipball/0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ifiddes",
          "type": "User"
        },
        "date_created": "2021-07-08T21:36:17Z",
        "date_published": "2021-09-17T16:02:16Z",
        "description": "## [0.7.0]\r\n### Changed\r\n- GenBank position-sorted parser can now handle CDS records that are not directly following a gene record.\r\n- Refactor `Location`, `Parent` and `Sequence` to have base classes `AbstractLocation`, `AbstractParent` and `AbstractSequence` that are in the base of the `inscripta.biocantor.location` module. This greatly helps with resolving circular imports.\r\n- Optimized checking `sequence` and `location` members to explicitly check for `None`. This avoids a call to `__len__`.\r\n- `CompoundInterval._single_intervals` is now lazily evaluated, because it is expensive to generate many `SingleInterval` objects.\r\n- `CompoundInterval` now stores the positions as two sorted integer lists.\r\n- `CompoundInterval` constructor accepts tuples in addition to lists of integer values to avoid list construction overhead.\r\n- `CompoundInterval.is_overlapping` and `CompoundInterval.is_contiguous` are lazily evaluated.\r\n- `CompoundInterval._combine_blocks` now always removes empty blocks. The new implementation also avoids producing a new interval if the result is identical to the start.\r\n- `unique_value_or_none` was pulled out of `Parent` into its own separate function with an associated cache. This function was optimized to use sets.\r\n- Added `__slots__` to all child classes of `AbstractLocation`, `AbstractSequence` and `AbstractParent`.\r\n- Removed unnecessary call to `strip_location_info()` in `Sequence` constructor.\r\n- Removed all unnecessary instances of constructing lists, replacing them with iterators and tuples.\r\n- GenBank export now defaults to not updating `/translation` tag in order to save execution time. The original behavior can be restored by setting `update_translations=True`.\r\n\r\n### Fixed\r\n- GenBank parser was not properly handling 0bp intervals, which can be sometimes seen as a way to represent insertions.\r\n- GenBank parser was not capturing CDS qualifiers when parsing eukaryotic style GenBank files that have mRNA level features",
        "html_url": "https://github.com/InscriptaLabs/BioCantor/releases/tag/0.7.0",
        "name": "0.7.0",
        "release_id": 49759793,
        "tag": "0.7.0",
        "tarball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/tarball/0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759793",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759793",
        "zipball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/zipball/0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ifiddes",
          "type": "User"
        },
        "date_created": "2021-05-27T22:00:14Z",
        "date_published": "2021-09-17T16:02:29Z",
        "description": "## [0.6.0]\r\n### Changed\r\n- Added `raise_on_reserved_attributes` flag to GFF3 export that controls whether reserved attributes lead to warnings or exceptions.\r\n- Added more top-level imports to simplify imports\r\n- Try more common identifiers when parsing gene symbols from GFF3 files\r\n- Attempt to infer frame from GFF3 files with null Phase columns on CDS records\r\n- Update Tox tests to have a separate formatting case",
        "html_url": "https://github.com/InscriptaLabs/BioCantor/releases/tag/0.6.0",
        "name": "0.6.0",
        "release_id": 49759804,
        "tag": "0.6.0",
        "tarball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/tarball/0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759804",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759804",
        "zipball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/zipball/0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ifiddes",
          "type": "User"
        },
        "date_created": "2021-05-14T15:52:04Z",
        "date_published": "2021-09-17T16:02:41Z",
        "description": "## [0.5.0]\r\n### Changed\r\n- Added ability to parse non-transcribed features from GenBank records without a parent /gene record in the position-sorted parser.\r\n- Added ability to export `SeqRecord` annotations when writing to GenBank.\r\n- Added methods to `FeatureInterval` that mirror `TranscriptInterval`.\r\n- Added support for translating with non-standard codon tables.",
        "html_url": "https://github.com/InscriptaLabs/BioCantor/releases/tag/0.5.0",
        "name": "0.5.0",
        "release_id": 49759816,
        "tag": "0.5.0",
        "tarball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/tarball/0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759816",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/49759816",
        "zipball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/zipball/0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pamelarussell",
          "type": "User"
        },
        "date_created": "2021-04-29T20:50:09Z",
        "date_published": "2021-04-29T21:03:28Z",
        "description": "## [0.4.5]\r\n### Changed\r\n- Remove contributor license agreement, which is superseded by the MIT license.\r\n\r\n## [0.4.4]\r\n### Fixed\r\n- Handle genbank files with broken intervals gracefully.\r\n- Fix interval parsing for negative strand features.\r\n\r\n### Changed\r\n- The tag `Name` can now be used to identify a feature interval in a GFF3/GenBank file.\r\n\r\n\r\n## [0.4.3]\r\n### Fixed\r\n- `AnnotationCollection._subset_parent()` now uses `seq_chunk_to_parent` and pulls out the chromosome ID from the chromosome record.\r\n- `CDSInterval.from_dict()` now passes along the parent provided.\r\n\r\n### Added\r\n- `strict_parent_compare` parameter for binary set theory operations.\r\n- `AnnotationCollection.query_by_position()` has a new boolean flag `expand_location_to_children` that defaults to False, but if set to True \r\nwill expand the interval to contain the transcripts. When False, it may be the case that transcripts will have their underlying location objects \r\nsliced down from their original coordinates. The original coordinates are still retained as integer members. \r\nIf the query position is entirely intronic for an isoform, this isoform will have a `EmptyLocation` chunk relative location,\r\nbut will still retain a `chromosome_location`.\r\n\r\n### Changed\r\n- Added a parent-level sequence identifier to the output of `biocantor.io.parser.seq_chunk_to_parent()`.\r\n- Added a `strand` argument to `biocantor.io.parser.seq_chunk_to_parent()` that allows for the sequence chunk to be strand-referenced.\r\n- `Location.parent_to_relative_location` and `Location.location_relative_to` now has a `optimize_blocks` flag that defaults to True. \r\nIf this flag is False, then these operations will not collapse adjacent or overlapping blocks. \r\n\r\n\r\n## [0.4.2]\r\n### Added\r\n- ``Location.union_preserve_overlaps()`` function added. This function produces the union of intervals, while preserving all overlaps.\r\n\r\n## [0.4.1]\r\n### Added\r\n- Improved docstrings on interval objects.\r\n- Location objects now have a `full_span` optional flag on all `intersction`, `overlaps` and `contains` functions. This flag has compound intervals be treated as their full span, i.e. from start to end, regardless of compound structure. This flag defaults to `False` in all cases. When two `CompoundInterval` are compared, they are both always compared in their full spans when this flag is `True`.\r\n- `Interval` and `IntervalCollection` objects now are capable of being lifted to arbitrary coordinate systems, returning a new copy. These operations rely on first lifting to a shared chromosomal coordinate system.\r\n\r\n### Changed\r\n- New `SequenceType` enum stores whether interval sequences are `chromosome` or `chunk_relative`.\r\n- All objects that accept `SequenceType` information accepts either the `SequenceType` enum OR raw strings.\r\n- `AnnotationCollection` will look at the provided `parent_or_seq_chunk_parent` to see if the bounds of the object can be inferred from the parent object. This is only performed if no `start`/`end` are explicitly provided. If neither are provided, the bounds of the collection are the bounds of its children.\r\n- Refactored `CDSInterval` to be based on `AbstractFeatureInterval`. Moved `CDSPhase` and `CDSFrame` to accomodate the circular import this introduced.\r\n- All `Interval` objects are allowed to have *chromosome* parents without sequence information.    \r\n- Removed versioneer in favor of hard coded versions.\r\n\r\n\r\n### Fixed\r\n- Some functions on Interval objects were not operating in chromosome coordinates\r\n- `AnnotationCollection.query_by_position()` was not returning valid results if the parent was a sequence chunk.\r\n- GFF3 parser was not inferring transcripts for a gene feature with no children.\r\n- Fixed a bug with missing gene biotypes in GFF3 parsing.\r\n\r\n\r\n## [0.4.0]\r\n### Added\r\n- All Interval objects now have the ability to be built from subsets of genome sequence (called `sequence_chunk`).\r\n- Querying `AnnotationCollection` objects by coordinates produce new objects with sliced sequences with chunk-relative coordinates. \r\n- Interval objects built from sequence subsets can be exported in chunk-relative coordinates to GFF3/GenBank.\r\n- Interval objects have new coordinate translation methods that operate in chunk-relative space. Coordinate methods that operate in genomic coordinate space were retained.\r\n- Non-transcribed feature identifier parsing looks in the `note` special field for identifiers.\r\n\r\n### Changed\r\n- All Interval objects now must be built directly from coordinates, and do not accept Location objects.\r\n- All Interval objects now hide their Location member. This is to avoid confusion about what coordinate system the Location may be on.\r\n- All interval collections have `__iter__` functions that call `__iter_children()` functions.\r\n- All Interval objects have their core `._location` object hidden, and offer two accessors -- `.chromosome_location` and `.chunk_relative_location`. Note that `.chromosome_location` will not have sequence information attached to it if a sequence chunk was used. Generally, it is advised to not access `.location` objects directly.\r\n\r\n\r\n## [0.3.1]\r\n### Fixed\r\n- Feature interval identifier regex should exactly match qualifier keys\r\n\r\n### Added\r\n- Unified API for identifiers on all interval objects with new property methods `.id` and .`name`.\r\n\r\n\r\n## [0.3.0]\r\n### Fixed\r\n- `Biotype` enum improperly mapped `protein_coding` and `protein-coding` to different values. Added `mRNA` as another synonym for this type.\r\n- GFF3, BED and GenBank export from Interval objects now raise an exception when the sequence name field is null.\r\n\r\n### Added\r\n- Parse `FeatureInterval` and `FeatureIntervalCollection` from GFF3 or GenBank, and write back as well.\r\n\r\n### Changed\r\n- `FeatureInterval` now has multiple types, stored as sets. `FeatureIntervalCollection` stores the union of these types, in addition to optionally having its own type.\r\n\r\n\r\n## [0.2.0] 2021-01-06\r\n### Fixed\r\n- `CompoundInterval.relative_interval_to_parent_location()` in the case of overlapping blocks. Had previously been double counting overlap region.\r\n- `CompoundInterval.gap_list()` in the case of overlapping blocks. Had been raising an error in that case.\r\n\r\n### Added\r\n- `CDSInterval.scan_codon_locations()` method. Returns an iterator over codon locations.\r\n- Implement `__hash__()` for `CompoundInterval` and `CDSInterval`\r\n- Implemented data structures for `TranscriptInterval` and `FeatureInterval` that model transcribed and non-transcribed genomic features.\r\n- Implemented data structures for `GeneInterval` and `FeatureIntervalCollection`, that model groups of intervals as genes or generic feature groups.\r\n- Implemented a wrapper data structure `AnnotationCollection` that contains groups of genes and non-transcribed feature groups.\r\n- Implemented the ability to build BioCantor gene models from GFF3 and GenBank files.\r\n- Implemented the ability to export the above data structures as GFF3, GenBank, BED and NCBI TBL formats.\r\n- Implemented Marshmallow dataclasses that allow for serialization and deserialization of the above data structures.\r\n- Copied the bins implementation from gffutils to avoid needing the full dependency set in a minimal install.\r\n- Added a Biotype enumeration that tracks known biotypes. \r\n- Added caching of sequence retrieval to `Interval` objects.\r\n\r\n### Changed\r\n- Migrated sphinx documentation from `automodapi` to `autoapi`. \r\n- Performance upgrades to interval arithmetic operations.\r\n\r\n### Removed\r\n- `CDSInterval.intersect()` method. Frame math was incorrect for complex CDSs and was deemed too difficult to implement correctly.\r\n",
        "html_url": "https://github.com/InscriptaLabs/BioCantor/releases/tag/v0.4.5",
        "name": "0.4.5",
        "release_id": 42231420,
        "tag": "v0.4.5",
        "tarball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/tarball/v0.4.5",
        "type": "Release",
        "url": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/42231420",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/42231420",
        "zipball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/zipball/v0.4.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pamelarussell",
          "type": "User"
        },
        "date_created": "2020-11-17T20:50:54Z",
        "date_published": "2020-11-17T23:55:50Z",
        "html_url": "https://github.com/InscriptaLabs/BioCantor/releases/tag/0.1.1",
        "name": "v0.1.1",
        "release_id": 34090541,
        "tag": "0.1.1",
        "tarball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/tarball/0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/34090541",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/34090541",
        "zipball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/zipball/0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pamelarussell",
          "type": "User"
        },
        "date_created": "2020-11-03T19:53:31Z",
        "date_published": "2020-11-03T19:58:01Z",
        "description": "Initial release",
        "html_url": "https://github.com/InscriptaLabs/BioCantor/releases/tag/0.1.0",
        "name": "v0.1.0",
        "release_id": 33422331,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/33422331",
        "value": "https://api.github.com/repos/InscriptaLabs/BioCantor/releases/33422331",
        "zipball_url": "https://api.github.com/repos/InscriptaLabs/BioCantor/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:30:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 21
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "parent_header": [
          "BioCantor"
        ],
        "type": "Text_excerpt",
        "value": "Bug reports, support requests and feature requests should be submitted \nas issues on GitHub. We will make a reasonable effort to address issues \ndependent on available resources.\n"
      },
      "source": "https://raw.githubusercontent.com/InscriptaLabs/BioCantor/main/README.md",
      "technique": "header_analysis"
    }
  ]
}