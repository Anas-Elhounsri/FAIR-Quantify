{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pdxgx/pepsickle"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-23T22:16:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-30T16:48:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A context aware tool for proteasomal cleavage predictions"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9993952447733971,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "`pepsickle` is an open-source command line tool for  proteasomal cleavage prediction. `pepsickle` is designed with flexibility in mind allows for the use of either direct amino acid sequences or the use of `FASTA` files. Predictions can also be determined based on a variety of available models including those trained on: *in-vivo* epitope data (default), *in-vitro* constitutive proteasome data, or *in-vitro* immunoproteasome data. For information on available models and how they were trained, see the [companion paper in *Bioinformatics*](https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/btab628/6363787) highlighting this tool, as well as the accompanying [paper repo](https://github.com/pdxgx/pepsickle-paper) with code for training and reproduction.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pdxgx/pepsickle/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pdxgx/pepsickle/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pdxgx/pepsickle/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pdxgx/pepsickle"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pepsickle "
      },
      "source": "https://raw.githubusercontent.com/pdxgx/pepsickle/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation via Conda",
        "parent_header": [
          "pepsickle <a href=\"https://travis-ci.com/github/pdxgx/pepsickle\"><img alt=\"Build Status\" src=\"https://travis-ci.com/pdxgx/pepsickle.svg?token=MwZdsoYXNWVDeSqTyWLs&amp;branch=master\" /></a>",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "We recommend using a version control system like [Anaconda](https://docs.anaconda.com/anaconda/install/) to make sure version requirements for `pepsickle` don't interfere with other packages in use. \n\nFor ease of use, we've provided a `.yml` file for easy conda setup. After conda is installed, from the main directory simply type:\n\n```\nconda env create --file pepsickle_conda_build.yml \nconda activate pepsickle-v0-2-2\n```\nThis conda environment contains both `pepsickle` and it's dependencies, which allows use with no other steps required.\n"
      },
      "source": "https://raw.githubusercontent.com/pdxgx/pepsickle/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation via pip",
        "parent_header": [
          "pepsickle <a href=\"https://travis-ci.com/github/pdxgx/pepsickle\"><img alt=\"Build Status\" src=\"https://travis-ci.com/pdxgx/pepsickle.svg?token=MwZdsoYXNWVDeSqTyWLs&amp;branch=master\" /></a>",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you do not want to use conda, but already have [Python 3](https://www.python.org/downloads/) installed, `pepsickle` can simply be installed via the command line by using `pip`:\n\n```\npip install pepsickle\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pdxgx/pepsickle/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pdxgx/pepsickle/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Benjamin Weeder, Mary A. Wood, Ellysia Li,\n                   Abhinav Nellore, and Reid F. Thompson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/pdxgx/pepsickle/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "pepsickle <a href=\"https://travis-ci.com/github/pdxgx/pepsickle\"><img alt=\"Build Status\" src=\"https://travis-ci.com/pdxgx/pepsickle.svg?token=MwZdsoYXNWVDeSqTyWLs&amp;branch=master\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "`pepsickle` is licensed under the [MIT](https://choosealicense.com/licenses/mit/) license. See [LICENSE](https://github.com/pdxgx/pepsickle/blob/master/LICENSE) for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/pdxgx/pepsickle/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pepsickle"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "pdxgx"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 45551,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pdxgx/pepsickle/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weederb23",
          "type": "User"
        },
        "date_created": "2023-12-29T23:03:27Z",
        "date_published": "2023-12-29T23:05:43Z",
        "description": "updates ML models trained with consistent sklearn versions",
        "html_url": "https://github.com/pdxgx/pepsickle/releases/tag/v0.2.2",
        "name": "v0.2.2",
        "release_id": 135388592,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/pdxgx/pepsickle/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/pdxgx/pepsickle/releases/135388592",
        "value": "https://api.github.com/repos/pdxgx/pepsickle/releases/135388592",
        "zipball_url": "https://api.github.com/repos/pdxgx/pepsickle/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weederb23",
          "type": "User"
        },
        "date_created": "2022-12-26T20:49:29Z",
        "date_published": "2022-12-26T20:51:28Z",
        "description": "release of pepsickle v0.2.1 with updated sklearn models trained using stable version 1.2.0\r\n",
        "html_url": "https://github.com/pdxgx/pepsickle/releases/tag/v0.2.1",
        "name": "v0.2.1",
        "release_id": 87262543,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/pdxgx/pepsickle/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/pdxgx/pepsickle/releases/87262543",
        "value": "https://api.github.com/repos/pdxgx/pepsickle/releases/87262543",
        "zipball_url": "https://api.github.com/repos/pdxgx/pepsickle/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weederb23",
          "type": "User"
        },
        "date_created": "2021-08-31T22:01:51Z",
        "date_published": "2021-08-31T22:06:41Z",
        "description": "Bug Fixes:\r\n\r\n- fixes error when lower case amino acids are presented in protein sequence",
        "html_url": "https://github.com/pdxgx/pepsickle/releases/tag/v0.1.2",
        "release_id": 48777567,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/pdxgx/pepsickle/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/pdxgx/pepsickle/releases/48777567",
        "value": "https://api.github.com/repos/pdxgx/pepsickle/releases/48777567",
        "zipball_url": "https://api.github.com/repos/pdxgx/pepsickle/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weederb23",
          "type": "User"
        },
        "date_created": "2021-07-22T16:40:31Z",
        "date_published": "2021-07-22T16:44:54Z",
        "description": "initial release of pepsickle package for proteasomal cleavage",
        "html_url": "https://github.com/pdxgx/pepsickle/releases/tag/v0.1.0",
        "name": "Initial pepsickle release",
        "release_id": 46618793,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/pdxgx/pepsickle/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/pdxgx/pepsickle/releases/46618793",
        "value": "https://api.github.com/repos/pdxgx/pepsickle/releases/46618793",
        "zipball_url": "https://api.github.com/repos/pdxgx/pepsickle/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "pepsickle <a href=\"https://travis-ci.com/github/pdxgx/pepsickle\"><img alt=\"Build Status\" src=\"https://travis-ci.com/pdxgx/pepsickle.svg?token=MwZdsoYXNWVDeSqTyWLs&amp;branch=master\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "`pepsickle` relies on `Python 3` and a few other required packages. A complete list of dependencies can be found in [requirements.txt](https://github.com/pdxgx/pepsickle/blob/master/requirements.txt)\n"
      },
      "source": "https://raw.githubusercontent.com/pdxgx/pepsickle/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:11:41",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use",
        "parent_header": [
          "pepsickle <a href=\"https://travis-ci.com/github/pdxgx/pepsickle\"><img alt=\"Build Status\" src=\"https://travis-ci.com/pdxgx/pepsickle.svg?token=MwZdsoYXNWVDeSqTyWLs&amp;branch=master\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "`pepsickle` allows for multiple methods of use. By default, predictions are made based on a model trained using *in-vivo* epitope data. \n\nDuring predictions, the upstream and downstream amino acid contexts are used and we therefore recommend including at least 8 amino acids on each side of any sites of interest. If less than the recommended context is given (such as in the case of residues near the beginning or end of a protein sequence) `pepsickle` will auto-pad inputs. `X`'s submitted to the prediction model are interpreted as the presence of an amino acid sequence with unkonwn identity, while auto-padding `*` is interpreted as the absence of amino acid context all together. \n\nFor predictions on single short amino acid sequences, `pepsickle` can be run\nusing the `-s` option:\n\n`pepsickle -s VSGLEQLESIINFEKLTEWTSSNV`\n\nFor long peptide sequences or to run multiple sequences at once, `pepsickle`can be run using the fasta file `-f` option:\n\n`pepsickle -f /PATH/TO/FASTA.fasta`\n\nFor an example of a `FASTA` formatted file, see the [test fasta](https://github.com/pdxgx/pepsickle/blob/master/tests/P43357.fasta) used for this package.\n\nBy default, output will be printed to the screen, however output can easily be routed to a file location by using the `-o` option:\n\n`pepsickle -s VSGLEQLESIINFEKLTEWTSSNV -o /PATH/TO/OUTPUT.txt`\n\nOutput is in tab separated format. For an example of output format see the [example out file]().\n\nA full list of command line options and descriptions is listed here:\n\n`-s, --sequence [SEQUENCE]` use pepsickle in single sequence mode. Takes a string sequence as input and returns predicted cleavage sites in standard format.\n\n`-f, --fasta [FASTA]` use pepsickle in fasta mode. Takes a fasta file with protein ID's and corresponding sequences.\n\n`-o, --out [OUT_FILE]` name and destination for prediction outputs in TSV format. If none is provided, the output will be printed directly to the terminal.\n\n`-v, --verbose` In fasta mode, prints progress during cleavage predictions for fasta files with > 100 protein sequences.\n\n`-m, --model-type [epitope (default) | in-vitro | in-vitro-2]` allows the use of models trained on alternative types of data. Defaults to epitope based model, with options for in-vitro based gradient boosted model (in-vitro) or an experimental neural network based in-vitro model (in-vitro-2).\n\n`-p, \"--proteasome-type [C | I]` allows predictions to be made based on constitutive proteasomal (C) or immunoproteasomal (I) cleavage profiles. Note that if predictions are made using the epitope-based model (default), predictions will be proteasome type agnostic.\n\n`-t, --threshold [0-1 (default=0.5)]` probability threshold to be used for cleavage predictions.\n\n`--human-only (experimental)` uses models trained on human data only. Note that human only data sets are substantially smaller and may produce less stable predictions.\n"
      },
      "source": "https://raw.githubusercontent.com/pdxgx/pepsickle/master/README.md",
      "technique": "header_analysis"
    }
  ]
}