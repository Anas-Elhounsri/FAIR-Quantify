{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yangyq505/MHRWR"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-15T03:26:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-17T08:07:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Package: MHRWR Type: Package Title: MHRWR Prediction of lncRNA-disease associations based on multiple heterogeneous networks ================= Description: This package implements the MHRWR algorithm based on multiple heterogeneous networks, predicting lncRNA-disease associations.  Files: 1.Dataset  1) LncFunGauSim.txt, DisSemGauSim.txt and GeneLlsGauSim.txt store lncRNA similarity matrix, disease similarity matrix, and gene similarity matrix, respectively;  2) DisLncMat.txt, GeneDisMat.txt and GeneLncMat.txt stores known disease-lncRNA association information,known gene-disease association information and known gene-lncRNA association information,respectively;  3) lncRNA_Name.txt, diseases_Name.txt and gene_name store lncRNA ids, disease ids,gene ids, respectively;  2.Code 1) pridiction.py:predict potential lncRNA-disease associations.  2) Walker.py: The main function for the algorithm.  3) CalW.py: the function of Calculating weight matrix."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9222954745269091,
      "result": {
        "original_header": "MHRWR",
        "type": "Text_excerpt",
        "value": "Package: MHRWR \nType: Package \nTitle: MHRWR Prediction of lncRNA-disease associations based on multiple heterogeneous networks \n================= \nDescription: This package implements the MHRWR algorithm based on multiple heterogeneous networks, predicting lncRNA-disease associations.  Files:  \n"
      },
      "source": "https://raw.githubusercontent.com/yangyq505/MHRWR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yangyq505/MHRWR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yangyq505/MHRWR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yangyq505/MHRWR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MHRWR"
      },
      "source": "https://raw.githubusercontent.com/yangyq505/MHRWR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9996332697684355,
      "result": {
        "original_header": "MHRWR",
        "type": "Text_excerpt",
        "value": "\n2.Dataset \n1) LncFunGauSim.txt, DisSemGauSim.txt and GeneLlsGauSim.txt store lncRNA similarity matrix, disease similarity matrix, and gene similarity matrix, respectively; \n2) DisLncMat.txt, GeneDisMat.txt and GeneLncMat.txt stores known disease-lncRNA association information,known gene-disease association information and known gene-lncRNA association information,respectively;  \n3) lncRNA_Name.txt, diseases_Name.txt and gene_name store lncRNA ids, disease ids,gene ids, respectively;  \nAdditionally, you can download Complete dataset from:https://pan.baidu.com/s/1VnYsys3jHs-KI3XoYa3n-Q\n \n"
      },
      "source": "https://raw.githubusercontent.com/yangyq505/MHRWR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8127447386476849,
      "result": {
        "original_header": "MHRWR",
        "type": "Text_excerpt",
        "value": "1.Code \n1) pridiction.py:predict potential lncRNA-disease associations.\n2) Walker.py: The main function for the algorithm.  \n3) CalW.py: the function of Calculating weight matrix. \n"
      },
      "source": "https://raw.githubusercontent.com/yangyq505/MHRWR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yangyq505/MHRWR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MHRWR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yangyq505"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 12020,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yangyq505/MHRWR/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:39:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ]
}