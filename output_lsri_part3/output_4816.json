{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/QuKunLab/PIRCh"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-04-10T13:04:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-17T08:05:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9644001503011367,
      "result": {
        "original_header": "3.Enrichment analysis",
        "type": "Text_excerpt",
        "value": "For gene set enrichment analysis(GSEA), we used the BROAD Institute softward 'GSEA' V2.0.  R package 'limma'  v3.38.3  was used for enrichment analysis, and the p-value cut-off was set to 0.05. Detail of limma analysis was in 'limma.R' script.  \n"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9914443815465498,
      "result": {
        "original_header": "4.Data analysis",
        "type": "Text_excerpt",
        "value": "We used python 2.7 for further analysis in jupyter notebook. The main package we used are 'Pandas', 'Numpy', 'Scipy' and 'Sklearn'. Figure were drawed by 'matplotlib.pyplot' and 'seaborn'. The scirpt 'Data analysis.ipynb' consist of 4 parts: 1)Nascent transcript analysis(correlation with ChIP read count). 2) K-mean cluster and T-SNE. 3) Overlap with GRID/ChIRP/CHART/RAP result (measured by spearman corrleation). 4) Nearby coding gene expression calculation. \n"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/QuKunLab/PIRCh/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/Data_analysis/Data_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/Data_analysis/Data_analysis.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/QuKunLab/PIRCh/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "QuKunLab/PIRCh"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Scripts for data analysis in PIRCh-seq"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/Peak_calling/run.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9991209245136935,
      "result": {
        "original_header": "2.Basic analysis",
        "type": "Text_excerpt",
        "value": "We used 'pirch_rpkm.py' and 'pirch_rpkm_raw.py' scripts to calculate the RPKM and raw reads counts from the relevant BedGraph files. 'position_mean_bedGraph.py' was then used to get the average read coverage around introns. 'reads_count_in_diff.py' was used to count the mapped reads distribution in different annotation region, such as exon, intron, TSS, 5'UTR et al. To calculate the ChIP signal over PIRCh-enriched ncRNA TSS region, we used the 'PIRCH_average_TSS.py' script. \n* pirch_rpkm.py&emsp;ref.txt&emsp;chr.txt&emsp;*.bedGraph&emsp;out.txt\n* pirch_rpkm_raw.py&emsp;ref.txt&emsp;chr.txt&emsp;*.bedGraph&emsp;out.txt\n* position_mean_bedGraph.py&emsp;ref.txt&emsp;chr.txt&emsp;*.bedGraph&emsp;out.txt\n* reads_count_in_diff.py&emsp;ref.txt&emsp;chr.txt&emsp;ann.txt&emsp;*.bedGraph&emsp;out.txt\n* PIRCH_average_TSS.py&emsp;ref.txt&emsp;name.txt&emsp;chr.txt&emsp;*.bedGraph&emsp;out.txt \n*Example file show the the format of ref.txt, chr.txt, ann.txt and name.txt* \n"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9503229061338041,
      "result": {
        "original_header": "4.Data analysis",
        "type": "Text_excerpt",
        "value": "*Please use jupter notebook to load Data_analysis.ipynb \n"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9994547714871947,
      "result": {
        "original_header": "5.Allelic SNP analysis",
        "type": "Text_excerpt",
        "value": "* position2sequence.pl&emsp;fa_folder&emsp;input.bed&emsp;&emsp;out_SNP.txt\n* pirch_SNP_expression.py&emsp;out_SNP.txt&emsp;chr.txt&emsp;*.bedGraph&emsp;out.txt \n"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8016516609638584,
      "result": {
        "original_header": "6.Peak calling",
        "type": "Text_excerpt",
        "value": "* eCLIPgoing.py&emsp;--b1&emsp;pirch_rep1.bam&emsp;--b2&emsp;pirch_rep2.bam&emsp;--bc1&emsp;input_rep1.bam&emsp;--bc2&emsp;input_rep2.bam&emsp;--pv&emsp;0.01&emsp;--rt&emsp;5&emsp;--fc&emsp;2&emsp;--extend&emsp;20&emsp;--ga&emsp;ref.txt&emsp;--anno&emsp;transcriptAnot.pickle&emsp;-i&emsp;./&emsp;-o&emsp;out \n"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9980641071313326,
      "result": {
        "original_header": "7.Other data integration",
        "type": "Text_excerpt",
        "value": "* ChIRP_expand_unlog.py&emsp;ref.txt&emsp;chr.txt&emsp;length(int)&emsp;*.bedGraph&emsp;out.txt\n \n"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.855498150815454,
      "result": {
        "original_header": "2.Basic analysis",
        "type": "Text_excerpt",
        "value": "We used 'pirch_rpkm.py' and 'pirch_rpkm_raw.py' scripts to calculate the RPKM and raw reads counts from the relevant BedGraph files. 'position_mean_bedGraph.py' was then used to get the average read coverage around introns. 'reads_count_in_diff.py' was used to count the mapped reads distribution in different annotation region, such as exon, intron, TSS, 5'UTR et al. To calculate the ChIP signal over PIRCh-enriched ncRNA TSS region, we used the 'PIRCH_average_TSS.py' script. \n* pirch_rpkm.py&emsp;ref.txt&emsp;chr.txt&emsp;*.bedGraph&emsp;out.txt\n* pirch_rpkm_raw.py&emsp;ref.txt&emsp;chr.txt&emsp;*.bedGraph&emsp;out.txt\n* position_mean_bedGraph.py&emsp;ref.txt&emsp;chr.txt&emsp;*.bedGraph&emsp;out.txt\n* reads_count_in_diff.py&emsp;ref.txt&emsp;chr.txt&emsp;ann.txt&emsp;*.bedGraph&emsp;out.txt\n* PIRCH_average_TSS.py&emsp;ref.txt&emsp;name.txt&emsp;chr.txt&emsp;*.bedGraph&emsp;out.txt \n*Example file show the the format of ref.txt, chr.txt, ann.txt and name.txt* \n"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8358727997322061,
      "result": {
        "original_header": "5.Allelic SNP analysis",
        "type": "Text_excerpt",
        "value": "* position2sequence.pl&emsp;fa_folder&emsp;input.bed&emsp;&emsp;out_SNP.txt\n* pirch_SNP_expression.py&emsp;out_SNP.txt&emsp;chr.txt&emsp;*.bedGraph&emsp;out.txt \n*Example file show the the format of out_SNP.txt and out.txt* \n"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8219941234613513,
      "result": {
        "original_header": "6.Peak calling",
        "type": "Text_excerpt",
        "value": "* eCLIPgoing.py&emsp;--b1&emsp;pirch_rep1.bam&emsp;--b2&emsp;pirch_rep2.bam&emsp;--bc1&emsp;input_rep1.bam&emsp;--bc2&emsp;input_rep2.bam&emsp;--pv&emsp;0.01&emsp;--rt&emsp;5&emsp;--fc&emsp;2&emsp;--extend&emsp;20&emsp;--ga&emsp;ref.txt&emsp;--anno&emsp;transcriptAnot.pickle&emsp;-i&emsp;./&emsp;-o&emsp;out \n"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8519031362687056,
      "result": {
        "original_header": "7.Other data integration",
        "type": "Text_excerpt",
        "value": "* ChIRP_expand_unlog.py&emsp;ref.txt&emsp;chr.txt&emsp;length(int)&emsp;*.bedGraph&emsp;out.txt\n \n"
      },
      "source": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/QuKunLab/PIRCh/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PIRCh"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "QuKunLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 56068,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 7888,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7705,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 6123,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 1819,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QuKunLab/PIRCh/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:46:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}