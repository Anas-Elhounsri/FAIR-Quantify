{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Gao, Bowen and Luo, Yunan and Ma, Jianzhu and Wang, Sheng",
        "format": "bibtex",
        "title": "cancerAlign: Stratifying tumors by unsupervised alignment across cancer types",
        "type": "Text_excerpt",
        "value": "@article{cancerAlign,\n    year = {2020},\n    journal = {arXiv preprint arXiv:2011.xxxxx},\n    author = {Gao, Bowen and Luo, Yunan and Ma, Jianzhu and Wang, Sheng},\n    title = {cancerAlign: Stratifying tumors by unsupervised alignment across cancer types},\n}"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bowen-gao/cancerAlign"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-02T10:54:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-25T13:30:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.8990116185475665,
      "result": {
        "original_header": "cancerAlign",
        "type": "Text_excerpt",
        "value": "Pytorch implementation for cancerAlign: use adversarial learning to align different cancer types \nIf you use any source codes or datasets included in this toolkit in your work, please cite the following paper. The bibtex is listed below:\n<pre>\n@article{cancerAlign,\n  title={cancerAlign: Stratifying tumors by unsupervised alignment across cancer types},\n  author={Gao, Bowen and Luo, Yunan and Ma, Jianzhu and Wang, Sheng},\n  journal={arXiv preprint arXiv:2011.xxxxx},\n  year={2020}\n}\n</pre>\n \n"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9956202271758533,
      "result": {
        "original_header": "Abstract",
        "type": "Text_excerpt",
        "value": "Tumor stratification, which aims at clustering tumors into biologically meaningful subtypes, is the key step towards personalized treatment. Large-scale profiled cancer genomics data enables us to develop computational methods for tumor stratification. However, most of the existing approaches only considered tumors from an individual cancer type during clustering, leading to the overlook of common patterns across cancer types and the vulnerability to the noise within that cancer type. To address these challenges, we proposed cancerAlign to map tumors of the target cancer type into latent spaces of other source cancer types. These tumors were then clustered in each latent space rather than the original space in order to exploit shared patterns across cancer types. Due to the lack of aligned tumor samples across cancer types, cancerAlign used adversarial learning to learn the mapping at the population level. It then used consensus clustering to integrate cluster labels from different source cancer types. We evaluated cancerAlign on 7,134 tumors spanning 24 cancer types from TCGA and observed substantial improvement on tumor stratification and cancer gene prioritization. We further revealed the transferability across cancer types, which reflected the similarity among them based on the somatic mutation profile. cancerAlign is an unsupervised approach that provides deeper insights into the heterogeneous and rapidly accumulating somatic mutation profile and can be also applied to other genome-scale molecular information.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9404850226934275,
      "result": {
        "original_header": "Dataset",
        "type": "Text_excerpt",
        "value": "download from http://gdac.broadinstitute.org/ \\\nIn total, we collected somatic mutation profiles of 7,134 tumors belonging to 24 different cancer cohorts, including BRCA, BLCA, CESC, CHOL, COAD, DLBC, GBM, HNSC, KICH, KIRC, LGG, LIHC, LUAD, LUSC. OV, PAAD, PRAD, READ, SARC, STES, TFCT, THCA, UCEC, UVM. \nA preprocessed file that contains the cancer type, mutatated genes for each patient: data.csv \n"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9728532237294043,
      "result": {
        "original_header": "Experiments",
        "type": "Text_excerpt",
        "value": "To run the cancerAlign for a specific target cancer type:\n <pre><code>python3 run.py  --target=\"cancer type name\"</code></pre>\nTo generate the final clustering labels of a target cancer type when number of clusters is k by cancerAlign:\n <pre><code>python3 final_cluster.py  --target=\"cancer type name\" --num_clusters=k</code></pre>\nIt would generate a file (target cancer type)\\_k.txt. For example, for BLCA and k=2, the file name is BLCA\\_2.txt. Inside the file, first column is patient names, second column is corresponding labels. \nFor questions about the data and code, please contact bgao@caltech.edu. We will do our best to provide support and address any issues. We appreciate your feedback!\n \n"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bowen-gao/cancerAlign/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bowen-gao/cancerAlign/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bowen-gao/cancerAlign"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cancerAlign"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://s3.ax1x.com/2020/11/29/D67tHI.md.png"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.loli.net/2020/11/29/akTn1zlf27HhRx5.png"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.976954891842504,
      "result": {
        "original_header": "cancerAlign",
        "type": "Text_excerpt",
        "value": "<img src=\"https://s3.ax1x.com/2020/11/29/D67tHI.md.png\" width=\"10%\">[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) \n"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8265639395766264,
      "result": {
        "original_header": "Experiments",
        "type": "Text_excerpt",
        "value": "To run the cancerAlign for a specific target cancer type:\n <pre><code>python3 run.py  --target=\"cancer type name\"</code></pre>\nTo generate the final clustering labels of a target cancer type when number of clusters is k by cancerAlign:\n <pre><code>python3 final_cluster.py  --target=\"cancer type name\" --num_clusters=k</code></pre>\nIt would generate a file (target cancer type)\\_k.txt. For example, for BLCA and k=2, the file name is BLCA\\_2.txt. Inside the file, first column is patient names, second column is corresponding labels. \n"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bowen-gao/cancerAlign/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Bowen Gao\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cancerAlign"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bowen-gao"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 30127,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2011.xxxxx"
      },
      "source": "https://raw.githubusercontent.com/bowen-gao/cancerAlign/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:43:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}