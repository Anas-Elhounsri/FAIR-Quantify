{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/qm2/NanoSpring"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-03T17:59:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-21T16:44:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Compressor for Nanopore Sequencing Reads"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9716302643069594,
      "result": {
        "original_header": "NanoSpring",
        "type": "Text_excerpt",
        "value": "\r\n[![Build status](https://github.com/qm2/NanoSpring/actions/workflows/cmake.yml/badge.svg)](https://github.com/qm2/NanoSpring/actions/workflows/cmake.yml)\r\n\r\nNanoSpring - Tool for compression of nanopore genomic reads in FASTQ format (gzipped input also supported). Compresses only the read sequences (i.e., ignores quality values and read identifiers). Achieves over 3 times better compression ratios than Gzip (for recent basecaller versions) and fast decompression. The algorithm requires C++11 and g++ compiler and works on Linux (tested on Ubuntu 16.04, 18.04 and 20.04). \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/qm2/NanoSpring/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download repository",
        "parent_header": [
          "NanoSpring",
          "Install from source code"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\ngit clone https://github.com/qm2/NanoSpring.git\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/qm2/NanoSpring/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/qm2/NanoSpring/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/qm2/NanoSpring/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qm2/NanoSpring"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NanoSpring"
      },
      "source": "https://raw.githubusercontent.com/qm2/NanoSpring/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/test_script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/get_fastq_stats.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_NanoSpring_edge_thr.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_NanoSpring.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_NanoSpring_basecallers.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_NanoSpring_coverage.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_NanoSpring_12x.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_NanoSpring_minimap_default.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_NanoSpring_minhash_k.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_NanoSpring_threads.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_NanoSpring_hs2_extra.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_NanoSpring_minhash_nt.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_NanoSpring_banana.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/scripts/run_exp_renano.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/util/old_code/validateResult.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/minimap2/tex/hs38-simu.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/boost-cmake/repack.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/boost-cmake/build.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install using conda",
        "parent_header": [
          "NanoSpring"
        ],
        "type": "Text_excerpt",
        "value": "To install directly from source, follow the instructions in the next section.\r\n\r\nNanoSpring is available on conda via the bioconda channel. See [this](https://bioconda.github.io/user/install.html) page for installation instructions for conda. Once conda is installed, do the following to install NanoSpring.\r\n```bash\r\nconda config --add channels defaults\r\nconda config --add channels bioconda\r\nconda config --add channels conda-forge\r\nconda install nanospring\r\n```\r\nNote that if NanoSpring is installed this way, it should be invoked with the command `NanoSpring` rather than `./NanoSpring`. The bioconda [help page](https://bioconda.github.io/user/install.html) shows the commands if you wish to install NanoSpring in an environment.\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/qm2/NanoSpring/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "NanoSpring",
          "Install from source code"
        ],
        "type": "Text_excerpt",
        "value": "The instructions below will create the NanoSpring executable in the build directory inside NanoSpring. \r\n\r\n> If you plan to build and run NanoSpring on an older architectures, then you might need to remove the flag ```-msse4.1``` from the ```target_compile_options``` in CMakeLists.txt (or use flags based on the target architecture). Other places that might need to be changed include the `-mavx2` flag used for libbsc compilation (in the same CMakeLists.txt file). Finally you might need to change the COMMAND for MINIMAP2 target in the CMakeLists.txt file to `make sse2only=1 && make clean` for compiling minimap2 without the SSE4 optimized code.\r\n\r\nOn Linux with cmake installed and version at least 3.12 (check using `cmake --version`):\r\n```\r\ncd NanoSpring\r\nmkdir build\r\ncd build\r\ncmake ..\r\nmake -j\r\n```\r\nOn Linux with cmake not installed or with version older than 3.12:\r\n```bash\r\ncd NanoSpring\r\nmkdir build\r\ncd build\r\nwget https://cmake.org/files/v3.12/cmake-3.12.4.tar.gz\r\ntar -xzf cmake-3.12.4.tar.gz\r\ncd cmake-3.12.4\r\n./configure\r\nmake -j\r\ncd ..\r\n./cmake-3.12.4/bin/cmake ..\r\nmake -j\r\n```\r\n\r\nTest installation by running the test script (from the `build` directory):\r\n```\r\n./../util/test_script.sh\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/qm2/NanoSpring/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/qm2/NanoSpring/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Qingxi Meng\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/qm2/NanoSpring/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NanoSpring"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "qm2"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1720873,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 576303,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 110644,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 85838,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 77704,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Assembly",
        "size": 64718,
        "type": "Programming_language",
        "value": "Assembly"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cuda",
        "size": 20570,
        "type": "Programming_language",
        "value": "Cuda"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 19052,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 18720,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 13369,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 12065,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 8741,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Gnuplot",
        "size": 2132,
        "type": "Programming_language",
        "value": "Gnuplot"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 580,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/qm2/NanoSpring/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "shubhamchandak94",
          "type": "User"
        },
        "date_created": "2023-02-10T02:56:49Z",
        "date_published": "2023-02-10T03:00:02Z",
        "description": "- Reduced peak memory usage for decompression and introduced `--decompression-memory` argument. Now the peak memory usage for the largest files should be around 5-6 GB when running with default parameters.\r\n- Reduced peak memory usage for compression by storing the read bitsets on disk instead of in-memory. This can lead to 20 GB or more reduction in peak memory usage for ~30x human datasets (more reduction for higher coverage), although the precise reduction varies from dataset to dataset [ideally expect reduction of #gigabases/4 GB].\r\n- Updated BSC version with better performance.",
        "html_url": "https://github.com/qm2/NanoSpring/releases/tag/v0.2",
        "name": "v0.2",
        "release_id": 91971710,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/qm2/NanoSpring/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/qm2/NanoSpring/releases/91971710",
        "value": "https://api.github.com/repos/qm2/NanoSpring/releases/91971710",
        "zipball_url": "https://api.github.com/repos/qm2/NanoSpring/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "shubhamchandak94",
          "type": "User"
        },
        "date_created": "2021-10-05T04:25:10Z",
        "date_published": "2021-10-05T04:27:44Z",
        "description": "Release for bioconda",
        "html_url": "https://github.com/qm2/NanoSpring/releases/tag/v0.1",
        "release_id": 50786831,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/qm2/NanoSpring/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/qm2/NanoSpring/releases/50786831",
        "value": "https://api.github.com/repos/qm2/NanoSpring/releases/50786831",
        "zipball_url": "https://api.github.com/repos/qm2/NanoSpring/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:47:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 21
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "NanoSpring"
        ],
        "type": "Text_excerpt",
        "value": "Run the NanoSpring compressor executable with the options below:\r\n```\r\nAllowed options:\r\n  -h [ --help ]                  produce help message\r\n  -c [ --compress ]              compress\r\n  -d [ --decompress ]            decompress\r\n  -i [ --input-file ] arg        input file name\r\n  -o [ --output-file ] arg       output file name\r\n  -t [ --num-threads ] arg (=20) number of threads (default 20)\r\n  -k [ --kmer ] arg (=23)        kmer size for the minhash (default 23)\r\n  -n [ --num-hash ] arg (=60)    number of hash functions for minhash (default\r\n                                 60)\r\n  --overlap-sketch-thr arg (=6)  the overlap sketch threshold for minhash\r\n                                 (default 6)\r\n  --minimap-k arg (=20)          kmer size for the minimap2 (default 20)\r\n  --minimap-w arg (=50)          window size for the minimap2 (default 50)\r\n  --max-chain-iter arg (=400)    the max number of partial chains during\r\n                                 chaining for minimap2 (default 400)\r\n  --edge-thr arg (=4000000)      the max number of edges allowed in a consensus\r\n                                 graph (default 4000000)\r\n  -w [ --working-dir ] arg (=.)  directory to create temporary files (default\r\n                                 current directory)\r\n  --decompression-memory arg (=5) attempt to set peak memory usage for \r\n                                  decompression in GB (default 5 GB) by using \r\n                                  disk-based sort for writing reads in the \r\n                                  correct order. This is only approximate and \r\n                                  might have no effect at very low settings or \r\n                                  with large number of threads when another \r\n                                  decompressor stage is the biggest memory \r\n                                  contributor. Very low values might lead to \r\n                                  slight reduction in speed.\r\n```\r\nNote that the compressed files are tar archives consisting of the different compressed streams, although we recommend using the ```.NanoSpring``` extension as in the examples shown below.\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/qm2/NanoSpring/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Usage of NanoSpring",
        "parent_header": [
          "NanoSpring"
        ],
        "type": "Text_excerpt",
        "value": "This section contains several examples for compression and decompression with various modes and options. The compressed file uses the ```.NanoSpring``` extension as a convention. The decompressed file uses the ```.reads``` extension as a convention. If installed using conda, use the command `NanoSpring` instead of `./NanoSpring`.\r\n\r\nFor compressing file.fastq using default 20 threads.\r\n```\r\n./NanoSpring -c -i file.fastq -o file.NanoSpring\r\n```\r\nUsing 10 threads.\r\n```\r\n./NanoSpring -c -i file.fastq -o file.NanoSpring -t 10\r\n```\r\nFor compressing file.fastq.gz (gzipped fastq files) using default 20 threads.\r\n```\r\n./NanoSpring -c -i file.fastq.gz -o file.NanoSpring \r\n```\r\nDecompressing the file.NanoSpring with default 20 threads to file.reads.\r\n```\r\n./NanoSpring -d -i file.NanoSpring -o file.reads\r\n```\r\nCompare decompressed file to reads in original file to verify compression was lossless.\r\n```\r\ncmp file.reads <(cat file.fastq | sed -n '2~4p')\r\n```\r\nDecompressing the file.NanoSpring with 10 threads to file.reads.\r\n```\r\n./NanoSpring -d -i file.NanoSpring -o file.reads -t 10\r\n```\r\nCompressing with kmer size for minhash to be 20, number of hash functions for minhash to be 64, and the overlap sketch threhold for minhash to be 8.\r\n```\r\n./NanoSpring -c -i file.fastq -k 20 -n 64 --overlap-sketch-thr 8 -o file.NanoSpring \r\n```\r\nCompressing with kmer size of minimap2 to be 25 and the window size for the minimap2 to be 100.\r\n```\r\n./NanoSpring -c -i file.fastq --minimap-k 25 --minimap-w 100 -o file.NanoSpring\r\n```\r\nCompressing with the max number of partial chains during chaining for minimap2 to be 800.\r\n```\r\n./NanoSpring -c -i file.fastq --max-chain-iter 800 -o file.NanoSpring  \r\n```\r\nCompressing with the max number of edges allowed in a consensus graph to be 8000000.\r\n```\r\n./NanoSpring -c -i file.fastq --edge-thr 8000000 -o file.NanoSpring  \r\n```\r\n"
      },
      "source": "https://raw.githubusercontent.com/qm2/NanoSpring/master/README.md",
      "technique": "header_analysis"
    }
  ]
}