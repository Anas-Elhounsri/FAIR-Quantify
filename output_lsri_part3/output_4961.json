{
  "application_domain": [
    {
      "confidence": 20.55,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing NanoCaller",
        "parent_header": [
          "NanoCaller"
        ],
        "type": "Text_excerpt",
        "value": "Please cite: Ahsan, M.U., Liu, Q., Fang, L. et al. NanoCaller for accurate detection of SNPs and indels in difficult-to-map regions from long-read sequencing by haplotype-aware deep neural networks. Genome Biol 22, 261 (2021). https://doi.org/10.1186/s13059-021-02472-2.\n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WGLab/NanoCaller"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-04-14T23:05:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-04T14:43:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Variant calling tool for long-read sequencing data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9603139892900354,
      "result": {
        "original_header": "NanoCaller",
        "type": "Text_excerpt",
        "value": "NanoCaller is a computational method that integrates long reads in deep convolutional neural network for the detection of SNPs/indels from long-read sequencing data. NanoCaller uses long-range haplotype structure to generate predictions for each SNP candidate variant site by considering pileup information of other candidate sites sharing reads. Subsequently, it performs read phasing, and carries out local realignment of each set of phased reads and the set of all reads for each indel candidate variant site to generate indel calling, and then creates consensus sequences for indel sequence prediction. \nNanoCaller is distributed under the [MIT License by Wang Genomics Lab](https://wglab.mit-license.org/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9688720130205603,
      "result": {
        "original_header": "Latest Updates",
        "type": "Text_excerpt",
        "value": "_**v3.6.0** (April 22 2024)_: CSI indices generated for VCF files instead of TBI to accommodate larger contigs. \n_**v3.5.0** (March 27 2024)_: CRAM files are supported in input as well as in phased output if whatshap version>=2 is being used with NanoCaller. \n_**v3.4.0** (July 31 2023)_: VCF files contain total and strand-specific allele depths for SNP calls from SNP calling models. A new mode for short ONT reads (5-10kbp) added. `--phase_qual_score` parameter filters out low quality SNP calls from phasing by WhatsHap; these SNP calls are kept in the output, but neither phased nor used for phasing reads. \n_**v3.3.0** (July 14 2023)_: Detailed description of SNP calls, including unfiltered SNP calls for variants determined to be false by NanoCaller, and inclusion of per-base probability output. Quality score has been adjusted to be on Phred scale. \n_**v3.2.0** (May 14 2023)_: Support added for haploid variant calling which has significant improvement in recall for indel calling. New feature generation methods and models are are used for haploid SNP and indel calling. Now chrY and chrM are assumed to be haploid, with additional parameter --haploid_X to specify if chrX is haploid. Another parameter --haploid_genome can be used for haploid variant calling on all chromosomes. \n_**v3.0.1** (March 14 2023)_ : Several critical bugs regarding coverage normalization and integer overflow fixed. These bug affected very low and high coverage sample. The normalization bug was only introduced in v3.0.0 so any samples processed before that should not have been affected. Whereas integer overflow bug was much older and it only was affecting sample with more than 256 coverage. \n_**v3.0.0** (June 7 2022)_ : A major update in API with single entry point for running NanoCaller. Major changes in parallelization routine with GNU parallel no longer used for whole genome variant calling. \n_**v2.0.0** (Feb 2 2022)_ : A major update in API and installation instructions, with release of bioconda recipe for NanoCaller. Added support for indel calling in case of poor or non-existent phasing. \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9598158374556142,
      "result": {
        "original_header": "Trained models",
        "type": "Text_excerpt",
        "value": "Trained models for [ONT](https://github.com/WGLab/NanoCaller/tree/master/nanocaller_src/release_data/ONT_models) data, [CLR](https://github.com/WGLab/NanoCaller/tree/master/nanocaller_src/release_data/clr_models) data and [HIFI](https://github.com/WGLab/NanoCaller/tree/master/nanocaller_src/release_data/hifi_models) data can be found [here](https://github.com/WGLab/NanoCaller/tree/master/nanocaller_src/release_data). These models are trained on chr1-22 of the genomes stated below, unless mentioned othewise. \nYou can specify SNP and indel models using `--snp_model` and `--indel_model` parameters with a model name from tables below. For instance, if you want to use 'ONT-HG002\\_bonito' SNP model and 'ONT-HG002' indel model, use the following command: \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WGLab/NanoCaller/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WGLab/NanoCaller/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "WGLab/NanoCaller"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NanoCaller"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.5176764"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation\nThere are three ways to install and run NanoCaller, via Docker, Singularity or Conda.\n\nNanoCaller has been developed and tested to work with Linux OS; we do not recommend using Windows or Mac OS. However, if you use Windows or Mac OS and have Docker installed on your machine, you can run NanoCaller inside a Docker container. NanoCaller does not require a GPU or any other special hardware to run.\n\nPlease check the [NanoCaller Docker Hub repository](https://hub.docker.com/repository/docker/genomicslab/nanocaller) for the most up to date version of NanoCaller docker image.\n\n\n## Conda Installation\n\nIf you do not have Anaconda, you will need to install it first. Here, we show how to install Miniconda, a minimal installation of Anaconda, which is much smaller and has a faster installation:\n\n```\ncurl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nbash Miniconda3-latest-Linux-x86_64.sh\n```\nGo through all the prompts (installation in `$HOME` is recommended). The installation should take about 10 minutes, including the installation of Miniconda. \n\n### Bioconda\nYou can install NanoCaller in conda using Bioconda recipe:\n`conda install -c bioconda nanocaller`\n\nIt is recommened that you install NanoCaller in a new conda environment to avoid any package conflict and use mamba for fast installation, in the following way:\n```\nconda create -n nanocaller_env -c conda-forge mamba\nconda activate nanocaller_env\nmamba install -c bioconda nanocaller\n```\n\n### Manual Installation\nYou can obtain the latest NanoCaller version from github that has not yet been pushed to bioconda via manual installation.\n\n```\ngit clone https://github.com/WGLab/NanoCaller.git\nconda env create -f NanoCaller/environment.yml\nchmod +x NanoCaller/NanoCaller\nconda activate nanocaller_env\n```\n\nThen you can run NanoCaller using `PATH_TO_NANOCALLER_REPO/NanoCaller --help`.\n\n\n## Docker Installation\nFor instructions regarding Docker installation, please visit [Docker website](https://docs.docker.com/get-docker). There are three ways to obtain a Docker image for NanoCaller.\n\n### 1) via Docker Hub (preferred)\nYou can pull NanoCaller docker images from Docker Hub by specifiying a version number.  \n```\nVERSION=\"3.4.1\"\ndocker pull genomicslab/nanocaller:${VERSION}\ndocker run genomicslab/nanocaller:${VERSION} NanoCaller --help\n```\n\n### 2) Locally build docker image\nIf you want to build an image for the latest commit of NanoCaller Github repository, use the following commands:\n\n```\ngit clone https://github.com/WGLab/NanoCaller.git\ndocker build -t nanocaller NanoCaller\ndocker run nanocaller NanoCaller --help\n```\n\n## Singularity\nFor instructions regarding Singularity installation, please visit [Singularity website] (https://sylabs.io/guides/3.7/user-guide/quick_start.html).\n```\nVERSION=\"3.4.1\"\nsingularity pull docker://genomicslab/nanocaller:${VERSION}\nsingularity run --pwd /app nanocaller_${VERSION}.sif NanoCaller --help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/docs/Install.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "NanoCaller"
        ],
        "type": "Text_excerpt",
        "value": "NanoCaller can be installed using Docker or Conda. The easiest way to install is from the bioconda channel:\n\n`conda install -c bioconda nanocaller`\n\nor using Docker:\n\n```\nVERSION=\"3.4.1\"\ndocker pull genomicslab/nanocaller:${VERSION}\n```\n\nor using Singularity:\n\n```\nVERSION=\"3.4.1\"\nsingularity pull docker://genomicslab/nanocaller:${VERSION}\n```\n\nPlease refer to [Installation](docs/Install.md) for instructions regarding installing NanoCaller through other methods.\n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9820697995599508,
      "result": {
        "original_header": "Latest Updates",
        "type": "Text_excerpt",
        "value": "_**v2.0.0** (Feb 2 2022)_ : A major update in API and installation instructions, with release of bioconda recipe for NanoCaller. Added support for indel calling in case of poor or non-existent phasing. \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Wang Genomics Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NanoCaller"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "WGLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 215995,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 495,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2024-04-22T16:43:12Z",
        "date_published": "2024-04-22T16:44:11Z",
        "description": "CSI indices generated for VCF files instead of TBI to accommodate larger contigs.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v3.6.0",
        "name": "v3.6.0",
        "release_id": 152253493,
        "tag": "v3.6.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v3.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/152253493",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/152253493",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v3.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2024-03-27T22:29:05Z",
        "date_published": "2024-03-27T22:29:43Z",
        "description": "CRAM files are supported in input as well as in phased output if whatshap version>=2 is being used with NanoCaller.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v3.5.0",
        "name": "v3.5.0",
        "release_id": 148770784,
        "tag": "v3.5.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v3.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/148770784",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/148770784",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v3.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2023-08-18T17:52:51Z",
        "date_published": "2023-08-18T17:54:43Z",
        "description": "Fixed a critical bug in haploid mode introduced in v3.3.0.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v3.4.1",
        "name": "v3.4.1 ",
        "release_id": 117799693,
        "tag": "v3.4.1",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v3.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/117799693",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/117799693",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v3.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2023-07-31T15:07:17Z",
        "date_published": "2023-07-31T15:08:37Z",
        "description": "VCF files contain total and strand-specific allele depths for SNP calls from SNP calling models. A new mode for short ONT reads (5-10kbp) added. --phase_qual_score parameter filters out low quality SNP calls from phasing by WhatsHap; these SNP calls are kept in the output, but neither phased nor used for phasing reads.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v3.4.0",
        "name": "v3.4.0 Allelic Depth",
        "release_id": 114508254,
        "tag": "v3.4.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v3.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/114508254",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/114508254",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v3.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2023-07-14T03:29:20Z",
        "date_published": "2023-07-14T18:45:23Z",
        "description": "Detailed description of SNP calls, including unfiltered SNP calls for variants determined to be false by NanoCaller, and inclusion of per-base probability output. Quality score has been adjusted to be on Phred scale.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v3.3.0",
        "name": "v3.3.0",
        "release_id": 112292437,
        "tag": "v3.3.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v3.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/112292437",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/112292437",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v3.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2023-05-14T15:32:56Z",
        "date_published": "2023-05-14T15:38:28Z",
        "description": "Support added for haploid variant calling which has significant improvement in recall for indel calling. New feature generation methods and models are are used for haploid SNP and indel calling. Now chrY and chrM are assumed to be haploid, with additional parameter `--haploid_X` to specify if chrX is haploid. Another parameter `--haploid_genome` can be used for haploid variant calling on all chromosomes.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v3.2.0",
        "name": "v3.2.0 Haploid Variant Calling",
        "release_id": 102905951,
        "tag": "v3.2.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v3.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/102905951",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/102905951",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v3.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2023-05-10T16:49:14Z",
        "date_published": "2023-05-10T17:04:16Z",
        "description": "Fixed several indel calling bugs, including allele sequence prediction and normalization, with allele normalization step reverted to rtg-tools.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v3.1.0",
        "name": "v3.1.0",
        "release_id": 102521601,
        "tag": "v3.1.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v3.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/102521601",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/102521601",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v3.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2023-03-15T01:43:56Z",
        "date_published": "2023-03-15T01:50:57Z",
        "description": "Several critical bugs regarding coverage normalization and integer overflow fixed.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v3.0.1",
        "name": "v3.0.1",
        "release_id": 95639135,
        "tag": "v3.0.1",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v3.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/95639135",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/95639135",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v3.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2022-06-08T16:29:02Z",
        "date_published": "2022-06-08T16:31:43Z",
        "description": "A major update in API with single entry point for running NanoCaller. Major changes in parallelization routine with GNU parallel no longer used for whole genome variant calling.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v3.0.0",
        "name": "v3.0.0",
        "release_id": 68976180,
        "tag": "v3.0.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v3.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/68976180",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/68976180",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v3.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2022-03-02T16:42:47Z",
        "date_published": "2022-03-03T21:58:00Z",
        "description": "Fixed several bugs with multipooling and empty arrays.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v2.1.2",
        "name": "v2.1.2",
        "release_id": 60941033,
        "tag": "v2.1.2",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v2.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/60941033",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/60941033",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v2.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2022-02-19T18:16:52Z",
        "date_published": "2022-02-19T18:28:47Z",
        "description": "Fixed a bug that was crashing SNP calling threads trying to convert empty array into int array.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v2.1.1",
        "name": "v2.1.1",
        "release_id": 59974885,
        "tag": "v2.1.1",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v2.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/59974885",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/59974885",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v2.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2022-02-15T04:13:34Z",
        "date_published": "2022-02-15T04:28:10Z",
        "description": "Migrated NanoCaller models from tensorflow 1 to tensorflow 2, and updated python requirements as well.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v2.1.0",
        "name": "v2.1.0",
        "release_id": 59570700,
        "tag": "v2.1.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/59570700",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/59570700",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2022-01-25T20:05:56Z",
        "date_published": "2022-01-25T20:11:46Z",
        "description": "1. Major changes in API to simplify run commands, with PATH variable updated automatically upon environment creation.\r\n2. Create summary of variant calling results using RTGtools upon completion\r\n3.  A new parameter `--impute_indel_phase` allows indel calling when phasing information cannot be provided\r\n4. Fixed an indel calling bug that affected indel prediction near boundaries of regions specified",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v2.0.0",
        "name": "v2.0.0 Major API Update",
        "release_id": 57957610,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/57957610",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/57957610",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2021-09-09T04:17:59Z",
        "date_published": "2021-09-15T18:20:58Z",
        "description": "Fixed issues with indel calling near the end of reference contigs.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v1.0.1",
        "name": "v1.0.1",
        "release_id": 49622529,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/49622529",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/49622529",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2021-08-09T19:36:00Z",
        "date_published": "2021-08-10T17:08:50Z",
        "description": "First post-production release with Zenodo DOI citation.\r\n\r\n[![DOI](https://zenodo.org/badge/181379290.svg)](https://zenodo.org/badge/latestdoi/181379290)",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 47617710,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/47617710",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/47617710",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2021-08-03T16:38:41Z",
        "date_published": "2021-08-03T20:05:36Z",
        "description": "Reverted changes from commit: 254695996f8ac208fc61f160c8e1d69317df410e which used python's map function instead of multiprocessing pool map and caused the code to run slower.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v0.4.1",
        "name": "v0.4.1",
        "release_id": 47251158,
        "tag": "v0.4.1",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/47251158",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/47251158",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2021-06-02T19:53:07Z",
        "date_published": "2021-06-02T20:16:24Z",
        "description": "Major update in NanoCaller SNP and indel calling routines. Several new models trained on ONT reads basecalled with Guppy4.2.2 and Bonito are added, as well as a new model for R10.3 reads. SNP models trained on longer CCS reads are also added. Indel calling is improved to increase sensitivity of indels in low complexity regions.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v0.4.0",
        "name": "v0.4.0",
        "release_id": 44000819,
        "tag": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/44000819",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/44000819",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2021-03-11T16:37:30Z",
        "date_published": "2021-03-11T16:43:04Z",
        "description": "Enabled error logging for parallel jobs run during whole genome variant calling, with details of failed jobs.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v0.3.3",
        "name": "v0.3.3",
        "release_id": 39667890,
        "tag": "v0.3.3",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v0.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/39667890",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/39667890",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v0.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2021-01-15T21:35:48Z",
        "date_published": "2021-01-15T22:01:15Z",
        "description": "Fixed some bugs with chromosome notation.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v0.3.2",
        "name": "v0.3.2",
        "release_id": 36473859,
        "tag": "v0.3.2",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/36473859",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/36473859",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2020-12-15T17:57:19Z",
        "date_published": "2020-12-15T18:01:56Z",
        "description": "Disabled python multiprocessing pooling when single CPU is used. This creates half the number of processes when using NanoCaller_WGS.py for whole genome variant calling, leading to less overhead.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v0.3.1",
        "name": "v0.3.1 Fixed issues with excessive processes created by python mutliprocessing",
        "release_id": 35306621,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/35306621",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/35306621",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2020-12-07T15:33:59Z",
        "date_published": "2020-12-07T16:33:22Z",
        "description": "For whole genome variant calling, we are replacing python's multiprocessing module with GNU's parallel command for significant speed up. We have also added support for Docker, by including a Dockerfile for building NanoCaller image locally, as well as uploading a tar zipped docker image in this release as 'nanocaller_docker.tar.gz'. ",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v0.3.0",
        "name": "v0.3.0: new parallelization framework, and docker support added",
        "release_id": 34937648,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/34937648",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/34937648",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2020-11-04T16:06:55Z",
        "date_published": "2020-11-05T15:55:13Z",
        "description": "We have added functionality for specifying regions to include and exclude via BED files with default options for excluding centromere and telomere regions. This will allow a significant speed up in running NanoCaller. We have also streamlined parallel processing used within NanoCaller to maximize the use of computing power, and implemented a more detailed logging of NanoCaller runs.",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 33512577,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/33512577",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/33512577",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2020-09-22T17:28:14Z",
        "date_published": "2020-09-24T16:06:06Z",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v0.1.1",
        "name": "v0.1.1",
        "release_id": 31771509,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/31771509",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/31771509",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "umahsn",
          "type": "User"
        },
        "date_created": "2020-07-15T16:17:12Z",
        "date_published": "2020-07-15T19:44:22Z",
        "html_url": "https://github.com/WGLab/NanoCaller/releases/tag/v0.1.0",
        "name": "v0.1.0",
        "release_id": 28603730,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/WGLab/NanoCaller/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/NanoCaller/releases/28603730",
        "value": "https://api.github.com/repos/WGLab/NanoCaller/releases/28603730",
        "zipball_url": "https://api.github.com/repos/WGLab/NanoCaller/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:13:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 99
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "NanoCaller"
        ],
        "type": "Text_excerpt",
        "value": "General usage of NanoCaller is described in [Usage](docs/Usage.md). Some quick usage examples:\n\n- `NanoCaller --bam YOUR_BAM --ref YOUR_REF --cpu 10` will run NanoCaller on whole genome using 10 parallel processes.\n- `NanoCaller --bam YOUR_BAM --ref YOUR_REF --cpu 10 --mode snps` will only call SNPs.\n- `NanoCaller --bam YOUR_BAM --ref YOUR_REF --cpu 10 --mode snps --phase` will only call SNPs and phase them, and will additionally phase the BAM file (under intermediate_phase_files subfolder split by chromosomes).\n- `NanoCaller --bam YOUR_BAM --ref YOUR_REF --cpu 10 --haploid_genome` will run NanoCaller on whole genome under the assumption that the genome is haploid.\n- `NanoCaller --bam YOUR_BAM --ref YOUR_REF --cpu 10 --regions chr22:20000000-21000000 chr21` will NanoCaller on chr21 and chr22:20000000-21000000 only.\n\nFor a comprehensive case study of variant calling on Nanopore reads, see [ONT Case Study](docs/ONT%20Case%20Study.md), where we describe end-to-end variant calling pipeline for using NanoCaller, where we start with aligning FASTQ files of HG002, calls variants using NanoCaller, and evaluate performances on various genomic regions.\n\n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/NanoCaller/master/README.md",
      "technique": "header_analysis"
    }
  ]
}