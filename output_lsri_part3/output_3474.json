{
  "application_domain": [
    {
      "confidence": 24.75,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MarkeyBBSRF/MEScan"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-29T13:48:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-12T13:09:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9962182888974611,
      "result": {
        "original_header": "MEScan",
        "type": "Text_excerpt",
        "value": "MEScan is an accurate and efficient statistical framework for genome-scale mutual exclusivity analysis of cancer mutations.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.842045239701559,
      "result": {
        "original_header": "MEScan for large scale ME patterns survey",
        "type": "Text_excerpt",
        "value": "We provide an example dataset from TCGA Ovarian Cancer to demonstrate the pipeline for large scale ME patterns survey using MEScan. The pipeline has several steps as shown in the DAG below. \n"
      },
      "source": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9179690170017991,
      "result": {
        "original_header": "MEScan input",
        "type": "Text_excerpt",
        "value": "MEScan requires two tables: 1) mutation table and 2) background mutation rate table as inputs for the large scale survey. The inputs are generated using the methods published in the [MADGIC](https://www.ncbi.nlm.nih.gov/pubmed/25573922) paper from a Mutation Annotation Format (MAF) file. We provide a script that take the MAF file as input and output the required input data matrix for MEScan.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8446008465104201,
      "result": {
        "original_header": "b. Create MEScan input",
        "type": "Text_excerpt",
        "value": "The `create_mescan_input.R ` takes a mutation annotation file (MAF) as input and creates the input data required by MEScan in `RData` format. \n```\nRscript create_mescan_input.R example.maf output_dir\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.836428314861715,
      "result": {
        "original_header": "MEScan output",
        "type": "Text_excerpt",
        "value": "A list of high-confidence mutually exclusive gene sets will be returned in the following format. The first column is the gene sets delimited by `;`. The second column is the TG score for the gene set. \n"
      },
      "source": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "a. Download MAGDIC related files",
        "parent_header": [
          "MEScan input"
        ],
        "type": "Text_excerpt",
        "value": "The functions and dependencies of MAGIC can be downloaded from [Google Drive](https://drive.google.com/a/g.uky.edu/file/d/15-QjT-8hqWin8gtJQzi5Y-wW3808_UKr/view?usp=sharing). The folder contain the following data and functions. Copy them to the `example/prep_input` folder.\n\n```\nMADGiC.R\nexome_36.RData\ngene.rep.expr.RData\ngene_names.txt\nprior.RData\n```"
      },
      "source": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MarkeyBBSRF/MEScan/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MarkeyBBSRF/MEScan/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MarkeyBBSRF/MEScan"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MEScan"
      },
      "source": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/example/mcmc/snakemake/dag.mcmc.png"
      },
      "source": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install from github",
        "parent_header": [
          "MEScan"
        ],
        "type": "Text_excerpt",
        "value": "Install `devtools`\n```\ninstall.packages(\"devtools\")\n```\n\nInstall `MEScan` using the github repository\n```\nlibrary(devtools)\ninstall_github(\"markeybbsrf/mescan\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8967866980175145,
      "result": {
        "original_header": "MEScan for large scale ME patterns survey",
        "type": "Text_excerpt",
        "value": "Dependencies:\n  * R:\n    1. MEScan\n    2. locfdr\n    3. snowfall\n  * Snakemake \nThe script below shows how to run MEScan on the example data. The pipeline is managed by the Snakemake workflow language. It reads the rules predefined in `snakemake/Snakefile` file and executes all the required steps to run the MEScan survey. When successes, the high-confidence mutually exclusive gene sets can be found in ` re/ov/ov.hc_sets.genes.txt`.\n```\ncd mcmc\nsnakemake -s snakemake/Snakefile -p re/ov/ov.hc_sets.genes.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MarkeyBBSRF/MEScan/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MEScan"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "MarkeyBBSRF"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 97176,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 31159,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 26450,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MarkeyBBSRF/MEScan/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:53:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}