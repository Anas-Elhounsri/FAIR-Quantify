{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "citHeader(\"To cite AutoScore in publications use:\")\n\ncitEntry(\n  entry    = \"Manual\",\n  title    = \"{AutoScore}: An Interpretable Machine Learning-Based Automatic Clinical Score Generator\",\n  author   = personList(as.person(\"Feng Xie\"),\n                  as.person(\"Yilin Ning\"),\n                  as.person(\"Han Yuan\"),\n                  as.person(\"Mingxuan Liu\"),\n                  as.person(\"Seyed Ehsan Saffari\"),\n                  as.person(\"Bibhas Chakraborty\"),\n                  as.person(\"Nan Liu\")),\n  year     = 2022,\n  url      = \"https://CRAN.R-project.org/package=AutoScore\",\n  textVersion  = \"Xie F, Ning Y, Yuan H, Liu M, Saffari SE, Chakraborty B, Liu N. Package 'AutoScore': An Interpretable Machine Learning-Based Automatic Clinical Score Generator. R package version, 2022. Available from: cran.r-project.org/web/packages/AutoScore/AutoScore.pdf\"\n)\n\n\ncitEntry(entry = \"Article\",\n  title        = \"AutoScore: A Machine Learning-Based Automatic Clinical Score Generator and Its Application to Mortality Prediction Using Electronic Health Records\",\n  author       = personList(as.person(\"Feng Xie\"),\n                  as.person(\"Bibhas Chakraborty\"),\n                  as.person(\"Marcus Eng Hock Ong\"),\n                  as.person(\"Benjamin Alan Goldstein\"),\n                  as.person(\"Nan Liu\")),\n  journal      = \"JMIR Medical Informatics\",\n  year         = \"2020\",\n  volume       = \"8\",\n  number       = \"10\",\n  pages        = \"e21798\",\n  url          = \"https://doi.org/10.2196/21798\",\n  textVersion  = \"Xie F, Chakraborty B, Ong MEH, Goldstein BA, Liu N. AutoScore: A Machine Learning-Based Automatic Clinical Score Generator and Its Application to Mortality Prediction Using Electronic Health Records. JMIR Med Inform. 2020;8(10):e21798. Published 2020 Oct 21. doi:10.2196/21798\")\n"
      },
      "source": "https://raw.githubusercontent.com/nliulab/AutoScore/master/inst/CITATION",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Core paper",
        "parent_header": [
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "* Xie F, Chakraborty B, Ong MEH, Goldstein BA, Liu N. [AutoScore: A machine learning-based automatic clinical score generator and its application to mortality prediction using electronic health records](http://dx.doi.org/10.2196/21798). JMIR Medical Informatics 2020; 8(10): e21798.\n* Xie F, Ning Y, Liu M, Li S, Saffari SE, Yuan H, Volovici V, Ting DSW, Goldstein BA, Ong MEH, Vaughan R, Chakraborty B, Liu N. [A universal AutoScore framework to develop interpretable scoring systems for predicting common types of clinical outcomes](https://www.sciencedirect.com/science/article/pii/S2666166723002691). STAR Protocols 2023 Jun; 4(2): 102302.\n"
      },
      "source": "https://raw.githubusercontent.com/nliulab/AutoScore/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Method extension",
        "parent_header": [
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "* Xie F, Ning Y, Yuan H, Goldstein BA, Ong MEH, Liu N, Chakraborty B. [AutoScore-Survival: Developing interpretable machine learning-based time-to-event scores with right-censored survival data](http://dx.doi.org/10.1016/j.jbi.2021.103959). Journal of Biomedical Informatics 2022; 125: 103959.\n\n* Saffari SE, Ning Y, Xie F, Chakraborty B, Volovici V, Vaughan R, Ong MEH, Liu N, [AutoScore-Ordinal: An interpretable machine learning framework for generating scoring models for ordinal outcomes](https://doi.org/10.1186/s12874-022-01770-y), BMC Medical Research Methodology 2022; 22: 286.\n\n* Ning Y, Li S, Ong ME, Xie F, Chakraborty B, Ting DS, Liu N. [A novel interpretable machine learning system to generate clinical risk scores: An application for predicting early mortality or unplanned readmission in a retrospective cohort study](https://doi.org/10.1371/journal.pdig.0000062). PLOS Digital Health 2022; 1(6): e0000062.\n"
      },
      "source": "https://raw.githubusercontent.com/nliulab/AutoScore/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nliulab/AutoScore"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "-   Feng Xie (Email: <xief@u.duke.nus.edu>)\n-   Yilin Ning (Email: <yilin.ning@duke-nus.edu.sg>)\n-   Nan Liu (Email: <liu.nan@duke-nus.edu.sg>)\n"
      },
      "source": "https://raw.githubusercontent.com/nliulab/AutoScore/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-10T05:51:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-28T12:57:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AutoScore: An Interpretable Machine Learning-Based Automatic Clinical Score Generator"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nliulab/AutoScore/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nliulab/AutoScore/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nliulab/AutoScore"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/nliulab/AutoScore/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Package installation",
        "type": "Text_excerpt",
        "value": "Install from GitHub or CRAN:\n\n``` r\n# From Github\ninstall.packages(\"devtools\")\nlibrary(devtools)\ninstall_github(repo = \"nliulab/AutoScore\", build_vignettes = TRUE)\n\n# From CRAN (recommended)\ninstall.packages(\"AutoScore\")\n```\n[devtools]: https://github.com/hadley/devtools\n\nLoad AutoScore package: \n\n``` r\nlibrary(AutoScore)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/nliulab/AutoScore/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nliulab/AutoScore/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AutoScore"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "nliulab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 153892,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nliulab/AutoScore/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:54:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 32
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Please visit our <a href=\"https://nliulab.github.io/AutoScore/\">bookdown page</a> for a full tutorial on AutoScore usage.",
        "type": "Text_excerpt",
        "value": "[![](http://cranlogs.r-pkg.org/badges/grand-total/AutoScore?color=green)](https://cran.r-project.org/package=AutoScore)\n[![](http://cranlogs.r-pkg.org/badges/last-month/AutoScore?color=green)](https://cran.r-project.org/package=AutoScore)\n[![](http://cranlogs.r-pkg.org/badges/last-week/AutoScore?color=green)](https://cran.r-project.org/package=AutoScore)\n[![](https://img.shields.io/badge/doi-10.2196/21798-yellow.svg)](https://doi.org/10.2196/21798)\n\n\n\nAutoScore: An Interpretable Machine Learning-Based Automatic Clinical\nScore Generator\n================\n\nAutoScore is a novel machine learning framework to automate the development of interpretable clinical scoring models. AutoScore consists of six modules: 1) variable ranking with machine learning, 2) variable transformation, 3) score derivation, 4) model selection, 5) domain knowledge-based score fine-tuning, and 6) performance evaluation. The original AutoScore structure is elaborated in [this article](http://dx.doi.org/10.2196/21798) and its flowchart is shown in the following figure. AutoScore was originally designed for binary outcomes and later extended to [survival outcomes](http://dx.doi.org/10.1016/j.jbi.2021.103959) and [ordinal outcomes](https://doi.org/10.48550/arxiv.2202.08407). AutoScore could seamlessly generate risk scores using a parsimonious set of variables for different types of clinical outcomes, which can be easily implemented and validated in clinical practice. Moreover, it enables users to build transparent and interpretable clinical scores quickly in a straightforward manner. \n\n> ### Please visit our [bookdown page](https://nliulab.github.io/AutoScore/) for a full tutorial on AutoScore usage.\n\n"
      },
      "source": "https://raw.githubusercontent.com/nliulab/AutoScore/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "The five pipeline functions constitute the 5-step AutoScore-based\nprocess for generating point-based clinical scores for binary, survival\nand ordinal outcomes.\n\nThis 5-step process gives users the flexibility of customization (e.g.,\ndetermining the final list of variables according to the parsimony plot, and\nfine-tuning the cutoffs in variable transformation):\n\n-   STEP(i): `AutoScore_rank()`or `AutoScore_rank_Survival()` or\n    `AutoScore_rank_Ordinal()` - Rank variables with machine learning\n    (AutoScore Module 1)\n-   STEP(ii): `AutoScore_parsimony()` or\n    `AutoScore_parsimony_Survival()` or\n    `AutoScore_parsimony_Ordinal()` - Select the best model with\n    parsimony plot (AutoScore Modules 2+3+4)\n-   STEP(iii): `AutoScore_weighting()` or\n    `AutoScore_weighting_Survival()` or\n    `AutoScore_weighting_Ordinal()` - Generate the initial score with\n    the final list of variables (Re-run AutoScore Modules 2+3)\n-   STEP(iv): `AutoScore_fine_tuning()` or\n    `AutoScore_fine_tuning_Survival()` or\n    `AutoScore_fine_tuning_Ordinal()` - Fine-tune the score by revising\n    `cut_vec` with domain knowledge (AutoScore Module 5)\n-   STEP(v): `AutoScore_testing()` or `AutoScore_testing_Survival()` or\n    `AutoScore_testing_Ordinal()` - Evaluate the final score with ROC\n    analysis (AutoScore Module 6)\n\nWe also include several optional functions in the package, which could help with data analysis and result reporting.\n\n"
      },
      "source": "https://raw.githubusercontent.com/nliulab/AutoScore/master/README.md",
      "technique": "header_analysis"
    }
  ]
}