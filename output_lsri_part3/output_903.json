{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Choi Y, Chan AP, Kirkness E, Telenti A, Schork NJ: Comparison of phasing \n  strategies for whole human genomes. PLoS Genet. 2018, 14:e1007308.\n\nRoach JC, Glusman G, Hubley R, Montsaroff SZ, Holloway AK, Mauldin DE, Srivastava D, \n  Garg V, Pollard KS, Galas DJ, Hood L, Smit AFA: Chromosomal haplotypes by \n  genetic phasing of human families. Am. J. Hum. Genet. 2011, 89:382\u2013397."
      },
      "source": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dmiller903/trioPhaser"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-03T16:17:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-02T00:05:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An application to phase a trio when gVCF's are available"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8594188512189098,
      "result": {
        "original_header": "trioPhaser: Using Mendelian inheritance logic to improve genomic phasing of trios",
        "type": "Text_excerpt",
        "value": "Mendelian inheritance logic can be used to determine phase for the majority \n(67-83%) of variant nucleotide positions (Choi et al. 2018 & Roach et al. 2011). \nHowever, when both parents and the  child are heterozygotic (A/G), Mendelian \ninheritance alone cannot be used to determine phase. When such scenarios are \npresent, phasing programs that rely on population-based haplotype reference \npanels can be used. \nAvailable software that directly uses trios and Mendelian inheritance logic \nduring phasing have limitations. For example, some software require multiple \ninput sources (resulting in extensive storage requirements), or do not support \ncurrent genome builds. To address these challenges, we have developed \ntrioPhaser.  \n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dmiller903/trioPhaser/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dmiller903/trioPhaser/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dmiller903/trioPhaser"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "trioPhaser: Using Mendelian inheritance logic to improve genomic phasing of trios"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/Dockerfile/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/Dockerfile/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://drive.google.com/uc?export=view&id=1LXPqaC5SG05zVG8R_sCyaieGJIHeAWAC"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation (requires <a href=\"https://docs.docker.com/desktop/\">Docker installation</a>)",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\ndocker pull dmill903/triophaser:latest\n```"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dmiller903/trioPhaser/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 dmiller903\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "trioPhaser"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dmiller903"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 86371,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1441,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run trioPhaser on the included example data (see <a href=\"https://github.com/dmiller903/trioPhaser/blob/main/validate/validate.pdf\">here</a> for how we generated the files and for more details on how to run trioPhaser)",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Here we provide example code on how to execute trioPhaser. In this example, \nthe input files are provided within the container. Under normal circumstances, \nthe input files will be on your local machine. This example implies the following:\n\n1. There is a directory called `/Data` on the local machine.\n2. We attached and called this directory `/proj` within the container.\n3. We set `/proj` as our working directory within the container.\n4. The `haplotype_references` directory has been created and is located at \n`/Data/haplotype_references` (*this is where trioPhaser will store the \nhaplotype reference data).\n5. The output file will be written to `/Data/phased_output.vcf.gz`\n6. The container ID will be stored at `/Data/trio_phaser.out` upon execution. \n\nUpdate `/Data` and `haplotype_references` with the directories you want to use \non your local machine. For example, if you want the output to be stored at \n`/tmp` and within `/tmp` you have a folder called `references`, you would \nchange `/Data` to `/tmp` and `haplotype_references` to `references`.\n\nUse `docker run -t dmill903/triophaser:latest python3 /trio_phaser.py -h`\nlearn more about trioPhaser's arguments and how multiple trios can be used\nas input.\n\n```ignore\ndocker run -d -v /Data:/proj -w /proj -t dmill903/triophaser:latest \\\n  python3 /trio_phaser.py \\\n  -c /trioPhaser/validate/son_ashkenazim_GRCh38_chr22.g.vcf.gz \\\n  -p /trioPhaser/validate/father_ashkenazim_GRCh38_chr22.g.vcf.gz \\\n  -m /trioPhaser/validate/mother_ashkenazim_GRCh38_chr22.g.vcf.gz \\\n  -o /proj/phased_output.vcf.gz \\\n  -r /proj/haplotype_references \\\n  > /Data/trio_phaser.out\n```\n\n*\\*Note: The first time trioPhaser is run, it will download reference files, \nwhich may take a while depending on internet speed. Subsequent runs can use the\ncached reference files.*\n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:44:40",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "<a href=\"https://drive.google.com/uc?export=view&id=1LXPqaC5SG05zVG8R_sCyaieGJIHeAWAC\">\n    <img src=\"https://drive.google.com/uc?export=view&id=1LXPqaC5SG05zVG8R_sCyaieGJIHeAWAC\"\n    style=\"width: 300px; max-width: 100%; height: auto\"\n    title=\"Click for the larger version.\" />\n</a>\n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run trioPhaser on the included example data (see <a href=\"https://github.com/dmiller903/trioPhaser/blob/main/validate/validate.pdf\">here</a> for how we generated the files and for more details on how to run trioPhaser)",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Here we provide example code on how to execute trioPhaser. In this example, \nthe input files are provided within the container. Under normal circumstances, \nthe input files will be on your local machine. This example implies the following:\n\n1. There is a directory called `/Data` on the local machine.\n2. We attached and called this directory `/proj` within the container.\n3. We set `/proj` as our working directory within the container.\n4. The `haplotype_references` directory has been created and is located at \n`/Data/haplotype_references` (*this is where trioPhaser will store the \nhaplotype reference data).\n5. The output file will be written to `/Data/phased_output.vcf.gz`\n6. The container ID will be stored at `/Data/trio_phaser.out` upon execution. \n\nUpdate `/Data` and `haplotype_references` with the directories you want to use \non your local machine. For example, if you want the output to be stored at \n`/tmp` and within `/tmp` you have a folder called `references`, you would \nchange `/Data` to `/tmp` and `haplotype_references` to `references`.\n\nUse `docker run -t dmill903/triophaser:latest python3 /trio_phaser.py -h`\nlearn more about trioPhaser's arguments and how multiple trios can be used\nas input.\n\n```ignore\ndocker run -d -v /Data:/proj -w /proj -t dmill903/triophaser:latest \\\n  python3 /trio_phaser.py \\\n  -c /trioPhaser/validate/son_ashkenazim_GRCh38_chr22.g.vcf.gz \\\n  -p /trioPhaser/validate/father_ashkenazim_GRCh38_chr22.g.vcf.gz \\\n  -m /trioPhaser/validate/mother_ashkenazim_GRCh38_chr22.g.vcf.gz \\\n  -o /proj/phased_output.vcf.gz \\\n  -r /proj/haplotype_references \\\n  > /Data/trio_phaser.out\n```\n\n*\\*Note: The first time trioPhaser is run, it will download reference files, \nwhich may take a while depending on internet speed. Subsequent runs can use the\ncached reference files.*\n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "View log information output by trioPhaser",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```ignore\nCONTAINERID=\"cat /Data/trio_phaser.out\"\ndocker logs `$CONTAINERID` >> /Data/trio_phaser.out\n```\n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/trioPhaser/main/README.md",
      "technique": "header_analysis"
    }
  ]
}