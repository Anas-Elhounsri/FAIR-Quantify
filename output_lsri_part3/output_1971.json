{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/i-shah/genra-py"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-07T16:32:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-20T19:19:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Generalised Read-Across (GenRA) in Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9984144950943186,
      "result": {
        "original_header": "Generalised Read-Across (GenRA) in Python",
        "type": "Text_excerpt",
        "value": "\n[Read-Across](https://www.oecd.org/env/ehs/risk-assessment/groupingofchemicalschemicalcategoriesandread-across.htm) is widely used to fill data-gaps for untested chemicals. We developed [Genralised Read-Across (GenRA)](https://doi.org/10.1016/j.yrtph.2019.104480) as a computational toxicology tool to mimic a human expert\u2019s manual reasoning based on similarity-weighted activity. This repository contains a Python 3 implementation for GenRA, called genra-py, which is based on the [scikit-learn](https://scikit-learn.org) [estimator](https://scikit-learn.org/stable/modules/generated/sklearn.base.BaseEstimator.html?highlight=estimator#sklearn.base.BaseEstimator). We also describe two potential uses-cases for genra-py that uses published chemical structure, bioactivity and toxicity data.    \n"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8403279456870875,
      "result": {
        "original_header": "Alternatives",
        "type": "Text_excerpt",
        "value": "Running the notebooks in this repository requires Python 3, [Anaconda](https://www.anaconda.com/), [Jupter](https://jupyter.org/)  and some additional configuration.  \n"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.943948119163286,
      "result": {
        "original_header": "Project Organization",
        "type": "Text_excerpt",
        "value": "    \u251c\u2500\u2500 LICENSE\n    \u251c\u2500\u2500 Makefile           <- Makefile with commands like `make data` or `make train`\n    \u251c\u2500\u2500 README.md          <- The top-level README for developers using this project.\n    \u251c\u2500\u2500 data               <- Data from public domain sources.\n    \u2502\u00a0\u00a0 \u2514\u2500 shah-2016       <- Data from https://doi.org/10.1016/j.yrtph.2016.05.008\n    \u2502\u00a0\u00a0 \u2514\u2500 helman-2019     <- Data from https://doi.org/10.1016/j.yrtph.2016.05.008\n    |\n    \u251c\u2500\u2500 notebooks          <- Jupyter notebooks \n    |   |                     \n    |   \u251c\u2500dotenv           <- copy this to \".env\" and edit this file\n    |   \u251c\u2500app-note         <- use-cases described in manuscript\n    |   \u2514\u2500manual           <- user-manual as a jupyter notebook\n    \u2502\n    \u251c\u2500\u2500 requirements.txt   <- The requirements file for reproducing the analysis environment, e.g.\n    \u2502                         generated with `pip freeze > requirements.txt`\n    \u251c\u2500\u2500 genra-py.yml       <- The spec for creating a conda environment.\n    |                          conda env create -f condaenv.yml\n    \u251c\u2500\u2500 dist               <- Source and Wheel Distributions\n    |\n    \u2514\u2500\u2500 genra              <- Source code  \n    \u00a0 \u00a0  \u00a0\u00a0 \u251c\u2500chm          <- Chemical structure processing\n            \u251c\u2500rax          <- Read Across prediction\n            \u2514\u2500utl          <- Utilities\n            \n    \u00a0\u00a0   \u00a0\u00a0\n \n"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/i-shah/genra-py/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i-shah/genra-py/main/notebooks/misc/Tutorial_genra-py.ipynb"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/notebooks/misc/Tutorial_genra-py.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i-shah/genra-py/main/notebooks/misc/example_j_index_error.ipynb"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/notebooks/misc/example_j_index_error.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i-shah/genra-py/main/notebooks/manual/001-genra-py-user-manual.ipynb"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/notebooks/manual/001-genra-py-user-manual.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i-shah/genra-py/main/notebooks/app-note/010-genra-py-shah-2016.ipynb"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/notebooks/app-note/010-genra-py-shah-2016.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i-shah/genra-py/main/notebooks/app-note/010-genra-py-helman-2019.ipynb"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/notebooks/app-note/010-genra-py-helman-2019.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/i-shah/genra-py/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "i-shah/genra-py"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Generalised Read-Across (GenRA) in Python"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/i-shah/genra-py/main/figs/genra-viz.jpg"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9774509114350296,
      "result": {
        "original_header": "Alternatives",
        "type": "Text_excerpt",
        "value": "Running the notebooks in this repository requires Python 3, [Anaconda](https://www.anaconda.com/), [Jupter](https://jupyter.org/)  and some additional configuration.  \n1. Install Python 3, anaconda/conda and Jupyter Lab\n2. Clone this repo: \\\n   `git clone https://github.com/i-shah/genra-py.git`\n3. Go into genra-py directory and create *genra-py* conda environment: \\\n   `make -n create_environment`\n4. Activate conda environment:\\\n   `conda activate genra-py`\n5. Add this conda environment as a kernel to jupyter-lab: \\\n   `ipython kernel install --user --name=genra-py`\n6. Copy the notebooks/dotenv file to notebooks/.env and edit the environemnt variables (replace path_to_top with the correct directory name):\\\n    `TOP=path_to_top/genra-py\n    SRC=path_to_top/genra-py/src\n    DAT=path_to_top/genra-py/data\n    FIG=path_to_top/genra-py/figs\n    ` \nFurther details are provided in the notebooks/manual directory.  \nSee https://github.com/patlewig/UNC_Rax and run the example using the Binder https://mybinder.org/ \n"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Project Organization",
        "type": "Text_excerpt",
        "value": "    \u251c\u2500\u2500 LICENSE\n    \u251c\u2500\u2500 Makefile           <- Makefile with commands like `make data` or `make train`\n    \u251c\u2500\u2500 README.md          <- The top-level README for developers using this project.\n    \u251c\u2500\u2500 data               <- Data from public domain sources.\n    \u2502\u00a0\u00a0 \u2514\u2500 shah-2016       <- Data from https://doi.org/10.1016/j.yrtph.2016.05.008\n    \u2502\u00a0\u00a0 \u2514\u2500 helman-2019     <- Data from https://doi.org/10.1016/j.yrtph.2016.05.008\n    |\n    \u251c\u2500\u2500 notebooks          <- Jupyter notebooks \n    |   |                     \n    |   \u251c\u2500dotenv           <- copy this to \".env\" and edit this file\n    |   \u251c\u2500app-note         <- use-cases described in manuscript\n    |   \u2514\u2500manual           <- user-manual as a jupyter notebook\n    \u2502\n    \u251c\u2500\u2500 requirements.txt   <- The requirements file for reproducing the analysis environment, e.g.\n    \u2502                         generated with `pip freeze > requirements.txt`\n    \u251c\u2500\u2500 genra-py.yml       <- The spec for creating a conda environment.\n    |                          conda env create -f condaenv.yml\n    \u251c\u2500\u2500 dist               <- Source and Wheel Distributions\n    |\n    \u2514\u2500\u2500 genra              <- Source code  \n    \u00a0 \u00a0  \u00a0\u00a0 \u251c\u2500chm          <- Chemical structure processing\n            \u251c\u2500rax          <- Read Across prediction\n            \u2514\u2500utl          <- Utilities\n            \n    \u00a0\u00a0   \u00a0\u00a0\n \n"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/i-shah/genra-py/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021, patlewig\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genra-py"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "i-shah"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 2820444,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 121500,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2201,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i-shah/genra-py/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "i-shah",
          "type": "User"
        },
        "date_created": "2020-12-07T18:09:10Z",
        "date_published": "2020-12-07T18:17:27Z",
        "html_url": "https://github.com/i-shah/genra-py/releases/tag/v1.0.0",
        "release_id": 34943041,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/i-shah/genra-py/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/i-shah/genra-py/releases/34943041",
        "value": "https://api.github.com/repos/i-shah/genra-py/releases/34943041",
        "zipball_url": "https://api.github.com/repos/i-shah/genra-py/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:05:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Easy starts",
        "type": "Text_excerpt",
        "value": "`pip install genra`\n\nor try our Docker image from on dockerhub at [https://hub.docker.com/r/patlewig/genra-py]\n\nThe image contains the scipy Jupyter notebook, RDKit and a pip installable version of genra-py (https://github.com/i-shah/genra-py/). \n\nIn a terminal type:\n\n`docker run --rm -p 8888:8888 -e JUPYTER_ENABLE_LAB=yes --user $(id -u):$(id -g) --group-add users -v \"$PWD\":/home/jovyan patlewig/genra-py`\n\nCopy/paste the resulting url link into a new browser window. This should start the Jupyter lab session from your current working directory.\n\nTo avoid typing the long argument in the terminal, using docker-compose is an alternative means of running the container.\nType `docker-compose -f genra-docker-compose.yml up`\nTo stop the container simply type:\n`docker-compose -f genra-docker-compose.yml down`\n\n"
      },
      "source": "https://raw.githubusercontent.com/i-shah/genra-py/main/README.md",
      "technique": "header_analysis"
    }
  ]
}