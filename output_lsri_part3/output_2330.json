{
  "application_domain": [
    {
      "confidence": 34.06,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mohofar/CovidCtNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-27T12:31:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-30T05:53:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9994083818147189,
      "result": {
        "original_header": "COVIDCTNET",
        "type": "Text_excerpt",
        "value": "Here is an implementation of CovidCTNet model for the prediction of COVID-19 cases based on CT images. \nFor more detail about the project please use [this link](https://www.nature.com/articles/s41746-021-00399-3) to access the paper.\nThese codes are implemented on Google Colab and for Neural Networks models we use Keras. Any library you need for this\nproject is provided inside the codes.\n![Pipeline](/images/image_2020-04-26_14-48-21.png)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mohofar/covidctnet/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9948334075501749,
      "result": {
        "original_header": "Dicom file",
        "type": "Text_excerpt",
        "value": "These codes prepared for dicom CT images. Please clone the repository and copy all .dcm files of a patient in a folder and copy all folders of patients\nin related folder in `/Data/DCM/...` folder. \n"
      },
      "source": "https://raw.githubusercontent.com/mohofar/covidctnet/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9446700247231103,
      "result": {
        "original_header": "How to train the model",
        "type": "Text_excerpt",
        "value": "Before training please provide Dicom images. If you want to use trained model, please download weights and add them to the \"Model_weight\" folder.\nFollowing steps can be helpful for your training:\n1.  Run all cells of `/Code/preprocessing/preprocessing-step-1.ipynb` in sequential order.\n2.  Run all cells of `/Code/preprocessing/preprocessing-step-2.ipynb` insequential order.\n3.  Run all cells of `/Code/training and testing/Training-CovidCTNet.ipynb`in sequential order. \n* If you want to train the model from scratch, don't use any weight loading in step 3.\n* To train the 3D CNN model and classify if the CT image of the new patient is COVID-19, CAP or Control; you can either initialize weights of our trained model in the third link at the table, or train from the scratch on your own.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mohofar/covidctnet/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9671585606548151,
      "result": {
        "original_header": "Steps",
        "type": "Text_excerpt",
        "value": "For testing the model on your dataset, please follow this list:\n1.  Run all cells of `/Code/preprocessing/preprocessing-step-1.ipynb` in sequential order.\n2.  Run all cells of `/Code/preprocessing/preprocessing-step-2.ipynb` in sequential order.\n3.  Run all cells of `/Code/training and testing/Testing-CovidCTNet.ipynb`in sequential order. \n\n** Please make sure you have enough space on your drive. Step 1 and 2 of preprocessing will convert your dcm file to numpy files to use and\nall subfolders in `preprocessed` folder will be occupied with referred numpy files. If you have any problem with the space in your drive you can increase spacing\nform [1,1,1] in preprocessing to larger numbers.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mohofar/covidctnet/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mohofar/covidctnet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mohofar/covidctnet/main/Codes/preprocessing/preprocessing-step-1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/mohofar/covidctnet/main/Codes/preprocessing/preprocessing-step-1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mohofar/covidctnet/main/Codes/preprocessing/preprocessing-step-2.ipynb"
      },
      "source": "https://raw.githubusercontent.com/mohofar/covidctnet/main/Codes/preprocessing/preprocessing-step-2.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mohofar/CovidCtNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mohofar/CovidCtNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "COVIDCTNET"
      },
      "source": "https://raw.githubusercontent.com/mohofar/covidctnet/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mohofar/covidctnet/main//images/image_2020-04-26_14-48-21.png"
      },
      "source": "https://raw.githubusercontent.com/mohofar/covidctnet/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9089495914585795,
      "result": {
        "original_header": "Dicom file",
        "type": "Text_excerpt",
        "value": "These codes prepared for dicom CT images. Please clone the repository and copy all .dcm files of a patient in a folder and copy all folders of patients\nin related folder in `/Data/DCM/...` folder. \n"
      },
      "source": "https://raw.githubusercontent.com/mohofar/covidctnet/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9498316356564159,
      "result": {
        "original_header": "How to train the model",
        "type": "Text_excerpt",
        "value": "Before training please provide Dicom images. If you want to use trained model, please download weights and add them to the \"Model_weight\" folder.\nFollowing steps can be helpful for your training:\n1.  Run all cells of `/Code/preprocessing/preprocessing-step-1.ipynb` in sequential order.\n2.  Run all cells of `/Code/preprocessing/preprocessing-step-2.ipynb` insequential order.\n3.  Run all cells of `/Code/training and testing/Training-CovidCTNet.ipynb`in sequential order. \n"
      },
      "source": "https://raw.githubusercontent.com/mohofar/covidctnet/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9832524991820637,
      "result": {
        "original_header": "Steps",
        "type": "Text_excerpt",
        "value": "\n** Please make sure you have enough space on your drive. Step 1 and 2 of preprocessing will convert your dcm file to numpy files to use and\nall subfolders in `preprocessed` folder will be occupied with referred numpy files. If you have any problem with the space in your drive you can increase spacing\nform [1,1,1] in preprocessing to larger numbers.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mohofar/covidctnet/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mohofar/CovidCtNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CovidCtNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mohofar"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 658087,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 30428,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mohofar/covidctnet/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:34:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ]
}