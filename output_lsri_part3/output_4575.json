{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "ACValidator"
        ],
        "type": "Text_excerpt",
        "value": "Pre-print of our ACValidator manuscript is currently up on biorxiv: https://www.biorxiv.org/content/10.1101/556597v1\ndoi: https://doi.org/10.1101/556597\n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tgen/ACValidator"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "ACValidator"
        ],
        "type": "Text_excerpt",
        "value": "This code was developed and is maintained by Shobana Sekar, Liang lab, Translational Genomics Research Institute.\nPlease send your comments,questions and suggestions to ssekar@tgen.org\n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-08-20T19:36:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-27T05:14:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An assembly based approach for in silico validation of circular RNAs"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9975443206703957,
      "result": {
        "original_header": "ACValidator",
        "type": "Text_excerpt",
        "value": "Assembly based Circular RNA validator (ACValidator) is a bioinformatics approach to perform in silico validation of selected circular RNA junction(s). ACValidator operates in three phases: extraction of reads from SAM file, generation of a \u201cpseudo-reference\u201d file, and assembly and alignment of extracted reads.\n \n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9780921681470455,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "ACValidator results are written to a folder named \\<InputSam\\>\\_validation\\_tests\\_<window_size>, which is further organized coordinate wise, with results for each coordinate of interest inside its respective folder. Inside each coordinate folder, ACValidator produces multiple output files, including the sorted sam, bam file of the extracted regions, pseudoreference fasta file, trinity fasta file containing the assembled contigs as well as text files named as \u201cCheck\\_overlap\\_out\\_\\*\\_coordinate.txt\u201d for each of the 4 stringency criteria. These are 3 column text files containing the name and sequence of the contig that overlaps with the pseudo-reference, as well as the string \u201cFound overlap\u201d. So when these files are empty, or the folder for a coordinate is not created, it means that the respective circRNA coordinate was not validated by ACValidator.  \n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8601779141293963,
      "result": {
        "original_header": "Notes",
        "type": "Text_excerpt",
        "value": "Some circRNA detection tools produce 1-based coordinates while other produce 0-based coordinates. ACValidator assumes that the supplied circRNA coordinates are 0-based.\nIf not, please convert them to 0-based coordinates in order for ACValidator to run properly. \n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tgen/ACValidator/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tgen/ACValidator/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tgen/ACValidator"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tgen/ACValidator/master/ACV_launcher.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running ACValidator after installation through pip install:",
        "parent_header": [
          "ACValidator",
          "Set up instructions"
        ],
        "type": "Text_excerpt",
        "value": "In order to install ACValidator, clone ACValidator from github and use pip install as below: \n\n```bash\ngit clone https://github.com/tgen/ACValidator.git\ncd ACValidator\npip install --user .\n```\n\nOnce this is installed, make sure the install location is added in your PATH and then invoke ACValidator from the location of your input SAM file.\n\nTo invoke ACValidator for a single coordinate:\n\n```bash\nACValidator -i InputSam -c 8:103312227-103372418 -w 300 --log-filename Log.txt\n```\n\nTo invoke ACValidator for multiple coordinates provided in a text file named CoordinateFile.txt:\n\n```bash\nfor coordinate in `cat CoordinateFile.txt`; do ACValidator -i InputSam -c ${coordinate} -w ${window_size} --log-filename Log.txt; done\n```\n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9977515449713598,
      "result": {
        "original_header": "Notes",
        "type": "Text_excerpt",
        "value": "Make sure to change paths in the main script ACValidator.py for dependencies such as Samtools, BWA, Trinity etc to point to the installations in your environment. Also make sure REFPATH folder contains the individual chromosome reference fasta files (e.g., 1.fa, 2.fa...). \n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9694207348297185,
      "result": {
        "original_header": "Test data",
        "type": "Text_excerpt",
        "value": "http://tools.tgen.org/Files/ACValidator_test_data/ \nInstructions to run are available inside test\\_data/README\\_for\\_testData.txt \n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8496902750937034,
      "result": {
        "original_header": "Test data",
        "type": "Text_excerpt",
        "value": "Instructions to run are available inside test\\_data/README\\_for\\_testData.txt \n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tgen/ACValidator/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Translational Genomics Research Institute\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ACValidator"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "tgen"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 11866,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2682,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System Requirements",
        "parent_header": [
          "ACValidator",
          "Set up instructions"
        ],
        "type": "Text_excerpt",
        "value": "Linux OS (tested on CentOS 7)\n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "ACValidator",
          "Set up instructions"
        ],
        "type": "Text_excerpt",
        "value": "(a) Trinity assembler (tested with v2.3.1)\n(b) Python with pysam package installed (tested with v2.7.13)\n(c) Bowtie2 v2.3.0\n(d) Samtools v1.4\n(e) BWA v0.7.12\n\nThere are 2 ways to run ACValidator: 1) directly from source code, or 2) using pip install\n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running ACValidator directly from source code:",
        "parent_header": [
          "ACValidator",
          "Set up instructions"
        ],
        "type": "Text_excerpt",
        "value": "In order to run ACValidator directly using the source code without any installation, copy the main script ACValidator.py and optionally the launcher ACV\\_launcher.sh (if you have multiple coordinates to validate) to the location of your input SAM file. \n\nThen, to invoke the script for a single SAM file and single coordinate, call as:\n\n```bash\npython ACValidator.py -i InputSam -c CircRNA_coordinate -w Window_size --log-filename Log.txt\n```\n\nTo invoke for multiple coordinates, use:\n\n```bash\n./ACV_launcher.sh InputSam CoordinateList.txt WindowSize LogFileName.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running ACValidator after installation through pip install:",
        "parent_header": [
          "ACValidator",
          "Set up instructions"
        ],
        "type": "Text_excerpt",
        "value": "In order to install ACValidator, clone ACValidator from github and use pip install as below: \n\n```bash\ngit clone https://github.com/tgen/ACValidator.git\ncd ACValidator\npip install --user .\n```\n\nOnce this is installed, make sure the install location is added in your PATH and then invoke ACValidator from the location of your input SAM file.\n\nTo invoke ACValidator for a single coordinate:\n\n```bash\nACValidator -i InputSam -c 8:103312227-103372418 -w 300 --log-filename Log.txt\n```\n\nTo invoke ACValidator for multiple coordinates provided in a text file named CoordinateFile.txt:\n\n```bash\nfor coordinate in `cat CoordinateFile.txt`; do ACValidator -i InputSam -c ${coordinate} -w ${window_size} --log-filename Log.txt; done\n```\n"
      },
      "source": "https://raw.githubusercontent.com/tgen/ACValidator/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:55:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}