{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgement",
        "type": "Text_excerpt",
        "value": "We thank the following Git repositories that gave me a lot of inspirations:\n   \n1. [REINVENT](https://github.com/MarcusOlivecrona/REINVENT)\n2. [ORGAN](https://github.com/gablg1/ORGAN)\n3. [SeqGAN](https://github.com/LantaoYu/SeqGAN)\n\n"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 0.8205818628352274,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 31.69,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 85.47,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "1. [Liu X, IJzerman AP, van Westen GJP. Computational Approaches for De Novo Drug Design: Past, Present, and Future. Methods Mol Biol. 2021;2190:139-65.](https://link.springer.com/protocol/10.1007%2F978-1-0716-0826-5_6)\n\n2. [Liu X, Ye K, van Vlijmen HWT, IJzerman AP, van Westen GJP. DrugEx v3: Scaffold-Constrained Drug Design with Graph Transformer-based Reinforcement Learning. Preprint](https://chemrxiv.org/engage/chemrxiv/article-details/61aa8b58bc299c0b30887f80)\n\n3. [Liu X, Ye K, van Vlijmen HWT, Emmerich MTM, IJzerman AP, van Westen GJP. DrugEx v2: De Novo Design of Drug Molecule by Pareto-based Multi-Objective Reinforcement Learning in Polypharmacology. Journal of cheminformatics 2021:13(1):85.](https://doi.org/10.1186/s13321-021-00561-9) \n\n4. [Liu X, Ye K, van Vlijmen HWT, IJzerman AP, van Westen GJP. An exploration strategy improves the diversity of de novo ligands using deep reinforcement learning: a case for the adenosine A2A receptor. Journal of cheminformatics. 2019;11(1):35.](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-019-0355-6)\n"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/XuhanLiu/DrugEx"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-10-12T13:46:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-20T12:08:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Deep learning toolkit for Drug Design with Pareto-based Multi-Objective optimization in Polypharmacology"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "<img src='figures/logo.png' width=30% align=right>\n<p align=left width=70%>Due to the large drug-like chemical space available to search for feasible drug-like molecules, rational drug design often starts from specific scaffolds to which side chains/substituents are added or modified. With the rapid growth of the application of deep learning in drug discovery, a variety of effective approaches have been developed for de novo drug design. In previous work, we proposed a method named DrugEx, which can be applied in polypharmacology based on multi-objective deep reinforcement learning. However, the previous version is trained under fixed objectives similar to other known methods and does not allow users to input any prior information (i.e. a desired scaffold). In order to improve the general applicability, we updated DrugEx to design drug molecules based on scaffolds which consist of multiple fragments provided by users. In this work, the Transformer model was employed to generate molecular structures. The Transformer is a multi-head self-attention deep learning model containing an encoder to receive scaffolds as input and a decoder to generate molecules as output. In order to deal with the graph representation of molecules we proposed a novel positional encoding for each atom and bond based on an adjacency matrix to extend the architecture of the Transformer. Each molecule was generated by growing and connecting procedures for the fragments in the given scaffold that were unified into one model. Moreover, we trained this generator under a reinforcement learning framework to increase the number of desired ligands. As a proof of concept, our proposed method was applied to design ligands for the adenosine A2A receptor (A2AAR) and compared with SMILES-based methods. The results demonstrated the effectiveness of our method in that 100% of the generated molecules are valid and most of them had a high predicted affinity value towards A2AAR with given scaffolds. \n\n<b>Keywords</b>: deep learning, reinforcement learning, policy gradient, drug design, Transformer, multi-objective optimization</p>\n"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8885071639033751,
      "result": {
        "original_header": "DrugEx RELEASE NOTES (v3)",
        "type": "Text_excerpt",
        "value": "<b>Drug Explorer (DrugEx v3)</b>: Scaffold-Constrained Drug Design with Graph Transformer-based Reinforcement Learning \nPlease see the LICENSE file for the license terms for the software. Basically it's free to academic users. If you do wish to sell the software or use it in a commercial product, then please contact us: \n\"A small step for exploring the drug space in need, A giant leap for exploiting a healthy state indeed\"\n \n"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/XuhanLiu/DrugEx/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 67
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/XuhanLiu/DrugEx/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "XuhanLiu/DrugEx"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DrugEx RELEASE NOTES (v3)"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/XuhanLiu/DrugEx/master/figures/fig_1.png"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/XuhanLiu/DrugEx/master/figures/fig_1.png"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/XuhanLiu/DrugEx/master/figures/fig_2.png"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/XuhanLiu/DrugEx/master/figures/fig_3.png"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/XuhanLiu/DrugEx/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cheminformatics, deep-learning, graph-transformer, multi-objective-optimization, reinforcement-learning"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright <2017> <Xuhan Liu>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DrugEx"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "XuhanLiu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 173251,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "Firstly, ensure that the version of your Python >= 3.7. \nWe recommend Anaconda to manage the version of Python and installed packages.\n\nSecondly, all the following packages are installed in your machine:\n\n**1. [Numpy](https://numpy.org/)** (version >= 1.19)\n\n        $ conda install numpy\n\n**2. [Scikit-Learn](https://scikit-learn.org/stable/)** (version >= 0.23)\n\n        $ conda install scikit-learn\n\n**3. [Pandas](https://pandas.pydata.org/)** (version >= 1.2.2)\n\n        $ conda install pandas\n\n**4. [PyTorch](https://PyTorch.org/)**  (version == 1.7)\n\n        $ conda install pytorch torchvision cudatoolkit=x.x -c pytorch \n    \n        Note: it depends on the GPU device and CUDA tookit \n              (x.x is the version of CUDA)\n\n**5. [Matplotlib](https://matplotlib.org/)** (version >= 2.0)\n\n        $ conda install matplotlib\n   \n**6. [RDKit](https://www.rdkit.org/)** (version >= 2020.03)\n\n        $ conda install -c rdkit rdkit"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:35:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 196
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "![Fig3](figures/fig_3.png)\n"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "For designing the novel drug molecules with SMILES representation, you should do the following steps sequentially by running scripts:\n\n1. dataset.py:\n \n    Preparing your dataset for pre-training and fine-tuning the RNN model as initial states of exploitation \n    network and exploration network.\n    \n2. environ.py:\n\n    Training your predictor as the environment for providing the final reward for the action from the agent. \n    The performance can also be evaluated through n-fold cross validation and independent test. \n\n3. train_graph.py:\n\n    Pre-training an training the graph transformer model with graph representation under supvervision and reinforcement learning frameworks, respectively.\n    \n4. train_smiles.py: \n\n    Pre-training an training the SMILES-based deep learning models with SMILES representation under supvervision and reinforcement learning frameworks, respectively.\n    \n    \n5. designer.py:\n\n    Finally, generating molecules with well-trained deep learning model with either graph or SMILES representations. \n6. plot.py:\n\n    It provides a variety of the methods to measure the performance of every step during the training process of \n    DrugEx, and form the figure for results visualization.     \n\n        \nIn addition, this toolkit also provides some other scripts for definition of special data structures, model architectures and coefficient measurements, etc.\n\n1. models/*.py:\n\n    It contains all of the deep learning models that possibly used in this project, including single/multiple \n    fully-connected regression/classification models, RNN generative model and highway CNN classification model.\n\n2. utils/vocab.py: \n\n    It defines some special data structures, such as vocabulary of SMILES tokens and elements in the graph, molecule dataset, environment \n    and some methods for SMILES and graph checking. \n    The statistical methods that extracting properties from generated molecules.\n\n3. utils/metric.py:\n\n    The statistical methods that extracting properties from generated molecules.\n\n4. utils/fingerprints.py:\n\n    There are a variety of chemical fingerprints calculations, such as ECFP, MACCS etc.\n\n5. utils/modifier.py\n\n    It provides a variety of desirability function to normalize the scoring furntions. \n    For more details, please check [GuacaMol](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00839) benchemark.\n\n6. utils/objective.py\n\n    It provides the construction of different scoring functions, including similary score,\n    chemical properties, QSAR modelling, etc. Moreoever, it can also integrate multiple \n    objective into an environment to calculate reward for the agent. \n\n7. utils/nsgaii.py\n\n    The implementation of non-dominate sorting and crowding distance algorithm (NSGAII). \n    Importantly, we employ PyTorch to accelerate its performance and also modify the\n    calculation of crowding distance with Tanimoto-distance.\n\n8. utils/sacorer.py  \n  \n    The implementation of SA score to measure the synthezability score of each molecule.\n    More details about SA score can be found [here](https://jcheminf.biomedcentral.com/articles/10.1186/1758-2946-1-8)\n\n"
      },
      "source": "https://raw.githubusercontent.com/XuhanLiu/DrugEx/master/README.md",
      "technique": "header_analysis"
    }
  ]
}