{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing",
        "parent_header": [
          "Pentad"
        ],
        "type": "Text_excerpt",
        "value": "If you find this visualization useful for your research, please cite our paper:\n\nMikhail D. Magnitov, Azat K. Garaev, Alexander V. Tyakht, Sergey V. Ulianov & Sergey V. Razin. **Pentad: a tool for distance-dependent analysis of Hi-C interactions within and between chromatin compartments.** *BMC Bioinformatics* (2022)\n* doi: [10.1186/s12859-022-04654-6](https://doi.org/10.1186/s12859-022-04654-6)\n"
      },
      "source": "https://raw.githubusercontent.com/magnitov/pentad/development/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/magnitov/pentad"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-01T14:22:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-23T19:32:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A simple tool to perform the calculation and visualization of the average chromatin A/B compartment."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Pentad"
        ],
        "type": "Text_excerpt",
        "value": "Understanding the role of various factors in 3D genome organisation is essential to determine their impact on shaping large-scale chromatin units such as euchromatin and heterochromatin compartments. However, detailed analysis of changes within and between these compartments is complicated because of a lack of suitable computational methods. To fill this gap, we developed Pentad, a tool to perform calculation, visualisation and quantitative analysis of the average chromatin compartment at different genomic scales.\n\nThe average compartment visualisation provided by Pentad represents short- and long-range contacts within A and B compartments together with intercompartmental interactions. The visualisation comprises several types of areas from the Hi-C matrix that are determined based on the annotated A/B compartment signal. Here is the diagram illustrating how the average compartment visualization is created:\n\n![Pentads diagram](https://github.com/magnitov/pentads/blob/development/diagram1.png)\n\nAdditionally, Pentad is able calculate compartment strength directly from the average compartments. Here is the diagram demonstrating how this calculations are performed:\n\n![Compartment strength](https://github.com/magnitov/pentads/blob/development/diagram2.png)\n"
      },
      "source": "https://raw.githubusercontent.com/magnitov/pentad/development/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/magnitov/pentad/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/magnitov/pentad/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "magnitov/pentad"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pentad"
      },
      "source": "https://raw.githubusercontent.com/magnitov/pentad/development/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/magnitov/pentad/development/run_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/magnitov/pentad/development/paper_code/04_get_pentads.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/magnitov/pentad/development/paper_code/02_technical_tests.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/magnitov/pentad/development/paper_code/03_biological_tests.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/magnitov/pentad/development/paper_code/01_load_data.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/magnitov/pentads/development/diagram1.png"
      },
      "source": "https://raw.githubusercontent.com/magnitov/pentad/development/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/magnitov/pentads/development/diagram2.png"
      },
      "source": "https://raw.githubusercontent.com/magnitov/pentad/development/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Pentad"
        ],
        "type": "Text_excerpt",
        "value": "1. Clone the repo to your local machine:\n\n```\ngit clone https://github.com/magnitov/pentads.git\ncd ./pentads/\n```\n\n2. Create conda environment with all the dependencies:\n\n```\nconda env create -n pentads-env -f environment.yml\nconda activate pentads-env\n```\n\n3. Run scripts on the sample dataset (this should take about 15-25 minutes to complete):\n\n```\nbash run_test.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/magnitov/pentad/development/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/magnitov/pentad/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "compartments, hi-c, pileup"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Mikhail Magnitov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/magnitov/pentad/development/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pentad"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "magnitov"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 86706,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 17751,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/magnitov/pentad/development/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:56:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameters",
        "parent_header": [
          "Pentad",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Here is the full description of parameters you may find in our scripts:\n\n*  **cool_file**\n\nPath to the cool file with Hi-C matrix for which you want to create an average compartment.\n\n*  **comp_signal**\n\nPath to the bedGraph file with compartment signal. You could use the \u2018::\u2019 syntax to specify a column name from the bedGraph file.\n\n* **rescale_size**\n\nSize to which all the areas in the average compartment will be rescaled. The default is 33 bins.\n\n* **min_dimension**\n\nMinimum dimension of an area (in genomic bins) to be considered for analysis. This is used to filter the short unreliable compartments with noisy compartment signal. The default is 3 bins.\n\n* **max_zeros**\n\nMaximum fraction of bins with zero contacts in an area. This is used to filter sparse regions in the Hi-C matrix. The default is 0.5.\n\n* **cutoff**\n\nMaximum distance between two intervals in the chromosome. We find that compartment regions that are located very far from one another don't add up any significant information, therefore we set a cutoff for the distance between them. This is used only for *cis* and *cis* interactions stratified by distance.\n\n* **distances**\n\nDistance boundaries in Mb separated by space. For example, 10 100 will give <10 Mb, 10-100 Mb, >100 Mb. This is used only for *cis* interactions stratified by distance.\n\n* **excl_chrms**\n\nChromosomes to exclude from the analysis. By default, we exclude Y,M, and MT, which are sometimes presented in the Hi-C matrices.\n\n* **out_pref**\n\nPrefix for the output files. By default, we save the output to the same directory with prefix *pentad*.\n\n* **save_submatrices**\n\nA flag that indicates whether to save the extracted submatrices. Useful in case you want to perform any downstream analyses for the areas.\n\n* **center_width**\n\nFraction of the central fragment of the square that represents intercompartental interactions used for compartment strenght quantification.\n\n* **closed**\n\nFor *cis* interactions stratified by distance whether to plot a closed intervals (omitting the last section).\n"
      },
      "source": "https://raw.githubusercontent.com/magnitov/pentad/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Average compartment calculation",
        "parent_header": [
          "Pentad",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "For calculating the average compartment in any mode you will need two inputs: cool file with Hi-C contact matrix and bedGraph file with compartment signal. The other parameters are optional.\n\n**Average compartment in *cis*:**\n\n```\nusage: get_pentad_cis.py [-h] [--rescale_size RESCALE_SIZE] [--min_dimension MIN_DIMENSION] [--max_zeros MAX_ZEROS]\n                         [--cutoff CUTOFF] [--excl_chrms EXCL_CHRMS] [--out_pref OUT_PREF] [--save_submatrices]\n                         cool_file comp_signal\n```\n\n**Average compartment in *trans*:**\n\n```\nusage: get_pentad_trans.py [-h] [--rescale_size RESCALE_SIZE] [--min_dimension MIN_DIMENSION] [--max_zeros MAX_ZEROS]\n                           [--excl_chrms EXCL_CHRMS] [--out_pref OUT_PREF] [--save_submatrices]\n                           cool_file comp_signal\n```\n\n**Average compartment in *cis* by distance:**\n\n```\nusage: get_pentad_distance.py [-h] [--rescale_size RESCALE_SIZE] [--min_dimension MIN_DIMENSION] [--max_zeros MAX_ZEROS] \n                              [--cutoff CUTOFF] --distances DISTANCES [DISTANCES ...] [--excl_chrms EXCL_CHRMS] [--out_pref OUT_PREF]\n                              cool_file comp_signal\n```\n"
      },
      "source": "https://raw.githubusercontent.com/magnitov/pentad/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Visualization",
        "parent_header": [
          "Pentad",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "We have a separate script for the visualization of the output files. It automatically detects which type of average compartment was calculated and creates a visualization for you. It requires only the file with calculated pentad, however there are a few parameters to tune your visualization.\n\n```\nusage: plot_pentad.py [-h] [--vmin VMIN] [--vmax VMAX] [--cmap CMAP]\n                      [--title TITLE] [--closed] [--out_pref OUT_PREF]\n                      [--format FORMAT] [--compare COMPARE]\n                      average_compartment_path\n```\n"
      },
      "source": "https://raw.githubusercontent.com/magnitov/pentad/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compartment strength quantification",
        "parent_header": [
          "Pentad",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "For calculating the average compartment strength in any mode you will need same parameters and input files as for average compartment calculation.\n\n**Compartment strength in *cis*:**\n\n```\nusage: quant_strength_cis.py [-h] [--rescale_size RESCALE_SIZE] [--min_dimension MIN_DIMENSION]\n                             [--max_zeros MAX_ZEROS] [--cutoff CUTOFF] [--center_width CENTER_WIDTH]\n                             [--incl_chrms INCL_CHRMS] [--excl_chrms EXCL_CHRMS]\n                             [--out_pref OUT_PREF]\n                             cool_file comp_signal\n```\n\n**Compartment strength in *trans*:**\n\n```\nusage: quant_strength_trans.py [-h] [--rescale_size RESCALE_SIZE] [--min_dimension MIN_DIMENSION]\n                               [--max_zeros MAX_ZEROS] [--center_width CENTER_WIDTH]\n                               [--incl_chrms INCL_CHRMS] [--excl_chrms EXCL_CHRMS]\n                               [--out_pref OUT_PREF]\n                               cool_file comp_signal\n```\n\n**Compartment strength in *cis* by distance:**\n\n```\nusage: quant_strength_distance.py [-h] [--rescale_size RESCALE_SIZE] [--min_dimension MIN_DIMENSION]\n                                  [--max_zeros MAX_ZEROS] [--cutoff CUTOFF] --distances DISTANCES\n                                  [DISTANCES ...] [--center_width CENTER_WIDTH]\n                                  [--incl_chrms INCL_CHRMS] [--excl_chrms EXCL_CHRMS]\n                                  [--out_pref OUT_PREF]\n                                  cool_file comp_signal\n```\n\nPlease note that compartments strength in trans calculations are rather sensitive to `max_zeros` parameter.\n\n"
      },
      "source": "https://raw.githubusercontent.com/magnitov/pentad/development/README.md",
      "technique": "header_analysis"
    }
  ]
}