{
  "application_domain": [
    {
      "confidence": 26.05,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mattilalab/autocoev"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-18T18:38:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-01T13:49:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AutoCoEv \u2013 a high-throughput in silico pipeline for predicting novel protein-protein interactions"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.87386672632367,
      "result": {
        "original_header": "Virtual machine image and more:",
        "type": "Text_excerpt",
        "value": "* Virtual machine image with everything preinstalled (CRUX 3.6.1): [autocoev-crux-3.6.1-20220307.ova](https://seafile.utu.fi/d/a8de85062abf4ab68de9/)\n* An OVA VM image of Ubuntu will also be prepared, send me an email (pebope \u0430\u0442 utu.fi) if you want it right now.\n* Link to the manual: [Manual_AutoCoEv.pdf](doc/Manual_AutoCoEv.pdf)\n* Instructions to set up the pipeline on Debian/Ubuntu: [patches/README](patches/)\n* Instructions to patch and build CAPS2 on Debian/Ubuntu: [caps-dynamic](patches/caps-dynamic/)\n* CAPS2 (patched) precompiled static binary: [vCAPS-static-sort](patches/caps-static/)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mattilalab/autocoev/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9647322892390916,
      "result": {
        "original_header": "Paper",
        "type": "Text_excerpt",
        "value": "A paper describing AutoCoEv is published in **International Journal of Molecular Sciences**: [Int. J. Mol. Sci. 2022, 23(6), 3351;](https://www.mdpi.com/1422-0067/23/6/3351)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mattilalab/autocoev/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9438686709617653,
      "result": {
        "original_header": "Abstract",
        "type": "Text_excerpt",
        "value": "_Petar B. Petrov<sup>1,2*</sup>, Luqman O. Awoniyi<sup>1,2</sup>, Vid \u0160u\u0161tar1<sup>1</sup>, M. \u00d6zge Balci<sup>1,2</sup> and Pieta K. Mattila<sup>1,2</sup>_ \n1. MediCity Research Laboratories, Institute of Biomedicine, University of Turku, 20014 Turku, Finland\n2. Turku Bioscience Centre, University of Turku and \u00c5bo Akademi University, 20520 Turku, Finland \nProtein\u2013protein interactions govern cellular processes via complex regulatory networks, which are still far from being understood. Thus, identifying and understanding connections between proteins can significantly facilitate our comprehension of the mechanistic principles of protein functions. Coevolution between proteins is a sign of functional communication and, as such, provides a powerful approach to search for novel direct or indirect molecular partners. However, an evolutionary analysis of large arrays of proteins in silico is a highly time-consuming effort that has limited the usage of this method for protein pairs or small protein groups. Here, we developed AutoCoEv, a user-friendly, open source, computational pipeline for the search of coevolution between a large number of proteins. By driving 15 individual programs, culminating in CAPS2 as the software for detecting coevolution, AutoCoEv achieves a seamless automation and parallelization of the workflow. Importantly, we provide a patch to the CAPS2 source code to strengthen its statistical output, allowing for multiple comparison corrections and an enhanced analysis of the results. We apply the pipeline to inspect coevolution among 324 proteins identified to be located at the vicinity of the lipid rafts of B lymphocytes. We successfully detected multiple coevolutionary relations between the proteins, predicting many novel partners and previously unidentified clusters of functionally related molecules. We conclude that AutoCoEv, can be used to predict functional interactions from large datasets in a time- and cost-efficient manner. \n"
      },
      "source": "https://raw.githubusercontent.com/mattilalab/autocoev/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mattilalab/autocoev/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mattilalab/autocoev/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mattilalab/autocoev"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AutoCoEv -- A High-Throughput In Silico Pipeline for Predicting Inter-Protein Coevolution"
      },
      "source": "https://raw.githubusercontent.com/mattilalab/autocoev/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/start.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/retrieval.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/chi2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/guidance.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/pairing.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/msa.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/results.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/caps.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/pretty.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/databases.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/trees.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/check.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/functions/blast.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999690209056,
      "result": {
        "original_header": "Virtual machine image and more:",
        "type": "Text_excerpt",
        "value": "* Virtual machine image with everything preinstalled (CRUX 3.6.1): [autocoev-crux-3.6.1-20220307.ova](https://seafile.utu.fi/d/a8de85062abf4ab68de9/)\n* An OVA VM image of Ubuntu will also be prepared, send me an email (pebope \u0430\u0442 utu.fi) if you want it right now.\n* Link to the manual: [Manual_AutoCoEv.pdf](doc/Manual_AutoCoEv.pdf)\n* Instructions to set up the pipeline on Debian/Ubuntu: [patches/README](patches/)\n* Instructions to patch and build CAPS2 on Debian/Ubuntu: [caps-dynamic](patches/caps-dynamic/)\n* CAPS2 (patched) precompiled static binary: [vCAPS-static-sort](patches/caps-static/)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mattilalab/autocoev/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mattilalab/autocoev/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020-2022 Lymphocyte Cytoskeleton Group, University of Turku\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/mattilalab/autocoev/main/doc/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "autocoev"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mattilalab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 79310,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 1225,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mattilalab/autocoev/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mattilalab",
          "type": "User"
        },
        "date_created": "2022-03-14T12:02:54Z",
        "date_published": "2022-03-14T19:00:53Z",
        "html_url": "https://github.com/mattilalab/autocoev/releases/tag/v0.2.7beta",
        "release_id": 61797356,
        "tag": "v0.2.7beta",
        "tarball_url": "https://api.github.com/repos/mattilalab/autocoev/tarball/v0.2.7beta",
        "type": "Release",
        "url": "https://api.github.com/repos/mattilalab/autocoev/releases/61797356",
        "value": "https://api.github.com/repos/mattilalab/autocoev/releases/61797356",
        "zipball_url": "https://api.github.com/repos/mattilalab/autocoev/zipball/v0.2.7beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mattilalab",
          "type": "User"
        },
        "date_created": "2022-01-27T19:54:24Z",
        "date_published": "2022-01-27T19:50:29Z",
        "description": "Improved REV CAPS2 run, better handling of multiple folders, many cleanups and more",
        "html_url": "https://github.com/mattilalab/autocoev/releases/tag/v0.2.5beta",
        "name": "v0.2.5beta",
        "release_id": 58133185,
        "tag": "v0.2.5beta",
        "tarball_url": "https://api.github.com/repos/mattilalab/autocoev/tarball/v0.2.5beta",
        "type": "Release",
        "url": "https://api.github.com/repos/mattilalab/autocoev/releases/58133185",
        "value": "https://api.github.com/repos/mattilalab/autocoev/releases/58133185",
        "zipball_url": "https://api.github.com/repos/mattilalab/autocoev/zipball/v0.2.5beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mattilalab",
          "type": "User"
        },
        "date_created": "2022-01-24T17:33:34Z",
        "date_published": "2022-01-24T17:40:07Z",
        "html_url": "https://github.com/mattilalab/autocoev/releases/tag/v0.2.0beta",
        "release_id": 57852570,
        "tag": "v0.2.0beta",
        "tarball_url": "https://api.github.com/repos/mattilalab/autocoev/tarball/v0.2.0beta",
        "type": "Release",
        "url": "https://api.github.com/repos/mattilalab/autocoev/releases/57852570",
        "value": "https://api.github.com/repos/mattilalab/autocoev/releases/57852570",
        "zipball_url": "https://api.github.com/repos/mattilalab/autocoev/zipball/v0.2.0beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mattilalab",
          "type": "User"
        },
        "date_created": "2022-01-24T13:33:59Z",
        "date_published": "2022-01-24T13:28:58Z",
        "description": "Some major cleanups to do just after this.",
        "html_url": "https://github.com/mattilalab/autocoev/releases/tag/v0.1.99beta",
        "release_id": 57830268,
        "tag": "v0.1.99beta",
        "tarball_url": "https://api.github.com/repos/mattilalab/autocoev/tarball/v0.1.99beta",
        "type": "Release",
        "url": "https://api.github.com/repos/mattilalab/autocoev/releases/57830268",
        "value": "https://api.github.com/repos/mattilalab/autocoev/releases/57830268",
        "zipball_url": "https://api.github.com/repos/mattilalab/autocoev/zipball/v0.1.99beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mattilalab",
          "type": "User"
        },
        "date_created": "2022-01-19T16:08:56Z",
        "date_published": "2022-01-20T07:13:05Z",
        "html_url": "https://github.com/mattilalab/autocoev/releases/tag/v0.1.1beta",
        "release_id": 57537341,
        "tag": "v0.1.1beta",
        "tarball_url": "https://api.github.com/repos/mattilalab/autocoev/tarball/v0.1.1beta",
        "type": "Release",
        "url": "https://api.github.com/repos/mattilalab/autocoev/releases/57537341",
        "value": "https://api.github.com/repos/mattilalab/autocoev/releases/57537341",
        "zipball_url": "https://api.github.com/repos/mattilalab/autocoev/zipball/v0.1.1beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mattilalab",
          "type": "User"
        },
        "date_created": "2021-03-31T16:04:55Z",
        "date_published": "2021-03-31T17:35:26Z",
        "html_url": "https://github.com/mattilalab/autocoev/releases/tag/v0.06beta",
        "name": "v0.06beta",
        "release_id": 40775125,
        "tag": "v0.06beta",
        "tarball_url": "https://api.github.com/repos/mattilalab/autocoev/tarball/v0.06beta",
        "type": "Release",
        "url": "https://api.github.com/repos/mattilalab/autocoev/releases/40775125",
        "value": "https://api.github.com/repos/mattilalab/autocoev/releases/40775125",
        "zipball_url": "https://api.github.com/repos/mattilalab/autocoev/zipball/v0.06beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mattilalab",
          "type": "User"
        },
        "date_created": "2021-03-30T10:35:26Z",
        "date_published": "2021-03-30T10:58:21Z",
        "html_url": "https://github.com/mattilalab/autocoev/releases/tag/v0.05beta",
        "name": "v0.05beta",
        "release_id": 40688547,
        "tag": "v0.05beta",
        "tarball_url": "https://api.github.com/repos/mattilalab/autocoev/tarball/v0.05beta",
        "type": "Release",
        "url": "https://api.github.com/repos/mattilalab/autocoev/releases/40688547",
        "value": "https://api.github.com/repos/mattilalab/autocoev/releases/40688547",
        "zipball_url": "https://api.github.com/repos/mattilalab/autocoev/zipball/v0.05beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mattilalab",
          "type": "User"
        },
        "date_created": "2021-03-29T08:26:19Z",
        "date_published": "2021-03-30T08:25:55Z",
        "description": "0.048beta",
        "html_url": "https://github.com/mattilalab/autocoev/releases/tag/v0.048-beta",
        "name": "v0.048-beta",
        "release_id": 40680434,
        "tag": "v0.048-beta",
        "tarball_url": "https://api.github.com/repos/mattilalab/autocoev/tarball/v0.048-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/mattilalab/autocoev/releases/40680434",
        "value": "https://api.github.com/repos/mattilalab/autocoev/releases/40680434",
        "zipball_url": "https://api.github.com/repos/mattilalab/autocoev/zipball/v0.048-beta"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:55:15",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Need help?",
        "parent_header": [
          "AutoCoEv -- A High-Throughput In Silico Pipeline for Predicting Inter-Protein Coevolution"
        ],
        "type": "Text_excerpt",
        "value": "If you need any help with setting up the pipeline (installing the dependencies, compiling from source, etc...) or with running AutoCoEv, send an email to Petar Petrov (pebope \u0430\u0442 utu.fi).\n"
      },
      "source": "https://raw.githubusercontent.com/mattilalab/autocoev/main/README.md",
      "technique": "header_analysis"
    }
  ]
}