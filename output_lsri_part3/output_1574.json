{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "CaliForest"
        ],
        "type": "Text_excerpt",
        "value": "Y. Park and J. C. Ho. 2020. **CaliForest: Calibrated Random Forest for Health Data**. *ACM Conference on Health, Inference, and Learning (2020)*\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/yubin-park/califorest/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yubin-park/califorest"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-12-23T02:28:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-09T16:11:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Calibrated Random Forests"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9017903977832341,
      "result": {
        "original_header": "CaliForest",
        "type": "Text_excerpt",
        "value": "This Python package implements the CaliForest algorithm presented in [ACM CHIL 2020](https://www.chilconference.org/). \nYou can use CaliForest almost the same way you used RandomForest i.e. you can just replace RandomForest with CaliForest.\nThe only difference would be that its predicted scores will be better calibrated than the regular RandomForest output, while maintaining the original predictive performance.\nFor more details, please see \"CaliForest: Calibrated Random Forest for Health Data\" in ACM Conference on Health, Inference, and Learning 2020.  \n"
      },
      "source": "https://raw.githubusercontent.com/yubin-park/califorest/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yubin-park/califorest/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yubin-park/califorest/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yubin-park/califorest"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CaliForest"
      },
      "source": "https://raw.githubusercontent.com/yubin-park/califorest/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yubin-park/califorest/master/analysis/hastie-results.png"
      },
      "source": "https://raw.githubusercontent.com/yubin-park/califorest/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing",
        "parent_header": [
          "CaliForest"
        ],
        "type": "Text_excerpt",
        "value": "Installing from the source:\n\n```\n$ git clone git@github.com:yubin-park/califorest.git\n$ cd califorest\n$ python setup.py develop\n```\n"
      },
      "source": "https://raw.githubusercontent.com/yubin-park/califorest/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yubin-park/califorest/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 yubin park\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/yubin-park/califorest/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "CaliForest"
        ],
        "type": "Text_excerpt",
        "value": "MIT License\n"
      },
      "source": "https://raw.githubusercontent.com/yubin-park/califorest/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "califorest"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yubin-park"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 20907,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 1022,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yubin-park/califorest/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:30:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Code",
        "parent_header": [
          "CaliForest"
        ],
        "type": "Text_excerpt",
        "value": "Training + Prediction:\n\n```python\nfrom califorest import CaliForest\n\nmodel = CaliForest(n_estimators=100,\n                    max_depth=5,\n                    min_samples_split=3,\n                    min_samples_leaf=1,\n                    ctype=\"isotonic\")\n\nmodel.fit(X_train, y_train)\ny_pred = model.predict_proba(X_test)[:,1]\n```\n\nCalibration metrics:\n\n```python\nfrom califorest import metrics as em\n\nscore_auc = roc_auc_score(y_test, y_pred)\nscore_hl = em.hosmer_lemeshow(y_test, y_pred)\nscore_sh = em.spiegelhalter(y_test, y_pred)\nscore_b, score_bs = em.scaled_Brier(y_test, y_pred)\nrel_small, rel_large = em.reliability(y_test, y_pred)\n```"
      },
      "source": "https://raw.githubusercontent.com/yubin-park/califorest/master/README.md",
      "technique": "header_analysis"
    }
  ]
}