{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/niu-lab/PTRBC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-12-29T05:46:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-04T08:39:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9905203429623107,
      "result": {
        "original_header": "PTRBC",
        "type": "Text_excerpt",
        "value": "This clinical data analysis tool can be used to do data cleaning and predict the required transfusion volume of red blood cells in surgical patients based on machine learning methods. Meanwhile, this tool can process the similar classification or regression problems. In other words, a general prediction model can be established for the input data specified.\n \n"
      },
      "source": "https://raw.githubusercontent.com/niu-lab/PTRBC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/niu-lab/PTRBC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/niu-lab/PTRBC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "niu-lab/PTRBC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PTRBC"
      },
      "source": "https://raw.githubusercontent.com/niu-lab/PTRBC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install (In Linux system)",
        "parent_header": [
          "PTRBC"
        ],
        "type": "Text_excerpt",
        "value": "The README is used to introduce the module and provide instructions on\nhow to install the module, any machine dependencies it may have (for\nexample C compilers and installed libraries) and any other information\nthat should be provided before the module is installed.\n\nA README file is required for CPAN modules since CPAN extracts the README\nfile from a module distribution so that people browsing the archive\ncan use it to get an idea of the module's uses. It is usually a good idea\nto provide version information here so that people can decide whether\nfixes for the module are worth downloading.\n\n\nINSTALLATION\n\n    R Modules required\n    1. BP module\n       DMwR and dependencies: xts, quantmod, TTR, curl, abind, ROCR, gplots, gtools, gdata, caTools, bitops\n    2. RF module\n       randomForest\n    3. XGBoost module\n       xgboost  \n    4. SVM module\n       e1071\n    5. KNN module\n       gmodels, class\n\nTo install this module, run the following commands:\n\n\tperl Makefile.PL\n\tmake\n\tmake test\n\tmake install\n\nSUPPORT AND DOCUMENTATION\n\nAfter installing, you can find documentation for this module with the\nperldoc command.\n\n    perldoc ptrbc\n\nYou can also look for information at:\n\n    RT, CPAN's request tracker (report bugs here)\n        http://rt.cpan.org/NoAuth/Bugs.html?Dist=ptrbc\n\n    AnnoCPAN, Annotated CPAN documentation\n        http://annocpan.org/dist/ptrbc\n\n    CPAN Ratings\n        http://cpanratings.perl.org/d/ptrbc\n\n    Search CPAN\n        http://search.cpan.org/dist/ptrbc/\n\n\nLICENSE AND COPYRIGHT\n\nCopyright (C) 2017 Ruilin Li\n\nThis program is free software; you can redistribute it and/or modify it\nunder the terms of the the Artistic License (2.0). You may obtain a\ncopy of the full license at:\n\nL<http://www.perlfoundation.org/artistic_license_2_0>\n\nAny use, modification, and distribution of the Standard or Modified\nVersions is governed by this Artistic License. By using, modifying or\ndistributing the Package, you accept this license. Do not use, modify,\nor distribute the Package, if you do not accept this license.\n\nIf your Modified Version has been derived from a Modified Version made\nby someone other than you, you are nevertheless required to ensure that\nyour Modified Version complies with the requirements of this license.\n\nThis license does not grant you the right to use any trademark, service\nmark, tradename, or logo of the Copyright Holder.\n\nThis license includes the non-exclusive, worldwide, free-of-charge\npatent license to make, have made, use, offer to sell, sell, import and\notherwise transfer the Package with respect to any patent claims\nlicensable by the Copyright Holder that are necessarily infringed by the\nPackage. If you institute patent litigation (including a cross-claim or\ncounterclaim) against any party alleging that the Package constitutes\ndirect or contributory patent infringement, then this Artistic License\nto you shall terminate on the date that such litigation is filed.\n\nDisclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER\nAND CONTRIBUTORS \"AS IS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\nPURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY\nYOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR\nCONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR\nCONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/niu-lab/PTRBC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9987157340569728,
      "result": {
        "original_header": "Update",
        "type": "Text_excerpt",
        "value": "To reinstall code of the same version (in some cases, may need --sudo): \n\tcpanm --reinstall ptrbc-1.0.tar.gz \n"
      },
      "source": "https://raw.githubusercontent.com/niu-lab/PTRBC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/niu-lab/PTRBC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PTRBC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "niu-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 57311,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 28869,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 14375,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 5756,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/niu-lab/PTRBC/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:39:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "parent_header": [
          "PTRBC"
        ],
        "type": "Text_excerpt",
        "value": "For user support please email lirl@sccas.cn\n"
      },
      "source": "https://raw.githubusercontent.com/niu-lab/PTRBC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "PTRBC"
        ],
        "type": "Text_excerpt",
        "value": "        Program:     PTRBC - Prediction of Transfusion with Red Blood Cells\n\t\n        Version:     v1.0\n\n        Authors:     Beifang Niu, Ruilin Li, et al.\n\n  Usage: ptrbc <command> [options]\n\n\tKey commands:\n\t\n\t\tmap          -- Transform the raw data to identifiable format\n\t\tclean        -- Data cleaning and got clean data\n\t\tbp           -- Run Back Propagation(BP) method\n\t\trf\t     -- Run Random Forest(RF) method\n\t\txgboost      -- Run XGBoost method\n\t\tsvm          -- Run Support Vector Machines(SVM) method\n\t\tknn          -- Run k-NearestNeighbor(KNN) method\n\t\tpred         -- Predict the required volume according to models\n\t\thelp         -- Show this message\n\n      "
      },
      "source": "https://raw.githubusercontent.com/niu-lab/PTRBC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "PTRBC"
        ],
        "type": "Text_excerpt",
        "value": "1. ptrbc map [options]\n\n\tUsage: ptrbc map [options]\n\n\t\t--input_dir  <string>   Input raw or dictionary data file directory\n\t\t--dic        <string>   The dictionary file\n\t\t--raw        <string>   The raw data file\n\t\t--output_dir <string>   Output mapped file directory( Stored in the input directory by default)\n\t\t--help                  Show this message\n\n```\nExample: ptrbc map --input_dir ./data/ --dic mapping_dictionary --raw revise_all_raw.xlsx --output_dir ./data\n```\n2. ptrbc clean [options]\n\n\tUsage: ptrbc clean [options]\n\n\t\t--input_dir  <string>   Input mapped or cleaning-rules data file directory\n\t\t--mapped     <string>   The mapped file\n\t\t--rules      <string>   The cleaning rules file\n\t\t--output_dir <string>   Output cleaned or suspect file directory( Stored in the input directory by default)\n\t\t--help                  Show this message\n\n```\nExample: ptrbc clean --input_dir data/ --mapped revise_all_raw.xlsx_mapped --rules cleaning_rules --output_dir ./data\n```\n3. ptrbc bp [options] \n\n\tUsage: ptrbc bp [options]\n\n\t\t--input_file      <string>   Input the training data file with the whole dircctory\n\t\t--pct             <float>    The percent of the training data in the input data, default=0.9\n\t\t--bp_size         <int>      BP_size, default=12\n\t\t--bp_matrix_size  <int>      BP_matrix_size, default=100\n\t\t--bp_decay        <float>    BP_decay, default=0.01\n\t\t--bp_range        <float>    BP_range, default=0.1\n\t\t--file_col        <int>      The number of columns in input data\n\t\t--bp_type         <string>   BP_type: include class or predict, default=class\n\t\t--output_pred     <string>   Output the BP predicted results, default=data/bp_pred_output.xlsx\n\t\t--output_label    <string>   Output the BP predicted results, default=data/bp_label_output.xlsx\n\t\t--help                       Show this message\n\n```\nExample: ptrbc bp --input_file data/method_bp_sample.data --bp_size 12 --bp_matrix_size 10 --bp_decay 5e-6  --bp_range 0.1 --file_col 40 --bp_type class --output_pred data/bp_pred_output.xlsx --output_label data/bp_label_output.xlsx\n```\n4. ptrbc rf [options]\n\n\tUsage: ptrbc rf [options]\n\n\t\t--input_file     <string>   Input the training data file with the whole dircctory\n\t\t--pct            <float>    The percent of the training data in the input data, default=0.9\n\t\t--file_col       <int>      The number of columns in input data\n\t\t--rf_type        <string>   Predict type, default=response\n\t\t--rf_step_size   <int>      RF step size, default=10\n\t\t--rf_max_trees   <int>      The maximum of building trees, default=20\n\t\t--output_pred    <string>   Output the RF predicted results, default=data/RF_pred_result.csv\n\t\t--output_label   <string>   Output the RF predicted results, default=data/RF_label_result.csv\n\t\t--help                      Show this message\n\n```\nExample: ptrbc rf --input_file data/method_rf_sample.data --pct 0.9 --file_col 40 --rf_type response --rf_step_size 10 --rf_max_trees 20 --output_pred data/RF_pred_result.csv --output_label data/RF_label_result.csv\n```\n5. ptrbc xgboost [options]\n\tUsage: ptrbc xgboost [options]\n\n\t\t--input_file           <string>   Input the training data file with the whole dircctory\n\t\t--pct                  <float>    The percent of the training data in the input data, default=0.9\n\t\t--file_col             <int>      The number of columns in input data\n\t\t--total_category       <int>      Total_category, default=20\n\t\t--xgboost_nthread      <int>      XGBboost_nthread, default=2\n\t\t--xgboost_nrounds      <int>      XGBboost_nrounds, default=100\n\t\t--xgboost_subsample    <float>    XGBboost_subsample, default=0.5\n\t\t--xgboost_objective    <string>   XGBboost_objective: include class or predict, default=multi:softmax\n\t\t--output_pred          <string>   Output the XGBboost predicted results, default=data/xgboost_pred_result.csv\n\t\t--output_label_numeric <string>   Output the XGBboost numeric label, default=data/xgboost_label_numeric_result.csv\n\t\t--output_label         <string>   Output the XGBboost predicted results, default=data/xgboost_label_result.csv\n\t\t--help                            Show this message\n\n```\nExample: ptrbc xgboost --input_file data/method_xgboost_sample.data --pct 0.9 --file_col 40 --total_category 20 --xgboost_nthread 2 --xgboost_nrounds 100 --xgboost_subsample 0.5 --xgboost_objective multi:softmax --output_pred data/xgboost_pred_result.csv --output_label_numeric data/xgboost_label_numeric_result.csv --output_label data/xgboost_label_result.csv\n``` \n6. ptrbc svm [options]\n\n\tUsage: ptrbc svm [options]\n\n\t\t--input_file     <string>   Input the training data file with the whole dircctory\n\t\t--pct            <float>    The percent of the training data in the input data, default=0.9\n\t\t--svm_type       <string>   Predict type, default=response\n\t\t--output_pred    <string>   Output the SVM predicted results, default=data/SVM_pred_result.csv\n\t\t--output_label   <string>   Output the SVM predicted results, default=data/SVM_label_result.csv\n\t\t--help                      Show this message\n\n```\nExample: ptrbc svm --input_file data/method_svm_sample.data --pct 0.9 --svm_type class --output_pred data/SVM_pred_result.csv --output_label data/SVM_pred_result.csv\n```\n7. ptrbc knn [options]\n\n\tUsage: ptrbc knn [options]\n\n\t\t--input_file     <string>   Input the training data file with the whole dircctory\n\t\t--pct            <float>    The percent of the training data in the input data, default=0.9\n\t\t--file_col       <int>      The number of columns in input data\n\t\t--knn_K          <int>      The number of neighbours, default=10\n\t\t--output_pred    <string>   Output the KNN predicted results, default=data/KNN_pred_result.csv\n\t\t--output_label   <string>   Output the KNN predicted results, default=data/KNN_label_result.csv\n\t\t--help                      Show this message\n\n```\nExample: ptrbc knn --input_file data/method_knn_sample.data --pct 0.9 --file_col 40 --knn_K 10 --output_pred data/KNN_pred_result.csv --output_label data/KNN_label_result.csv\n```\n8. ptrbc pred [options]\n\n\tUsage: ptrbc pred [options]\n\n\t\t--model          <string>   Select model to predict, default model is rf, and optional models are: rf, svm, xgboost, bp and knn\n\t\t--input_file     <string>   Input the testing data file with the whole dircctory\n\t\t--output_pred    <string>   Output the RF predicted results, default=data/rf_predict_output.csv\n\t\t--help                      Show this message\n\n```\nExample: ptrbc pred --model rf --input_file data/method_rf_sample.data --output_pred data/rf_predict_output.csv\n```\n"
      },
      "source": "https://raw.githubusercontent.com/niu-lab/PTRBC/master/README.md",
      "technique": "header_analysis"
    }
  ]
}