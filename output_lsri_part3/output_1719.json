{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pepamengual/NetCleave"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-20T14:33:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-12T18:54:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9843407803614984,
      "result": {
        "original_header": "NetCleave",
        "type": "Text_excerpt",
        "value": "<p align=\"justify\">\nNetCleave is a retrainable method for predicting C-terminal peptide processing of MHC-I and MHC-II pathways.\n</p> \n<p align=\"justify\">\nIn brief, NetCleave maps reported IEDB peptides to protein sequences in UniProt/UniParc. After the identification of the C-terminal cleavage site, amino acid sequences are coded using QSAR descriptors, including steric, electrostatic and hydrophobic properties. Finally, a neural network architecture is used to generate the predictive model.\n</p> \n"
      },
      "source": "https://raw.githubusercontent.com/pepamengual/NetCleave/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pepamengual/NetCleave/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pepamengual/NetCleave/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pepamengual/NetCleave"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NetCleave"
      },
      "source": "https://raw.githubusercontent.com/pepamengual/NetCleave/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pepamengual/NetCleave/master/run_netcleave.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pepamengual/NetCleave/master/images/draw_scheme_method.png"
      },
      "source": "https://raw.githubusercontent.com/pepamengual/NetCleave/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999998386571,
      "result": {
        "original_header": "NetCleave",
        "type": "Text_excerpt",
        "value": "Install NetCleave dependencies by:\n```\npip install -r requirements.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/pepamengual/NetCleave/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8358625235441725,
      "result": {
        "original_header": "NetCleave",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n<img src=\"images/draw_scheme_method.png\" width=\"600\">\n</p> \n"
      },
      "source": "https://raw.githubusercontent.com/pepamengual/NetCleave/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pepamengual/NetCleave/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NetCleave"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "pepamengual"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 30189,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 506,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pepamengual/NetCleave/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:00:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use NetCleave",
        "parent_header": [
          "NetCleave"
        ],
        "type": "Text_excerpt",
        "value": "<p align=\"justify\">\nNetCleave is easy to use. It can be run using a python command-line (which can be stored in a bash script).\n\n```bash\nnetcleave_path=\"NetCleave.py\"  # path to NetCleave.py\nmhc_class=\"I\"                  # MHC class to be modelled\ntechnique=\"mass_spectrometry\"  # Technique to be modelled\nmhc_family=\"HLA\"               # MHC family to be modelled\nfasta=\"example/example.fasta\"  # Input fasta file\n\npython $netcleave_path \\\n        --generate \\\n        --train \\\n        --mhc_class $mhc_class \\\n        --technique $technique \\\n        --mhc_family $mhc_family \\\n        --score_fasta $fasta\n```\n\nThe arguments --generate and --train are needed for creating the model for the first time.\n\n</p>\n"
      },
      "source": "https://raw.githubusercontent.com/pepamengual/NetCleave/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Retraining the method and constructing your own models",
        "parent_header": [
          "NetCleave",
          "How to use NetCleave"
        ],
        "type": "Text_excerpt",
        "value": "<p align=\"justify\">\nNetCleave was specificaly designed to be easily retrained. In order to do so, user needs:\n\n- Decompress or obtain databases\n> IEDB - data/databases/iedb folder. New versions may be found at: http://www.iedb.org/database_export_v3.php\n\n> UniProt/UniParc - data/databases/uniprot and data/databases/uniparc folders. New versions may be found at: https://www.uniprot.org/downloads\n\n**We recomend to use the last version of IEDB while keeping the same UniProt/UniParc version that we provided in this repository**\n\n- Define IEDB, UniProt and UniParc file paths on NetCleave main function\n\n"
      },
      "source": "https://raw.githubusercontent.com/pepamengual/NetCleave/master/README.md",
      "technique": "header_analysis"
    }
  ]
}