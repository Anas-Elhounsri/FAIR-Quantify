{
  "application_domain": [
    {
      "confidence": 13.39,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ArnovanHilten/GenNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "**GenNet**"
        ],
        "type": "Text_excerpt",
        "value": "For questions or comments make an issue or mail to: a.vanhilten@erasmusmc.nl\n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-13T15:11:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-25T09:01:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Framework for Interpretable Neural Networks "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9042287642706371,
      "result": {
        "original_header": "**GenNet**",
        "type": "Text_excerpt",
        "value": "**Framework for Interpretable Neural Networks for Genetics** \n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9390944791842742,
      "result": {
        "original_header": "1. What is GenNet?",
        "type": "Text_excerpt",
        "value": "<img align = \"right\" src=\"https://github.com/ArnovanHilten/GenNet/blob/master/figures/figure1_github.PNG\" width=\"450\">\nGenNet is a command line tool that can be used to create neural networks for (mainly) genetics. GenNet gives the opportunity to let you decide what should be connected to what. Any information that groups knowledge can therefore be used to define connections in the network. For example, gene annotations can be used to group genetic variants into genes, as seen in the first layer of the image. This creates meaningful and interpretable connections. When the network is trained the network learns which connections are important for the predicted phenotype and assigns these connections a higher weight. For more information about the framework and the interpretation read the paper: \nThe Gennet framework is based on tensorflow, click [here](GenNet_utils/LocallyDirected1D.py) for the custom layer.\n</a>\n<a name=\"how\"/>\n \n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.989962614385547,
      "result": {
        "original_header": "GenNet Interpretation module",
        "type": "Text_excerpt",
        "value": "GenNet offers a number of intepretation methods, to find important features and interacting features. \n- get_weight_scores: uses the weights to calculate the importance of each feature and node\n- DeepExplain: uses the gradient (see DeepExplain) to calculate the importance\n- RLIPP: uses logistic regression with signals to and from the node to calculate a measure of non-linearity for all nodes\n- NID: Finds interacting features based on the features with the strongest weights\n- DFIM: perturbs each input (or N inputs in the order of importance), and tracks which other features change importance to find interacting features\n- PathExplain: Uses the Expected Hessian to find interacting features \n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9136393527187177,
      "result": {
        "original_header": "Jupyter notebook",
        "type": "Text_excerpt",
        "value": "The original jupyter notebooks can be found in the jupyter notebook folder. Navigate to the jupyter notebook folder and start with `jupyter notebook`. The notebooks are not updated but can be a useful source to understand the main code and/or to create .npz masks (to define connections between layers). For more freedom in designing your own networks you can define your network [here](https://github.com/ArnovanHilten/GenNet/blob/master/GenNet_utils/Create_network.py#L25) and create masks using the notebooks.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/ArnovanHilten/GenNet/wiki"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/roshchupkin/hase/wiki/Converting-Data"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ArnovanHilten/GenNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/Proof_of_Concept_GenNet_Non_Linear.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/Proof_of_Concept_GenNet_Non_Linear.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/examples/A_to_Z/GenNet_A_to_Z.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/examples/A_to_Z/GenNet_A_to_Z.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/jupyter_notebooks/2_Define_connection_masks_simple_memory_efficient.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/jupyter_notebooks/2_Define_connection_masks_simple_memory_efficient.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/jupyter_notebooks/1_Preprocess_genotype_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/jupyter_notebooks/1_Preprocess_genotype_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/jupyter_notebooks/3_Split_data_train_val_test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/jupyter_notebooks/3_Split_data_train_val_test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/jupyter_notebooks/4_GenNet_run_network.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/jupyter_notebooks/4_GenNet_run_network.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ArnovanHilten/GenNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ArnovanHilten/GenNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GenNet"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/Submit_HPC_train_classification_filter.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/Submit_HPC_interpret_test_example.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/Submit_HPC_train_classification.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/Submit_HPC_test_example.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/Submit_HPC_train_regression.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/GenNet_utils/submit_SLURM_multi_transpose.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/GenNet_utils/hase/run_ExampleStudy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/GenNet_utils/hase/tools/qsub_helper.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/GenNet_utils/hase/tools/minimacGenotype2hdf5.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/GenNet_utils/hase/tools/id2hdf5.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/GenNet_utils/hase/tools/VCFGenotype2hdf5.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/GenNet_utils/hase/tools/minimac2hdf5.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/GenNet_utils/hase/tools/VCF2hdf5.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/240289809"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/figures/figure1_github.PNG"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/figures/Gennet_wiki_overview.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/figures/example_manhattan.png"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/figures/Sunburst_pathway_schizophrenia.png"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install the virtual envionment",
        "parent_header": [
          "**GenNet**",
          "2. Getting started"
        ],
        "type": "Text_excerpt",
        "value": "**Navigate to the home folder and create a virtual environment**\n```\ncd ~\npython3 -m venv env_GenNet\n```\n\nThis automatically installs the latest Tensorflow version for which GenNet has been tested. If you have an older version of CUDA install the appriopriate tensorflow-gpu by\n`pip install tensorflow-gpu==1.13.1` (change 1.13.1 to your version).\n\n**Activate the environment**\n```\nsource ~/env_GenNet/bin/activate\n```\n\n**Install the packages**\n```\npip3 install --upgrade pip\npip3 install -r requirements_GenNet.txt\n\n```\n*GenNet is ready to use!*\n\nNavigate to the GenNet folder and use the following command to run the example:\n```\npython GenNet.py train -path ./examples/example_classification/ -ID 1\n```\n\nCheck the [wiki](https://github.com/ArnovanHilten/GenNet/wiki) for more info!\n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparing the data",
        "parent_header": [
          "**GenNet**",
          "3. GenNet command line."
        ],
        "type": "Text_excerpt",
        "value": "*NOTE: In python indices start from zero*\n\nAs seen in the overview the commmand line takes 3 inputs:\n\n1. **genotype.h5** - a genotype matrix, each row is a sample/subject/patient, each column is a feature (i.e. genetic variant). The genotype file can be automatically generated from **plink** files and **VCF** files using `python GenNet.py convert`, use `python GenNet.py convert --help` for more options or check [HASE wiki convert](https://github.com/roshchupkin/hase/wiki/Converting-Data)\n1. **subject.csv** - a .csv file with the following columns:\n    * patient_id: am ID for each patient \n    * labels: phenotype (with zeros and ones for classification and continuous values for regression)\n    * genotype_row: The row in which the subject can be found in the genotype matrix (genotype.h5 file)\n    * set: in which set the subject belongs (1 = training set, 2 =  validation set, 3 = test, others= ignored)\n1. **topology** - This file describes the whole network: each row should be a \"path\" of the network, from input to output node. This file defines thus each connections in the network, giving you the freedom to design your network the way you want. In the GenNet framework we used biological knowledge such as gene annotations to do define meaningful connections, we included some helper functions to generate a topology file using Annovar. See the topoogy help for more information: `python GenNet.py topology --help`\n\n\n\n\nTopology example:\n\n| layer0_node | layer0_name | layer1_node | layer1_name | layer2_node | layer2_name  |\n|-------------|-------------|-------------|-------------|-------------|--------------|\n| 0           | rs916977    | 0           | HERC2       | 0           | Ubiquitin mediated proteolysis|\n| 1           | rs766173    | 1           | BRCA2       | 1           | Breast cancer  |\n| 5           | rs1799944   | 1           | BRCA2       | 1           | Breast cancer  |\n| 6           | rs4987047   | 1           | BRCA2       | 1           | Breast cancer  |\n| 1276        | SNP1276     | 612         | UHMK1       | 2          | Tyrosine metabolism |\n\nNOTE: It is important to name the column headers as shown in the table.\n\nThe first genetic variant in the genotypefile (row number zero!), named rs916977,  is connected to the HERC2 node in the first layer. The HERC2 gene is node number zero. This node is conncted to the 'Ubiquitin mediated proteolysis' pathway which is the first node in the following layer. The next node is the end node which should not be included.\n\nThe second genetic variant 'rs766173' is connected to BRCA2 (node number 1 in the first layer), followed by the breast cancer pathway (node number 1 in the layer2), folowed by the end node.\n\nThe sixth(!) genetic variant 'rs1799944' is also connected to BRCA2 (whic was node number 1 in the first layer), followed by the breast cancer pathway (again node number 1 in the layer2), folowed by the end node.\n\nAll rows together describe all the connections in the network. Each layer should be described by a column layer#_node and a column layer#_name with # denoting the layer number.   \n\nTip: Check the topology files in the examples folder.\n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9933758247057373,
      "result": {
        "original_header": "3. GenNet command line.",
        "type": "Text_excerpt",
        "value": "<img align = \"right\" src=\"https://github.com/ArnovanHilten/GenNet/blob/master/figures/Gennet_wiki_overview.png?raw=true\" width=\"480\">\n \n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9980501054130035,
      "result": {
        "original_header": "Jupyter notebook",
        "type": "Text_excerpt",
        "value": "The original jupyter notebooks can be found in the jupyter notebook folder. Navigate to the jupyter notebook folder and start with `jupyter notebook`. The notebooks are not updated but can be a useful source to understand the main code and/or to create .npz masks (to define connections between layers). For more freedom in designing your own networks you can define your network [here](https://github.com/ArnovanHilten/GenNet/blob/master/GenNet_utils/Create_network.py#L25) and create masks using the notebooks.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ArnovanHilten/GenNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "deep-learning, genetics, gennet, genotype, interpretable-neural-networks, machine-learning, neural-network, neural-networks"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GenNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ArnovanHilten"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 447523,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 421581,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 30773,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ArnovanHilten",
          "type": "User"
        },
        "date_created": "2024-02-27T12:58:42Z",
        "date_published": "2024-02-27T13:08:10Z",
        "description": "## What's Changed\r\n\r\n- GenNet interpret: adds the interpretation module with six interpretation methods\r\n     - get_weight_scores: uses the weights to calculate the importance of each feature and node\r\n     - DeepExplain: uses the gradient (see DeepExplain) to calculate the importance\r\n     - RLIPP: uses logistic regression with signals to and from the node to calculate a measure of non-linearity for all nodes\r\n     - NID: Finds interacting features based on the features with the strongest weights\r\n     - DFIM: perturbs each input (or N inputs in the order of importance), and tracks which other features change importance to find interacting features\r\n     - PathExplain: Uses the Expected Hessian to find interacting features\r\n - Bugfixes for converting plink2 files\r\n - Script for converting toplogy to npz matrices\r\n - Add one-hot encoding support\r\n - Adds multiple filters. LocallyDirected1D now supports multiple filters akin to channels or feature maps in CNNs",
        "html_url": "https://github.com/ArnovanHilten/GenNet/releases/tag/v2.0",
        "name": "GenNet 2.0",
        "release_id": 143802168,
        "tag": "v2.0",
        "tarball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/tarball/v2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/143802168",
        "value": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/143802168",
        "zipball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/zipball/v2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ArnovanHilten",
          "type": "User"
        },
        "date_created": "2022-08-03T09:34:40Z",
        "date_published": "2022-08-03T09:47:46Z",
        "description": "# What's Changed\r\n\r\n-  [A to Z tutorial](https://colab.research.google.com/github/ArnovanHilten/GenNet/blob/dev/examples/A_to_Z/GenNet_A_to_Z.ipynb)\r\n- Pytest and automatic integration\r\n- Topology allows you now to create a pathway network with create_pathway_network\r\n- Continue and resume training\r\n- Specify your epoch length for large datasets\r\n- There are now options for multiprocessing, mixed_precision\r\n- Add suffix for better naming\r\n- Genotype_path option so that it does not have to be in the same folder as the other files\r\n- Revamped training for regression problems\r\n\r\n\r\n# Bug fixes\r\n\r\n- Fixed poor performance for regression tasks\r\n- Fixed bug for converting very small datasets\r\n- Fixed shape issues in topology\r\n- Fixed plot issue that displayed incorrect label",
        "html_url": "https://github.com/ArnovanHilten/GenNet/releases/tag/v1.5",
        "name": "Release GenNet 1.5",
        "release_id": 73520371,
        "tag": "v1.5",
        "tarball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/tarball/v1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/73520371",
        "value": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/73520371",
        "zipball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/zipball/v1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ArnovanHilten",
          "type": "User"
        },
        "date_created": "2021-08-01T14:36:29Z",
        "date_published": "2021-08-01T14:56:38Z",
        "description": "Minor improvements. \r\n\r\n- Added submodule toplogy. \r\n- Improved plotting with and without chr information\r\n- Can now use .npz files instead of topology.csv files. (make sure that all the maks are in the same folder and that the output size corresponds to the input size of the next mask.\r\n\r\n",
        "html_url": "https://github.com/ArnovanHilten/GenNet/releases/tag/v1.4",
        "name": "Release GenNet 1.4",
        "release_id": 47115166,
        "tag": "v1.4",
        "tarball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/tarball/v1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/47115166",
        "value": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/47115166",
        "zipball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/zipball/v1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ArnovanHilten",
          "type": "User"
        },
        "date_created": "2020-09-28T13:51:23Z",
        "date_published": "2020-09-28T13:53:10Z",
        "description": "Adds GenNet topology which helps creating topology files",
        "html_url": "https://github.com/ArnovanHilten/GenNet/releases/tag/v1.3.0",
        "name": "Release Topology v1.3.0",
        "release_id": 31887672,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/31887672",
        "value": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/31887672",
        "zipball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ArnovanHilten",
          "type": "User"
        },
        "date_created": "2020-08-13T14:26:40Z",
        "date_published": "2020-08-13T14:29:30Z",
        "description": "Expands the command line significantly with GenNet.py convert, GenNet.py train -problem_type regression and GenNet.py convert",
        "html_url": "https://github.com/ArnovanHilten/GenNet/releases/tag/v1.2.0",
        "name": "Release Command Line v1.2.0",
        "release_id": 29656584,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/29656584",
        "value": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/29656584",
        "zipball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ArnovanHilten",
          "type": "User"
        },
        "date_created": "2020-07-07T13:46:17Z",
        "date_published": "2020-07-07T13:50:43Z",
        "html_url": "https://github.com/ArnovanHilten/GenNet/releases/tag/v1.0",
        "name": "Added support Tensorflow 2",
        "release_id": 28314335,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/28314335",
        "value": "https://api.github.com/repos/ArnovanHilten/GenNet/releases/28314335",
        "zipball_url": "https://api.github.com/repos/ArnovanHilten/GenNet/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites:",
        "parent_header": [
          "**GenNet**",
          "2. Getting started"
        ],
        "type": "Text_excerpt",
        "value": "- GenNet can use CPU or GPU (which can be quite a bit faster for deeper networks) If you want to use cuda, please make sure you have the correct version of CUDA installed [CUDA](https://developer.nvidia.com/cuda-10.1-download-archive-base). GenNet has been tested for:\n\n  * Python 3.5,  CUDA  9.1,  Tensorflow 1.12.0 \n  * Python 3.5,  CUDA 10.0,  Tensorflow 1.13.1\n  * Python 3.5,  CUDA 10.0,  Tensorflow 2.0.0-beta1 \n  * Python 3.6-3.7,  CUDA 10.1,  Tensorflow 2.2.0 (currently default and recommended)\n  * Python 3.* Tensorflow 2.2 to 2.5 CPU"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running GenNet",
        "parent_header": [
          "**GenNet**",
          "3. GenNet command line."
        ],
        "type": "Text_excerpt",
        "value": "Open the command line and navigate to the GenNet folder. Start training by:\n```\npython GenNet.py train -path {/path/to/your/folder} -ID {experimment number}\n```\nFor example:\n```\npython GenNet.py train -path ./examples/example_classification/ -ID 1\n```\nor\n```\npython GenNet.py train -path ./examples/example_regression/ -ID 2 -problem_type regression\n```\nChoose from: convert, topology, train, plot and interpret. For the options check the [wiki](https://github.com/ArnovanHilten/GenNet/wiki) or use:\n\n```\npython GenNet.py convert --help\npython GenNet.py train --help\npython GenNet.py plot --help\npython GenNet.py topology --help\npython GenNet.py interpret --help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GenNet output",
        "parent_header": [
          "**GenNet**",
          "3. GenNet command line.",
          "Running GenNet"
        ],
        "type": "Text_excerpt",
        "value": "After training your network it saved together with its results. Results include a text file with the performance, a .CSV file with all the connections and their weights, a .h5 with the best weights on the validation set and a plot of the training and validation loss. Using these files we can create visualizations to better understand the network.\n\nThe .CSV file with the weights can be used to create your own plot but `python GenNet.py plot` also has standard plots available. First we calculate the relative importance by multiplying all the weights between the output and each input. This can then be used to see the importance of each gene:\n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Manhattan plot",
        "parent_header": [
          "**GenNet**",
          "3. GenNet command line.",
          "Running GenNet",
          "GenNet output"
        ],
        "type": "Text_excerpt",
        "value": "<img align = \"center\" src=\"https://github.com/ArnovanHilten/GenNet/blob/master/figures/example_manhattan.png\">\n\nOr can be used in a Sunburt plot to get an overview of the whole network!\n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Sunburst plot",
        "parent_header": [
          "**GenNet**",
          "3. GenNet command line.",
          "Running GenNet",
          "GenNet output"
        ],
        "type": "Text_excerpt",
        "value": "<img align = \"center\" src=\"https://github.com/ArnovanHilten/GenNet/blob/master/figures/Sunburst_pathway_schizophrenia.png\">\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contributors",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:54:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 89
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Getting started",
        "parent_header": [
          "**GenNet**"
        ],
        "type": "Text_excerpt",
        "value": "Follow the instructions below to get started.\n\n> [!TIP]\n> Check the [A to Z Colab tutorial](https://colab.research.google.com/github/ArnovanHilten/GenNet/blob/master/examples/A_to_Z/GenNet_A_to_Z.ipynb) for an overview on how to use GenNet with your own data!\n"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Clone the repository",
        "parent_header": [
          "**GenNet**",
          "2. Getting started"
        ],
        "type": "Text_excerpt",
        "value": "Open terminal. Navigate to the a place where you want to store the project. Clone the repository:\n```\ngit clone https://github.com/arnovanhilten/GenNet\n```"
      },
      "source": "https://raw.githubusercontent.com/ArnovanHilten/GenNet/master/README.md",
      "technique": "header_analysis"
    }
  ]
}