{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/iobio-zjut/CoDiFold"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "a de novo protein structure prediction by coupling contact with distance profile",
        "parent_header": [
          "CoDiFold"
        ],
        "type": "Text_excerpt",
        "value": "**Developer:**   \n                Chunxiang Peng  \n                College of Information Engineering  \n                University of Zhejiang University of Technology, Zhejiang  \n                Email: pengcx@zjut.edu.cn  \n\t\t\n**Contact:**  \n                Guijun Zhang, Prof  \n                College of Information Engineering  \n                University of Zhejiang University of Technology, Zhejiang  \n                Email: zgj@zjut.edu.cn  \n"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CoDiFold/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-12-27T13:45:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-25T13:21:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "the protein structure prediction software CoDiFold"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.929585497273738,
      "result": {
        "original_header": "3. OUTPUT",
        "type": "Text_excerpt",
        "value": "Output file of CoDiFold is stored in current folder, including one predicted model (lowestEtotal.pdb). \n"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CoDiFold/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9823925653052215,
      "result": {
        "original_header": "5. DISCLAIMER",
        "type": "Text_excerpt",
        "value": "The executable software and the source code of CoDiFold is distributed free of charge \nas it is to any non-commercial users. The authors hold no liabilities to the performance \nof the program.\n \n"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CoDiFold/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/iobio-zjut/CoDiFold/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/iobio-zjut/CoDiFold/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iobio-zjut/CoDiFold"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CoDiFold"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CoDiFold/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. INSTALLATION",
        "parent_header": [
          "CoDiFold"
        ],
        "type": "Text_excerpt",
        "value": "Binaries for Linux 64 bit system has been included in the package. The Linux binary was compiled using GCC 5.4.0. Users need to have these versions of GCC compilers when using binaries.\n\nPlease Follow the below steps to install and configure CoDiFold:\n\n- Download Rosetta3.10 source package from https://www.rosettacommons.org/software/ \nand extract it to ``\"~/\"`` directory.\n\n- Copy and paste source code of ``\"ClassicAbinitio.hh\"``, ``\"ClassicAbinitio.cc\"``, ``\"ClassicAbinitio.fwd.hh\"``,  ``\"mymethod.hh\"``,  ``\"mymethod.cc\"``, ``\"readfile.hh\"`` and ``\"readfile.cc\"`` from ``\"src/\"`` folder in CoDiFold package to ``\"~/Rosetta/main/source/src/protocols/abinitio/\"`` folder in Rosetta. Copy and paste source code of ``\"rms_util.hh\"``, ``\"rms_util.cc\"`` and ``\"rms_util.tmpl.hh\"`` from ``\"src/\"`` folder in CoDiFold package to ``\"~/Rosetta/main/source/src/core/scoring/\"`` folder in Rosetta. Copy and paste configuration file ``\"protocols_b_6.src.settings\"`` from ``\"src/\"`` folder in CoDiFold package to ``\"~/Rosetta/main/source/src/\"`` folder in Rosetta.\n\n- Compile Rosetta source code using the following commands:\n\n```\n $ cd ~/Rosetta/main/source/\n $ ./scons.py -j<NumOfJobs> mode=release bin\n```\n\n- If you want to recompile CoDiFold source code, use the following commands:\n\n```\n $ cd ~/CoDiFoldFold/\n $ g++ -o bin/CoDiFold src/CoDiFold.cpp\n```"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CoDiFold/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9216053863761479,
      "result": {
        "original_header": "2. INPUT",
        "type": "Text_excerpt",
        "value": "\t-f\tseq.fasta\t\t: protein sequence fasta file\n\t-c1\tcontact1.txt\t\t: contact map file from ResPRE\n\t-c2\tcontact2.txt\t\t: contact map file from Raptor-X\n\t-dp\tdp.txt\t\t\t: distance profile file\n\t-frag3\t3mer_fragment_library\t: fragment library with fragment lenth 3\n\t-frag9\t9mer_fragment_library\t: fragment library with fragment lenth 9\n \n"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CoDiFold/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8764775616820727,
      "result": {
        "original_header": "2. INPUT",
        "type": "Text_excerpt",
        "value": "\t-f\tseq.fasta\t\t: protein sequence fasta file\n\t-c1\tcontact1.txt\t\t: contact map file from ResPRE\n\t-c2\tcontact2.txt\t\t: contact map file from Raptor-X\n\t-dp\tdp.txt\t\t\t: distance profile file\n\t-frag3\t3mer_fragment_library\t: fragment library with fragment lenth 3\n\t-frag9\t9mer_fragment_library\t: fragment library with fragment lenth 9\n \n"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CoDiFold/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/iobio-zjut/CoDiFold/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CoDiFold"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "iobio-zjut"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 247599,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 6258,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/iobio-zjut/CoDiFold/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:44:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "4. EXAMPLE",
        "parent_header": [
          "CoDiFold"
        ],
        "type": "Text_excerpt",
        "value": "Please follow the below steps to run CoDiFold:\n\n- Go to the ``\"example/\"`` folder of CoDiFold.\n  \n- Run CoDiFold with the following command:\n  \n```\n $ cd ~/CoDiFold/\n $ ./../bin/CoDiFold -f ./input_files/seq.fasta -c1 input_files/contact1.txt -c2 input_files/contact2.txt -dp input_files/dp.txt -frag3 input_files/3mer_fragment_library -frag9 input_files/9mer_fragment_library\n```\n\n- Final model is generated in current folder.\n"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CoDiFold/master/README.md",
      "technique": "header_analysis"
    }
  ]
}