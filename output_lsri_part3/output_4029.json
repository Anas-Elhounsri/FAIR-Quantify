{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite",
        "parent_header": [
          "IonCram"
        ],
        "type": "Text_excerpt",
        "value": "Shokrof, M., Abouelhoda, M. IonCRAM: a reference-based compression tool for ion torrent sequence files. BMC Bioinformatics 21, 397 (2020). https://doi.org/10.1186/s12859-020-03726-9\n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at opensource@github.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/docs/docs/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ionCRAM/ionCRAM"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to The Cayman Theme\n\nHi there! We're thrilled that you'd like to contribute to The Cayman Theme. Your help is essential for keeping it great.\n\nThe Cayman Theme is an open source project supported by the efforts of an entire community and built one contribution at a time by users like you. We'd love for you to get involved. Whatever your level of skill or however much time you can give, your contribution is greatly appreciated. There are many ways to contribute, from writing tutorials or blog posts, improving the documentation, submitting bug reports and feature requests, helping other users by commenting on issues, or writing code which can be incorporated into The Cayman Theme itself.\n\nFollowing these guidelines helps to communicate that you respect the time of the developers managing and developing this open source project. In return, they should reciprocate that respect in addressing your issue, assessing changes, and helping you finalize your pull requests.\n\n\n## Looking for support?\n\nWe'd love to help. Check out [the support guidelines](SUPPORT.md).\n\n## How to report a bug\n\nThink you found a bug? Please check [the list of open issues](https://github.com/pages-themes/cayman/issues) to see if your bug has already been reported. If it hasn't please [submit a new issue](https://github.com/pages-themes/cayman/issues/new).\n\nHere are a few tips for writing *great* bug reports:\n\n* Describe the specific problem (e.g., \"widget doesn't turn clockwise\" versus \"getting an error\")\n* Include the steps to reproduce the bug, what you expected to happen, and what happened instead\n* Check that you are using the latest version of the project and its dependencies\n* Include what version of the project your using, as well as any relevant dependencies\n* Only include one bug per issue. If you have discovered two bugs, please file two issues\n* Even if you don't know how to fix the bug, including a failing test may help others track it down\n\n**If you find a security vulnerability, do not open an issue. Please email security@github.com instead.**\n\n## How to suggest a feature or enhancement\n\nIf you find yourself wishing for a feature that doesn't exist in The Cayman Theme, you are probably not alone. There are bound to be others out there with similar needs. Many of the features that The Cayman Theme has today have been added because our users saw the need.\n\nFeature requests are welcome. But take a moment to find out whether your idea fits with the scope and goals of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Please provide as much detail and context as possible, including describing the problem you're trying to solve.\n\n[Open an issue](https://github.com/pages-themes/cayman/issues/new) which describes the feature you would like to see, why you want it, how it should work, etc.\n\n\n\n## Your first contribution\n\nWe'd love for you to contribute to the project. Unsure where to begin contributing to The Cayman Theme? You can start by looking through these \"good first issue\" and \"help wanted\" issues:\n\n* [Good first issues](https://github.com/pages-themes/cayman/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) - issues which should only require a few lines of code and a test or two\n* [Help wanted issues](https://github.com/pages-themes/cayman/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22) - issues which may be a bit more involved, but are specifically seeking community contributions\n\n*p.s. Feel free to ask for help; everyone is a beginner at first* :smiley_cat:\n\n## How to propose changes\n\nHere's a few general guidelines for proposing changes:\n\n* If you are making visual changes, include a screenshot of what the affected element looks like, both before and after.\n* Follow the [Jekyll style guide](https://ben.balter.com/jekyll-style-guide).\n* If you are changing any user-facing functionality, please be sure to update the documentation\n* Each pull request should implement **one** feature or bug fix. If you want to add or fix more than one thing, submit more than one pull request\n* Do not commit changes to files that are irrelevant to your feature or bug fix\n* Don't bump the version number in your pull request (it will be bumped prior to release)\n* Write [a good commit message](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)\n\nAt a high level, [the process for proposing changes](https://guides.github.com/introduction/flow/) is:\n\n1. [Fork](https://github.com/pages-themes/cayman/fork) and clone the project\n2. Configure and install the dependencies: `script/bootstrap`\n3. Make sure the tests pass on your machine: `script/cibuild`\n4. Create a new branch: `git checkout -b my-branch-name`\n5. Make your change, add tests, and make sure the tests still pass\n6. Push to your fork and [submit a pull request](https://github.com/pages-themes/cayman/compare)\n7. Pat your self on the back and wait for your pull request to be reviewed and merged\n\n**Interesting in submitting your first Pull Request?** It's easy! You can learn how from this *free* series [How to Contribute to an Open Source Project on GitHub](https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github)\n\n## Bootstrapping your local development environment\n\n`script/bootstrap`\n\n## Running tests\n\n`script/cibuild`\n\n## Code of conduct\n\nThis project is governed by [the Contributor Covenant Code of Conduct](CODE_OF_CONDUCT.md). By participating, you are expected to uphold this code.\n\n## Additional Resources\n\n* [Contributing to Open Source on GitHub](https://guides.github.com/activities/contributing-to-open-source/)\n* [Using Pull Requests](https://help.github.com/articles/using-pull-requests/)\n* [GitHub Help](https://help.github.com)\n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/docs/docs/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-07T14:31:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-09T17:23:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://ioncram.saudigenomeproject.com/"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "IonCram"
        ],
        "type": "Text_excerpt",
        "value": "IonCram is the first compression tool that efficiently compresses the Ion Torrent BAM files. IonCram extends the popular CRAM program by improving the compression of the flow signals. IonCram could improve the compression of CRAM by 13% achieving an overall space saving of about 45%.\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9511084358070994,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "Scripts to calculate statisitics about the flowsignal and compression ratio of CRAM and ioncram can be found under scripts/ folder. \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9500099655587212,
      "result": {
        "original_header": "Optional arguments",
        "type": "Text_excerpt",
        "value": "+ -b , --bed-file:\n       * reads overlapping this BED FILE\n+ -c , --check:\n       * Check the compressed file and compare it with the original\n+ -z , --compression:\n       * Compression technique used to compress Flow signal. Options are xz, gzip, bzip2, and zstd. xz is the default technique\n+ -v , --verbose:\n       * Verbose mode prints the size used by every field in the l_data\n+ -l , --lossy:\n       * Lossy mode discard the highly repeated reads and uses only one read to represent.\n+ -d , --deez:\n       * Use  deez tool instead of samtools and CRAM\n---\n \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ionCRAM/ionCRAM/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ionCRAM/ionCRAM/tree/master/docs/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ionCRAM/ionCRAM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ionCRAM/ionCRAM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ionCRAM/ionCRAM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IonCram"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/_compressFlowSignal_FR.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/_compressFlowSignal.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/_compressFlowSignal_loosy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/_decompressFlowSignal_deez.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/_decompressor.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/_decompressFlowSignal.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/_compressFlowSignal_deez.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/trials/compressFlowSignal_sep_FR.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/trials/compressFlowSignal_Short.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/trials/compressFlowSignal_Streaming.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/trials/compressFlowSignal_sep.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/trials/compressFlowSignal_sign.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/src/ioncram/trials/compressFlowSignal_boost.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/scripts/ionStatistics.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/scripts/flowSignalInBam.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/scripts/scrambleStatistics.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9997639575987243,
      "result": {
        "original_header": "Complilation",
        "type": "Text_excerpt",
        "value": "IonCram uses different compression techniques for compressing the flow signal(gzip, bzip2, xz, and zstd ). To use zstd, Please install it(https://github.com/facebook/zstd) and make it system available.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Ubuntu",
        "type": "Text_excerpt",
        "value": "```bash\napt-get install g++ libncurses5-dev  parallel python3 make libbz2-dev zstd zlib1g-dev liblzma-dev automake libtool samtools time\n./configure --binDir <install directory>\nmake\nmake install\n```\nIf install directory is not supplied \"ioncram/build/\" will be used\n \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999897015181726,
      "result": {
        "original_header": "Centos",
        "type": "Text_excerpt",
        "value": "```bash\nyum -y install https://centos7.iuscommunity.org/ius-release.rpm\nyum  -y install  gcc-c++ compat-gcc-32 compat-gcc-32-c++ ncurses-devel parallel xz-devel bzip2-devel make zlib-devel automake zstd file libtool samtools time python34u\n\n./configure --binDir <install directory>\nmake\nmake install\n``` \nIf install directory is not supplied \"ioncram/build/\" will be used \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9729190486147924,
      "result": {
        "original_header": "Test The System",
        "type": "Text_excerpt",
        "value": "```bash\ngzip -d test_data/chrY.fa.gz\n./ioncram compress -i test_data/test1.bam -r test_data/chrY.fa -c -o test1.ioncram\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997402373939284,
      "result": {
        "original_header": "Statistics scripts",
        "type": "Text_excerpt",
        "value": "Scripts take the folder as argument where the ioncram binaries are installed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9995163112372895,
      "result": {
        "original_header": "FlowSignal Data Size",
        "type": "Text_excerpt",
        "value": "```bash\nscripts/flowSignalInBam.sh <binaries folder> <bam file>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9994400222952472,
      "result": {
        "original_header": "CRAM Statisitcs",
        "type": "Text_excerpt",
        "value": "```bash\nscripts/scrambleStatistics.sh <binaries folder> <bam file> <reference file>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9980030129362106,
      "result": {
        "original_header": "ioncram Statisitcs",
        "type": "Text_excerpt",
        "value": "```bash\nscripts/ionStatistics.sh <binaries folder> <bam file> <reference file> <compression tool>\n```\nCompression tools supported are : gzip, xz, and zstd. \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9022021648286712,
      "result": {
        "original_header": "FlowSignal Data Size",
        "type": "Text_excerpt",
        "value": "```bash\nscripts/flowSignalInBam.sh <binaries folder> <bam file>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9010117208020841,
      "result": {
        "original_header": "CRAM Statisitcs",
        "type": "Text_excerpt",
        "value": "```bash\nscripts/scrambleStatistics.sh <binaries folder> <bam file> <reference file>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8368408522102946,
      "result": {
        "original_header": "ioncram Statisitcs",
        "type": "Text_excerpt",
        "value": "```bash\nscripts/ionStatistics.sh <binaries folder> <bam file> <reference file> <compression tool>\n```\nCompression tools supported are : gzip, xz, and zstd. \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8104706729066328,
      "result": {
        "original_header": "Required arguments",
        "type": "Text_excerpt",
        "value": "+ -i , --input-file :\n       * File name of the input file can be SAM/BAM\n+ -o , --output-file:\n       * File name of the output IonCram file\n+ -r , --reference:\n       * Reference fasta file used by CRAM compression. Should be the same reference used in the mapping phase\n \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8280496534031421,
      "result": {
        "original_header": "Decompress",
        "type": "Text_excerpt",
        "value": "Tool for decompressing IonCram into BAM format\n### Usage\n```bash\n./ioncram decompress -i <input IonCram> -r <input reference FASTA> -o <outputfile bam>\n```\n### Required arguments\n+ -i , --input-file :\n       * File name of the input file can be SAM/BAM\n+ -o , --output-file:\n       * File name of the output IonCram file\n+ -r , --reference:\n       * Reference fasta file used by CRAM compression. Should be the same reference used in the mapping phase\n---\n \n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ionCRAM/ionCRAM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bam-files, bioinformatics, compression, sam, samtools"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "CC0 1.0 Universal\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator and\nsubsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for the\npurpose of contributing to a commons of creative, cultural and scientific\nworks (\"Commons\") that the public can reliably and without fear of later\nclaims of infringement build upon, modify, incorporate in other works, reuse\nand redistribute as freely as possible in any form whatsoever and for any\npurposes, including without limitation commercial purposes. These owners may\ncontribute to the Commons to promote the ideal of a free culture and the\nfurther production of creative, cultural and scientific works, or to gain\nreputation or greater distribution for their Work in part through the use and\nefforts of others.\n\nFor these and/or other purposes and motivations, and without any expectation\nof additional consideration or compensation, the person associating CC0 with a\nWork (the \"Affirmer\"), to the extent that he or she is an owner of Copyright\nand Related Rights in the Work, voluntarily elects to apply CC0 to the Work\nand publicly distribute the Work under its terms, with knowledge of his or her\nCopyright and Related Rights in the Work and the meaning and intended legal\neffect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not limited\nto, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display, communicate,\n  and translate a Work;\n\n  ii. moral rights retained by the original author(s) and/or performer(s);\n\n  iii. publicity and privacy rights pertaining to a person's image or likeness\n  depicted in a Work;\n\n  iv. rights protecting against unfair competition in regards to a Work,\n  subject to the limitations in paragraph 4(a), below;\n\n  v. rights protecting the extraction, dissemination, use and reuse of data in\n  a Work;\n\n  vi. database rights (such as those arising under Directive 96/9/EC of the\n  European Parliament and of the Council of 11 March 1996 on the legal\n  protection of databases, and under any national implementation thereof,\n  including any amended or successor version of such directive); and\n\n  vii. other similar, equivalent or corresponding rights throughout the world\n  based on applicable law or treaty, and any national implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention of,\napplicable law, Affirmer hereby overtly, fully, permanently, irrevocably and\nunconditionally waives, abandons, and surrenders all of Affirmer's Copyright\nand Related Rights and associated claims and causes of action, whether now\nknown or unknown (including existing as well as future claims and causes of\naction), in the Work (i) in all territories worldwide, (ii) for the maximum\nduration provided by applicable law or treaty (including future time\nextensions), (iii) in any current or future medium and for any number of\ncopies, and (iv) for any purpose whatsoever, including without limitation\ncommercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes\nthe Waiver for the benefit of each member of the public at large and to the\ndetriment of Affirmer's heirs and successors, fully intending that such Waiver\nshall not be subject to revocation, rescission, cancellation, termination, or\nany other legal or equitable action to disrupt the quiet enjoyment of the Work\nby the public as contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason be\njudged legally invalid or ineffective under applicable law, then the Waiver\nshall be preserved to the maximum extent permitted taking into account\nAffirmer's express Statement of Purpose. In addition, to the extent the Waiver\nis so judged Affirmer hereby grants to each affected person a royalty-free,\nnon transferable, non sublicensable, non exclusive, irrevocable and\nunconditional license to exercise Affirmer's Copyright and Related Rights in\nthe Work (i) in all territories worldwide, (ii) for the maximum duration\nprovided by applicable law or treaty (including future time extensions), (iii)\nin any current or future medium and for any number of copies, and (iv) for any\npurpose whatsoever, including without limitation commercial, advertising or\npromotional purposes (the \"License\"). The License shall be deemed effective as\nof the date CC0 was applied by Affirmer to the Work. Should any part of the\nLicense for any reason be judged legally invalid or ineffective under\napplicable law, such partial invalidity or ineffectiveness shall not\ninvalidate the remainder of the License, and in such case Affirmer hereby\naffirms that he or she will not (i) exercise any of his or her remaining\nCopyright and Related Rights in the Work or (ii) assert any associated claims\nand causes of action with respect to the Work, in either case contrary to\nAffirmer's express Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n  a. No trademark or patent rights held by Affirmer are waived, abandoned,\n  surrendered, licensed or otherwise affected by this document.\n\n  b. Affirmer offers the Work as-is and makes no representations or warranties\n  of any kind concerning the Work, express, implied, statutory or otherwise,\n  including without limitation warranties of title, merchantability, fitness\n  for a particular purpose, non infringement, or the absence of latent or\n  other defects, accuracy, or the present or absence of errors, whether or not\n  discoverable, all to the greatest extent permissible under applicable law.\n\n  c. Affirmer disclaims responsibility for clearing rights of other persons\n  that may apply to the Work or any use thereof, including without limitation\n  any person's Copyright and Related Rights in the Work. Further, Affirmer\n  disclaims responsibility for obtaining any necessary consents, permissions\n  or other rights required for any use of the Work.\n\n  d. Affirmer understands and acknowledges that Creative Commons is not a\n  party to this document and has no duty or obligation with respect to this\n  CC0 or use of the Work.\n\nFor more information, please see\n<http://creativecommons.org/publicdomain/zero/1.0/>\n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/docs/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "IonCram"
        ],
        "type": "Text_excerpt",
        "value": "Opensource\n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ionCRAM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ionCRAM"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 5153466,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 468435,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 342681,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 285665,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 254326,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 66363,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Lua",
        "size": 28217,
        "type": "Programming_language",
        "value": "Lua"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 24296,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 9223,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 3750,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Scilab",
        "size": 2872,
        "type": "Programming_language",
        "value": "Scilab"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:55:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "IonCram",
          "Compare"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n./ioncram compress -i input.bam -o compressed.IonCram -r hg19.fa\n\n./ioncram decompress -i compressed.IonCram -o original.bam -r hg19.fa\n```\n---\n\n## Statistics scripts\n\nScripts to calculate statisitics about the flowsignal and compression ratio of CRAM and ioncram can be found under scripts/ folder.\n\nScripts take the folder as argument where the ioncram binaries are installed.\n\n### FlowSignal Data Size\n```bash\nscripts/flowSignalInBam.sh <binaries folder> <bam file>\n```\n\n### CRAM Statisitcs\n```bash\nscripts/scrambleStatistics.sh <binaries folder> <bam file> <reference file>\n```\n\n### ioncram Statisitcs\n```bash\nscripts/ionStatistics.sh <binaries folder> <bam file> <reference file> <compression tool>\n```\nCompression tools supported are : gzip, xz, and zstd.\n\n---\n\n## Tools\nioncram has five commands compress, decompress, compare, version, and cite, You can list the available commands by \"./ioncram --help\". Every command has its own help page.\n\n## Compress\nTool for compressing SAM/BAM into IonCram format.\n### Usage\n```bash\n./ioncram compress [options] -i <input SAM/BAM> -r <input reference FASTA> -o <outputfile>\n```\n\n### Required arguments\n+ -i , --input-file :\n       * File name of the input file can be SAM/BAM\n+ -o , --output-file:\n       * File name of the output IonCram file\n+ -r , --reference:\n       * Reference fasta file used by CRAM compression. Should be the same reference used in the mapping phase\n\n### Optional arguments\n+ -b , --bed-file:\n       * reads overlapping this BED FILE\n+ -c , --check:\n       * Check the compressed file and compare it with the original\n+ -z , --compression:\n       * Compression technique used to compress Flow signal. Options are xz, gzip, bzip2, and zstd. xz is the default technique\n+ -v , --verbose:\n       * Verbose mode prints the size used by every field in the l_data\n+ -l , --lossy:\n       * Lossy mode discard the highly repeated reads and uses only one read to represent.\n+ -d , --deez:\n       * Use  deez tool instead of samtools and CRAM\n---\n\n## Decompress\nTool for decompressing IonCram into BAM format\n### Usage\n```bash\n./ioncram decompress -i <input IonCram> -r <input reference FASTA> -o <outputfile bam>\n```\n### Required arguments\n+ -i , --input-file :\n       * File name of the input file can be SAM/BAM\n+ -o , --output-file:\n       * File name of the output IonCram file\n+ -r , --reference:\n       * Reference fasta file used by CRAM compression. Should be the same reference used in the mapping phase\n---\n\n## Compare\nTool for comparing SAM/BAM/IonCram files\n### Usage\n```bash\n./ioncram compare -i1 <input file1> -i2 <input file1> -r <input reference FASTA>\n```\n### Required arguments\n+ -i1 , --input-file1 :\n       * File name of the input file can be SAM/BAM/CRAM/IonCram\n+ -i2 , --input-file2 :\n       * File name of the input file can be SAM/BAM/CRAM/IonCram\n+ -r , --reference:\n       * Reference fasta file used by CRAM compression. Should be the same reference used in the mapping phase\n\n## Cite\nShokrof, M., Abouelhoda, M. IonCRAM: a reference-based compression tool for ion torrent sequence files. BMC Bioinformatics 21, 397 (2020). https://doi.org/10.1186/s12859-020-03726-9\n\n## License\nOpensource\n"
      },
      "source": "https://raw.githubusercontent.com/ionCRAM/ionCRAM/master/README.md",
      "technique": "header_analysis"
    }
  ]
}