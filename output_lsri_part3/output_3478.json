{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ChristopherWilks/megadepth"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-13T00:22:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-10T08:42:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BigWig and BAM utilities"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8992074096310644,
      "result": {
        "type": "Text_excerpt",
        "value": "BigWig and BAM/CRAM related utilities  \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9279283845193782,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --annotation &lt;annotated_file.bed&gt;`",
        "type": "Text_excerpt",
        "value": "We recommend use of one of the pre-compiled binaries (only x86_64): \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.895913256971424,
      "result": {
        "type": "Text_excerpt",
        "value": "Megadepth is also available under  \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9345217339143659,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --annotation &lt;annotated_file.bed&gt;`",
        "type": "Text_excerpt",
        "value": "If none of those options work, the a Docker image and build instructions are described at the end of this README. \n`Wilks, C, Ahmed, O, Baker, DN, Zhang, D, Collado-Torres, L, Langmead, B (2021). Megadepth: efficient coverage quantification for BigWigs and BAMs. Bioinformatics` \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9226149408677783,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "Default output of `--coverage` and `--auc` is to standard out (console/terminal). \nTo change that, you can either add `--gzip` which fill force the output of `--coverage` into a gzipped file* (takes a little longer) in addition to a BigWig file. \nYou can also individually specify via `--no-auc-stdout`, `--no-annotation-stdout`, and/or `--no-coverage-stdout` that the output of  `--auc`, `--annotation` and/or `--coverage` should *not* be written to standard out but to a file with the same prefix as the other options (i.e. using `--prefix`'s argument).  In any case, if `--coverage` is specified, BigWig files will be output no matter the other options. \nWhen running on certain BAMs/annotation BED files, you may see a warning (one or more of them) like this:\n```[W::hts_reglist_create] Region 'SIRV7:4095-4179' specifies an unknown reference name. Continue anyway```\nwhere `'SIRV7:4095-4179'` could be any region that's not present in the BAM but is present in the annotation BED file. \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8577773311000396,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --annotation &lt;annotated_file.bed&gt;`",
        "type": "Text_excerpt",
        "value": "This can be ignored if you know that the BAM file doesn't contain those contigs/chromosomes (in this case the SIRV7 contig is not present in the BAM file being run). \n## BAM/CRAM processing\nWhile megadepth doesn't require a BAM/CRAM index file (typically `<prefix>.bam.bai` or `<prefix>.bam.crai`) to run, it *does* require that the input BAM be sorted by chromosome at least.  This is because megadepth allocates a per-base counts array across the entirety of the current chromosome before processing the alignments from that chromosome.  If reads alignments are not grouped by chromosome in the BAM, undefined behavior will occur including massive slow downs and/or memory allocations. \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9444118406796324,
      "result": {
        "original_header": "BAM/CRAM processing",
        "type": "Text_excerpt",
        "value": "A BAM/CRAM index file is recommended for best performance on sparse regions when `--annotation <regions.bed>` is used. \nRead alignments can be filtered in (inclusion) via `--filter-in <integer>` or filtered out (exclusion) via `--filter-out <integer>`, where `<integer>` is as bitmask according to the SAM specification in decimal. The defaults are `--filter-in 65535` and `--filter-out 260` to skip only unmapped and secondary alignments, processing everything else. \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9022424915391482,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --annotation &lt;annotated_file.bed&gt;`",
        "type": "Text_excerpt",
        "value": "Also, the optional `--gzip` flag in the above example will automatically turn off writing to `STDOUT` any coverage (either base or annotation),\nand will instead write coverage to block gzipped files using the `--prefix` or input filename as the base filename.\nThese block gzipped files will also have a Tabix-like index `.csi` built for them as well.  There's a known bug where chromosomes with 0 coverage are still reported in the block-gzipped files but are not indexed. \nGenerates per-base counts of overlapping reads across all bases of the genome.\nAll coverage is included, even mismatching bases.  So this output should be thought of as ref base + alternate base sums (if using `--alts` in addition, see below). \nTypically this is used to produce a BigWig, but can be used w/o the `--bigwig` option to just output TSVs \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8689076700033188,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --coverage`",
        "type": "Text_excerpt",
        "value": "By default, `--coverage` and `--bigwig` (below) will not double count coverage where paired-end reads overlap (same as `Mosdepth`'s default).\nHowever, double counting can be allowed with the `--double-count` option, which may result in faster running times if precise counting is not needed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9935732273068036,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --bigwig`",
        "type": "Text_excerpt",
        "value": "Outputs coverage (same as `--coverage) except as BigWig file(s) instead of TSVs (including for `--min-unique-qual` option), this is an alterate subcommand to `--coverage`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.925667839188163,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --annotation &lt;annotated_file.bed&gt;`",
        "type": "Text_excerpt",
        "value": "Reports area-under-coverage across all bases (one large sum of overlapping reads, per-base).\nThis will also report additional counts for:\n * `min-unique-qual` only for reads with MAPQ >= to this setting\n * `--annotation`: only for bases in the annotated regions\n \nThis computes the coverage (same as `--coverage` and `--bigwig`) under the hood, but won't output it unless `--coverage` or `--bigwig` is also passed in. \nOutputs fragment length distribution adjusting for intron lengths. \nThis uses the absolute value of the `TLEN` field but uses additional filters similar to [csaw](https://github.com/LTLA/csaw)'s fragment length calculation. \nFurther, read mates must be on forward/reverse strands and the forward mate must not be downstream of the reverse mate. \nIntron length(s) in the paired alignments are also subtracted from the `TLEN` field except where the `TLEN` field is smaller than the combined length of the introns, in which case the `TLEN` is reported as is. \nThese numbers should be taken as an estimation of the fragment length distribtion. \nOutputs information about non-reference-matching portions of reads.\nOutput is comma separated with 4 fields: \nAs field 6 is always blank, there will always be a trailing ',' for X, I, and D records. \nThese could be of a few types, summarized in this table.  All of\nthese are available when the `MD:Z` extra flag is present.  If not\npresent, only the ones with \"Yes\" in the \"No `MD:Z`\" column are\nreported. \nFor example, assuming a BAM file produced by the STAR v2.7.3a aligner which has \nan alignment record at chromosome 11, starting as position 100 (1-base), with a mismatch of a `T` (alt) vs. a `G` (ref) 11 bases from the left starting position of the alignment (inclusive): \nwhere `T` is the base in the read sequence aligned in that record (reference `G`), \nand 10 is the offset of the chromosome ID from the BAM header \n(this offset will vary with the reference used to align). \nThe empty field is reserved for the case where the two mates in a read pair\nhave an overlapping alignment.  In that case the read ID/name is printed in the\n5th field to indicate overlap.  Typically this will allow for the removal of\nduplicate alternative base calls and help to inform deciding between conflicting\ncalls where the overlapping mates may not have the same call.  This only applies to \nmismatches ('X'), insertions ('I'), and deletions ('D'), not to soft-clipping (below).\nIf coverage is not being computed (`--bigwig` or `--coverage`) as well, overlapping pairs\nwill *not* be flagged when `--alts` is used. \nSee the usage message for options, which can selectively disable some\nof the outputs listed above.  E.g. the soft-clipping outputs can be\nvery large, so they're not printed unless `--include-softclip` is\nspecified. \nIn addition to the alternate base output, this reports the bases\nthat were softclipped at the ends (start/end) of the read.\nThese are bases which are left in the sequence but don't align. \nWarning: using this option w/o modifiers (e.g. `--only-polya`) \ncould blow up the `--alts` output size as the full softclipped\nsequence is printed in the 4th column in the table above (\"Extra info\"). \n* Count of bases in the sofclip (column 4 below) has to be >= 3\n* % of base (A/T) of softclipped bases for an alignment >= 80% \nOutput is comma separated with 7 fields: \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9893191686870735,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --alts --include-softclip --only-polya`",
        "type": "Text_excerpt",
        "value": "| Pos   |                                                                      Description|\n|-------|----------------------------------------------------------------------------------|\n| 1     | Reference/chromosome ID in the BAM file (integer)                                |\n| 2     | POS field (0-based ref offset of either leftmost or rightmost aligned base)      |\n| 3     | Operation label (always \"S\")                                                     |\n| 4     | Number of bases in the softclip (run length)                                     |\n| 5     | Intentionally left blank to be compatible with previous alt. format              |\n| 6     | Direction to move from POS ('+' for end of alignment, '-' for start of alignment)|\n| 7     | Base (A/T)                                                                       |\n| 8     | Count of the base in column 6                                                    |\n \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9198722205976841,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --annotation &lt;annotated_file.bed&gt;`",
        "type": "Text_excerpt",
        "value": "| Pos    |                                                                            Description|\n|--------|---------------------------------------------------------------------------------------|\n| 1      | Read name (for removing duplicate junction reports for overlapping read mates)        |\n| 2      | Reference/chromosome ID in the BAM file (integer)                                     |\n| 3      | Start coordinate of intron (1-based ref offset of leftmost base of intron)            |\n| 4      | End coordinate of intron (1-based ref offset of rightmost base of intron)             |\n| 5*     | Mapping strand of alignment (0 forward, 1 reverse)                                    |\n| 6      | Cigar string (useful for determining anchor lengths)                                  |\n| 7      | Is unique alignment? (0:no, 1:yes; needed for counting unique split read support)     | \n\\*This is the strand of the alignment, not necessarily the strand of the junction, that has to be determined by the dinucleotide motifs at the coordinates given.\nHowever, if the BAM includes the `XS:A` tag for certain alignment records the strand here will be `+` or `-` taken from that tag and then indicates the true strand of source transcript based on if canonical splicing info is available. \nThis output can be further processed by the script, `junctions/process_jx_output.sh` to get a merged set of junctions with unique and multi-mapping counts, compatible with STAR's `SJ.out` junction file (sans the last column which is left blank, but would be maximum anchor length per junction if coming from STAR). \nIf comparing with STAR's SJ.out file for the same BAM, be aware that STAR will likely not do the same alignment level filtering, so the results will be different in terms of 1) number of junctions found and 2) split-read counts for a junction found in both approaches. \nThis does not extract all potential junctions (use `--all-junctions` for that), only those for which a read (or read pair) had >= 2 junctions. This can be run instead of OR in addition to `--all-junctions`, to specifically report co-occurring junctions.  Since the output format below includes co-occurring jx's on the same line, it's potentially useful to run both. \nOutput is tab separated with 6-12 fields (the last 6 fields are for a 2nd mate if applicable): \n| Pos    |                                                                            Description|\n|--------|---------------------------------------------------------------------------------------|\n| 1      | Reference/chromosome ID in the BAM file (integer)                                     |\n| 2      | POS field (1-based ref offset of either leftmost base)                                |\n| 3      | Mapping strand (0 forward, 1 reverse)**                                               |\n| 4      | Insert length (0 if not paired)                                                       |\n| 5      | Cigar string (useful for determining anchor lengths)                                  |\n| 6      | List of junction coordinates (comma-delimited)                                        |\n| 7      | Is unique alignment? (0:no, 1:yes; needed for counting unique split read support)     |\n| 8*     | Mate reference record ID                                                              |\n| 9*     | Mate POS field (1-based ref offset of either leftmost base)                           |\n| 10*    | Mate mapping strand (0 forward, 1 reverse)**                                          |\n| 11*    | Mate insert length (0 if not paired)                                                  |\n| 12*    | Mate cigar string (useful for determining anchor lengths)                             |\n| 13*    | Mate list of junction coordinates (comma-delimited)                                   |\n| 14*    | Mate is unique alignment? (0:no, 1:yes; needed for counting unique split read support)| \n\\*optional, output if a 2nd mate is present and has the required number of junctions. \n\\*\\*This is the strand of the alignment, not necessarily the strand of the junction, that has to be determined by the dinucleotide motifs at the coordinates given.\nHowever, if the BAM includes the `XS:A` tag for certain alignment records the strand here will be `+` or `-` taken from that tag and then indicates the true strand of source transcript based on if canonical splicing info is available. \nIf you get a core dump when running on longer reads (e.g. BAM's produced by PacBio/Oxford Nanopore sequencing), or something like this abort message:\n```*** Error in `megadepth': free(): invalid next size (normal): 0x0000000001d30780 ***``` \nThis enables megadepth to have a better chance of handling really long CIGAR strings. \n# Docker \nAdditionally, there is a Docker image that can be used to run `megadepth`: \nFor running under Docker, you'll probably want to map in a directory on the host system into the container via the `-v` option so you can pass an annotation file in and get output back:\n```\ndocker run -v `pwd`:/data <image_id> </data/path_or_URL/to/input/BAM_or_BigWig> --annotation /data/<annotation>.bed --prefix /data/output_file_prefix\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8518968245515319,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "Currently, `libcurl` throws a warning about version information, this can be ignored.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.883904108021157,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --annotation &lt;annotated_file.bed&gt;`",
        "type": "Text_excerpt",
        "value": "* [htslib](http://www.htslib.org)\n    * See `get_htslib.sh` for a script that gets a recent version and compiles it with minimal dependencies\n* [libBigWig](https://github.com/dpryan79/libBigWig)\n    * See `get_libBigWig.sh` for a script that gets a recent version and compiles it\n* [libdeflate](https://github.com/ebiggers/libdeflate)\n    * See `get_libdeflate.sh` for a script that gets a recent version and compiles it\n* zlib static library [only if building a static binary]\n    * See `get_zlib.sh` for a script that gets a recent version and compiles the static library \nBefore attempting to build Megadepth, we strongly suggest the user try to use one of the pre-built binaries or the Docker container provided at the top of this README. \nThis builds a fully dynamic binary which requires that libraries for htslib and libBigWig be available in the environment where megadepth will be run. \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.804520658417586,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "Additionally, there is a Docker image that can be used to run `megadepth`: \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ChristopherWilks/megadepth/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ChristopherWilks/megadepth"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Usage"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/get_zlib.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/build_megadepth.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/build_no_container_macos.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/run_windows_build_container.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/build_no_container_hbb.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/create_docker_to_run_megadepth.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/get_htslib.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/get_libBigWig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/build_no_container_windows.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/entry.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/run_macos_build_container.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/get_libdeflate.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/release.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/docker_build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/run_hbb_build_container.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/sample_aggregation/aggregate.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/sample_aggregation/remove_extra_samples.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/sample_aggregation/paste_sums.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/sample_aggregation/find_new_files.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/sample_aggregation/group_sums.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/junctions/process_jx_output.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/conda/megadepth/build.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9195982413701662,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --annotation &lt;annotated_file.bed&gt;`",
        "type": "Text_excerpt",
        "value": "Also, `--bigwig` will not work on Windows, megadepth as of release 1.0.5 will simply skip writing a BigWig if this option is passed in with the Windows build, but will process other options which still make sense (e.g. `--auc`). \nWe recommend use of one of the pre-compiled binaries (only x86_64): \n*this binary has the HTSlib, libBigWig, libcurl, libdeflate, & zlib libraries statically linked. \n[Releases prior to 1.0.2 used the previous name \"bamcount\"] \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9667562582467683,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "For any remote file processing, either BAM or BigWigs, you *must* use the `--prefix <output_file_prefix>` option. \nYou can also individually specify via `--no-auc-stdout`, `--no-annotation-stdout`, and/or `--no-coverage-stdout` that the output of  `--auc`, `--annotation` and/or `--coverage` should *not* be written to standard out but to a file with the same prefix as the other options (i.e. using `--prefix`'s argument).  In any case, if `--coverage` is specified, BigWig files will be output no matter the other options. \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9322543182771196,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --annotation &lt;annotated_file.bed&gt;`",
        "type": "Text_excerpt",
        "value": "Or if you only want the AUC for the whole BigWig:\n```\nmegadepth SRR1258218.bw\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.915884112813323,
      "result": {
        "original_header": "BAM/CRAM processing",
        "type": "Text_excerpt",
        "value": "Concrete example command for sample `SRR1258218` (NA12878 Illumina RNA-seq):\n```\nmegadepth SRR1258218.sorted.bam --threads 4 --bigwig --auc --annotation exons.bed --prefix SRR1258218\n```\n \nIf you only want to get a coverage summary (either sum or mean) over a set of intervals, you may see a performance boost if you have a BAM index at the same path as the BAM file:\n```\nmegadepth SRR1258218.sorted.bam --annotation exons.bed --prefix SRR1258218 --gzip\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9098310897414416,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --annotation &lt;annotated_file.bed&gt;`",
        "type": "Text_excerpt",
        "value": "### `megadepth /path/to/bamfile --annotation <annotated_file.bed>` \n### `megadepth /path/to/bamfile --annotation <bp>` \n### `megadepth /path/to/bamfile --coverage` \n### `megadepth /path/to/bamfile --bigwig` \n## Fragment Length Distribution \n### `megadepth /path/to/bamfile --frag-dist` \n### `megadepth /path/to/bamfile --alts` \nThese could be of a few types, summarized in this table.  All of\nthese are available when the `MD:Z` extra flag is present.  If not\npresent, only the ones with \"Yes\" in the \"No `MD:Z`\" column are\nreported. \n| Label | Type       |          Extra info  | No `MD:Z`  |\n|-------|------------|----------------------|------------|\n| `X`   | Mismatch   |            Read base |         No |\n| `D`   | Deletion   |      # deleted bases |        Yes |\n| `I`   | Insertion  |  Inserted read bases |        Yes |\n| `S`   | Soft clip  |   Soft clipped bases |        Yes |\n| `H`   | Hard clip  |            (nothing) |        Yes |\n| `P`   | Padding    |            (nothing) |        Yes | \n### `megadepth /path/to/bamfile --alts --include-softclip` \n### `megadepth /path/to/bamfile --alts --include-softclip --only-polya` \nIf reporting softclipped bases, this option will limit the report to only\nthose bases that have the following: \n#### `megadepth /path/to/bamfile --junctions` \nhttps://quay.io/repository/broadsword/megadepth?tab=tags \nFor running under Docker, you'll probably want to map in a directory on the host system into the container via the `-v` option so you can pass an annotation file in and get output back:\n```\ndocker run -v `pwd`:/data <image_id> </data/path_or_URL/to/input/BAM_or_BigWig> --annotation /data/<annotation>.bed --prefix /data/output_file_prefix\n```\n \n# Building \n## Build dependencies \n* [htslib](http://www.htslib.org)\n    * See `get_htslib.sh` for a script that gets a recent version and compiles it with minimal dependencies\n* [libBigWig](https://github.com/dpryan79/libBigWig)\n    * See `get_libBigWig.sh` for a script that gets a recent version and compiles it\n* [libdeflate](https://github.com/ebiggers/libdeflate)\n    * See `get_libdeflate.sh` for a script that gets a recent version and compiles it\n* zlib static library [only if building a static binary]\n    * See `get_zlib.sh` for a script that gets a recent version and compiles the static library \n \n## Building \nBefore attempting to build Megadepth, we strongly suggest the user try to use one of the pre-built binaries or the Docker container provided at the top of this README. \nThe 3 primary dependencies for this build (htslib, libBigWig, libdeflate) are brought in via git's `submodule` system automatically. \nTo build Megadepth on a reasonably modern x86 Linux machine (with `libcurl` and `zlib`), run: \n`build_megadepth.sh` \nThis builds a fully dynamic binary which requires that libraries for htslib and libBigWig be available in the environment where megadepth will be run. \nWe have provided a wrapper script, `megadepth`, which sets the environment to reference those two libraries where they were cloned, so megadepth can be run on the build machine.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8098781759470501,
      "result": {
        "original_header": "`megadepth /path/to/bamfile --annotation &lt;annotated_file.bed&gt;`",
        "type": "Text_excerpt",
        "value": "Output format: \nFor running under Docker, you'll probably want to map in a directory on the host system into the container via the `-v` option so you can pass an annotation file in and get output back:\n```\ndocker run -v `pwd`:/data <image_id> </data/path_or_URL/to/input/BAM_or_BigWig> --annotation /data/<annotation>.bed --prefix /data/output_file_prefix\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "megadepth"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ChristopherWilks"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 241116,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 35968,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 7251,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 1522,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 1478,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2022-02-15T22:37:27Z",
        "date_published": "2022-02-02T15:35:25Z",
        "description": "This release goes further than the last to substantially speed up BigWig coverage-over-an-annotation computations.\r\n\r\nThe speed up comes from collapsing annotated regions from the given BED file within `N` bases to form larger regions which are then used to query the index.  This avoids querying the index for many small regions which are very close to each other.  The `N` is controlled by the new option `--distance`, with a default of 2200 bases which appears from my tests to be more or less optimal, though this will vary depending on the BED file used and the density of coverage in the BigWig.\r\n\r\nFor this to work, the BED file passed to `--annotation`  needs to be sorted according to `sort -k1,1 -k2,2n`.  Megadepth will check to determine if this is the case. It will automatically fall back to using a slower version of the coverage calculation where the BigWig index is queried for each interval in the BED file independently, if it detects either or both of the following conditions:\r\n\r\n1) chromosomes are not contiguous (e.g. `chr1` appears both before *and* after `chr2`)\r\n2) the previous check is OK but coordinates are not in order for a given chromosome\r\n\r\nAlso, for 1), the order of output will not be the order of input, rather regions from the same chromosome will be grouped together in output. \r\n\r\nFinally `--unsorted` has been added to force Megadepth to fall back to the slower version when the argument to `--annotation` is unsorted or if the user wants to force querying of the BigWig index for each region.",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.2.0",
        "name": "1.2.0",
        "release_id": 56284445,
        "tag": "1.2.0",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/56284445",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/56284445",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2021-12-29T20:10:41Z",
        "date_published": "2021-12-29T20:25:20Z",
        "description": "This release attempts to speed up the BigWig calculations over an annotation, by using the BigWig index. \r\nThis mode was very substantially slowed down after the major bug fix in https://github.com/ChristopherWilks/megadepth/releases/tag/1.1.1\r\n\r\nWhile this mode should be substantially faster than it was right after 1.1.1, it's still quite a bit slower than pre-1.1.1.\r\n\r\nIt also includes the experimental feature to get the true strand of the junction via the `XS:A` tag in BAM files that support this, as in pre-release 1.1.2a.",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.1.3",
        "name": "1.1.3",
        "release_id": 56158244,
        "tag": "1.1.3",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/56158244",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/56158244",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2021-10-20T20:58:35Z",
        "date_published": "2021-10-13T01:14:01Z",
        "description": "This is a minor feature release which adds support for the `XS:A` tag that some RNA-seq aligners output in their BAM files.\r\n\r\nIf present in the BAM, the output of `--junctions` and `--all-junctions` will use the value of the XS:A tag (`+` or `-`) to indicate the true strand, otherwise the mapping strand is used (as before).\r\n\r\nThe `junctions/process_jx_output.sh` will continue to just set the stand to `0` for the present.",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.1.2a",
        "name": "1.1.2a",
        "release_id": 51249286,
        "tag": "1.1.2a",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.1.2a",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/51249286",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/51249286",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.1.2a"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2021-08-24T19:24:34Z",
        "date_published": "2021-08-24T19:33:25Z",
        "description": "This is a bug-fix only release.  \r\nIf you are at all using the *BigWig* part of Megadepth we strongly suggest you switch to this release. \r\nThe BAM aspects of Megadepth are not affected by this release.\r\n\r\nUPDATE 2021-12-06\r\nAdditional details about this release that were not included in the initial post:\r\nAn additional bug was fixed with this release that can have a much larger impact on the both the number of intervals Megadepth will scan in searching for overlaps to compute over when `--annotation` is used with a BigWig file and the performance of Megadepth.  In the previous versions of Megadepth, it would stop searching for interval overlaps between a BigWig and an annotation for a particular chromosome too early if one or both of the following were present:\r\n\r\n1) an annotation had no overlaps\r\n2) the annotation's end coordinate was greater than the greatest (last) coordinate in the BigWig's regions for that chromosome\r\n\r\nDepending on the BigWig file and set of annotation intervals used, Megadepth may miss most/all of the interval overlaps and severely under compute the desired calculation.  This also means the performance of Megadepth will be substantially slower in many cases than what's reported in the paper due to this bug.\r\n\r\nThis release also fixes a bug first reported in https://github.com/ChristopherWilks/megadepth/issues/9 by @osakarya.\r\nThe bug is that Megadepth would (until now) miss a number of overlapping scenarios when operating over a BigWig for a set of annotation intervals/regions (all operation types).\r\n\r\nTwo primary examples where Megadepth would miss overlaps are (not exhaustive):\r\n\r\n1) when the annotated region's start coordinate *did not* overlap a region in the BigWig  but the end coordinate did\r\n2) when the annotated region strictly *contained* the BigWig region\r\n",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.1.1",
        "name": "1.1.1",
        "release_id": 48378632,
        "tag": "1.1.1",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/48378632",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/48378632",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2021-04-07T04:10:28Z",
        "date_published": "2021-04-07T04:05:44Z",
        "description": "very minor bug fix release to `--alts` to fully support cigar ops H (hardclipping) and P (padding)",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.1.0c",
        "name": "1.1.0c",
        "release_id": 41034415,
        "tag": "1.1.0c",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.1.0c",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/41034415",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/41034415",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.1.0c"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2021-01-22T15:34:49Z",
        "date_published": "2021-01-22T15:38:34Z",
        "description": "* adds --add-chr-prefix to convert chromosome short names to use `chr` prefix for compatibility with recount3\r\n* better handling of when the argument for `--annotation` isn't present, now prints error rather than segfaulting(!)\r\n* better handling of some runtime errors",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.1.0b",
        "name": "1.1.0b",
        "release_id": 36772548,
        "tag": "1.1.0b",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.1.0b",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/36772548",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/36772548",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.1.0b"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2021-01-19T15:56:59Z",
        "date_published": "2021-01-19T16:07:41Z",
        "description": "* adds `--all-junctions` to output every *potential* junction found in the BAM file\r\n* adds post-processing script `junctions/process_jx_output.sh` for creating STAR-like formatted junction output\r\n\r\nThis is in addition to the `--junctions` option which continues to exist separately for outputting only those junctions which co-occur in a read or read pair.  However, this option's output has also been updated to report whether the alignment used was unique or not.  Please see the [README](https://github.com/ChristopherWilks/megadepth#megadepth-pathtobamfile---junctions) for more details.\r\n",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.1.0",
        "name": "1.1.0",
        "release_id": 36607857,
        "tag": "1.1.0",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/36607857",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/36607857",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-12-17T09:12:04Z",
        "date_published": "2020-12-17T09:16:05Z",
        "description": "Extends `--alts` option to print out the read ID/names when `--double-count` is not enabled and there is known overlaps between two mates in a a read pair.  This informs downstream tools which try to call genotypes or do ASE to which calls are duplicates or are conflicting.",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.0.9b",
        "name": "1.0.9b",
        "release_id": 35404385,
        "tag": "1.0.9b",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.0.9b",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/35404385",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/35404385",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.0.9b"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-11-10T21:30:35Z",
        "date_published": "2020-11-10T22:00:53Z",
        "description": "* adds `--annotation <window_in_bp>` option to specify a contiguous set of regions to calculate coverage across\r\n* now uses the increment/decrement strategy of Mosdepth for whole genome and windowed coverage\r\n* added `--no-index` to use with certain dense region queries where performance may be better not jumping around the BAM index\r\n* when `--gzip` is used, generate Tabix index inline with the coverage output rather than at the end (similar to Mosdepth), this is faster\r\n* adding SIMD and memset code from @dnbaker for count performance\r\n* fixed major performance bug in resetting chromosome coverage array",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.0.9",
        "name": "1.0.9",
        "release_id": 33733519,
        "tag": "1.0.9",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/33733519",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/33733519",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.0.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-11-03T15:43:13Z",
        "date_published": "2020-10-30T14:17:23Z",
        "description": "* adds `--fasta` to support local genome reference FASTA file for CRAM input files (to avoid downloading the references)\r\n* skip decoding of unused CRAM fields (MD tags, qualities, sequence, tlen, auxiliary and readgroups) for coverage and region performance unless `--alts` is passed in, then all those fields get decoded\r\n* now uses the `countlut` u32toa method from https://github.com/miloyip/itoa-benchmark to write out base level coverage faster\r\n\r\n* fixed regression buffer overflow bug introduced in 1.0.7 in the BAMIterator code when running with a set of regions (`--annotation`)",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.0.8b",
        "name": "1.0.8b",
        "release_id": 33273301,
        "tag": "1.0.8b",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.0.8b",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/33273301",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/33273301",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.0.8b"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-10-15T20:08:17Z",
        "date_published": "2020-10-15T20:08:45Z",
        "description": "* add support for block gzipping annotation interval coverage\r\n* add support for Tabix-like index of both annotation and base level coverage if `--gzip` is invoked\r\n* leverage BAM index for region only runs for speed (in the case of `--annotation` but no `--coverage` or `--bigwig`)",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.0.7",
        "name": "1.0.7",
        "release_id": 32639240,
        "tag": "1.0.7",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/32639240",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/32639240",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-10-14T18:58:40Z",
        "date_published": "2020-10-14T21:45:19Z",
        "description": "* adds support for custom filters of BAM records, `--filter-in`, `--filter-out`; similar to Samtools -f/-F\r\n* adds support for computing a mean over an annotation for a BAM file (not just sum)\r\n* adds support for compressed output of base coverage from a BAM using `--gzip` (when not using `--bigwig`)\r\n",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.0.6",
        "name": "1.0.6",
        "release_id": 32288372,
        "tag": "1.0.6",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/32288372",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/32288372",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-10-03T17:55:26Z",
        "date_published": "2020-10-03T19:10:29Z",
        "description": "New features:\r\n* adds CRAM processing support, both local and remote for all commands that work with BAMs\r\n* streamlines AUC option handling to be similar to `--coverage` and `--annotation`\r\n\r\nBug workaround:\r\n* no-op's `--bigwig` on Windows due to issue with finalizing BigWig files in libBigWig on that platform\r\n",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.0.5",
        "name": "1.0.5",
        "release_id": 31897110,
        "tag": "1.0.5",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/31897110",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/31897110",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-08-27T21:07:59Z",
        "date_published": "2020-08-27T19:54:19Z",
        "description": "For Linux:\r\n* megadepth [default]\r\nPreviously known as \"statlib\", this is a dynamic executable but with the following statically compiled in: htslib, libBigWig, libdeflate, libcurl, zlib, this should work on the vast majority of modern Linux x86_64 machines.\r\n* megadepth_static\r\nSame as before, fully static but no support for processing of remote BAMs/BigWigs (no libcurl support)\r\n\r\nThis release adds the ability to process BAM files on a remote server via HTTP (remote BigWigs were added in 1.0.3 release).\r\n\r\nNew for this release, *beta* Windows 64bit and MacOS x86_64 binaries.\r\nThese are still in test, for example the Windows binary fails to *write* correct BigWigs and how well the MacOS binary works is unknown due to the limited access I have to MacOS.  So use at your own risk and feedback especially welcome here.\r\n\r\nChanges to command line options:\r\n* streamlined all output file prefixes, now condensed under one option `--prefix <prefix>`\r\n* default to outputting summarized annotation to `STDOUT`\r\n* `--no-annotation-stdout` option to force summarized annotation to `prefix.annotation.tsv`\r\n* changed file suffix of all-reads summarized annotation output from  `all.tsv` to `annotation.tsv` \r\n* `--sums-only` option to just output single column of sums for summarized annotation (discards coordinates)\r\n\r\nCode hygiene improvements from @dnbaker \r\n\r\nSpeed improvement for BAM processing:\r\n* switched to using [libdeflate](https://github.com/ebiggers/libdeflate) in `htslib` for faster BAM decompression\r\n\r\nAlso switched to [robin_hood hashing](https://github.com/martinus/robin-hood-hashing) for all `unordered_map` usage",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.0.4",
        "name": "1.0.4",
        "release_id": 28949476,
        "tag": "1.0.4",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/28949476",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/28949476",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-06-12T18:48:39Z",
        "date_published": "2020-06-12T18:57:37Z",
        "description": "This release includes the ability to process BigWig files on a remote server via HTTP.\r\n\r\nThis is accomplished through [libBigWig's](https://github.com/dpryan79/libBigWig) use of libcurl.\r\n\r\nThis release also introduces a change to which binaries are available:\r\n\r\n* `megadepth_statlib` (default `megadepth` binary in the release)\r\nStatically links [HTSlib](https://github.com/samtools/htslib) and [libBigWig](https://github.com/dpryan79/libBigWig) but dynamically links against all other dependencies.  This is the most convenient binary for users who want to run megadepth on a modern x86_64 Linux flavor.\r\n\r\n* `megadepth_static`\r\nFully static binary, use for local BAM/BigWig processing if your system can't support the default binary for some reason.  It does *not* allow remote BigWig processing due to the difficulties in building a static version of libcurl.\r\n\r\n* `megadepth_dynamic`\r\nDynamically links against every library.  Use this only if you want to link against your own versions of HTSlib and libBigWig at runtime.\r\n\r\n* `megadepth.libcurl4`\r\nSame as megadepth_statlib, but links against newer version of libcurl (libcurl4) instead of libcurl3",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.0.3",
        "name": "1.0.3",
        "release_id": 27506468,
        "tag": "1.0.3",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/27506468",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/27506468",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-05-14T23:29:58Z",
        "date_published": "2020-05-14T23:29:17Z",
        "description": "Name change to \"megadepth\"",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.0.2",
        "name": "1.0.2",
        "release_id": 26537569,
        "tag": "1.0.2",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/26537569",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/26537569",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-04-02T01:57:30Z",
        "date_published": "2020-04-02T01:55:51Z",
        "description": "Minor update to remove the buggy and questionably useful \"raw\" mode from BigWig processing",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.0.1",
        "name": "1.0.1",
        "release_id": 25115760,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/25115760",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/25115760",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-02-26T15:49:40Z",
        "date_published": "2020-02-26T15:59:07Z",
        "description": "* Help message and options have been slightly improved (no more `--just-auc`).\r\n\r\n* Some internal organizational changes from last release\r\n\r\n* Further testing against `bwtool` sums over an annotation (they match).",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/1.0.0",
        "name": "1.0.0",
        "release_id": 24007360,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/24007360",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/24007360",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2020-02-24T16:59:21Z",
        "date_published": "2020-02-24T17:03:38Z",
        "description": "This release primarily merges the BAM (master) and BigWig (bw_read) processing branches of the repo into one binary.\r\n\r\nBamcount can now be used to process coverage from both BAMs and BigWigs using the same binary.\r\n\r\nIt will detect the file type from the input.\r\n",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.9.0",
        "name": "0.9.0",
        "release_id": 23937484,
        "tag": "0.9.0",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/23937484",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/23937484",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2019-08-27T19:01:27Z",
        "date_published": "2019-08-27T22:11:25Z",
        "description": "This release now includes a [statically compiled binary](https://github.com/BenLangmead/bamcount/releases/download/0.4.0/bamcount_static) for use on x86-64 architectures.\r\nThis avoids the end user having to have `htslib` and `libBigWig` shared libraries installed.\r\n\r\nThis release fixes a bug in the coverage calculation where read mates from the same pair which have the same start coordinate in their alignments (thus overlapping in the BAM) will be double counted even when `--double-count` is *not* enabled.\r\n\r\nThis affected the following features:\r\n* All per-base coverage\r\n* unique coverage\r\n* BigWig output\r\n* AUC calculation\r\n* Annotation coverage",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.4.0",
        "name": "0.4.0",
        "release_id": 19573723,
        "tag": "0.4.0",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/19573723",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/19573723",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2019-04-11T19:37:30Z",
        "date_published": "2019-04-11T19:52:40Z",
        "description": "Summed coverage of annotation output now matches the order of the annotation BED file by default\r\n\r\n`--keep-bam-order` enables the old behavior of chromosome order matching the BAM file in the summed coverage output",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.3.3",
        "name": "0.3.3",
        "release_id": 16711170,
        "tag": "0.3.3",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/16711170",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/16711170",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2019-03-27T17:33:19Z",
        "date_published": "2019-03-26T16:17:17Z",
        "description": "(re-release)\r\nAdded --junctions subcommand to output locally co-occurring junctions\r\nBumped VERSION",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.3.2",
        "name": "0.3.2",
        "release_id": 16358729,
        "tag": "0.3.2",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/16358729",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/16358729",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2019-03-18T14:40:12Z",
        "date_published": "2019-03-21T18:10:58Z",
        "description": "* added bam2fastq sub-command to do what Picard SamToFastq does\r\n* renamed runner scripts",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.3.0",
        "name": "0.3.0",
        "release_id": 16266091,
        "tag": "0.3.0",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/16266091",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/16266091",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2019-02-26T17:23:47Z",
        "date_published": "2019-02-26T17:34:52Z",
        "description": "* Bumped version correctly\r\n* Fixed bug causing segfault at end of program when `--include-softclip` wasn't set and BAM was empty.\r\n* Added debug wrapper\r\n* Streamlined no-contained build script\r\n",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.2.8",
        "name": "0.2.8",
        "release_id": 15786904,
        "tag": "0.2.8",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.2.8",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15786904",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15786904",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.2.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2019-02-19T18:22:14Z",
        "date_published": "2019-02-19T18:50:07Z",
        "description": "* poly-A count reporting\r\n* Kallisto-compatible fragment length estimation\r\n* --alts N's inclusion bug fixed",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.2.7",
        "name": "0.2.7",
        "release_id": 15650261,
        "tag": "0.2.7",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.2.7",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15650261",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15650261",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.2.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2019-02-05T21:37:09Z",
        "date_published": "2019-02-05T21:43:02Z",
        "description": "--auc is now it's own option, independent of --coverage; coverage is still computed as necessary for the AUC statistic, but is not output.  also includes `#define __STDC_FORMAT_MACROS` for portability.",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.2.6",
        "name": "0.2.6",
        "release_id": 15384812,
        "tag": "0.2.6",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.2.6",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15384812",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15384812",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.2.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2019-02-04T21:11:06Z",
        "date_published": "2019-02-04T22:42:20Z",
        "description": "* --read-ends output to specified file prefix\r\n* --read-ends output format: chrm, pos, count",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.2.5",
        "name": "0.2.5",
        "release_id": 15361869,
        "tag": "0.2.5",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15361869",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15361869",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BenLangmead",
          "type": "User"
        },
        "date_created": "2019-02-02T00:31:09Z",
        "date_published": "2019-02-02T20:28:12Z",
        "description": "* Added alternative frag len calculation\r\n* Bug fix related to soft-clip skipping when`MD:Z` is absent",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.2.4",
        "name": "0.2.4",
        "release_id": 15333680,
        "tag": "0.2.4",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15333680",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15333680",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ChristopherWilks",
          "type": "User"
        },
        "date_created": "2019-01-26T09:20:39Z",
        "date_published": "2019-01-27T00:35:27Z",
        "description": "Fixes the major bugs related to not leaving out introns when calculating coverage.\r\nOutput now exactly matches `mosdepth` except in the case of references with 0 aligned reads which are just skipped (`mosdepth` prints them).\r\n\r\nAdding the fragment length distribution feature (`--frag-dist`).\r\n\r\nEach major option including `--auc`, `--frag-dist`, and `--alts` now take filenames to output to.",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.2.3",
        "name": "0.2.3---Intron Bugs Fixed, File out options, & Fragment Distribution",
        "release_id": 15199797,
        "tag": "0.2.3",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15199797",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15199797",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BenLangmead",
          "type": "User"
        },
        "date_created": "2019-01-17T02:36:50Z",
        "date_published": "2019-01-17T14:46:41Z",
        "description": "* Buffered output for `--alts`\r\n* Moved conditional outside loop in inner coverage-counter-updating loop",
        "html_url": "https://github.com/ChristopherWilks/megadepth/releases/tag/0.2.2",
        "name": "0.2.2 -- I/O and speed improvements",
        "release_id": 15032983,
        "tag": "0.2.2",
        "tarball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/tarball/0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15032983",
        "value": "https://api.github.com/repos/ChristopherWilks/megadepth/releases/15032983",
        "zipball_url": "https://api.github.com/repos/ChristopherWilks/megadepth/zipball/0.2.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Build dependencies",
        "parent_header": [
          "Building"
        ],
        "type": "Text_excerpt",
        "value": "* [htslib](http://www.htslib.org)\n    * See `get_htslib.sh` for a script that gets a recent version and compiles it with minimal dependencies\n* [libBigWig](https://github.com/dpryan79/libBigWig)\n    * See `get_libBigWig.sh` for a script that gets a recent version and compiles it\n* [libdeflate](https://github.com/ebiggers/libdeflate)\n    * See `get_libdeflate.sh` for a script that gets a recent version and compiles it\n* zlib static library [only if building a static binary]\n    * See `get_zlib.sh` for a script that gets a recent version and compiles the static library\n\n \n## Building\n\nBefore attempting to build Megadepth, we strongly suggest the user try to use one of the pre-built binaries or the Docker container provided at the top of this README.\n\nThe 3 primary dependencies for this build (htslib, libBigWig, libdeflate) are brought in via git's `submodule` system automatically.\n\nTo build Megadepth on a reasonably modern x86 Linux machine (with `libcurl` and `zlib`), run:\n\n`build_megadepth.sh`\n\nThis builds a fully dynamic binary which requires that libraries for htslib and libBigWig be available in the environment where megadepth will be run.\n\nWe have provided a wrapper script, `megadepth`, which sets the environment to reference those two libraries where they were cloned, so megadepth can be run on the build machine.\n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:54:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 91
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "For any remote file processing, either BAM or BigWigs, you *must* use the `--prefix <output_file_prefix>` option.\n\nAdditionally, when using `--annotation`, `--op <op>` can be used to change the mode of summary:\n\n* BAMs, `<op>` can be `sum` (default) or `mean`\n* BigWigs, `<op>` can be `sum` (default), `mean`, `min`, or `max`\n\nDefault output of `--coverage` and `--auc` is to standard out (console/terminal).\n\nTo change that, you can either add `--gzip` which fill force the output of `--coverage` into a gzipped file* (takes a little longer) in addition to a BigWig file.\n\nYou can also individually specify via `--no-auc-stdout`, `--no-annotation-stdout`, and/or `--no-coverage-stdout` that the output of  `--auc`, `--annotation` and/or `--coverage` should *not* be written to standard out but to a file with the same prefix as the other options (i.e. using `--prefix`'s argument).  In any case, if `--coverage` is specified, BigWig files will be output no matter the other options.\n\n*known bug, this doesn't apply to the `all` base-level coverage case, only to the unique (`--min-unique-qual 10`) case, all base-level coverage will either be output to standard out and/or to a BigWig file, but never to a gzipped file at this point.\n\nWhen running on certain BAMs/annotation BED files, you may see a warning (one or more of them) like this:\n```[W::hts_reglist_create] Region 'SIRV7:4095-4179' specifies an unknown reference name. Continue anyway```\nwhere `'SIRV7:4095-4179'` could be any region that's not present in the BAM but is present in the annotation BED file.\n\nThis can be ignored if you know that the BAM file doesn't contain those contigs/chromosomes (in this case the SIRV7 contig is not present in the BAM file being run).\n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BigWig Processing",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nmegadepth /path/to/bigwigfile --annotation <annotated_intervals.bed> --op <operation_over_annotated_intervals>\n```\n\nConcrete example command for sample `SRR1258218` (NA12878 Illumina RNA-seq), this will produce 1) means for the intervals listed in `exons.bed` and 2) the total annotated AUC (output `STDOUT`):\n```\nmegadepth SRR1258218.bw --annotation exons.bed --op mean --auc\n```\n\nOr if you only want the AUC for the whole BigWig:\n```\nmegadepth SRR1258218.bw\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BAM/CRAM processing",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "While megadepth doesn't require a BAM/CRAM index file (typically `<prefix>.bam.bai` or `<prefix>.bam.crai`) to run, it *does* require that the input BAM be sorted by chromosome at least.  This is because megadepth allocates a per-base counts array across the entirety of the current chromosome before processing the alignments from that chromosome.  If reads alignments are not grouped by chromosome in the BAM, undefined behavior will occur including massive slow downs and/or memory allocations.\n\nA BAM/CRAM index file is recommended for best performance on sparse regions when `--annotation <regions.bed>` is used.\n\nIf a CRAM file is being processed, the reference FASTA may be retrieved from an external webserver (default) or specified with `--fasta /path/to/reference.fa`.\n\nRead alignments can be filtered in (inclusion) via `--filter-in <integer>` or filtered out (exclusion) via `--filter-out <integer>`, where `<integer>` is as bitmask according to the SAM specification in decimal. The defaults are `--filter-in 65535` and `--filter-out 260` to skip only unmapped and secondary alignments, processing everything else.\n\nConcrete example command for sample `SRR1258218` (NA12878 Illumina RNA-seq):\n\n```\nmegadepth SRR1258218.sorted.bam --threads 4 --bigwig --auc --annotation exons.bed --prefix SRR1258218\n```\n\nIf you only want to get a coverage summary (either sum or mean) over a set of intervals, you may see a performance boost if you have a BAM index at the same path as the BAM file:\n```\nmegadepth SRR1258218.sorted.bam --annotation exons.bed --prefix SRR1258218 --gzip\n```\n\nAlso, the optional `--gzip` flag in the above example will automatically turn off writing to `STDOUT` any coverage (either base or annotation),\nand will instead write coverage to block gzipped files using the `--prefix` or input filename as the base filename.\nThese block gzipped files will also have a Tabix-like index `.csi` built for them as well.  There's a known bug where chromosomes with 0 coverage are still reported in the block-gzipped files but are not indexed.\n"
      },
      "source": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChristopherWilks/megadepth/master/sample_aggregation/Snakefile.paste"
      },
      "technique": "file_exploration"
    }
  ]
}