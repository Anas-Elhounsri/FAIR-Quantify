{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Please cite the following publication if you find this subtyping tool useful in your work.\n\n\nYanta, C.A., Bessonov, K., Robinson, G., Troell, K., Guy, R.A. (2021) CryptoGenotyper: A new bioinformatics tool for rapid _Cryptosporidium_ identification. _Food and Waterborne Parasitology_, 23:e00115. doi: [10.1016/j.fawpar.2021.e00115](https://doi.org/10.1016/j.fawpar.2021.e00115)\n\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phac-nml/CryptoGenotyper"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-07T18:09:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-02T14:09:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CryptoGenotyper is a tool that allows for subtyping the parasite, Cryptosporidium"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9820689122321067,
      "result": {
        "original_header": "CryptoGenotyper",
        "type": "Text_excerpt",
        "value": "The `CryptoGenotyper` is a fast and reproducible tool that can be used to classify the genotype of *Cryptosporidium* samples by directly analyzing the DNA electropherogram files (.ab1) that correspond to two of its characteristic gene markers: SSU rRNA and *gp60*.  \n*Cryptosporidium* is a protozoan parasite that causes the enteric disease, cryptosporidiosis. It is transmitted to both humans and animals through zoonotic or anthroponotic means, and these dynamics can be studied through the analysis of SSU rRNA or *gp60* gene locus. Although due to the nature of these gene targets, manual analysis can be repetitive and difficult, allowing for the potential of inaccurate or incomplete results to be reported.  \nCryptoGenotyper is able to analyze both well-defined and poorly-resolved peaks to ultimately output the corresponding sequence along with the *Cryptosporidium* genotype in standard nomenclature.\n \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phac-nml/CryptoGenotyper/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phac-nml/CryptoGenotyper/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "phac-nml/CryptoGenotyper"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/logo.jpg"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "The `CryptoGenotyper` can be installed by pulling source code from this repository or via `conda` package management system from the `bioconcda` channel.\n\n* `git clone https://github.com/phac-nml/CryptoGenotyper.git && cd CryptoGenotyper && python3 setup.py install`\n* `conda install -c bioconda cryptogenotyper`\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phac-nml/CryptoGenotyper/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CryptoGenotyper"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "phac-nml"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 168815,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kbessonov1984",
          "type": "User"
        },
        "date_created": "2021-02-16T14:01:53Z",
        "date_published": "2021-02-17T19:27:28Z",
        "description": "This is the first official CryptoGenotyper release. This version was used to generate all results in the key reference paper entitled *CryptoGenotyper: a new bioinformatics tool for rapid Cryptosporidium identification* published in [Food and Waterborn Parasitology](https://www.journals.elsevier.com/food-and-waterborne-parasitology/)\r\n\r\nMajor features that will be expanded in future releases:\r\n\r\n* Detailed final report providing information on species prediction\r\n* Ability to parse folder for multiple inputs and single file input modes\r\n* Ability to use both `18S` and `gp60` markers\r\n* Ability to detect mixed species and provide diagnostic messages for manual sequence curation",
        "html_url": "https://github.com/phac-nml/CryptoGenotyper/releases/tag/1.0",
        "name": "CryptoGenotyper v1.0",
        "release_id": 38188330,
        "tag": "1.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/CryptoGenotyper/tarball/1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/CryptoGenotyper/releases/38188330",
        "value": "https://api.github.com/repos/phac-nml/CryptoGenotyper/releases/38188330",
        "zipball_url": "https://api.github.com/repos/phac-nml/CryptoGenotyper/zipball/1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "* `biopython >= 1.70,<1.78`\n* `numpy >= 1.1`\n* `python > 3.6`\n* `blast == 2.9.0`\n* `clustalw >= 2.1`\n\nIf running Ubuntu these requirements could be installed via one-liner command (might need preceed with `sudo`). Due to version restriction, biopython is installed via `pip3`\n\n```\napt install clustalw ncbi-blast+ python3 python3-numpy python3-pip && pip3 install \"biopython>=>=1.7,<1.78\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:28:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "Only few parameters required to run `cryptogenotyper` including input `*.ab1` file, marker (`18S` or `gp60`), sequence type (`forward`, `reverse`, `contig`), output prefix. \n\n\n```\nusage: cryptogenotyper [-h] [--verbose] -i INPUT -m MARKER -t SEQTYPE\n                       [-f FORWARDPRIMERNAME] [-r REVERSEPRIMERNAME]\n                       [-o OUTPUTPREFIX] [-d DATABASEFILE] [-v]\n                       [--noheaderline]\n\nIn silico type cryptosporidium from sanger reads in AB1 format\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --verbose             Turn on verbose logging [False].\n  -i INPUT, --input INPUT\n                        Path to directory with AB1 forward and reverse files\n                        OR path to a single AB1 file\n  -m MARKER, --marker MARKER\n                        Name of the marker. Currently gp60 and 18S markers are\n                        supported\n  -t SEQTYPE, --seqtype SEQTYPE\n                        Input sequences type. Select one option out of these\n                        three: contig - both F and R sequences provided\n                        forward - forward only sequence provided reverse -\n                        reverse only sequence provided\n  -f FORWARDPRIMERNAME, --forwardprimername FORWARDPRIMERNAME\n                        Name of the forward primer to identify forward read\n                        (e.g. gp60F, SSUF)\n  -r REVERSEPRIMERNAME, --reverseprimername REVERSEPRIMERNAME\n                        Name of the reverse primer to identify forward read\n                        (e.g. gp60R, SSUR)\n  -o OUTPUTPREFIX, --outputprefix OUTPUTPREFIX\n                        Output name prefix for the results (e.g. test results\n                        in test_report.fa)\n  -d DATABASEFILE, --databasefile DATABASEFILE\n                        Custom database reference file\n  -v, --version         show program's version number and exit\n  --noheaderline        Display header on tab-delimited file [False]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "The `example` folder contains a couple of sequences to try out by executing the following commands.\n\n```\ncryptogenotyper -i example/P17705_Crypto16-2F-20170927_SSUF_G12_084.ab1 -m 18S -t forward -f SSUF -o test\ncryptogenotyper -i example/P17705_gp60-Crypt14-1F-20170927_gp60F_G07_051.ab1 -m gp60 -t forward -f gp60F -o test\ncryptogenotyper -i example/ -m 18S -t contig -f SSUF -r SSUR -o test\ncryptogenotyper -i example/ -m gp60 -t contig -f gp60F -r gp60R -o test\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/default/Galaxy-Workflow-Contig_%28F_and_R%29_reads_paired_collection-ver_1.0.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/default/Galaxy-Workflow-Reverse_reads_collection_-_cryptotyper_ver_1.1.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/default/Galaxy-Workflow-Foward_reads_collection_-_cryptotyper_ver_1.1.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/default/Galaxy-Workflow-Contig_%28F_and_R%29_reads_paired_collection_-_cryptotyper_ver_1.1.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/galaxy-cryptodb/CryptoDB-Galaxy-Workflow-gp60_-_Reverse_reads_-_CryptoGenotyper_ver_1.1_.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/galaxy-cryptodb/CryptoDB-Galaxy-Workflow-gp60_-_Forward_reads_-_CryptoGenotyper_ver_1.1_.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/galaxy-cryptodb/CryptoDB-Galaxy-Workflow-SSU_rRNA_-_Reverse_reads_-_CryptoGenotyper_ver_1.1_.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/galaxy-cryptodb/CryptoDB-Galaxy-Workflow-gp60_-_Contig_%28F_and_R%29_-_CryptoGenotyper_ver_1.1_.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/galaxy-cryptodb/CryptoDB-Galaxy-Workflow-SSU_rRNA_-_Forward_reads_-_CryptoGenotyper_ver_1.1_.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/galaxy-cryptodb/CryptoDB-Galaxy-Workflow-SSU_rRNA_-_Contig_%28F_and_R%29_-_CryptoGenotyper_ver_1.1_.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/galaxy-eu/Galaxy-Workflow-Reverse_reads_collection_-_CryptoGenotyper_ver_1.0_-_usegalaxy.eu.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/galaxy-eu/Galaxy-Workflow-Contig_%28F_and_R%29_reads_paired_collection_-_CryptoGenotyper_ver_1.0_-_usegalaxy.eu.ga"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/CryptoGenotyper/main/CryptoGenotyper/GalaxyWorkflows/galaxy-eu/Galaxy-Workflow-Forward_reads_collection_-_CryptoGenotyper_ver_1.0_-_usegalaxy.eu.ga"
      },
      "technique": "file_exploration"
    }
  ]
}