{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CapraLab/DiGePred"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-19T19:30:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-25T10:33:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Random Forest classifier designed to predict pairs of human genes capable to causing a digenic disease when carrying rare variants simultaneously. DiGePred has been trained using digenic pairs from DIDA and non-digenic pairs from unaffected relatives of individuals with rare undiagnosed disease. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9549603073931894,
      "result": {
        "original_header": "DiGePred",
        "type": "Text_excerpt",
        "value": "Random Forest classifier designed to predict pairs of human genes capable to causing a digenic disease when carrying rare variants simultaneously.  \n  unaffected: non-digenic pairs derived from unaffected relatives of individuals with rare undiagnosed diseases, as part of the Undiagnosed Diseases Network.\n  permuted: non-digenic pairs derived from permutations of genes from digenic pairs in DIDA.\n  random: non-digenic pairs generated randomly.\n  matched: non-digenic pairs chosen to match the distribution of features of digenic pairs.\n  unaffected no gene overlap: unaffected non-digenic pairs chosen such that no genes were common between the training and held-out test sets.  \n  random no gene overlap: random non-digenic pairs chosen such that no genes were common between the training and held-out test sets.\n \nThe positive (digenic) and negative (non-digenic) gene pairs used to train and test DiGePred are provide in the folders \"positives\" and \"negatives\". \n  DiGePred_train_all_sets.py: script to train the classifier and test performance during training.\n  DiGePred_held_out_test_performance.py: script to get predictions on held-out test and measure performance using ROC and PR curves.\n  Get_DiGePred_scores_user_input_genes_or_pairs.py: script where user may provide an input file (.txt) containing either list of genes (-g) or list of gene pairs (-p), along with model of choice (-m) and job name (-n). It generates DiGePred results CSV with feature values and DiGePred predictions, based on model of choice. \n"
      },
      "source": "https://raw.githubusercontent.com/CapraLab/DiGePred/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CapraLab/DiGePred/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CapraLab/DiGePred/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CapraLab/DiGePred"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DiGePred"
      },
      "source": "https://raw.githubusercontent.com/CapraLab/DiGePred/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9921837897564654,
      "result": {
        "original_header": "DiGePred",
        "type": "Text_excerpt",
        "value": "DiGePred has been run on all human gene pairs, based on all genes from HGNC. The scores are available here:\n  https://vanderbilt.box.com/s/n1nzdyj8i5fa55vultyq4xn6rsp792a7\n  https://vanderbilt.box.com/s/459ethsqv339nqiarhm0j227jdjb0whq\n  https://vanderbilt.box.com/s/acdqvjuihj3932c6msi5py82rvr5kam3\n  https://vanderbilt.box.com/s/kb3vzubfxjcjtxt8x0y1vytu59x8r8no\n  \n  To fetch a pre-computed DiGePred score, grep 'geneA,geneB' on the files mentioned above. (genes should be in alphabetical order)\n  \nA website is also available for the user to access DiGePred scores for all human gene pairs (http://www.meilerlab.org/index.php/servers/show?s_id=28).  \nRequirements\n  networkx v1.9\n  sklearn\n \n"
      },
      "source": "https://raw.githubusercontent.com/CapraLab/DiGePred/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8396929649902076,
      "result": {
        "original_header": "DiGePred",
        "type": "Text_excerpt",
        "value": "  DiGePred_train_all_sets.py: script to train the classifier and test performance during training.\n  DiGePred_held_out_test_performance.py: script to get predictions on held-out test and measure performance using ROC and PR curves.\n  Get_DiGePred_scores_user_input_genes_or_pairs.py: script where user may provide an input file (.txt) containing either list of genes (-g) or list of gene pairs (-p), along with model of choice (-m) and job name (-n). It generates DiGePred results CSV with feature values and DiGePred predictions, based on model of choice. \n"
      },
      "source": "https://raw.githubusercontent.com/CapraLab/DiGePred/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CapraLab/DiGePred/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DiGePred"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CapraLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 32794,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CapraLab/DiGePred/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:38:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ]
}