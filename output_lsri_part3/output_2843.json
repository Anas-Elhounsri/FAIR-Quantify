{
  "application_domain": [
    {
      "confidence": 0.8488509402605379,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: If you use fsbrain in your research, please cite it using these metadata.\ntitle: fsbrain\nabstract: fsbrain is an R package for the visualization of neuroimaging data. The package can be used to visualize vertex-wise and region-wise morphometry data, parcellations, labels and statistical results on brain surfaces in three dimensions (3D). Voxel data can be displayed in lightbox mode. The fsbrain package offers various customization options and produces publication quality plots which can be displayed interactively, saved as bitmap images, or integrated into R notebooks.\nauthors:\n  - family-names: Schaefer\n    given-names: Tim\n    orcid: \"https://orcid.org/0000-0002-3683-8070\"\n  - name: \"fsbrain: an R package for the visualization of structural neuroimaging data\"\nversion: 0.5.3\ndate-released: \"2022-02-13\"\nidentifiers:\n  - description: All-versions DOI for fsbrain.\n    type: doi\n    value: \"10.5281/zenodo.3559816\"\n  - description: Archived snapshot of version 0.5.3 of fsbrain.\n    type: doi\n    value: \"10.5281/zenodo.6061167\"\nlicense: MIT\nrepository-code: \"https://github.com/dfsp-spirit/fsbrain\""
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation and Publications",
        "parent_header": [
          "fsbrain"
        ],
        "type": "Text_excerpt",
        "value": "You can generate the citation for [our fsbrain paper](https://doi.org/10.1101/2020.09.18.302935) by typing the following command in R:\n\n```\ncitation(\"fsbrain\")\n```\n\nThis currently outputs:\n\n```\nTo cite fsbrain in publications use:\n\n  Tim Schaefer, Christine Ecker (2020). fsbrain: an R package for the visualization of structural neuroimaging data. bioRxiv doi: 10.1101/2020.09.18.302935\n\nA BibTeX entry for LaTeX users is\n\n  @Misc{,\n    title = {fsbrain: an {R} package for the visualization of structural neuroimaging data},\n    author = {Tim Schaefer and Christine Ecker},\n    year = {2020},\n    url = {https://www.biorxiv.org/content/10.1101/2020.09.18.302935v1},\n    doi = {10.1101/2020.09.18.302935},\n  }\n```\n\nOther materials related to fsbrain:\n\n* A poster on *fsbrain* has been presented at INSAR 2020 Annual Meeting: [Abstract](https://insar.confex.com/insar/2020/meetingapp.cgi/Paper/33181), [ePoster viewer](https://insar.confex.com/insar/2020/techdemo/eposter.cgi?eposterid=227), [PDF download](https://github.com/dfsp-spirit/fsbrain_gallery/raw/master/extra_materials/Poster_IMFAR2020_fsbrain.pdf)\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dfsp-spirit/fsbrain"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "## Contributing to fsbrain\n\nI am very happy to accept [pull requests](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request), provided you are fine with publishing your work under the [license of this project](https://github.com/dfsp-spirit/fsbrain/#license). If your PR is not just a fix but changes or adds lots of code, please get in touch by [opening an issue](https://github.com/dfsp-spirit/fsbrain/issues) before starting the project so we can discuss it first. Development currently happens on the *develop* branch.\n\n### Contribution workflow\n\nIf you want to contribute something, the general workflow is:\n\n- Log into the Github website, visit the fsbrain repo page, and click *fork* to fork the fsbrain repository to your account.\n- Checkout your forked repository to your computer. You will be on the master branch. Make sure to switch to the *develop* branch.\n- Create a new branch off *develop* and name it after your feature, e.g., `add_cool_new_feature` or `fix_issue_17`.\n- Make changes to the fsbrain code and commit them into your branch. Repeat as needed.\n- Make sure the unit tests are all green and that the code passes the R checks. Adding new tests for your code is a great idea, of course.\n- When you are happy with your changes, create a pull request, requesting to merge your branch into the *develop* branch of my fsbrain repo.\n\n### Setting up the development environment\n\nMost likely you already have your development environment setup the way you prefer it when you decide to contribute. If not, here is a quick way to get started.\n\nNote that you do not have to use rstudio of follow these suggestions, any editor or IDE will do.\n\n- Make sure you have a recent R version installed.\n- Download and install the latest version of rstudio (I use the free RStudio Desktop Open Source Edition).\n- In your shell, change into your checkout of your fork of fsbrain (see above) and run `rstudio fsbrain.Rproj`.\n- Install the required development packages listed on the fsbrain website.\n- In rstudio, make sure all required development packages are installed and you are ready to go:\n  * Build the package including the documentation (`Menu > Build > Build Source Package`) and install/load it (`Menu > Build > Clean and Rebuild`).\n  * Run the unit tests (`Menu > Build > Check Package`).\n  * Generate the test coverage report (`Item bar > Addins > Report test coverage for a package`). Wait until the report shows up in the Viewer.\n- If this completed without errors, you are ready to make your changes in a new branch, as explained above.\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "fsbrain"
        ],
        "type": "Text_excerpt",
        "value": "Please refer to [CONTRIBUTING.md](./CONTRIBUTING.md).\n\nIf you have any question, suggestion or comment on fsbrain, please [open an issue](https://github.com/dfsp-spirit/fsbrain/issues). If you want to contact me via email, please use the maintainer email address listed on the [CRAN webpage for fsbrain](https://cran.r-project.org/package=fsbrain).\n\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-17T15:05:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-08T00:48:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "R library for structural neuroimaging. Provides high-level functions to access (read and write) and visualize surface-based brain morphometry data for individuals and groups."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9883183322247271,
      "result": {
        "original_header": "fsbrain",
        "type": "Text_excerpt",
        "value": "An R package for structural neuroimaging. Provides high-level functions to access (read and write) and visualize surface-based brain morphometry data (e.g. cortical thickness) for individual subjects and groups. \n**Fig.1**: *Visualization of sulcal depth for a subject in FreeSurfer standard space (fsaverage). See the [source code to reproduce this image](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples_export.html) in an R notebook.* \n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9459697138462362,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "The *fsbrain* R package provides a well-tested and consistent interface to neuroimaging data in [R](https://www.r-project.org/). It supports reading, writing, and visualizing various kinds of raw data and statistical results on brain surfaces and volumes. While the package provides a very convenient interface for working with data arranged in the standard [FreeSurfer](http://freesurfer.net/) directory structure (SUBJECTS_DIR), *fsbrain* is not limited to this layout or FreeSurfer file formats. You can load brain meshes, volumes, and data from a range of other neuroimaging software packages and visualize them. \nThe plots produced by *fsbrain* can be integrated into R notebooks or written to high-quality bitmap image files, ready for publication. The [rgl](https://CRAN.R-project.org/package=rgl) renderer used by *fsbrain* provides fast, hardware-accelerated rendering based on the OpenGL standard. \n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9574292209040428,
      "result": {
        "original_header": "Unit tests and Continuous integration",
        "type": "Text_excerpt",
        "value": "\nThis package comes with [lots of unit tests](./tests/testthat/). To run them, in a clean R session:\n```r\nlibrary(devtools)\nlibrary(fsbrain)\ndevtools::check()\n```\n \n\n[GitHub Actions, Ubuntu Linux and MacOS](https://github.com/dfsp-spirit/fsbrain/actions) (Note: Currently this is always \"failing\" because of a warning caused by the `rgl` package when running headless. So the simlpe \"passing\"/\"failing\" status is useless, and one needs to follow the link to check the relevant CI results in detail.) \n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9847759062053383,
      "result": {
        "original_header": "Related R packages",
        "type": "Text_excerpt",
        "value": "* [ggseg](https://github.com/LCBC-UiO/ggseg) by Athanasia Mowinckel and Didac Vidal-Pi\u00f1eiro: Plotting of atlas-based neuroimaging data in R.\n* [cerebroviz](https://github.com/ethanbahl/cerebroViz) by Ethan Bahl: Data mapping tool for visualizing spatiotemporal data in the brain. \n* [rgl](https://CRAN.R-project.org/package=rgl) by Daniel Adler, Duncan Murdoch et al.: OpenGL-based mesh renderer.\n* [oro.nifti](https://github.com/muschellij2/oro.nifti) by Brandon Witcher et al. : Loading and manipulation of brain volumes from NIFTI v1 files.\n* [freesurferformats](https://github.com/dfsp-spirit/freesurferformats) by Tim Sch\u00e4fer (me): Loading and writing various neuroimaging file formats and general mesh file formats, with a focus on FreeSurfer formats.\n* [gifti](https://github.com/muschellij2/gifti/) and [cifti](https://github.com/muschellij2/cifti/) by John Muschelli: Read GIFTI and CIFTI format files.\n* [Rvcg](https://github.com/zarquon42b/Rvcg) by Stefan Schlager: Rcpp interface for the [VCG Library](http://vcg.isti.cnr.it/vcglib/). \n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "fsbrain"
        ],
        "type": "Text_excerpt",
        "value": "The documentation can be accessed from within an R session after you have loaded the *fsbrain* package:\n\n* There are two online R Markdown notebooks (like Jupyter Notebook in Python) that show various example plots in combination with the code used to produce them:\n  * [basic fsbrain example notebook](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples.html): Live visualization of subject data\n  * [advanced fsbrain example notebook](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples_adv.html): Plotting group data\n  * [export API fsbrain example notebook](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples_export.html): Exporting publication-ready plots\n  \n  \n* Detailed vignettes with explanations and examples for the functions of the package is included, run `browseVignettes(\"fsbrain\")` to see the vignettes. You can also open the vignette directly:\n  * How to load and visualize surface-based neuroimaging data: `vignette(\"fsbrain\")` or: [read online at CRAN](https://cran.r-project.org/web/packages/fsbrain/vignettes/fsbrain.html)\n  * How to load and visualize volume-based neuroimaging data: `vignette(\"fsbrain_vol\")` or: [read online at CRAN](https://cran.r-project.org/web/packages/fsbrain/vignettes/fsbrain_vol.html)\n  * The fsbrain FAQ: `vignette(\"fsbrain_faq\")` or: [read online at CRAN](https://cran.r-project.org/web/packages/fsbrain/vignettes/fsbrain_faq.html)\n  \n  \n* Help for a specific function can be accessed in the usual R manner: `?<function>`, where you replace `<function>` with a function name. Like this: `?group.morph.native`.\n* Run `example(<function>)` to see a live demo that uses the function `<function>`. Like this: `example(group.morph.native)`.\n* The [unit tests](./tests/testthat/) that come with this package are essentially a list of examples that illustrate how to use the functions.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dfsp-spirit/fsbrain/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dfsp-spirit/fsbrain"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fsbrain"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/docker/fsbrain0.5.2/R4.1.0/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/docker/fsbrain0.5.2/R4.1.0/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/docker/fsbrain0.4.3/R4.1.0/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/docker/fsbrain0.4.3/R4.1.0/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/docker/fsbrain0.5.0dev-plotdemo/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/docker/fsbrain0.5.0dev-plotdemo/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/docker/fsbrain0.5.3dev/R4.1.0/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/docker/fsbrain0.5.3dev/R4.1.0/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/docker/fsbrain0.5.3/R4.1.0/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/docker/fsbrain0.5.3/R4.1.0/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/doi/10.5281/zenodo.3559816"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ci.appveyor.com/api/projects/status/github/dfsp-spirit/fsbrain?branch=master&amp;svg=true"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/./web/fsbrain_vis_overview.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/./web/fsbrain_curvature_surfaces.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/./web/fsbrain_vis_bg.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Recommended: install the stable fsbrain version from CRAN",
        "parent_header": [
          "fsbrain",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can find the [fsbrain package on CRAN](https://cran.r-project.org/package=fsbrain), so all you need to do is:\n\n```r\ninstall.packages(\"fsbrain\");\n```\n\nIn case something goes wrong, don't worry. Just install the missing [system dependencies](#system-dependencies) and retry.\n\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Risky: install the dev version of fsbrain with the latest features",
        "parent_header": [
          "fsbrain",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This version is not guaranteed to be in a usable state, try at your own risk and run the tests before using it.\n\nFrom an R session:\n\n```r\ninstall.packages(c(\"devtools\", \"knitr\", \"markdown\", \"rmarkdown\", \"testthat\", \"qpdf\"));\ndevtools::install_github(\"dfsp-spirit/fsbrain\", build_vignettes=TRUE);\n```\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows Installation Hints",
        "parent_header": [
          "fsbrain",
          "Installation",
          "System dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Under Windows 10, it seems that you will need to install these two packages manually via the `install.packages` command: `shiny` and `manipulateWidget`.\n\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation via Docker",
        "parent_header": [
          "fsbrain",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "There are Docker images for fsbrain available on Dockerhub, see the [fsbrain Dockerhub repo](https://hub.docker.com/r/dfspspirit/fsbrain).\n\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999826737281,
      "result": {
        "original_header": "News",
        "type": "Text_excerpt",
        "value": "* 2023-06-26: New fsbrain version 0.5.4 released on CRAN, see the [CHANGES](./CHANGES).\n* 2022-12-22: We are looking for help! If you have a Mac and are interested in helping fsbrain development, please [contact us by email](http://rcmd.org/ts/#contact) or reply to [#46](https://github.com/dfsp-spirit/fsbrain/issues/46) here on GitHub!\n* 2022-02-13: New fsbrain version 0.5.3 released on CRAN, see the [CHANGES](./CHANGES).\n* 2021-11-11: New fsbrain version 0.5.1 released on CRAN, see the [CHANGES](./CHANGES).\n* 2021-09-16: New fsbrain version 0.5.0 released on CRAN, see the [CHANGES](./CHANGES).\n* 2021-05-12: New fsbrain version 0.4.3 released on CRAN, see the [CHANGES](./CHANGES).\n* 2021-03-28: New fsbrain version 0.4.2 released on CRAN, see the [CHANGES](./CHANGES).\n* 2020-09-20: The preprint of our paper [T. Schaefer, C. Ecker: fsbrain: an R package for the visualization of structural neuroimaging data](https://doi.org/10.1101/2020.09.18.302935)' is now available on biorxiv.\n \n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9510440122424844,
      "result": {
        "original_header": "Unit tests and Continuous integration",
        "type": "Text_excerpt",
        "value": "\nThis package comes with [lots of unit tests](./tests/testthat/). To run them, in a clean R session:\n```r\nlibrary(devtools)\nlibrary(fsbrain)\ndevtools::check()\n```\n \n\n[![AppVeyor build status](https://ci.appveyor.com/api/projects/status/github/dfsp-spirit/fsbrain?branch=master&svg=true)](https://ci.appveyor.com/project/dfsp-spirit/fsbrain) AppVeyor CI under Windows \n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "3d, brain, dti, freesurfer, mesh, mri, neuroimaging, r, research, surface, visualization, voxel"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "YEAR: 2019, 2020, 2021, 2022\nCOPYRIGHT HOLDER: Tim Sch\u00e4fer\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "fsbrain"
        ],
        "type": "Text_excerpt",
        "value": "The *fsbrain* package is [free software](https://en.wikipedia.org/wiki/Free_software), published under the [MIT license](https://opensource.org/licenses/MIT).\n\nNote: The file LICENSE in this repository is a CRAN license template only (as required by CRAN) and does not contain the full MIT  license text. See the file [LICENSE_FULL](./LICENSE_FULL) for the full license text.\n\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain_gallery/master/surface/fsbrain_sulcal_depth_cbar_web.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fsbrain"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dfsp-spirit"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 952698,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 13025,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 331,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2024-02-03T09:54:15Z",
        "date_published": "2024-02-03T12:12:31Z",
        "description": "Version 0.5.5\r\n-------------\r\n- Change some minor docstring issues in internal functions (requested by CRAN team)",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.5.5",
        "name": "v0.5.5 - Minor update for new CRAN checks",
        "release_id": 139765736,
        "tag": "v0.5.5",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.5.5",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/139765736",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/139765736",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.5.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2023-06-26T16:38:31Z",
        "date_published": "2023-06-26T18:41:59Z",
        "description": "v0.5.4 -- Add support for latest rgl version and r-base 4.3\r\n\r\n- FIX: Change usage of rgl functions that were recently deprectated to current API. This ensures that fsbrain is compatible with the latest rgl version. Thanks to @dmurdoch for the patch. Fixes #52.\r\n- Add 'delete_colorbar_img' parameter to 'combine.colorbar.with.brainview.image()' function. This is TRUE by default, meaning that the merged cbar image file (fsbrain_cbar.png by default) will be deleted after the merge operation by default. This changes the old behaviour, in which the file was left behind in the current working directory.\r\n- Rename some internal functions and fix various small complaints from the latest version of R CMD CHECK, from r-base 4.3. (Required for CRAN upload.)\r\n- NEW: Support plotting colorbar with log scale, implements feature request #44\r\n- FIX: Fix broken hemis on 9 view with inflated surfaces, see issue #50",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.5.4",
        "name": "v0.5.4 -- Add support for latest rgl version and r-base 4.3",
        "release_id": 109955064,
        "tag": "v0.5.4",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.5.4",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/109955064",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/109955064",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.5.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2022-02-12T15:58:12Z",
        "date_published": "2022-02-13T13:41:09Z",
        "description": "Version 0.5.3\r\n------------------------\r\n- Add vis.seg.legend() function to visualize legend for a segmented volume based on color lookup table.\r\n- Replace all 'donttest' instructions in examples with 'dontrun', because CRAN runs the 'donttest' stuff and fails on it.",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.5.3",
        "name": "Legend support for volume visualizations",
        "release_id": 59434217,
        "tag": "v0.5.3",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.5.3",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/59434217",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/59434217",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.5.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2021-11-09T11:12:06Z",
        "date_published": "2021-11-10T08:53:33Z",
        "description": "Version 0.5.1\r\n-------------\r\n- Add clip_fun as an alternative to clip.data for rglactions. This makes the API more consistent, see limit_fun.\r\n- More links between function documentation, especially to rglactions. Makes it easier to find navigate the docs.\r\n- Tests: explicitely use testthat namespace in more tests for easier copy and pasting of test code.\r\n- Add some functions for working with FreeSurfer longitudinal preprocessing pipelines and QDEC tables.\r\n- Expose geodesic functions as part of public API.\r\n- Data loading: support aggregating atlas over hemis separately.\r\n- Support drawing region borders with function vis.region.values on.subject\r\n- Docs: more links between docs for easier navigation in help browser, fix various typos.\r\n- Deps: use freesurferformats 0.1.16",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.5.1",
        "name": "Borders when drawing region based data, more geodesic functions",
        "release_id": 53068304,
        "tag": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/53068304",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/53068304",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2021-09-16T09:20:18Z",
        "date_published": "2021-09-16T10:07:55Z",
        "description": "Version 0.5.0\r\n-------------\r\n- Breaking change: remove long deprecated parameter 'colormap' from all vis functions. Use the 'makecmap_options' parameter instead.\r\n- The function vis.color.on.subject now supports the 'style' parameter supported by other vis functions.\r\n- Add new highlight.* functions which are useful mainly for debugging.\r\n- Fix accidental printing of rglactions to console when calling vis functions.\r\n- Add new 'export' function, an alias for 'vis.export.from.coloredmeshes' so you have to type less. Updated vignettes and example notebooks accordingly.\r\n- Add new entry on vector graphics conversion to the 'fsbrain FAQ' vignette.\r\n- Add surface.curvatures function that can compute k1 and k2 (requires optional dependency package 'Rvcg').\r\n- Add functions to write group standard space per-vertex data: write.group.morph.standard and write.group.morph.standard.mf\r\n- Add new and more convenient volume visualization function: volvis.lb is a convenient wrapper around volvis.lightbox.\r\n- Add new function demographics.to.qdec.table.dat that can convert a demographics dataframe from an Excel or CSV file to qdec.table.dat format and write the additional factor level files.\r\n- Add new sjd.demo() function, a shortcut to download optional demonstration data and get the path to the downloaded subjects dir.\r\n- Add vis.subject.pre function, a new high-level function for visualizing preloaded data (see #31)\r\n",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.5.0",
        "name": "v0.5.0: Fast mesh ops with Rvcg and many fixes",
        "release_id": 49663827,
        "tag": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/49663827",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/49663827",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2021-05-12T12:35:03Z",
        "date_published": "2021-05-12T16:56:47Z",
        "description": "Version 0.4.3\r\n-------------\r\n- Add support for exporting figures with transparent background in `vis.export.from.coloredmeshes` function, see parameter 'transparency_color' and docs. A usage example is in the fsbrain FAQ vignette.\r\n- Change default value for the NA-color in 'mkco.*' functions from white (#FFFFFF) to very light gray (#FEFEFE).\r\n- Support custom background color in various visualization functions, including `vis.export.from.coloredmeshes`. See the docs for the new parameter 'background_color'.\r\n- One can now suppress rendering of a colorbar with the `vis.export.from.coloredmeshes` function by passing 'NULL' for the colorbar orientation parameter 'horizontal'.\r\n- Add new R live notebook that illustrates how to use the Export API to produce publication-ready plots. It is linked on the GitHub page, see the Documentation section.\r\n- Disable all unit tests that require extra data on CRAN, downloading them is not possible anymore. We still test on Travis CI and Appveyor CI so that should not make much of a difference.\r\n- Add new 'highlight.vertices.on.subject' function, it does what the name says. Very handy for debugging stuff like coordinate transformations and illustrating things in presentations and bug reports.",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.4.3",
        "name": "Convenience features and transparent background",
        "release_id": 42856995,
        "tag": "v0.4.3",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.4.3",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/42856995",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/42856995",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.4.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2021-03-28T18:30:13Z",
        "date_published": "2021-03-28T18:50:10Z",
        "description": "Version 0.4.2\r\n-------------\r\n- Fix bug in makecmap_options 'range' handling, see #19 and #20\r\n- Improve documentation for makecmap_options 'range' handling: new entry in fsbrain FAQ vignette\r\n- Expose 'grid_like' parameter in vis.export.from.coloredmeshes to allow plotting a horizontal strip of images\r\n",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.4.2",
        "name": "Some fixes related to plotting with fixed data range",
        "release_id": 40602700,
        "tag": "v0.4.2",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/40602700",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/40602700",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2021-01-19T22:13:34Z",
        "date_published": "2021-01-21T06:28:07Z",
        "description": "This release was needed for technical reasons related to CRAN. Most important changes:\r\n\r\n- Support for visualizing TRK and TCK files (Fiber track files from Diffusion Tensor Imaging) created in Diffusion Toolkit and MRtrix3\r\n- Delete all unit test data after tests have been run if on CRAN\r\n\r\nThe DTI visualization support is still a bit experimental, and the visualization style may change in the future.\r\n\r\n\r\n",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.4.1",
        "name": "Experimental DTI track visualization support",
        "release_id": 36695067,
        "tag": "v0.4.1",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/36695067",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/36695067",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2020-09-10T18:17:06Z",
        "date_published": "2020-09-10T19:48:03Z",
        "description": "- Support passing a single data vector for both hemis combined to vis.data.on.subject and vis.symmetric.data.on.subject\r\n- Add subject.num.verts function to easily retrieve the vertex counts of the meshes for a subject\r\n- Support new background color layers 'curv_light' and 'sulc_light'\r\n- The function vis.symmetric.data.on.subject defaults to a new colormap.\r\n- The metadata IO function to read subjects files and demographics files no longer have a default for the 'header' parameter. This is to prevent people from accidently skipping the first subject.\r\n- Add functions for reading and writing morph data to and from a single MGH or MGZ file: group.morph.standard.sf and write.group.morph.standard.sf\r\n- Add function for writing FSGD files from demographics table (demographics.to.fsgd.file), and to read subjects list from FSGD files (read.md.subjects.from.fsgd)\r\n- new method to set default resolution, and more consistent usage of defaults: fsbrain.set.default.figsize()\r\n- Add group.surface function to load surfaces for a group of subjects\r\n- Add functions for visualization of groups of subjects at once: vis.group.morph.native, vis.group.morph.standard, vis.group.annot, ...\r\n- Extend advanced live notebook with group level plotting examples\r\n- Better support for limiting the plotted data range\r\n- Add new rendering style 'edges', expose style argument for more vis functions\r\n- Fix bug in coloredmesh.from.morph.standard: custom template subject was ignored\r\n- Add option to download a few files from fsaverage3 under FreeSurfer license. User needs to accept license.",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.4.0",
        "name": "The paper release",
        "release_id": 31082326,
        "tag": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/31082326",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/31082326",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2020-06-19T14:03:30Z",
        "date_published": "2020-06-22T15:46:47Z",
        "description": "Version 0.3.0\r\n-------------\r\n- Fix reading standard space data from template subjects other than fsaverage\r\n- Add new cbry colormap and related mkco.cluster function, great for visualizing clusters\r\n- Support pushing hemispheres apart to prevent overlapping inflated surfaces, fixes #7\r\n- Remove rotate2D, flip2D, and readable.files functions, they have been moved to the freesurferformats package\r\n- requires freesurferformats version >= 0.1.11 (up from 0.1.10)\r\n- default to using rglot() as rgloptions parameter (instead of empty list) for vis functions, i.e., increase default plot resolution",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.3.0",
        "name": "Cleanups and fixes",
        "release_id": 27792940,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/27792940",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/27792940",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2020-05-27T08:35:56Z",
        "date_published": "2020-05-27T19:16:06Z",
        "description": "\r\nVersion 0.2.1\r\n-------------\r\n- Fix a bug in colorbar drawing that lead to wrong colors (see #6)\r\n- Change defaults in functions for drawing a separate colorbar and combining it with arranged images\r\n- Support combining both horizontal and vertical cbars with a brainview image\r\n- Suggest viridis and RColorBrewer packages for great colors, use them if available\r\n",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.2.1",
        "name": "Color fixes and improvements",
        "release_id": 26960787,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/26960787",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/26960787",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2020-05-15T14:42:25Z",
        "date_published": "2020-05-15T18:34:58Z",
        "description": "Version 0.2.0\r\n-------------\r\n- Breaking: move rotate3D and flid3D function to freesurferformats. To update your code, replace fsbrain::rotate3D with freesurferformats::rotate3D.\r\n- Support export of coloredmeshes to PLY format\r\n- Add new vignette, a Frequently Askes Questions (FAQ) format\r\n- Add R notebook with code and live examples (web)\r\n- Improve documentation in docstrings\r\n- Improve colormap computation and handling, especially drawing of colorbars\r\n- Remove plyr dependendency, require freesurferformats 0.1.10\r\n- The 'colormap' argument to all vis functions is deprecated, use makecmap_options instead. See the vis function docs for an example.\r\n",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.2.0",
        "name": "Beautiful colorbars and way more documentation!",
        "release_id": 26571202,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/26571202",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/26571202",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2020-04-15T19:17:26Z",
        "date_published": "2020-04-16T07:06:55Z",
        "description": "This release is by far the largest update to *fsbrain* so far. New features include:\r\n\r\n* volume visualization (voxel-based, surface-generation from voxels, lightbox view, ...)\r\n* major restructuring of the rendering code to make changes easier, based on color layers for meshes\r\n* support for using backgrounds (e.g., mean curvature) when plotting surface data (yes, it's a color layer), see #6\r\n* improved colorbar plotting: colorbars now go into a separate grid cell of the images\r\n* support cortex_only parameter with more functions, fix #2\r\n* major improvements to test infrastructure\r\n* add new vignette for volume visualization, extend the surface vignette\r\n\r\n\r\nand more.",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.1.0",
        "name": "Volume visualisation, backgrounds, and much more",
        "release_id": 25558552,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/25558552",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/25558552",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2019-12-01T13:56:42Z",
        "date_published": "2019-12-02T12:58:55Z",
        "description": "Version 0.0.3\r\n-------------\r\n- Add function to visualize arbitrary vertices and label data (vis.labeldata.on.subject) and a function to compute the neighbors of a vertex (mesh.vertex.neighbors)\r\n- The vis.data.on.subject function now accepts a character string for the lh_morphdata and rh_morphdata arguments. If a string, it is treated as a filepath and the data is loaded from that file.\r\n- Add the logical parameter 'cortex_only' to various native space morphometry functions (including subject.morph.native, group.morph.native, group.morph.agg.native na group.multimorph.agg.native). When set to TRUE, this parameter will limit the data to vertices which are part of the cortex (as defined by the label file label//h.cortex.label for the respective subject). This allows one to ignore the data from the medial wall in all of these functions.\r\n- Also add 'cortex_only' parameter for the equivalent standard space functions and the morphometry visualization functions.\r\n- Add more examples to various functions, extend the vignette with latest changes and new functionality.\r\n- Remove unused dependencies\r\n- Add function vislayout.from.coloredmeshes which allows one to create a tight layout visualization from arbitrary angle sets",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.0.3",
        "name": "Restrict data to cortex & lots of new visualizations",
        "release_id": 21895534,
        "tag": "v0.0.3",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/21895534",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/21895534",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2019-11-08T13:41:26Z",
        "date_published": "2019-11-08T16:28:56Z",
        "description": "Changes for Version 0.0.2:\r\n\r\n- Support rglactions and rgloptions to conveniently increase output resolution and create screenshots\r\n- Scale colormaps over several meshes where appropriate. This ensures that the same color in the left and right hemisphere represents the exact same data value.\r\n- Improve doc strings of many functions\r\n- Add helper function to clip data at percentile (clip.data)\r\n- Require freesurferformats version >= 0.1.4 for surface loading fix, adapt mesh visualization to fix\r\n- Introduce masks\r\n- Add functions to visualize labels (vis.subject.label) and masks (vis.mask.on.subject)\r\n- Tons of work on the vignette\r\n",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.0.2",
        "name": "Labels, masks, fixes meshes and way better vignette",
        "release_id": 21324921,
        "tag": "v0.0.2",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/21324921",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/21324921",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dfsp-spirit",
          "type": "User"
        },
        "date_created": "2019-10-25T13:31:47Z",
        "date_published": "2019-10-31T09:14:11Z",
        "description": "Code for version 0.0.1 available on CRAN.",
        "html_url": "https://github.com/dfsp-spirit/fsbrain/releases/tag/v0.0.1",
        "name": "Initial CRAN release",
        "release_id": 21112180,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/21112180",
        "value": "https://api.github.com/repos/dfsp-spirit/fsbrain/releases/21112180",
        "zipball_url": "https://api.github.com/repos/dfsp-spirit/fsbrain/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System dependencies",
        "parent_header": [
          "fsbrain",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "A *system dependency* is a **non-R** software that is needed for the installation of a package. System dependencies cannot be installed automatically using the R package system, so you need to install them manually or using the package manager of your operating system.\n\nThe *fsbrain* package itself does not have any system dependencies, however, it uses *rgl* for rendering. You can check the *SystemRequirements* section on the [rgl page at CRAN](https://CRAN.R-project.org/package=rgl) for the full list of rgl dependencies or read on. To get GIFTI format support, you will also need `libxml2-dev`.\n\nTo install the system dependencies for *rgl* and *xml2*:\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Linux System dependencies (or: building from source)",
        "parent_header": [
          "fsbrain",
          "Installation",
          "System dependencies"
        ],
        "type": "Text_excerpt",
        "value": "R packages are compiled from source by default under Linux, so you need some development libraries. Before installing *fsbrain*, run the following command in your system shell (not in R):\n\n* for deb-based Linux distributions (Debian, Ubuntu, ...):\n```shell\nsudo apt-get install libmagick++-dev libx11-dev libgl1-mesa-dev libglu1-mesa-dev mesa-common-dev libfreetype6-dev libxml2-dev libssh-dev libcurl4-openssl-dev libgfortran4\n```\n* for rpm-based Linux distributions (Fedora, CentOS, RHEL, ...):\n```shell\nsudo yum install ImageMagick-c++-devel libX11-devel mesa-libGLU-devel freetype-devel libxml2-devel\n```\n\nIf you want to compile the package under any other operating system, you will need the libraries as well, of course.\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MacOS System dependencies",
        "parent_header": [
          "fsbrain",
          "Installation",
          "System dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Recent MacOS versions do not ship with an X11 environment. You will have to install the [xquartz X11 system](https://www.xquartz.org/) if you do not have it already. If you want to create GIF movies, make sure you have imagemagick installed (easiest via [homebrew](https://brew.sh/): `brew install imagemagick@6`).\n\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:31:54",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 64
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Visualization examples",
        "parent_header": [
          "fsbrain"
        ],
        "type": "Text_excerpt",
        "value": "The *fsbrain* package support visualizations of different data, and all data can be displayed in one or more views. The figure below shows some examples for surface-based data:\n\n![Visoverview](./web/fsbrain_vis_overview.jpg?raw=true \"Some visualization options from fsbrain\")\n**Fig.2**: *Example output for the fsbrain interactive visualization functions*.\n\n* **Subfigure A** shows the visualization of raw morphometry data (cortical thickness) from native space on the white surface of a subject. The view shows the data in tiles from 8 different angles.\n* **Subfigure B** illustrates arbitrary data (p-values in this case) visualized on the regions of the Desikan atlas, using the surface of the fsaverage (standard space template) subject from FreeSurfer. The view shows the data in tiles from 4 different angles.\n* **Subfigure C** displays the regions of the Desikan atlas on the white surface of a subject. The colors were loaded from the respective annotation file. The view shows the data in tiles from 4 different angles.\n\n*What* is displayed (morphometry data, atlas regions, arbitrary other data), on *which surface* it is displayed, and *how* it is displayed (a single interactive view, 4 tiles, 9 tiles) is independent and can be selected as needed in fsbrain.\n\nHere is a second figure, showing the same data (the [mean curvature](https://en.wikipedia.org/wiki/Mean_curvature) at each vertex) displayed on 3 different surfaces of a subject: **A** white surface, **B** pial surface, **C** inflated surface.\n![Vissurfaces](./web/fsbrain_curvature_surfaces.jpg?raw=true \"Curvature visualization on different surfaces, rendered with fsbrain\")\n\n\nThe next figure illustrates some options to visualize your results with different backgrounds. **A** Clusters on the white fsaverage surface with sulc background. **B** Region-wise p-values with curv background, inflated fsaverage surface. **C** A background color layer displaying outlines of aparc atlas regions in the respective colors, inflated demo subject surface.\n\n![Visres](./web/fsbrain_vis_bg.jpg?raw=true \"Visualization of results and background layers, rendered with fsbrain\")\n\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Animations and videos",
        "parent_header": [
          "fsbrain",
          "Visualization examples"
        ],
        "type": "Text_excerpt",
        "value": "Want to see brains spin? [Check this out.](./web/fsbrain_movies.md) (WARNING: loads 8 MB webpage with animated gif).\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Volume visualization",
        "parent_header": [
          "fsbrain",
          "Visualization examples"
        ],
        "type": "Text_excerpt",
        "value": "Volume visualization is not the main goal of fsbrain, but standard lightbox views and simple 3D views are supported. Have a look at the vignettes or the documentation for the `volvis.lb` function. You can find some [example output here](./web/fsbrain_volume.md).\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Notebooks",
        "parent_header": [
          "fsbrain",
          "Visualization examples"
        ],
        "type": "Text_excerpt",
        "value": "To see a combination of example figures and the code used to produce them, you should have a look at the example notebooks: [getting started notebook](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples.html) and [advanced examples notebook](https://htmlpreview.github.io/?https://github.com/dfsp-spirit/fsbrain/blob/develop/web/Rmd_web_examples/examples_adv.html).\n"
      },
      "source": "https://raw.githubusercontent.com/dfsp-spirit/fsbrain/master/README.md",
      "technique": "header_analysis"
    }
  ]
}