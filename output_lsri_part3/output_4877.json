{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference transcriptome:",
        "parent_header": [
          "XAEM: a novel statistical method for isoform quantification",
          "1. Introduction"
        ],
        "type": "Text_excerpt",
        "value": "XAEM requires a fasta file of transcript sequences as reference. XAEM supports all kinds of reference and annotation for any species. In our paper we use the UCSC hg19 reference. You can download the reference of transcripts here:\u00a0[transcripts.fa.gz](https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/transcripts.fa.gz)\n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.1 Indexing transcripts",
        "parent_header": [
          "XAEM: a novel statistical method for isoform quantification",
          "3. Preparation for the annotation reference"
        ],
        "type": "Text_excerpt",
        "value": "Using TxIndexer to index the transcript sequences in the reference file (transcripts.fa). For example:\n```sh\nwget https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/transcripts.fa.gz\ngunzip transcripts.fa.gz\nTxIndexer -t /path/to/transcripts.fa -o /path/to/TxIndexer_idx\n```"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.2 Construction of the X\u00a0matrix (design matrix)",
        "parent_header": [
          "XAEM: a novel statistical method for isoform quantification",
          "3. Preparation for the annotation reference"
        ],
        "type": "Text_excerpt",
        "value": "This step constructs the X matrix required\u00a0by the XAEM pipeline. For users working in\u00a0human the X can be downloaded here: [X_matrix.RData](https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/X_matrix.RData). It's recommended to make a project folder and put X matrix in that folder, e.g. /path/to/XAEM_project. The command is:\n```sh\nmkdir /path/to/XAEM_project\nwget https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/X_matrix.RData -P /path/to/XAEM_project\n```\nThe steps to construct your own design matrix are:\n\n- Generate simulated RNA-seq data using the R package polyester\n\n```sh\n#### R package polyester and Biostrings are required\nRscript XAEM_home/R/genPolyesterSimulation.R /path/to/transcripts.fa /path/to/design_matrix\n```\n- Run GenTC to generate Transcript Cluster (TC) using simulated data. GenTC\u00a0will generate an eqClass.txt file as the input for next step.\n```sh\nGenTC -i /path/to/TxIndexer_idx -l IU -1 /path/to/design_matrix/sample_01_1.fasta -2 /path/to/design_matrix/sample_01_2.fasta -p 8 -o /path/to/design_matrix\n```\n- Create the design matrix using the eqClass.txt from last step. The design matrix will be saved in X_matrix.RData. \"H=0.025\" is the threshold to filter false positive neighbors in each X matrix. (Please see our paper Section 2.2.1)\n```sh\nRscript XAEM_home/R/buildCRP.R in=/path/to/design_matrix/eqClass.txt out=/path/to/design_matrix/X_matrix.RData H=0.025\n```"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WenjiangDeng/XAEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-22T07:35:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-06T02:30:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "XAEM for quantification of isoform expression"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Introduction",
        "parent_header": [
          "XAEM: a novel statistical method for isoform quantification"
        ],
        "type": "Text_excerpt",
        "value": "This vignette shows how\u00a0to use\u00a0XAEM to\u00a0quantify isoform expression from RNA-seq data for **multiple samples**.\n\nSoftware requirements for XAEM:\n\n- R version 3.3.0 or later with installed packages: foreach and doParallel\n- C++11 compliant compiler (g++ >= 4.7)\n- XAEM is currently tested in Linux OS environment"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "X matrix (design matrix) :",
        "parent_header": [
          "XAEM: a novel statistical method for isoform quantification",
          "1. Introduction"
        ],
        "type": "Text_excerpt",
        "value": "X matrix is an essential object for bias correction and isoform quantification (see our paper for more details).\u00a0For users working on human, the X matrix can be downloaded here:\u00a0[X_matrix.RData](https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/X_matrix.RData). For other species the X matrix will be added soon.\n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9209137336300031,
      "result": {
        "original_header": "XAEM: a novel statistical method for isoform quantification",
        "type": "Text_excerpt",
        "value": "**Updates: we have released XAEM v0.1.2 to work with complex annotations such as GENCODE and ENSEMBL. [Check here](https://github.com/WenjiangDeng/XAEM/releases).**\n \n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.997815825444141,
      "result": {
        "original_header": "4. XAEM: step by step\u00a0instruction and explanation",
        "type": "Text_excerpt",
        "value": "Suppose we already created a working directory \u201cXAEM_project\u201d (/path/to/XAEM_project/) for quantification of transcripts, and the X_matrix.RData is saved in this folder. \n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9530877172541597,
      "result": {
        "original_header": "4.1 Generating the equivalence class table",
        "type": "Text_excerpt",
        "value": "The command to generate equivalence class table for each sample is similar to \"sailfish quant\". \u00a0For example, we want to run XAEM for sample1 and sample2 with 8\u00a0cpus:\n```sh\nXAEM -i /path/to/TxIndexer_idx -l IU -1 s1_read1.fasta -2 s1_read2.fasta -p 8 -o /path/to/XAEM_project/eqc_sample1\nXAEM -i /path/to/TxIndexer_idx -l IU -1 s2_read1.fasta -2 s2_read2.fasta -p 8 -o /path/to/XAEM_project/eqc_sample2\n```\nIf the data is compressed in gz format. We can combine with gunzip for decompression on-fly:\nBASH2* \n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9818283993371564,
      "result": {
        "original_header": "4.3 Updating the X matrix and isoform expression using AEM algorithm",
        "type": "Text_excerpt",
        "value": "When finish the construction of Y count matrix, we use the AEM algorithm to update the X matrix. The updated X matrix is then used to estimate the transcript (isoform) expression. The command is:\n```sh\nRscript AEM_update_X_beta.R workdir=/path/to/XAEM_project core=8 design.matrix=X_matrix.RData isoform.out=XAEM_isoform_expression.RData paralog.out=XAEM_paralog_expression.RData merge.paralogs=FALSE isoform.method=average remove.ycount=TRUE\n```\nThe output in this step will be saved in XAEM_isoform_expression.RData, which is the TPM value and raw read counts of multiple samples. \n**Parameter setting**\n- workdir: the path to working directory\n- core: the number of cpu cores for parallel computing\n- design.matrix: the path to the design matrix\n- isoform.out (default=XAEM_isoform_expression.RData):  the output contains the estimated expression of individual transcripts, **where the paralogs are split into separate isoforms**. This file contains two objects: isoform_count and isoform_tpm for estimated counts and normalized values (TPM). The expression of the individual isoforms is calculated with the corresponding setting of parameter \u201cisoform.method\u201d below.\n- isoform.method (default=average):  to report the expression of the individual members of a paralog as the average or total expression of the paralog set (value=average/total).\n- paralog.out (default=XAEM_paralog_expression.RData): the output contains the **estimated expression of merged paralogs**. This file consists of two objects: XAEM_count and XAEM_tpm  for the estimated counts and normalized values (TPM). The standard error of the estimate is supplied in object XAEM_se stored in *.standard_error.RData.\n- merge.paralogs (default=TRUE) (*****): the parameter to turn on/off (value=TRUE/FALSE) the paralog merging in XAEM. Please see the details of how to use this parameter in the note at the end of this section.\n-remove.ycount (default=TRUE): to clean all data of Ycount after use. \n**Note(*)**:In XAEM pipeline we provide this parameter (merge.paralog) to merge or not merge the paralogs within the updated X matrix (please see XAEM paper Section 2.2.3 and Section 2.3).  **Turning on (default) the paralog merging step produces a more accurate estimation. Turning off this step can produce the same sets of isoforms between different projects.**\n \n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8969606754411741,
      "result": {
        "original_header": "6. Dataset for differential-expression (DE) analysis",
        "type": "Text_excerpt",
        "value": "In XAEM paper we have used the RNA-seq data from the breast cancer cell line (MDA-MB-231) for DE analysis. Since the original data is generated by our collaborators in Mayo Clinic and it is not published yet, we provide the equivalence class table by running the read-alignment tool Rapmap, which is the same mapper of Salmon and totally independent from XAEM algorithm. We also prepare the R scripts and the guide to replicate the DE analysis results in the paper. The dataset can be downloaded from Google drive [using the link here](https://drive.google.com/drive/folders/1vPGo4fpl7NC4_qzZCWsqK7yNRUahZf9p?usp=sharing). \nPlease also visit our webiste at http://fafner.meb.ki.se/biostatwiki/ for more bioinformatics tools.\n \n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Download and installation",
        "parent_header": [
          "XAEM: a novel statistical method for isoform quantification"
        ],
        "type": "Text_excerpt",
        "value": "**If you use the binary verion of XAEM (recommended):**\n\n- Download the latest binary version\u00a0from XAEM website:\n```sh\nwget https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/XAEM-binary-0.1.1.tar.gz\n```\n- Uncompress to folder\n```sh\ntar -xzvf XAEM-binary-0.1.1.tar.gz\n```\n- Move to the XAEM_home directory and do configuration for\u00a0XAEM\n```sh\ncd XAEM-binary-0.1.1\nbash configure.sh\n```\n- Add paths of lib folder and bin folder to LD_LIBRARY_PATH and PATH\n```sh\nexport LD_LIBRARY_PATH=/path/to/XAEM-binary-0.1.1/lib:$LD_LIBRARY_PATH\nexport PATH=/path/to/XAEM-binary-0.1.1/bin:$PATH\n```\n**If you want to build XAEM\u00a0from sources:**\n\nDownload XAEM from XAEM website and move to XAEM_home directory\n```sh\nwget https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/XAEM-source-0.1.1.tar_.gz\nunzip XAEM-source-0.1.1.zip\ncd XAEM-source-0.1.1\nbash configure.sh\n```\nXAEM requires information of flags from Sailfish including DFETCH_BOOST, DBOOST_ROOT, DTBB_INSTALL_DIR and DCMAKE_INSTALL_PREFIX. Please refer to the Sailfish website for more details of these flags.\nDo installation by the following command:\n```sh\nDBOOST_ROOT=/path/to/boostDir/ DTBB_INSTALL_DIR=/path/to/tbbDir/ DCMAKE_INSTALL_PREFIX=/path/to/expectedBuildDir bash install.sh\nAfter the installation is finished, remember to add the paths of lib folder and bin folder to LD_LIBRARY_PATH and PATH\nexport LD_LIBRARY_PATH=/path/to/expectedBuildDir/lib:$LD_LIBRARY_PATH\nexport PATH=/path/to/expectedBuildDir/bin:$PATH\n```\nDo not forget to replace \"/path/to/\" by your local path.\n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WenjiangDeng/XAEM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WenjiangDeng/XAEM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "WenjiangDeng/XAEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "XAEM: a novel statistical method for isoform quantification"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/configure.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Download and installation",
        "parent_header": [
          "XAEM: a novel statistical method for isoform quantification"
        ],
        "type": "Text_excerpt",
        "value": "**If you use the binary verion of XAEM (recommended):**\n\n- Download the latest binary version\u00a0from XAEM website:\n```sh\nwget https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/XAEM-binary-0.1.1.tar.gz\n```\n- Uncompress to folder\n```sh\ntar -xzvf XAEM-binary-0.1.1.tar.gz\n```\n- Move to the XAEM_home directory and do configuration for\u00a0XAEM\n```sh\ncd XAEM-binary-0.1.1\nbash configure.sh\n```\n- Add paths of lib folder and bin folder to LD_LIBRARY_PATH and PATH\n```sh\nexport LD_LIBRARY_PATH=/path/to/XAEM-binary-0.1.1/lib:$LD_LIBRARY_PATH\nexport PATH=/path/to/XAEM-binary-0.1.1/bin:$PATH\n```\n**If you want to build XAEM\u00a0from sources:**\n\nDownload XAEM from XAEM website and move to XAEM_home directory\n```sh\nwget https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/XAEM-source-0.1.1.tar_.gz\nunzip XAEM-source-0.1.1.zip\ncd XAEM-source-0.1.1\nbash configure.sh\n```\nXAEM requires information of flags from Sailfish including DFETCH_BOOST, DBOOST_ROOT, DTBB_INSTALL_DIR and DCMAKE_INSTALL_PREFIX. Please refer to the Sailfish website for more details of these flags.\nDo installation by the following command:\n```sh\nDBOOST_ROOT=/path/to/boostDir/ DTBB_INSTALL_DIR=/path/to/tbbDir/ DCMAKE_INSTALL_PREFIX=/path/to/expectedBuildDir bash install.sh\nAfter the installation is finished, remember to add the paths of lib folder and bin folder to LD_LIBRARY_PATH and PATH\nexport LD_LIBRARY_PATH=/path/to/expectedBuildDir/lib:$LD_LIBRARY_PATH\nexport PATH=/path/to/expectedBuildDir/bin:$PATH\n```\nDo not forget to replace \"/path/to/\" by your local path.\n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.1 Indexing transcripts",
        "parent_header": [
          "XAEM: a novel statistical method for isoform quantification",
          "3. Preparation for the annotation reference"
        ],
        "type": "Text_excerpt",
        "value": "Using TxIndexer to index the transcript sequences in the reference file (transcripts.fa). For example:\n```sh\nwget https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/transcripts.fa.gz\ngunzip transcripts.fa.gz\nTxIndexer -t /path/to/transcripts.fa -o /path/to/TxIndexer_idx\n```"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.2 Construction of the X\u00a0matrix (design matrix)",
        "parent_header": [
          "XAEM: a novel statistical method for isoform quantification",
          "3. Preparation for the annotation reference"
        ],
        "type": "Text_excerpt",
        "value": "This step constructs the X matrix required\u00a0by the XAEM pipeline. For users working in\u00a0human the X can be downloaded here: [X_matrix.RData](https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/X_matrix.RData). It's recommended to make a project folder and put X matrix in that folder, e.g. /path/to/XAEM_project. The command is:\n```sh\nmkdir /path/to/XAEM_project\nwget https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/X_matrix.RData -P /path/to/XAEM_project\n```\nThe steps to construct your own design matrix are:\n\n- Generate simulated RNA-seq data using the R package polyester\n\n```sh\n#### R package polyester and Biostrings are required\nRscript XAEM_home/R/genPolyesterSimulation.R /path/to/transcripts.fa /path/to/design_matrix\n```\n- Run GenTC to generate Transcript Cluster (TC) using simulated data. GenTC\u00a0will generate an eqClass.txt file as the input for next step.\n```sh\nGenTC -i /path/to/TxIndexer_idx -l IU -1 /path/to/design_matrix/sample_01_1.fasta -2 /path/to/design_matrix/sample_01_2.fasta -p 8 -o /path/to/design_matrix\n```\n- Create the design matrix using the eqClass.txt from last step. The design matrix will be saved in X_matrix.RData. \"H=0.025\" is the threshold to filter false positive neighbors in each X matrix. (Please see our paper Section 2.2.1)\n```sh\nRscript XAEM_home/R/buildCRP.R in=/path/to/design_matrix/eqClass.txt out=/path/to/design_matrix/X_matrix.RData H=0.025\n```"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9792628726079387,
      "result": {
        "original_header": "4. XAEM: step by step\u00a0instruction and explanation",
        "type": "Text_excerpt",
        "value": "Suppose we already created a working directory \u201cXAEM_project\u201d (/path/to/XAEM_project/) for quantification of transcripts, and the X_matrix.RData is saved in this folder. \n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.975881974908944,
      "result": {
        "original_header": "4.1 Generating the equivalence class table",
        "type": "Text_excerpt",
        "value": "The command to generate equivalence class table for each sample is similar to \"sailfish quant\". \u00a0For example, we want to run XAEM for sample1 and sample2 with 8\u00a0cpus:\n```sh\nXAEM -i /path/to/TxIndexer_idx -l IU -1 s1_read1.fasta -2 s1_read2.fasta -p 8 -o /path/to/XAEM_project/eqc_sample1\nXAEM -i /path/to/TxIndexer_idx -l IU -1 s2_read1.fasta -2 s2_read2.fasta -p 8 -o /path/to/XAEM_project/eqc_sample2\n```\nIf the data is compressed in gz format. We can combine with gunzip for decompression on-fly:\nBASH2* \n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WenjiangDeng/XAEM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "XAEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "WenjiangDeng"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 41772,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 320,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "WenjiangDeng",
          "type": "User"
        },
        "date_created": "2022-11-11T02:00:59Z",
        "date_published": "2023-02-25T18:20:01Z",
        "description": "- This release improves XAEM to work with complex annotations such as GENCODE and ENSEMBL, which usually have >200,000 isoforms. The H threshold is utilized to break down isoforms into smaller units and make the X matrix construction feasible.",
        "html_url": "https://github.com/WenjiangDeng/XAEM/releases/tag/v0.1.2",
        "name": "XAEM v0.1.2",
        "release_id": 93687501,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/WenjiangDeng/XAEM/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/WenjiangDeng/XAEM/releases/93687501",
        "value": "https://api.github.com/repos/WenjiangDeng/XAEM/releases/93687501",
        "zipball_url": "https://api.github.com/repos/WenjiangDeng/XAEM/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "WenjiangDeng",
          "type": "User"
        },
        "date_created": "2022-11-10T08:56:32Z",
        "date_published": "2022-11-10T09:03:50Z",
        "description": "\r\n",
        "html_url": "https://github.com/WenjiangDeng/XAEM/releases/tag/v0.1.1",
        "name": "XAEM v0.1.1",
        "release_id": 82647554,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/WenjiangDeng/XAEM/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/WenjiangDeng/XAEM/releases/82647554",
        "value": "https://api.github.com/repos/WenjiangDeng/XAEM/releases/82647554",
        "zipball_url": "https://api.github.com/repos/WenjiangDeng/XAEM/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "WenjiangDeng",
          "type": "User"
        },
        "date_created": "2019-05-26T13:13:49Z",
        "date_published": "2019-05-26T13:16:38Z",
        "description": "XAEM v0.1.0",
        "html_url": "https://github.com/WenjiangDeng/XAEM/releases/tag/v0.1.0",
        "name": "XAEM v0.1.0",
        "release_id": 17593324,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/WenjiangDeng/XAEM/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WenjiangDeng/XAEM/releases/17593324",
        "value": "https://api.github.com/repos/WenjiangDeng/XAEM/releases/17593324",
        "zipball_url": "https://api.github.com/repos/WenjiangDeng/XAEM/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "5. A complete run of\u00a0XAEM by copy and paste",
        "parent_header": [
          "XAEM: a novel statistical method for isoform quantification"
        ],
        "type": "Text_excerpt",
        "value": "This section presents a tutorial to run XAEM pipeline with a toy example. Suppose that input data contain two RNA-seq samples and server supplies 4 CPUs for computation. We can test XAEM by just copy and paste of the example commands.\n\n- Download the binary file of XAEM\n```sh\nmkdir tmp_test\ncd tmp_test\nwget https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/XAEM-binary-0.1.1.tar.gz\ntar -xzvf XAEM-binary-0.1.1.tar.gz\ncd XAEM-binary-0.1.1\nbash configure.sh\nexport LD_LIBRARY_PATH=/path/to/XAEM-binary-0.1.1/lib:$LD_LIBRARY_PATH\nexport PATH=/path/to/XAEM-binary-0.1.1/bin:$PATH\n```\n- Download fasta file and index it\n```sh\nwget https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/transcripts.fa.gz\ngunzip transcripts.fa.gz\nTxIndexer -t transcripts.fa -o TxIndexer_idx\n```\n- Download the X matrix and RNA-seq data of sample1 and sample2\n```sh\n\nwget https://github.com/WenjiangDeng/XAEM/releases/download/v0.1.1/X_matrix.RData\n\n## Download input RNA-seq samples\n# Create a XAEM project to save the data\nmkdir XAEM_project\ncd XAEM_project\n# Download the RNA-seq data\nwget https://www.meb.ki.se/sites/biostatwiki/wp-content/uploads/sites/4/XAEM_datasources/sample1_read1.fasta.gz\nwget https://www.meb.ki.se/sites/biostatwiki/wp-content/uploads/sites/4/XAEM_datasources/sample1_read2.fasta.gz\nwget https://www.meb.ki.se/sites/biostatwiki/wp-content/uploads/sites/4/XAEM_datasources/sample2_read1.fasta.gz\nwget https://www.meb.ki.se/sites/biostatwiki/wp-content/uploads/sites/4/XAEM_datasources/sample2_read2.fasta.gz\ncd ..\n```\n- Generate the eqclass table and Y count matrix\n```sh\nXAEM -i TxIndexer_idx -l IU -1 <(gunzip -c XAEM_project/sample1_read1.fasta.gz) -2 <(gunzip -c XAEM_project/sample1_read2.fasta.gz) -p 4 -o XAEM_project/eqc_sample1\nXAEM -i TxIndexer_idx -l IU -1 <(gunzip -c XAEM_project/sample2_read1.fasta.gz) -2 <(gunzip -c XAEM_project/sample2_read2.fasta.gz) -p 4 -o XAEM_project/eqc_sample2\n## R packages foreach\u00a0and\u00a0doParallel are required\n\nRscript $PWD/XAEM-binary-0.1.1/R/Create_count_matrix.R workdir=$PWD/XAEM_project core=$CPUNUM design.matrix=$PWD/X_matrix.RData\n```\n- Estimate isoform expression using AEM algorithm\n```sh\nRscript $PWD/XAEM-binary-0.1.1/R/AEM_update_X_beta.R workdir=$PWD/XAEM_project core=$CPUNUM design.matrix=$PWD/X_matrix.RData isoform.out=XAEM_isoform_expression.RData paralog.out=XAEM_paralog_expression.RData\n```\nThe outputs are stored in the folder of \u201cXAEM_project\u201d including XAEM_isoform_expression.RData and XAEM_paralog_expression.RData.\n"
      },
      "source": "https://raw.githubusercontent.com/WenjiangDeng/XAEM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:57:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}