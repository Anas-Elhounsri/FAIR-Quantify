{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation instructions",
        "parent_header": [
          "IKMB GWAS Association Testing Pipeline"
        ],
        "type": "Text_excerpt",
        "value": "If you use our software in any published work, please cite our BIGwas software and methods paper: \n\nK\u00e4ssens JC, Wienbrandt L, Ellinghaus D. BIGwas: Single-command quality control\nand association testing for multi-cohort and biobank-scale GWAS/PheWAS data.\nGigascience. 2021 Jun 29;10(6):giab047.\n"
      },
      "source": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ikmb/gwas-assoc"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-08-20T05:11:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-27T09:22:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The IKMB GWAS Association Testing Pipeline"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8916741456487566,
      "result": {
        "original_header": "UK Biobank Proof-of-concept",
        "type": "Text_excerpt",
        "value": "If you are directly working with UK Biobank's BGEN files, you may either convert them to VCF format and use the regular Assoc pipeline as described above. If you are merely interested in plain association testing with SAIGE and you are fine with leaving out all the additional features the full pipeline uses (Plink regression, Sample filtering, liftover/build conversion, etc.) you might want to look at our proof-of-concept script collection that we used for our recent COVID-19 analysis. It is not ready-to-use but should provide a solid foundation for your own scripts. Also, it currently relies on SLURM, SQLite3, Plink2 and Singularity to be installed on your HPC or workstation. \nIn this example, you will need to extract the first 10 principal components, sex and age from the UK Biobank phenotype database and the phenotype from the recently-published COVID-19 test result table dumps. The script folder contains a `generate_annotations.sh` script to aid you in this process. \n1. Change the `env` file to suit your needs. You will also need to give a path to a single Plink dataset containing all genotype calls that you want in your SAIGE model. You might need to create it by merging the single-chromosome bim/bed/fams first.\n2. Run `1_prune.sh` to prepare the genotype calls for model generation\n3. Run `2_build_model.sh` to generate the SAIGE model. It also pulls the necessary SAIGE docker container. It might take a few days to complete.\n4. Run `3_saige_spa.sh` to perform association testing. It spawns a lot of SLURM jobs and generates a lot of temporary files in the current working directory\n5. Run `4_sumstats.sh` to collect all the result snippets into a single summary statistics text file that you may use for later analysis\n \n"
      },
      "source": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ikmb/gwas-assoc/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ikmb/gwas-assoc/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ikmb/gwas-assoc"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IKMB GWAS Association Testing Pipeline"
      },
      "source": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/ukbiobank-shotcut/4_sumstats.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/ukbiobank-shotcut/3_saige_spa.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/ukbiobank-shotcut/2_build_model.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/ukbiobank-shotcut/1_prune.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/ukbiobank-shotcut/generate_annotations.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/bin/update_build_PLINK1.9.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ikmb/gwas-assoc/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nextflow, pipeline, plink, saige"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Institute of Clinical Molecular Biology\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "IKMB GWAS Association Testing Pipeline"
        ],
        "type": "Text_excerpt",
        "value": "MIT License\n\nCopyright (c) 2020 Institute of Clinical Molecular Biology\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gwas-assoc"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ikmb"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 427485,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 131076,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 35768,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 20523,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 9619,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Awk",
        "size": 184,
        "type": "Programming_language",
        "value": "Awk"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/Readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "IKMB GWAS Association Testing Pipeline"
        ],
        "type": "Text_excerpt",
        "value": "- Nextflow: https://www.nextflow.io/\n- Java 8 or higher\n- Singularity 3.4 or higher\n- A dataset in chromosome-wise .vcf.gz format. The dataset *must have* a DS tag for dosage data or a GT tag for genotyped data. If both are present, DS is chosen. \n- Annotations and FAM files as generated by [The QC Pipeline](https://github.com/ikmb/gwas-qc/) (i.e. `dataset_individuals_annotation.txt` and `dataset.fam`)\n- Optionally, a whitespace-separated file with additional covariates for association testing (see below)\n\nPlease ensure that you have 16 GB RAM installed on the computer where you intend to run the pipeline (i.e. your local computer or your HPC compute nodes).\n\n**Note:** As we have a current issue with the hoster of our Singularity container, you need to download the container yourself and configure the path to the container before the first run of Nextflow. If you have run the [Quality Control Pipeline](https://github.com/ikmb/gwas-qc/blob/master/Readme.md#quick-start) you already have a running setup and you are fine. (Btw, the process is similar to setting up a shared singularity cache. See [Advanced Configuration](https://github.com/ikmb/gwas-qc/#shared-singularity-cache).)\n```\ncd /some/place/for/your/container\nwget https://hybridcomputing.ikmb.uni-kiel.de/downloads/lwienbrandt-ikmb-gwas-qc-assoc-assets.sif\n```\nThen, add/modify the following key in your `~/.nextflow/config` (if the file does not exist, create it):\n```\nsingularity.cacheDir = \"/some/place/for/your/container\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:04:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "parent_header": [
          "IKMB GWAS Association Testing Pipeline"
        ],
        "type": "Text_excerpt",
        "value": "1. Run the [Quality Control Pipeline](https://github.com/ikmb/gwas-qc/blob/master/Readme.md#quick-start) on the example first.\n    - All files necessary for the association testing pipeline are automatically generated.\n2. Run the wrapper script (included in example package): `bash run-assoc.sh`\n\n"
      },
      "source": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to Start",
        "parent_header": [
          "IKMB GWAS Association Testing Pipeline"
        ],
        "type": "Text_excerpt",
        "value": "\u2192 If you are working on the UKSH medcluster, please see [Advanced Configuration](https://github.com/ikmb/gwas-qc/#uksh-medcluster-configuration) first.\n\nFortunately, the association testing pipeline itself requires very little configuration. If you intend to run the pipeline on an HPC cluster, please review the advanced configuration items first.\n\nYou will need to:\n- A set of `.vcf.gz` files with the following specifics:\n    - at most one chromosome per `.vcf.gz` file. Multiple chromosomes per files are not supported. If a file happens to have multiple chromosomes, only the first will be analyzed.\n    - any chromosome codes are supported (i.e. `chrX`, `X`, `23`, `chr23`, `chromosomeX` are just fine)\n    - **your VCF files require dosage data (DS tag) for imputed data or genotype calls (GT tag) for genotyped data. If both tags are found, DS is chosen.**\n    - the `INFO` column in the VCF files should contain an imputation score. This is used to filter the input variants to create a good null model for SAIGE. For topmed imputations, we found `R2>0.8` to yield good results. If the given tag is not found in the VCF file, the default value 1.0 is assumed, making all variants pass the filter. This filter is not used for Plink-based association testing. \n- A FAM file to update sex and phenotype from. Only those files in the FAM file will be used from the VCFs. Note that *all* samples from the FAM file must be present in the VCF files. **Note: if the FAM family ID is 0, the sample name in the VCF should be the individual ID. If the FID is not 0, the sample name should be the family ID and the individual ID with an underscore (i.e. FID 1234 IID 9876 should be 1234_9876 in the VCF file)**\n- The genome build of the input data, which will result in SAIGE handling the sex chromosomes according to the coordinates of the pseudoautosomal regions. Possible values are 37 and 38.\n- Optionally, you can specify additional covariates to be used in association testing. By default, 10 principal components are automatically generated and used. If you want additional covariates, have a whitespace-separated file with a header at hand. The first column should be the sample ID in `FID_IID` format, any futher column is treated as a covariate. Specify the covars file with `--more_covars $FILE` and the columns to be used with `--more_covars_cols AGE,SEX`, where `AGE` and `SEX` are the respective column headers from the covar file that you wish to be included.\n\nThe following wrapper script is also included in [the example](https://github.com/ikmb/gwas-qc/blob/master/Readme.md#quick-start)\n```bash\n# For additional clarity, we use variables here.\n\n# a shell-like glob expression for specifying VCF.GZ file sets.\n# Note the additional quoting, we do not want the shell to expand the '*'\nINPUT=\"$HOME/example/output/Example/QCed/\"'*.noATCG.vcf.gz'\n\n# Filter by these FAM files. In our example, they are the same as in the VCF\nFAM=\"$HOME/example/output/Example/QCed/1000G_QCed.fam\"\n\n# Individuals annotation as generated by the QC Pipeline\nANNO=\"$HOME/example/output/Example/QCed/1000G_QCed.annotation.txt\"\n\n# Name prefix of the output files\nNAME=\"1000G\"\n\n# Target folder\nOUTPUT=\"output/Example/Assoc\"\n\n# Actual call\n# The Assoc.config defines computation resources and can be fine-tuned if necessary. You can\n# use the one from the example package or the generic one from \n# https://raw.githubusercontent.com/ikmb/gwas-assoc/master/Assoc.config\n\nif [ ! -f Assoc.config ]; then\n    wget https://raw.githubusercontent.com/ikmb/gwas-assoc/master/Assoc.config\nfi\n\nnextflow run -c Assoc.config ikmb/gwas-assoc \\\n    --input_imputed_glob \"$INPUT\" \\\n    --fam \"$FAM\" \\\n    --collection_name \"$NAME\" \\\n    --output \"$OUTPUT\" \\\n    --build 37\n```\n\nThe pipeline output and reports will be written to the ```Assoc_output``` directory.\n"
      },
      "source": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameters",
        "parent_header": [
          "IKMB GWAS Association Testing Pipeline",
          "How to Start"
        ],
        "type": "Text_excerpt",
        "value": "The following list covers all parameters that may be specified for the Association Testing Pipeline:\n\n```\n--input_imputed_glob [glob]     A glob expression to specify the .vcf.gz files that should be used\n                                for association analysis\n--fam [file.fam]                 A Plink-style FAM file that will be used to select a\n                                subset of samples from the provided VCFs\n--collection_name [name]        Output filename prefix\n--output [directory]            Output directory\n--more_covars [covars.txt]      Optional, whitespace-separated list of covariates. See above.\n--more_covars_cols [COL1,COL2]  Optional, comma-separated list of covar column header names\n--null_filter [filter]          Optional, bcftools-style formatted INFO filter for generation of\n                                the SAIGE null model. Default: \"R2>0.8\"\n--build [build]                 Genome build, 37 or 38\n--trait [type]                  Trait type to analyze. May be 'binary' (default) or 'quantitative')\n-resume                         Restart where the pipeline was cancelled or aborted. May or may\n                                not work, depending on your filesystem specifics\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ikmb/gwas-assoc/master/Readme.md",
      "technique": "header_analysis"
    }
  ]
}