{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/woosubs/SBMate"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-22T14:54:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-08T13:59:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Systems Biology Model AnnoTation Evaluator"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8997974718788943,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "``SBMate`` evaluates the quality of annotations in SBML model elements, especially libsbml.Model, libsbml.Species, libsbml.Compartment, and libsbml.Reaction. Currently, it examines annotations from five knowledge resources, CHEBI, GO, KEGG, SBO, and UNIPROT. \n \nSBMate calculates three metrics: \n1. Coverage checks how many model elements of the above four types (model, reaction, species, and compartment) are actually annotated. \n2. Consistency computes how many of such annotated entities has proper annotation. For example, a reaction object should not have a GO cellular component term (GO:0005575 or its children). SBMate identifies such instances and calculates the proprotion of model entities whose annotations are consistent. \n3. Finally, specificity is a measure of how 'precise' such consistent annotations are. This is obtained by utilizing the hierarchical structures of knowledge resource terms, such as the directed acyclic graphs of SBO, GO and CHEBI.  \nMore detailed discussions can be found in our manuscript (in preparation). \n \n"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8260247052016514,
      "result": {
        "original_header": "Adding Additional Metrics",
        "type": "Text_excerpt",
        "value": "You can add additional metrics by creating a class that calculates metrics.\nMetric values are contained in a ``pandas`` ``DataFrame``.\nSee ``metric_calculator.py`` to see how to write a class that calculates metrics.\nWhen you construct ``AnnotationMetrics``, you will assign a value to the keyword argument ``metric_calculator_classes``\nof the constructor.\n \n"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/woosubs/SBMate/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/woosubs/SBMate/main/notebooks/collect_result_after_kegg.ipynb"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/notebooks/collect_result_after_kegg.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/woosubs/SBMate/main/notebooks/visualize_result.ipynb"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/notebooks/visualize_result.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/woosubs/SBMate/main/notebooks/collect_annotation_qualifier.ipynb"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/notebooks/collect_annotation_qualifier.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/woosubs/SBMate/main/notebooks/sbmate_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/notebooks/sbmate_demo.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/woosubs/SBMate/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "woosubs/SBMate"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SBMate"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/woosubs/SBMate/raw/main/png/run_sbmate.png"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/woosubs/SBMate/raw/main/png/result_report.png"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/woosubs/SBMate/raw/main/png/run_sbmate_table.png"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/woosubs/SBMate/raw/main/png/result_table.png"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/woosubs/SBMate/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Woosub Shin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://www.travis-ci.com/woosubs/SBMate.svg?token=AZ9nCjqJmNF7xVsjbZBP&amp;branch=main"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SBMate"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "woosubs"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 104789,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 57035,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/woosubs/SBMate/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:20:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "SBMate"
        ],
        "type": "Text_excerpt",
        "value": "It is quite easy to use SBMate as there is just one main method, ``sbmate.AnnotationMetrics.getMetrics``.\n\n<img src=\"https://github.com/woosubs/SBMate/raw/main/png/run_sbmate.png\" width=\"800\"/>\n\nBy default, SBMate produces a report summarizing the three scores:\n\n<img src=\"https://github.com/woosubs/SBMate/raw/main/png/result_report.png\" width=\"800\"/>\n\nAnother option is to create a pandas DataFrame, as below:\n\n<img src=\"https://github.com/woosubs/SBMate/raw/main/png/run_sbmate_table.png\" width=\"800\"/>\n\nAnd you will get the dataframe. \n\n<img src=\"https://github.com/woosubs/SBMate/raw/main/png/result_table.png\" width=\"800\"/>\n"
      },
      "source": "https://raw.githubusercontent.com/woosubs/SBMate/main/README.md",
      "technique": "header_analysis"
    }
  ]
}