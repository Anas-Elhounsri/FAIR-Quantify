{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dib-lab/2020-paper-mqf-benchmarks"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-15T00:19:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-02-01T21:15:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9540098471085255,
      "result": {
        "original_header": "Dastasets",
        "type": "Text_excerpt",
        "value": "Three datasets called z2,z3, and z5 where simulated to follow zipfian distribution(Powers 1998) using different coefficient: 2, 3, and 5. The bigger the coefficient the more singleton in the dataset. The Fourth was called kmers which represent real kmers generated from RNA seq experiment(ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR105/005/ERR1050075/ERR1050075_1.fastq.gz) .\n** DNA\n=======\nMethylated DNA immunoprecipitation sequencing (MeDIP-Seq)\nhttps://www.ncbi.nlm.nih.gov/sra/ERX4616238[accn]\n \nChIP-seq of H3K27ME3 in Tibetan hulless barley\nhttps://www.ncbi.nlm.nih.gov/sra/SRX5451513[accn]\n \nDNase-seq of mitochondrial genome of Mukaria splendida\nhttps://www.ncbi.nlm.nih.gov/sra/SRX9440926[accn]\n \nRAD-Seq with Ion Torrent for Cucurbita argyrosperma subsp\nhttps://www.ncbi.nlm.nih.gov/sra/SRX9401059[accn]\n \nNanopore metagenomic sequencing\nhttps://www.ncbi.nlm.nih.gov/sra/SRX9145037[accn]\n  \n"
      },
      "source": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8194352733367993,
      "result": {
        "original_header": "Experiment 1",
        "type": "Text_excerpt",
        "value": "Experiment 1 compares the load factor of CQF and MQF when the same datasets are inserted to them. First, CQF and MQF are created using the same number of slots(227). Then, chunks of items are inserted iteratively to both data-structures while recording the load factor after the insertion of each chunk. The experiments stops when CQF\u2019s load factor reaches 90%.\nRunning Commands:\n```\n./compareLoadingFactor -s 27 -z2\n./compareLoadingFactor -s 27 -z3\n./compareLoadingFactor -s 27 -z5\n./compareLoadingFactor -s 27 -d uniform -u 10 -f4\n./compareLoadingFactor -s 27 -d kmers -k ERR1050075_1.fastq\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.99351883748494,
      "result": {
        "original_header": "Experiment 2",
        "type": "Text_excerpt",
        "value": "Experiment 2 is measuring the insertion and query speed  MQF, CQF, buffered MQF,  khmer\u2019s implementation countmin sketch , and original implementation of countmin sketch.\nThe commands used in the bench-marking is found in runSpeedtest.sh\n \n"
      },
      "source": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9246673382967664,
      "result": {
        "original_header": "Experiment 3",
        "type": "Text_excerpt",
        "value": "Experiment 3 compares the optimal memory space required by CQF and MQF to count a items from different distributions.\nThe commands used in the bench-marking is found in runSizeTest.sh\n \n"
      },
      "source": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.942213377109,
      "result": {
        "original_header": "Experiments 4,5",
        "type": "Text_excerpt",
        "value": "Experiment 5 and 6 compare the MQF and countmin sketch performance in a real applications: Error Trimming and Digital Normalization. Both Experiments need Khmer software. Scripts runTrim.sh and runDiginorm.sh includes the installation of khmer and running the experiments. \n \n"
      },
      "source": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading datasets:",
        "parent_header": [
          "** RNA"
        ],
        "type": "Text_excerpt",
        "value": "parallel --gnu 'fasterq-dump {}' :::: SamplesIds"
      },
      "source": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dib-lab/2020-paper-mqf-benchmarks/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dib-lab/2020-paper-mqf-benchmarks/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dib-lab/2020-paper-mqf-benchmarks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Benchmarking MQF vs CQF vs Countmin"
      },
      "source": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/runSizeTest.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/runSpeedTest.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/runTrim.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/runDigiNorm.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/bestParameters.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/runBencmark.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/run_benchmark.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/cqf/bestParameters.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/ThirdParty/stxxl/misc/diskbench-avgdat.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9996425306827427,
      "result": {
        "original_header": "Dastasets",
        "type": "Text_excerpt",
        "value": "Three datasets called z2,z3, and z5 where simulated to follow zipfian distribution(Powers 1998) using different coefficient: 2, 3, and 5. The bigger the coefficient the more singleton in the dataset. The Fourth was called kmers which represent real kmers generated from RNA seq experiment(ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR105/005/ERR1050075/ERR1050075_1.fastq.gz) .\n** DNA\n=======\nMethylated DNA immunoprecipitation sequencing (MeDIP-Seq)\nhttps://www.ncbi.nlm.nih.gov/sra/ERX4616238[accn]\n \nChIP-seq of H3K27ME3 in Tibetan hulless barley\nhttps://www.ncbi.nlm.nih.gov/sra/SRX5451513[accn]\n \nDNase-seq of mitochondrial genome of Mukaria splendida\nhttps://www.ncbi.nlm.nih.gov/sra/SRX9440926[accn]\n \nRAD-Seq with Ion Torrent for Cucurbita argyrosperma subsp\nhttps://www.ncbi.nlm.nih.gov/sra/SRX9401059[accn]\n \nNanopore metagenomic sequencing\nhttps://www.ncbi.nlm.nih.gov/sra/SRX9145037[accn]\n  \n"
      },
      "source": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999045375786038,
      "result": {
        "original_header": "** RNA",
        "type": "Text_excerpt",
        "value": "=======\nWe already have ERR1050075 for classical RNA-seq of Strand-specific polyA-selected human mRNA\n \nCap analysis gene expression (CAGE-Seq) - human cell line\nhttps://www.ncbi.nlm.nih.gov/sra/SRX9158399[accn]\n \nRNA immunoprecipitation sequencing (RIP-Seq) - human cells infected with Ebola virus\nhttps://www.ncbi.nlm.nih.gov/sra/SRX9340026[accn]\n \n3' mRNA-Seq - Mouse B cell lymphoma\nhttps://www.ncbi.nlm.nih.gov/sra/SRX9270124[accn]\n \nPacBio RNAseq - Symbiodinium natans CCMP2548\nhttps://www.ncbi.nlm.nih.gov/sra/ERX4439241[accn] \n"
      },
      "source": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dib-lab/2020-paper-mqf-benchmarks/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2015 Guillaume Rizk\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/BBHash/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2020-paper-mqf-benchmarks"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "dib-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1177777,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 115805,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 31601,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 14580,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 5512,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dib-lab/2020-paper-mqf-benchmarks/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:49:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}