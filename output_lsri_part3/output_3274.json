{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bjyoontamu/MONACO"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-02T05:07:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-07-29T08:57:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "MONACO Input and Output Description",
        "parent_header": [
          "MONACO"
        ],
        "type": "Text_excerpt",
        "value": "        Input   netIdList                       ID list of input networks.\n                inputFolder                     Input folder.\n                idFlag                          This flag is used to expedite the reading process of input files. \n                                                id_flag = 1, if every node id is represented as \"networkID+number\".\n                                                id_flag = 0, otherwise.\n                outFileName                     Output file name including path.\n                alpha                           A balancing parameter between node-level similarity and topological similarity.\n                                                alpha < 0.5 works well in most cases.\n                alignmentConstructionStrategy   0: Many-to-Many mapping\n                                                1: One-to-one mapping\n                                                2: Maximum Weighted Bipartite Matching (Pairwise network alignment only)\n        output  outputAlignment                 Alignment results\n"
      },
      "source": "https://raw.githubusercontent.com/bjyoontamu/MONACO/master/README.txt",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bjyoontamu/MONACO/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bjyoontamu/MONACO/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bjyoontamu/MONACO"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MONACO"
      },
      "source": "https://raw.githubusercontent.com/bjyoontamu/MONACO/master/README.txt",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9069880677343738,
      "result": {
        "original_header": "Input File Formats",
        "type": "Text_excerpt",
        "value": "        Suppose we have three PPI networks 'a', 'b', 'c'.\n        To run MONACO, the files listed below are required. \n"
      },
      "source": "https://raw.githubusercontent.com/bjyoontamu/MONACO/master/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8255404156548654,
      "result": {
        "original_header": "Output Files format:",
        "type": "Text_excerpt",
        "value": "        Each line of the output file corresponds to individual cluster\n                Example) \n                        a4 b5 c4\n                        a1 b1 b7 c1\n                        a2 b3 c2\n                        a3 b4 c3\n \n"
      },
      "source": "https://raw.githubusercontent.com/bjyoontamu/MONACO/master/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bjyoontamu/MONACO/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MONACO"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bjyoontamu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 29815,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bjyoontamu/MONACO/master/README.txt"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bjyoontamu/MONACO/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:13:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example:",
        "parent_header": [
          "MONACO"
        ],
        "type": "Text_excerpt",
        "value": "       alignment = MONACO({'a', 'b', 'c'}, 'test', 1, 'output.txt', 0.4, 1)\n\nFor more information on the algorithms, please see:\n\nHyun-Myung Woo and Byung-Jun Yoon (2019)\nMONACO: accurate biological network alignment through optimal neighborhood matching between focal nodes\n\nContact: bjyoon@ece.tamu.edu\n"
      },
      "source": "https://raw.githubusercontent.com/bjyoontamu/MONACO/master/README.txt",
      "technique": "header_analysis"
    }
  ]
}