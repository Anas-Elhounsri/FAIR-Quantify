{
  "application_domain": [
    {
      "confidence": 26.58,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tianwangbuaa/RecapNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-07T08:44:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-26T11:18:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9067448207700399,
      "result": {
        "original_header": "RecapNet: Action Proposal Generation Mimicking Human Cognitive Process",
        "type": "Text_excerpt",
        "value": "This repository contains the codes for our paper named \"RecapNet: Action Proposal Generation Mimicking Human Cognitive Process\". You can use the test codes to evaluate our model on the THUMOS14 dataset.\n \n"
      },
      "source": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8782163618083038,
      "result": {
        "original_header": "Metric Evaluation",
        "type": "Text_excerpt",
        "value": "You will also get two hdf5 files containing the raw coordinate data of the above two figures.\n \n"
      },
      "source": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tianwangbuaa/RecapNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tianwangbuaa/RecapNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tianwangbuaa/RecapNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/images/ar_an.png"
      },
      "source": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/images/an_tiou.png"
      },
      "source": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/images/comp.png"
      },
      "source": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Data preparation",
        "parent_header": [
          "RecapNet: Action Proposal Generation Mimicking Human Cognitive Process"
        ],
        "type": "Text_excerpt",
        "value": "(1) I3D feature extraction: Please download the video data and annotation files from the website [THUMOS14](http://crcv.ucf.edu/THUMOS14/download.html), and then use the scripts under `data/THUMOS14/I3D_feature_gen/` to extract the I3D features. For more details, follow the instructions in this [readme](./data/THUMOS14/I3D_feature_gen/readme.md).\n\n(2) Video information generation: At this step, we need to reformulate the ground truth raw annotation files into parsed json files for network input. \n\nInstructions:\n\n`cd ./data/THUMOS14/ && python gen_dataset_dict.py`\n\n(3) Or just skip the above two tedious steps and take my provided I3D feature files and ground truth json files. My provided I3D features can be downloaded in [MEGA Disk](https://mega.nz/#F!SJc2hCRa!tru3N2ZGpuz9YtybIO4bqQ). The ground truth json files have already been placed under the `./data/THUMOS14/split_gt_info` directory.\n"
      },
      "source": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8218045448523064,
      "result": {
        "original_header": "Model Inference",
        "type": "Text_excerpt",
        "value": "Then run: \n`CUDA_VISIBLE_DEVICES=0 python eval_model.py` \n"
      },
      "source": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8582618052495907,
      "result": {
        "original_header": "Model Inference",
        "type": "Text_excerpt",
        "value": "Download my trained model in [MEGA Disk](https://mega.nz/#F!SJc2hCRa!tru3N2ZGpuz9YtybIO4bqQ) and place the checkpoint files under the `checkpoints` directory.  \n`CUDA_VISIBLE_DEVICES=0 python eval_model.py` \n"
      },
      "source": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tianwangbuaa/RecapNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RecapNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "tianwangbuaa"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 69460,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "RecapNet: Action Proposal Generation Mimicking Human Cognitive Process"
        ],
        "type": "Text_excerpt",
        "value": "Python and some packages:\n\n- tensorflow >= 1.4.0\n- opencv-python\n- numpy\n- matplotlib\n- h5py\n"
      },
      "source": "https://raw.githubusercontent.com/tianwangbuaa/RecapNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:59:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}