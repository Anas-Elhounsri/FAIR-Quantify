{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bschulzlab/glypniro"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-11T12:30:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-07-21T05:49:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9306999401565134,
      "result": {
        "original_header": "GlypNirO",
        "type": "Text_excerpt",
        "value": "A automated script for processing and combining Byonic and PD standard output.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bschulzlab/glypniro/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.919367463346521,
      "result": {
        "original_header": "Note for using with PeakView SWATH data",
        "type": "Text_excerpt",
        "value": "The script `reformat.py` included under the `peakview_byonics` folder within GlypNirO should be used to generate appropriate input for GlypNirO from SWATH and Byonic data. \nThe command above will generate input files from experiment information and peptides information from GlypNirO and SWATH and create a description file that can be directly input into the main GlypNirO script.\nFor optimal result, the SWATH library used for the PeakView should be constructed from Byonic identification data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bschulzlab/glypniro/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bschulzlab/glypniro/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bschulzlab/glypniro/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bschulzlab/glypniro"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GlypNirO"
      },
      "source": "https://raw.githubusercontent.com/bschulzlab/glypniro/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.808940144778939,
      "result": {
        "original_header": "Note for using with PeakView SWATH data",
        "type": "Text_excerpt",
        "value": "`python reformat.py -b byonic.xlsx -p peakview_peptide.xlsx -o description_peakview.xlsx` \n"
      },
      "source": "https://raw.githubusercontent.com/bschulzlab/glypniro/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9169068710902528,
      "result": {
        "original_header": "Note for using with PeakView SWATH data",
        "type": "Text_excerpt",
        "value": "`python reformat.py -b byonic.xlsx -p peakview_peptide.xlsx -o description_peakview.xlsx` \n"
      },
      "source": "https://raw.githubusercontent.com/bschulzlab/glypniro/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bschulzlab/glypniro/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Toan Phung\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/bschulzlab/glypniro/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "glypniro"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bschulzlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 112731,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bschulzlab/glypniro/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "Pythons 3.4+ with the following packages installed.\n- pandas\n- requests\n- xlrd\n- openpyxl\n- scipy\n"
      },
      "source": "https://raw.githubusercontent.com/bschulzlab/glypniro/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:15:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "The program can be run from the location of the script using `python main.py`. The following parameters can be used for operating the script within the commandline.\n\n|Paremeters|Descriptions|\n|---------:|-----------:|\n|`-i`, `-input_file`|Filepath to an xlsx file describing the experiment.|\n|`-o`, `-output`|Filepath to the output xlsx file for the analysis.|\n|`-s`, `--score_cutoff`|(Optional) Default=200. Cutoff score for filtering of Byonic output|\n|`-t`, `--trust_byonic`|(Optional) Instruct the script to trust glycan position assignment and used them for area under the curve calculation.|\n|`-d`, `--debug`|(Optional) In conjunction to the final output, the script would also create debug files that contain the unique PSM selected for calculation of the data in the final output.|\n|`-p`, `--parse_uniprot`|(Optional) Attempt to parse UniProt accession ID using regular expression and use them as master id.|\n|`-g`, `--get_uniprot`|(Optional)Using the `requests` module to access and parse protein name from uniprot accession ids of the proteins of those within the dataset.|\n"
      },
      "source": "https://raw.githubusercontent.com/bschulzlab/glypniro/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input file format",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The input file used in the `-i` parameter should have the following format.\n\nEx:\n|condition_id|replicate_id|filename|area_filename|\n|---------:|-----------:|---------:|-----------:|\n|Depleted_Plasma_HCC|1|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Depleted_Plasma_HCC_1.raw_Byonic.xlsx|\\data\\Depleted_Plasma_HCC_1_MSnSpectrumInfo.txt|\n|Depleted_Plasma_HCC|2|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Depleted_Plasma_HCC_2.raw_Byonic.xlsx|\\data\\Depleted_Plasma_HCC_2_MSnSpectrumInfo.txt|\n|Depleted_Plasma_HCC|3|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Depleted_Plasma_HCC_3.raw_Byonic.xlsx|\\data\\Depleted_Plasma_HCC_3_MSnSpectrumInfo.txt|\n|Depleted_Plasma_Nor|1|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Depleted_Plasma_Nor_1.raw_Byonic.xlsx|\\data\\Depleted_Plasma_Nor_1_MSnSpectrumInfo.txt|\t\n|Depleted_Plasma_Nor|2|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Depleted_Plasma_Nor_2.raw_Byonic.xlsx|\\data\\Depleted_Plasma_Nor_2_MSnSpectrumInfo.txt|\t\n|Depleted_Plasma_Nor|3|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Depleted_Plasma_Nor_3.raw_Byonic.xlsx|\\data\\Depleted_Plasma_Nor_3_MSnSpectrumInfo.txt|\t\n|Non_Depleted_Plasma_HCC|1|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Non_Depleted_Plasma_HCC_1.raw_Byonic.xlsx|\\data\\Non_Depleted_Plasma_HCC_1_MSnSpectrumInfo.txt|\t\n|Non_Depleted_Plasma_HCC|2|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Non_Depleted_Plasma_HCC_2.raw_Byonic.xlsx|\\data\\Non_Depleted_Plasma_HCC_2_MSnSpectrumInfo.txt|\n|Non_Depleted_Plasma_HCC|3|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Non_Depleted_Plasma_HCC_3.raw_Byonic.xlsx|\\data\\Non_Depleted_Plasma_HCC_3_MSnSpectrumInfo.txt|\t\n|Non_Depleted_Plasma_Nor|1|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Non_Depleted_Plasma_Nor_1.raw_Byonic.xlsx|\\data\\Non_Depleted_Plasma_Nor_1_MSnSpectrumInfo.txt|\n|Non_Depleted_Plasma_Nor|2|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Non_Depleted_Plasma_Nor_2.raw_Byonic.xlsx|\\data\\Non_Depleted_Plasma_Nor_2_MSnSpectrumInfo.txt|\t\n|Non_Depleted_Plasma_Nor|3|\\data\\NoMutliFuc_Nlink_10_20ppm_05Da_Non_Depleted_Plasma_Nor_3.raw_Byonic.xlsx|\\data\\Non_Depleted_Plasma_Nor_3_MSnSpectrumInfo.txt|\n\nThe rows within the input file should not have to follow any particular order however the columns have to contain the necessary content:\n- `condition_id` condition label of the experiment\n- `replicate_id` replicate label for the experiment\n- `filename` filepath to the Byonic .xlsx output file of the experiment.\n- `area_filename` filepath to the PD tabulated output file of the experiment.\n"
      },
      "source": "https://raw.githubusercontent.com/bschulzlab/glypniro/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "type": "Text_excerpt",
        "value": "`python main.py -i test_experiment.xlsx -o test_output.xlsx -t -g`\n\nThe above command would instruct the script to use the `test_experiment.xlsx` file as input file and output as `test_output.xlsx`. \nInclusion of `-t` would mean that we trust Byonic assignment of glycan position and shall use them for calculation of that specific glycoform AUC within the proteins.\nInclusion of `-g` would instruct the script to connect to the UniProt online database and attempt to parse protein name from the UniProt accession id contain in the protein name within the Byonic file.\n\n`python main.py -i test_experiment.xlsx -o test_output.xlsx`\n\nThe above command would instruct the script to use the `test_experiment.xlsx` file as input file and output as `test_output.xlsx`.\nWithout `-t` optional parameter, we only use the information of what glycans were found but not assigning them any positions. The AUC will only be combined for those PSMs with the same peptide sequence and glycan combination.\n"
      },
      "source": "https://raw.githubusercontent.com/bschulzlab/glypniro/master/README.md",
      "technique": "header_analysis"
    }
  ]
}