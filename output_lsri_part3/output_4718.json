{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "\ncitHeader(\"If you use DAMEfinder in published research, please cite the following paper:\")\n\ncitEntry(entry=\"Article\",\n         title = \"DAMEfinder: a method to detect differential allele-specific methylation\",\n         author = personList(as.person(\"Stephany Orjuela\"), \n                             as.person(\"Dania Machlab\") , \n                             as.person(\"Mirco Menigatti\") , \n                             as.person(\"Giancarlo Marra\") , \n                             as.person(\"Mark D. Robinson\")\n                             ),\n         year = \"2020\",\n         journal = \"Epigenetics & Chromatin\",\n         volume = \"13\",\n         number = \"25\",\n         doi = \"https://doi.org/10.1186/s13072-020-00346-8\",\n         textVersion = \"Orjuela, S., Machlab, D., Menigatti, M. et al. DAMEfinder: a method to detect differential allele-specific methylation. Epigenetics & Chromatin 13, 25 (2020).\"\n)"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/inst/CITATION",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/markrobinsonuzh/DAMEfinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-12-07T21:44:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-14T11:00:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Finds DAMEs - Differential Allelicly MEthylated regions"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9435225855618934,
      "result": {
        "original_header": "DAMEfinder <img src=\"inst/figures/damefindersticker.png\" width=\"200\" align=\"right\" />",
        "type": "Text_excerpt",
        "value": "**DAMEfinder** (**D**ifferential **A**llele-specific **ME**thylation **finder**) is an R-package that detects allele-specific methylation (ASM) in a cohort of samples, and detects regions of differential ASM within groups of interest, based on **Bisulfite-sequencing** files. \nDAMEfinder runs in two modes: **SNP-based** (exhaustive-mode) and **tuple-based** (fast-mode), which converge when calculating differential methylation. \n"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9158503577935494,
      "result": {
        "original_header": "What mode should I choose?",
        "type": "Text_excerpt",
        "value": "It depends on what you want to do and how much time you have. Either way you have to align your reads with [Bismark](https://github.com/FelixKrueger/Bismark) (apologies to other-aligner users).\n \n"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9506615105311698,
      "result": {
        "original_header": "How do I install it?",
        "type": "Text_excerpt",
        "value": "To run the **SNP-based** mode you need processed `bam` files *AND* a VCF file for each of your samples with heterozygous SNPs. I know this is typically not the case, so you could alternatively extract heterozygous SNPs using [BisSNP](https://github.com/dnaase/Bis-tools/tree/master/Bis-SNP) (which I have used), or [biscuit](https://github.com/zwdzwd/biscuit). \nI call this the \"exhaustive-mode\" because it extracts an ASM score for every CpG site in the reads containing each SNP from the VCF file. Based on this score DAMEs are detected. \n"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9736691533947963,
      "result": {
        "original_header": "SNP-based",
        "type": "Text_excerpt",
        "value": "From a biological point of view, you might want to run this mode if you are interested in loss or gain of allele-specificity linked to somatic heterozygous SNPs. More specifically, you could detect genes that exhibit loss of imprinting (e.g. [in colorectal cancer](http://cancerres.aacrjournals.org/content/62/22/6442.long)).\n \n"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9265923071950712,
      "result": {
        "original_header": "How do I install it?",
        "type": "Text_excerpt",
        "value": "I call this the fast-mode because you don't need SNP information. The assumption is that intermediate levels of methylation represent ASM along the genome. For example, we have shown that the ASM score can distinguish females from males in the X chromosome. Using SNP information this wouldn't be possible. \n1. **SNP-based** ASM is sequence dependent, therefore to draw ASM I split the reads (horizontal lines) by allele, a bit like this: \nThis is a (not so great) example of differential SNP-ASM. There is gain of ASM in CR-cancer tissue (CRC2_cimp). The reads shown are a random subset of the total. You could plot all the reads if you like. \nThe actual ASM scores in this region, as well as the methylation level per allele for several samples looks like this: \nWe can look at the tuple ASM scores in the same region as above, as well as the overall methylation (beta-values) for several samples: \n"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/markrobinsonuzh/DAMEfinder/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/markrobinsonuzh/DAMEfinder/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "markrobinsonuzh/DAMEfinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DAMEfinder "
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/inst/figures/damefindersticker.png"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://bioconductor.org/shields/build/devel/bioc/DAMEfinder.svg"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/inst/figures/DAMEfinder_workflow.png"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/inst/figures/DAME_snp_sampledreads.png"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/inst/figures/DAME_snp_allsamps.png"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/inst/figures/DAME_snp_allsamps_median.png"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/inst/figures/DAME_tuple_allsamps_median.png"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How do I install it?",
        "parent_header": [
          "DAMEfinder <img src=\"inst/figures/damefindersticker.png\" width=\"200\" align=\"right\" />"
        ],
        "type": "Text_excerpt",
        "value": "A stable version of DAMEfinder is available on Bioconductor.\n\nTo install use:\n\n```{r}\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"DAMEfinder\")\n```\n\nOr install directly from the repo:\n\n```{r}\nBiocManager::install(\"markrobinsonuzh/DAMEfinder\")\n\n```\n---\n\n## What mode should I choose?\n\nIt depends on what you want to do and how much time you have. Either way you have to align your reads with [Bismark](https://github.com/FelixKrueger/Bismark) (apologies to other-aligner users).\n\n### SNP-based\n\nTo run the **SNP-based** mode you need processed `bam` files *AND* a VCF file for each of your samples with heterozygous SNPs. I know this is typically not the case, so you could alternatively extract heterozygous SNPs using [BisSNP](https://github.com/dnaase/Bis-tools/tree/master/Bis-SNP) (which I have used), or [biscuit](https://github.com/zwdzwd/biscuit).\n\nI call this the \"exhaustive-mode\" because it extracts an ASM score for every CpG site in the reads containing each SNP from the VCF file. Based on this score DAMEs are detected.\n\nFrom a biological point of view, you might want to run this mode if you are interested in loss or gain of allele-specificity linked to somatic heterozygous SNPs. More specifically, you could detect genes that exhibit loss of imprinting (e.g. [in colorectal cancer](http://cancerres.aacrjournals.org/content/62/22/6442.long)).\n\n### tuple-based\n\nTo run the **tuple-based** mode you have to run [methtuple](https://github.com/PeteHaitch/methtuple) first. The methtuple output is the only thing needed for this mode. \n\nI call this the fast-mode because you don't need SNP information. The assumption is that intermediate levels of methylation represent ASM along the genome. For example, we have shown that the ASM score can distinguish females from males in the X chromosome. Using SNP information this wouldn't be possible.\n\n---\n\n### What does that look like?\n\n1. **SNP-based** ASM is sequence dependent, therefore to draw ASM I split the reads (horizontal lines) by allele, a bit like this:\n\n<img src=\"inst/figures/DAME_snp_sampledreads.png\" width=\"550\">\n\nThis is a (not so great) example of differential SNP-ASM. There is gain of ASM in CR-cancer tissue (CRC2_cimp). The reads shown are a random subset of the total. You could plot all the reads if you like.\n\nThe actual ASM scores in this region, as well as the methylation level per allele for several samples looks like this:\n\n<img src=\"inst/figures/DAME_snp_allsamps.png\" width=\"550\">\n\nor summarized by means:\n\n<img src=\"inst/figures/DAME_snp_allsamps_median.png\" width=\"550\">\n\n2. **tuple-based** ASM only relies on the reads.\n\nWe can look at the tuple ASM scores in the same region as above, as well as the overall methylation (beta-values) for several samples:\n\n<img src=\"inst/figures/DAME_tuple_allsamps_median.png\" width=\"550\">\n\n---\n\n## Feedback\n\nIf you have problems installing, running, or just have questions regarding the package or theory behind it, please open an issue and I will answer as soon as possible. \n"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9842725340865667,
      "result": {
        "original_header": "What mode should I choose?",
        "type": "Text_excerpt",
        "value": "It depends on what you want to do and how much time you have. Either way you have to align your reads with [Bismark](https://github.com/FelixKrueger/Bismark) (apologies to other-aligner users).\n \n"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9955452177190124,
      "result": {
        "original_header": "How do I install it?",
        "type": "Text_excerpt",
        "value": "If you have problems installing, running, or just have questions regarding the package or theory behind it, please open an issue and I will answer as soon as possible. \n \n"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8074169765158009,
      "result": {
        "original_header": "How do I install it?",
        "type": "Text_excerpt",
        "value": "<img src=\"inst/figures/DAME_snp_sampledreads.png\" width=\"550\"> \n<img src=\"inst/figures/DAME_snp_allsamps.png\" width=\"550\"> \n<img src=\"inst/figures/DAME_snp_allsamps_median.png\" width=\"550\"> \n<img src=\"inst/figures/DAME_tuple_allsamps_median.png\" width=\"550\"> \n"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/markrobinsonuzh/DAMEfinder/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Stephany Orjuela\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://bioconductor.org/shields/availability/3.11/DAMEfinder.svg"
      },
      "source": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DAMEfinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "markrobinsonuzh"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 103307,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 3217,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/markrobinsonuzh/DAMEfinder/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:26:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ]
}