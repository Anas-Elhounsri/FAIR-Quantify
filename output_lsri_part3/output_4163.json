{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cellgeni/batchbench"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-14T11:49:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-18T09:43:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9996098967058872,
      "result": {
        "original_header": "BatchBench: flexible comparison of batch correction methods for single-cell RNA-seq",
        "type": "Text_excerpt",
        "value": "BatchBench is a modular and flexible pipeline for comparing batch correction methods for single-cell RNA-seq data. It performs __batch correction__ considering eight popular methods for scRNA-seq data as well as a set of downstream analysis for assessing their performance including __calculation of mixing entropy__ , __clustering analysis__, __marker genes__, and __UMAP embedding generation__.  \n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9553905848432082,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "Input to Batchbench must be an __rds__ R object of class __SingleCellExperiment__.  \nTo enable full funcitonallity the `nextflow.config` file parameters must be modified to you own case: \n1. __data_dir__: Directory containing the data. \n2. __dataset_list__: Path to a text file containing a list of the datasets to be included (including the file base name, without suffix).\n3. __batch_key__: Object metadata column containing the batch identity of each cell. \n4. __celltype_key__: Object metadata column containing the cell type identity of each cell. __Note__: in abscence of a cell type identity of cells, a numeric vector containing the cell cluster annotation can also be used. This cluster annotaion can be obtained from section ## 3. Clustering.\n5. __assay_name__: Name of the assay to perform batch correction. Default value is `logcounts`. \n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9028329861478622,
      "result": {
        "original_header": "1. data QC",
        "type": "Text_excerpt",
        "value": "BatchBench initially performs a filtering of the input dataset. This can be customized according to the parameters in the __QC_rds__ process of the `nextflow.config` file. This step performs: \n- Cell filtering: Cells including less than `min_genes` features are excluded. Additionally, cells with `batch_key` or `celltype_key` labelled as NA are removed. \n- Feature filtering: features present in less that `min_cells` cells are excluded. \n- Batch filtering: Batches representing less than `bt_thres` of the total number of cells are removed. \n- Cell type filtering: Cell types representing less than `ct_thres` per cent of the total number of cells are removed. \nIn order to disable the data QC step, the previous arguments can be stet to `0` in the `nextflow.config` file.\n \n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9398794847366436,
      "result": {
        "original_header": "3. Mixing Entropy",
        "type": "Text_excerpt",
        "value": "We compute Shannon entropy as an indicator of the degree of mixing of the data before and after batch correction. The batch corrected output is converted into a cell k-Nearest Neighbour graph, and then for each cell entropy is calculated considering its Batch and Cell type identity. This results in: \n- __Batch Entropy__: quantifies the degree of merging of the batches before and after the correction. \n- __Cell type Entropy__: quantifies the degree of mixing of different cell populations before and after the correction.  \n    \nAn ideal batch correction should result a high batch entropy and low cell type entropy, indicating alignment of batches while maintaining different cell types separate.  \nThe output is a csv file with the Batch Entropy and Cell type Entropy for each cell: \n```\n\"\",\"batch_entropy\",\"celltype_entropy\"\n\"human1_lib1.final_cell_0001\",0.819448371872804,0.318144667641655\n\"human1_lib1.final_cell_0002\",0.932960189010999,0.333112501389628\n\"human1_lib1.final_cell_0003\",0.819448371872804,0.318144667641655\n\"human1_lib1.final_cell_0004\",0.781266804259214,0.312771784077802\n ```\nEntropy files for each of the batch correction methods selected, as well as for the uncorrected data are published in the `Entropy/` subdirectory within the results directory. \nParameters for the mixing entropy computation can be edited in the __entropy__ entry of the `nextflow.config` file. \n \n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9665739224288021,
      "result": {
        "original_header": "4. Clustering analysis",
        "type": "Text_excerpt",
        "value": "To assess the effect of batch correction on clustering analysis, we apply five unsupervised clustering methods to the batch corrected data:  \n1. [__Leiden__](https://www.nature.com/articles/s41598-019-41695-z)\n2. [__Louvain__](https://iopscience.iop.org/article/10.1088/1742-5468/2008/10/P10008) \n3. [__SC3__](https://www.nature.com/articles/nmeth.4236) \n4. [__RaceID__](https://www.nature.com/articles/nature14966) \n5. [__Hierarchical clustering__] \nThe cell cluster annotation for each of the clustering algorithms for each of the batch correction methods is stored in a csv file located in the `Clustering/` subdirectory within the results directory: \n```\n\"\",\"cluster\"\n\"human1_lib1.final_cell_0001\",\"7\"\n\"human1_lib1.final_cell_0002\",\"7\"\n\"human1_lib1.final_cell_0003\",\"7\"\n\"human1_lib1.final_cell_0004\",\"7\"\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9820402144182255,
      "result": {
        "original_header": "4.1 Feature subsetting for clustering analysis",
        "type": "Text_excerpt",
        "value": "We perform our clustering analysis establishing five fractions of features: 0.05, 0.1, 0.2, 0.5, and 1.0 (all of the features) by ranking genes descendingly by their coefficient of variation.  \nThis approach considerably increases the running time of the pipeline, since the clustering step is run 5 times. In order to avoid feature selection prior to clustering, one can modify the `PROP_GENES` channel in line 68 of `main.nf` file to only include 100% of input features like: `PROP_GENES = Channel.from(1)`. Equivalently, if you want to consider different feature fractions from those default, one can do: `PROP_GENES = Channel.from(0.1, 0.2, 0.3)`.  \n__Note___ this feature selection won't applied to BBKNN, Harmony and FastMNN batch correction methods since they do not operate in the gene space.\n \n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9704311538765052,
      "result": {
        "original_header": "5. Marker gene analysis",
        "type": "Text_excerpt",
        "value": "To further assess the effect of batch correction over downstream analysis, we perform a marker gene analysis. We compute marker genes for each of the cell types in the dataset considering: the whole dataset and each of the batches composing the dataset.  \nOur underlying hypothesis is that if the batch correction process has approached the batches, the marker genes found in each of these should be more similar to the ones found in the whole dataset. In our case, this similarity was calculated with the Jaccard Index metric.  \nThe output is an rds object with the structure: `merged_dataset`, `Batch_A`, `Batch_B`, ..., `Batch_N`, where each of these is a list of marker gene dataframes for each of the cell types of the dataset (as defined by `celltype_key`. __Note:__ if a cell cluster annotation vector is provided in `celltype_key` the marker genes will be computed equivalently, on a per-cluster basis. \n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9585208636193006,
      "result": {
        "original_header": "6. UMAP Embedding",
        "type": "Text_excerpt",
        "value": "In order to visualize the batch correction we generate a  __UMAP embedding__ with the output of each of the methods. The batch corrected outputs are Python and R objects, this is why, to ensure reproducibility in the UMAP coordinates calculation, all objects are converted to __h5ad__ format (Python) and then UMAP is computed thorugh scanpy function `sc.tl.umap`. \nThe output is CSV file with the UMAP coordinates of each cell, and can be found in the `UMAP/` subdirectory within the results directory. \n```\n,UMAP_1,UMAP_2\nhuman1_lib1.final_cell_0001,-2.1425686,3.838006\nhuman1_lib1.final_cell_0002,-2.4662907,3.6042838\nhuman1_lib1.final_cell_0003,-1.5784191,3.1411119\nhuman1_lib1.final_cell_0004,-2.2281802,3.3420012\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8951907679166834,
      "result": {
        "original_header": "7. Object conversion",
        "type": "Text_excerpt",
        "value": "As a result of the multiple object type conversions ocurred during the pipeline, dataset objects for each of the batch correction outputs can be found format: \n1. __SingleCellExperiment__ (rds object, R)\n2. __Seurat__ (rds object, R)\n3. __AnnData__ (h5ad object, Python) \n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cellgeni/batchbench/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cellgeni/batchbench/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cellgeni/batchbench"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BatchBench: flexible comparison of batch correction methods for single-cell RNA-seq"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cellgeni/batchbench/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cellgeni/batchbench/master/run_batchbench.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.8094775129158448,
      "result": {
        "original_header": "4.1 Feature subsetting for clustering analysis",
        "type": "Text_excerpt",
        "value": "This approach considerably increases the running time of the pipeline, since the clustering step is run 5 times. In order to avoid feature selection prior to clustering, one can modify the `PROP_GENES` channel in line 68 of `main.nf` file to only include 100% of input features like: `PROP_GENES = Channel.from(1)`. Equivalently, if you want to consider different feature fractions from those default, one can do: `PROP_GENES = Channel.from(0.1, 0.2, 0.3)`.  \n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cellgeni/batchbench/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Cellular Genetics Informatics\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "batchbench"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "cellgeni"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 74772,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Groovy",
        "size": 26438,
        "type": "Programming_language",
        "value": "Groovy"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 16705,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 2947,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1470,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 368,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run BatchBench",
        "parent_header": [
          "BatchBench: flexible comparison of batch correction methods for single-cell RNA-seq"
        ],
        "type": "Text_excerpt",
        "value": "The pieline is run through the bash script `run_batchbench.sh`. \n\nIn this script you can specify the source directory for running the pipeline (__source_dir__), and the nextflow report directory (__report_dir__) where nextflow execution reporst will be saved. Additionally, the `-resume` option allows for the continuation of a workflow execution. \n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:23:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 46
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "8. Nextflow reports",
        "parent_header": [
          "BatchBench: flexible comparison of batch correction methods for single-cell RNA-seq",
          "Workflow structure"
        ],
        "type": "Text_excerpt",
        "value": "Nextflow generates a series of execution reports which contain useful information: \n\n- __HTML report__: a single document which includes many useful metrics about a workflow execution including __resource usage__ or __execution time__ for each process. \n- __Trace report__: an execution tracing file that contains some useful information about each process executed in your pipeline script, including: submission time, start time, completion time, cpu and memory used. \n- __Timeline report__:  HTML timeline for all processes executed in your pipeline\n\nThes files are located in the __reports/__ directory.  \n\n"
      },
      "source": "https://raw.githubusercontent.com/cellgeni/batchbench/master/README.md",
      "technique": "header_analysis"
    }
  ]
}