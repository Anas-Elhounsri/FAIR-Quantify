{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgement",
        "type": "Text_excerpt",
        "value": "interARTIC is a layer built on top of the [ARTIC pipeline](https://github.com/artic-network/artic-ncov2019). Binary releases of interARTIC contain:\n1. [Python 3.7 binaries](https://github.com/indygreg/python-build-standalone) (build: [cpython-3.7.7-linux64-20200409T0045](https://github.com/indygreg/python-build-standalone/releases/download/20200408/cpython-3.7.7-linux64-20200409T0045.tar.zst)) and several Python 3.7 modules available through *pypi* (e.g., [celery](https://pypi.org/project/celery/), [redis](https://pypi.org/project/redis/), [flask](https://pypi.org/project/Flask/), [redis-server](https://pypi.org/project/redis-server/))\n3. [ARTIC pipeline binaries](https://bioconda.github.io/recipes/artic/README.html) available through bioconda that includes many dependencies (e.g., Python 3.6, medaka, nanopolish)\n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Ferguson, James M and Gamaarachchi, Hasindu and Nguyen, Thanh and Gollon, Alyne and Tong, Stephanie and Aquilina-Reid, Chiara and Bowen-James, Rachel and Deveson, Ira W",
        "format": "bibtex",
        "title": "InterARTIC: an interactive web application for whole-genome nanopore sequencing analysis of SARS-CoV-2 and other viruses",
        "type": "Text_excerpt",
        "value": "@article{ferguson2022interartic,\n    publisher = {Oxford University Press},\n    year = {2022},\n    pages = {1443--1446},\n    number = {5},\n    volume = {38},\n    journal = {Bioinformatics},\n    author = {Ferguson, James M and Gamaarachchi, Hasindu and Nguyen, Thanh and Gollon, Alyne and Tong, Stephanie and Aquilina-Reid, Chiara and Bowen-James, Rachel and Deveson, Ira W},\n    title = {InterARTIC: an interactive web application for whole-genome nanopore sequencing analysis of SARS-CoV-2 and other viruses},\n}"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Psy-Fer/interARTIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-05T03:01:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-12-12T14:21:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "InterARTIC - An interactive local web application for viral whole genome sequencing utilising the artic network pipelines.. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9996088378106252,
      "result": {
        "original_header": "InterARTIC",
        "type": "Text_excerpt",
        "value": "InterARTIC is an interactive web application designed to simplify the use of the [ARTIC bioinformatics pipelines](https://github.com/artic-network/artic-ncov2019) for nanopore sequencing analysis of viral genomes. InterARTIC was initally designed and tested for analysis of SARS-CoV-2, but is suitable for analysis of any virus and/or amplicon scheme, including a user's own custom amplicons. InterARTIC supports both the Nanopolish and Medaka pipeline alternatives from ARTIC, with parameter customisation enabled through a simple graphical interface. \n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9629454380486968,
      "result": {
        "type": "Text_excerpt",
        "value": "> James M Ferguson, Hasindu Gamaarachchi, Thanh Nguyen, Alyne Gollon, Stephanie Tong, Chiara Aquilina-Reid, Rachel Bowen-James, Ira W Deveson, InterARTIC: an interactive web application for whole-genome nanopore sequencing analysis of SARS-CoV-2 and other viruses, Bioinformatics, Volume 38, Issue 5, March 2022, Pages 1443\u20131446, https://doi.org/10.1093/bioinformatics/btab846 \n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9762135016797536,
      "result": {
        "original_header": "Building from source",
        "type": "Text_excerpt",
        "value": "Building from source is not straightforward, due to the dependency hell of Python versions (circumventing this hell was one of the motivations for developing interARTIC). Step-by-step instructions for building from source are given [here](https://psy-fer.github.io/interARTIC/installation/). Any one who wants to build a docker image for interARTIC can do so by following instructions [here](https://psy-fer.github.io/interARTIC/installation/#installation-using-docker), though it is highly redundant.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9514299071824255,
      "result": {
        "original_header": "Snake Charming",
        "type": "Text_excerpt",
        "value": "Developers interested in learning how we create portable binary releases, read our packaging steps (aka the art of snake charming) detailed [here](https://psy-fer.github.io/interARTIC/snakeballing).\n \n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Psy-Fer/interARTIC/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2: Downloading test dataset",
        "parent_header": [
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "Open a new terminal to download and extract the [example test dataset](https://seq.bioinf.science/interartic-corona). The commands below will extract the dataset to */data*, assuming */data* exists on the computer (`sudo mkdir /data`, if not) and you have write permission to */data* (`sudo chmod 777 /data`, if not). The */data* folder is the default location for sequencing outputs on an ONT GridION or PromethION device, but on your own machine you may use a custom location such as */home/username/data* if you wish (hint: you may use the `pwd` command on your terminal to get the path of your current working directory).\n\n```bash\ncd /data\nwget https://seq.bioinf.science/interartic-corona -O FLFL031920_sample_data.tar.gz\n#if you do not have wget: curl -o FLFL031920_sample_data.tar.gz -L https://seq.bioinf.science/interartic-corona\ntar xf FLFL031920_sample_data.tar.gz\nrm FLFL031920_sample_data.tar.gz\n```\n\nOnce extracted, you should see two directories:\n1. *FLFL031920* containing data from a nanopore sequencing run of 10 multiplexed SARS-CoV-2 isolates, performed on an ONT GridION. The *.fast5* files, *.fastq* files and the sequencing summary file are among the extracted data. This example dataset follows the same directory structure of a nanopore sequencing run with live base-calling enabled.\n2. *sample-barcodes* containing a *.csv* manifest file that matches sample names to sample barcodes.\n\nFor detailed information on the input data structure and *.csv* manifest file, please visit the InterARTIC usage guide [here](https://psy-fer.github.io/interARTIC/usage/).\n\n**IMPORTANT: Make sure the the data directory and file names do not contain white space.**\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Psy-Fer/interARTIC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Psy-Fer/interARTIC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Psy-Fer/interARTIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "InterARTIC"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/run_mac.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/run-dev.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/run-redis.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Psy-Fer/interARTIC//master/docs/homepage.svg"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Psy-Fer/interARTIC//master/docs/params.svg"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation from Source\n\n[TOC]\n\nThis page has the instructions to build interARTIC from the source, which is tedious. If your system is a common Linux distribution (including Windows Subsystem for Linux) or even macOS, follow the steps [here](https://github.com/Psy-Fer/interARTIC#quick-start) to easily install interARTIC using pre-compiled binaries.\n\n## Dependencies\n\n* Python 3.7 or above\n* Celery v4.4.6 (cliffs)\n* Redis Server v6.0.5\n* Artic 1.2.1 (Miniconda required for Artic installation)\n\n## Opening terminal\n\nYour operating system's command line will be used to install the dependencies and start interARTIC.\n\n* For Mac OS: Type \u201cterminal\u201d into your spotlight search, then hit Return.\n* For Windows: Type \u201cUbuntu\u201d into your search bar in the Start menu, then hit Enter (you need to have an Ubuntu distribution installed via Windows Subsystem for Linux. See [here](https://linuxhint.com/install_ubuntu_windows_10_wsl/) for steps.\n* For Linux: Enter the keyboard shortcut: `Ctrl`+`Alt`+`T`.\n\nIf these instructions don't work on your operating system, google how to open command line on your operating system and software version.\n\n## Installing Python and pip\n\nIn order to use interARTIC, you\u2019ll need Python and its package manager pip installed on your system. Python and associated libraries have limited compatibility across different versions and thus we recommend using a Python 3.7 virtual environment.\n\n### Linux users (distributions supporting apt)\n\nIf you are a Linux user using a distribution that supports `apt`, you may follow the commands below to install Python 3.7:\n```\nsudo add-apt-repository ppa:deadsnakes/ppa\nsudo apt-get update\nsudo apt install python3.7 python3.7-dev python3.7-venv\n```\nNow create a Python virtual environment called interARTIC-venv, activate it and upgrade pip:\n\n```\npython3.7 -m venv interARTIC-venv\nsource interARTIC-venv/bin/activate\npip install --upgrade pip\n```\n\n\n### Other operating system users\n\nCheck if Python and Pip are already installed by entering the following into your command prompt:\n\n```\npython --version\t# or this can be python3 --version\npip --version\t\t# or this can be pip3 --version\n```\n\nIf Python is not installed, follow [this link](https://www.python.org/downloads/) and follow the instructions there.\n\n* This application uses `Python3` as the default, not `Python2`.\n\nIf you have just installed Python, it will likely have also installed pip. Check that it is installed.\n\n```\npip --version\n```\n\nIf pip is not installed, follow [this link](https://pip.pypa.io/en/stable/installing/) and follow the prompts there.\n\nNow create a Python virtual environment called interARTIC-venv, activate it and upgrade pip:\n\n```\npython -m venv interARTIC-venv\nsource interARTIC-venv/bin/activate\npip install --upgrade pip\n```\n\n## Installing Python packages for Redis, Celery and Flask\n\nTo install the Python packages for Redis, Celery, Flask and Pandas enter the following into your command prompt (make sure you have activated the interARTIC-venv virtual environment created above):\n\n```\npip install celery==4.4.6 redis==3.5.3 flask==1.1.2 pandas==1.2.4\n```\n\n## Installing the ARTIC pipeline environment\n\nThe ARTIC pipeline has to be installed via conda.\n\nIf you do not have conda installed, we suggest installing miniconda.\nThe miniconda installation guide can be found [here](https://docs.conda.io/en/latest/miniconda.html)\nWe suggest you follow the 'Regular Installation' process.\n\nAfter installing conda, enter the following into your command prompt to install ARTIC:\n\n```\ngit clone https://github.com/artic-network/artic-ncov2019.git\ncd artic-ncov2019 && git checkout 7e359dae37d894b40ae7e35c3582f14244ef4d36\nconda env remove -n artic-ncov2019\nconda env create -f environment.yml\n```\n\nConda will download half of the Internet (pun intended!) so wait patiently.\nAfter installation completes, run the following command and verify artic is installed.\n\n```\nconda activate artic-ncov2019\nartic --version\nconda deactivate\n```\n\n\n### Trouble installing Artic?\n\nFollow [this link](https://artic.readthedocs.io/en/latest/installation/) to access the documentation for installing Artic.\n\n\n## Installing interARTIC\n\nClone the repository from github by entering the following commands into your terminal.\n\n```\ngit clone https://github.com/Psy-Fer/interARTIC.git\ncd interARTIC\n```\n\n## Installing the Redis Server\n\nTo locally build the redis server and do a test launch, enter the following into your command prompt in your interARTIC base folder:\n\n```\n./run-redis.sh 7777\n```\n\nExit the redis server by pressing ctrl+c now. Now close the terminal.\n\nAlternatively, you can follow [this link](https://redis.io/topics/quickstart) to install the Redis Server manually.\n\n\n## Launching interARTIC\n\nNow launch a new terminal and activate the interARTIC-venv virtual environment we created above by calling `source interARTIC-venv/bin/activate`.  interARTIC can be launched by running the provided `run-dev.sh` script (see Automatic launch below). If something goes wrong, follow the steps under Manual launch below.\n\n### Automatic launch\n\nTo start interARTIC, navigate to the directory where the interARTIC repository was cloned and enter the following command into your command prompt:\n\n```\n./run-dev.sh\n```\n\n### Manual launch\n\n1. Take a new terminal, and run redis on port 7777.\n\n```\ncd interARTIC\n./run-redis.sh 7777\n```\n2. Take another new terminal, activate the interARTIC-venv virtual environment we created above and run interARTIC main script.\n\n```\nsource interARTIC-venv/bin/activate\ncd interARTIC\npython3 main.py 7777\n```\n\n3. Take another new terminal, activate the interARTIC-venv virtual environment followed by the ARTIC conda environment and run celery.\n\n```\nsource interARTIC-venv/bin/activate\ncd interARTIC\nconda activate artic-ncov2019; celery worker -A main.celery -b redis://localhost:7777/0 --result-backend redis://localhost:7777/0 --concurrency=1 --loglevel=info\n```\n\n\n### Job Concurrency\n\nBy default, job concurrency is turned off and the automatic and manual launches will allow one job to be run at a time.\n\nIf you wish to **turn concurrency on** and run multiple jobs at a time, then please follow the steps under Manual launch above except that now you should not pass `--concurrency=1` to celery. Alternatively you can increase concurrency to the desired upper limit of concurrent jobs you would like. eg, `--concurrency=4` for 4 jobs\n\n## Launching interARTIC web interface\n\nNavigate to your browser and follow [this link](http://127.0.0.1:5000) to access interARTIC.\n\n\n# Installation using Docker\n\n```\ngit clone https://github.com/Psy-Fer/interARTIC\ncd interARTIC\ndocker build - < Dockerfile\ndocker run -p 5000:5000  -v /path/to/local/data/data/:/data/ <image_id>\n```\n\n\n<!--\nOn any text editor, open ```config.init```. Update each of the configurations as necessary. All inputs should be file paths. More information about this can be found in the next section.\n\n<!--\nThe default config folder is as below:\n\n```\n{\n\t\"data-folder\": \"/data\",\n\t\"sample-barcode-csvs\": \"/data/sample-barcodes\",\n\t\"eden-primer-scheme-folder\": \"/data/primer_schemes_eden\",\n\t\"eden-scheme-name\": \"nCoV-2019/V1\",\n\t\"artic-primer-scheme-folder\": \"/data/primer_schemes\",\n\t\"artic-scheme-name\": \"nCoV-2019/V1\"\n}\n```\n\n* **data-folder**: This is the folder where all your data is located. By default, it is set to \"/data\"\n* **sample-barcode-csvs**: This is the folder where your csv containing barcode names is placed.\n* **eden-primer-scheme-folder**: This is the folder containing, for example, the folder nCoV-2019 which contains the V1, V2, etc folders.\n* **eden-scheme-name**: This is the name of the eden primer scheme being used for your nanopore sequencing run.\n* **artic-primer-scheme-folder**: This is the folder containing, for example, the folder nCoV-2019 which contains the V1, V2, etc folders.\n* **artic-scheme-name**: This is the name of the artic primer scheme being used for your nanopore sequencing run.\n\nAfter you update your config file, close main.py and rerun it as below:\n\n```\nCTRL + C\npython3 main.py\n```\n\n\n####  File path input\n\n* Folders and files should be inputted by their file paths.\n* File paths can be retrieved by running 'pwd' in the appropriate folder on any terminal.\n* Folders may also be referred to as directories.\n* File paths should start with \u201c/\u201d (Mac or Linux) or \u201cC:\\\u201d (Windows). If you have not worked with navigating folders and files in the terminal before, take a look at this [resource](https://www.earthdatascience.org/courses/intro-to-earth-data-science/python-code-fundamentals/work-with-files-directories-paths-in-python/).\n\nFor example:\n\n```\n$ pwd                                    # get file path of current directory\n/Users/YOURNAME\n$ ls                                     # list contents of current directory\nfolder1     folder2     file1       documents\n$ cd documents                           # change current directory to documents\n$ pwd\n/Users/YOURNAME/documents\n$ cd outputFolder                         # change current directory to your output folder\n\n$ pwd                                    # obtain file path you will input into interARTIC\n/Users/YOURNAME/documents/outputFolder\n```\nNote: your input folder may not be located in documents folder. Simply navigate, using these commands, to inside your input folder and obtain the file path.\n-->\n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/docs/installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1: Streamlined installation of InterARTIC",
        "parent_header": [
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "Pre-compiled binary releases are provided for Linux and MacOS for easy setup. The linux binaries can be run on Windows using [Windows Subsystem for Linux (WSL)](https://www.windowscentral.com/install-windows-subsystem-linux-windows-10). Download the [latest release](https://github.com/Psy-Fer/interARTIC/releases/latest) for your operating system and architecture, extract the tar ball and run the provided *run.sh* script by following the instructions below.\n\n\n* Linux/Windows\n\n  We provide a pre-compiled binary release for common Linux distributions on both _x86_64_ and _aarch64_ (_ARMv8_) architectures.\n\n  - *x86_64*: Binaries for _x86_64_ should work on any Linux distribution as long as *GLIBC 2.17* (and basic shared libraries such as *pthreads*) or higher and `/usr/bin/env` are present. We have tested on Ubuntu (versions 14, 16, 18 and 20), CentOS, Debian, Fedora, Arch Linux, Gentoo Linux and openSUSE. These binaries are also verified to work on Windows 10 through Windows Subsystem for Linux. Open a bash terminal and execute the following commands:\n\n    ```bash\n    wget https://github.com/Psy-Fer/interARTIC/releases/download/v0.4.4/interartic-v0.4.4-linux-x86-64-binaries.tar.gz -O interartic_bin.tar.gz\n    tar xf interartic_bin.tar.gz\n    cd interartic_bin\n    ./run.sh\n    ```\n\n  - *aarch64*: Binaries for aarch64 should work on any Linux distribution with *GLIBC 2.23* or higher. Currently, only the nanopolish pipeline is available for _aarch64_ and we have tested on Ubuntu 16 and Ubuntu 18.04 (using Rock64, Jetson Xavier and Jetson Nano single board computers).  For aarch64, run the same commands as above except the *wget* command, that should be now replaced with:\n\n    ```\n    wget https://github.com/Psy-Fer/interARTIC/releases/download/v0.4.4/interartic-v0.4.4-linux-aarch64-binaries.tar.gz -O interartic_bin.tar.gz\n\n    ```\n\n\n* macOS\n\n  We provide a pre-compiled binary release for macOS on x86_64. Newer mac with M1 ARM chip can still run these binaries opaquely through Rosetta. Open a terminal and execute the following commands:\n\n  ```bash\n  curl https://github.com/Psy-Fer/interARTIC/releases/download/v0.4.4/interartic-v0.4.4-macos-x86-64-binaries.tar.gz -o interartic_bin.tar.gz -L\n  xattr -dr com.apple.quarantine interartic_bin.tar.gz  #to prevent the macOS's gatekeeper from blocking our binaries, required if you download through a web browser, but just in case\n  tar xf interartic_bin.tar.gz\n  cd interartic_bin\n  ./run.sh\n  ```\n\n**IMPORTANT: Make sure the interARTIC binaries reside at a location with no white space characters.**\n\nThe *run.sh* script has now launched a new interactive interARTIC session. To see your session, visit [http://127.0.0.1:5000](http://127.0.0.1:5000) on your web browser. Here, you can configure and run your next job using the graphical interface. Make sure you keep the terminal open to keep your interARTIC session running.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999982998008037,
      "result": {
        "original_header": "Building from source",
        "type": "Text_excerpt",
        "value": "Building from source is not straightforward, due to the dependency hell of Python versions (circumventing this hell was one of the motivations for developing interARTIC). Step-by-step instructions for building from source are given [here](https://psy-fer.github.io/interARTIC/installation/). Any one who wants to build a docker image for interARTIC can do so by following instructions [here](https://psy-fer.github.io/interARTIC/installation/#installation-using-docker), though it is highly redundant.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999841869216661,
      "result": {
        "original_header": "Updating interARTIC",
        "type": "Text_excerpt",
        "value": "To update interARTIC to the latest version, simply delete the directory containing the old interARTIC binaries and obtain the latest version by following the same steps under setting up above.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Psy-Fer/interARTIC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "artic-bioinformatics-platform, covid19, genomics, nanopore"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Thanh Nguyen\nCopyright (c) 2021 Stephanie Tong\nCopyright (c) 2021 Alyne Gollon\nCopyright (c) 2021 Chiara Aquilina-Reid\nCopyright (c) 2021 Rachel Bowen-James\nCopyright (c) 2021 Hasindu Gamaarachchi\nCopyright (c) 2021 James Ferguson\nCopyright (c) 2021 Ira Deveson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "interARTIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Psy-Fer"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 244410,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 190612,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 152654,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 11169,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 7724,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 299,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-11-25T02:55:59Z",
        "date_published": "2021-11-25T02:58:49Z",
        "description": "## Commits\r\n- fa0bce5: update rapid kit warning (James Ferguson)\r\n- c6f156c: bump version to 0.4.4 (Hasindu Gamaarachchi)",
        "html_url": "https://github.com/Psy-Fer/interARTIC/releases/tag/v0.4.4",
        "name": "interartic-v0.4.4",
        "release_id": 54042001,
        "tag": "v0.4.4",
        "tarball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/tarball/v0.4.4",
        "type": "Release",
        "url": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/54042001",
        "value": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/54042001",
        "zipball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/zipball/v0.4.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-10-25T05:26:27Z",
        "date_published": "2021-10-25T05:29:43Z",
        "description": "## Commits\r\n- 9badb6b: handle gzip fastqs (Psy-Fer)\r\n- a3efdbf: Update README.md (Hasindu Gamaarachchi)\r\n- 1f6dfbf: Added warning for rapid kit (Psy-Fer)\r\n- 4f60b62: version bump 0.4.3 (Psy-Fer)\r\n- ec3de66: updated version in README (Hasindu Gamaarachchi)\r\n- 072f8e6: updated the version in varioud other places (Hasindu Gamaarachchi)\r\n- 6503b3a: undo bad change (Psy-Fer)",
        "html_url": "https://github.com/Psy-Fer/interARTIC/releases/tag/v0.4.3",
        "name": "interartic-v0.4.3",
        "release_id": 51949391,
        "tag": "v0.4.3",
        "tarball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/tarball/v0.4.3",
        "type": "Release",
        "url": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/51949391",
        "value": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/51949391",
        "zipball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/zipball/v0.4.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-09-18T09:58:11Z",
        "date_published": "2021-09-18T10:00:45Z",
        "description": "- improve documentation\r\n- Fix for *fastq.gz guppyplex files\r\n- GitHub actions for releases now",
        "html_url": "https://github.com/Psy-Fer/interARTIC/releases/tag/v0.4.2",
        "name": "interartic-v0.4.2",
        "release_id": 49791758,
        "tag": "v0.4.2",
        "tarball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/tarball/v0.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/49791758",
        "value": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/49791758",
        "zipball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/zipball/v0.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hasindu2008",
          "type": "User"
        },
        "date_created": "2021-09-16T02:41:59Z",
        "date_published": "2021-09-16T03:43:32Z",
        "description": "- integrate fast5 vbz plugin\r\n- bug fix to QC metrics",
        "html_url": "https://github.com/Psy-Fer/interARTIC/releases/tag/v0.4.1",
        "name": "interartic-v0.4.1",
        "release_id": 49644884,
        "tag": "v0.4.1",
        "tarball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/tarball/v0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/49644884",
        "value": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/49644884",
        "zipball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/zipball/v0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hasindu2008",
          "type": "User"
        },
        "date_created": "2021-09-13T06:34:50Z",
        "date_published": "2021-09-13T06:54:23Z",
        "description": "This release of interARTIC brings content updates and bug fixes.\r\n\r\nMajor Changes:\r\n\r\n- improved error reporting\r\n- added more tooltips\r\n- QC metrics added to output page\r\n- QC metric download\r\n- Fasta file download buttons moved\r\n- download fasta files as .tar and combined fasta\r\n- enabled guppy demultiplexed samples to analysed\r\n- improved folder structure traversal\r\n- fixed matplotlib backend to use \"Agg\"\r\n- Added version info to all pages\r\n- Added detailed version checks to about page\r\n- Change abort button to success button on completion\r\n- fix output button spam bug\r\n- utf-8 compatibility added, other than space\r\n- Buttons for next and previous samples added\r\n- added how to update to about page\r\n- added offline docs linked in InterARTIC\r\n- custom scheme descriptions added to docs\r\n- artic V4 primers added\r\n- variant depth calculations improved\r\n- made compatible with more systems (macOS, Linux, Windows, ARM, M1)\r\n-  Docker containerisation\r\n",
        "html_url": "https://github.com/Psy-Fer/interARTIC/releases/tag/v0.4",
        "name": "interartic-v0.4",
        "release_id": 49432834,
        "tag": "v0.4",
        "tarball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/tarball/v0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/49432834",
        "value": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/49432834",
        "zipball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/zipball/v0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hasindu2008",
          "type": "User"
        },
        "date_created": "2021-08-02T05:15:04Z",
        "date_published": "2021-08-03T09:57:39Z",
        "description": "macOS and aarch64 beta-release for initial testing.",
        "html_url": "https://github.com/Psy-Fer/interARTIC/releases/tag/v0.4-beta",
        "name": "macOS and aarch64 beta-release",
        "release_id": 47213057,
        "tag": "v0.4-beta",
        "tarball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/tarball/v0.4-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/47213057",
        "value": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/47213057",
        "zipball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/zipball/v0.4-beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hasindu2008",
          "type": "User"
        },
        "date_created": "2021-05-06T05:37:10Z",
        "date_published": "2021-05-06T05:36:47Z",
        "description": "- new features / enhancements\r\n  - download button for consensus *fasta* file\r\n  - more tooltips\r\n  - cleaning up temporary files\r\n\r\n- bug fixes\r\n  - custom primers work now \r\n  - after a job failure, the user is forced to do an abort and restart from the beginning\r\n  - better error checking to prevent user from giving an input dataset with a wrong directory structure \r\n  - meaningful error when the sequencing summary file is not present",
        "html_url": "https://github.com/Psy-Fer/interARTIC/releases/tag/v0.3",
        "name": "interartic-v0.3",
        "release_id": 42517468,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/42517468",
        "value": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/42517468",
        "zipball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/zipball/v0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hasindu2008",
          "type": "User"
        },
        "date_created": "2021-04-20T03:58:45Z",
        "date_published": "2021-04-20T05:21:55Z",
        "html_url": "https://github.com/Psy-Fer/interARTIC/releases/tag/v0.2-beta",
        "name": "interartic-v0.2-beta",
        "release_id": 41685609,
        "tag": "v0.2-beta",
        "tarball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/tarball/v0.2-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/41685609",
        "value": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/41685609",
        "zipball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/zipball/v0.2-beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hasindu2008",
          "type": "User"
        },
        "date_created": "2021-03-24T07:53:48Z",
        "date_published": "2021-03-24T08:26:47Z",
        "html_url": "https://github.com/Psy-Fer/interARTIC/releases/tag/v0.1-alpha",
        "name": "interartic-v0.1-alpha",
        "release_id": 40274895,
        "tag": "v0.1-alpha",
        "tarball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/tarball/v0.1-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/40274895",
        "value": "https://api.github.com/repos/Psy-Fer/interARTIC/releases/40274895",
        "zipball_url": "https://api.github.com/repos/Psy-Fer/interARTIC/zipball/v0.1-alpha"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 4: Running InterARTIC on the test dataset",
        "parent_header": [
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "Click `Add Job` on the interARTIC web interface. Then fill the fields as given in the following table. Note that when you click (double click on some browsers) on fields for **input data directory** and **Select a CSV file**, a list of files/directories should appear from which you can select.\n\n| field  | value  | description  |\n|---|---|---|\n| **Job name**                  | *test*    | whatever name that you like for the run (only alpha numeric characters and underscore are allowed)  |\n| **input data directory**    | *FLFL031920*  | this is the directory containing the nanopore sequencing data  |\n| **This input contains**       | *Multiple samples*    | our example test dataset contains 10 multiplexed samples |\n| **Select a CSV file**         | *FLFL031920-barcodes.csv*  | .csv manifest file that matches sample names to sample barcodes  |\n| **virus**       | *SARS-CoV-2 (nCoV-2019)*    |  |\n| **Select your primer scheme**      | *Eden V1 (2500bp)*    | our example test dataset used Eden V1 primers |\n| **library preparation method**     | *Ligation library prep (eg SQK-LSK109)*              | our example test dataset used ligation barcodes |\n| **Select a pipeline to run**  | *Both*   | we will test both medaka and nanopolish pipelines, which will run one after the other  |\n\nNow click `Submit job(s)` and you should see the pipeline running :)\n\n![parameters page](docs/params.svg)\n\nAnother example dataset containing ebola virus samples that you can use to directly test interARTIC can be downloaded from [here](https://seq.bioinf.science/interartic-ebola). The relavent options for this data set are *Multiple samples*, *ebola-barcodes.csv*, *IturiEBOV*, *Artic V1* and *Ligation library prep (eg SQK-LSK109)*.\n\nOutput data generated from interARTIC (version 0.2-beta) for the above two example data set can be downloaded for your reference from [here](https://seq.bioinf.science/interartic-testout).\n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:52:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 29
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "type": "Text_excerpt",
        "value": "A video tutorial of setting up and running InterARTIC: https://youtu.be/RCArn-xOkHg\n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 3: Configuring interARTIC",
        "parent_header": [
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "Configuration is only required if you downloaded the dataset to a custom location instead of */data*.\nIn your interARTIC web interface, click `Set locations of input data`. Fill the first two fields (1. location of your input data, and 2. location of your sample-barcode *.csv* files are located). For example, if you used */home/username/data* the fields should be */home/username/data* and */home/username/data/sample-barcodes*, respectively.\nClick `confirm` to save the settings, which will be used for all future runs.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "interARTIC usage",
        "type": "Text_excerpt",
        "value": "Before running interARTIC on your own nanopore samples, please refer to the detailed guide [here](https://psy-fer.github.io/interARTIC/usage/). If you want to run interARTIC on custom primer schemes or viruses, refer to the instructions [here](https://psy-fer.github.io/interARTIC/primers/)\n"
      },
      "source": "https://raw.githubusercontent.com/Psy-Fer/interARTIC/master/README.md",
      "technique": "header_analysis"
    }
  ]
}