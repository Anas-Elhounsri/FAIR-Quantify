{
  "application_domain": [
    {
      "confidence": 0.8331399728272284,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8591394385492721,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\ntitle: \"Optimized Dynamic Genome/Graph Implementation (ODGI)\"\nversion: \"0.6.2\"\ndate-released: \"2021-09-15\"\nabstract: \"ODGI, a new suite of tools that implements scalable algorithms and has an efficient in-memory representation of DNA variation graphs. ODGI includes tools for detecting complex regions, extracting loci, removing artifacts, exploratory analysis, manipulation, validation, and visualization.\"\nauthors:\n  - family-names: \"Guarracino\"\n    given-names: \"Andrea\"\n    orcid: \"https://orcid.org/0000-0001-9744-131X\"\n  - family-names: \"Heumos\"\n    given-names: \"Simon\"\n  - family-names: \"Nahnsen\"\n    given-names: \"Sven\"\n  - family-names: \"Prins\"\n    given-names: \"Pjotr\"\n  - family-names: \"Garrison\"\n    given-names: \"Erik\"\nlicense: MIT\nrepository-code: \"https://github.com/pangenome/odgi\"\nkeywords:\n  - pangenome\n  - pangenome graph\n  - variation graph\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "odgi"
        ],
        "type": "Text_excerpt",
        "value": "**Andrea Guarracino\\*, Simon Heumos\\*, Sven Nahnsen, Pjotr Prins, Erik Garrison**. [ODGI: understanding pangenome graphs](https://doi.org/10.1093/bioinformatics/btac308), Bioinformatics, 2022\\\n**\\*Shared first authorship**\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pangenome/odgi"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-11T04:42:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-04T07:59:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Optimized Dynamic Genome/Graph Implementation: understanding pangenome graphs"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9749060390307996,
      "result": {
        "original_header": "optimized dynamic genome/graph implementation (odgi)",
        "type": "Text_excerpt",
        "value": "`odgi` provides an efficient and succinct dynamic DNA sequence graph model, as well as a host of algorithms that allow the use of such graphs in bioinformatic analyses. \nCareful encoding of graph entities allows `odgi` to efficiently compute and transform [pangenomes](https://pangenome.github.io/) with minimal overheads.  `odgi` implements a dynamic data structure that leveraged multi-core CPUs and can be updated on the fly. \nThe edges and path steps are recorded as deltas between the current node id and the target node id, where the node id corresponds to the rank in the global array of nodes.\nGraphs built from biological data sets tend to have local partial order and, when sorted, the deltas be small.\nThis allows them to be compressed with a variable length integer representation, resulting in a small in-memory footprint at the cost of packing and unpacking. \nThe RAM and computational savings are substantial. In partially ordered regions of the graph, most deltas will require only a single byte.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8285542537739992,
      "result": {
        "original_header": "multiqc",
        "type": "Text_excerpt",
        "value": "Since v1.11 [MultiQC](https://multiqc.info/) has an [ODGI module](https://multiqc.info/docs/#odgi). This module can only\nwork with output from `odgi stats`! For more details take a look at the documentation at [odgi.readthedocs.io/multiqc](https://odgi.readthedocs.io/en/latest/rst/multiqc.html).\n \n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9982523716779232,
      "result": {
        "original_header": "funding sources",
        "type": "Text_excerpt",
        "value": "`odgi` has been funded through a variety of mechanisms, including a Wellcome Sanger PhD fellowship and diverse NIH and NSF grants (listed in our paper), as well as funding from the State of Tennessee.\nOf particular note is the [contribution of NLnet to the development of a differential privacy model](https://nlnet.nl/project/VariationGraph/), [\"privvg\"](https://privvg.github.io/), which supported significant maintenance and development effort in the `odgi` toolkit.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9809376544196807,
      "result": {
        "original_header": "API",
        "type": "Text_excerpt",
        "value": "`odgi::graph_t` is a `MutablePathDeletableHandleGraph` in the generic variation graph [handle graph](https://github.com/vgteam/libhandlegraph) hierarchical API model.\nAs such, it is possible to add, delete, and modify nodes, edges, and paths through the graph.\nWherever possible, destructive operations on the graph maintain path validity.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9503081652362896,
      "result": {
        "original_header": "versioning",
        "type": "Text_excerpt",
        "value": "Each time `odgi` is build, the current version is inferred via `git describe --always --tags`. Assuming, [version.cpp](./src/version.cpp)\nis up to date, `odgi version` will not only print out the current tagged version, but its release codename, too.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9885673940891676,
      "result": {
        "original_header": "new release (developers only)",
        "type": "Text_excerpt",
        "value": "[//]: # (This section is important for developers only. Each time we make a new release, we invoke [prepare_release.sh]&#40;./scripts/prepare_release.sh&#41; &#40;`cd` into folder [scripts]&#40;./scripts&#41; first!&#41; with a new release version and codename. [version.cpp]&#40;./src/version.cpp&#41; is updated and the documentation version is bumped up.)\n \n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9779223642097722,
      "result": {
        "original_header": "name",
        "type": "Text_excerpt",
        "value": "`odgi` is a play on the [Italian word \"oggi\" (/\u02c8\u0254d.d\u0292i/)](https://en.wiktionary.org/wiki/oggi), which means \"today\".\nAs of 2019, a standard refrain in genomics is that genome graphs will be useful in _x_ years.\nBut, if we make them efficient and scalable, they will be useful today.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pangenome/odgi/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "documentation",
        "parent_header": [
          "odgi"
        ],
        "type": "Text_excerpt",
        "value": "`odgi` includes a variety of tools for analyzing and manipulating large pangenome graphs.\nRead the full documentation at [https://odgi.readthedocs.io/](https://odgi.readthedocs.io/).\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://odgi.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pangenome/odgi/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 39
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pangenome/odgi/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pangenome/odgi"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "odgi"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/scripts/GIFs_doc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/scripts/test_binary.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/scripts/untangle.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/scripts/position.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/scripts/prepare_release.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/scripts/degree.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/scripts/generate_git_version.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/scripts/generate_release.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/scripts/viz_snapshots.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/docs/scripts/gen_copy-right_version_release.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/docs/scripts/prepare_man_files.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# INSTALL ODGI\n\nThis document describes creating a build environment, development and performance tuning options.\n\n## Creating a build environment\n\n### Install and build with GNU Guix\n\nWe use GNU Guix to develop, test and deploy odgi on our systems. GNU Guix will run as a package manager on *any* Linux distribution.\n\nOn Debian, after installing and updating guix, load the current profile with:\n\n```sh\nsudo apt install guix\nguix pull\nsource ~/.config/guix/current/etc/profile\n```\n\nThat way, with the latest guix in the path start a GNU Guix build container with:\n\n```bash\ngit clone --recursive https://github.com/pangenome/odgi.git\ncd odgi\nsource ./.guix-build\ncd build\ncmake ..\nmake\nctest .\n```\n\nAnother way of building odgi is with the provided [guix.scm](./guix.scm):\n\n```sh\nguix build -f guix.scm\n```\n\nAnd get a development shell with gdb:\n\n```sh\nguix shell -C -D -f guix.scm\ncd build\ncmake -DCMAKE_BUILD_TYPE=Debug ..\ncmake --build . --verbose\nmake\n```\n\nIf you get any build issues try removing the CMakeCache files before running cmake\n\n```sh\ncd odgi\nfind -name CMakeCache.txt|xargs rm -v\n```\n\nFor more information, see [guix.scm](./guix.scm).\n\n\n#### installing via the guix-genomics git repository\n\nThe `guix genomics` git repository contains another package definition of odgi.\n\nFirst, clone the guix-genomics repository:\n\n``` bash\ngit clone https://github.com/ekg/guix-genomics\n```\n\nAnd install the `odgi` package to your default GUIX environment:\n\n``` bash\nGUIX_PACKAGE_PATH=. guix package -i odgi\n```\n\nNow `odgi` is available as a global binary installation.\n\n#### installing via the guix-genomics channel\n\nAdd the following to your ~/.config/guix/channels.scm:\n\n``` scm\n  (cons*\n(channel\n  (name 'guix-genomics)\n  (url \"https://github.com/ekg/guix-genomics.git\")\n  (branch \"master\"))\n%default-channels)\n```\n\nFirst, pull all the packages, then install odgi to your default GUIX environment:\n\n``` bash\nguix pull\nguix package -i odgi\n```\n\nIf you want to build an environment only consisting of the odgi binary, you can do:\n\n``` bash\nguix environment --ad-hoc odgi\n```\n\nFor more details about how to handle Guix channels, please go to https://git.genenetwork.org/guix-bioinformatics/guix-bioinformatics.git.\n\n## Development & debugging\n\nTo build odgi with debug information:\n\n```sh\ncd build\ncmake -DCMAKE_BUILD_TYPE ..\nmake\nctest . --verbose\n```\n\n## ODGI performance tuning\n\nodgi is a high-performance computing tool and some tuning can improve speed greater than 20%.\nIn this section we describe the different optimization parts we explored.\nBut first we describe the actions to take to optimize the code output by gcc>11.\n\n### Optimize for preformance\n\nThe default odgi build path uses position independent code (PIC) throughout to be able to use the shared libs. So\n\n```\ncd build\ncmake ..\n```\n\nTo build the binary without PIC makes it slightly faster\n\n```\ncmake -DPIC=OFF ..\n```\n\nNote that this only builds the `odgi` binary. For shared libs and FFI we need PIC.\nAdditionally adding machine flags can improve speed by 10%\n\n```\ncmake -DPIC=OFF -DEXTRA_FLAGS=\"-Ofast -march=native -pipe -msse4.2 -funroll-all-loops\" ..\n```\n\nTo make use of profiler generated optimization (PGO) compile ODGI twice(!) Run the tests (or your favorite job) after compiling with\n\n```\ncmake -DPIC=OFF -DEXTRA_FLAGS=\"-Ofast -march=native -pipe -msse4.2 -funroll-all-loops -fprofile-generate=../pgo\" ..\nmake -j 8\nfor x in 1 2 3 ; do ctest . ; done\n```\n\nWith the profiling data in ../pgo we can now ask gcc to optimize compiler output with\n\n```\ncmake -DPIC=OFF -DEXTRA_FLAGS=\"-Ofast -march=native -pipe -msse4.2 -funroll-all-loops -fprofile-use=../pgo\" ..\nmake -j 8\nfor x in 1 2 3 ; do ctest . ; done\n```\n\nThis should gain the odgi binary another 10% of speed. To optimize the shared libs run both PGO steps with PIC.\n\n### Position independent code\n\nNormally compilation with position independent code (`-fPIC` option for `gcc`) is  detrimental to performance. In general this is true for odgi too, so to build the binary tool we default.\n\n* On epysode AMD EPYC 3251 8-Core Processor the current master runs at slightly over 25.0s.\n* Disabling PIC on odgi-obj drops to 24.6s\n\n### Native compilation\n\nWith native compilation we gain a little on the AMD EPYC 3251 8-Core Processor\n\n* Native compilation march=native at 24.5s\n\n### Extra flags\n\nTested on AMD EPYC 3251 8-Core Processor\n\n* -mavx2 has impact (down to 22.6s)\n* -msse4.2 has impact (down to 22.4s)\n* -funroll-all-loops has a little impact\n\nThe following flags have no impact\n\n* -pipe does not help runtime performance, but helps compile time\n* -fomit-frame-pointer\n* -ffast-math\n* -march=native\n* -fforce-addr\n* -D_GLIBCXX_PARALLEL\n\nCurrent recommended build flags\n\n```\ncmake -DEXTRA_FLAGS=\"-Ofast -march=native -pipe -msse4.2 -funroll-all-loops\" ..\n```\n\nresult in CMake generating\n\n```\nCXX_FLAGS = -fopenmp -Ofast -march=native -pipe -msse4.2 -funroll-all-loops -fopenmp -fopenmp -DNDEBUG -std=gnu++17\n```\n\n### Profile guided optimizations\n\n* Run profile guided optimizations, e.g. https://stackoverflow.com/questions/14492436/g-optimization-beyond-o3-ofast\n  + 190s run of odgi test to generate profile\n  + PGO goes at 20s. So the overall gain is greater than 20%.\n\n### Static library (libodgi.a) and shared library (libodgi.so)\n\nThe optimal build of odgi is with `-DPIC=OFF` that removes the switch `-fPIC` an can not build shared libs.\nTherefore the binary always builds with library `libodgi.a`.\n\nTo build the shared library use the default, i.e., `-DPIC=ON`. Still, the odgi binary won't use that.\nThis may change in the future.\n\n### Looking at the libs\n\nAfter all this the CMake flags are not honoured by libhandlegraph. It builds with\n\n```\nCXX_FLAGS =  -O3 -g -fPIC -std=gnu++14\n```\n\nCompiling with inlined sources, however, made no dent in performance.\n\nAbove metrics were using sdsl-lite which also does not honour global flags with\n\n```\nCXX_FLAGS =  -std=c++11 -Wall -Wextra -DNDEBUG -O3 -DNDEBUG\n```\n\nthis build is also at 22.4s. Let's try adding our flags with the following patch\n\n```patch\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\nindex 657949f..97a6863 100644\n--- a/CMakeLists.txt\n+++ b/CMakeLists.txt\n@@ -43,7 +43,10 @@ else()\n   message(STATUS \"Compiler is recent enough to support C++11.\")\n endif()\n\n-if( CMAKE_COMPILER_IS_GNUCXX )\n+set(CMAKE_CXX_FLAGS_RELEASE \"-DNDEBUG\")\n+set (CMAKE_CXX_FLAGS \"${OpenMP_CXX_FLAGS} -Ofast -pipe -msse4.2 -funroll-all-loops\")\n+\n+if( CMAKE_COMPILER_IS_GNUCXXU )\n     append_cxx_compiler_flags(\"-std=c++11 -Wall -Wextra -DNDEBUG\" \"GCC\" CMAKE_CXX_FLAGS)\n     append_cxx_compiler_flags(\"-O3 -ffast-math -funroll-loops\" \"GCC\" CMAKE_CXX_OPT_FLAGS)\n     if ( CODE_COVERAGE )\n```\n\nresulting in\n\n```\nCXX_FLAGS =  -Ofast -pipe -msse4.2 -funroll-all-loops -DNDEBUG\n```\n\nimproved speed from 22.7s to 22.4s. That points out that these switches help AND that the native sdsl-lite libs that come with a distro are optimally compiled.\n\nI am not sure what the impact can be of the other libs, but we will find that out after profiling the code.\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/INSTALL.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "building from source",
        "parent_header": [
          "odgi",
          "installation"
        ],
        "type": "Text_excerpt",
        "value": "`odgi` requires a C++ version of 9.3 or higher. You can check your version via:\n\n``` bash\ngcc --version\ng++ --version\n```\n\n`odgi` pulls in a host of source repositories as dependencies. It may be necessary to install several system-level libraries to build `odgi`. On `Ubuntu 20.04`, these can be installed using `apt`:\n```\nsudo apt install build-essential cmake python3-distutils python3-dev libjemalloc-dev\n```\n\nAfter installing the required dependencies, clone the `odgi` git repository recursively because of the many submodules\nand build with:\n\n```\ngit clone --recursive https://github.com/pangenome/odgi.git\ncd odgi\ncmake -H. -Bbuild && cmake --build build -- -j 3\n```\n\nTo build a static executable, use:\n\n```\ncmake -DBUILD_STATIC=1 -H. -Bbuild && cmake --build build -- -j 3\n```\n\nYou'll need to set this flag to 0 or remove and rebuild your build directory if you want to unset this build behavior and get a dynamic binary again.\nStatic builds are unlikely to be supported on OSX, and require appropriate static libraries on linux.\n\nFor more information on optimisations, debugging and GNU Guix builds, see [INSTALL.md](./INSTALL.md) and [CMakeLists.txt](./CMakeLists.txt).\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Nix build",
        "parent_header": [
          "odgi",
          "installation"
        ],
        "type": "Text_excerpt",
        "value": "If you have `nix`, build and installation in your profile are as simple as:\n\n```\nnix-build && nix-env -i ./result\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Notes for distribution",
        "parent_header": [
          "odgi",
          "installation",
          "Nix build"
        ],
        "type": "Text_excerpt",
        "value": "If you need to avoid machine-specific optimizations, use the `CMAKE_BUILD_TYPE=Generic` build type:\n\n```shell\ncmake -H. -Bbuild -DCMAKE_BUILD_TYPE=Generic && cmake --build build -- -j 3\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Bioconda",
        "parent_header": [
          "odgi",
          "installation"
        ],
        "type": "Text_excerpt",
        "value": "`odgi` recipes for Bioconda are available at https://bioconda.github.io/recipes/odgi/README.html. To install the latest version using `Conda` please execute:\n\n``` bash\nconda install -c bioconda odgi\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker",
        "parent_header": [
          "odgi",
          "installation"
        ],
        "type": "Text_excerpt",
        "value": "To simplify installation and versioning, we have an automated GitHub action that pushes the current docker build to [dockerhub](https://hub.docker.com/r/pangenome/odgi).\nTo use it, pull the docker image:\n\n```shell\ndocker pull pangenome/odgi\n```\n\nThen, you can run `odgi` with:\n\n```shell\ndocker run odgi\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Guix",
        "parent_header": [
          "odgi",
          "installation"
        ],
        "type": "Text_excerpt",
        "value": "An alternative way to manage `odgi`'s dependencies is by using the `GNU GUIX` package manager. We use Guix to develop, test and deploy odgi on our systems.\nFor more information see [INSTALL](./INSTALL.md).\n\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9963695349624073,
      "result": {
        "original_header": "versioning",
        "type": "Text_excerpt",
        "value": "Each time `odgi` is build, the current version is inferred via `git describe --always --tags`. Assuming, [version.cpp](./src/version.cpp)\nis up to date, `odgi version` will not only print out the current tagged version, but its release codename, too.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999999666225134,
      "result": {
        "original_header": "new release (developers only)",
        "type": "Text_excerpt",
        "value": "- Create a new release [on GitHub](https://github.com/pangenome/odgi/releases/new)\n  - `Choose a tag`: v0.X.Y\n  - Fill the `Release title`: ODGI v0.X.Y - Miao\n  - Fill the `Describe this release` section\n  - Tick `This is a pre-release`\n  - Click `Publish release`\n- Produce a buildable source tarball, containing code for `odgi` and all submodules, and upload it to the release.\n    - Execute the following instructions:\n    ```shell\n    mkdir source-tarball\n    cd source-tarball\n    git clone --recursive https://github.com/pangenome/odgi\n    cd odgi\n    git fetch --tags origin\n    LATEST_TAG=\"$(git describe --tags `git rev-list --tags --max-count=1`)\"\n    git checkout \"${LATEST_TAG}\"\n    git submodule update --init --recursive\n    mkdir include\n    bash scripts/generate_git_version.sh include\n    sed 's/execute_process(COMMAND bash/#execute_process(COMMAND bash/g' CMakeLists.txt -i\n    rm -Rf .git\n    find deps -name \".git\" -exec rm -Rf \"{}\" \\;\n    cd ..\n    mv odgi \"odgi-${LATEST_TAG}\"\n    tar -czf \"odgi-${LATEST_TAG}.tar.gz\" \"odgi-${LATEST_TAG}\"\n    rm -Rf \"odgi-${LATEST_TAG}\"\n    ```\n  - Open the (pre-)release created earlier\n  - Upload the `odgi-v0.X.Y.tar.gz` file\n  - Remove the tick on `This is a pre-release`\n  - Click `Publish release` (this will trigger the update [on bioconda](http://bioconda.github.io/recipes/odgi/README.html)) \n[//]: # (This section is important for developers only. Each time we make a new release, we invoke [prepare_release.sh]&#40;./scripts/prepare_release.sh&#41; &#40;`cd` into folder [scripts]&#40;./scripts&#41; first!&#41; with a new release version and codename. [version.cpp]&#40;./src/version.cpp&#41; is updated and the documentation version is bumped up.)\n \n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pangenome/odgi/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2019 Erik Garrison\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "odgi"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "pangenome"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1959410,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 35793,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 19067,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 5891,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Scheme",
        "size": 3781,
        "type": "Programming_language",
        "value": "Scheme"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 2945,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1292,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 1258,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nix",
        "size": 1142,
        "type": "Programming_language",
        "value": "Nix"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2024-04-07T22:51:42Z",
        "date_published": "2024-04-07T23:29:21Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.8.6.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.8.6/odgi-v0.8.6.tar.gz)\r\n\r\n## What's Changed\r\n* fix bug to avoid underflows in `odgi viz` by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/570\r\n\r\n\r\n**Full Changelog**: https://github.com/pangenome/odgi/compare/v0.8.5...v0.8.6",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.8.6",
        "name": "v0.8.6",
        "release_id": 150127380,
        "tag": "v0.8.6",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.8.6",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/150127380",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/150127380",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.8.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2024-03-28T21:48:50Z",
        "date_published": "2024-04-07T20:32:10Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.8.5.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.8.5/odgi-v0.8.5.tar.gz)\r\n\r\n## What's Changed\r\n* `odgi stats`: deactivate 1D layout metrics in MultiQC mode by @subwaystation in https://github.com/pangenome/odgi/pull/544\r\n* Tutorial: Sort and layout power ups. by @subwaystation in https://github.com/pangenome/odgi/pull/552\r\n* update version of checkout in ci by @kojix2 in https://github.com/pangenome/odgi/pull/554\r\n* `odgi draw`: fix SVG output by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/555\r\n* write highlights over the rasterized image by @ekg in https://github.com/pangenome/odgi/pull/547\r\n* write highlights over black/grey lines in SVG by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/556\r\n* `odgi draw`: add labels in the SVG output by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/557\r\n* `odgi extract`: avoid duplicated subpaths by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/559\r\n* `odgi draw`: add node sparsification factor for SVG output by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/558\r\n* `odgi paths ... --non-reference-ranges`: emit last non-ref path range, if any by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/564\r\n* Upgrade pybind11 to current head by @JervenBolleman in https://github.com/pangenome/odgi/pull/566\r\n* fix outgoing links of the last node by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/568\r\n* add uncalled bases to non-ref-nodes by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/569\r\n* `odgi paths`: private/core/accessory sequence classification by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/565\r\n\r\n\r\n**Full Changelog**: https://github.com/pangenome/odgi/compare/v0.8.4...v0.8.5",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.8.5",
        "name": "v0.8.5",
        "release_id": 150122231,
        "tag": "v0.8.5",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.8.5",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/150122231",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/150122231",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.8.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2023-12-18T20:43:08Z",
        "date_published": "2024-01-05T02:37:06Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.8.4.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.8.4/odgi-v0.8.4.tar.gz)\r\n\r\n## What's Changed\r\n* add conda-forge to conda installation instructions by @aryarm in https://github.com/pangenome/odgi/pull/500\r\n* fix odgi untangle PAF output bug by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/501\r\n* fix ODGI for GCC 13.1 by @subwaystation in https://github.com/pangenome/odgi/pull/507\r\n* Less verbose logging by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/508\r\n* `odgi heaps`: avoid missing groups by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/509\r\n* Fix `applying_ordering` by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/510\r\n* Add missing library by @kojix2 in https://github.com/pangenome/odgi/pull/512\r\n* heaps: plot down to 0 on the y-axis by @subwaystation in https://github.com/pangenome/odgi/pull/514\r\n* Progress in `odgi pav` by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/517\r\n* Avoid out of bound (segfault) in `odgi similarity` by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/520\r\n* `odgi extract` refresh: add `-O/--optimize` option and put `-d` by default by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/522\r\n* `odgi paths`: show non-reference nodes and path/step ranges by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/523\r\n* `odgi extract`: check there are no duplicated path ranges by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/525\r\n* `odgi extract`: a bit more aggressive subpath merging by default by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/528\r\n* `odgi extract`: manage input path range boundaries by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/531\r\n* `odgi paths -H` on subgraphs by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/534\r\n* Nix building by @ekg in https://github.com/pangenome/odgi/pull/535\r\n* depth: option to use unique window depths by @kdm9 in https://github.com/pangenome/odgi/pull/538\r\n* make svg drawing work with colors by @ekg in https://github.com/pangenome/odgi/pull/539\r\n* `odgi paths ... --non-reference-nodes`: emit also node length by @AndreaGuarracino in https://github.com/pangenome/odgi/pull/541\r\n\r\n## New Contributors\r\n* @aryarm made their first contribution in https://github.com/pangenome/odgi/pull/500\r\n* @kojix2 made their first contribution in https://github.com/pangenome/odgi/pull/512\r\n* @kdm9 made their first contribution in https://github.com/pangenome/odgi/pull/538\r\n\r\n**Full Changelog**: https://github.com/pangenome/odgi/compare/v0.8.3...v0.8.4",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.8.4",
        "name": "v0.8.4",
        "release_id": 135914362,
        "tag": "v0.8.4",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.8.4",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/135914362",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/135914362",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.8.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2023-04-19T14:30:40Z",
        "date_published": "2023-04-19T15:02:30Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.8.3.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.8.3/odgi-v0.8.3.tar.gz)\r\n\r\nThis release introduces a new command, `odgi similarity`, to compute the similarity (or dissimilarity) between paths or groups of paths. Moreover, it fixes and optimizes several commands. Importantly, now it is possible to compile `odgi` with Clang, on macOS and on ARM!\r\n\r\nThis introduces:\r\n\r\n- ensure that the optimal `sum_of_path_node_distances` is actually 1 #466 by @subwaystation \r\n- add yaml output for `-j -w` when all paths are emitted #467 by @subwaystation \r\n- `odgi stepindex`: unsampled step index #468 by @AndreaGuarracino \r\n- `odgi untangle`: verbose log #469 by @AndreaGuarracino \r\n- `odgi tension`: set the distance to 0 after each step instead of each path #470 by @tonyjie \r\n- fix the iteration bound: now the `iter_max` we set is the exact running iteration #471 by @tonyjie \r\n- script to generate release binaries #472 by @subwaystation \r\n- fix smoothxg-offending import #473 by @AndreaGuarracino \r\n- `odgi inject`: use a key that is really unique across annotations #476 by @AndreaGuarracino \r\n- Optimization of zeta preprocessing #480 by @nsmlzl \r\n- Fix versioning #482 by @AndreaGuarracino \r\n- `odgi paths`: initialize vector values #483 by @AndreaGuarracino \r\n- `odgi flip`: avoid introducing useless edges and losing edges from the original graph #485 by @AndreaGuarracino \r\n- `odgi paths` allows a specific occurrence of the delimiter #488 by @AndreaGuarracino \r\n- fix a bug with reference-guided PG-SGD #490 by @subwaystation \r\n- `odgi overlap`: fix header #492 by @AndreaGuarracino \r\n- Portability fixes to build with Clang, on macOS, and on ARM #494 by @sampsyo \r\n- New odgi similarity command #498 by @AndreaGuarracino ",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.8.3",
        "name": "odgi 0.8.3 - Manutenuto",
        "release_id": 100072279,
        "tag": "v0.8.3",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.8.3",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/100072279",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/100072279",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.8.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2022-11-28T15:45:53Z",
        "date_published": "2022-12-17T19:51:21Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.8.2.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.8.2/odgi-v0.8.2.tar.gz)\r\n\r\nThis introduces:\r\n\r\n- always emit long version format #456 by @AndreaGuarracino \r\n- optionally scale haplotype matrix cells by node length #457 by @ekg \r\n- increment progress-meter of `odgi sort` less frequently #458 by @nsmlzl \r\n- increment progress-meter of `odgi layout` less frequent #459, #462 by @AndreaGuarracino @nsmlzl \r\n- `odgi extract`: avoid creating subgraphs with empty subpaths #460 by @AndreaGuarracino \r\n- `odgi prune`: remove empty paths #460 by @AndreaGuarracino ",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.8.2",
        "name": "odgi 0.8.2 - Biccino",
        "release_id": 86413783,
        "tag": "v0.8.2",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.8.2",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/86413783",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/86413783",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.8.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2022-10-21T14:28:37Z",
        "date_published": "2022-10-28T03:36:49Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.8.1.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.8.1/odgi-v0.8.1.tar.gz)\r\n\r\nThis introduces:\r\n\r\n- non-binary haplotype matrix #452 by @ekg \r\n- typos and tweak in odgi flip by 98c139eb52ff3082e174837b58f9a94a38fdabd0 @AndreaGuarracino ",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.8.1",
        "name": "odgi 0.8.1 - Piccino",
        "release_id": 81289511,
        "tag": "v0.8.1",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/81289511",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/81289511",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ekg",
          "type": "User"
        },
        "date_created": "2022-09-28T20:02:21Z",
        "date_published": "2022-09-29T07:34:55Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.8.0.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.8.0/odgi-v0.8.0.tar.gz)\r\n\r\nWe introduce a new tool, `odgi priv`, that allows us to project differentially private synthetic pangenome graphs out of any input. We developed an initial study of [differentially private pangenome graphs](https://privvg.github.io/2022/09/24/practical-differential-privacy-on-pangenomes.html). Other major updates include improvement to path guided SGD sorting and layout of the graph, and enhancements to odgi extract that avoid subpath fragmentation.\r\n\r\nThis introduces (in reverse chronological order):\r\n\r\n- Clean interface to dropping and keeping paths in `odgi paths` #450 by [ekg](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3Aekg)\r\n- Use log1p to avoid singularities in `odgi priv` #449 by [ekg](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3Aekg)\r\n- Implementation of privvg differential privacy sampling algorithm in `odgi priv` plus documentation and manpage #448 by [ekg](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3Aekg)\r\n- Dramatic improvement in `odgi layout` performance by avoiding a coordination variable bottleneck #446 by [nsmlzl](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3Ansmlzl)\r\n- Incredible performance boost to `odgi sort` by avoiding a coordination variable bottleneck #445 by [nsmlzl](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3Ansmlzl)\r\n- Properly manage full range extraction in `odgi extract` #443 by [AndreaGuarracino](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3AAndreaGuarracino)\r\n- Compressed mode visualization (path depth heatmap) in `odgi viz` #438 by [subwaystation](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3Asubwaystation) \r\n- Resolve lingering issues with path manipulation that caused graph corruption via `odgi flip` (outstanding issue: resolve these coordination problems and allow dynamic removal of paths) #436 by [ekg](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3Aekg)\r\n- Improve subpath extraction in `odgi extract` #435 by [AndreaGuarracino](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3AAndreaGuarracino)\r\n- Print the number of steps in `odgi stats` #434 by [subwaystation](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3Asubwaystation)\r\n- Actually use the jaccard metric in `odgi untangle` #432 by [ekg](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3Aekg)\r\n- Get the depth of graph tips in `odgi depth` #431 by [ekg](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3Aekg) \r\n- Add BED annotation on top of 2D layout in `odgi draw` (like gfaestus) #429 by [AndreaGuarracino](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3AAndreaGuarracino) \r\n- Avoid making enormous PNGs in `odgi draw` #422 by [AndreaGuarracino](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3AAndreaGuarracino)\r\n- Error out if `odgi untangle` has no input cut points when an input set is given #421 by [AndreaGuarracino](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3AAndreaGuarracino)\r\n- Attempt to resolve path fragmentation in `odgi extract` #419 by [AndreaGuarracino](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3AAndreaGuarracino)\r\n- Allow direct optimization of the graph in `odgi sort` #418 by [AndreaGuarracino](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3AAndreaGuarracino)\r\n- `odgi stats` add `weighted_feedback_arc` and `weighted_reversing_join` metrics #417 by [AndreaGuarracino](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3AAndreaGuarracino) \r\n- removed unused code from `odgi layout` #416 by [AndreaGuarracino](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3AAndreaGuarracino)\r\n- Correct default value for path-sgd-iter-max flag of `odgi layout` subcommand  #413 by [nsmlzl](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3Ansmlzl)\r\n- `odgi paths`: reduce the key space of the `ska::flat_hash_map` #412 by [AndreaGuarracino](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3AAndreaGuarracino)\r\n- CPANG22: `odgi squeeze`: manage edge strandness to avoid graph corruption #411 by [AndreaGuarracino](https://github.com/pangenome/odgi/issues?q=is%3Apr+author%3AAndreaGuarracino)",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.8.0",
        "name": "odgi v0.8.0 - Nascondino",
        "release_id": 78537251,
        "tag": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/78537251",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/78537251",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2022-07-08T11:44:36Z",
        "date_published": "2022-07-08T12:11:27Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.7.3.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.7.3/odgi-v0.7.3.tar.gz)\r\n\r\nThis introduces:\r\n- fixed (and optimized) `odgi flip`, avoiding path metadata corruption (https://github.com/pangenome/odgi/pull/410);\r\n- fixed `odgi squeeze`, that now manages edge stradness correctly;\r\n- fixed `odgi paths`'s out-of-memory problem (https://github.com/pangenome/odgi/pull/412);\r\n- documentation cleaning (https://github.com/pangenome/odgi/pull/413)\r\n- `odgi layout` cleaning (https://github.com/pangenome/odgi/pull/416)\r\n- `odgi sort` allow users only to optimize the graph, and not sort it (https://github.com/pangenome/odgi/pull/418);\r\n- added in `odgi stats` new sorting-goodness metrics (https://github.com/pangenome/odgi/pull/417);\r\n- `odgi extract` was a bit optimized and now it allows users to merge close subpaths to avoid fragmented subgraphs (https://github.com/pangenome/odgi/pull/419);\r\n- `odgi untangle` emits an error if there are no cut points in input (https://github.com/pangenome/odgi/pull/421);\r\n- `odgi draw` avoid too big images that would require too much memory (https://github.com/pangenome/odgi/pull/422);",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.7.3",
        "name": "odgi 0.7.3 - Fissaggio",
        "release_id": 71563115,
        "tag": "v0.7.3",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.7.3",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/71563115",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/71563115",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.7.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "subwaystation",
          "type": "User"
        },
        "date_created": "2022-05-24T12:29:09Z",
        "date_published": "2022-05-24T12:55:46Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.7.2.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.7.2/odgi-v0.7.2.tar.gz)\r\n\r\nThis `lemon beer` release comes with lot's of new features and some bug fixes:\r\n\r\n- Fixed `libbf` compilation issue.\r\n- The `stepindex` throws an error if it was fed an empty path.\r\n- `xp` index: Delete all temporary files after index generation.\r\n- More stringent node identifier validation when parsing from GFA.\r\n- `odgi groom`: Added a reference-based mode.\r\n- `odgi sort`: rPG-SGD allows to globally sort by given references.\r\n- `odgi untangle`: We can select gene order groups for plotting with [gggenes](https://github.com/wilkox/gggenes).\r\n- **New** subcommand `odgi procbed`: Pprocrustes-BED: Intersect and adjust BED interval into [PanSN-defined](https://github.com/pangenome/PanSN-spec) path subranges. Lift BED files into graphs produced by `odgi extract`. Uses path range information in the path names.\r\n- **New** subcommand `odgi inject`: Inject BED interval ranges as paths in the graph.\r\n- **New** subcommand `odgi flip`: Flip (reverse complement) paths to match the graph.\r\n- Docs: \r\n  - Sync it with the changes above\r\n  - Added a new tutorial of how to inject gene arrows with `odgi untangle`.\r\n  - Added a section explaining how to apply the rPG-SGD.\r\n\r\n**Full Changelog**: https://github.com/pangenome/odgi/compare/v0.7.1...v0.7.2",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.7.2",
        "name": "odgi 0.7.2 - Radler",
        "release_id": 67657309,
        "tag": "v0.7.2",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.7.2",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/67657309",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/67657309",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.7.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2022-04-13T17:09:59Z",
        "date_published": "2022-04-13T17:12:52Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.7.1.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.7.1/odgi-v0.7.1.tar.gz)\r\n\r\nThis introduces:\r\n- updates in how `odgi` is compiled/built to ensure greater inter-system compatibility;\r\n- tweaks to `odgi heaps`.",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.7.1",
        "name": "odgi 0.7.1 - Pasticcione",
        "release_id": 64385000,
        "tag": "v0.7.1",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.7.1",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/64385000",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/64385000",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.7.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2022-03-24T12:33:50Z",
        "date_published": "2022-03-24T12:47:31Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.7.0.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.7.0/odgi-v0.7.0.tar.gz)\r\n\r\nThis release introduces:\r\n- new `odgi pav` command, to identify present/absence variants (PAVs);\r\n- new `odgi heaps` command, to extract a matrix of path pangenome coverage permutations for power-law regression;\r\n- `odgi untangle` and `odgi tips` improvements and bug fixes;\r\n- usage of `sampled step index` which uses less memory;\r\n- several compiler optimizations to make a binary a little bit faster and much smaller\r\n- documentation improvements (new tutorial 'Identify presence/absence variants').",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.7.0",
        "name": "odgi 0.7.0 - Presente",
        "release_id": 62680900,
        "tag": "v0.7.0",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/62680900",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/62680900",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2021-11-11T16:16:37Z",
        "date_published": "2021-11-18T08:17:36Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.6.3.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.6.3/odgi-v0.6.3.tar.gz)\r\n\r\nThis release introduces:\r\n- `odgi untangle` improvements, allowing users to set a maximum self depth for untangling;\r\n- fixed `odgi untangle` PAF output;\r\n- fixed rare rendering bugs in `odgi viz`;\r\n- added path Jaccard concept to `odgi position`;\r\n- `odgi positon` takes GFF files in input to create annotation TSV files for `bandage`;\r\n- error message improvements when the input graph is missing;\r\n- `odgi explode` can emit the outputs in GFA format directly;\r\n- `odgi view` doesn't emit annotations by default (to reduce GFA output file size);\r\n- fixed a bug in `odgi degree`;\r\n- removed duplicated code and functionalities;\r\n- `gfakluge` module update;\r\n- binary tests;\r\n- documentation improvements (new tutorial 'Untangling the pangenome').",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.6.3",
        "name": "odgi 0.6.3 - Pulizia",
        "release_id": 53617086,
        "tag": "v0.6.3",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.6.3",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/53617086",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/53617086",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.6.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2021-09-15T07:17:25Z",
        "date_published": "2021-09-15T07:27:06Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.6.2.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.6.2/odgi-v0.6.2.tar.gz)\r\n\r\nThis release includes the fix for two related bugs, allowing users to work with subgraphs and/or graphs obtained from pipelines other than `pggb`:\r\n- an important fix in `apply_ordering`: before the method was leaving one attribute of the `odgi` object inconsistent with the rest, making it impossible to optimize graphs correctly;\r\n- fixed in `odgi extract` wrong memory accesses where they shouldn't happen.\r\n\r\nMoreover, `odgi extract` was a bit generalized by relaxing the constraint of the input graphs and allowing to extract subgraphs from subgraphs.",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.6.2",
        "name": "odgi 0.6.2 - Auff",
        "release_id": 49578820,
        "tag": "v0.6.2",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/49578820",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/49578820",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2021-09-04T11:03:09Z",
        "date_published": "2021-09-04T11:04:25Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.6.1.tar.gz](https://github.com/pangenome/odgi/releases/download/v0.6.1/odgi-v0.6.1.tar.gz)\r\n\r\n\r\nThis release includes:\r\n\r\n- new command:\r\n  - `odgi tips`: identifying breakpoint positions relative to given query (reference) path(s) of all the tips in the graph or of tips of the given path(s);\r\n- commands support both GFA and ODGI formats as input, automatically managing the GFA to ODGI conversion;\r\n- an important bug has been fixed, which was preventing the use of graphs obtained with other tools or whose node IDs did not start from 1;\r\n- fixed a bug in `odgi viz` which resulted in hanging when applied on large pangenome graphs\r\n- fixed a bug in `odgi extract` which resulted in extracting not requested path ranges;\r\n- optimizations in `odgi build` and `extract`;\r\n- bug fixes and improvements in `odgi untangle`:\r\n  -  now it scales to whole chromosomes;\r\n  - it can emit self-depth information;\r\n  - it supports output in `PAF` format;\r\n- `odgi viz` supports colorbrewer palettes to display coverage information;\r\n- `odgi stats` can emit output in `YAML` format;\r\n\r\n- `odgi paths` can emit 'chr', 'start', 'end' information;\r\n- `odgi viz`, `depth`, `degree`, and `stats` can work with not optimized, but compacted graphs;\r\n- code cleaning;\r\n- improved command overview and documentation.",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.6.1",
        "name": "odgi 0.6.1 - Froggi",
        "release_id": 49007914,
        "tag": "v0.6.1",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/49007914",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/49007914",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2021-06-15T13:36:22Z",
        "date_published": "2021-06-16T09:51:55Z",
        "description": "**Buildable Source Tarball:** [odgi-0.6.tar.gz](https://github.com/pangenome/odgi/releases/download/0.6/odgi-0.6.tar.gz)\r\n\r\n\r\nThis release includes:\r\n- new commands:\r\n  - `odgi position`: find, translate, and liftover graph and path positions between graphs;\r\n  - `odgi extract`: extract subgraphs or parts of a graph defined by query criteria;\r\n  - `odgi explode`: breaks a graph into connected components storing each component in its own file;\r\n  - `odgi squeeze`: squeezes multiple graphs into the same file;\r\n  - `odgi depth`: find the depth of a graph as defined by query criteria;\r\n  - `odgi degree`: describe the graph in terms of node degree;\r\n  - `odgi validate`: validate a graph checking if the paths are consistent with the graph topology;\r\n  - `odgi overlap`: find the paths touched by given input paths.\r\n- bug fixes and performance improvements in several commands (`odgi unchop` included). The focus was on parallelization to scale on gigabase-scale pangenome graphs.\r\n- the documentation has been given a major overhaul, including detailed tutorials for different biological application cases. The Docs are hosted permanently at [https://odgi.readthedocs.io/en/latest/index.html](https://odgi.readthedocs.io/en/latest/index.html).\r\n- uniformed and beautified command-line options. All options are now organized in groups and mandatory arguments are highlighted.\r\n- usage of [jemalloc](https://github.com/jemalloc) as a new memory allocator to tackle memory fragmentation and support scalable concurrency.\r\n- `odgi bin` can emit output formatted for [HaploBlocker](https://github.com/tpook92/HaploBlocker).\r\n- new statistics in `odgi stats` (separated connected components, self-loop, nondeterministic-edges).\r\n- new layout initialization in `odgi layout`.",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/0.6",
        "name": "odgi 0.6 - Domani",
        "release_id": 44711611,
        "tag": "0.6",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/44711611",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/44711611",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AndreaGuarracino",
          "type": "User"
        },
        "date_created": "2021-01-11T15:45:30Z",
        "date_published": "2021-01-13T13:10:04Z",
        "description": "**Buildable Source Tarball:** [odgi-v0.5.1.tar.gz](https://github.com/vgteam/odgi/releases/download/v0.5.1/odgi-v0.5.1.tar.gz)\r\n\r\nThis addresses the remaining lingering memory access issues that prevented odgi to run properly. This include important updates in the `mmmultimap` dependency.\r\n\r\nThe memory problems became clear by running odgi under electric fence (`-lefence`) to check memory access and allocation correctness. The problems were tackled using [AddressSanitizer](https://github.com/google/sanitizers/wiki/AddressSanitizer) and [LeakSanitizer](https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer).",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.5.1",
        "name": "odgi 0.5.1 - Phoenix",
        "release_id": 36330378,
        "tag": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/36330378",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/36330378",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ekg",
          "type": "User"
        },
        "date_created": "2020-12-17T12:45:57Z",
        "date_published": "2020-12-17T18:41:29Z",
        "description": "This updates odgi's node_t objects to store edges and path steps in DYNAMIC hacked_vectors (bit-packed vectors), and adds an encoder to reduce the bitwidth of the path step vector (as in the dynamic GBWT).\r\n\r\nPaths can be added and manipulated in parallel. Locking is provided by atomic flags on each node and the path metadata objects. The path metadata is accessed through lock free maps keyed by string and integer. This allows us to build graphs from GFA in parallel. The graph is no longer copyable due to its inclusion of these atomic primitives.\r\n\r\nThe apply_ordering function, long a thorn in the side of odgi, is rewritten so that each stage of the rewrite occurs in parallel. Relativistic updates to the node path encoding can be applied in parallel, efficiently. This reduces a major single-threaded runtime bottleneck when manipulating graphs with the odgi toolkit.\r\n\r\nThe odgi serialized format is not compatible with previous versions. The magic number in the file has been changed to reflect this.",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.5",
        "name": "fastify everything",
        "release_id": 35434913,
        "tag": "v0.5",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/35434913",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/35434913",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ekg",
          "type": "User"
        },
        "date_created": "2020-04-26T06:15:10Z",
        "date_published": "2020-04-26T06:30:15Z",
        "description": "Testing demonstrated that there was not a significant improvement when using the updated version of the ABI in v0.4, so this drops us back to the previous ABI. Sorry for the noise.",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.4.1",
        "name": "back to old ABI",
        "release_id": 25889327,
        "tag": "v0.4.1",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/25889327",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/25889327",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ekg",
          "type": "User"
        },
        "date_created": "2020-04-25T15:25:18Z",
        "date_published": "2020-04-25T15:27:44Z",
        "description": "This moves edges into their own dyn::hacked_vector, and puts the node sequence in its own string. This seems to cost a bit in memory (~10-15%) but makes it much faster to build odgi.\r\n\r\nA point release is necessary because this breaks ABI compatibility with previous odgi files.",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.4",
        "name": "edgy",
        "release_id": 25881109,
        "tag": "v0.4",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/25881109",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/25881109",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ekg",
          "type": "User"
        },
        "date_created": "2020-03-30T12:40:06Z",
        "date_published": "2020-03-30T18:24:51Z",
        "description": "Another fun point release from your friends in ODGI.\r\n\r\nTrapped in Basilicata, -Erik",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.3",
        "name": "quarantine lockdown magic",
        "release_id": 25016587,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/25016587",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/25016587",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ekg",
          "type": "User"
        },
        "date_created": "2020-02-05T10:07:31Z",
        "date_published": "2020-02-05T10:09:53Z",
        "description": "Things are still pretty fluid, but the system is stabilizing.\r\n\r\nWe now write magic numbers in the odgi file. \r\n\r\nOtherwise, most changes are to command line tools.\r\n\r\nWe are also building up documentation. ",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/0.2",
        "name": "point release often",
        "release_id": 23403592,
        "tag": "0.2",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/23403592",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/23403592",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ekg",
          "type": "User"
        },
        "date_created": "2019-10-29T13:48:15Z",
        "date_published": "2019-11-08T09:39:35Z",
        "description": "This tags an initial release of odgi. This is meant to allow for packaging in bioconda, per #55.\r\n\r\nodgi is relatively stable now, but I think some aspects may still change, thus the v0.1 tag.",
        "html_url": "https://github.com/pangenome/odgi/releases/tag/v0.1",
        "name": "initial release",
        "release_id": 21313574,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/pangenome/odgi/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/pangenome/odgi/releases/21313574",
        "value": "https://api.github.com/repos/pangenome/odgi/releases/21313574",
        "zipball_url": "https://api.github.com/repos/pangenome/odgi/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Notes on dependencies",
        "parent_header": [
          "odgi",
          "installation",
          "Nix build"
        ],
        "type": "Text_excerpt",
        "value": "On `Arch Linux`, the `jemalloc` dependency can be installed with:\n\n```\nsudo pacman -S jemalloc     # arch linux\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pangenome/odgi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:06:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 193
      },
      "technique": "GitHub_API"
    }
  ]
}