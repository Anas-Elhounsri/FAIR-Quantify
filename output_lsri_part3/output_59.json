{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/X-lab-3D/PANDORA"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 1 : Generating a peptide:MHC complex given the peptide sequence",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "PANDORA requires at least these information to generate models:\n- Peptide sequence\n- MHC allele or MHC sequence\n\nSteps:\nA. Load the template database (see installation, point 4)\n\nB. Creating a Template object based on the given target information\n\nC. Generating *n* number of pMHC models (Default *n=20*)\n\nPlease note that you can specify output directory yourself, otherwise will be generated in a folder named as the case ID in the current working directory.\n\nCommand-line:\n```bash\npandora-run -m I -i myTestCase -a HLA-A*0201 -p LLFGYPVYV -k 2,9\n```\nPlease run `pandora-run --help` for further information about the arguments.\n\nPython:\n```python\n## import requested modules\nfrom PANDORA import Target\nfrom PANDORA import Pandora\nfrom PANDORA import Database\n\n## A. Load local Database\ndb = Database.load()\n\n## B. Create Target object\ntarget = Target(id = 'myTestCase',\n    allele_type = 'HLA-A*0201',\n    peptide = 'LLFGYPVYV',\n    anchors = [2,9])\n\n## C. Perform modelling\ncase = Pandora.Pandora(target, db)\ncase.model()\n```\n\nNote: The user can also input the MHC chain sequence directly, without having to rely on the allele name. The argument to provide in this case is `M_chain_seq` for chain Alpha and either `B2M_seq` for MHC-I or `N_chain_seq` for MHC-II beta chain.\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 3: Create multiple loop models in a your given directory",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "There are some options provided that you can input them as arguments to the functions.\n\nFor instance:\n- Generate more models for your modelling case\n- Specify the output directory yourself\n- Give your target a name\n- Predict anchors by NetMHCpan\n\nPlease note that, if *anchors* is not specified or *use_netmhcpan* is set to *False*, PANDORA will automatically assign canonical anchors (P2 and P\u03a9). This can be done automatically only for pMHC-I structures.\n\n```python\nfrom PANDORA import Target\nfrom PANDORA import Pandora\nfrom PANDORA import Database\n\n## A. load the pregenerated Database  of all pMHC PDBs as templates\ndb = Database.load()\n\n## B. Create Target object\ntarget = Target(id = 'myTestCase',\n    allele_type = ['HLA-B*5301', 'HLA-B*5302'],\n    peptide = 'TPYDINQML',\n    use_netmhcpan = True)\n\n## C. Perform modelling\ncase = Pandora.Pandora(target, db, output_dir = '/your/directory/')\ncase.model(n_loop_models=100)  # Generates 100 models\n```\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 5: Generating a peptide:MHC class II complex given the peptide sequence",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "To model a peptide:MHC class II complex, you only need to specify that in *PMHC.Target()* function: as *MHC_class='II'* (By default it is set to model MHC class I).\n\n```python\nfrom PANDORA import Target\nfrom PANDORA import Pandora\nfrom PANDORA import Database\n\n## A. Load pregenerated database of all pMHC PDBs as templates\ndb = Database.load()\n\ntarget = Target(id='myMHCIITestCase',\n    MHC_class = 'II',\n    allele_type = ['HLA-DRA*0102', 'HLA-DRB1*0101'],\n    peptide = 'GELIGILNAAKVPAD',\n    anchors = [4, 7, 9, 12])\n\ncase = Pandora.Pandora(target, db)\ncase.model()\n```\nNote: For MHC II, no canonical anchors can be defined. Therefore the user must either install and use NetMHCIIpan or directly input the anchors positions as *anchors* in *PMHC.Target()*\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-03T15:13:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T16:33:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MODELLER-based, anchor restrained, Peptide-MHC Modelling pipeline "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9554835882442416,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "PANDORA is anchor restrained modelling pipeline for generating peptide-MHC structures. \nIt contains multiple functions to pre-process data and it's able to exploit different crucial domain knowledge provided by the user to guide the modelling. \n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8888906179786797,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "The Docker release is currently not uploaded on DockerHub and, due to licensing of external software (MODELLER and NetMHCpan), the only way to use at this moment is by building the docker image directly from the recipe. \nWe advice to use Docker only in case Conda or Git/Pypi installations are not possible in your system. \n1)  Get MODELLER lincense (and optional softwares, if desired)\n   \nFirst, you will always need to get a modeller license key and, optionally, the netMHCpan and netMHCIIpan installation packages (see [Installation](#installation) for details). \n1) Add your license key\n   \nNow open the dockerfile and replace the \"XXXX\" at line 16 with your MODELLER license key. \n4) (Optional) Install netMHCpan and/or netMHCIIpan\n   \nDownload netMHCpan or netMHCIIpan directly into the PANDORA repository you cloned, then proceed with the installation as explained in their own .readme files until points 2.a and 2.b. \n**For points 2.a and 2.b, make sure you set** NHOME to \"/app/netMHCpan-\\<version>\" and TMPDIR to \"/app/netMHCpan-\\<version>/tmp\" where \\<version> is the version of the software you downloaded (same for netMHCIIpan, as \"/app/netMHCIIpan-\\<version>\"). \nIn case, later, netMHCpan cannot be found by PANDORA, it might mean this step did not work as intended.  \nTo avoid re-downloading the PANDORA database every time you run your docker container, you will need to dowload the database in a folder synced between the container and the local machine.\nTo do so, create a folder (wherever you prefer in your machine). We will call the absolute path to this folder \\<path/to/local/db> \n6) Compile the docker image\n   \nMake sure you are in the PANDORA repo, then run:\n```\ndocker build -t pandora .\n```\nYou may chance \"pandora\" to the name you want to give to your docker image.\nAlso, be advised that including netMHCpan or netMHCIIpan into the image will take docker a considerable longer time. \n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9680873618595675,
      "result": {
        "original_header": "Code Design",
        "type": "Text_excerpt",
        "value": "PANDORA has been implemented in an Object-Oriented Design(OOD). Resulting in a comprehensible and user-friendly framework. \n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9743394910754166,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "The following file structure is prepared to store the output files for each case. Each modelling case is given a specific name based on target and template ID. \n- Main outputs: *molpdf_DOPE.tsv, *BL*.pdb, modeller.log(\n- Input files prepared for modelling: *contacs_*.list, *.ali*\n- *.py* files: MODELLER scripts\n- MODELLER by product outputs(Generated during the modelling): *D0*, DL*, *IL*.pdb , , *.ini, *.lrsr, *.rsr, *.sch, ...*\n```\nDatabases\n  \u2514\u2500\u2500 data\n     \u2514\u2500\u2500 outputs                         Default directory to save output\n        \u2514\u2500\u2500 <target_name>_<template_id>  Each user's modelling case is given a specific name\n\n           \u251c\u2500\u2500 molpdf_DOPE.tsv           Ranking all models by molpdf and DOPE modeller's scoring functions\n           \u251c\u2500\u2500 *BL*.pdb                  Final models\n           \u251c\u2500\u2500 modeller.log              Printing log file generated by MODELLER, describing modelling steps, or any issues arose along modelling\n\n           \u251c\u2500\u2500 *.ali                     Alignment file between template(s) and target used for modelling\n           \u251c\u2500\u2500 contacts_*.list           Contact restraints\n\n           \u251c\u2500\u2500 MyLoop.py                 MODELLER script to set loop modelling parameters for the peptide\n           \u251c\u2500\u2500 cmd_modeller_ini.py       MODELLER script to generate an initial model to extract restraints from\n           \u251c\u2500\u2500 cmd_modeller.py           MODELLER script to set the main modelling parameters\n\n           \u251c\u2500\u2500 *.ini                     Model generated placing the target atoms at the same coordinate as the template's atoms\n           \u251c\u2500\u2500 *IL*.pdb                  Initial loop model\n           \u2514\u2500\u2500 ...\n\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8221453076992199,
      "result": {
        "original_header": "Publication",
        "type": "Text_excerpt",
        "value": "If you use PANDORA, please cite the following paper in your work: \nMarzella DF, Parizi FM, Tilborg Dv, Renaud N, Sybrandi D, Buzatu R, Rademaker DT, \u2018t Hoen PAC and Xue LC (2022) PANDORA: A Fast, Anchor-Restrained Modelling Protocol for Peptide: MHC Complexes. Front. Immunol. 13:878762. doi: 10.3389/fimmu.2022.878762 \n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://csb-pandora.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download Template Database",
        "parent_header": [
          "PANDORA",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "PANDORA needs a PDB template database to work. All the structures are retrieved from [IMGT](http://www.imgt.org/3Dstructure-DB/) database.\n\nThe database can be quickly retrieved by zenodo by running the command-line tool:\n\n```bash\npandora-fetch\n```\n\nAlternatively, the same function can be done in python:\n\n```python\nfrom PANDORA import Database\n\nDatabase.install_database()\n```\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/X-lab-3D/PANDORA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/X-lab-3D/PANDORA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "X-lab-3D/PANDORA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PANDORA"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/reverse_peptide_MHCII/images/reverse_peptide.png"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Install PANDORA",
        "parent_header": [
          "PANDORA",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Install with conda:\n```\nconda install -c csb-nijmegen csb-pandora=2.0.0beta2.2 -c salilab -c bioconda\n```\n\nNote: Mac M1 processors cannot compile muscle version v5.0 and v5.1 from conda. To instll muscle, you will need to build it from source. You can find the muscle 5 code and the link to how to install from source in [their GitHub repo](https://github.com/rcedgar/muscle)."
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Install Modeller:",
        "parent_header": [
          "PANDORA",
          "Installation",
          "GitHub / Pypi installation"
        ],
        "type": "Text_excerpt",
        "value": "Prior to PANDORA installation, you need to first activate MODELLER's license. Please request MODELLER license at: https://salilab.org/modeller/registration.html\n\nReplace XXXX with your MODELLER License key and run the command:\n\n```\nexport KEY_MODELLER='XXXX'\n```\n\nThen, install MODELLER with:\n```\nconda install -y -c salilab modeller\n```\n\nNote: You can also follow the instruction in the conda install output to enter your modeller key in the appropriate file afterwars, instead of setting it beforehand.\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Install Other dependencies",
        "parent_header": [
          "PANDORA",
          "Installation",
          "GitHub / Pypi installation"
        ],
        "type": "Text_excerpt",
        "value": "PANDORA relies on muscle (https://anaconda.org/bioconda/muscle) and blast (https://anaconda.org/bioconda/blast) that can be both installed via bioconda.\n\n\n```\nconda install -c bioconda muscle=5.1 blast=2.10\n```\nFor some HPC systems the conda blast installation might not work due to missing libraries. For those cases, you can download blast from their release page and install it (make shure you add it to your PATH, otherwise PANDORA will not be able to find it): https://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/\n\nNote: Mac M1 processors cannot compile muscle version v5.0 and v5.1 from conda. To instll muscle, you will need to build it from source. You can find the muscle 5 code and the link to how to install from source in [their GitHub repo](https://github.com/rcedgar/muscle).\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Install PANDORA",
        "parent_header": [
          "PANDORA",
          "Installation",
          "GitHub / Pypi installation"
        ],
        "type": "Text_excerpt",
        "value": "Clone the repository:\n```\ngit clone https://github.com/X-lab-3D/PANDORA.git\n```\nEnter the cloned directory and install the package:\n```\ncd PANDORA\npip install -e .\n\n```"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(Optional) Install NetMHCpan and/or NetMHCIIpan",
        "parent_header": [
          "PANDORA",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "PANDORA lets the user to predict peptide's anchor residues instead of using conventional predefined anchor residues.\nIn that case you need to download [NetMHCpan](https://services.healthtech.dtu.dk/cgi-bin/sw_request) (for peptide:MHC class I) and/or [NetMHCIIpan](https://services.healthtech.dtu.dk/cgi-bin/sw_request) (for peptide:MHC class II).\n\nOnce you have obtained the download link, you can install them by following the instructions in their .readme files. Note that PANDORA will assume they are installed and callable from command line (as netMHCpan and netMHCIIpan).\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Differences between pMHC-I modeling and pMHC-II modeling setups",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "PANDORA is the first package capable of handling both pMHC-I and pMHC-II complexes, but with few setup differences, listed in the table below:\n\n\n| --- | pMHC-I | pMHC-II |\n| --- | --- | --- |\n| Anchors | User-provided, predicted with netMHCpan  or automatically assigned on canonical spacing | User-provided or predicted by netMHCIIpan. **Cannot** be automatically assigned.| \n| MHC chains sequences | Alpha chain is called \"M_chain_seq\" and Beta chain is called \"B2M_seq\". Alpha chain is required (either as sequence or allele name). B2M is not required and will be retrieved from the selected template if not provided. | Alpha chain is called \"M_chain_seq\" and Beta chain is called \"N_chain_seq\". They are both required **except for HLA-DR**, for which the alpha chain will be automatically be assigned as HLA-DRA1*01:01 if not provided |\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9955946335102167,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "PANDORA documentation can be found at: https://csb-pandora.readthedocs.io/en/latest/ \n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9990695798406384,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "We advice to use Docker only in case Conda or Git/Pypi installations are not possible in your system. \n1)  Get MODELLER lincense (and optional softwares, if desired)\n   \nFirst, you will always need to get a modeller license key and, optionally, the netMHCpan and netMHCIIpan installation packages (see [Installation](#installation) for details). \nDownload the GitHub repository:\n```\ngit clone https://github.com/X-lab-3D/PANDORA.git\ncd PANDORA\n``` \n4) (Optional) Install netMHCpan and/or netMHCIIpan\n   \nDownload netMHCpan or netMHCIIpan directly into the PANDORA repository you cloned, then proceed with the installation as explained in their own .readme files until points 2.a and 2.b. \n**For points 2.a and 2.b, make sure you set** NHOME to \"/app/netMHCpan-\\<version>\" and TMPDIR to \"/app/netMHCpan-\\<version>/tmp\" where \\<version> is the version of the software you downloaded (same for netMHCIIpan, as \"/app/netMHCIIpan-\\<version>\"). \nTo avoid re-downloading the PANDORA database every time you run your docker container, you will need to dowload the database in a folder synced between the container and the local machine.\nTo do so, create a folder (wherever you prefer in your machine). We will call the absolute path to this folder \\<path/to/local/db> \n6) Compile the docker image\n   \nMake sure you are in the PANDORA repo, then run:\n```\ndocker build -t pandora .\n```\nYou may chance \"pandora\" to the name you want to give to your docker image.\nAlso, be advised that including netMHCpan or netMHCIIpan into the image will take docker a considerable longer time. \n8) (First time only) Download the PANDORA database\nInside your docker container, run the following to download the database:\n```\npandora-fetch\n```\nIt will be downloaded into a folder we previously linked to \\<path/to/local/db>, thus will finally end up in your local machine. \nDone! Now you are ready to use PANDORA. Just remember to always run the docker container with:\n```\ndocker run -v <path/to/local/db>:/root/PANDORA_databases/default/ -it pandora\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9678872078610884,
      "result": {
        "original_header": "Issues",
        "type": "Text_excerpt",
        "value": "If you have questions or find a bug, please report the issue in the [Github issue channel](https://github.com/X-lab-3D/PANDORA/issues).\n \n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9394083281078192,
      "result": {
        "original_header": "Publication",
        "type": "Text_excerpt",
        "value": "https://www.frontiersin.org/articles/10.3389/fimmu.2022.878762/full\n \n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8173900160101216,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "2) Download PANDORA \n7) Run the docker container \n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8113828968835615,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "- Main outputs: *molpdf_DOPE.tsv, *BL*.pdb, modeller.log(\n- Input files prepared for modelling: *contacs_*.list, *.ali*\n- *.py* files: MODELLER scripts\n- MODELLER by product outputs(Generated during the modelling): *D0*, DL*, *IL*.pdb , , *.ini, *.lrsr, *.rsr, *.sch, ...*\n```\nDatabases\n  \u2514\u2500\u2500 data\n     \u2514\u2500\u2500 outputs                         Default directory to save output\n        \u2514\u2500\u2500 <target_name>_<template_id>  Each user's modelling case is given a specific name\n\n           \u251c\u2500\u2500 molpdf_DOPE.tsv           Ranking all models by molpdf and DOPE modeller's scoring functions\n           \u251c\u2500\u2500 *BL*.pdb                  Final models\n           \u251c\u2500\u2500 modeller.log              Printing log file generated by MODELLER, describing modelling steps, or any issues arose along modelling\n\n           \u251c\u2500\u2500 *.ali                     Alignment file between template(s) and target used for modelling\n           \u251c\u2500\u2500 contacts_*.list           Contact restraints\n\n           \u251c\u2500\u2500 MyLoop.py                 MODELLER script to set loop modelling parameters for the peptide\n           \u251c\u2500\u2500 cmd_modeller_ini.py       MODELLER script to generate an initial model to extract restraints from\n           \u251c\u2500\u2500 cmd_modeller.py           MODELLER script to set the main modelling parameters\n\n           \u251c\u2500\u2500 *.ini                     Model generated placing the target atoms at the same coordinate as the template's atoms\n           \u251c\u2500\u2500 *IL*.pdb                  Initial loop model\n           \u2514\u2500\u2500 ...\n\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/X-lab-3D/PANDORA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Get a Modeller Key License:",
        "parent_header": [
          "PANDORA",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Prior to PANDORA installation, you need to first activate MODELLER's license. Please request MODELLER license at: https://salilab.org/modeller/registration.html\n\nReplace XXXX with your MODELLER License key and run the command:\n\n```\nexport KEY_MODELLER='XXXX'\n```\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DarioMarzella/PANDORA/master/images/flowchart_pMHCI.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PANDORA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "X-lab-3D"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 303145,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 51,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://csb-pandora.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DarioMarzella",
          "type": "User"
        },
        "date_created": "2023-11-02T16:16:32Z",
        "date_published": "2023-11-02T18:40:45Z",
        "description": "##What's changed:\r\n* Fixed database loaded on zenodo. Updated zenodo link\r\n* Fixed issues 251 and 252\r\n\r\n**Full Changelog**: https://github.com/X-lab-3D/PANDORA/compare/v2.0.0-beta2.1...v2.0.0-beta2.2",
        "html_url": "https://github.com/X-lab-3D/PANDORA/releases/tag/v2.0.0-beta2.2",
        "name": "v2.0.0-beta2.2",
        "release_id": 127745141,
        "tag": "v2.0.0-beta2.2",
        "tarball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/tarball/v2.0.0-beta2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/127745141",
        "value": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/127745141",
        "zipball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/zipball/v2.0.0-beta2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DarioMarzella",
          "type": "User"
        },
        "date_created": "2023-11-02T14:07:47Z",
        "date_published": "2023-11-02T14:16:21Z",
        "description": "## What's Changed\r\n*Update Zenodo link for database download\r\n*Minor changed in documentation\r\n\r\n## New Contributors\r\n* @jonasfoe made their first contribution in https://github.com/X-lab-3D/PANDORA/pull/241\r\n\r\n",
        "html_url": "https://github.com/X-lab-3D/PANDORA/releases/tag/v2.0.0-beta2.1",
        "name": "v2.0.0-beta2.1",
        "release_id": 127702834,
        "tag": "v2.0.0-beta2.1",
        "tarball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/tarball/v2.0.0-beta2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/127702834",
        "value": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/127702834",
        "zipball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/zipball/v2.0.0-beta2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DarioMarzella",
          "type": "User"
        },
        "date_created": "2023-03-14T18:10:46Z",
        "date_published": "2023-03-16T14:07:04Z",
        "description": "## What's Changed\r\n* Add fully flexible modeling by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/236\r\n* Merge branch from PR 237 by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/238\r\n* Issue 235 by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/239\r\n\r\n\r\n**Full Changelog**: https://github.com/X-lab-3D/PANDORA/compare/v2.0.0-beta1...v2.0.0-beta2",
        "html_url": "https://github.com/X-lab-3D/PANDORA/releases/tag/v2.0.0-beta2",
        "name": "v2.0.0-beta2",
        "release_id": 95849834,
        "tag": "v2.0.0-beta2",
        "tarball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/tarball/v2.0.0-beta2",
        "type": "Release",
        "url": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/95849834",
        "value": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/95849834",
        "zipball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/zipball/v2.0.0-beta2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DarioMarzella",
          "type": "User"
        },
        "date_created": "2023-02-27T14:50:53Z",
        "date_published": "2023-02-27T14:53:35Z",
        "description": "\r\n\r\n## What's Changed\r\n\r\n* Add Docker recipe and instruction. by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/228\r\n* Add Beta-2 microglobulin by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/231\r\n* Update zenodo link. Hotfix cmd_pandora commands and default database\u2026 by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/233\r\n* Improve docs and hotfix some workdir issues.\r\n\r\n\r\n**Full Changelog**: https://github.com/X-lab-3D/PANDORA/compare/v2.0.0-beta...v2.0.0-beta1",
        "html_url": "https://github.com/X-lab-3D/PANDORA/releases/tag/v2.0.0-beta1",
        "name": "v2.0.0-beta1",
        "release_id": 93802107,
        "tag": "v2.0.0-beta1",
        "tarball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/tarball/v2.0.0-beta1",
        "type": "Release",
        "url": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/93802107",
        "value": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/93802107",
        "zipball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/zipball/v2.0.0-beta1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DarioMarzella",
          "type": "User"
        },
        "date_created": "2022-11-25T11:01:20Z",
        "date_published": "2022-11-25T14:57:43Z",
        "description": "## What's Changed\r\n* Fix conda and pip installation. Move database default location. Add command line option to retrieve the external database. by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/222\r\n* Add command-line options upon conda / pip installation. Update README. by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/223\r\n\r\n\r\n**Full Changelog**: https://github.com/X-lab-3D/PANDORA/compare/v2.0.0-alpha1...v2.0.0-beta",
        "html_url": "https://github.com/X-lab-3D/PANDORA/releases/tag/v2.0.0-beta",
        "name": "v2.0.0-beta",
        "release_id": 84194755,
        "tag": "v2.0.0-beta",
        "tarball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/tarball/v2.0.0-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/84194755",
        "value": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/84194755",
        "zipball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/zipball/v2.0.0-beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DarioMarzella",
          "type": "User"
        },
        "date_created": "2022-10-26T18:30:26Z",
        "date_published": "2022-11-11T13:41:55Z",
        "description": "## What's Changed\r\n* Fix Issue 151. Update dependencies and README. Update setup.py by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/208\r\n* change archiving so that only the case folder (one level) will be included inside the .tar files by @heleensev in https://github.com/X-lab-3D/PANDORA/pull/211\r\n* Add PMHC.__init__.py and remove obsolete IMGT retrieving module by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/212\r\n* Issue#204 by @Smaassen2 in https://github.com/X-lab-3D/PANDORA/pull/209\r\n* Fix redundant imports in the package by @gcroci2 in https://github.com/X-lab-3D/PANDORA/pull/214\r\n* Rename mhcseqs files and add blast database folder. by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/216\r\n\r\n\r\n**Full Changelog**: https://github.com/X-lab-3D/PANDORA/compare/v2.0.0-alpha...v2.0.0-alpha1",
        "html_url": "https://github.com/X-lab-3D/PANDORA/releases/tag/v2.0.0-alpha1",
        "name": "v2.0.0-alpha1",
        "release_id": 81652066,
        "tag": "v2.0.0-alpha1",
        "tarball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/tarball/v2.0.0-alpha1",
        "type": "Release",
        "url": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/81652066",
        "value": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/81652066",
        "zipball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/zipball/v2.0.0-alpha1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DarioMarzella",
          "type": "User"
        },
        "date_created": "2022-10-11T14:33:55Z",
        "date_published": "2022-10-11T14:47:12Z",
        "description": "## What's Changed\r\n* Template selection is now BLAST-based by default\r\n* PANDORA now uses BLAST to retrieve the allele name (from IPD/MHC and IMGT/HLA databases)\r\n* Made target sequence handling more robust. PANDORA can now take either the allele name or the MHC chain sequence and will try to retrieve the other automatically.\r\n* Added an option to use template MHC sequence when no MHC sequence can be retrieved. Previously it was done by default, leading to incorrect models. Now, if no MHC sequence can be retrieved, the run will be stopped, unless the user sets use_templ_seq to True in their Target or Wrapper function.\r\n* Database restructured. Now the user does not need to know the installation location and to handle any PANDORA-dependent path. By simply using functions like Database.construct_database() and Database.load() the user is able to generate and then load a database, without having to specify its location.\r\n* Removed the need for Database.repath() function. Removed Database.repath() function.\r\n* Parallelized and sped up database generation. Database generation takes now about 20~30 minutes on a single core, and it can be parallelized to reduce the time to less than one minute.\r\n* Fixed multiple issues in netMHCpan interface. Now PANDORA does not need netMHC(II)pan to be installed internally anymore.\r\n* Added clip_C_domain option to Pandora and Wrapper modules, to directly model only the G-domain\r\n* Added the archiving option to the Wrapper, to allow users to model large batches of cases and immediately archive every folder in a .tar file.\r\n* Extended pytest coverage\r\n* Fixed numerous issues\r\n\r\n## Pull Requests\r\n* Major updates to make MHCII, template selection and database download more robust.  by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/128\r\n* Development by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/129\r\n* Merge mhcii_dm into development.  by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/130\r\n* Mhcii dm by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/149\r\n* fixed an issue where the database creation script would crash by @DanLep97 in https://github.com/X-lab-3D/PANDORA/pull/152\r\n* Update Wrapper and run_model.py to use a dictionary of arguments inst\u2026 by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/177\r\n* Restructuring PANDORA's files by @gcroci2 in https://github.com/X-lab-3D/PANDORA/pull/164\r\n* Update parallelize_db to development by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/178\r\n* Parallelize templates cleaning by @gcroci2 in https://github.com/X-lab-3D/PANDORA/pull/169\r\n* Add get_pdb_path() method to PMHC.template objects to replace static \u2026 by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/179\r\n* tutorial example 3 changed name parameters by @Smaassen2 in https://github.com/X-lab-3D/PANDORA/pull/184\r\n* Example 4 in tutorial has incorrect id by @Smaassen2 in https://github.com/X-lab-3D/PANDORA/pull/185\r\n* Add get_pdb_path() method to PMHC.template objects to replace static \u2026 by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/187\r\n* Fix pytest dev by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/189\r\n* Add exception in run_model.py to prevent the Wrapper from crashing by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/191\r\n* Fix Muscle version issue. Add blast to dependencies. Update README by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/193\r\n* Issue 112 by @Smaassen2 in https://github.com/X-lab-3D/PANDORA/pull/196\r\n* Fix/update of the test_pandora.py file by @Smaassen2 in https://github.com/X-lab-3D/PANDORA/pull/200\r\n* Archiving by @heleensev in https://github.com/X-lab-3D/PANDORA/pull/199\r\n* remove netMHCpan_install.py as obsolete. Update README. Fix an issue \u2026 by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/201\r\n* Fix issue 202 by @DarioMarzella in https://github.com/X-lab-3D/PANDORA/pull/206\r\n\r\n## New Contributors\r\n* @NicoRenaud made their first contribution in https://github.com/X-lab-3D/PANDORA/pull/108\r\n* @DTRademaker made their first contribution in https://github.com/X-lab-3D/PANDORA/pull/114\r\n* @DanLep97 made their first contribution in https://github.com/X-lab-3D/PANDORA/pull/152\r\n* @gcroci2 made their first contribution in https://github.com/X-lab-3D/PANDORA/pull/164\r\n* @Smaassen2 made their first contribution in https://github.com/X-lab-3D/PANDORA/pull/184\r\n* @heleensev made their first contribution in https://github.com/X-lab-3D/PANDORA/pull/199\r\n\r\n**Full Changelog**: https://github.com/X-lab-3D/PANDORA/commits/v2.0.0-alpha",
        "html_url": "https://github.com/X-lab-3D/PANDORA/releases/tag/v2.0.0-alpha",
        "name": "v2.0.0-alpha",
        "release_id": 79146706,
        "tag": "v2.0.0-alpha",
        "tarball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/tarball/v2.0.0-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/79146706",
        "value": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/79146706",
        "zipball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/zipball/v2.0.0-alpha"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DarioMarzella",
          "type": "User"
        },
        "date_created": "2022-08-25T14:17:14Z",
        "date_published": "2022-11-25T14:53:48Z",
        "description": "First Release of the PANDORA package, published with the [Marzella, Parizi et. al Frontiers in immunology paper](https://www.frontiersin.org/articles/10.3389/fimmu.2020.00296/full). ",
        "html_url": "https://github.com/X-lab-3D/PANDORA/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 84194046,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/84194046",
        "value": "https://api.github.com/repos/X-lab-3D/PANDORA/releases/84194046",
        "zipball_url": "https://api.github.com/repos/X-lab-3D/PANDORA/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "PANDORA"
        ],
        "type": "Text_excerpt",
        "value": "PANDORA requires MODELLER, python and some python libraries to be installed.\nThe following installations are required to start PANDORA installation:\n\n- [Python](https://www.python.org/) >=3.7\n- conda\n- pip3\n\nThe (conda) installation process will take care of installing the following dependencies (see [Installation](#installation)):\n\n- [BioPython](https://anaconda.org/conda-forge/biopython)\n- [muscle](https://anaconda.org/bioconda/muscle) >= 5.1\n- [Modeller](https://anaconda.org/salilab/modeller) >= 9.3\n- [Blast](https://anaconda.org/bioconda/blast) >= 10.2\n- [pdb2sql](https://github.com/DeepRank/pdb2sql) (Required only for RMSD calculations for evaluation purposes)\n\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Install Other dependencies",
        "parent_header": [
          "PANDORA",
          "Installation",
          "GitHub / Pypi installation"
        ],
        "type": "Text_excerpt",
        "value": "PANDORA relies on muscle (https://anaconda.org/bioconda/muscle) and blast (https://anaconda.org/bioconda/blast) that can be both installed via bioconda.\n\n\n```\nconda install -c bioconda muscle=5.1 blast=2.10\n```\nFor some HPC systems the conda blast installation might not work due to missing libraries. For those cases, you can download blast from their release page and install it (make shure you add it to your PATH, otherwise PANDORA will not be able to find it): https://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/\n\nNote: Mac M1 processors cannot compile muscle version v5.0 and v5.1 from conda. To instll muscle, you will need to build it from source. You can find the muscle 5 code and the link to how to install from source in [their GitHub repo](https://github.com/rcedgar/muscle).\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 2: Run PANDORA Wrapper on multiple cases (running in parallel on multiple cores)",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "PANDORA can model large batches of peptides in parallel. You need to provide the following peptide information in a *.tsv* or *.csv* file:\n\n- *Peptide sequence,  MHC Allele name / MHC chain sequence*\n\nNote: you can also add various information to your file, including anchors for each case, templates, IDs.\nYou can find all the arguments for the master branch version in the [documentation](https://csb-pandora.readthedocs.io/en/latest/PANDORA.Wrapper.html#module-PANDORA.Wrapper.Wrapper).\nFor other branches, like development, we suggest you to use the python help() function or check directly the [docstring in the source code](https://github.com/X-lab-3D/PANDORA/blob/d43f9d91bee9f793ee7fe4cb10be3cb4e299e36d/PANDORA/Wrapper/Wrapper.py#L147).\n\nThe Wrapper class will take care of generating PANDORA target objects and parallelize the modelling on the given number of cores <n_cores>:\n\nCommand-line:\n```bash\npandora-wrapper -m I -f datafile.tsv -h False  -p 0 -a 1 -d tab\n```\nPlease run `pandora-wrapper --help` for further information about the arguments.\n\n```python\nfrom PANDORA import Database\nfrom PANDORA import Wrapper\n\n## A. Load local database\ndb = Database.load()\n\n## B. Create the wrapper object. It will also run the modelling for each case.\nwrap =  Wrapper.Wrapper('datafile.tsv', db, num_cores=<n_cores>)\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:33:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Get a Modeller Key License:",
        "parent_header": [
          "PANDORA",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Prior to PANDORA installation, you need to first activate MODELLER's license. Please request MODELLER license at: https://salilab.org/modeller/registration.html\n\nReplace XXXX with your MODELLER License key and run the command:\n\n```\nexport KEY_MODELLER='XXXX'\n```\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(Advanced) Generate template Database (does not work for reverse peptide templates, use fetch instead)",
        "parent_header": [
          "PANDORA",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can also generate the database from scratch, downloading and parsing the structures directly from IMGT. This will ensure you to have as many templates as possible, as the quickly-retrievable database will not be re-released often. \n\nThe database can be generated with the command-line tool:\n\n```bash\npandora-create\n```\n\nOr with the pythoncode below: \n\nFirst, generate the necessary folders by running:\n```\npython install.py\n```\nThen, run the following script changing the path to the database you want to generate:\n\n```python\n## import requested modules\nfrom PANDORA import Database\n\n## A. Create local Database\ndb = Database.Database()\ndb.construct_database(n_jobs=<n_jobs>)\n```\n\n\nNote 1:  By default, the database generation will use one core only. You can sensitevly speed it up by changing the paramenter --num-cores for pandora-create or 'n_jobs' for Database.contruct_database().\n\nNote 2: the database is saved by default into `~/PANDORA_databases/default`. It is possible to modify the folder name (`default`) by creating a `config.json` file in the PANDORA installation folder using `data_folder_name` as a key, and the desired folder name as a value, like in the example below:\n\n```\n{\"data_folder_name\": \"<folder_in_Databases>\"}\n```\n\nNote 3 (For master branch only, conda release v0.9.0): You can download the pre-made database from https://github.com/X-lab-3D/PANDORA_database (pMHC I only, generated on 23/03/2021) and follow the [instructions](https://github.com/X-lab-3D/PANDORA_database/blob/main/README.md). Please be sure you re-path your database as explained in the instructions.\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 1 : Generating a peptide:MHC complex given the peptide sequence",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "PANDORA requires at least these information to generate models:\n- Peptide sequence\n- MHC allele or MHC sequence\n\nSteps:\nA. Load the template database (see installation, point 4)\n\nB. Creating a Template object based on the given target information\n\nC. Generating *n* number of pMHC models (Default *n=20*)\n\nPlease note that you can specify output directory yourself, otherwise will be generated in a folder named as the case ID in the current working directory.\n\nCommand-line:\n```bash\npandora-run -m I -i myTestCase -a HLA-A*0201 -p LLFGYPVYV -k 2,9\n```\nPlease run `pandora-run --help` for further information about the arguments.\n\nPython:\n```python\n## import requested modules\nfrom PANDORA import Target\nfrom PANDORA import Pandora\nfrom PANDORA import Database\n\n## A. Load local Database\ndb = Database.load()\n\n## B. Create Target object\ntarget = Target(id = 'myTestCase',\n    allele_type = 'HLA-A*0201',\n    peptide = 'LLFGYPVYV',\n    anchors = [2,9])\n\n## C. Perform modelling\ncase = Pandora.Pandora(target, db)\ncase.model()\n```\n\nNote: The user can also input the MHC chain sequence directly, without having to rely on the allele name. The argument to provide in this case is `M_chain_seq` for chain Alpha and either `B2M_seq` for MHC-I or `N_chain_seq` for MHC-II beta chain.\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 2: Run PANDORA Wrapper on multiple cases (running in parallel on multiple cores)",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "PANDORA can model large batches of peptides in parallel. You need to provide the following peptide information in a *.tsv* or *.csv* file:\n\n- *Peptide sequence,  MHC Allele name / MHC chain sequence*\n\nNote: you can also add various information to your file, including anchors for each case, templates, IDs.\nYou can find all the arguments for the master branch version in the [documentation](https://csb-pandora.readthedocs.io/en/latest/PANDORA.Wrapper.html#module-PANDORA.Wrapper.Wrapper).\nFor other branches, like development, we suggest you to use the python help() function or check directly the [docstring in the source code](https://github.com/X-lab-3D/PANDORA/blob/d43f9d91bee9f793ee7fe4cb10be3cb4e299e36d/PANDORA/Wrapper/Wrapper.py#L147).\n\nThe Wrapper class will take care of generating PANDORA target objects and parallelize the modelling on the given number of cores <n_cores>:\n\nCommand-line:\n```bash\npandora-wrapper -m I -f datafile.tsv -h False  -p 0 -a 1 -d tab\n```\nPlease run `pandora-wrapper --help` for further information about the arguments.\n\n```python\nfrom PANDORA import Database\nfrom PANDORA import Wrapper\n\n## A. Load local database\ndb = Database.load()\n\n## B. Create the wrapper object. It will also run the modelling for each case.\nwrap =  Wrapper.Wrapper('datafile.tsv', db, num_cores=<n_cores>)\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 3: Create multiple loop models in a your given directory",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "There are some options provided that you can input them as arguments to the functions.\n\nFor instance:\n- Generate more models for your modelling case\n- Specify the output directory yourself\n- Give your target a name\n- Predict anchors by NetMHCpan\n\nPlease note that, if *anchors* is not specified or *use_netmhcpan* is set to *False*, PANDORA will automatically assign canonical anchors (P2 and P\u03a9). This can be done automatically only for pMHC-I structures.\n\n```python\nfrom PANDORA import Target\nfrom PANDORA import Pandora\nfrom PANDORA import Database\n\n## A. load the pregenerated Database  of all pMHC PDBs as templates\ndb = Database.load()\n\n## B. Create Target object\ntarget = Target(id = 'myTestCase',\n    allele_type = ['HLA-B*5301', 'HLA-B*5302'],\n    peptide = 'TPYDINQML',\n    use_netmhcpan = True)\n\n## C. Perform modelling\ncase = Pandora.Pandora(target, db, output_dir = '/your/directory/')\ncase.model(n_loop_models=100)  # Generates 100 models\n```\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 4: Model a peptide:MHCI complex with an alpha helix in the peptide",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "Input domain secondary structure prediction information (Helix/Beta strand):\n\n```python\nfrom PANDORA import Target\nfrom PANDORA import Pandora\nfrom PANDORA import Database\n\n## A. Load pregenerated database of all pMHC PDBs as templates\ndb = Database.load()\n\n## B. Create Target object\ntarget = Target(id = 'myMHCITestCase',\n    allele_type = 'MH1-B*2101',\n    peptide = 'TAGQSNYDRL',\n    anchors = [2,10],\n    helix = ['4', '9'])\n\n## C. Perform modelling\ncase = Pandora.Pandora(target, db)\ncase.model(helix=target.helix)\n```"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 5: Generating a peptide:MHC class II complex given the peptide sequence",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "To model a peptide:MHC class II complex, you only need to specify that in *PMHC.Target()* function: as *MHC_class='II'* (By default it is set to model MHC class I).\n\n```python\nfrom PANDORA import Target\nfrom PANDORA import Pandora\nfrom PANDORA import Database\n\n## A. Load pregenerated database of all pMHC PDBs as templates\ndb = Database.load()\n\ntarget = Target(id='myMHCIITestCase',\n    MHC_class = 'II',\n    allele_type = ['HLA-DRA*0102', 'HLA-DRB1*0101'],\n    peptide = 'GELIGILNAAKVPAD',\n    anchors = [4, 7, 9, 12])\n\ncase = Pandora.Pandora(target, db)\ncase.model()\n```\nNote: For MHC II, no canonical anchors can be defined. Therefore the user must either install and use NetMHCIIpan or directly input the anchors positions as *anchors* in *PMHC.Target()*\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 6: Generating a peptide:MHC class II complex with a reversed peptide",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "Reversed peptide binding is often observed in specific alleles of MHC-II, but PANDORA allows you to model reverse peptides for any MHC-II allele. \n\n**Note**: When performing reversed peptide modeling, **only the anchor residues should be considered in reverse order**, while the rest of the peptide should maintain its normal sequence. This ensures that the reversed template preserves the correct binding interactions at the MHC anchor positions.\n\nRequired Information:\n\n- Peptide sequence (normal sequence)\n\n- MHC allele or MHC sequence\n\n- Anchor residues (input in reverse order, descending)\n\nSteps:\n\n- A. Load the template database\n\n- B. Creating a Target object based on the given target information, with the reverse option set to True\n\n- C. Generating the pMHC model using the reversed template\n\nAs illustrated in the figure, this example demonstrates a peptide sequence with anchor residues [11, 8, 6, 3] in reverse order.\n\n<img src=\"https://github.com/X-lab-3D/PANDORA/blob/reverse_peptide_MHCII/images/reverse_peptide.png\" alt=\"Logo\" width=\"500\">\n\nHow to run PANDORA for a peptide sequence with anchor residues [10, 7, 5, 2] in reverse order:\n\n```python\n## Import required modules\nfrom PANDORA import Target\nfrom PANDORA import Pandora\nfrom PANDORA import Database\n\n## A. Load local Database\ndb = Database.load()\n\n## B. Create Target object with reverse peptide option\ntarget = Target(id='reversedTestCase',\n    MHC_class='II',\n    peptide='VLQAGFFLLTRIL',\n    allele_type=['HLA-DPA1*02:01', 'HLA-DPB1*01:01'],\n    anchors=[10, 7, 5, 2],                             # Input anchors in reverse order\n    reverse=True)                                      # Flag to indicate the use of reversed peptides\n\n## C. Perform modelling\ncase = Pandora.Pandora(target, db)\ncase.model()\n```\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 7: Benchmark PANDORA on one modelling case",
        "parent_header": [
          "PANDORA",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "Evaluate the framework on a target with a known experimental structure:\n- Provide the PDB ID for the *Target* class\n- Set *benchmark=True* for the modelling\n  (calculates L-RMSD to show how far the model is from the near-native structure)\n\n```python\nfrom PANDORA import Target\nfrom PANDORA import Pandora\nfrom PANDORA import Database\n\n## A. Load pregenerated database of all pMHC PDBs as templates\ndb = Database.load()\n\n## B. Create Target object\ntarget = Target(id='1A1M',\n    allele_type=db.MHCI_data['1A1M'].allele_type,\n    peptide=db.MHCI_data['1A1M'].peptide,\n    anchors = db.MHCI_data['1A1M'].anchors)\n    \n## C. Perform modelling\ncase = Pandora.Pandora(target, db)\ncase.model(benchmark=True)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/X-lab-3D/PANDORA/master/README.md",
      "technique": "header_analysis"
    }
  ]
}