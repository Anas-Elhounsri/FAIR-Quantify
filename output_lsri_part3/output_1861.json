{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "MetaPred"
        ],
        "type": "Text_excerpt",
        "value": "If you happen to use our work, please consider citing our paper: \n```\n@inproceedings{Zhang:2019:MMC:3292500.3330779,\n author = {Zhang, Xi Sheryl and Tang, Fengyi and Dodge, Hiroko H. and Zhou, Jiayu and Wang, Fei},\n title = {MetaPred: Meta-Learning for Clinical Risk Prediction with Limited Patient Electronic Health Records},\n booktitle = {Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery \\& Data Mining},\n series = {KDD '19},\n year = {2019},\n location = {Anchorage, AK, USA},\n pages = {2487--2495},\n} \n```\nThis paper can be accessed on : [MetaPred] (https://dl.acm.org/citation.cfm?id=3330779)\n\n"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Zhang, Xi Sheryl and Tang, Fengyi and Dodge, Hiroko H. and Zhou, Jiayu and Wang, Fei",
        "format": "bibtex",
        "title": "MetaPred: Meta-Learning for Clinical Risk Prediction with Limited Patient Electronic Health Records",
        "type": "Text_excerpt",
        "value": "@inproceedings{Zhang:2019:MMC:3292500.3330779,\n    pages = {2487--2495},\n    location = {Anchorage, AK, USA},\n    year = {2019},\n    series = {KDD '19},\n    booktitle = {Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery \\& Data Mining},\n    title = {MetaPred: Meta-Learning for Clinical Risk Prediction with Limited Patient Electronic Health Records},\n    author = {Zhang, Xi Sheryl and Tang, Fengyi and Dodge, Hiroko H. and Zhou, Jiayu and Wang, Fei},\n}"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sheryl-ai/MetaPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-02-04T03:37:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-26T05:31:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MetaPred: Meta-Learning for Clinical Risk Prediction with Limited Patient Electronic Health Records (KDD 2019)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9872145201533588,
      "result": {
        "original_header": "MetaPred",
        "type": "Text_excerpt",
        "value": "The repo is code (baseline and the proposed MetaPred) for paper MetaPred: Meta-Learning for Clinical Risk Prediction with Limited Patient Electronic Health Records by [Xi Sheryl Zhang](https://www.xi-zhang.net), [Fengyi Tang](https://github.com/af1tang), [Hiroko H. Dodge](https://medicine.umich.edu/dept/neurology/hiroko-dodge-phd), [Jiayu Zhou](https://jiayuzhou.github.io), and [Fei Wang](https://sites.google.com/site/cornellwanglab/home).  \n \n"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9333342795826609,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "MetaPred is a meta-learning framework for Clinical Risk Prediction using limited patient Electronic Health Records (EHRs). We given an example in the following figure: \nSuppose we have multiple domains, our goal is to predict Alzheimer\u2019s disease with few labeled patients, which give rise to a low-resource classification. The idea is to employ labeled patients from high-resource domains and design a learning to transfer framework with sources and a simulated target in meta-learning. There are four steps: (1) constructing episodes by sampling from the source domains and the simulated target domain; (2) learn the parameters of predictors in an episode-by-episode manner; (3) fine-tuning the model parameters on the genuine target domain; (4) predicting the target clinical risk. We respectively implemented Convolutional Neural Network (CNN) and Long-Shot Term Memory (LSTM) Network as base predictors. The model overview (meta-training procedure) is shown as follows: \nThe entire learning procedure can be viewed as: iteratively transfer the parameter \u0398 learned from source domains through utilizing it as the initialization of the parameter that needs to be updated in the target domain.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9782482731730117,
      "result": {
        "original_header": "Results",
        "type": "Text_excerpt",
        "value": "The learned representations of patients in five disease domains are visualized by t-SNE. In detail, AD, PD, DM, AM, MCI are abbreviations of Alzheimer's Disease, Parkinson's Disease, Dementia, Amnesia and Mild Cognitive Impairment, respectively. As a patient might suffer multiple diseases, there is supposed to be some overlaps among the given domains. \nTo demonstrate the effectiveness of the proposed MetaPred in the context of domain adaptation, we compare it with the state-of-the-art meta-learning algorithm ``Model-Agnostic Meta-Learning for Fast Adaptation of Deep Networks`` (MAML). The results on Alzheimer's Disease domain are presented in terms of AUC and F1-Score. \n<p align=\"center\"><img src=\"figures/vs_maml_ad_cnn.png\" alt=\"Performance comparison of MetaPred and MAML on the top of Alzheimer's Disease\" width=\"500\"></p> \n"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sheryl-ai/MetaPred/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sheryl-ai/MetaPred/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sheryl-ai/MetaPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MetaPred"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/metapred.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/figures/task-design.png"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/figures/patient_vis_metapred.png"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/figures/vs_maml_ad_cnn.png"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sheryl-ai/MetaPred/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "meta-learning"
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/figures/MetaPred.png"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MetaPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "sheryl-ai"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 175149,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 543,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://progressbar-2.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1703.03400"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "MetaPred"
        ],
        "type": "Text_excerpt",
        "value": "This package has the following requirements:\n* `Python 3.x`\n* [TensorFlow 1.5](https://github.com/tensorflow/tensorflow)\n* [Progress Bar](https://progressbar-2.readthedocs.io/en/latest/index.html)\n\n"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to Run",
        "parent_header": [
          "MetaPred",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To run MetaPred on EHR data, you need to revise the learning settings in main.py and the network hyperparameters in model.py. Then run the shell script metapred.sh.\n```bash\nbash metapred.sh\n```\nOur settings of learning procedures are:\n```bash\npython main.py --method='cnn' --metatrain_iterations=10000 --meta_batch_size=32 --update_batch_size=4 --meta_lr=0.001 --update_lr=1e-5 --num_updates=4 --n_total_batches=500000\n```\nor\n```bash\npython main.py --method='rnn' --metatrain_iterations=10000 --meta_batch_size=32 --update_batch_size=4 --meta_lr=0.001 --update_lr=1e-5 --num_updates=4 --n_total_batches=500000\n```\n"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:34:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 48
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Baseline in Sequential Data Modeling",
        "parent_header": [
          "MetaPred",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The [baseline implementation](https://github.com/sheryl-ai/MetaPred/tree/master/baselines) includes:\n* Logistic Regression\n* K-Nearest Neighbors \n* XGBoost \n* SVM\n* Random Forest\n* MLP\n* LSTM\n* CNN\n\nwhich can be used in any sort of sequence modeling, especially for EHRs data, directly.\n"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Additional Material",
        "parent_header": [
          "MetaPred",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "There is implementations used in:\n\nChelsea Finn, Pieter Abbeel, Sergey Levine, [Model-Agnostic Meta-Learning for Fast Adaptation of Deep Networks](https://arxiv.org/abs/1703.03400), International Conference on Machine Learning (ICML), 2017.\n"
      },
      "source": "https://raw.githubusercontent.com/sheryl-ai/MetaPred/master/README.md",
      "technique": "header_analysis"
    }
  ]
}