{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PaNOSC-ViNYL/McStasScript"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Guidelines for contributing to McStasScript\n\nThis document describes how to contribute to McStasScript. The preferred method is to open a pull request on the GitHub page. The list below acts as a checklist of things to consider before creating the pull request. Since the manual is currently on overleaf, there is no way to directly contribute, so a note on the necessary updates to the manual is appreciated.\n\n* Provide docstrings to new functions / classes\n* Update docstrings as necessary\n* Adhere to PEP-8 where reasonable\n* Include a unit test for new functionality\n* Note for updates required to manual \n* Clear Jupyter Notebooks before committing\n* Check CI tests passes\n* Use flake8 to check code quality, reduce to reasonable number of issues\n"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-05T11:49:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-20T12:40:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "McStas API for creating and running McStas instruments from python scripting"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8936631559496014,
      "result": {
        "original_header": "McStasScript",
        "type": "Text_excerpt",
        "value": "[McStas](http://www.mcstas.org) API for creating and running McStas/McXtrace instruments from python scripting. \nPrototype for an API that allow interaction with McStas through an interface like Jupyter Notebooks created under WP5 of PaNOSC. \n"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9336959068412788,
      "result": {
        "original_header": "Widgets in Jupyter Notebooks",
        "type": "Text_excerpt",
        "value": "When using McStasScript in a jupyter notebook, it is possible to plot the data with a widget system instead. To do so, import the jupyter notebook widget interface and use show. \n    import mcstasscript.jb_interface as ms_widget\n    ms_widget.show(data)\n    \nThere is also a widget solution for performing the simulation which works as an alternative to *backengine*, this method is also included in the jb_interface show command, just provide an instrument object instead of data. This interface includes setting parameters, simulation options and plotting of the resulting data. \n    ms_widget.show(instr)\n    \nIf one wants to have access to the data generated in the widget, the widget needs to be created as an object with SimInterface. The resulting object will have a *show_interface* method to display the interface, and a *get_data* method to retrieve the latest generated dataset. \n    sim_widget = ms_widget.SimInterface(instr)\n    sim_widget.show_interface()\n    data = sim_widget.get_data()\n \n"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.939319539216064,
      "result": {
        "original_header": "Method overview",
        "type": "Text_excerpt",
        "value": "Here is a quick overview of the available methods of the main classes in the project. Most have more options from keyword arguments that are explained in the manual, but also in python help. To get more information on for example the show_components method of the McStas_instr class, one can use the python help command help(instr.McStas_instr.show_components). Many methods take a reference to a component, that can either be a string with the component name or a component object, here written as Cref in type hint. \n    instr\n    \u2514\u2500\u2500 McStas_instr(str instr_name) # Returns McStas instrument object on initialize\n        \u251c\u2500\u2500 show_parameters() # Prints list of parameters        \n        \u251c\u2500\u2500 show_settings() # Prints current instrument settings\n        \u251c\u2500\u2500 show_variables() # Prints list of declare variables and user vars\n        \u251c\u2500\u2500 show_components() # Prints list of components and their location\n        \u251c\u2500\u2500 show_instrument() # Shows instrument drawing with current parameters\n        \u251c\u2500\u2500 show_instr_file() # Prints the current instrument file\n        \u251c\u2500\u2500 show_diagram() # Show figure describing the instrument object\n        \u251c\u2500\u2500 set_parameters() # Sets instrument parameters as keyword arguments\n        \u251c\u2500\u2500 available_components(str category_name) # Show available components in given category        \n        \u251c\u2500\u2500 component_help(Cref component_name) # Prints component parameters for given component name   \n        \u251c\u2500\u2500 add_component(str name, str component_name) # Adds component to instrument and returns object\n        \u251c\u2500\u2500 copy_component(str name, Cref original_name) # Copies a component to instrument and returns object        \n        \u251c\u2500\u2500 remove_component(Cref name) # Removes component\n        \u251c\u2500\u2500 move_component(str name, Cref before / after, ) # Moves component to either before or after another\n        \u251c\u2500\u2500 get_component(str name) # Gets component object\n        \u251c\u2500\u2500 get_last_component() # Gets last component object        \n        \u251c\u2500\u2500 add_parameter(str name) # Adds instrument parameter with name\n        \u251c\u2500\u2500 add_declare_var(str type, str name) # Adds declared variable with type and name\n        \u251c\u2500\u2500 add_user_var(str type, str name) # Adds user var with type and name        \n        \u251c\u2500\u2500 append_declare(str string) # Appends a line to declare section (c syntax)        \n        \u251c\u2500\u2500 append_initialize(str string) # Appends a line to initialize (c syntax)\n        \u251c\u2500\u2500 append_finally(str string) # Appends a line to finally (c syntax)        \n        \u251c\u2500\u2500 write_full_instrument() # Writes instrument to disk with given name + \".instr\"\n        \u251c\u2500\u2500 settings(kwargs) Settings as keyword arguments.\n        \u2514\u2500\u2500 backengine() # Runs simulation.\n        \n    component # returned by add_component\n    \u251c\u2500\u2500 set_AT(list at_list) # Sets component position (list of x,y,z positions in [m])\n    \u251c\u2500\u2500 set_ROTATED(list rotated_list) # Sets component rotation (list of x,y,z rotations in [deg])\n    \u251c\u2500\u2500 set_RELATIVE(str component_name) # Sets relative to other component name\n    \u251c\u2500\u2500 set_parameters(dict input) # Set parameters using dict input\n    \u251c\u2500\u2500 set_comment(str string) # Set comment explaining something about the component\n    \u2514\u2500\u2500 print_long() # Prints currently contained information on component\n    \n    mcstasscript functions\n    \u251c\u2500\u2500 name_search(str name, list McStasData) # Returns data set with given name from McStasData list\n    \u251c\u2500\u2500 name_plot_options(str name, list McStasData, kwargs) # Sends kwargs to dataset with given name\n    \u251c\u2500\u2500 load_data(str foldername) # Loads data from folder with McStas data as McStasData list\n    \u2514\u2500\u2500 Configurator()\n        \u251c\u2500\u2500 set_mcrun_path(str path) # sets mcrun path\n        \u251c\u2500\u2500 set_mcstas_path(str path) # sets mcstas path\n        \u2514\u2500\u2500 set_line_length(int length) # sets maximum line length\n    \n    mcstasscript plotter\n    \u251c\u2500\u2500 make_plot(list McStasData) # Plots each data set individually\n    \u251c\u2500\u2500 make_sub_plot(list McStasData) # Plots data as subplot\n    \u2514\u2500\u2500 interface(list McStasData) # Shows plotting interface in jupyter notebook \n"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PaNOSC-ViNYL/McStasScript/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_6_Exit_and_number_of_activations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_6_Exit_and_number_of_activations.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_3_EXTEND_and_WHEN.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_3_EXTEND_and_WHEN.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_5_masks.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_5_masks.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_4_JUMP.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_4_JUMP.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_5_MCPL_bridges.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_5_MCPL_bridges.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_7_Tagging_history.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_7_Tagging_history.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_1_processes_and_materials.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_1_processes_and_materials.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_3_loggers.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_3_loggers.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_1_the_basics.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_1_the_basics.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_6_Diagnostics.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_6_Diagnostics.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_2_geometry.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_2_geometry.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_2_SPLIT.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/McStasScript_tutorial_2_SPLIT.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_4_conditionals.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/tutorial/Union_tutorial_4_conditionals.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/getting_started/quick_start.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/getting_started/quick_start.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/getting_started/overview.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/getting_started/overview.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/getting_started/installation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/getting_started/installation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/getting_started/version_history.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/getting_started/version_history.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/instrument_reader.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/instrument_reader.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/functions.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/functions.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/parameters_and_variables.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/parameters_and_variables.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/plotting.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/plotting.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/component_object.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/component_object.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/widgets.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/widgets.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/instrument_object.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/docs/source/user_guide/instrument_object.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_6_Exit_and_number_of_activations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_6_Exit_and_number_of_activations.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/McStasScript_tutorial_3_EXTEND_and_WHEN.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/McStasScript_tutorial_3_EXTEND_and_WHEN.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_5_masks.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_5_masks.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/McStasScript_tutorial_4_JUMP.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/McStasScript_tutorial_4_JUMP.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_7_Tagging_history.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_7_Tagging_history.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_1_processes_and_materials.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_1_processes_and_materials.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_3_loggers.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_3_loggers.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/McStasScript_tutorial_1_the_basics.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/McStasScript_tutorial_1_the_basics.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_2_geometry.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_2_geometry.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/McStasScript_tutorial_2_SPLIT.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/McStasScript_tutorial_2_SPLIT.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_4_conditionals.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/tutorial/Union_tutorial_4_conditionals.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/examples/cryostat_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/examples/cryostat_demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/examples/calibration_sample.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/examples/calibration_sample.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/examples/libpyvinyl_example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/examples/libpyvinyl_example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/examples/McStasScript_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/examples/McStasScript_demo.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PaNOSC-ViNYL/McStasScript/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PaNOSC-ViNYL/McStasScript"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "McStasScript"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "McStasScript"
        ],
        "type": "Text_excerpt",
        "value": "McStasScript does not include the McStas installation, so McStas/McXtrace should be installed separately, link to instructions [here](https://github.com/McStasMcXtrace/McCode/tree/master/INSTALL-McStas).\nMcStasScript can be installed using pip from a terminal,\n\n    python3 -m pip install McStasScript --upgrade\n\nAfter installation it is necessary to configure the package so the McStas/McXtrace installation can be found, here we show how the appropriate code for an Ubuntu system as an example. The configuration is saved permanently, and only needs to be updated when McStas or McStasScript is updated. This has to be done from a python terminal or from within a python environment.\n\n    import mcstasscript as ms\n    my_configurator = ms.Configurator()\n    my_configurator.set_mcrun_path(\"/usr/bin/\")\n    my_configurator.set_mcstas_path(\"/usr/share/mcstas/2.5/\")\n    my_configurator.set_mxrun_path(\"/usr/bin/\")\n    my_configurator.set_mcxtrace_path(\"/usr/share/mcxtrace/1.5/\")\n\nTo get a python terminal, run the command python in a terminal and then copy, paste and execute the lines above one at a time. Exit with ctrl+D.\n\nFor the second case, \n1. open a text editor (not MS Word but something like Gedit...),\n2. copy and paste the code above,\n3. save the file as a Python script, for example, myMcStasScript_config.py\n4. In a terminal, run it by typing python myMcStasScript_config.py\n    \nOn a Mac OS X system, the paths to the mcrun executable and mcstas folder are through the application folder:\n\n    my_configurator.set_mcrun_path(\"/Applications/McStas-2.5.app/Contents/Resources/mcstas/2.5/bin/\")\n    my_configurator.set_mcstas_path(\"/Applications/McStas-2.5.app/Contents/Resources/mcstas/2.5/\")\n    my_configurator.set_mxrun_path(\"/Applications/McXtrace-1.5.app/Contents/Resources/mcxtrace/1.5/bin/\")\n    my_configurator.set_mcxtrace_path(\"/Applications/McXtrace-1.5.app/Contents/Resources/mcxtrace/1.5/\")\n    \n    "
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Notes on windows installation",
        "parent_header": [
          "McStasScript",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "McStasScript was tested on Windows 10 installed using this [guide](https://github.com/McStasMcXtrace/McCode/blob/master/INSTALL-McStas-2.x/Windows/README.md), it is necessary to include MPI using MSMpiSetup.exe and msmpisdk.msi located in the extras folder.\n\nOpen the McStas-shell cmd (shortcut should be available on desktop) and install McStasScript / jupyter notebook with these commands:\n\n    python -m pip install notebook \n    python -m pip install McStasScript --upgrade\n    \nUsing the McStas-shell one can start a jupyter notebook server with this command:\n\n    jupyter notebook\n\nFor a standard McStas installation on Windows, the appropriate configuration can be set with these commands in a notebook:\n\n    import mcstasscript as ms\n    my_configurator = ms.Configurator()\n    my_configurator.set_mcrun_path(\"\\\\mcstas-2.6\\\\bin\\\\\")\n    my_configurator.set_mcstas_path(\"\\\\mcstas-2.6\\\\lib\\\\\")\n    my_configurator.set_mxrun_path(\"\\\\mcxtrace-1.5\\\\bin\\\\\")\n    my_configurator.set_mcxtrace_path(\"\\\\mcxtrace-1.5\\\\lib\\\\\")    \n    \nDouble backslashes are necessary since backslash is the escape character in python strings.\n"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PaNOSC-ViNYL/McStasScript/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2021, PaNOSC-ViNYL\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "McStasScript"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "PaNOSC-ViNYL"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Raku",
        "size": 1214510,
        "type": "Programming_language",
        "value": "Raku"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 883389,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 174784,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mads-bertelsen",
          "type": "User"
        },
        "date_created": "2022-05-18T14:51:41Z",
        "date_published": "2022-05-18T14:57:23Z",
        "description": "McStasScript version 0.0.46\r\n\r\nRecent additions:\r\n- Cleanup of syntax, more consistent use of the verb show in methods. \r\n- More error checking, finding more common issues in McStas input and alerting the user\r\n- New instrument diagram available\r\n- Separate import of heavy widgets so other imports are faster\r\n- Ability to move and remove components in an instrument\r\n- Many smaller improvements\r\n\r\nSee documentation on https://mads-bertelsen.github.io/index.html ",
        "html_url": "https://github.com/PaNOSC-ViNYL/McStasScript/releases/tag/v0.0.46",
        "name": "0.0.46",
        "release_id": 67188321,
        "tag": "v0.0.46",
        "tarball_url": "https://api.github.com/repos/PaNOSC-ViNYL/McStasScript/tarball/v0.0.46",
        "type": "Release",
        "url": "https://api.github.com/repos/PaNOSC-ViNYL/McStasScript/releases/67188321",
        "value": "https://api.github.com/repos/PaNOSC-ViNYL/McStasScript/releases/67188321",
        "zipball_url": "https://api.github.com/repos/PaNOSC-ViNYL/McStasScript/zipball/v0.0.46"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mads-bertelsen",
          "type": "User"
        },
        "date_created": "2022-05-06T06:09:18Z",
        "date_published": "2022-05-06T11:44:32Z",
        "description": "Release of McStasScript v0.0.42\r\n\r\nSimplified import so all interface classes and functions are available through main __init__.\r\n```\r\nimport mcstasscript as ms\r\ninstrument = ms.McStas_instr(\"demo\")\r\n```\r\n\r\nFull documentation available here: [https://mads-bertelsen.github.io](https://mads-bertelsen.github.io)\r\n\r\nRecommended install method is through pypi: pip install mcstasscript --upgrade",
        "html_url": "https://github.com/PaNOSC-ViNYL/McStasScript/releases/tag/v0.0.42",
        "name": "v0.0.42",
        "release_id": 66218889,
        "tag": "v0.0.42",
        "tarball_url": "https://api.github.com/repos/PaNOSC-ViNYL/McStasScript/tarball/v0.0.42",
        "type": "Release",
        "url": "https://api.github.com/repos/PaNOSC-ViNYL/McStasScript/releases/66218889",
        "value": "https://api.github.com/repos/PaNOSC-ViNYL/McStasScript/releases/66218889",
        "zipball_url": "https://api.github.com/repos/PaNOSC-ViNYL/McStasScript/zipball/v0.0.42"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:08:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Instructions for basic use",
        "parent_header": [
          "McStasScript"
        ],
        "type": "Text_excerpt",
        "value": "This section provides a quick way to get started, a more in depth tutorial using Jupyter Notebooks is available in the tutorial folder. The following commands suppose that you are either typing them in a Python environment from a terminal or in a file to be run as the end of the editing by typing a command like, 'python my_file.py' or in a Jupyter notebook\n\nImport the interface \n\n    import mcstasscript as ms\n\nNow the package can be used. Start with creating a new instrument, just needs a name. For a McXtrace instrument use McXtrace_instr instead.\n\n    my_instrument = ms.McStas_instr(\"my_instrument_file\")\n\nThen McStas components can be added, here we add a source and ask for help on the parameters.\n\n    my_source = my_instrument.add_component(\"source\", \"Source_simple\")\n    my_source.show_parameters() # Can be used to show available parameters for Source simple\n    \nThe second line prints help on the Source_simple component and current status of our component object. The output is shown here, but without bold, underline and color which is used to show which parameters are required, default or user specified.\n\n     ___ Help Source_simple _____________________________________________________________\n    |optional parameter|required parameter|default value|user specified value|\n    radius = 0.1 [m] // Radius of circle in (x,y,0) plane where neutrons are \n                        generated. \n    yheight = 0.0 [m] // Height of rectangle in (x,y,0) plane where neutrons are \n                         generated. \n    xwidth = 0.0 [m] // Width of rectangle in (x,y,0) plane where neutrons are \n                        generated. \n    dist = 0.0 [m] // Distance to target along z axis.\n    focus_xw = 0.045 [m] // Width of target\n    focus_yh = 0.12 [m] // Height of target\n    E0 = 0.0 [meV] // Mean energy of neutrons.\n    dE = 0.0 [meV] // Energy half spread of neutrons (flat or gaussian sigma).\n    lambda0 = 0.0 [AA] // Mean wavelength of neutrons.\n    dlambda = 0.0 [AA] // Wavelength half spread of neutrons.\n    flux = 1.0 [1/(s*cm**2*st*energy unit)] // flux per energy unit, Angs or meV if \n                                               flux=0, the source emits 1 in 4*PI whole \n                                               space. \n    gauss = 0.0 [1] // Gaussian (1) or Flat (0) energy/wavelength distribution\n    target_index = 1 [1] // relative index of component to focus at, e.g. next is \n                            +1 this is used to compute 'dist' automatically. \n    -------------------------------------------------------------------------------------\n\nThe parameters of the source can be adjusted directly as attributes of the python object\n\n    my_source.xwidth = 0.12\n    my_source.yheight = 0.12\n    my_source.lambda0 = 3\n    my_source.dlambda = 2.2\n    my_source.focus_xw = 0.05\n    my_source.focus_yh = 0.05\n    \nA monitor is added as well to get data out of the simulation (few bins so it is easy to print the results)\n\n    PSD = my_instrument.add_component(\"PSD\", \"PSD_monitor\", AT=[0,0,1], RELATIVE=\"source\") \n    PSD.xwidth = 0.1\n    PSD.yheight = 0.1\n    PSD.nx = 5\n    PSD.ny = 5\n    PSD.filename = '\"PSD.dat\"'\n\nSettings for the simulation can be adjusted with the *settings* method, an output_path for the data is needed.\n\n    my_instrument.settings(output_path=\"first_run\", ncount=1E7)\n\nThe simulatiuon is performed with the *backengine* method. This returns the data generated from the simulation.\n\n    data = my_instrument.backengine()\n\nResults from the monitors would be stored as a list of McStasData objects in the returned data. The counts are stored as numpy arrays. We can read and change the intensity directly and manipulate the data before plotting.\n\n    data[0].Intensity\n    \nIn a python terminal this would display the data directly:\n\n    array([[0.        , 0.        , 0.        , 0.        , 0.        ],\n       [0.        , 0.1422463 , 0.19018485, 0.14156196, 0.        ],\n       [0.        , 0.18930076, 0.25112956, 0.18897898, 0.        ],\n       [0.        , 0.14121589, 0.18952508, 0.14098576, 0.        ],\n       [0.        , 0.        , 0.        , 0.        , 0.        ]])\n    \nPlotting is usually done in a subplot of all monitors recorded.    \n\n    plot = ms.make_sub_plot(data)\n    "
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use in existing project",
        "parent_header": [
          "McStasScript"
        ],
        "type": "Text_excerpt",
        "value": "If one wish to work on existing projects using McStasScript, there is a reader included that will read a McStas Instrument file and write the corresponding McStasScript python instrument to disk. Here is an example where the PSI_DMC.instr example is converted:\n\n    Reader = ms.McStas_file(\"PSI_DMC.instr\")\n    Reader.write_python_file(\"PSI_DMC_generated.py\")\n\nIt is highly advised to run a check between the output of the generated file and the original to ensure the process was sucessful.\n"
      },
      "source": "https://raw.githubusercontent.com/PaNOSC-ViNYL/McStasScript/master/README.md",
      "technique": "header_analysis"
    }
  ]
}