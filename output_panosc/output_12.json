{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/maxiv-science/nanomax-analysis-utils"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-06-28T10:39:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-19T13:19:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A set of tools for handling and analysing data at the NanoMAX beamline"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/maxiv-science/nanomax-analysis-utils/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/maxiv-science/nanomax-analysis-utils/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "maxiv-science/nanomax-analysis-utils"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/maxiv-science/nanomax-analysis-utils/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiv-science/nanomax-analysis-utils/master/apps/autoptycho/slurm_submit.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation:",
        "type": "Text_excerpt",
        "value": "One can get installed *nanomax-analysis-utils* in various ways including *maxiv* conda channel. The software there however may not be up-to-date or available for any Python version or cpu-architecture. Using a combination of *conda* and *git* seems as the most universal solution.\n"
      },
      "source": "https://raw.githubusercontent.com/maxiv-science/nanomax-analysis-utils/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "conda and git",
        "parent_header": [
          "Installation:"
        ],
        "type": "Text_excerpt",
        "value": "Let's use *conda* to create a virtual environment and let's install *nanomax-analysis-utils* from source repo on GitHub.\n\nUse preinstalled `Anaconda3`, `Miniconda3` or `Mamba` at MAX IV cluster or LUNARC and install or use any snake-like tool providing `conda` elsewhere. \n```\nmodule add Anaconda3    # when at MAX IV cluster or LUNARC\n```\n\nCreate the environment, called `nmutils-24a` here, and install dependecies. You may want to omit Intel MKL `libblas=*=*mkl` on non-x86 (e.g. arm) cpus.\n\n```\nconda create -n nmutils-24a -c conda-forge python=3.11 numpy scipy matplotlib h5py hdf5plugin silx qtconsole cython git libblas=*=*mkl\n```\n\nActivate environment. You may need to use `source activate ...` at MAX IV and LUNARC. `conda activate` may have the same effect elesewhere.\n\n```\nsource activate nmutils-24a    # note: Use `source activate` at MAX IV\n```\n\nGet source, checkout the release branch and install from the source with pip.\n\n```\ngit clone https://github.com/maxiv-science/nanomax-analysis-utils.git\ncd nanomax-analysis-utils\ngit checkout v0.4.4\npip install .\n```\n\nTest importing the module and starting the *scanViewer* gui.\n\n```\npython -c \"import nmutils\"\nscanViewer\n```\n\nNote: It is know that on Windows this method does not produce a correct *scanViewer* executabale. This needs to be investigated more.\n"
      },
      "source": "https://raw.githubusercontent.com/maxiv-science/nanomax-analysis-utils/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From conda",
        "parent_header": [
          "Installation:"
        ],
        "type": "Text_excerpt",
        "value": "For the easiest installation, including dependencies, use conda. Install Anaconda3, miniconda3, or so (Google knows how). If you're working at the MAX IV compute cluster, Anaconda is already installed and the installation is loaded with:\n\n```\nmodule load Anaconda3\n```\n\nFirst, set up the conda-forge and maxiv software channels.\n\n```\nconda config --add channels conda-forge\nconda config --add channels maxiv\n```\n\nNext, create and activate your conda environment, name it what you like (my_env here).\n\n```\nconda create -n my_env\nconda activate my_env\n```\n\nNow, installing the nmutils package will install all the dependencies.\n\n```\nconda install -c maxiv nanomax-analysis-utils\n```\n\nWhen that's done, you can use the library or run the `scanViewer` application directly. For Eiger images, it's good to have `bitshuffle` or `hdf5plugin` installed.\n\nNOTE: Windows users have noticed that silx does not play well with glymur 0.9.5 (one of its dependencies). To get around this, they have downgraded glymur after the above installation steps, as follows.\n\n```\nconda install glymur=0.9.4\n```\n"
      },
      "source": "https://raw.githubusercontent.com/maxiv-science/nanomax-analysis-utils/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From git",
        "parent_header": [
          "Installation:"
        ],
        "type": "Text_excerpt",
        "value": "For the latest verision, clone this git repository.\n\n```\ngit clone https://github.com/maxiv-science/nanomax-analysis-utils.git\n```\n\nFrom the main folder, to install for the current user.\n\n```\ncd nanomax-analysis-utils\npython3 setup.py install --user\n```\n\nNote that use of scanViewer and other GUIs require the silx\npackage, as well as h5py and other common python packages.\nThese can be installed for the current userthrough pip.\n\n```\npip3 install h5py --user\npip3 install silx --user\n```\n\netc.\n"
      },
      "source": "https://raw.githubusercontent.com/maxiv-science/nanomax-analysis-utils/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/maxiv-science/nanomax-analysis-utils/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 NanoMAX beamline\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/maxiv-science/nanomax-analysis-utils/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nanomax-analysis-utils"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "maxiv-science"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 591883,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1712,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 481,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiv-science/nanomax-analysis-utils/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:08:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ]
}