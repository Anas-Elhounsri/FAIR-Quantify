{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bplese/Trimitomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-16T11:51:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-12T05:41:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.963786148739352,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "The datasets used are deposited at NCBI Sequence Read Archive (SRA) https://www.ncbi.nlm.nih.gov/sra. Conversion from SRA file format to FASTQ is done using fastq-dump (with \u2013readids and \u2013split-files parameters) from SRAtoolkit.2.8.2. All the reads used were paired end but single end reads can be used as well. Check the quality of reads using FastQC; for more files you can use MultiQC.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8578318304076715,
      "result": {
        "original_header": "1. NOVOPlasty",
        "type": "Text_excerpt",
        "value": "Prepare config file (NOVOpl_config) using arthropod Thermobia_domestica (GenBank: AY639935.1) as reference genome. Remove the forward and reverse adapter sequence in the original raw reads. \n* adapter sequence are specific adaptors used in library sequencing\n* use a suitable seed or reference genome for assembly - the closer related to your target the better\n* try different k-mer sizes (25, 39, 45, 51) in order to get better results\n* the output file contains either a complete circular genome or several contigs which will need to be assembled\n \n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9616904442838874,
      "result": {
        "original_header": "2. Bowtie2/Trinity",
        "type": "Text_excerpt",
        "value": "Use Bowtie2 for alignment of raw reads with a reference mitochondrial genome. Extract reads that mapped to the reference mitochondrial genome. Commands: \n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9210996592275529,
      "result": {
        "original_header": "3. Velvet assembly",
        "type": "Text_excerpt",
        "value": "* In order to set a cutoff you blast the contigs that you got from velvetg above (in the velvet71 folder, file name contigs), using the cox1 seq of the most closest species you find: \n* or you can perform blast with protein seq. we used this: \n*-db_gencode 4 is the translation code for sponge mitochondria; adjust it according to the species you would like to assemble\n*makeblastdb=make a database  \n* In the final contigs.fa file, if you are lucky, you will have mitodata in few contigs. If not, repeat step with blast, using known protein seq. of coding genes from the closest species possible. \n*if you still have gaps in your mitogenomes you can adjust the following:\n1. -k-mer size 31,51,71\n2. -cov_cutoff and -max_coverage (adjust -cov_cutoff to auto) \n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8751812885612922,
      "result": {
        "original_header": "Final assembly",
        "type": "Text_excerpt",
        "value": "If the mt genome is not recovered by any of the three methods, the results can be combined as a meta-assembly in order to obtain the best results. This can be done using any alignment software (e.g. MAFFT). \n \n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9308416873628856,
      "result": {
        "original_header": "Checkpoint",
        "type": "Text_excerpt",
        "value": "When the complete or almost complete mt genome is obtained, the assembly data is checked for homology with BlastN against the NCBI nr database. Further annotation is then performed on the web server MITOS2 (Bernt et al., 2013) using the appropriate translation table.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bplese/Trimitomics/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bplese/Trimitomics/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bplese/Trimitomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Trimitomics: An efficient pipeline for mitochondrial assembly from transcriptomic reads in non-model species"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9847899792593443,
      "result": {
        "original_header": "1. NOVOPlasty",
        "type": "Text_excerpt",
        "value": "* Cutting the 5\u2019 adapter sequence\ncutadapt -g AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT -o Thermobia_domestica_adapterremove_R1.fq.gz Thermobia_domestica_R1.fq.gz&  \n* Cutting the 3\u2019 adapter sequence\ncutadapt -a CAAGCAGAAGACGGCATACGAGATGTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT -o Thermobia_domestica_adapterremove_R2.fq.gz Thermobia_domestica_R2.fq.gz&   \n* start NOVOplasty script\nperl NOVOPlasty.pl -c NOVOpl_config.txt& \n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9815597562587461,
      "result": {
        "original_header": "2. Bowtie2/Trinity",
        "type": "Text_excerpt",
        "value": "* clean the reads:\njava -jar /path/trimmomatic-0.33.jar PE -threads 8 -phred33 /path/Thermobia_domestica_R1.fq.gz /path/Thermobia_domestica_R2.fq.gz /path/Thermobia_domestica_R1_paired.fq.gz /path/Thermobia_domestica_R1_unpaired.fq.gz /path/Thermobia_domestica_R2_paired.fq.gz /path/Thermobia_domestica_R2_unpaired.fq.gz ILLUMINACLIP:Adapters.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:30&\n*NB: Adapters.fa file should include the specific adaptors used in library sequencing \n* make a bowtie_index folder:\nbowtie2-build /path/Thermobia_domestica.fasta bowtie_index/Tdomestica \n* alignment --local with paired reads:\nbowtie2 --fr --local -x bowtie_index/Tdomestica -1 /path/Thermobia_domestica_R1_paired.fq.gz -2 /path/Thermobia_domestica_R2_paired.fq.gz -S /path/Thermobia_domestica_BOWTIE.sam& \n* Convert SAM to BAM using samtools: \nsamtools view -b -S -o /path/Thermobia_domestica.bam /path/Thermobia_domestica_BOWTIE.sam& \nsamtools sort /path/Thermobia_domestica_mapped.bam -o /path/Thermobia_domestica_mapped_sorted.bam& \n/path/Trinity --genome_guided_bam /path/Thermobia_domestica_mapped_sorted.bam --max_memory 50G --genome_guided_max_intron 1000 --CPU 6 --output /path/trinity_out_dir --full_cleanup& > trinity.log& \n*adjust intron size depending on the species, with genome_guided_max_intron 1000\n*mitochondrial contigs that need to be further assembled will be in the folder trinity_out_dir; file name *_GG.txt \n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.970940943148028,
      "result": {
        "original_header": "3. Velvet assembly",
        "type": "Text_excerpt",
        "value": "* use this if you want to use only paired reads:\nvelveth velvet71 71 -shortPaired -separate -fastq.gz /path/Thermobia_domestica_R1_paired.fq.gz /path/Thermobia_domestica_R2_paired.fq.gz& \n* if you would like to include unpaired as well: (see velvet manual for additional options)\nvelveth velvet71 71 -shortPaired -separate -fastq.gz /path/Thermobia_domestica_R1_paired.fq.gz /path/Thermobia_domestica_R2_paired.fq.gz -short /path/Thermobia_domestica_all_unpaired.fq.gz& \n* run velvetg, with a low coverage cutoff, to exclude sequencing errors:\n*if you work in the same folder there is no need to set the path. \nvelvetg velvet71/ -min_contig_lgth 100 -cov_cutoff 3 > jobname.log& \n* In the final contigs.fa file, if you are lucky, you will have mitodata in few contigs. If not, repeat step with blast, using known protein seq. of coding genes from the closest species possible. \n*if you still have gaps in your mitogenomes you can adjust the following:\n1. -k-mer size 31,51,71\n2. -cov_cutoff and -max_coverage (adjust -cov_cutoff to auto) \n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8250455535637794,
      "result": {
        "original_header": "1. NOVOPlasty",
        "type": "Text_excerpt",
        "value": "* start NOVOplasty script\nperl NOVOPlasty.pl -c NOVOpl_config.txt& \n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bplese/Trimitomics/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 bplese\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Trimitomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bplese"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Minimum prerequisites",
        "parent_header": [
          "Trimitomics: An efficient pipeline for mitochondrial assembly from transcriptomic reads in non-model species"
        ],
        "type": "Text_excerpt",
        "value": "* NOVOPlasty version 2.7.1 and an appropriately filled out config file (example given here)\n* Bowtie2 \n* Trinity version v2.8.4\n* Velvet 1.2.10\n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:40:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Mitochondrial genome recovery from RNA-seq data; in the following steps arthropod Thermobia domestica is used as an example",
        "parent_header": [
          "Trimitomics: An efficient pipeline for mitochondrial assembly from transcriptomic reads in non-model species"
        ],
        "type": "Text_excerpt",
        "value": "* The proposed pipeline uses 3 assemblies:\n\n1. NOVOPlasty (https://github.com/ndierckx/NOVOPlasty)\n2. Bowtie2/Trinity (https://github.com/trinityrnaseq/trinityrnaseq/wiki/Genome-Guided-Trinity-Transcriptome-Assembly)\n3. Velvet (https://github.com/dzerbino/velvet)\n"
      },
      "source": "https://raw.githubusercontent.com/bplese/Trimitomics/master/README.md",
      "technique": "header_analysis"
    }
  ]
}