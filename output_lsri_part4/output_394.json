{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lichen-lab/circMeta"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-06T23:22:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-22T14:44:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A unified computational framework for genomic feature annotation and differential expression analysis of circular RNAs"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "circMeta"
        ],
        "type": "Text_excerpt",
        "value": "circMeta is a unified computational framework for circRNA analyses. circMeta mainly includes three function modules: (i) provide a comprehensive genomic feature annotation related to circRNA biogenesis, including length of introns flanking circularized exons, repetitive elements such as Alu and SINEs, competition score for forming circulation and RNA editing in back-spliced flanking introns (ii) develop a two-stage DE approach of circRNAs based on splicing junction reads (iii) develop a Bayesian hierarchical model for DE analysis of circRNAs based the ratio of circular reads to linear reads in spliced sites.\ncircMeta mainly consists of four modules: circClass, circFeature, circJuncDE, circCLRDE.\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/circMeta/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Arguments",
        "parent_header": [
          "Descriptions for circLinear"
        ],
        "type": "Text_excerpt",
        "value": "*  files: circRNA output files from 'findcirc', 'CIRCexplorer' or 'CIRI'\n*  designs: design matrix for files. For example, two group design is c(0,0,1,1)\n*  circ.method: one of 'findcirc','CIRCexplorer','CIRI' should be specified\n*  DE.method: one of 'DESeq2','edgeR','pois.glm','pois.ztest','nb.glm'. Default is 'pois.ztest'\n*  gene: gene annotation is optional. Default is NULL\n*  gexon: exon annotation is optional. Default is NULL\n*  cutoff: cutoff for circRNAs. Default is 2\n*  sf: sequencing depth is adjusted for all juntion reads. Default is TRUE\n                 \n                "
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/circMeta/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output values",
        "parent_header": [
          "Descriptions for circLinear"
        ],
        "type": "Text_excerpt",
        "value": "* a GRange object contains genomic coordinates of circRNAs along with junction reads, fold change, p-values, FDRs.\n\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/circMeta/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9780536707438835,
      "result": {
        "original_header": "circMeta",
        "type": "Text_excerpt",
        "value": "A unified computational framework for genomic feature annotation, differential expression analysis of circular RNAs\n \n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/circMeta/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lichen-lab/circMeta/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lichen-lab/circMeta/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lichen-lab/circMeta"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "circMeta"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/circMeta/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lichen-lab/circMeta/master/scripts.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install circMeta",
        "type": "Text_excerpt",
        "value": "```r\ninstall.packages(\"devtools\")\nlibrary(devtools)\ninstall_github(\"lichen-lab/circMeta\")\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/circMeta/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lichen-lab/circMeta/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "circMeta"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lichen-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 41076,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3098,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lichen-lab/circMeta/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 03:07:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Descriptions for circLinear"
        ],
        "type": "Text_excerpt",
        "value": "circJuncDE(files,designs, circ.method=c('findcirc','CIRCexplorer','CIRI'),\n                 DE.method=c('pois.ztest','DESeq2','edgeR','pois.glm','nb.glm'),\n                 gene=NULL,gexon=NULL,\n                 cutoff=2,sf=TRUE)\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/circMeta/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "Files used in the examples could be downloaded from [link](https://drive.google.com/open?id=1Eaxbx8w33_Mjxcd9KPIsrSkflZSuAIHV)\n\nUse circJuncDE to detect differential expressed circRNAs based on back-spliced junction reads\n```r\nlibrary(circMeta)\nCIRI.files=c(\n  \"data/frontcortex/CIRI/CIRI1.circ\",\n  \"data/frontcortex/CIRI/CIRI2.circ\",\n  \"data/cerebellum/CIRI/CIRI1.circ\",\n  \"data/cerebellum/CIRI/CIRI2.circ\",\n  \"data/diencephalon/CIRI/CIRI1.circ\",\n  \"data/diencephalon/CIRI/CIRI2.circ\"\n)\ndesigns=c(0,0,1,1)\nfdr.level=0.05\nres1=circJuncDE(CIRI.files[c(1,2,3,4)],designs,circ.method='CIRI',DE.method='pois.ztest')\nid1=rownames(res1)[res1$fdr<fdr.level]\n\nres2=circJuncDE(CIRI.files[c(1,2,3,4)],designs,circ.method='CIRI',DE.method='edgeR')\nid2=rownames(res2)[res2$fdr<fdr.level]\n\nres3=circJuncDE(CIRI.files[c(1,2,3,4)],designs,circ.method='CIRI',DE.method='DESeq2')\nid3=rownames(res3)[res3$fdr<fdr.level]\n\n\nid1=rownames(res1)[res1$fdr<fdr.level]\nlength(id1)\nid2=rownames(res2)[res2$fdr<fdr.level]\nlength(id2)\nid3=rownames(res3)[res3$fdr<fdr.level]\nlength(id3)\nlength(intersect(id1,id3))\nlength(intersect(id2,id3))\nlength(intersect(id1,id2))\n\n```\n\nUse circCLRDE to detect differential expressed circRNAs based on Circular-to-Linear Ratio (CLR)\n```r\nres=circJuncDE(CIRI.files[c(1,2,3,4)],designs,circ.method='CIRI',DE.method='pois.ztest')\ntmp=getCLR(res)\nx1=tmp$x1\nn1=tmp$n1\nx2=tmp$x2\nn2=tmp$n2\n\nres1=circCLRDE(x1,n1,x2,n2,DE.method='wald',is.shrink=F)\nsum(res1$fdr<fdr.level)\nres2=circCLRDE(x1,n1,x2,n2,DE.method='wald',is.shrink=T)\nsum(res2$fdr<fdr.level)\nres3=circCLRDE(x1,n1,x2,n2,DE.method='lr',is.shrink=F)\nsum(res3$fdr<fdr.level)\nres4=circCLRDE(x1,n1,x2,n2,DE.method='lr',is.shrink=T)\nsum(res4$fdr<fdr.level)\n```\n\nUse circClass to annotate host genes for circRNAs\n```r\nload('hg19/Exon.hg19.rda')\nload('hg19/Gene.hg19.rda')\nload('hg19/Intron.hg19.rda')\ngcirc=circClass(files=CIRI.files[1:2],circ.method='CIRI',gene=gene, gexon=gexon)\ngcirc\n```\n\n\nUse circFeature to annotate genomic features for circRNAs\n```r\nload('hg19/Alu.hg19.rda')\nload('hg19/SINE.hg19.rda')\n\n# Add Alu/SINE enrichment, Alu/SINE competing score\ngcirc=circFeature(files=CIRI.files[1:2],circ.method='CIRI',\n                     gene,gexon,gintron,galu,gsine)\n\n# Add A-to-I editing\nload('hg19/DARNED.rda')\nload('hg19/RADAR.rda')\natoi=getAtoI('hg19/frontalcortex.vcf2')\ngcirc=circFeature(files=CIRI.files[1:2],circ.method='CIRI',\n                     gene,gexon,gintron,galu,gsine,atoi,DARNED,RADAR)\n```\n\nUse circLinear to add linear reads to back-spliced junctions\n```r\nllinear.files=c(\n  'hg19/accepted_hits1.bam',\n  'hg19/accepted_hits2.bam'\n)\ngcirc=circLinear(gcirc,linear.files)\n```\n\n\n\n\n\n\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/lichen-lab/circMeta/master/README.md",
      "technique": "header_analysis"
    }
  ]
}