{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FlorianThibord/OptimiR"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-01T19:05:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-22T20:18:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "miRSeq data alignment workflow - integrates genetic information to assess the impact of variants on miRNA expression"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary Files",
        "parent_header": [
          "OptimiR"
        ],
        "type": "Text_excerpt",
        "value": "If several samples must be processed, it is recommanded to provide the same output directory for all runs. The python script `optimir_SUMMARY` with the output directory as a parameter will produce summary files for all runs (abundances tables and additional files).\n\nUsage: `optimir summarize --dir /path/to/Results/`\n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9276585011915403,
      "result": {
        "original_header": "OptimiR",
        "type": "Text_excerpt",
        "value": "miRSeq data alignment workflow - integrates genetic information to assess the impact of variants on miRNA expression \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8932307729006467,
      "result": {
        "original_header": "About the vcf file and the genotype consistancy analysis",
        "type": "Text_excerpt",
        "value": "The vcf file is optional. All variants provided in the vcf file that are mapping on miRNAs will be integrated in new sequences generated by OptimiR. Reads will be allowed to align to these new alternative mIRNA sequences. \nWhen a vcf with genotypes is provided, 2 tables : `consistency_table` and `polymiRs_table` are generated in the outputs and contain summary alignments on each polymiR. In the polymiR table, a detail of alignments on each polymiR for each sample is provided, with the number of reads aligned on the sequences integrating the reference allele and alternative allele.  \nIn the consistency table, consistent counts are reads that aligned on the polymiR sequence with the allele that match the genotype, while inconsistent counts are alignments that have been discarded because they didn't match the genotype. For samples with heterozygous genotype, reads can align on any version of the polymiR, in which case the Allele Specific Expression (ASE) of these polymiRs can be studied.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9756906293792269,
      "result": {
        "original_header": "A few limitations:",
        "type": "Text_excerpt",
        "value": " - Multi-allelic variants must be provided on two separate lines. Allele string must not contain a comma, and genotype format must have format 0/0, 0/1, 1/0 or 1/1 but no 0/2 and such... (btw: also works with phased variants format).\n - Combination of indels, or indels and SNPs: if a SNP and an indel map on the same miRNA, or if several indels map on the same miRNA, combinations of these variants might not be generated, in which case a warning will be displayed during library preparation. Combinations of SNPs works fine.\n - Variant positions must respect GRCh38 coordinates (when using miRBase 21 default gff3 file).\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8551018479448613,
      "result": {
        "original_header": "Plots with R",
        "type": "Text_excerpt",
        "value": "Two R scripts are available in the directory `optimir/libs/R_plot/`: `plot_ASE.R` and `plot_isoDist.R`. These scripts are meant to be run on the files `polymiRs_table.annot` and `isomiRs_dist.annot`, respectively.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9133838273949691,
      "result": {
        "original_header": "plot_ASE.R : representing Allele Specific Expression (ASE)",
        "type": "Text_excerpt",
        "value": "For polymiRs integrating genetic variants expressed by heterozygous carriers, both sequences integrating the reference or the alternative allele can be expressed. It might be of interset for the user to analyse the ASE of these polymiRs. For this we provide the script `plot_ASE.R` that automatically gather counts on polymiRs expressed by heterozygotes, and generate a scatter plot representing for each sample the reads aligned on the polymiR integrating the reference allele vs the counts gathered by the sequence integrating the alternative allele.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8842444930054885,
      "result": {
        "original_header": "plot_isoDist.R : representing the distribution of isomiRs",
        "type": "Text_excerpt",
        "value": "miRNAs can undergo post transcriptional modifications that can affect the sequence of the mature miRNA. These modifications mostly affect the 3' extremity of the miRNA, and on a smaller scale the 5' end. A miRNA that does not appear to have undergone such modifications is called *canonical*, while miRNAs that are not canonical are *isomiRs*. The modifications observed are on each end of the isomiR can be:\n - Trimming (Trim): a deletion of one or more nucleotides.\n - Templated tailing (TA) : the addition of one or more nucleotides, that matches the nucleotides that originally surround the mature miRNA sequence in the primary miRNA.\n - Non templated tailing (NTA) : the addition of one or more nucleotides, that does not match the nucleotides that originally surround the mature miRNA.\n - Trimming followed by tailing (Trim+Tail): The deletion of one or more nucleotides followed by the addition of one or more nucleotides.\n - Canonical : no modification. \nThe script `plot_isoDist.R` allows the user to represent the distribution of these modifications in the processed dataset. By default, only the global distribution accross all miRNA is generated. The script can be easily tweaked by the user if there is a need to represent the distribution of individual miRNA.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9555939359948519,
      "result": {
        "original_header": "Output files",
        "type": "Text_excerpt",
        "value": "All the outputs are in tsv format, and easy to process for downstream analyses.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9897645266235388,
      "result": {
        "original_header": "Additional files",
        "type": "Text_excerpt",
        "value": "For each samples several complementary files can be generated (the user can control which ones with option `--annot`):\n - `consistency_table` : For each polymiR, reports all counts that are consistent with genotype, and the number of reads that were discarded because of inconsistency. If more than 5 counts or 1% of total reads were discarded, the flag \"SUSPICIOUS\" is added in the `flag` column (the 0.01 default rate can be modified by the user with the option `--consistentRate`). This threshold is set to detect misalignments on polymiRs that are not due to sequencing errors that might replicate a genetic variant.\n - `polymiR_table` : For each polymiR, report the number of reads gathered by the sequence integrating the reference allele, and the number of reads aligned on the sequence integrating the alternative allele.\n - `isomiRs_dist` : For each miRNA / polymiR, report the percentage of modifications on each end, the global percentage of canonical alignments, as well as the global read counts.\n - `inconsistents.sam` : file reporting all alignments that have been discarded because of an inconsistency between the provided genotype and the alignment on a polymiR.\n - `expressed_hairpins` : file reporting the primary miRNA and thus the locus from which a miRNA is transcribed. In miRBase, mature miRNAs with identical sequence can originate from different hairpins, and thus different genomic loci. When a read is aligned on such miRNAs with templated tailing, and if the nucleotides surrounding the mature miRNA are different in the potential parental hairpins, we use this information to deduce from which hairpin the miRNA might originate. When using this information, the user must be aware that templated tailing might not be due to imprecise cleavage from ribonucleases during the miRNA maturation, but could be due to terminal nucleotidyl transferase that add the same nucleotides to the mature miRNA end than those originally surrounding it in the hairpin. The reporting format of this information is detailed below.\n - `remaining_ambiguous` : When a read align on multiple references, we call it ambiguous, or cross-mapping. OptimiR has an internal scoring algorithm that allow it to choose the most probable alignment when possible. If tipically ~90% of ambiguous alignments are resolved, the remaining ones that could not be resolved are detailed in this file. For the remaining ambiguous, if a read aligns on n references, then each alignment receive a weight of 1/n. The reporting format of this information is detailed below. \n```\nExample:\n-------\nREFERENCE\tSAMPLE\tExpressed_hairpins\t\t\t\t\t\t\t\tRemaining_ambiguous\nhsa-let-7a-3p\t525\tmultiple[100.00%]\t\nhsa-let-7a-5p\t471517\thsa-let-7a-2[0.02%]/multiple[99.69%]/hsa-let-7a-3[0.18%]/hsa-let-7a-1[0.10%]\thsa-let-7c-5p+hsa-let-7b-5p[2278(0.48%)]/hsa-let-7c-5p[27534(5.84%)]\nhsa-let-7b-5p\t3842888\thsa-let-7b[100.00%]\t\t\t\t\t\t\t\thsa-let-7c-5p+hsa-let-7a-5p[2278(0.06%)]\nhsa-let-7c-5p\t51910\thsa-let-7c[100.00%]\t\t\t\t\t\t\t\thsa-let-7a-5p[27534(53.04%)]/hsa-let-7a-5p+hsa-let-7b-5p[2278(4.39%)]\nhsa-let-7f-5p\t439810\thsa-let-7f-1[0.36%]/hsa-let-7f-2[24.53%]/multiple[75.11%]\t\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9354807093471483,
      "result": {
        "original_header": "Expressed_hairpins format: `potential-hairpin-id[percentage of reads with templated tailing matching potential-hairpin-id]`",
        "type": "Text_excerpt",
        "value": "If a miRNA has only one hairpin from which it originate, then it will always have 100% of its reads originating\nfrom it. Ex: `miRNA-hairpin-id[100%]`\nIf a miRNA has more than one potential hairpin, each hairpin with matching templated tailing is reported, with\nthe percentage of total aligned reads reported in brackets.\nIf several hairpins are reported, they are separated with a `'/'` symbol.\nFor alignments where the parental hairpin cannot be distinguished using templated tailing, these are reported\nas `'multiple'`.\nIn the example, reads aligned on `hsa-let-7f-5p` have 0.36% of aligned reads that are potentially originating\nfrom the hairpin `hsa-let-7f-1`, 24.53% from `hsa-let-7f-2`, and the remaining 75.11% could originate from any of these\ntwo hairpins.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9718576419528417,
      "result": {
        "original_header": "Remaining_ambiguous format: `mature-id[number_of_reads_involved(percentage_of_reads_involved)]`",
        "type": "Text_excerpt",
        "value": "We report here other matures miRNA on which reads ambiguously aligned. These alignments could not be resolved\nusing OptimiR's scoring algorithm to determine the most probable alignment.\nIf a read cross mapped on more than one other miRNA, then they are all reported and separated with a `'+'` symbol.\nIn the example, 5.84% of reads aligned aligned on `hsa-let-7a-5p` (which amount to 27,534 reads) also mapped\non `hsa-let-7c-5p`. And 2,278 reads (or 0.48% of reads aligned to `hsa-let-7a-5p`) aligned simulteanously\nto `hsa-let-7a-5p`, `hsa-let-7b-5p` and `hsa-let-7c-5p`.\nThis happens a lot to reads mapping on `let-7` mature miRNAs, because their sequences are very similar.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9722320643903095,
      "result": {
        "original_header": "VCF and mirGFF3 optional outputs (new addition 02/03/19)",
        "type": "Text_excerpt",
        "value": "The mirGFF3 format is a recently developed standard used in miRseq analysis (see the description of this format on the [GitHub page](https://github.com/miRTop/mirGFF3)). It should be noted that the current OptimiR output in mirGFF3 format will give mature miRNA ident as seqID, and might not be supported by mirtop yet. One can use the attribute optimiR_Expression to retrieve abundances computed by OptimiR in this format. \nThe VCF output file can be generated when variants are provided by the user in an initial VCF without genotype information. In such situations, using the option `--vcf_out`, a VCF containing genotypes deduced by OptimiR on polymiRs will be produced. Be careful when using the results of this output, OptimiR is not a variant caller, these genotypes only reflect the expression level of both alleles of a polymiR, and do not necessarly reflect the DNA's genotype, as allelic imbalance is frequently observed for polymiRs (see [OptimiR publication](http://dx.doi.org/10.1261/rna.069708.118)) results on allelic imbalance more additional informations).\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9521763790184125,
      "result": {
        "original_header": "UPDATES",
        "type": "Text_excerpt",
        "value": " - 31/03/19 :\n   - Integrate scripts and add subcommands: process, summarize, libprep\n   - Added setup\n   - Fixed miGFF3 format\n   \n - 02/03/19 :\n   - Supports outputs in mirGFF3 format (see the [mirtop/mirGFF3 GitHub page](https://github.com/miRTop/mirGFF3) for more details on this format and the mirtop project)\n   - Supports outputs in VCF format summarizing the genotypes inferred by OptimiR \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FlorianThibord/OptimiR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FlorianThibord/OptimiR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FlorianThibord/OptimiR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OptimiR"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/example_1.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/example_all.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "OptimiR"
        ],
        "type": "Text_excerpt",
        "value": "You can install OptimiR on your system using the following:\n```\npython setup.py install\n```\nIf you need to install locally, you can use the `--prefix` parameter.\n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8702121114227913,
      "result": {
        "original_header": "About the vcf file and the genotype consistancy analysis",
        "type": "Text_excerpt",
        "value": "The genotype can also be provided by the user in the vcf file, in which case OptimiR will perform a genotype consistency step and retain only alignments on polymIRs that are consistent with the genotype.\n**The sample name in the vcf file must match the name of the provided fastq** (minus the extension of the fastq file) \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9019633769822627,
      "result": {
        "original_header": "Plots with R",
        "type": "Text_excerpt",
        "value": "Two R scripts are available in the directory `optimir/libs/R_plot/`: `plot_ASE.R` and `plot_isoDist.R`. These scripts are meant to be run on the files `polymiRs_table.annot` and `isomiRs_dist.annot`, respectively.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FlorianThibord/OptimiR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OptimiR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "FlorianThibord"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 157418,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 6434,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1004,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "FlorianThibord",
          "type": "User"
        },
        "date_created": "2022-03-10T20:43:00Z",
        "date_published": "2022-03-10T20:46:20Z",
        "description": "Release compatible with Bowtie2/2.4.5-1",
        "html_url": "https://github.com/FlorianThibord/OptimiR/releases/tag/v1.2",
        "name": "optimiR_v1.2",
        "release_id": 61538079,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/FlorianThibord/OptimiR/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/FlorianThibord/OptimiR/releases/61538079",
        "value": "https://api.github.com/repos/FlorianThibord/OptimiR/releases/61538079",
        "zipball_url": "https://api.github.com/repos/FlorianThibord/OptimiR/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "FlorianThibord",
          "type": "User"
        },
        "date_created": "2020-06-15T14:48:20Z",
        "date_published": "2021-03-28T23:27:40Z",
        "description": "This release has bug fixes.",
        "html_url": "https://github.com/FlorianThibord/OptimiR/releases/tag/v1.1",
        "name": "optimiR_v1.1",
        "release_id": 40607625,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/FlorianThibord/OptimiR/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/FlorianThibord/OptimiR/releases/40607625",
        "value": "https://api.github.com/repos/FlorianThibord/OptimiR/releases/40607625",
        "zipball_url": "https://api.github.com/repos/FlorianThibord/OptimiR/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "FlorianThibord",
          "type": "User"
        },
        "date_created": "2019-04-02T15:37:51Z",
        "date_published": "2019-04-02T15:53:21Z",
        "description": "First stable release of OptimiR.",
        "html_url": "https://github.com/FlorianThibord/OptimiR/releases/tag/v1.0",
        "name": "OptimiR_v1.0",
        "release_id": 16506393,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/FlorianThibord/OptimiR/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/FlorianThibord/OptimiR/releases/16506393",
        "value": "https://api.github.com/repos/FlorianThibord/OptimiR/releases/16506393",
        "zipball_url": "https://api.github.com/repos/FlorianThibord/OptimiR/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "OptimiR"
        ],
        "type": "Text_excerpt",
        "value": "The following python libraries must be installed: pysam and biopython (available through `pip`).\nThe following programs must be installed: bowtie2, cutadapt, samtools. If the path of any of these programs is not in `$PATH`, you can provide it directly to optimir (see `optimir process -h` and `optimir libprep -h`).\n\nAs of nov. 2018 OptimiR has been only used (successfuly) in a GNU/Linux environment. Works fine with python2 and python3.\n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run on an example",
        "parent_header": [
          "OptimiR"
        ],
        "type": "Text_excerpt",
        "value": "We provide 2 very small fastq samples and a vcf file with OptimiR, available in the directory `example`. In the main directory, 2 scripts allow the user to run OptimiR on these examples, either on a single sample (`example_1.sh`) or on both samples sequentially (`example_all.sh`).\n\nTo run the script, use `./example_1.sh` or `./example_all.sh`\n\nThe script `example_all.sh` has 3 steps:\n1. Prepare the alignment library ahead with the provided vcf. OptimiR will rely on this library to quantify reads from the 2 samples. Their genotypes for a set of variants loacted on miRNAs are included in the vcf file (`genotypes.vcf`). **This step is mandatory when processing samples in parallel.**\n1. Run optimir sequentially on both samples. Since the library is already prepared and available in the provided output directory, OptimiR won't prepare it again and will align and quantify miRNAs using this library.\n1. Run optimir_SUMMARY on the output directory, in order to gather the results from both samples in single files (abundances and annotation tables).\n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:49:45",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "optimir help",
        "parent_header": [
          "OptimiR"
        ],
        "type": "Text_excerpt",
        "value": "`optimir -h` will give:\n```\nusage: optimir [-h] {process,summarize,libprep} ...\n\nOptimiR: A bioinformatics pipeline designed to detect and quantify miRNAs,\nisomiRs and polymiRs from miRSeq data, & study the impact of genetic\nvariations on polymiRs' expression\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nOptimiR subcommands:\n  {process,summarize,libprep}\n    process             Process a single fastq file with the OptimiR workflow\n    summarize           Summarize results of previously processed samples\n    libprep             Only prepare small RNA alignment library sequences\n                        that integrates genetic variants (required before\n                        processing multiple samples in parallel)\n```\n\n`optimir process -h` will produce:\n```\nusage: optimir process [-h] -i FASTQ [-o OUTDIR] [-g VCF] [--seedLen SEEDLEN]\n                       [--w5 WEIGHT5] [--scoreThresh SCORE_THRESH]\n                       [--consistentRate INCONSISTENT_THRESHOLD]\n                       [--rmTempFiles] [--annot ANNOT_FILES] [--gff_out]\n                       [--vcf_out] [--adapt3 ADAPT3] [--adapt5 ADAPT5]\n                       [--readMin READMIN] [--readMax READMAX]\n                       [--bqThresh BQTHRESH] [--trimAgain]\n                       [--maturesFasta MATURES] [--hairpinsFasta HAIRPINS]\n                       [--gff3 GFF3] [--quiet] [--cutadapt CUTADAPT]\n                       [--bowtie2 BOWTIE2] [--bowtie2_build BOWTIE2_BUILD]\n                       [--samtools SAMTOOLS]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i FASTQ, --fq FASTQ  Full path of the sample fastq file (accepted formats\n                        and extensions: fastq, fq and fq.gz)\n  -o OUTDIR, --dirOutput OUTDIR\n                        Full path of the directory where output files are\n                        generated [default: ./OptimiR_Results_Dir/]\n  -g VCF, --vcf VCF     Full path of the vcf file with genotypes\n  --seedLen SEEDLEN     Choose the alignment seed length used in option '-L'\n                        by Bowtie2 [default: 17]\n  --w5 WEIGHT5          Choose the weight applied on events detected on the 5'\n                        end of aligned reads [default: 4]\n  --scoreThresh SCORE_THRESH\n                        Choose the threshold for alignment score above which\n                        alignments are discarded [default: 9]\n  --consistentRate INCONSISTENT_THRESHOLD\n                        Choose the rate threshold for inconsistent reads\n                        mapped to a polymiR above which the alignment is\n                        flagged as highly suspicious [default: 0.01]\n  --rmTempFiles         Add this option to remove temporary files (trimmed\n                        fastq, collapsed fastq, mapped reads, annotated bams\n  --annot ANNOT_FILES   Control which annotation file is produced by adding\n                        corresponding letter : 'h' for expressed_hairpins, 'p'\n                        for polymiRs_table, 'i' for consistency_table, 'c' for\n                        remaining_ambiguous, 's' for isomiRs_dist. Ex: '--\n                        annot hpics' [default] will produce all of them\n  --gff_out             Add this option to generate results in mirGFF3 format\n                        [default : disabled]\n  --vcf_out             Add this option to generate results in VCF format\n                        [default : disabled]\n  --adapt3 ADAPT3       Define the 3' adaptor sequence (default is NEB &\n                        ILLUMINA: AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC -a\n                        TGGAATTCTCGGGTGCCAAGG -> hack: use -a to add adapter\n                        sequences)\n  --adapt5 ADAPT5       Define the 5' adaptor sequence [default: None]\n  --readMin READMIN     Define the minimum read length defined with option -m\n                        in cutadapt [default: 15]\n  --readMax READMAX     Define the maximum read length defined with option -M\n                        in cutadapt [default: 27]\n  --bqThresh BQTHRESH   Define the Base Quality threshold defined with option\n                        -q in cutadapt [default: 28]\n  --trimAgain           Add this option to trim files that have been trimmed\n                        in a previous application. By default, when temporary\n                        files are kept, trimmed files are reused. If you wish\n                        to change a paramater used in the trimming step of the\n                        workflow, this parameter is a must [default: disabled]\n  --maturesFasta MATURES\n                        Path to the reference library containing mature miRNAs\n                        sequences [default: miRBase 21]\n  --hairpinsFasta HAIRPINS\n                        Path to the reference library containing pri-miRNAs\n                        sequences [default: miRBase 21]\n  --gff3 GFF3           Path to the reference library containing miRNAs and\n                        pri-miRNAs coordinates [default: miRBase v21, GRCh38\n                        coordinates]\n  --quiet               Add this option to remove OptimiR progression on\n                        screen [default: disabled]\n  --cutadapt CUTADAPT   Provide path to the cutadapt binary [default: from\n                        $PATH]\n  --bowtie2 BOWTIE2     Provide path to the bowtie2 binary [default: from\n                        $PATH]\n  --bowtie2_build BOWTIE2_BUILD\n                        Provide path to the bowtie2 index builder binary\n                        [default: from $PATH]\n  --samtools SAMTOOLS   Provide path to the samtools binary [default: from\n                        $PATH]\n```\n\n`optimir summarize -h` will produce:\n```\nusage: optimir summarize [-h] --dir DIR\n\noptional arguments:\n  -h, --help  show this help message and exit\n  --dir DIR   Full path of the directory containing results\n```\n`optimir libprep -h` will produce:\n```\nusage: optimir libprep [-h] [-v VCF] [--maturesFasta MATURES]\n                       [--hairpinsFasta HAIRPINS] [--gff3 GFF3] [-o OUTDIR]\n                       [--bowtie2_build BOWTIE2_BUILD]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v VCF, --vcf VCF     Full path of the input VCF file.\n  --maturesFasta MATURES\n                        Path to the reference library containing mature miRNAs\n                        sequences [default: miRBase 21]\n  --hairpinsFasta HAIRPINS\n                        Path to the reference library containing pri-miRNAs\n                        sequences [default: miRBase 21]\n  --gff3 GFF3           Path to the reference library containing miRNAs and\n                        pri-miRNAs coordinates [default: miRBase v21, GRCh38\n                        coordinates]\n  -o OUTDIR, --dirOutput OUTDIR\n                        Full path of the directory where output files are\n                        generated [default: ./OptimiR_Results_Dir/]\n  --bowtie2_build BOWTIE2_BUILD\n                        Provide path to the bowtie2 index builder binary\n                        [default: from $PATH]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "OptimiR"
        ],
        "type": "Text_excerpt",
        "value": "```\noptimir process --fq /path/to/sample.fq(.gz) \\\n\t\t--dir_output /path/to/output/dir/ \\\n\t\t--vcf /path/to/genotypes.vcf (optional)\n```\nDifferent options are available to customize the reference library and the outputs. Use `optimir process -h` to see all options. The user can provide a vcf file (and is recommanded to do so) with a list of variants, OptimiR will extract variants located on miRNAs and generate new alternative sequences of these miRNAs (a.k.a polymiRs) integrating the alternative version of the variant.\n\nIn dir_output, the following directories are created:\n - `OptimiR_lib` : contains the alignment index generated by OptimiR, as well as a pickle directory containing python object (which allow the library to not be regenerated at each run if the inputed files did not change), and a fasta file which contains all the miRs and polymiRs sequences generated by OptimiR\n - `OptimiR_tmp` : contains temporary files generated during OptimiR run (files after trimming, collapsing and mapping steps, as well as cutadapt and bowtie2 reports). The final alignment file is available in the directory `3_PostProcess` in bam format. If `--rmTempFiles` option is given to optimir, this directory will be deleted. Tip : If OptimiR is run on the same sample more than once and `OptimiR_tmp` not deleted, the sample is not trimmed again, which saves computation time (except if option `--trimAgain` is provided).\n - `OptimiR_Results` : contains the abundances tables for each miRs and polymiRs, and detailed counts of isomiRs. If genotypes are provided, a consistency table is also generated and indicate the consistency between the alignment on a polymiR and the genotypes of the variants involved. Annotation files are also generated to provide information on ambiguous alignments (reads mapping on several references) that could not be resolved by OptimiR, and another file gives an indication on the parental hairpins from which the reads are originating (computed from templated tailed nucleotides).\n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run on an example",
        "parent_header": [
          "OptimiR"
        ],
        "type": "Text_excerpt",
        "value": "We provide 2 very small fastq samples and a vcf file with OptimiR, available in the directory `example`. In the main directory, 2 scripts allow the user to run OptimiR on these examples, either on a single sample (`example_1.sh`) or on both samples sequentially (`example_all.sh`).\n\nTo run the script, use `./example_1.sh` or `./example_all.sh`\n\nThe script `example_all.sh` has 3 steps:\n1. Prepare the alignment library ahead with the provided vcf. OptimiR will rely on this library to quantify reads from the 2 samples. Their genotypes for a set of variants loacted on miRNAs are included in the vcf file (`genotypes.vcf`). **This step is mandatory when processing samples in parallel.**\n1. Run optimir sequentially on both samples. Since the library is already prepared and available in the provided output directory, OptimiR won't prepare it again and will align and quantify miRNAs using this library.\n1. Run optimir_SUMMARY on the output directory, in order to gather the results from both samples in single files (abundances and annotation tables).\n"
      },
      "source": "https://raw.githubusercontent.com/FlorianThibord/OptimiR/master/README.md",
      "technique": "header_analysis"
    }
  ]
}