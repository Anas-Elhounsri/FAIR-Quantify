{
  "application_domain": [
    {
      "confidence": 24.81,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/delosh653/ECHO"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact Information and Bug Reporting",
        "parent_header": [
          "Welcome to ECHO!"
        ],
        "type": "Text_excerpt",
        "value": "We would love to hear your feedback on the program. For general feedback, email hurlej2@rpi.edu with the subject line \"ECHO Feedback\".\n\nIf you run into any errors, please email hurlej2@rpi.edu with the following (subject line: \"ECHO Error\"): \n- a short desciption of your problem\n- ECHO version number \n- your dataset/file(s) (this may be a sample of at least 50% of the data)\n- your exact settings for the run (a screenshot will do) \n- your exact error from the console window (a screenshot will do)\n\nHowever, *please* read the FAQ below and all given information (including instructions in the app, example data, etc.) before sending error reports.\n\nContact:\nJennifer Hurley /\nemail: hurlej2@rpi.edu /\nRensselaer Polytechnic Institute\n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-11-17T04:53:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-06T21:15:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An application to find and visualize circadian rhythms in time course data using extended harmonic oscillators."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9668148028979756,
      "result": {
        "original_header": "Welcome to ECHO!",
        "type": "Text_excerpt",
        "value": "This is the first step in the PAICE (Pipeline for Amplitude Integration of Circadian Exploration) Suite! This suite of tools provides high-throughput applications for circadian, ultradian, and infradian rhythms. The second step, ENCORE, can be found [here](https://github.com/delosh653/ENCORE), and can be run after using the application. The third step, MOSAIC, can be found [here](https://github.com/delosh653/MOSAIC).\n \n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9613186052521758,
      "result": {
        "original_header": "README Outline",
        "type": "Text_excerpt",
        "value": "* Overview\n* Use and First-Time Set-Up Instructions\n* ECHO Features\n* Data Format Example\n* ECHO R Package\n* Minimum Version Information\n* Contact Information and Bug Reporting\n* FAQ\n \n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9704751713423594,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "ECHO (Extended Circadian Harmonic Oscillators) is an R-powered application designed to find and visualize circadian rhythms from your data using extended harmonic oscillators. To read more about this work and cite us, see [*ECHO: an Application for Detection and Analysis of Oscillators Identifies Metabolic Regulation on Genome-Wide Circadian Output*](https://doi.org/10.1093/bioinformatics/btz617) by H. De los Santos et al. (2019), published in *Bioinformatics*. To read more about the inital work on this project, see [*Circadian Rhythms in Neurospora Exhibit Biologically Relevant Driven and Damped Harmonic Oscillations*](https://dl.acm.org/citation.cfm?id=3107420&CFID=1006798692&CFTOKEN=88816139) by H. De los Santos et al. (2017), published at ACM-BCB 2017. We also can also run another common circadian rhythm detection system, JTK_CYCLE. If you use their detection system, please cite them: [*JTK_CYCLE: an efficient non-parametric algorithm for detecting rhythmic components in genome-scale datasets*](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3119870/) by  ME Hughes et al. (2011) \n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9778907588977287,
      "result": {
        "original_header": "ECHO Features",
        "type": "Text_excerpt",
        "value": "ECHO's interface is divided into two sections: **Finding Rhythms** and **Visualizing Results**. \nWithin the **Finding Rhythms** tab, you can upload your data (.csv) and enter its information, such as time point range, resolution (in hours), and amount and type of replicates. You can then choose from a variety of preprocessing steps including smoothing, removing unexpressed genes, and removing linear baselines. As mentioned above, you can also choose to run JTK_CYCLE from this tab. You can then download your results as both a .csv (for viewing) and a .RData (for visualizations). \nIn the **Visualizing Results** tab, simply upload the .RData file from your results and choose from several visualization and gene subset exploration options. You can explore subsets of data under the \"Gene List\" tab and sort by the various output parameters, such as Period or P-Value. You can also choose from a host of automatically-generated visualizations, including Venn diagrams, heat maps, gene expression plots (with or without replicates visualized), and parameter density graphs (examples displayed below). \n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9614529610236149,
      "result": {
        "original_header": "ECHO R Package",
        "type": "Text_excerpt",
        "value": "ECHO's methodology is now available as an R package on CRAN! To download and use ECHO as a package, enter the following in the R console:\n```r\ninstall.packages(\"echo.find\")\nlibrary(echo.find)\n```\n \nWith this, you then have access to finding rhythms in data with one function, echo_find(). For more information on how to use this package and its functionality, check out the [echo.find vignette](https://cran.r-project.org/web/packages/echo.find/vignettes/echo-vignette.html). \nNote that using this package requires knowledge of coding in R. If you having no coding knowledge, we recommend that you download and use the app as directed above. Also note that this version of ECHO does not take advantage of parallelism that the ECHO app does and therefore takes longer to run (only using one core, rather than using all cores except one). Further, there is no console output to show a progress bar of how long the output will take. If you would prefer built in parallelism and a progress bar, we highly recommend that you use the app. However, we have thought of several workarounds -- if interested, feel free to contact us with the \"Feedback\" form below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8372108831444611,
      "result": {
        "original_header": "Minimum Version Information",
        "type": "Text_excerpt",
        "value": "Minimum versions for packages and sytems used in ECHO are the following: \n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/delosh653/ECHO/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQ",
        "parent_header": [
          "Welcome to ECHO!"
        ],
        "type": "Text_excerpt",
        "value": "**Q:** My dataset isn't working for some reason and I'm not using the latest ECHO version! Why?\n\n**A:** Please update to the current ECHO version (you can see this at the top of the github repository by checking out what the latest commit was), since this may have been corrected in an update. If this problem persists, feel free to send another email!\n\n---\n\n**Q:** Does ECHO work with 24-hour time course length data to determine circadian rhythms?\n\n**A:** Yes, it does! However, I would not categorize any rhythms convincingly \"Damped\", \"Harmonic\", or \"Forced\", since you need more than one cycle to determine this.\n\n---\n\n**Q:** My data has starting points/ending points/resolution of less than an hour, or a fractional amount of hours! How do I run this through ECHO?\n\n**A:** If you have resolution of less than an hour, please enter the fraction into the box, in the form: numerator/denominator. For example, if my resolution was every 10 minutes (or 6 times every hour), I would enter: 1/6. This fractional form extends to starting and ending points as well. You must enter the fraction, NOT a mixed number. For example, if my starting time was 16 hours, 10 minutes, my starting time would be: 97/6. (This stems from the following calculation: (6/6 x 16) + (1/6))\n\n---\n\n**Q:** I was running ECHO, and it suddenly went grey! What happened?\n\n**A:** There was an error, the cause of which can be found in the console. Check through the FAQ to see if it has been addressed, or if it's an obvious error (such as not loading any data).\n\n---\n\n**Q:** I get the following warning and errors when I try to run my data through ECHO:\n\n```r\nWarning in read.table(file = file, header = header, sep = sep, quote = quote,  :\n  incomplete final line found by readTableHeader on '....csv'\n\nWarning: Error in +: non-conformable arrays\n  76: avg_all_rep [damped_oscillator_master.R#157]\n  72: observeEventHandler [/Users/delosh/Desktop/ECHO-master/ECHO Shiny App/app.R#442]\n```\n\n**A:** Double check that your data is actually a .csv, i.e. actually comma-delimited. Just because it has \".csv\" as a file extension may not necessarily mean that it's comma-delimited! You can check this by opening your file in a text editor, such as Notepad. If your data is comma-delimited, you should see commas between your entries. If it is not, you may see spaces or tabs. In this case, please save your data as a proper comma-delimited file.\n\n---\n\n**Q:** I get the following warnings and errors when I try to visualize my results using the .RData file:\n```r\nWarning in circ_us & circ_jtk:\n  longer object length is not a multiple of shorter object length\n...\nWarning: Error in data.frame: arguments imply differing number of rows\n```\n**A:** Double check that you do not have any duplicate gene names in your dataset. If you do, differentiate these names somehow. JTK_CYCLE automatically removes duplicate names while ECHO doesn't, leading to this error.\n\n---\n\n**Q:** I get the following error when I try to run my dataset using ECHO:\n```r\nWarning: Error in {: task 3 failed - \"missing value where TRUE/FALSE needed\"\n```\n**A:** Check your data csv to make sure that your first row is data labels, your first column is only character strings (such as \"ABCD\"), and your numerical data only contains numbers and blank spaces. In R, there is a simple way to check this (enter the following code in your console window):\n```r\ninstall.packages(\"readr\") # if you already have downloaded this package, put a # before install\nlibrary(readr)\ngenes <- read_csv(\"YOUR FILE EXTENSION HERE (place between quotes, must use forward slashes)\")\n```\nHere is an example of a file extension: \"C:/Users/delosh/Documents/example.csv\" . \nIf your data is correctly structured, you should see the following (replace \"Gene Symbol\" with whatever your gene name column is titled):\n```r\nParsed with column specification:\ncols(\n  .default = col_double(),\n  `Gene Symbol` = col_character()\n)\nSee spec(...) for full column specifications.\n```\nIf you have problems in your data (in this error case, nonnumerical data in your numerical data), you will get the following error (or similar):\n```r\nParsed with column specification:\ncols(\n  .default = col_double(),\n  `Gene Symbol` = col_character()\n)\nSee spec(...) for full column specifications.\nWarning: 72 parsing failures.\n row  col expected  actual\n1250 16.1 a double #DIV/0!\n1250 16.2 a double #DIV/0!\n1250 18.1 a double #DIV/0!\n.... .... ........ .......\nSee problems(...) for more details.\n```\nIn this case, nonnumerical data was intermixed with numerical data (#DIV/0! was where a number or a blank cell should have been). This user would have to go back and change these to the appropriate number or blank space.\n\n---\n\n**Q:** I get the following warning when I try to run my data through ECHO:\n\n```r\nWarning in read.table(file = file, header = header, sep = sep, quote = quote,  :\n  incomplete final line found by readTableHeader on '....csv'\n```\n\n**A:** Double check that your data has a blank line at the end. Text files, including CSVs, need new lines at the end to be read in correctly. Saving your data in a program such as Excel, with no special encodings, will do this for you. You can check this by opening your file in a text editor, such as Notepad. If there is no empty line at the end of the file, please add one.\n\n---\n\n**Q:** I get the following error (or similar) when I try to view a Gene List in the Visualizations part of ECHO:\n\n```r\nDataTables warning: table id=DataTables_Table_0 - Requested unknown parameter '8' for row 0.\n  For more information about this error, please see http://datatables.net/tn/4\n```\n\n**A:** This is a [bug](https://community.rstudio.com/t/data-table-issue-while-rendering-the-shiny-page-datatables-warning-table-id-datatables-table-0-requested-unknown-parameter/44016/3) with Data Tables in Shiny 1.4. To check your version of Shiny, enter the following in the console:\n```r\npackageVersion(\"shiny\")\n```\nThis should give you the Shiny version. If you have version 1.4, a quick fix is the following:\n\n1. Open ECHO's app.R file in RStudio.\n2. Enter `install.packages(\"DT\")` in the console, which will install the DT package.\n3. Add `library(DT)` at the top of the app.R script, on its own line.\n4. Press ctrl/cmd+F, which will open the find and replace tool at the top of the script.\n5. In the left box, which is the \"find\" box, enter `dataTableOutput`. In the right box, which is the \"replace\" box, enter `DT::dataTableOutput`. Then click the rightmost button, which says `All`.\n6. After you have done step 3, in the left box, which is the \"find\" box, enter `renderDataTable`. In the right box, which is the \"replace\" box, enter `DT::renderDataTable`. Then click the rightmost button, which says `All`.\n7. Press ctrl/cmd+S, which saves the app.R file.\n\nAfter you've completed all these steps, the problem should be fixed when you run it again!\n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/delosh653/ECHO/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "delosh653/ECHO"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Welcome to ECHO!"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/delosh653/ECHO/master/ECHO Shiny App/www/wc1_Neurospora_Replicates_Unsmoothed.PNG"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/delosh653/ECHO/master/ECHO Shiny App/www/venn_diagram_by_adj_include_overdamped_Neurospora_Replicates_Unsmoothed.PNG"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/delosh653/ECHO/master/ECHO Shiny App/www/wc1_Neurospora_Replicates_Unsmoothed.PNG"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/delosh653/ECHO/master/ECHO Shiny App/www/wc1_gene_expression_wo_rep_Neurospora_Replicates_Unsmoothed.PNG"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/delosh653/ECHO/master/ECHO Shiny App/www/forcing_coefficient_density_Neurospora_Replicates_Smoothed_ECHO.PNG"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use and First-Time Set-Up Instructions",
        "parent_header": [
          "Welcome to ECHO!"
        ],
        "type": "Text_excerpt",
        "value": "Thank you for downloading ECHO! ECHO is is an app designed to find and identify circadian rhythms from your data, then visualize the results. This guide will lead you in first time set-up and use. Pictures have been provided for ease of use, using Windows 7, in the files ECHO README.docx and ECHO_README.pdf, found above. A double asterisk indicates the step has an explanation below, and a tilde indicates the step is first-time set up only.\n\nSteps: \n1.\t** ~ Download [Firefox](https://www.mozilla.org/en-US/firefox/new/) or [Chrome](https://www.google.com/chrome/browser/desktop/index.html) and make it your default browser.\n2.\t~ [Download R](https://www.r-project.org/), if you do not already have it. \n3.\t~ [Download RStudio](https://www.rstudio.com/products/rstudio/download/), if you do not already have it (RStudio Desktop is sufficient).\n4.\tOpen RStudio.\n5.\t~ Copy and paste the following text into the console window (bottom left window of the RStudio Session), then press enter:\n\n```r\ninstall.packages(\"rstudioapi\")\ninstall.packages(\"shiny\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"VennDiagram\")\ninstall.packages(\"reshape2\")\ninstall.packages(\"minpack.lm\")\ninstall.packages(\"doParallel\")\ninstall.packages(\"foreach\")\ninstall.packages(\"iterators\")\ninstall.packages(\"doSNOW\")\ninstall.packages(\"colorRamps\")\ninstall.packages(\"fields\")\ninstall.packages(\"boot\")\n```\n\nThis will install these packages (a set of functions that this application uses) onto your computer. This may ask for your input, so just say yes to the questions asked. If you run into errors saying \u201cyes,\u201d just say no instead. Note: this may take some time.\n\n6.\tOpen app.R, which should be included in the .zip file you downloaded and also contained README.pdf and README.docx. It should open in the top left window of your RStudio session.\n\n7.\tIn the top right corner of the app.R window, you should see the button, \u201cRun App\u201d. Click on the small downwards arrow next to it and choose \u201cRun External\u201d. \n\n8.\tNow click \u201cRun App\u201d. This should open the ECHO application in your now default browser window (either Firefox or Chrome). The picture below is a representation in Firefox.\n\n9.\tHave fun!\n\n** Why do I have to install either Firefox or Chrome, you ask? Why not Internet Explorer, or some other browser? Well, it is known there are problems downloading files when viewing shiny apps in Internet Explorer, so we definitely want to avoid that. However, I have not tested this app in browsers like Microsoft Edge, Safari, etc. If you can verify that these work, please let me know at delosh@rpi.edu.\n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8239908931352787,
      "result": {
        "original_header": "Welcome to ECHO!",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n<img src=\"ECHO Shiny App/www/wc1_Neurospora_Replicates_Unsmoothed.PNG\" width=\"500\" />\n</p> \n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9543721609599027,
      "result": {
        "original_header": "README Outline",
        "type": "Text_excerpt",
        "value": "* Overview\n* Use and First-Time Set-Up Instructions\n* ECHO Features\n* Data Format Example\n* ECHO R Package\n* Minimum Version Information\n* Contact Information and Bug Reporting\n* FAQ\n \n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999997224350453,
      "result": {
        "original_header": "ECHO Features",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n<img src=\"ECHO Shiny App/www/venn_diagram_by_adj_include_overdamped_Neurospora_Replicates_Unsmoothed.PNG\" width=\"200\" /> <img src=\"ECHO Shiny App/www/heat_map_Neurospora_Replicates_Smoothed_ECHO.PNG\" width=\"200\" /> <img src=\"ECHO Shiny App/www/wc1_Neurospora_Replicates_Unsmoothed.PNG\" width=\"300\" /> <img src=\"ECHO Shiny App/www/wc1_gene_expression_wo_rep_Neurospora_Replicates_Unsmoothed.PNG\" width=\"300\" /> <img src=\"ECHO Shiny App/www/forcing_coefficient_density_Neurospora_Replicates_Smoothed_ECHO.PNG\" width=\"300\" />\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999998410926505,
      "result": {
        "original_header": "ECHO R Package",
        "type": "Text_excerpt",
        "value": "ECHO's methodology is now available as an R package on CRAN! To download and use ECHO as a package, enter the following in the R console:\n```r\ninstall.packages(\"echo.find\")\nlibrary(echo.find)\n```\n \nNote that using this package requires knowledge of coding in R. If you having no coding knowledge, we recommend that you download and use the app as directed above. Also note that this version of ECHO does not take advantage of parallelism that the ECHO app does and therefore takes longer to run (only using one core, rather than using all cores except one). Further, there is no console output to show a progress bar of how long the output will take. If you would prefer built in parallelism and a progress bar, we highly recommend that you use the app. However, we have thought of several workarounds -- if interested, feel free to contact us with the \"Feedback\" form below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9244403590723682,
      "result": {
        "original_header": "Minimum Version Information",
        "type": "Text_excerpt",
        "value": "Minimum versions for packages and sytems used in ECHO are the following: \n| Package        | Minimum Version |\n| -------------: |-------------|\n| R | >= 3.5.1 |\n| rstudioapi | >= 0.8|\n| shiny | >= 1.3.2 |\n| ggplot2 | >= 3.1.0 |\n| VennDiagram | >= 1.6.20 |\n| reshape2 | >= 1.4.3 |\n| minpack.lm | >= 1.2-1|\n| doParallel | >= 1.0.14|\n| foreach | >= 1.4.4|\n| interators | >= 1.0.10|\n| doSNOW | >= 1.0.16|\n| colorRamps | >= 2.3|\n| fields | >= 9.6|\n| boot | >= 1.3-22|\n \n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/delosh653/ECHO/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, bioinformatics-tool, circadian, circadian-rhythm, circadian-rhythmicity, echo, extended-harmonic-oscillators, finding-rhythms, omics, oscillators, proteomics, transcriptomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 delosh653\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/delosh653/ECHO/master/ECHO Shiny App/www/heat_map_Neurospora_Replicates_Smoothed_ECHO.PNG"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ECHO"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "delosh653"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 177348,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "delosh653",
          "type": "User"
        },
        "date_created": "2020-05-12T16:17:46Z",
        "date_published": "2020-05-12T16:29:08Z",
        "description": "In our work for <a href=\"https://github.com/delosh653/MOSAIC\">MOSAIC</a> <a href=\"https://www.biorxiv.org/content/10.1101/2020.04.27.064147v1\">(paper)</a>, we have developed improved starting points for ECHO models. As such, we have integrated these starting points for the ECHO model for the newest version, v4.0. Other bug fixes have also been added, detailed in the commit notes. Methods for these improved starting points appear in ECHO_V4_Update.pdf, as well as comparisons with datasets used in the Bioinformatics publication. Due to these improvements, we highly recommend that new users use ECHO v4.0+. However, the <a href=\"https://github.com/delosh653/ECHO/releases/tag/v3.22\">journal version</a> will still be available for those who prefer it.",
        "html_url": "https://github.com/delosh653/ECHO/releases/tag/v4.0",
        "name": "v4.0 (starting point improvements!, bug fixes)",
        "release_id": 26431979,
        "tag": "v4.0",
        "tarball_url": "https://api.github.com/repos/delosh653/ECHO/tarball/v4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/delosh653/ECHO/releases/26431979",
        "value": "https://api.github.com/repos/delosh653/ECHO/releases/26431979",
        "zipball_url": "https://api.github.com/repos/delosh653/ECHO/zipball/v4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "delosh653",
          "type": "User"
        },
        "date_created": "2020-04-30T19:52:14Z",
        "date_published": "2020-04-30T19:56:16Z",
        "description": "ECHO v3.22: This version contains all the features as described in our Bioinformatics publication, along with a bug fix for bootstrapping on data with missing values. This does not affect any results from the journal paper, \"ECHO: an Application for Detection and Analysis of Oscillators Identifies Metabolic Regulation on Genome-Wide Circadian Output\" by H. De los Santos, et al. (2020) (doi: 10.1093/bioinformatics/btz617)",
        "html_url": "https://github.com/delosh653/ECHO/releases/tag/v3.22",
        "name": "v3.22 (Bioinformatics journal version, with bugs fixed)",
        "release_id": 26062541,
        "tag": "v3.22",
        "tarball_url": "https://api.github.com/repos/delosh653/ECHO/tarball/v3.22",
        "type": "Release",
        "url": "https://api.github.com/repos/delosh653/ECHO/releases/26062541",
        "value": "https://api.github.com/repos/delosh653/ECHO/releases/26062541",
        "zipball_url": "https://api.github.com/repos/delosh653/ECHO/zipball/v3.22"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "delosh653",
          "type": "User"
        },
        "date_created": "2019-10-09T16:47:02Z",
        "date_published": "2020-04-30T14:09:18Z",
        "description": "ECHO v3.21: This version contains all the features as described in our Bioinformatics publication, \"ECHO: an Application for Detection and Analysis of Oscillators Identifies Metabolic Regulation on Genome-Wide Circadian Output\" by H. De los Santos, et al. (2020) (doi: 10.1093/bioinformatics/btz617)",
        "html_url": "https://github.com/delosh653/ECHO/releases/tag/v3.21",
        "name": "ECHO v3.21 (Bioinformatics journal version)",
        "release_id": 26048773,
        "tag": "v3.21",
        "tarball_url": "https://api.github.com/repos/delosh653/ECHO/tarball/v3.21",
        "type": "Release",
        "url": "https://api.github.com/repos/delosh653/ECHO/releases/26048773",
        "value": "https://api.github.com/repos/delosh653/ECHO/releases/26048773",
        "zipball_url": "https://api.github.com/repos/delosh653/ECHO/zipball/v3.21"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 01:34:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use and First-Time Set-Up Instructions",
        "parent_header": [
          "Welcome to ECHO!"
        ],
        "type": "Text_excerpt",
        "value": "Thank you for downloading ECHO! ECHO is is an app designed to find and identify circadian rhythms from your data, then visualize the results. This guide will lead you in first time set-up and use. Pictures have been provided for ease of use, using Windows 7, in the files ECHO README.docx and ECHO_README.pdf, found above. A double asterisk indicates the step has an explanation below, and a tilde indicates the step is first-time set up only.\n\nSteps: \n1.\t** ~ Download [Firefox](https://www.mozilla.org/en-US/firefox/new/) or [Chrome](https://www.google.com/chrome/browser/desktop/index.html) and make it your default browser.\n2.\t~ [Download R](https://www.r-project.org/), if you do not already have it. \n3.\t~ [Download RStudio](https://www.rstudio.com/products/rstudio/download/), if you do not already have it (RStudio Desktop is sufficient).\n4.\tOpen RStudio.\n5.\t~ Copy and paste the following text into the console window (bottom left window of the RStudio Session), then press enter:\n\n```r\ninstall.packages(\"rstudioapi\")\ninstall.packages(\"shiny\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"VennDiagram\")\ninstall.packages(\"reshape2\")\ninstall.packages(\"minpack.lm\")\ninstall.packages(\"doParallel\")\ninstall.packages(\"foreach\")\ninstall.packages(\"iterators\")\ninstall.packages(\"doSNOW\")\ninstall.packages(\"colorRamps\")\ninstall.packages(\"fields\")\ninstall.packages(\"boot\")\n```\n\nThis will install these packages (a set of functions that this application uses) onto your computer. This may ask for your input, so just say yes to the questions asked. If you run into errors saying \u201cyes,\u201d just say no instead. Note: this may take some time.\n\n6.\tOpen app.R, which should be included in the .zip file you downloaded and also contained README.pdf and README.docx. It should open in the top left window of your RStudio session.\n\n7.\tIn the top right corner of the app.R window, you should see the button, \u201cRun App\u201d. Click on the small downwards arrow next to it and choose \u201cRun External\u201d. \n\n8.\tNow click \u201cRun App\u201d. This should open the ECHO application in your now default browser window (either Firefox or Chrome). The picture below is a representation in Firefox.\n\n9.\tHave fun!\n\n** Why do I have to install either Firefox or Chrome, you ask? Why not Internet Explorer, or some other browser? Well, it is known there are problems downloading files when viewing shiny apps in Internet Explorer, so we definitely want to avoid that. However, I have not tested this app in browsers like Microsoft Edge, Safari, etc. If you can verify that these work, please let me know at delosh@rpi.edu.\n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Data Format Example",
        "parent_header": [
          "Welcome to ECHO!"
        ],
        "type": "Text_excerpt",
        "value": "Data should be a .csv (comma-separated values) with the first column being the expression names/labels, and the rest being numeric columns with expression data, ordered by time point, then by replicate. Missing data should be left blank. An example of this formatting is the following:\n\n| Gene.Name |\tTP2.1 | \tTP2.2| \tTP2.3\t| TP4.1| \tTP4.2| \tTP4.3| \n| ------------- |-------------|-------------|-------------|-------------|-------------|-------------|\n| Sample 1 |\t1.633117905| \t| \t1.513810213| \t1.309553546 | \t1.302488129| \t|\t\n| Sample 2 | \t-0.630319173| \t| \t-0.510500938| \t| \t-0.543457041| \t-0.448383157|\t\t\n| Sample 3\t| -0.780221402| \t| \t| \t0.178429468| \t0.306513019| \t1.376226634|\n\nIn this example, this is two hour resolution data taken from 2 to 4 hours, with three replicates. The second replicate at time point 2 is entirely missing, and each expression has additional missing data at various time points and replicates.\n\nA larger example dataset can be found in the folder you downloaded with ECHO, called \"DataExample.csv\". If you have unevenly sampled data, choose the smallest resolution and leave all missing column samples blank.\n"
      },
      "source": "https://raw.githubusercontent.com/delosh653/ECHO/master/README.md",
      "technique": "header_analysis"
    }
  ]
}