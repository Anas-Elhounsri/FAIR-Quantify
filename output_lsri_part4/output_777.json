{
  "application_domain": [
    {
      "confidence": 24.38,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vivekmathema/OSTRFPD"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "EXECUTION",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "From here onwards, we assume that users have downloaded and extracted all content into 'OSTRFPD' folder which should at least contain 'ostrfpd.py', 'primer3_core' (optional plugin for primer creation), binaries (optional'ostrfpd.exe' for Windows or Linux 'ostrfpd' binary for Linux) and dictionary files (optional) for the software to work properly.\n\n```\n##TYPICAL STRUCTURE OF THE OSTRFPD FOLDER\n\nOSTRFPD_v0.01     \n|\n|-----ostrfpd.py                     \n|-----gui_interface.py\n|-----ostrfpd.exe          [ Note: \u2018ostrfpd\u2019 for LINUX      ]\n|-----primer3_core.exe     [ Note: \u2018primer3_core\u2019 for LINUX ]\n|-----run_ostrfpd_bin_gui.bat   \n|-----run_ostrfpd_src_gui.bat\n|-----dict_dna.txt\n|-----dict_protein.txt\n|-----input.fasta\n|-----requirments.txt\n|-----run_info_readme.txt\n|-----LICENCE\n|-----rna_seq             (Note: subfolder)\n     |-----ribosome1_seq_URS0000857690.fasta\n     |-----ribosome2_seq_URS0000A6B25D.fasta\n\n```\n\nOSTRFPD can be run in either user-friendly GUI mode or command line interface (CLI). \nPlease Note that all parameters or arguments are case sensitive.\nThe GUI mode can be initialized by simple argument \"-gui true\".[ i.e. python3 ostrfpd.py \u2013gui true]\n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "IN WINDOWS:",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "Open windows console (can be initiated by typing cmd.exe in start box) and type the commands (case sensitive).\n```\n[from source code]\npython3 ostrfpd.py -gui true      \n\n[from binaries]            \nostrfpd.exe \u2013gui true \n\n```\nThis should launch OSTRFPD in user-friendly GUI mode containing built-in helper tooltip text, self-explanatory buttons and basic level of error handling interface.\n\nSame steps can be achieved by just running the 'run_ostrfpd_binary.bat' or 'run_ostrfpd_source.bat', which will run the supplied binary (.exe) or source (.py) directly in GUI mode without the requirement to enter console mode.\n\nThe OSTRFPD is supplied with untampered primer3_binaries (version 1.1.4) for windows (primer3_core.exe) which can also be independently downloaded and/or compiled from the official source (https://sourceforge.net/projects/primer3/files/primer3/1.1.4/) following the creators' instructions.\n\nIMPORTANT: Please note that both OSTRFPD binaries (and source) and primer3_core.exe should be in same location even when using pre-compiled ostrfpd.exe (Refer to: Typical Structure of the OSTRFPD Folder).\n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "IN LINUX",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "Open Linux Terminal and type the command (Warning! All parameters or arguments are case sensitive).\n\n```\n$ python3 ostrfpd.py -gui true\n```\n\nThis should launch OSTRFPD in user-friendly GUI mode containing built-in helper tooltip text, self-explanatory buttons and basic level of error handling interface.\n\n\nThe OSTRFPD is supplied with non-tampered pre-compiled Primer3 (ver 1.1.4) binaries named as 'primer3_core' for Linux which can also be independently downloaded and compiled from the source (https://sourceforge.net/projects/primer3/files/primer3/1.1.4/) following the creators' instruction.\n\nWe recommend the Linux users to compile primer3_core from source. However, OSTRFPD is also bundled with pre-compiled 'primer3_core' binary, just in case for ease of use. \n\nIMPORTANT: Please note that both OSTRFPD binaries (and source file 'ostrfpd.py') and 'primer3_core' binary should be in same location (Refer to: Typical Structure of the OSTRFPD Folder).\n\nTypically for Linux users (here, we used Ubuntu 16.04) the system PATH variable should be set to the location from where 'primer3_core',  'ostrfpd.py' or equivalent binary is expected to be run. A typical example is given below. In terminal with likely use of 'sudo previliges' type your path where 'ostrfpd.py' files are located.\n\n```\nexport PATH=/home/user/Documents/OSTRFPD/:$PATH\n\n```\n\nOptionally, if users choose to compile the ostrfpd.py from source using LINUX version of pyinstaller (Refer to pyinstaller installation for Windows) and then use the binary, please follow the command below from OSTRFPD directory to generate LINUX binaries. \n\n```\n$ pyinstaller -D -F -n ostrfpd --onefile -c \"ostrfpd.py\"\n```\n\nThis should create linux compatible binary 'ostrfpd' in /OSTRFPD/dist folder, which can then be copied to the base OSTRFPD folder containing 'primer3_core' binary for use. \n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BARCHART DISPLAY FOR THE CATAGORIZED MOTIF FREQUENCIES",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "This ENTIRELY OPTIONAL segment of the code allows interested advance users to directly generate bar charts of the motif frequencies for visualization using additional \u2018matplot\u2019 and \u2018numpy\u2019 library of the python.\nMost distribution of Matplotlib and numpy should be compatible with this code. Supplied installation version for dependencies should work file:\n```\npip3 install matplotlib==2.2.2 [tested for matplot version 2.2.2]\npip3 install numpy==1.14.5  [ tested for numpy version 1.14.5]  \n```\nTo activate the bar chart drawing module in code, please uncomment following sections in the ostrfpd.py source code.\ni.\tThe function block for  \u201cdef motif_chart(lst):\u201d \nii.\t\u201cmotif_chart(retval) if retval != [] else None\u201d in [__name__ == \"__main__\"]\niii.\t\u201cmotif_chart(retval) if retval != [] else None\u201d in [ def GUI_module(self):   ]\nNote: We do NOT recommend to compile the OSTRFPD to obtain standalone binaries if this Chart drawing function is used."
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "OSTRFPD COMMAND LINE INTERFACE (CLI) MODE",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "The CLI provides a full-fledge control over OSTRFPD operation. CLI interface allows OSTRFPD to be used as plugin for batch operation by other software. However, users should be careful during arguments or parameter input as these are case sensitive.\n\nArguments can be in any order but should avoid supplying conflicting or repeated arguments. Unlike the GUI mode, there is no auto-range or auto-correction and other error handling modules in CLI mode. Thus, users must be strictly follow guidelines and use parameters accordingly.\n\nSince GUI mode has almost full-fledge features in comparison to CLI mode, whenever possible we highly recommend to use GUI mode. \n "
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CLI COMMAND SYNTAX AND ARGUMENTS:",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "A list of arguments and their description is given below:-\n\nThe \"--help\" arguments will give a standard python help for all command syntax and associated description. Except for the python default argument \u201c--help\", all of the OSTRFPD CLI arguments beings with single negative (-) sign followed by argument name (i.e.: -argument) and the numeric values are represented by uppercase word of the argument. \n\nWhenever feasible, a short description and example of default CLI argument is shown in helper tool-tip message on status bar in GUI mode as: \u201c< -argument value >\u201d.    \n\nUsage: ostrfpd.py [-h] [-input INPUT] [-output OUTPUT] [-unitmax UNITMAX]\n                  [-unitmin UNITMIN] [-min MIN] [-imperfect IMPERFECT]\n                  [-lflank LFLANK] [-rflank RFLANK]\n                  [-exclude {None,true,false}] [-imop IMOP] [-mop MOP]\n                  [-scan {None,dna,rna,protein}] [-mmp MMP]\n                  [-rcomp {None,true,false}] [-misa MISA] [-eng {true,false}]\n                  [-sshow {true,false}] [-fsc FSC] [-pfname PFNAME]\n                  [-fix {true,false}] [-primer {true,false}]\n                  [-std {None,true,false}] [-dict DICT] [-fasta {true,false}]\n                  [-sdout {true,false}] [-gap GAP] [-sim SIM]\n                  [-stats {true,false}] [-report {true,false}]\n                  [-align {None,true,false}] [-autoexit {true,false}]\n                  [-ltag LTAG] [-rtag RTAG] [-imalign {None,true,false}]\n                  [-gui {None,true,false}] [-prng PRNG] [-posz POSZ]\n                  [-pmisz PMISZ] [-pmxsz PMXSZ] [-potm POTM] [-pmitm PMITM]\n                  [-pmxtm PMXTM] [-ptmdiff PTMDIFF] [-pogc POGC]\n                  [-pmigc PMIGC] [-pmxgc PMXGC] [-pmpoly PMPOLY] [-v V]\n\nDescription of each arguments:\n\n-h, --help \t            Shows help message and exits the program. \n\n -input INPUT    \t   \tFull pathname of input file (i.e. source FASTA file). If not supplied, the \"input.fasta\" file will be searched by default. Single, multi-FASTA and gunzip-compressed (.gz) FASTA are supported for direct scan without unzipping.\n\n -output OUTPUT     \t\tFull pathname of output result file. If not supplied, the <source filename + \"_res.txt\"> will be used as default output report file. The default output file is tab-delimited plain text file containing multiple parameters (e.g.: unit motif, repeat number, start stop position, flanking sequences). The output file can also be configured to contain built information and general motif statistics and categorization. \n\tNote: the file can be imported in Microsoft excel by changing the file extension to .xls for further processing.\n\n-primer {true,false}\t\tSets the flag to make primer using Primer3. Default value is false.\n  \t\n  -pfname PFNAME  \t    \tFull pathname of primer result output file to be saved. If not supplied, by default the output name will be used as [source filename + \u2018_prm.txt\u2019].The output is a tad-delimited plain text file. The primer output file will contain Sequence IDs of primer derived from the original sequences from which the primers were designed. In addition to left (forward) and right (reverse) primers, the corresponding standardized unit motifs, motif copy number, Tm and complete sequence (Left flanking+ microsatellite + right flanking) will be tabulated in the primer result file.\nNote: the file can be imported in Microsoft excel by changing the file extension to .xls for further processing.\n\n-scan {None, dna, rna, protein}\t\t\tSets the expected source sequence type to DNA, RNA, or PROTEIN. Default   value is set to dna.\n\n-unitmax UNITMAX \t  Input type: positive integer. Sets the maximum unit motif length to be searched. If used with \u2018-min\u2019 argument only MIN single fixed unit will be scanned. In Fast (default) search mode, the maximum values for DNA,RNA and Amino acid unit motifs are 10, 10 and 3 bp|aa respectively.In Accurate search mode, the maximum values for DNA, RNA and Amino acid unit motifs are 6, 6 and 3 bp|aa respectively.In Dictionary-based search mode, the maximum values for DNA, RNA and Amino acid unit motifs is 30 bp|aa.\n \n-unitmin UNITMIN \t   Input type: positive integer. This option sets the minimum unit motif length to be searched. Default values is 1. The UNITMIN can range from 1 to UNITMAX.If UNITMIN and UNITMAX are same, then single fixed length unit motif will be search. Use of \u2018-fix true\u2019 argument will overwrite the \u2018-unitmin UNITMIN\u2019 setting and forcefully set the UNITMIN = UNITMAX (i.e. single fixed unit motif only). \n\n-min MIN    \t         Input type: Positive integer. Sets the minimum repeats (copy number) threshold for selection of tandemly repeated sequences. This option will overwrite MISA-formatted minimum repeat settings (if present). By default the MIN value is 0 (i.e. OFF). \n\n-fix {true,false}         Sets a single fixed minimum repeats (copy number) for all unit motifs. This option will overwrite MISA settings (if present). Default value is false.\n\n-misa MISA           MISA-formatted number series to input different minimum repeat number for different motif length. [e.g: -misa 14,7,5,4,4 for minimum repeat number of microsatellites with unit motif length of 1,2,3,4 and 5, respectively]. Note that the minimum repeat values for misa should be supplied as \u20181,2,3,...,UNITMAX-1,UNITMAX\u2019 even if minimum unit motif length (UNITMIN)>1. The misa is automatically set as NULL if \u2018-min\u2019 > 0. Default value of misa string for DNA or RNA is \u201914,7,5,4,4,4\u2019 and Protein is \u20187,5,3,3\u2019, respectively. Whenever possible do avoid using \u2018-misa\u2019 and \u2018-min\u2019 arguments together to make syntax clear for operation.\n\n-lflank LFLANK       Input type: Positive integer. Extracts the left flanking sequence. This option auto-truncates the flanking sequence region if the left side sequence is smaller than supplied length (bp | aa) of flanking sequence. Default value is 85.\n\n-rflank RFLANK       Input type: Positive integer. Extracts the right flanking sequence. This option Auto- truncates the flanking sequence region if the right side sequence is smaller than supplied length (bp | aa) of flanking sequence. Default value is 85.\n\n-fsc FSC              Used as positive integers in the format \u2018m,n\u2019 (Typical use: \u2018-fsc 1,5\u2019 or \u2018-fsc 1,6\u2019). Default status is OFF or None. Filters out the microsatellites if a minimum of 'm' unit motif length tandem repeat of minimum 'n' repeat number (copy number) is found in Left or Right flanking sequence. Note: The option is useful for removing microsatellites from results whose low-numbered repeats may cause problem in primer design. \n\n-eng {true,false}         Sets the unit motif sequence generator engine type for accurate fast or accurate search. Default value is \u2018false\u2019 for fast but less efficient motif pattern search. If set \u2018true\u2019 then uses slow yet accurate engine.Fast engine is recommend to use if required unit motif length \u226410 for nucleic acids and \u22643 for proteins.Accurate engine is recommend to use if required unit motif length \u22646 for nucleic acids and \u22643 for proteins. \n\n-std {None,true,false}  Standardizes the unit motif (seed) name for display and report in either             Partial:[cyclic equivalent motifs] or Full: [reverse complement + cyclic equivalents ]. Default is set to Full standardization. See citation paper for details. General statistics results for motif characterization will also be formatted based on the type of motif standardization. For Protein sequence, as there are no complement strands, only partial standardization is utilized for amino acid unit motif characterization. \n\n-imperfect IMPERFECT\n                     Maximum distance (aa|bp) within which the mismatch (indel) containing tandem repeats but with same unit motif (seed) will be combined as single imperfect repeat. The value for argument \u2018\u2013imperfect\u2019 > 0, automatically turns ON search for imperfect repeats as associated default score values [i.e. \u2013imop, -mop, -mmp]\n\n-exclude {None, true, false}\n                      Restricted or Strict mode. Ignores non-seed (aa|bp) containing imperfect microsatellites even if the non-seed mismatch occurred within pre-declared imperfection range. Default value is None or false.\n\n-imop IMOP         Input type: positive integer. Penalty score for the first non-seed mismatch occurrence (added only once for an imperfect microsatellite independently on top of \u2018-mop\u2019 and \u2018-mss\u2019 parameter values). Default value is 3 and only applied if value for \u2018-imperfect\u2019 > 0 (i.e. IMPERFECT mode is set ON).\n\n-mop MOP            Input type: positive integer. Penalty score which is applied only once for the first (starting mismatch) occurrence to a given imperfect microsatellite. Default value is 2 only applied if value for \u2018-imperfect\u2019 > 0 (i.e. IMPERFECT mode is set ON).\n\n\n-mmp MMP          Input type: positive integer. Set the penalty for each mismatch (seed or non-seed type). It is added on top of mismatch starting penalties supplied by '-impo' and/or '-mop' if present. Default value is 2 and only applied if value for \u2018-imperfect\u2019 > 0 (i.e. IMPERFECT mode is set ON).\n\n-rcomp {None,true,false}\n                       Attaches the reverse complement sequence for DNA or RNA repeats including flanking sequence. Default value is None or false.\n\n-sdout {true,false}      Sets the standard result display flag for console or terminal. If true, displays each identified repeat result on console or terminal screen. If set false, only the Sequence IDs being search along with cumulative frequency (C.Freq | total | ) of identified repeats and primer designed (\uf0e0 Total primers designed) will be shown. Has no effect on output result file. If False, Default value is false.\n\n-sshow {true,false}       Sets the display output ON/OFF for the scoring matrix on console screen during scan for each tandem repeats identified. Has no effect on output result file. Default value is false. This option is forced turn OFF if \u2018-sdout\u2019 is false.\n\n  \n-dict DICT           [Usage: -dict filename]. Dictionary file is a plain text file contaning list of unit motifs of same type molecules (DNA, RNA, or amino acids) each separated by new line. Dictionary file is used to exclusively search custom user-supplied unit motif sequences. If used, only the unit motifs listed in the dictionary file (e.g. dict_dna.txt) will be searched for a single fixed (default: -fix true) length (default: -unit 8) unit motifs of maximum upto 30 bp and fixed minimum repeat number (default: -min 4). This mode [-dict] is expected to be used together with [-unit, -fix and -min] parameters.\n\t\nExtended Information for dictionary mode special usage: During runtime, all duplicates or equivalent (cyclic as well as complementary) motifs from supplied dictionary file will be filtered out and only unique standardized motifs will be used for searching. This mode may also be used to roughly estimate density of certain oligonucleotides (14-30 bp) or signaling peptides (14-30 aa). In case of oligonucleotide (e.g.: transcription factor binding sequence) or special short peptide sequences (e.g.: signaling peptide), a fixed minimum repeat value of 1 (i.e. \u2018\u2013min 1\u2019) may be used to roughly quantify their genome- or proteome-wide occurrence or densities. However, the feature is experimental and future improvements will be done accordingly. We recommend using GUI mode for easy operation of this feature.\n\n-align {None,true,false}\n                      Output the report file in alignment form (not applicable for FASTA or Custom format). \n  \n-fasta {true,false}       Sets the output result to FASTA formatted file. File description, motif statistics or built headers is NOT available for this Mode. If output filename is not supplied source filename + \u2018_res.txt\u2019 will we written as default output. Default values if false.\n-imalign {None,true,false}\n                       Make the alignment output file only contain imperfect alignment results after satisfying all other applicable conditions. The alignment option will be automatically activated. Default value is None or false.\n\n\n\n  -gap GAP          Input type: Positive integer.  Sets minimum gaps ( aa | bp ) between two consecutive repeat motifs. Please note that all consecutive repeats identified within the range will be discarded even if it belongs to same motif type. Default value is zero. The default value is 0.\n\n  -sim SIM            Input type: positive integer. Sets the minimum similarity threshold value (in percentage, e.g: -sim 50 for 50%) for the results to be accepted on top of other selection criteria supplied. Similarity basically refers to percentage of complete unit motifs present in the imperfect repeat sequence compared to its near equivalent perfect repeat. All perfect repeats have similarity value of 100% (See citation paper for details). Default value is 50.\n  \n  -stats {true,false}     Displays and append basic statistics of the results to output file (option not      applicable for FASTA output)\n\n  -report {true,false}   Appends Built header on top and Basic statistics report at the end of the output file (not applicable for FASTA output)\n\n  -autoexit {true,false}\n                    Sets auto exit flag. If true, auto exits after completion of task or pauses the console screen if false (applicable mainly for windows system GUI launcher). Default value is false.\n\n  -ltag LTAG          Attaches the left tag (e.g: 6FAM-) for the left primer generated by Primer3. Typical use (\u2018-ltag 6FAM-\u2019). Default value is None.\n\n  -rtag RTAG          Attach the right tag (e.g: gtgtctt-) for the right primer generated by Primer3. Typical use (\u2018-rtag gtgtctt-\u2019). Default value is None.\n\n  -gui {None,true,false}\n                       Open the OSTFRPD in GUI interface to input the configuration parameters. Using this option will OVERWRITE all other CLI arguments supplied and launches OSTRFPD is fresh default GUI mode. Default value is false.\n\n  -prng PRNG         Input type: String. Used to set min-max (e.g: 150-300), the minimum and maximum range (in bp) of the output primers product (amplicon size). Default value is 150-300.\n\n  -posz POSZ           Input type: positive integer. Used to set the optimum primer length (in Bp). Default value is 20.\n\n  -pmisz PMISZ         Input type: positive integer. Used to set the minimum primer length (in Bp).     Default value is 17.\n\n  -pmxsz PMXSZ        Input type: positive integer. Used to set the maximum primer length (in Bp). Default value is 26.\n\n  -potm POTM          Input type: positive integer. Used to set the optimum primer Tm (\u25e6C). Default value is 60.\n\n  -pmitm PMITM       Input type: positive integer. Used to set the minimum primer Tm (\u25e6C). Default value is 58.\n\n  -pmxtm PMXTM      Input type: positive integer. Used to set the maximum primer Tm (\u25e6C). Default value is 63.\n\n  -ptmdiff PTMDIFF    Input type: positive integer. Used to set the maximum primer Tm (\u25e6C) difference. Default value is 6.\n\n  -pogc POGC          Input type: positive integer. Used to set the optimum GC content (given in percentage). Default value is 55.\n\n  -pmigc PMIGC        Input type: positive integer. Used to set the minimum GC content (given in percentage). Default value is 20.\n\n  -pmxgc PMXGC       Input type: positive integer. Used to set the maximum GC content. Default value is 80.\n\n  -pmpoly PMPOLY     Input type: positive integer. Used to set the maximum Poly-X's in primer. Default value is 3.\n\n  -v V          \tShows the current version information and basic information regarding the authors, information for citations, and software repository for OSTRFPD. (This section will be finalized upon manuscript acceptance)\n\n =================================================================\n\nDr. Vivek Bhakta Mathema  \n\n(Source code maintainer) \nPlease feel free to get in touch with comments, suggestions and any form of queries. Your feedback will help us improve OSTRFPD and assist researchers to achieve their goals.\nBest wishes.\n\n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-08-21T06:17:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-14T20:06:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OSTRFPD: Multifunctional tool for genome-wide short tandem repeat analysis for DNA, transcripts and amino acid sequences with integrated primer designer"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9793718279883439,
      "result": {
        "original_header": "OSTRFPD v0.01",
        "type": "Text_excerpt",
        "value": "A user friendly toolkit to identify short tandem repeats in DNA, RNA and amino acid sequences with integrated option to design microsatellite-targeted primers. \nThis document consists of supplementary information including installation manual, command syntax and special extended information for OSTRFPD. The main artilce associated with the software is entitled:\n     \u201cOSTRFPD: Multifunctional tool for genome-wide short tandem repeat analysis for DNA,       transcripts and amino acid sequences with integrated primer designer\u201d \n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9680885825810511,
      "result": {
        "original_header": "OVERVIEW",
        "type": "Text_excerpt",
        "value": "OSTRFPD is a versatile, platform independent open source tool written in python that enables identification and analysis of genome-wide short tandem repeats (STRs) in nucleic acids (DNA and RNA) and protein sequences supplied as FASTA formatted files. OSTRFPD is designed to run with full-features in both command line interface (CLI) or graphical user interface (GUI) mode based on users\u2019 requirement. OSTRFPD can detect both perfect and imperfect repeats of low complexity with customizable scores. The software has built-in architecture to simultaneously refine selection of flanking regions in DNA and automatically generate microsatellite-targeted primers implementing Primer3 platform as a single step integrated operation. The software has built-in fast and accurate motif generator engines and additional option to use dictionary mode (optimized for searching longer repeats). Dictionary file containing common deoxynucleotide and amino acid motifs observed in Plasmodium species has been bundled together with the software. Completion of each search generates result along with general statistics containing motif categorization, repeat frequencies, densities, coverage, %GC (both source and microsatellites) content and simple text-based imperfect alignment visualization. The implementation of OSTRFPD is demonstrated using publicly available whole genome sequence of selected Plasmodium species.\nThe Software and source code is freely available at: https://github.com/vivekmathema/OSTRFPD\n```\nCitation: Mathema VB, Dondorp AM, Imwong M (2019) OSTRFPD: Multifunctional tool for genome-wide short tandem repeat analysis for DNA, transcripts and amino acid sequences with integrated primer designer. Evolutionary Bioinformatics.DOI: 10.1177/1176934319843130\n``` \n**Core architecture of OSTRFPD** \n**Screenshot of the GUI mode in OSTRFPD** \n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9980615349477672,
      "result": {
        "original_header": "PREFACE",
        "type": "Text_excerpt",
        "value": "Although thorough attention has been given during design and development of OSTRFPD, current version of the software may still contain some minor bugs and compatibility issues. This effect is common to early stages of several other software that are released and distributed. However, open source nature of this software enables it to be corrected, adopted and further optimized by the global community. We will be highly encouraged for future upgrades and further contribution based on positive feedbacks from our users. \n \n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9915477400850788,
      "result": {
        "original_header": "IMPORTANT NOTICE:",
        "type": "Text_excerpt",
        "value": "\u2022\tWE RECOMMEND USING WINDOWS VERSION OF THE PYTHON SOURCE CODE AND PRE-COMPILED BINARIES FOR TESTING. SINCE LINUX SYSTEMS ARE HIGHLY CUSTOMIZED AND PRE-BUILT BINARIES OF OSTRFPD AND PRIMER_CORE MAY NOT WORK PROPERLY LEADING TO MALFUNCTIONING OF THE SOFTWARE.\n\u2022\tFOR PROPER VIEW OF TEXT-BASED ALIGNMENT VIEW, WE REQUEST TO USE THE FONT \"CONSOLAS\" IN TEXT VIEWER LIKE \"NOTEPAD\". IF NOT AVAILABLE, THE RECOMMENDED FONT CAN BE FREELY DOWNLOADED FROM THE LINK: https://www.wfonts.com/font/consolas (NORMALLY INSTALLED BY DEFAULT IN MOST OPERATING SYSTEMS AND CAN BE CHOSEN UNDER FONTS OPTION). \n \n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "DOWNLOAD LINKS FOR FULL SOURCE CODE AND PRE-COMPILED BINARIES",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "\n1) WINDOWS PACKAGE (full source code + pre-compiled binaries + example fasta files):  [release version]\nLink: https://drive.google.com/file/d/1GhInYTiBIOLkRmUBL3HZSSGLce0L_NQV/view?usp=sharing\n\n2) LINUX PACKAGE (full source code + pre-compiled binaries + example fasta files):    [release version]\nLink: https://drive.google.com/file/d/1qpTsiR07Uru5S_YcKAI6voPxbYKeC-5W/view?usp=sharing\n\n\n======================================="
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "EXECUTION",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "From here onwards, we assume that users have downloaded and extracted all content into 'OSTRFPD' folder which should at least contain 'ostrfpd.py', 'primer3_core' (optional plugin for primer creation), binaries (optional'ostrfpd.exe' for Windows or Linux 'ostrfpd' binary for Linux) and dictionary files (optional) for the software to work properly.\n\n```\n##TYPICAL STRUCTURE OF THE OSTRFPD FOLDER\n\nOSTRFPD_v0.01     \n|\n|-----ostrfpd.py                     \n|-----gui_interface.py\n|-----ostrfpd.exe          [ Note: \u2018ostrfpd\u2019 for LINUX      ]\n|-----primer3_core.exe     [ Note: \u2018primer3_core\u2019 for LINUX ]\n|-----run_ostrfpd_bin_gui.bat   \n|-----run_ostrfpd_src_gui.bat\n|-----dict_dna.txt\n|-----dict_protein.txt\n|-----input.fasta\n|-----requirments.txt\n|-----run_info_readme.txt\n|-----LICENCE\n|-----rna_seq             (Note: subfolder)\n     |-----ribosome1_seq_URS0000857690.fasta\n     |-----ribosome2_seq_URS0000A6B25D.fasta\n\n```\n\nOSTRFPD can be run in either user-friendly GUI mode or command line interface (CLI). \nPlease Note that all parameters or arguments are case sensitive.\nThe GUI mode can be initialized by simple argument \"-gui true\".[ i.e. python3 ostrfpd.py \u2013gui true]\n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "IN WINDOWS:",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "Open windows console (can be initiated by typing cmd.exe in start box) and type the commands (case sensitive).\n```\n[from source code]\npython3 ostrfpd.py -gui true      \n\n[from binaries]            \nostrfpd.exe \u2013gui true \n\n```\nThis should launch OSTRFPD in user-friendly GUI mode containing built-in helper tooltip text, self-explanatory buttons and basic level of error handling interface.\n\nSame steps can be achieved by just running the 'run_ostrfpd_binary.bat' or 'run_ostrfpd_source.bat', which will run the supplied binary (.exe) or source (.py) directly in GUI mode without the requirement to enter console mode.\n\nThe OSTRFPD is supplied with untampered primer3_binaries (version 1.1.4) for windows (primer3_core.exe) which can also be independently downloaded and/or compiled from the official source (https://sourceforge.net/projects/primer3/files/primer3/1.1.4/) following the creators' instructions.\n\nIMPORTANT: Please note that both OSTRFPD binaries (and source) and primer3_core.exe should be in same location even when using pre-compiled ostrfpd.exe (Refer to: Typical Structure of the OSTRFPD Folder).\n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "IN LINUX",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "Open Linux Terminal and type the command (Warning! All parameters or arguments are case sensitive).\n\n```\n$ python3 ostrfpd.py -gui true\n```\n\nThis should launch OSTRFPD in user-friendly GUI mode containing built-in helper tooltip text, self-explanatory buttons and basic level of error handling interface.\n\n\nThe OSTRFPD is supplied with non-tampered pre-compiled Primer3 (ver 1.1.4) binaries named as 'primer3_core' for Linux which can also be independently downloaded and compiled from the source (https://sourceforge.net/projects/primer3/files/primer3/1.1.4/) following the creators' instruction.\n\nWe recommend the Linux users to compile primer3_core from source. However, OSTRFPD is also bundled with pre-compiled 'primer3_core' binary, just in case for ease of use. \n\nIMPORTANT: Please note that both OSTRFPD binaries (and source file 'ostrfpd.py') and 'primer3_core' binary should be in same location (Refer to: Typical Structure of the OSTRFPD Folder).\n\nTypically for Linux users (here, we used Ubuntu 16.04) the system PATH variable should be set to the location from where 'primer3_core',  'ostrfpd.py' or equivalent binary is expected to be run. A typical example is given below. In terminal with likely use of 'sudo previliges' type your path where 'ostrfpd.py' files are located.\n\n```\nexport PATH=/home/user/Documents/OSTRFPD/:$PATH\n\n```\n\nOptionally, if users choose to compile the ostrfpd.py from source using LINUX version of pyinstaller (Refer to pyinstaller installation for Windows) and then use the binary, please follow the command below from OSTRFPD directory to generate LINUX binaries. \n\n```\n$ pyinstaller -D -F -n ostrfpd --onefile -c \"ostrfpd.py\"\n```\n\nThis should create linux compatible binary 'ostrfpd' in /OSTRFPD/dist folder, which can then be copied to the base OSTRFPD folder containing 'primer3_core' binary for use. \n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BARCHART DISPLAY FOR THE CATAGORIZED MOTIF FREQUENCIES",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "This ENTIRELY OPTIONAL segment of the code allows interested advance users to directly generate bar charts of the motif frequencies for visualization using additional \u2018matplot\u2019 and \u2018numpy\u2019 library of the python.\nMost distribution of Matplotlib and numpy should be compatible with this code. Supplied installation version for dependencies should work file:\n```\npip3 install matplotlib==2.2.2 [tested for matplot version 2.2.2]\npip3 install numpy==1.14.5  [ tested for numpy version 1.14.5]  \n```\nTo activate the bar chart drawing module in code, please uncomment following sections in the ostrfpd.py source code.\ni.\tThe function block for  \u201cdef motif_chart(lst):\u201d \nii.\t\u201cmotif_chart(retval) if retval != [] else None\u201d in [__name__ == \"__main__\"]\niii.\t\u201cmotif_chart(retval) if retval != [] else None\u201d in [ def GUI_module(self):   ]\nNote: We do NOT recommend to compile the OSTRFPD to obtain standalone binaries if this Chart drawing function is used."
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "OSTRFPD COMMAND LINE INTERFACE (CLI) MODE",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "The CLI provides a full-fledge control over OSTRFPD operation. CLI interface allows OSTRFPD to be used as plugin for batch operation by other software. However, users should be careful during arguments or parameter input as these are case sensitive.\n\nArguments can be in any order but should avoid supplying conflicting or repeated arguments. Unlike the GUI mode, there is no auto-range or auto-correction and other error handling modules in CLI mode. Thus, users must be strictly follow guidelines and use parameters accordingly.\n\nSince GUI mode has almost full-fledge features in comparison to CLI mode, whenever possible we highly recommend to use GUI mode. \n "
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CLI COMMAND SYNTAX AND ARGUMENTS:",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "A list of arguments and their description is given below:-\n\nThe \"--help\" arguments will give a standard python help for all command syntax and associated description. Except for the python default argument \u201c--help\", all of the OSTRFPD CLI arguments beings with single negative (-) sign followed by argument name (i.e.: -argument) and the numeric values are represented by uppercase word of the argument. \n\nWhenever feasible, a short description and example of default CLI argument is shown in helper tool-tip message on status bar in GUI mode as: \u201c< -argument value >\u201d.    \n\nUsage: ostrfpd.py [-h] [-input INPUT] [-output OUTPUT] [-unitmax UNITMAX]\n                  [-unitmin UNITMIN] [-min MIN] [-imperfect IMPERFECT]\n                  [-lflank LFLANK] [-rflank RFLANK]\n                  [-exclude {None,true,false}] [-imop IMOP] [-mop MOP]\n                  [-scan {None,dna,rna,protein}] [-mmp MMP]\n                  [-rcomp {None,true,false}] [-misa MISA] [-eng {true,false}]\n                  [-sshow {true,false}] [-fsc FSC] [-pfname PFNAME]\n                  [-fix {true,false}] [-primer {true,false}]\n                  [-std {None,true,false}] [-dict DICT] [-fasta {true,false}]\n                  [-sdout {true,false}] [-gap GAP] [-sim SIM]\n                  [-stats {true,false}] [-report {true,false}]\n                  [-align {None,true,false}] [-autoexit {true,false}]\n                  [-ltag LTAG] [-rtag RTAG] [-imalign {None,true,false}]\n                  [-gui {None,true,false}] [-prng PRNG] [-posz POSZ]\n                  [-pmisz PMISZ] [-pmxsz PMXSZ] [-potm POTM] [-pmitm PMITM]\n                  [-pmxtm PMXTM] [-ptmdiff PTMDIFF] [-pogc POGC]\n                  [-pmigc PMIGC] [-pmxgc PMXGC] [-pmpoly PMPOLY] [-v V]\n\nDescription of each arguments:\n\n-h, --help \t            Shows help message and exits the program. \n\n -input INPUT    \t   \tFull pathname of input file (i.e. source FASTA file). If not supplied, the \"input.fasta\" file will be searched by default. Single, multi-FASTA and gunzip-compressed (.gz) FASTA are supported for direct scan without unzipping.\n\n -output OUTPUT     \t\tFull pathname of output result file. If not supplied, the <source filename + \"_res.txt\"> will be used as default output report file. The default output file is tab-delimited plain text file containing multiple parameters (e.g.: unit motif, repeat number, start stop position, flanking sequences). The output file can also be configured to contain built information and general motif statistics and categorization. \n\tNote: the file can be imported in Microsoft excel by changing the file extension to .xls for further processing.\n\n-primer {true,false}\t\tSets the flag to make primer using Primer3. Default value is false.\n  \t\n  -pfname PFNAME  \t    \tFull pathname of primer result output file to be saved. If not supplied, by default the output name will be used as [source filename + \u2018_prm.txt\u2019].The output is a tad-delimited plain text file. The primer output file will contain Sequence IDs of primer derived from the original sequences from which the primers were designed. In addition to left (forward) and right (reverse) primers, the corresponding standardized unit motifs, motif copy number, Tm and complete sequence (Left flanking+ microsatellite + right flanking) will be tabulated in the primer result file.\nNote: the file can be imported in Microsoft excel by changing the file extension to .xls for further processing.\n\n-scan {None, dna, rna, protein}\t\t\tSets the expected source sequence type to DNA, RNA, or PROTEIN. Default   value is set to dna.\n\n-unitmax UNITMAX \t  Input type: positive integer. Sets the maximum unit motif length to be searched. If used with \u2018-min\u2019 argument only MIN single fixed unit will be scanned. In Fast (default) search mode, the maximum values for DNA,RNA and Amino acid unit motifs are 10, 10 and 3 bp|aa respectively.In Accurate search mode, the maximum values for DNA, RNA and Amino acid unit motifs are 6, 6 and 3 bp|aa respectively.In Dictionary-based search mode, the maximum values for DNA, RNA and Amino acid unit motifs is 30 bp|aa.\n \n-unitmin UNITMIN \t   Input type: positive integer. This option sets the minimum unit motif length to be searched. Default values is 1. The UNITMIN can range from 1 to UNITMAX.If UNITMIN and UNITMAX are same, then single fixed length unit motif will be search. Use of \u2018-fix true\u2019 argument will overwrite the \u2018-unitmin UNITMIN\u2019 setting and forcefully set the UNITMIN = UNITMAX (i.e. single fixed unit motif only). \n\n-min MIN    \t         Input type: Positive integer. Sets the minimum repeats (copy number) threshold for selection of tandemly repeated sequences. This option will overwrite MISA-formatted minimum repeat settings (if present). By default the MIN value is 0 (i.e. OFF). \n\n-fix {true,false}         Sets a single fixed minimum repeats (copy number) for all unit motifs. This option will overwrite MISA settings (if present). Default value is false.\n\n-misa MISA           MISA-formatted number series to input different minimum repeat number for different motif length. [e.g: -misa 14,7,5,4,4 for minimum repeat number of microsatellites with unit motif length of 1,2,3,4 and 5, respectively]. Note that the minimum repeat values for misa should be supplied as \u20181,2,3,...,UNITMAX-1,UNITMAX\u2019 even if minimum unit motif length (UNITMIN)>1. The misa is automatically set as NULL if \u2018-min\u2019 > 0. Default value of misa string for DNA or RNA is \u201914,7,5,4,4,4\u2019 and Protein is \u20187,5,3,3\u2019, respectively. Whenever possible do avoid using \u2018-misa\u2019 and \u2018-min\u2019 arguments together to make syntax clear for operation.\n\n-lflank LFLANK       Input type: Positive integer. Extracts the left flanking sequence. This option auto-truncates the flanking sequence region if the left side sequence is smaller than supplied length (bp | aa) of flanking sequence. Default value is 85.\n\n-rflank RFLANK       Input type: Positive integer. Extracts the right flanking sequence. This option Auto- truncates the flanking sequence region if the right side sequence is smaller than supplied length (bp | aa) of flanking sequence. Default value is 85.\n\n-fsc FSC              Used as positive integers in the format \u2018m,n\u2019 (Typical use: \u2018-fsc 1,5\u2019 or \u2018-fsc 1,6\u2019). Default status is OFF or None. Filters out the microsatellites if a minimum of 'm' unit motif length tandem repeat of minimum 'n' repeat number (copy number) is found in Left or Right flanking sequence. Note: The option is useful for removing microsatellites from results whose low-numbered repeats may cause problem in primer design. \n\n-eng {true,false}         Sets the unit motif sequence generator engine type for accurate fast or accurate search. Default value is \u2018false\u2019 for fast but less efficient motif pattern search. If set \u2018true\u2019 then uses slow yet accurate engine.Fast engine is recommend to use if required unit motif length \u226410 for nucleic acids and \u22643 for proteins.Accurate engine is recommend to use if required unit motif length \u22646 for nucleic acids and \u22643 for proteins. \n\n-std {None,true,false}  Standardizes the unit motif (seed) name for display and report in either             Partial:[cyclic equivalent motifs] or Full: [reverse complement + cyclic equivalents ]. Default is set to Full standardization. See citation paper for details. General statistics results for motif characterization will also be formatted based on the type of motif standardization. For Protein sequence, as there are no complement strands, only partial standardization is utilized for amino acid unit motif characterization. \n\n-imperfect IMPERFECT\n                     Maximum distance (aa|bp) within which the mismatch (indel) containing tandem repeats but with same unit motif (seed) will be combined as single imperfect repeat. The value for argument \u2018\u2013imperfect\u2019 > 0, automatically turns ON search for imperfect repeats as associated default score values [i.e. \u2013imop, -mop, -mmp]\n\n-exclude {None, true, false}\n                      Restricted or Strict mode. Ignores non-seed (aa|bp) containing imperfect microsatellites even if the non-seed mismatch occurred within pre-declared imperfection range. Default value is None or false.\n\n-imop IMOP         Input type: positive integer. Penalty score for the first non-seed mismatch occurrence (added only once for an imperfect microsatellite independently on top of \u2018-mop\u2019 and \u2018-mss\u2019 parameter values). Default value is 3 and only applied if value for \u2018-imperfect\u2019 > 0 (i.e. IMPERFECT mode is set ON).\n\n-mop MOP            Input type: positive integer. Penalty score which is applied only once for the first (starting mismatch) occurrence to a given imperfect microsatellite. Default value is 2 only applied if value for \u2018-imperfect\u2019 > 0 (i.e. IMPERFECT mode is set ON).\n\n\n-mmp MMP          Input type: positive integer. Set the penalty for each mismatch (seed or non-seed type). It is added on top of mismatch starting penalties supplied by '-impo' and/or '-mop' if present. Default value is 2 and only applied if value for \u2018-imperfect\u2019 > 0 (i.e. IMPERFECT mode is set ON).\n\n-rcomp {None,true,false}\n                       Attaches the reverse complement sequence for DNA or RNA repeats including flanking sequence. Default value is None or false.\n\n-sdout {true,false}      Sets the standard result display flag for console or terminal. If true, displays each identified repeat result on console or terminal screen. If set false, only the Sequence IDs being search along with cumulative frequency (C.Freq | total | ) of identified repeats and primer designed (\uf0e0 Total primers designed) will be shown. Has no effect on output result file. If False, Default value is false.\n\n-sshow {true,false}       Sets the display output ON/OFF for the scoring matrix on console screen during scan for each tandem repeats identified. Has no effect on output result file. Default value is false. This option is forced turn OFF if \u2018-sdout\u2019 is false.\n\n  \n-dict DICT           [Usage: -dict filename]. Dictionary file is a plain text file contaning list of unit motifs of same type molecules (DNA, RNA, or amino acids) each separated by new line. Dictionary file is used to exclusively search custom user-supplied unit motif sequences. If used, only the unit motifs listed in the dictionary file (e.g. dict_dna.txt) will be searched for a single fixed (default: -fix true) length (default: -unit 8) unit motifs of maximum upto 30 bp and fixed minimum repeat number (default: -min 4). This mode [-dict] is expected to be used together with [-unit, -fix and -min] parameters.\n\t\nExtended Information for dictionary mode special usage: During runtime, all duplicates or equivalent (cyclic as well as complementary) motifs from supplied dictionary file will be filtered out and only unique standardized motifs will be used for searching. This mode may also be used to roughly estimate density of certain oligonucleotides (14-30 bp) or signaling peptides (14-30 aa). In case of oligonucleotide (e.g.: transcription factor binding sequence) or special short peptide sequences (e.g.: signaling peptide), a fixed minimum repeat value of 1 (i.e. \u2018\u2013min 1\u2019) may be used to roughly quantify their genome- or proteome-wide occurrence or densities. However, the feature is experimental and future improvements will be done accordingly. We recommend using GUI mode for easy operation of this feature.\n\n-align {None,true,false}\n                      Output the report file in alignment form (not applicable for FASTA or Custom format). \n  \n-fasta {true,false}       Sets the output result to FASTA formatted file. File description, motif statistics or built headers is NOT available for this Mode. If output filename is not supplied source filename + \u2018_res.txt\u2019 will we written as default output. Default values if false.\n-imalign {None,true,false}\n                       Make the alignment output file only contain imperfect alignment results after satisfying all other applicable conditions. The alignment option will be automatically activated. Default value is None or false.\n\n\n\n  -gap GAP          Input type: Positive integer.  Sets minimum gaps ( aa | bp ) between two consecutive repeat motifs. Please note that all consecutive repeats identified within the range will be discarded even if it belongs to same motif type. Default value is zero. The default value is 0.\n\n  -sim SIM            Input type: positive integer. Sets the minimum similarity threshold value (in percentage, e.g: -sim 50 for 50%) for the results to be accepted on top of other selection criteria supplied. Similarity basically refers to percentage of complete unit motifs present in the imperfect repeat sequence compared to its near equivalent perfect repeat. All perfect repeats have similarity value of 100% (See citation paper for details). Default value is 50.\n  \n  -stats {true,false}     Displays and append basic statistics of the results to output file (option not      applicable for FASTA output)\n\n  -report {true,false}   Appends Built header on top and Basic statistics report at the end of the output file (not applicable for FASTA output)\n\n  -autoexit {true,false}\n                    Sets auto exit flag. If true, auto exits after completion of task or pauses the console screen if false (applicable mainly for windows system GUI launcher). Default value is false.\n\n  -ltag LTAG          Attaches the left tag (e.g: 6FAM-) for the left primer generated by Primer3. Typical use (\u2018-ltag 6FAM-\u2019). Default value is None.\n\n  -rtag RTAG          Attach the right tag (e.g: gtgtctt-) for the right primer generated by Primer3. Typical use (\u2018-rtag gtgtctt-\u2019). Default value is None.\n\n  -gui {None,true,false}\n                       Open the OSTFRPD in GUI interface to input the configuration parameters. Using this option will OVERWRITE all other CLI arguments supplied and launches OSTRFPD is fresh default GUI mode. Default value is false.\n\n  -prng PRNG         Input type: String. Used to set min-max (e.g: 150-300), the minimum and maximum range (in bp) of the output primers product (amplicon size). Default value is 150-300.\n\n  -posz POSZ           Input type: positive integer. Used to set the optimum primer length (in Bp). Default value is 20.\n\n  -pmisz PMISZ         Input type: positive integer. Used to set the minimum primer length (in Bp).     Default value is 17.\n\n  -pmxsz PMXSZ        Input type: positive integer. Used to set the maximum primer length (in Bp). Default value is 26.\n\n  -potm POTM          Input type: positive integer. Used to set the optimum primer Tm (\u25e6C). Default value is 60.\n\n  -pmitm PMITM       Input type: positive integer. Used to set the minimum primer Tm (\u25e6C). Default value is 58.\n\n  -pmxtm PMXTM      Input type: positive integer. Used to set the maximum primer Tm (\u25e6C). Default value is 63.\n\n  -ptmdiff PTMDIFF    Input type: positive integer. Used to set the maximum primer Tm (\u25e6C) difference. Default value is 6.\n\n  -pogc POGC          Input type: positive integer. Used to set the optimum GC content (given in percentage). Default value is 55.\n\n  -pmigc PMIGC        Input type: positive integer. Used to set the minimum GC content (given in percentage). Default value is 20.\n\n  -pmxgc PMXGC       Input type: positive integer. Used to set the maximum GC content. Default value is 80.\n\n  -pmpoly PMPOLY     Input type: positive integer. Used to set the maximum Poly-X's in primer. Default value is 3.\n\n  -v V          \tShows the current version information and basic information regarding the authors, information for citations, and software repository for OSTRFPD. (This section will be finalized upon manuscript acceptance)\n\n =================================================================\n\nDr. Vivek Bhakta Mathema  \n\n(Source code maintainer) \nPlease feel free to get in touch with comments, suggestions and any form of queries. Your feedback will help us improve OSTRFPD and assist researchers to achieve their goals.\nBest wishes.\n\n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vivekmathema/OSTRFPD/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vivekmathema/OSTRFPD/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vivekmathema/OSTRFPD"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/install_dependencies.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master//images/Figure_1.jpg"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master//images/Figure_2.jpg"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master//images/Figure_3.jpg"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master//images/Figure_7.jpg"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "DESTRIBUTION, DEPENDENCIES AND INSTALLATIONS",
        "type": "Text_excerpt",
        "value": "The details of the software aims and architecture is described in the associated paper. We here focus on installation and command syntax.\n\n\nOSPTFPD is an open source software distributed under General Public License (GPL v 3). Apart from standard python modules, the software imports some functions from the dependencies under the \u2018Terms and Conditions\u2019 allowed under by the standard license.\n\nIn addition to Python (version 3.5 or above) the dependencies mentioned in 'requirements.txt' can be installed using standard 'pip' or \u2018pip3\u2019 installer for python.\n\nBoth source and binaries of OSTRFPD have been successfully tested in Windows 7, 10 and Linux Ubuntu 16.04 with correctly installed dependencies.\n\n======================================"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "INSTALLATION",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "```\nInstall Python3 from https://www.python.org/downloads/release/python-350\n```\n\nWhereby you should be able to download and install 32 or 64 bit version of Python 3.5. The 64 bit version is recommended\n\nDepending upon your python version use of \u2018pip\u2019 or \u2018pip3\u2019 should be fine to install necessary dependencies. Please follow 'upgrade pip' instruction if you need to upgrade your pip for latest version and compatibility issues.\n\n```\npip3 install PyQt5==5.9.1 \n```\nThis should result in installation of PyQt5 plugin required for GUI of OSTRFPD.\n\n```\npip3 install biopython==1.72 or pip3 install biopython version 1.72 \n```\nThis should result in installation of biopython and its sub-dependencies\n\nLikewise, installations of futures for python version syntax compatibility\n```  \npip3 install future==0.16.0\n```  \n\n(OPTIONAL AND EXPERIMENTAL) For windows\n\n```  \npip3 install pyinstaller==3.3.1\n\n```\n\nThis will install pyinstaller which can be used to generate standalone OSTRFPD binary from source for windows using following command in console.\n```  \npyinstaller ostrfpd.py --ONEFILE \n\n```\nThis should generate standalone 'ostrfpd.exe' binary in \u2018\\OSTRDPF\\dist\u2019 folder for windows. Warning! The compilation can only be possible if all system environmental variables and sub-dependencies are supported. May not work is some installations due to library version incompatibility (mostly PyQt5-related) of sub-dependencies during compilation for creating standalone binaries. In order to resolve the issue, a pre-compiled windows binary of OSTRFPD has been supplied along with the source code release.   \n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SETTING UP THE BINARIES FOR EXECUTION IN VIA LINUX TERMINAL.",
        "parent_header": [
          "\u2022   TO OVERCOME SIZE LIMITATION AND EASE OF DOWNLOAD, SOURCES AND BINARIES OF OSTRFPD IS SHARED IN GOOGLE DRIVE LINKS GIVEN BELOW:"
        ],
        "type": "Text_excerpt",
        "value": "Necessary sudo user privileges may have to be acquired depending upon system administrative settings.\n\nAfter compilation or to directly use the supplied pre-built binaries (both ostrfpd and primer3_core) the users may have to make these finary file executable in Linux using:\n```\nchmod +x app-name (e.g.: \u2018chmod +x ostrfpd\u2019 and \u2018chmod +x primer3_core\u2019) command and then execute the ostrfpd binary from terminal as:  \n\nterminal$ ./ostrfpd \n\n```\nOnce the binaries are ready for execution, similar to Windows, launch the OSTRFPD (for graphical interface) using:\n\n(i) From source\n\n```\n$ python3 ostrfpd.py -gui true \n```\n\n(ii) From supplied binary\n\n```\n$ ./ostrfpd -gui true\n```\n\nNote: Please refer to the '##TYPICAL STRUCTURE OF THE OSTRFPD FOLDER' for maintaining correct folder structure for running OSTRFPD.\n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8291075415302622,
      "result": {
        "original_header": "OSTRFPD v0.01",
        "type": "Text_excerpt",
        "value": "\n```\nPubmed Link to associated paper:  https://www.ncbi.nlm.nih.gov/pubmed/31040636\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999999964962911,
      "result": {
        "original_header": "IMPORTANT NOTICE:",
        "type": "Text_excerpt",
        "value": "\u2022\tWE RECOMMEND USING WINDOWS VERSION OF THE PYTHON SOURCE CODE AND PRE-COMPILED BINARIES FOR TESTING. SINCE LINUX SYSTEMS ARE HIGHLY CUSTOMIZED AND PRE-BUILT BINARIES OF OSTRFPD AND PRIMER_CORE MAY NOT WORK PROPERLY LEADING TO MALFUNCTIONING OF THE SOFTWARE.\n\u2022\tFOR PROPER VIEW OF TEXT-BASED ALIGNMENT VIEW, WE REQUEST TO USE THE FONT \"CONSOLAS\" IN TEXT VIEWER LIKE \"NOTEPAD\". IF NOT AVAILABLE, THE RECOMMENDED FONT CAN BE FREELY DOWNLOADED FROM THE LINK: https://www.wfonts.com/font/consolas (NORMALLY INSTALLED BY DEFAULT IN MOST OPERATING SYSTEMS AND CAN BE CHOSEN UNDER FONTS OPTION). \n \n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8856278322065159,
      "result": {
        "type": "Text_excerpt",
        "value": "(O)mni (S)hort (T)andem (R)epeat (F)inder & (P)rimer (D)esigner v0.01 \n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8779799401194488,
      "result": {
        "original_header": "OVERVIEW",
        "type": "Text_excerpt",
        "value": "<img src=\"/images/Figure_1.jpg\" alt=\"OSTRFPD Architecture\"/> \n<img src=\"/images/Figure_2.jpg\" alt=\"OSTRFPD GUI display\"/> \n<img src=\"/images/Figure_3.jpg\" alt=\"OSTRFPD console display\"/> \n<img src=\"/images/Figure_7.jpg\" alt=\"OSTRFPD Alignment output example\"/> \n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vivekmathema/OSTRFPD/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OSTRFPD"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "vivekmathema"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 183098,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 763,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 265,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "DESTRIBUTION, DEPENDENCIES AND INSTALLATIONS",
        "type": "Text_excerpt",
        "value": "The details of the software aims and architecture is described in the associated paper. We here focus on installation and command syntax.\n\n\nOSPTFPD is an open source software distributed under General Public License (GPL v 3). Apart from standard python modules, the software imports some functions from the dependencies under the \u2018Terms and Conditions\u2019 allowed under by the standard license.\n\nIn addition to Python (version 3.5 or above) the dependencies mentioned in 'requirements.txt' can be installed using standard 'pip' or \u2018pip3\u2019 installer for python.\n\nBoth source and binaries of OSTRFPD have been successfully tested in Windows 7, 10 and Linux Ubuntu 16.04 with correctly installed dependencies.\n\n======================================"
      },
      "source": "https://raw.githubusercontent.com/vivekmathema/OSTRFPD/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:44:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}