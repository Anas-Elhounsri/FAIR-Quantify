{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/immunogenomics/harmony"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-12T23:58:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-11-02T19:10:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fast, sensitive and accurate integration of single-cell data with Harmony"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9818412450149473,
      "result": {
        "original_header": "Harmony <img src=\"man/figures/logo.png\" width=\"181px\" align=\"right\" />",
        "type": "Text_excerpt",
        "value": "*Fast, sensitive and accurate integration of single-cell data with Harmony* \n"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.943215863165281,
      "result": {
        "original_header": "BLAS vs. OPENBLAS",
        "type": "Text_excerpt",
        "value": "R distributions can be bundled with different scientific computing libraries. This can drastically impact harmony's performance. Rstudio comes by default with BLAS. In contrast, conda distributions of R are bundled with OPENBLAS. Overall, our benchmarks show that **harmony+OPENBLAS is substantially faster compared harmony+BLAS**. Therefore users with large datasets will benefit using OPENBLAS.\n \n"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9784752333116391,
      "result": {
        "original_header": "Multithreading in OPENBLAS",
        "type": "Text_excerpt",
        "value": "One caveat is that OPENBLAS uses OPENMP to parallelize operations. By default, OPENBLAS will utilize all cores for these operations. While in theory this accelerates runtimes, in practice harmony is not optimized for multi-threaded performance and the unoptimized parallelization granularity may result in significantly slower run times and inefficient resource utilization (wasted CPU cycles). Therefore, by default harmony turns off multi-threading. However, very large datasets >1M may benefit from parallelization. This behavior can be controlled by the `ncores` parameter which expects a number threads which harmony will use for its math operation. Users are advised to increase gradually `ncores` and assess potential performance benefits. \n"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/immunogenomics/harmony/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 100
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/immunogenomics/harmony/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "immunogenomics/harmony"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Harmony "
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.1038/s41592-019-0619-0"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ci.appveyor.com/api/projects/status/github/immunogenomics/harmony?branch=master&amp;svg=true"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "To run Harmony, open R and install harmony from CRAN: \n\n```r\ninstall.packages(\"harmony\")\n```\n\nIf you'd like the latest development version, install from this github directly: \n\n```r\ndevtools::install_github(\"immunogenomics/harmony\", build_vignettes=TRUE)\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9286426393640013,
      "result": {
        "original_header": "BLAS vs. OPENBLAS",
        "type": "Text_excerpt",
        "value": "R distributions can be bundled with different scientific computing libraries. This can drastically impact harmony's performance. Rstudio comes by default with BLAS. In contrast, conda distributions of R are bundled with OPENBLAS. Overall, our benchmarks show that **harmony+OPENBLAS is substantially faster compared harmony+BLAS**. Therefore users with large datasets will benefit using OPENBLAS.\n \n"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/immunogenomics/harmony/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "algorithm, data-integration, r, scrna-seq"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/immunogenomics/harmony/master/man/figures/logo.png"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "harmony"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "immunogenomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 31885,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 18894,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 557,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ilyakorsunsky",
          "type": "User"
        },
        "date_created": "2020-02-19T18:59:12Z",
        "date_published": "2020-02-19T19:03:11Z",
        "html_url": "https://github.com/immunogenomics/harmony/releases/tag/0.1",
        "release_id": 23815806,
        "tag": "0.1",
        "tarball_url": "https://api.github.com/repos/immunogenomics/harmony/tarball/0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/immunogenomics/harmony/releases/23815806",
        "value": "https://api.github.com/repos/immunogenomics/harmony/releases/23815806",
        "zipball_url": "https://api.github.com/repos/immunogenomics/harmony/zipball/0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System requirements",
        "type": "Text_excerpt",
        "value": "Harmony has been tested on R versions >= 3.4. Please consult the DESCRIPTION file for more details on required R packages. Harmony has been tested on Linux, OS X, and Windows platforms.\n"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 03:45:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 525
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": " Harmony is designed to be user-friendly and supports some SingleCellExperiment and Seurat R analysis pipelines. Alternatively, it can be used in standalone mode.\n"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Standalone Mode",
        "parent_header": [
          "Usage",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "At minimum the following parameters need to be specified to achieve an integration. \n\n```r\nlibrary(harmony)\nmy_harmony_embeddings <- RunHarmony(my_pca_embeddings, meta_data, \"dataset\")\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Seurat Objects",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "By default, the harmony API works on Seurats PCA cell embeddings and corrects them. You can run Harmony within your Seurat workflow with `RunHarmony()`. Prior `RunHarmony()` the PCA cell embeddings need to be precomputed through Seurat's API. For downstream analyses, use the `harmony` embeddings instead of `pca`.\n\nFor example, the following snippet run Harmony and then calculates UMAP of the corrected input embeddings:\n\n```r\nseuratObj <- RunHarmony(seuratObj, \"dataset\")\nseuratObj <- RunUMAP(seuratObj, reduction = \"harmony\")\n```\n\nFor a more detailed overview of the `RunHarmony()` Seurat interface check, the [Seurat vignette](http://htmlpreview.github.io/?https://github.com/immunogenomics/harmony/blob/master/doc/Seurat.html)\n"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Harmony with two or more covariates",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Harmony can integrate over multiple covariates. To do this, specify a vector covariates to integrate. \n\n```r\nmy_harmony_embeddings <- RunHarmony(\n  my_pca_embeddings, meta_data, c(\"dataset\", \"donor\", \"batch_id\")\n)\n```\n\nDo the same with your Seurat object: \n\n```r\nseuratObject <- RunHarmony(seuratObject, c(\"dataset\", \"donor\", \"batch_id\"))\n```\n"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Advanced tutorial",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The examples above all return integrated PCA embeddings. We created a [detailed walkthrough](http://htmlpreview.github.io/?https://github.com/immunogenomics/harmony/blob/master/doc/detailedWalkthrough.html) that explores the internal data structures and mechanics of the Harmony algorithm.\n\n"
      },
      "source": "https://raw.githubusercontent.com/immunogenomics/harmony/master/README.md",
      "technique": "header_analysis"
    }
  ]
}