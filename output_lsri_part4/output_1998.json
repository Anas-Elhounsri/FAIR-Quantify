{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mikelhernaez/qvz"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-07-02T01:43:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-15T04:46:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Lossy compressor for Quality Scores in Genomic Data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9862785484289905,
      "result": {
        "original_header": "qvz",
        "type": "Text_excerpt",
        "value": "Quality Value Zip (qvz) is a lossy compression algorithm for storing quality values associated\nwith DNA sequencing. This software implements the qvz algorithm for both encoding and decoding.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mikelhernaez/qvz/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9942326248844264,
      "result": {
        "original_header": "Algorithm",
        "type": "Text_excerpt",
        "value": "qvz uses the approach described in a paper submitted to Bioinformatics to perform lossy compression. Data is clustered\nto reduce global variability, then each cluster is compressed by calculating a set of quantization\nmatrices that performs optimally under the chosen distortion metric  and the empirical statistics of\nthe data, using a first order Markov prediction model.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mikelhernaez/qvz/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/mikelhernaez/qvz/wiki"
      },
      "source": "https://raw.githubusercontent.com/mikelhernaez/qvz/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mikelhernaez/qvz/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mikelhernaez/qvz/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mikelhernaez/qvz"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qvz"
      },
      "source": "https://raw.githubusercontent.com/mikelhernaez/qvz/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mikelhernaez/qvz/master/generate_rd.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mikelhernaez/qvz/master/test.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing",
        "parent_header": [
          "qvz"
        ],
        "type": "Text_excerpt",
        "value": "qvz can be used on Windows, Linux, or Mac. Currently we only provide a source distribution. qvz\nhas no external dependencies, linking only against libc, libm, and librt.\n\nThe distribution is configured out of the box for linux. To build on a mac, copy src/Makefile.apple to\nreplace src/Makefile. Build with `make` in the toplevel folder. You are responsible for installing the\nbinary in an appropriate system-wide location (i.e. /usr/bin) if you wish.\n\nThere is currently no makefile for Windows. A visual studio project can be made (and testing has been\ndone on windows to verify compatibility) but the steps are beyond the scope of this guide, because you\nmust take several additional steps to guarantee a sane environment on windows (such as replacing stdint\nand inttypes with correct versions). For this reason we also currently do not distribute a windows build\nscript.\n"
      },
      "source": "https://raw.githubusercontent.com/mikelhernaez/qvz/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8628139253920577,
      "result": {
        "original_header": "Bugs and Feedback",
        "type": "Text_excerpt",
        "value": "Please use GitHub issues to open bug reports or provide feedback about qvz.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mikelhernaez/qvz/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mikelhernaez/qvz/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "qvz"
        ],
        "type": "Text_excerpt",
        "value": "qvz is available under the terms of the GPLv3. See COPYING for more information.\n"
      },
      "source": "https://raw.githubusercontent.com/mikelhernaez/qvz/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qvz"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mikelhernaez"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 107320,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 633,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 536,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mikelhernaez/qvz/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:00:56",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "qvz"
        ],
        "type": "Text_excerpt",
        "value": "qvz is used from the command line. The general invocation is:\n\n```qvz (options) [input file] [output file]```\n\nInput and output must be files, currently it does not process standard input or output. The input file\nmust be a file consisting only of quality scores, with one read per line. Thus, the input would consist\nof every fourth line in a FASTQ file. The other three lines must be compressed separately.\n\nAvailable options are:\n\n```\nOperating Mode:\n-q            Compress the quality score input file (default on)\n-x            Extract quality values from input file\n\nCompression Parameters:\n-f [ratio]    Compress using a variable allocation of [ratio] bits per bit of input entropy per symbol\n-r [rate]     Compress using a fixed allocation of [rate] bits per symbol\n-d [M|L|A]    Compress while optimizing for MSE, Log(1+L1), or L1 distortions, respectively (default: MSE)\n\nClustering Parameters:\n-c [#]        Compress using # clusters. Going above 5 is not recommended due to computational complexity (default: 1)\n-T [#]        Use # as a threshold for cluster centroid movement distance before declaring an approximate clustering as \"good enough\"\n\nExtra Options:\n-h            Print help summary\n-v            Enable verbose progress output\n-s            Print summary stats to STDOUT after compression (independent of -v)\n-u [file]     Write the quantized but not compressed values of [file] (default: off)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/mikelhernaez/qvz/master/README.md",
      "technique": "header_analysis"
    }
  ]
}