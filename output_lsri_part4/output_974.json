{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "CAMISIM"
        ],
        "type": "Text_excerpt",
        "value": "If you use CAMISIM, please cite the publication at *Microbiome*:\n* Fritz*, Hofmann*, et al. (2019). **CAMISIM: Simulating metagenomes and microbial communities.** *Microbiome*, 2019, 7:17. doi:[10.1186/s40168-019-0633-6](https://doi.org/10.1186/s40168-019-0633-6)\n\nA part of CAMISIM's functionality was also described in the CAMI manuscript, thus you may also cite:\n* Sczyrba*, Hofmann*, Belmann*, et al. (2017). **Critical Assessment of Metagenome Interpretation\u2014a benchmark of metagenomics software.** *Nature Methods*, 14, 11:1063\u20131071. doi:[10.1038/nmeth.4458](https://doi.org/10.1038/nmeth.4458)\n"
      },
      "source": "https://raw.githubusercontent.com/CAMI-challenge/CAMISIM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CAMI-challenge/CAMISIM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-09-11T10:53:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-30T07:20:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CAMISIM: Simulating metagenomes and microbial communities"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9787059661943098,
      "result": {
        "original_header": "CAMISIM",
        "type": "Text_excerpt",
        "value": "CAMISIM is a software to model abundance distributions of microbial communities and to simulate corresponding shotgun metagenome datasets.\nIt was mainly developed for the [Critical Assessment of Metagenome Annotation (CAMI)](http://microbiome-cosi.org/cami) challenge, but should be suitable for general use. Please don't hesitate to [open a new issue](https://github.com/CAMI-challenge/CAMISIM/issues) if you run into problems or need help.\n \n"
      },
      "source": "https://raw.githubusercontent.com/CAMI-challenge/CAMISIM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "CAMISIM"
        ],
        "type": "Text_excerpt",
        "value": "* [User manual](https://github.com/CAMI-challenge/CAMISIM/wiki/User-manual)\n* [Configuration File Options](https://github.com/CAMI-challenge/CAMISIM/wiki/Configuration-File-Options)\n* [File Formats](https://github.com/CAMI-challenge/CAMISIM/wiki/File-Formats)\n"
      },
      "source": "https://raw.githubusercontent.com/CAMI-challenge/CAMISIM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/CAMI-challenge/CAMISIM/wiki"
      },
      "source": "https://raw.githubusercontent.com/CAMI-challenge/CAMISIM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CAMI-challenge/CAMISIM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 37
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CAMI-challenge/CAMISIM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CAMI-challenge/CAMISIM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CAMISIM"
      },
      "source": "https://raw.githubusercontent.com/CAMI-challenge/CAMISIM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CAMI-challenge/CAMISIM/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/CAMI-challenge/CAMISIM/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CAMI-challenge/CAMISIM/master/docker/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CAMI-challenge/CAMISIM/master/docker/snake/Miniconda-3.9.1-Linux-x86_64.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CAMI-challenge/CAMISIM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "metagenomics, simulation"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "ACADEMIC SOFTWARE LICENSE AGREEMENT FOR END-USERS AT PUBLICLY FUNDED\nACADEMIC, EDUCATION OR RESEARCH INSTITUTIONS FOR THE USE OF RNAmmer 1.2\n\nBy downloading the Software you are consenting to be bound by and become\na party to this agreement as the \"Licensee\". If you do not agree to all\nof the terms of this agreement, you must not click the Acceptance\nbutton, not install the product nor use the product, and you do not\nbecome a LICENSEE under this agreement. \n\nIf you are not a member of a publicly funded Academic and/or Education\nand/or Research Institution you must obtain a commercial license, please\nsend mail to (software@cbs.dtu.dk). This software license agreement is\nentered into by and between Center for Biological Sequence Analysis,\nTechnical University of Denmark (hereinafter \"CBS\") and the \"LICENSEE\". \n\nWHEREAS CBS has the right to license all copyrights and other property\nrights in the Licensed Software identified as RNAmmer 1.2 and developed\nby CBS and CBS desires to license the Software so that it becomes\navailable for public use and benefit. \n\nWHEREAS LICENSEE is a public funded Academic and/or Education and/or\nResearch Institution. \n\nWHEREAS LICENSEE desires to acquire a free non-exclusive license to use\nthe Software for internal research purposes only. \n\nNOW, THEREFORE, in consideration of the mutual promises and covenants\ncontained herein, the parties agree as follows: \n\n1. Definitions \n\n\"Licensed Software\" means the specific version RNAmmer 1.2 pursuant\nto this Agreement. Any opinion, findings, conclusions or recommendations\nexpressed in the Licensed Software are those of the authors and do not\nnecessarily reflect the views of CBS. \n\n2. License \n\nSubject to the terms and conditions of this Agreement a non-exclusive,\nnon-transferable License to use and copy the Licensed Software is made\navailable free of charge for the LICENSEE which is a non-profit\neducational, academic and/or research institution. The License is only\ngranted for personal and internal use in research only at one Site,\nwhere a Site is defined as a set of contiguous buildings in one\nlocation. The software will be used at only one location of LICENSEE. \n\nThis license does not entitle Licensee to receive from CBS copies of the\nLicensed software on disks, tapes or CD's, hard-copy documentation,\ntechnical support, telephone assistance, or enhancements or updates to\nthe Licensed Software. \n\nThe user and any research assistants, co-workers or other workers who\nmay use the Software agree to not give the program to third parties or\ngrant licenses on software, which include the Software, alone or\nintegrated into other software, to third parties. Modification of the\nsource code is prohibited without the prior written consent of CBS. \n\n3. Ownership \n\nExcept as expressly licensed in this Agreement, CBS shall retain title\nto the Licensed Software, and any upgrades and modifications created by\nCBS. \n\n4. Consideration \n\nIn consideration for the license rights granted by CBS, LICENSEE will\nobtain this academic license free of charge. \n\n5. Copies \n\nLICENSEE shall have the right to make copies of the Licensed Software\nfor internal use at the Site and for back-up purposes under this\nAgreement, but agrees that all such copies shall contain the copyright\nnotices and all other reasonable and appropriate proprietary markings or\nconfidential legends that appear on the Licensed Software provided\nhereunder. \n\n6. Support \n\nCBS shall have no obligation to offer support services to LICENSEE, and\nnothing contained herein shall be interpreted as to require CBS to\nprovide maintenance, installation services, version updates, debugging,\nconsultation or end-user support of any kind. \n\n7. Software Protection \n\nLICENSEE acknowledges that the Licensed Software is proprietary to CBS.\nThe software code shall be treated as trade secrets and confidential\ninformation of CBS, and LICENSEE agrees to use best efforts to hold the\nsame in confidence. LICENSEE's obligation for confidentiality shall not\nextend to any information which is or becomes generally available to the\npublic, is already known to or subsequently disclosed by third parties\nto LICENSEE and at its free disposal, or is independently developed by\nLICENSEE or its affiliates without the use of the confidential\ninformation disclosed by CBS, or is required by law or legal process. \n\nExcept as other wise expressly permitted in this Agreement, Licensee my\nnot (i) modify or create any derivative works of the Licensed Software\nor documentation, including customization, translation or localization;\n(ii) decompile, disassemble, reverse engineer, or otherwise attempt to\nderive the source code for the Product; (iii) redistribute, encumber,\nsell, rent, lease, sublicense, or otherwise transfer rights to the\nLicensed Software; (iv) remove or alter any trademark, logo, copyright\nor other proprietary notices, legends, symbols or labels in the Product;\nor (v) publish any results of benchmark tests run on the Product to a\nthird party without CBS's prior written consent. \n\n8. Representations of CBS to LICENSEE \n\nCBS represents to LICENSEE that (i) CBS has the right to grant the\nLicense and to enter into this agreement, (ii) that, to the best of\nCBS's knowledge, the Licensed software does not infringe any patent,\ncopyright or trade secrets of any third party, provided however that\nsuch representation and warranty shall not apply to any addition to, or\nmodifications or adaptation of, the Licensed Software made by LICENSEE\nand (iii) CBS undertakes to use best efforts to cooperate with and\nassist LICENSEE, at LICENSEE's expense, in defending itself against any\naction based on the alleged infringement of any third party patent,\ncopyright or trade secret rights resulting from or relating to the use\nor licensing of the Licensed Software by LICENSEE. \n\n9. Indemnity and Disclaimer of Warranties \n\nExcept as expressly set forth in this agreement, CBS makes no\nrepresentations or warranties, express or implied. \n\nThe product is provided free of charge, and, therefore, on an \"as is\"\nbasis, without warranty of any kind, express or implied, including\nwithout limitation the warranties that it is free of defects, virus\nfree, able to operate on an uninterrupted basis, merchantable, fit for a\nparticular purpose or non-interfering. The entire risk as to the quality\nand performance of the Licensed Software is borne by LICENSEE. \n\nBy way of example, but not limitation, CBS makes no representations or\nwarranties of merchantability or fitness for any particular application\nor, except as set forth in paragraph 8, that the use of the Software\nwill not infringe any patents, copyrights or trademarks or other rights\nof third parties. The entire risk as to the quality and performance of\nthe product is borne by LICENSEE. CBS shall not be liable for any\nliability or damages with respect to any claim by LICENSEE or any third\nparty on account of, or arising from the license or use of the Software.\n\nShould the Licensed Software prove defective in any respect, LICENSEE\nand not LICENSOR or it's affiliates should assume the entire cost of any\nservice and repair. This disclaimer of warranty constitutes an essential\npart of this agreement. No use of the licensed product is authorized\nhereunder except under this disclaimer. \n\nIn no event will LICENSOR or its affiliates be liable for any indirect,\nspecial, incidental or consequential damages arising out of the use of\nor inability to use the product, including, without limitation, damages\nfor lost profits, loss of goodwill, work stoppage, computer failure or\nmalfunction, or any and all other commercial damages or losses, even if\nadvised of the possibility thereof, and regardless of the legal or\nequitable theory (contract, tort or otherwise) upon which the claim is\nbased. \n\n10. Promotional Advertising & References \n\nLICENSEE may not use the name of the Licensed Software in its\npromotional advertising, product literature, and other similar\npromotional materials to be disseminated to the public or any portion\nthereof. LICENSEE agrees not to identify CBS in any promotional\nadvertising or other promotional materials to be disseminated to the\npublic, or any portion thereof without CBS's prior written consent.\nLICENSEE agrees that any reference to the software for crystallographic\ncomputations will cite one or more publications as set forth in the\nmanual and in agreement with common scientific practice. CBS shall not\nuse LICENSEE's name in publicity or advertising involving this Agreement\nor otherwise without LICENSEE's prior written consent which may be\nwithheld at LICENSEE's sole discretion. \n\n11. Term \n\nThis Agreement and the license rights granted herein shall become\neffective as of the date this Agreement is executed by both parties and\nshall be perpetual unless terminated in accordance with this Section. \n\nCBS may terminate this Agreement at any time. \n\nEither party may terminate this Agreement at any time effective upon the\nother party's breach of any agreement, covenant, or representation made\nin this Agreement, such breach remaining uncorrected sixty (60) days\nafter written notice thereof. \n\nLICENSEE shall have the right, at any time, to terminate this Agreement\nwithout cause by written notice to CBS specifying the date of\ntermination. \n\nUpon termination, LICENSEE shall destroy all full and partial copies of\nthe Licensed Software. \n\n12. Governing Law \n\nThis Agreement shall be construed in accordance with the laws of\nDenmark. \n\n13. General \n\nThe parties agree that this Agreement is the complete and exclusive\nagreement among the parties and supersedes all proposals and prior\nagreements whether written or oral, and all other communications among\nthe parties relating to the subject matter of this Agreement. This\nAgreement cannot be modified except in writing and signed by both\nparties. Failure by either party at any time to enforce any of the\nprovisions of this Agreement shall not constitute a waiver by such party\nof such provision nor in any way affect the validity of this Agreement. \n\nThe invalidity of singular provisions does not affect the validity of\nthe entire understanding. The parties are obligated, however, to replace\nthe invalid provisions by a regulation which comes closest to the\neconomic intent of the invalid provision. The same shall apply mutatis\nmutandis in case of a gap. \n\nIN WITNESS WHEREOF, the LICENSEE hereto have caused this Agreement to be\nduly executed on the date of the download of the software and by\naccepting the license conditions by pressing the Acceptance button. \n"
      },
      "source": "https://raw.githubusercontent.com/CAMI-challenge/CAMISIM/master/tools/rnammer-1.2/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CAMISIM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CAMI-challenge"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1138646,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 52542,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 26133,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 3447,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 395,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 164,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CAMI-challenge/CAMISIM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlphaSquad",
          "type": "User"
        },
        "date_created": "2021-12-13T16:17:21Z",
        "date_published": "2022-01-04T12:05:24Z",
        "description": "Creating tag to update dockerhub version:\r\n - Updated to python3\r\n - Updated NanoSim to latest version (still some minor inconsistencies with CIGARs, they have temporarily been disabled)\r\n - Allowed the usage of own/arbitrary error profiles for ART (thanks to @KatSteinke )\r\n - Added automatic database update for getting genomes from BIOM profile\r\n\r\nWork for a 2.0 version using nextflow is in progress",
        "html_url": "https://github.com/CAMI-challenge/CAMISIM/releases/tag/1.3",
        "release_id": 56370680,
        "tag": "1.3",
        "tarball_url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/tarball/1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/releases/56370680",
        "value": "https://api.github.com/repos/CAMI-challenge/CAMISIM/releases/56370680",
        "zipball_url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/zipball/1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlphaSquad",
          "type": "User"
        },
        "date_created": "2019-10-29T12:35:09Z",
        "date_published": "2020-04-01T08:13:48Z",
        "description": "Version for the simulation of the CAMI2 data. Also includes more test/default data, fixing #77 ",
        "html_url": "https://github.com/CAMI-challenge/CAMISIM/releases/tag/1.2-beta",
        "name": "CAMI 2 simulation",
        "release_id": 25077057,
        "tag": "1.2-beta",
        "tarball_url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/tarball/1.2-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/releases/25077057",
        "value": "https://api.github.com/repos/CAMI-challenge/CAMISIM/releases/25077057",
        "zipball_url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/zipball/1.2-beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlphaSquad",
          "type": "User"
        },
        "date_created": "2018-04-11T12:26:48Z",
        "date_published": "2018-04-11T12:28:28Z",
        "description": "Addition of helper scripts for metadata and hybrid samples",
        "html_url": "https://github.com/CAMI-challenge/CAMISIM/releases/tag/1.1.0",
        "name": "Little Helper",
        "release_id": 10494921,
        "tag": "1.1.0",
        "tarball_url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/tarball/1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/releases/10494921",
        "value": "https://api.github.com/repos/CAMI-challenge/CAMISIM/releases/10494921",
        "zipball_url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/zipball/1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlphaSquad",
          "type": "User"
        },
        "date_created": "2018-03-16T10:12:19Z",
        "date_published": "2018-03-16T10:15:23Z",
        "description": "Officially releasing all the new features (i.e. from_profile) before the CAMISIM publication is out. Enjoy!",
        "html_url": "https://github.com/CAMI-challenge/CAMISIM/releases/tag/1.0.0",
        "name": "Publication release",
        "release_id": 10119741,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/releases/10119741",
        "value": "https://api.github.com/repos/CAMI-challenge/CAMISIM/releases/10119741",
        "zipball_url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlphaSquad",
          "type": "User"
        },
        "date_created": "2017-08-08T10:02:36Z",
        "date_published": "2017-08-08T10:12:53Z",
        "description": "State of the pipeline which was used for creation of the data sets used in the first CAMI challenge. ",
        "html_url": "https://github.com/CAMI-challenge/CAMISIM/releases/tag/0.1",
        "name": "CAMI creation",
        "release_id": 7316139,
        "tag": "0.1",
        "tarball_url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/tarball/0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/releases/7316139",
        "value": "https://api.github.com/repos/CAMI-challenge/CAMISIM/releases/7316139",
        "zipball_url": "https://api.github.com/repos/CAMI-challenge/CAMISIM/zipball/0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:28:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 170
      },
      "technique": "GitHub_API"
    }
  ]
}