{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/raghvendra5688/BCrystal"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-11T11:44:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-26T10:57:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BCrystal: An Interpretable Sequence-Based Protein Crystallization Predictor"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.889660759893352,
      "result": {
        "original_header": "Motivation",
        "type": "Text_excerpt",
        "value": "Protein crystallization allows to study molecular structure. Novel in silico, accurate, sequence-based protein crystallization predictors are highly sought.\n \n"
      },
      "source": "https://raw.githubusercontent.com/raghvendra5688/BCrystal/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/raghvendra5688/BCrystal/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/raghvendra5688/BCrystal/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "raghvendra5688/BCrystal"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BCrystal"
      },
      "source": "https://raw.githubusercontent.com/raghvendra5688/BCrystal/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/raghvendra5688/BCrystal/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Raghevndra Mall\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/raghvendra5688/BCrystal/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BCrystal"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "raghvendra5688"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 39342,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 5267,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raghvendra5688/BCrystal/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This step will install all the dependencies required for running BCrystal. You do not need sudo permissions for this step.\n\n  - Install Anaconda\n    1. Download Anaconda (64 bit) installer python3.x for linux : https://www.anaconda.com/distribution/#download-section\n    2. Run the installer : `bash Anaconda3-2019.03-Linux-x86_64.sh` and follow the instructions to install.\n    3. Install xgboost: conda install -c conda-forge xgboost \n    4. Install shap: conda install -c conda-forge shap \n    5. Install Bio: conda install -c anaconda biopython \n\n  - R requirements\n    - Run R REPL by running the following: `R`\n    -  Install R libraries\n       1.  Interpol (do `install.packages('Interpol')` )\n       2.  bio3d    (do `install.packages('bio3d')` )\n       3.  doParallel (do `install.packages('doParallel')`)\n       4.  zoo      (do `install.packages('zoo')`)\n       \n    Quit R REPL: `quit()` \n \n  - SCRATCH (version SCRATCH-1D release 1.2) (http://scratch.proteomics.ics.uci.edu, Downloads: http://download.igb.uci.edu/#sspro)\n    1. Run `wget http://download.igb.uci.edu/SCRATCH-1D_1.2.tar.gz`\n    2. Run `tar -xvzf SCRATCH-1D_1.2.tar.gz`\n    3. Run `cd SCRATCH-1D_1.2`\n    4. Run `perl install.pl`\n    5. Run `cd ..`\n    6. Replace the blast in `SCRATCH-1D_1.2/pkg/blast-2.2.26` with a 64 bit version of `blast-2.2.26` if you are running on a 64 bit machine (`ftp://ftp.ncbi.nlm.nih.gov/blast/executables/legacy.NOTSUPPORTED/2.2.26/`).\n    \n  - DISOPRED (version 3.16) (http://bioinfadmin.cs.ucl.ac.uk/downloads/DISOPRED/)\n    1. Run `wget http://bioinfadmin.cs.ucl.ac.uk/downloads/DISOPRED/DISOPRED3.16.tar.gz`\n    2. Run `tar -xvzf DISOPRED3.16.tar.gz`\n    3. Run `cd DISOPRED/src/`\n    4. Run `make clean; make; make install`\n    5. In `run_disopred.pl` file within the DISOPRED folder put `my $NCBI_DIR = <path-to-SCRATCH-folder>/pkg/blast-2.2.26/bin`\n    6. In `run_disopred.pl` file also put `my $SEQ_DB = <path-to-SCRATCH-folder>/pkg/PROFILpro_1.2/data/uniref50/uniref50`.\n\nDISOPRED and SCRATCH-1D_1.2 should be in the same directory as Data folder. Data folder has the training and the 3 test set proteins in fasta format as well as files corresponding to their true labels - crystallized (1) or not (0).\n"
      },
      "source": "https://raw.githubusercontent.com/raghvendra5688/BCrystal/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run BCrystal on New Test file",
        "type": "Text_excerpt",
        "value": "To run BCrystal on your own protein sequences you need the following three things:\n\n  1. Protein Sequence File: Protein sequence/sequences of interest in fasta format (https://en.wikipedia.org/wiki/FASTA_format). We provide `Data/test.fasta` as sample test file. \n  2. SCRATCH: Software used to extract structural features from a given protein sequence file. Follow instructions in the previous section to install SCRATCH.\n  3. DISOPRED: Software used to extract disorder features from a given protein sequence file. Follow instructions in the previosu section to install DISOPRED.\n  \n"
      },
      "source": "https://raw.githubusercontent.com/raghvendra5688/BCrystal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Execute in the command line",
        "parent_header": [
          "Run BCrystal in Train Mode"
        ],
        "type": "Text_excerpt",
        "value": " \n  1. `Rscript --vanilla features_PaRSnIP_v2.R <your-test>.fasta`\n  2. `python xgb.py features.csv <your-test>.fasta <output_folder>`\n  \n  \nIn the <output_folder> you will find 2 outputs:\n\n  1. prediction.csv - Containing the crystallization propensity\n  2. bar_plot_i.png - where i=1 if a solo sequence is passed in fasta otherwise its the nth sequence in the test fasta file.\n\n"
      },
      "source": "https://raw.githubusercontent.com/raghvendra5688/BCrystal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run BCrystal in Train Mode",
        "type": "Text_excerpt",
        "value": "To run BCrystal for training xgboost model on our training proteins, you need to do the following:\n\n### Execute in the command line\n  1. `Rscript --vanilla features_PaRSnIP_v2.R Data/Train/FULL_Train.fasta`\n  2. `python xgb_train.py`\n  \nThe training set is readily available for ease of use at: https://drive.google.com/file/d/1FRWIcs4xvK2O5OCqhg7u5g_4qm2zJn2d/view and can be used in combination with Step 2 to generate the BCrystal model.\n\nYour output will be a file called `train.model`\n"
      },
      "source": "https://raw.githubusercontent.com/raghvendra5688/BCrystal/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 03:57:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}