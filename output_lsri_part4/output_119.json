{
  "application_domain": [
    {
      "confidence": 8.24,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 5.26,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lichen2018/LEMON"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-26T13:20:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-20T07:26:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "It is a software to reconstruct the HGT inserted local strain."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9879075661631275,
      "result": {
        "original_header": "LEMON",
        "type": "Text_excerpt",
        "value": "It is a software takes use of existing shotgun NGS datasets to detect HGT breakpoints, identify the transferred genome segments, and reconstructs the inserted local strain. \n"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lichen2018/LEMON/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lichen2018/LEMON/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lichen2018/LEMON"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LEMON"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install HTSlib 1.9 version",
        "parent_header": [
          "LEMON",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "See https://github.com/samtools/htslib"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install LEMON",
        "parent_header": [
          "LEMON",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Download and install LEMON\n```\ngit clone --recursive https://github.com/lichen2018/hgt-detection.git\ncd getAccBkp\nmake\nexport CPLUS_INCLUDE_PATH=/home/your_home_path/lib/htslib-1.9\n```"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lichen2018/LEMON/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LEMON"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lichen2018"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 215636,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 166482,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 39544,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1173,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "LEMON",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "- Softwares\n  - BWA(0.7.12+)\n  - HTSlib(1.9)\n  - Samtools(1.3.1+)\n  - Bedtools(2.20.1+)\n  - LUMPY\n  - Python(3.5+)\n  - Gurobipy\n- Python packages(3.5+)\n  - pysam\n  - sklearn\n  - numpy\n  - scipy\n  - lmfit\n  - ssw-py\n"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running LEMON",
        "parent_header": [
          "LEMON",
          "Example workflow"
        ],
        "type": "Text_excerpt",
        "value": "```\n# 1. Detect raw HGT breakpoints.\npython LEMON/Scripts/get_raw_bkp.py -r meta_ref.fasta -u sample.unique.bam -o sample.raw.txt\n\n# 2. Detect accurate HGT breakpoints.\nLEMON/getAccBkp/get_acc_bkp -r meta_ref.fasta -u sample.unique.bam -s sample.splitters.bam -t 10 -b sample.raw.txt -o sample.acc.txt\n\n# 3. Reconstruct HGT strains for restoring replication timing profile.\npython LEMON/Scripts/reconstruct_HGT_strain.py -c sample.coverage.txt -r meta_ref.fasta -s sample -a sample.acc.bkp.txt\n\n# 4. Reconstruct HGT strains for restoring replication timing profile.\npython LEMON/Scripts/reconstruct_HGT_strain_for_replication_time.py -c sample.coverage.txt -r meta_ref.fasta -s sample -a sample.acc.bkp.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 01:57:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Detect raw HGT breakpoints.",
        "parent_header": [
          "LEMON",
          "LEMON usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nusage: python LEMON/Scripts/get_raw_bkp.py [options]\n```"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required arguments",
        "parent_header": [
          "LEMON",
          "LEMON usage",
          "4. Reconstruct HGT strain with replication time."
        ],
        "type": "Text_excerpt",
        "value": "  ```\n  -r     FILE  Metagenomic Reference \n  -u     FILE  unique reads bam file\n  -o     FILE  raw breakpoints file\n  ```"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option arguments",
        "parent_header": [
          "LEMON",
          "LEMON usage",
          "1. Detect raw HGT breakpoints."
        ],
        "type": "Text_excerpt",
        "value": "  ```\n  -t INT  number of threads [4]\n  ```"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Detect accurate HGT breakpoints.",
        "parent_header": [
          "LEMON",
          "LEMON usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nusage: LEMON/getAccBkp/get_acc_bkp [options]\n```\n#### Required arguments\n  ```\n  -r        FILE  Metagenomic Reference\n  -u        FILE  unique reads bam file\n  -s        FILE  split reads bam file\n  -b        FILE  raw breakpoints file\n  -o        FILE  accurate reakpoints file\n  -t        INT  number of threads \n  ```"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Reconstruct HGT strain.",
        "parent_header": [
          "LEMON",
          "LEMON usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nusage: python LEMON/Scripts/reconstruct_HGT_strain.py [options]\n```\n#### Required arguments\n  ```\n  -r        FILE  Metagenomic Reference\n  -c        FILE  coverage file\n  -s        STR   Sample name or id\n  -a        FILE  accurate reakpoints file\n  -o        STR   path to the directory where results should be stored\n  ```\n  "
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Reconstruct HGT strain with replication time.",
        "parent_header": [
          "LEMON",
          "LEMON usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nusage: python LEMON/Scripts/reconstruct_HGT_strain_for_replication_time.py [options]\n```\n#### Required arguments\n  ```\n  -r        FILE  Metagenomic Reference\n  -c        FILE  coverage file\n  -s        STR   Sample name or id\n  -a        FILE  accurate reakpoints file\n  -o        STR   path to the directory where results should be stored\n  ```"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Preprocessing",
        "parent_header": [
          "LEMON",
          "Example workflow"
        ],
        "type": "Text_excerpt",
        "value": "```\n# Align the data\nbwa mem -M -t 8 -R \"@RG\\tID:id\\tSM:sample\\tLB:lib\" Metagenomic_reference.fasta sample.1.fq sample.2.fq \\\n  | samtools view -bhS -> sample.unsort.bam\n\n# Sort bam file\nsamtools sort -o sample.bam sample.unsort.bam\n\n# Extract split reads\nsamtools view -h sample.bam \\\n  | lumpy-sv/scripts/extractSplitReads_BwaMem -i stdin \\\n  | samtools view -Sb > sample.unsort.splitters.bam\n\n# Sort split reads bam file\nsamtools sort -o sample.splitters.bam sample.unsort.splitters.bam\n\n# Extract unique reads bam file\nsamtools view -q 20 -b sample.bam > sample.unique.bam\n\n# Calculate coverage\nbedtools genomecov -ibam sample.bam -bg > sample.coverage.txt\n```"
      },
      "source": "https://raw.githubusercontent.com/lichen2018/LEMON/master/README.md",
      "technique": "header_analysis"
    }
  ]
}