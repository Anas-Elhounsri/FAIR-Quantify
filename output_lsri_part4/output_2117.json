{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PasqualeInfn/JST"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-07-03T08:44:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-10-17T13:24:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9741595217582969,
      "result": {
        "type": "Text_excerpt",
        "value": "Bioinformatics applications, particularly the ones that need to compare entire genomes, are highly demanding in terms of computational resources. Due to this reason, Grid/Cloud technology\nappears to fit the requirements of such applications since it can provide the needed computational\npower as well as the storage resources to record the data produced. \nGrid environment, with its huge amount of storage and CPU power, proves to be very effective\nwhen the applications can be divided in a number, that can even be large, of independent tasks. In this case each independent task can be assigned to one of the many Worker Nodes available over\nthe full grid infrastructure with the effect of reducing the time needed to reach the solution. The\ndrawback is that even simple problems may require the submission to the Grid and the\nmanagement of a quite large number of jobs. \nThe Job Submission Tool (JST) was initially developed in order to simplify the submission,\nmanagement and bookkeeping of large number of jobs required by particular bioinformatics use\ncases developed inside the LIBI and BioinfoGRID [2] projects. JST has already been used with\nsuccess to run a full list of bioinformatics applications on the INFNgrid and EGEE/EGI Grid\ninfrastructures. \nJST has recently undergone a major rewrite, in particular for what concerns the interaction with the\nuser; in particular a WEB services interface has been added. In this way it is now possible to access JST also from within workflows managers like Taverna (particularly diffused within the\nbioinformatics community) and LONI. \nThe JST architecture is shown in the Fig. 11. The system is made of three macro-elements:\n1) Database: contains the TaskList (list of tasks (job) to be executed) and the configuration parameters\n2) FrontEnd: used to fill the TaskList via Web Services (RestFul/Soap). The user can interact\nwith the FrontEnd in several ways: from a Client applications, a Web browser or through a\nWorkflow engine (eg. Taverna), or a combination of the above.\n3) BackEnd: is an Application daemon, that runs in the background and submits jobs, empting\nthe TaskList. Several instances of the BackEnd can be executed simultaneously each\nconfigured in order to take care of specific job submission (Interactive or Dedicated server,\nBatch cluster, EGI GRID infrastructure, CLOUD IaaS), The BackEnd takes care of the job\nscheduling and user notification.\n \n"
      },
      "source": "https://raw.githubusercontent.com/PasqualeInfn/JST/master/README",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/PasqualeInfn/JST/wiki"
      },
      "source": "https://raw.githubusercontent.com/PasqualeInfn/JST/master/README",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PasqualeInfn/JST/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PasqualeInfn/JST/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PasqualeInfn/JST"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/PasqualeInfn/JST/master/README",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PasqualeInfn/JST/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JST"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "PasqualeInfn"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PasqualeInfn/JST/master/README"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:23:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}