{
  "application_domain": [
    {
      "confidence": 34.1,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ashishbaghudana/mthesis-ashish"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-06-14T12:53:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-09-18T11:15:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9919591791517556,
      "result": {
        "original_header": "Status",
        "type": "Text_excerpt",
        "value": "* NLPBA corpus of 2000 abstracts with tag annotations of `Protein`, `DNA`, and `RNA`. No relations\n* LLL05 corpuswith 85 sentences with relations of `genic` interaction (to anything)\n* Stub implementation of [Relna](https://github.com/ashishbaghudana/mthesis-ashish/) here.\n* [README](https://github.com/ashishbaghudana/mthesis-ashish/) for Relna follows below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9820181725018302,
      "result": {
        "original_header": "Goal",
        "type": "Text_excerpt",
        "value": "1. Expand NLPBA corpus with:\n  * `Protein` to `RNA` relations (reason, more interesting biologically & we don't have to deal with the problem of distinguishing Protein vs Genes)\n  * `Protein` to `DNA elements` (very specific cases... TODO)\n  * [ ] Write as PubAnnotation format & anndoc (tagtog) format\n2. Create method to given a text or PMID, recognize these kind of relations (meaning, entity names have to also be recognized)\n  * Make method public\n  * Well documented for totally new users (HOWTO)\n \n"
      },
      "source": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9920792709464459,
      "result": {
        "original_header": "Approach",
        "type": "Text_excerpt",
        "value": "1. Expand dictionary by bootstrapping method:\n  1. Annotate seed corpus of 20 abstracts (with relations)\n  2. Develop method for relationship extraction\n  3. Predict on a bigger set of abstracts\n  4. Review manually (gradually check only low confidence cases)\n  5. Add to whole corpus and repeat process\n \n"
      },
      "source": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/ashishbaghudana/mthesis-ashish/wiki"
      },
      "source": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ashishbaghudana/mthesis-ashish/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ashishbaghudana/mthesis-ashish/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ashishbaghudana/mthesis-ashish"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/src/main/resources/gimli/gimli.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "INSTALLATION",
        "parent_header": [
          "RELNA HOWTO"
        ],
        "type": "Text_excerpt",
        "value": "1. Install [gradle](http://gradle.com) on your system.\n2. Run install.sh.\n"
      },
      "source": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "ALTERNATE (Deprecated)",
        "parent_header": [
          "RELNA HOWTO",
          "INSTALLATION"
        ],
        "type": "Text_excerpt",
        "value": "1. Install [gradle](http://gradle.com) on your system.\n2. Unzip the `genia.mod.tar.gz` from `resources/` and copy it to `src/main/resources/gimli/resources/tools/gdep`\n3. Navigate to the parent directory (where build.gradle is placed) and run `gradle assemble`\n"
      },
      "source": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ashishbaghudana/mthesis-ashish/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2015 Ashish Baghudana\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mthesis-ashish"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ashishbaghudana"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Groff",
        "size": 29153223,
        "type": "Programming_language",
        "value": "Groff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 4208378,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1699785,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 64057,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 3148,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1733,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "RUNNING THE TOOL",
        "parent_header": [
          "RELNA HOWTO"
        ],
        "type": "Text_excerpt",
        "value": "Navigate to `build/libs` and run the tool with `java -jar mthesis-ashish-*.jar` with the following arguments:\n* `-i` **path-to-input-file**\n* `-o` **path-to-output-file**\n* `-w` **writer-format - anndoc or json**\n* `-r` **reader-format - can be txt or iob2 (optional argument)**\n* `-s` **string - text to tag given from command line (optional argument)**\n\nIf `reader format (-r)` argument is not given, the program will guess based on the extension.\n\nIf `string (-s)` argument is given, the program will automatically read from the command line for an input.\n"
      },
      "source": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:25:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "RELNA HOWTO",
          "RUNNING THE TOOL"
        ],
        "type": "Text_excerpt",
        "value": "**Input format : iob2, `-r` specified, writer format : anndoc**\n`java -jar build/libs/mthesis-ashish-*.jar -r iob2 -i sample/iob2/corpus1.iob2 -w anndoc -o sample/iob2/output1.ann.json`\n\n**Input format : iob2, `-r` not specified, writer format : json**\n`java -jar build/libs/mthesis-ashish-*.jar -i sample/iob2/corpus1.iob2 -w json -o sample/iob2/output1.json`\n\n**Input format : txt, `-r` specified, writer format : anndoc**\n`java -jar build/libs/mthesis-ashish-*.jar -i sample/txt/corpus2.txt -r txt -w anndoc -o sample/txt/output2.ann.json`\n\nEventually, the jar file will be called relna.\n\nIf the file is in `txt` format, it must follow the pattern below.\n\n```text\n<identifier>\n<title>\n<abstract>\n```\n\nIf the file is in `iob` format, it must follow the pattern below.\n\n```text\n<identifier>\n\n<sentence begin>\n.\n.\n<token>\n.\n.\n<sentence end>\n\n<sentence begin>\n.\n.\n.\n<sentence end>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ashishbaghudana/mthesis-ashish/develop/README.md",
      "technique": "header_analysis"
    }
  ]
}