{
  "application_domain": [
    {
      "confidence": 35.77,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Merck/deepbgc"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-17T14:19:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-25T20:01:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BGC Detection and Classification Using Deep Learning"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9908569831380669,
      "result": {
        "original_header": "DeepBGC: Biosynthetic Gene Cluster detection and classification",
        "type": "Text_excerpt",
        "value": "DeepBGC detects BGCs in bacterial and fungal genomes using deep learning. \nDeepBGC employs a Bidirectional Long Short-Term Memory Recurrent Neural Network \nand a word2vec-like vector embedding of Pfam protein domains. \nProduct class and activity of detected BGCs is predicted using a Random Forest classifier. \n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9515705173352735,
      "result": {
        "original_header": "Train DeepBGC on your own data",
        "type": "Text_excerpt",
        "value": "Training and validation data can be found in [release 0.1.0](https://github.com/Merck/deepbgc/releases/tag/v0.1.0) and [release 0.1.5](https://github.com/Merck/deepbgc/releases/tag/v0.1.5). You will need:\n- Positive (BGC) training data - In most cases, this is your own BGC training set, see \"Preparing training data\" section below\n- Negative (Non-BGC) training data - Needed for BGC detection. You can use `GeneSwap_Negatives.pfam.tsv` from release https://github.com/Merck/deepbgc/releases/tag/v0.1.0\n- Validation data - Needed for BGC detection. Contigs with annotated BGC and non-BGC regions. A working example can be downloaded from https://github.com/Merck/deepbgc/releases/tag/v0.1.5\n- Trained Pfam2vec vectors - \"Vocabulary\" converting Pfam IDs to meaningful numeric vectors, you can reuse previously trained `pfam2vec.csv` results from https://github.com/Merck/deepbgc/releases/tag/v0.1.0\n- JSON configuration files - See JSON section below \n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9819172560129917,
      "result": {
        "original_header": "JSON model training template files",
        "type": "Text_excerpt",
        "value": "DeepBGC is using JSON template files to define model architecture and training parameters. All templates can be downloaded in [release 0.1.0](https://github.com/Merck/deepbgc/releases/tag/v0.1.0). \n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download models and Pfam database",
        "parent_header": [
          "DeepBGC: Biosynthetic Gene Cluster detection and classification",
          "Use DeepBGC"
        ],
        "type": "Text_excerpt",
        "value": "Before you can use DeepBGC, download trained models and Pfam database:\n\n```bash\ndeepbgc download\n```\n\nYou can display downloaded dependencies and models using:\n\n```bash\ndeepbgc info\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Merck/deepbgc/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Merck/deepbgc/master/notebooks/mibig_v3_retraining/BGC_classification.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/notebooks/mibig_v3_retraining/BGC_classification.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Merck/deepbgc/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Merck/deepbgc"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepBGC: Biosynthetic Gene Cluster detection and classification"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Merck/deepbgc/master/images/deepbgc.architecture.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Merck/deepbgc/master/images/deepbgc.pipeline.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Merck/deepbgc/master/images/deepbgc.bgc.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install using conda (recommended)",
        "parent_header": [
          "DeepBGC: Biosynthetic Gene Cluster detection and classification"
        ],
        "type": "Text_excerpt",
        "value": "You can install DeepBGC using [Conda](https://docs.conda.io/projects/conda/en/latest/user-guide/install/download.html) \nor one of the alternatives ([Miniconda](https://docs.conda.io/en/latest/miniconda.html), \n[Miniforge](https://github.com/conda-forge/miniforge)).\n\nSet up Bioconda and Conda-Forge channels:\n\n```bash\nconda config --add channels bioconda\nconda config --add channels conda-forge\n```\n\nInstall DeepBGC using:\n\n```bash\n# Create a separate DeepBGC environment and install dependencies\nconda create -n deepbgc python=3.7 hmmer prodigal\n\n# Install DeepBGC into the environment using pip\nconda activate deepbgc\npip install deepbgc\n\n# Alternatively, install everything using conda (currently unstable due to conda conflicts)\nconda install deepbgc\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install dependencies manually (if conda is not available)",
        "parent_header": [
          "DeepBGC: Biosynthetic Gene Cluster detection and classification"
        ],
        "type": "Text_excerpt",
        "value": "If you don't mind installing the HMMER and Prodigal dependencies manually, you can also install DeepBGC using pip:\n\n- Install Python version 3.6 or 3.7 (Note: **Python 3.8 is not supported** due to Tensorflow < 2.0 dependency)\n- Install Prodigal and put the `prodigal` binary it on your PATH: https://github.com/hyattpd/Prodigal/releases\n- Install HMMER and put the `hmmscan` and `hmmpress` binaries on your PATH: http://hmmer.org/download.html\n- Run `pip install deepbgc` to install DeepBGC   \n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparing training data",
        "parent_header": [
          "DeepBGC: Biosynthetic Gene Cluster detection and classification",
          "Train DeepBGC on your own data"
        ],
        "type": "Text_excerpt",
        "value": "The training examples need to be prepared in Pfam TSV format, which can be prepared from your sequence\nusing `deepbgc prepare`. \n\nFirst, you will need to manually add an `in_cluster` column that will contain 0 for pfams outside a BGC \nand 1 for pfams inside a BGC. We recommend preparing a separate negative TSV and positive TSV file, \nwhere the column will be equal to all 0 or 1 respectively. \n\nFinally, you will need to manually add a `sequence_id` column ,\nwhich will identify a continuous sequence of Pfams from a single sample (BGC or negative sequence).\nThe samples are shuffled during training to present the model with a random order of positive and negative samples.\nPfams with the same `sequence_id` value will be kept together. For example, if your training set contains multiple BGCs, the `sequence_id` column should contain the BGC ID.\n\n**! New in version 0.1.17 !** You can now prepare *protein* FASTA sequences into a Pfam TSV file using `deepbgc prepare --protein`.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999996414516733,
      "result": {
        "original_header": "\ud83d\udccc News \ud83d\udccc",
        "type": "Text_excerpt",
        "value": "- **DeepBGC 0.1.23**: Predicted BGCs can now be uploaded for visualization in **antiSMASH** using a JSON output file\n  - Install and run DeepBGC as usual based on instructions below\n  - Upload `antismash.json` from the DeepBGC output folder using \"Upload extra annotations\" on the [antiSMASH](https://antismash.secondarymetabolites.org/) page\n  - Predicted BGC regions and their prediction scores will be displayed alongside antiSMASH BGCs\n  \n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Train DeepBGC on your own data",
        "type": "Text_excerpt",
        "value": "Training and validation data can be found in [release 0.1.0](https://github.com/Merck/deepbgc/releases/tag/v0.1.0) and [release 0.1.5](https://github.com/Merck/deepbgc/releases/tag/v0.1.5). You will need:\n- Positive (BGC) training data - In most cases, this is your own BGC training set, see \"Preparing training data\" section below\n- Negative (Non-BGC) training data - Needed for BGC detection. You can use `GeneSwap_Negatives.pfam.tsv` from release https://github.com/Merck/deepbgc/releases/tag/v0.1.0\n- Validation data - Needed for BGC detection. Contigs with annotated BGC and non-BGC regions. A working example can be downloaded from https://github.com/Merck/deepbgc/releases/tag/v0.1.5\n- Trained Pfam2vec vectors - \"Vocabulary\" converting Pfam IDs to meaningful numeric vectors, you can reuse previously trained `pfam2vec.csv` results from https://github.com/Merck/deepbgc/releases/tag/v0.1.0\n- JSON configuration files - See JSON section below \n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9444279458523974,
      "result": {
        "original_header": "Using your trained model",
        "type": "Text_excerpt",
        "value": "Since version `0.1.10` you can provide a direct path to the detector or classifier model like so:\n```bash\ndeepbgc pipeline \\\n    mySequence.fa \\\n    --detector path/to/myDetector.pkl \\\n    --classifier path/to/myClassifier.pkl \n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Merck/deepbgc/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bidirectional-lstm, biosynthetic-gene-clusters, deep-learning, deepbgc, natural-products, pfam2vec, python, synthetic-biology"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License\n\nCopyright \u00a9 2019 Merck Sharp & Dohme Corp. a subsidiary of Merck & Co., Inc., Kenilworth, NJ, USA.\"\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.travis-ci.org/Merck/deepbgc.svg?branch=master"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "deepbgc"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Merck"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 15102035,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 185622,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1224,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2021-09-30T14:17:15Z",
        "date_published": "2021-09-30T14:18:46Z",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.29",
        "name": "Fix dependency issues",
        "release_id": 50555865,
        "tag": "v0.1.29",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.29",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/50555865",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/50555865",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.29"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2021-09-20T19:55:03Z",
        "date_published": "2021-09-20T19:56:53Z",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.28",
        "name": "Support BioPython >= 1.78",
        "release_id": 49937346,
        "tag": "v0.1.28",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.28",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/49937346",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/49937346",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.28"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2021-07-14T13:59:08Z",
        "date_published": "2021-07-14T14:00:44Z",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.27",
        "name": "Support gbff genbank extension",
        "release_id": 46190222,
        "tag": "v0.1.27",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.27",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/46190222",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/46190222",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.27"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2021-03-05T08:18:42Z",
        "date_published": "2021-03-05T08:19:23Z",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.25",
        "name": "Handle Pfam boundaries in incomplete CDS",
        "release_id": 39324365,
        "tag": "v0.1.25",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.25",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/39324365",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/39324365",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.25"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2021-03-05T07:23:07Z",
        "date_published": "2021-03-05T07:23:49Z",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.24",
        "name": "Handle Pfam boundaries in incomplete CDS",
        "release_id": 39322597,
        "tag": "v0.1.24",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.24",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/39322597",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/39322597",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.24"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2021-02-23T09:46:12Z",
        "date_published": "2021-02-23T09:48:08Z",
        "description": "antiSMASH JSON output is created by default in output folder",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.23",
        "name": "Enable antiSMASH JSON output",
        "release_id": 38474940,
        "tag": "v0.1.23",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.23",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/38474940",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/38474940",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.23"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2020-02-12T16:27:08Z",
        "date_published": "2020-02-12T16:28:02Z",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.18",
        "name": "Fix protein IDs in --protein mode, add tests",
        "release_id": 23612098,
        "tag": "v0.1.18",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.18",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/23612098",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/23612098",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.18"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2020-02-07T12:15:06Z",
        "date_published": "2020-02-07T12:21:20Z",
        "description": "- You can now detect BGCs in a *protein* FASTA sequence using `deepbgc pipeline --protein`. This is done by creating an artificial sequence where all proteins are found right after another on the + strand\r\n- You can now prepare *protein* FASTA sequences into a Pfam TSV file using `deepbgc prepare --protein`.\r\n- Fixed ROC and Precision-Recall plots",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.17",
        "name": "Add experimental --protein mode",
        "release_id": 23478116,
        "tag": "v0.1.17",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.17",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/23478116",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/23478116",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.17"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2019-11-20T13:33:53Z",
        "date_published": "2019-11-20T13:36:05Z",
        "description": "- add `--prodigal-meta-mode` argument to `deepbgc prepare` and `deepbgc pipeline` to enable detecting genes in short contigs\r\n- fix Python 2.7 incompatibility error when detecting Pfam domains",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.16",
        "name": "Support Prodigal \"-p meta\" mode",
        "release_id": 21619801,
        "tag": "v0.1.16",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.16",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/21619801",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/21619801",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.16"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2019-10-14T14:55:53Z",
        "date_published": "2019-10-14T14:57:04Z",
        "description": "- Added support for gzipped input sequence files (should end with .gz extension)\r\n- Improved error message when parsing unknown format",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.14",
        "name": "Support gzipped input files",
        "release_id": 20685341,
        "tag": "v0.1.14",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.14",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/20685341",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/20685341",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.14"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2019-10-01T07:31:28Z",
        "date_published": "2019-10-01T07:32:38Z",
        "description": "- Require Tensorflow < 2.0.0",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.13",
        "name": "Fix tensorflow dependency version",
        "release_id": 20374416,
        "tag": "v0.1.13",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.13",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/20374416",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/20374416",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.13"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2019-10-01T06:58:16Z",
        "date_published": "2019-10-01T06:59:43Z",
        "description": "- Removed forgotten command that printed out all pfam descriptions to STDOUT",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.12",
        "name": "Remove debug output of pfam descriptions",
        "release_id": 20373828,
        "tag": "v0.1.12",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.12",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/20373828",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/20373828",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2019-10-01T06:50:02Z",
        "date_published": "2019-10-01T06:52:16Z",
        "description": "- Added DEEPBGC_DOWNLOADS_DIR info to download command\r\n- Added default values to help annotations\r\n- Fixed pfam description annotation, now pfams are annotated with text \"description\" qualifier ",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.11",
        "name": "Fix pfam description annotations, improve help docs of commands",
        "release_id": 20373712,
        "tag": "v0.1.11",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.11",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/20373712",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/20373712",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2019-09-06T09:41:42Z",
        "date_published": "2019-09-06T09:51:03Z",
        "description": "See https://github.com/Merck/deepbgc#train-deepbgc-on-your-own-data for more information about training.",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/0.1.10",
        "name": "Enable running custom model using path to pickle file",
        "release_id": 19804310,
        "tag": "0.1.10",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/0.1.10",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/19804310",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/19804310",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/0.1.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2019-03-21T15:41:37Z",
        "date_published": "2019-03-21T17:37:54Z",
        "description": "DeepBGC PFAM_domain annotations now use `db_xref=\"PF00067.1\"` and `database=\"31.0\"` qualifiers to be compatible with antiSMASH. \r\n\r\nUpdated GenBank file of ClusterFinder annotated contigs used for validation is provided below.\r\nFor all remaining datasets, refer to release 0.1.0: https://github.com/Merck/deepbgc/releases/tag/v0.1.0\r\n",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.5",
        "name": "Make PFAM_domain annotations compatible with antiSMASH 5",
        "release_id": 16265304,
        "tag": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/16265304",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/16265304",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2019-03-12T13:57:28Z",
        "date_published": "2019-03-12T13:42:50Z",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.2",
        "name": "Fix trained model download hashes",
        "release_id": 16060591,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/16060591",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/16060591",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prihoda",
          "type": "User"
        },
        "date_created": "2019-03-12T13:34:18Z",
        "date_published": "2019-03-12T13:08:34Z",
        "description": "## Changelog\r\n\r\n- DeepBGC now accepts and outputs GenBank files\r\n- You can now train your own BGC detection model using `deepbgc train`\r\n- Data dependencies and models are now automatically downloaded using `deepbgc download`\r\n- Compatibility with Python 2.7, Python 3.4+\r\n\r\n## Training and validation data\r\n- ClusterFinder_Annotated_Contigs_OLD_PFAM_ANNOTATION.full.gbk - 13 contigs annotated with BGC regions (\"cluster\" feature) used for validation (from Cimermancic et al.). Note that a newer version with PFAM_domain annotations compatible with DeepBGC 0.1.5 and antiSMASH 5 is provided in release https://github.com/Merck/deepbgc/releases/tag/v0.1.5\r\n- GeneSwap_Negatives.pfam.tsv - Generated artificial negatives used to train the DeepBGC model\r\n- MIBiG.activity.csv - Chemical product activity for all MIBiG 1.4 BGCs\r\n- MIBiG.classes.csv - Chemical product class for all MIBiG 1.4 BGCs\r\n- MIBiG.pfam.tsv - Sequence of Pfam domains of all MIBiG 1.4 BGCs used to train the DeepBGC model\r\n- pfam2vec.csv - Pfam2vec embedding (100-dimensional vectors) for all Pfam domain IDs\r\n- templates - Directory with JSON model templates for training\r\n- pfam2vec-pfam31-corpus-p0.001.txt.bz2 - **NEW** Pfam ID corpus used to train pfam2vec (p-value 0.001, original pfam2vec was trained with a less strict p-value of 0.01). Compressed using bzip2.\r\n\r\n## Models\r\n\r\nModels are downloaded automatically using `deepbgc download`\r\n\r\n- deepbgc.pkl - DeepBGC detection model trained on MIBiG 1.4 dataset\r\n- clusterfinder_original.pkl - ClusterFinder detection model with original parameters\r\n- clusterfinder_retrained.pkl - ClusterFinder detection model, trained on MIBiG 1.4 dataset\r\n- clusterfinder_geneborder.pkl - ClusterFinder model switching only on gene borders, trained on MIBiG 1.4 dataset\r\n- product_class.pkl - Random Forest classifier predicting product class, trained on MIBiG 1.4 dataset\r\n- product_activity.pkl - Random Forest classifier predicting product activity, trained on MIBiG 1.4 dataset\r\n\r\n## Example results\r\n- example - Result of full DeepBGC pipeline on ClusterFinder_Annotated_Contigs.full.gbk\r\n- DeepBGC_Example_Result.ipynb - Jupyter notebook previewing contents of the example result folder\r\n",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.1.0",
        "name": "Using GenBank representation, training models",
        "release_id": 16059080,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/16059080",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/16059080",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Microbiology",
          "type": "User"
        },
        "date_created": "2019-02-01T13:13:11Z",
        "date_published": "2019-02-01T13:14:04Z",
        "description": "Code release including trained models.",
        "html_url": "https://github.com/Merck/deepbgc/releases/tag/v0.0.1",
        "name": "v0.0.1",
        "release_id": 15315655,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/Merck/deepbgc/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Merck/deepbgc/releases/15315655",
        "value": "https://api.github.com/repos/Merck/deepbgc/releases/15315655",
        "zipball_url": "https://api.github.com/repos/Merck/deepbgc/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install dependencies manually (if conda is not available)",
        "parent_header": [
          "DeepBGC: Biosynthetic Gene Cluster detection and classification"
        ],
        "type": "Text_excerpt",
        "value": "If you don't mind installing the HMMER and Prodigal dependencies manually, you can also install DeepBGC using pip:\n\n- Install Python version 3.6 or 3.7 (Note: **Python 3.8 is not supported** due to Tensorflow < 2.0 dependency)\n- Install Prodigal and put the `prodigal` binary it on your PATH: https://github.com/hyattpd/Prodigal/releases\n- Install HMMER and put the `hmmscan` and `hmmpress` binaries on your PATH: http://hmmer.org/download.html\n- Run `pip install deepbgc` to install DeepBGC   \n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:35:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 127
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Detection and classification",
        "parent_header": [
          "DeepBGC: Biosynthetic Gene Cluster detection and classification",
          "Use DeepBGC"
        ],
        "type": "Text_excerpt",
        "value": "![DeepBGC pipeline](images/deepbgc.pipeline.png?raw=true \"DeepBGC pipeline\")\n\nDetect and classify BGCs in a genomic sequence. \nProteins and Pfam domains are detected automatically if not already annotated (HMMER and Prodigal needed)\n\n```bash\n# Show command help docs\ndeepbgc pipeline --help\n\n# Detect and classify BGCs in mySequence.fa using DeepBGC detector.\ndeepbgc pipeline mySequence.fa\n\n# Detect and classify BGCs in mySequence.fa using custom DeepBGC detector trained on your own data.\ndeepbgc pipeline --detector path/to/myDetector.pkl mySequence.fa\n```\n\nThis will produce a `mySequence` directory with multiple files and a README.txt with file descriptions.\n\nSee [Train DeepBGC on your own data](#train-deepbgc-on-your-own-data) section below for more information about training a custom detector or classifier.\n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example output",
        "parent_header": [
          "DeepBGC: Biosynthetic Gene Cluster detection and classification",
          "Use DeepBGC",
          "Detection and classification"
        ],
        "type": "Text_excerpt",
        "value": "See the [DeepBGC Example Result Notebook](https://nbviewer.jupyter.org/urls/github.com/Merck/deepbgc/releases/download/v0.1.0/DeepBGC_Example_Result.ipynb).\nData can be downloaded on the [releases page](https://github.com/Merck/deepbgc/releases)\n\n![Detected BGC Regions](images/deepbgc.bgc.png?raw=true \"Detected BGC regions\")\n"
      },
      "source": "https://raw.githubusercontent.com/Merck/deepbgc/master/README.md",
      "technique": "header_analysis"
    }
  ]
}