{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "ChromDragoNN: cis-trans Deep RegulAtory Genomic Neural Network for predicting Chromatin Accessibility"
        ],
        "type": "Text_excerpt",
        "value": "If you use this code for your research, please cite our paper:\n\nSurag Nair, Daniel S Kim, Jacob Perricone, Anshul Kundaje, Integrating regulatory DNA sequence and gene expression to predict genome-wide chromatin accessibility across cellular contexts, Bioinformatics, Volume 35, Issue 14, July 2019, Pages i108\u2013i116, https://doi.org/10.1093/bioinformatics/btz352\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kundajelab/ChromDragoNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-02-02T00:35:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-16T07:49:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Code for the paper \"Integrating regulatory DNA sequence and gene expression to predict genome-wide chromatin accessibility across cellular contexts\""
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9969992293635616,
      "result": {
        "original_header": "ChromDragoNN: cis-trans Deep RegulAtory Genomic Neural Network for predicting Chromatin Accessibility",
        "type": "Text_excerpt",
        "value": "This repository contains code for our paper \"Integrating regulatory DNA sequence and gene expression to predict genome-wide chromatin accessibility across cellular contexts\". The models are implemented in PyTorch.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8585436584930062,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "All associated data from our paper can be downloaded from [here](http://mitra.stanford.edu/kundaje/projects/seqxgene/) or [here](https://zenodo.org/record/2635744#.XjCuIC_MxTY). \nIf you have your own data, you may use scripts in the `preprocess/` directory. \n \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8861043908099835,
      "result": {
        "original_header": "Stage 1",
        "type": "Text_excerpt",
        "value": "The stage 1 models predict accessibility across all training cell types from only sequence, and does not utilise RNA-seq profiles. \nThe `model_zoo/stage1` directory contains models for the [Vanilla](./model_zoo/stage1/vanilla.py), [Factorized](./model_zoo/stage1/factorized.py) and our [ResNet](./model_zoo/stage1/resnet.py) models. \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9287688052209988,
      "result": {
        "original_header": "Stage 2",
        "type": "Text_excerpt",
        "value": "The stage 2 models predict accessibility for each cell type, sequence pair and uses RNA-seq profiles. \nThe `model_zoo/stage2` directory contains models for the stage 2 models, which may be trained with or without mean accessibility feature as input (explained in more detail in the paper). \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kundajelab/ChromDragoNN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/notebooks/tSNE.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/notebooks/tSNE.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kundajelab/ChromDragoNN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kundajelab/ChromDragoNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ChromDragoNN: cis-trans Deep RegulAtory Genomic Neural Network for predicting Chromatin Accessibility"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparing Accessibility Data",
        "parent_header": [
          "ChromDragoNN: cis-trans Deep RegulAtory Genomic Neural Network for predicting Chromatin Accessibility",
          "Data"
        ],
        "type": "Text_excerpt",
        "value": "For the accessibility matrix, prepare your data in the following format as a tab-separated gzipped file. \n```\nchr    start  end    task1  task2  ...  taskM\nchr1   50     1050       0      0           0\nchr1   1000   2000       1      0           1\n...\nchr2   100    1100       1      0           1\n```\n\nChromDragoNN works on binary data and hence do ensure that the labels are all 0 or 1 only.\n\nThen use the following command to process the data (this may take a few hours depending on the size of your dataset):\n```bash\npython ./preprocess/make_accessibility_joblib.py --input /path/to/accessibility/file.tsv.gz --output_dir /path/to/dnase/packbited --genome_fasta /path/to/genome/fasta.fa\n``` \nMake sure the output directory exists!\n\nIf you wish to generate the binary matrix from peaks (e.g. narrowPeak), have a look at the [seqdataloader](https://github.com/kundajelab/seqdataloader) repo. \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparing RNA Data",
        "parent_header": [
          "ChromDragoNN: cis-trans Deep RegulAtory Genomic Neural Network for predicting Chromatin Accessibility",
          "Data"
        ],
        "type": "Text_excerpt",
        "value": "For the RNA matrix, prepare your data in the following format as a tab-separated file (NOT gzipped). \n```\ngene    task1   task2  ...  taskM\nMEOX1   3.5189  2.8237      3.7542\nSOX8    0.0     0.0         1.9623\n...\nZNF195  0.0     0.1232      0.0023\n```\nThe gene expression values must already be appropriately normalised. In our paper, we use the arcsinh(TPM) values for 1630 Transcription Factors. Do ensure the number and order of the tasks is the same as in the accessibility data.\n\nThen use the following command to process the data:\n```bash\npython ./preprocess/make_rna_joblib.py --input /path/to/rna/file.tsv --output_prefix /path/to/rna/prefix\n```\n\nThis will output `/path/to/rna/prefix.joblib` RNA quants file.\n\n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9534036168793407,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "Untar the `dnase.chr.packbited.tar.gz` file (occupies ~30 Gb). \nIf you have your own data, you may use scripts in the `preprocess/` directory. \n \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999869894592999,
      "result": {
        "original_header": "Stage 1",
        "type": "Text_excerpt",
        "value": "To start training any of these models (say, ResNet), from the `model_zoo/stage1` directory:\n```bash\npython resnet.py -cp /path/to/stage1/checkpoint/dir --dnase /path/to/dnase/packbited --rna_quants /path/to/rna_quants_1630tf.joblib\n```\nFor other inputs, such as hyperparameters, refer\n```bash\npython resnet.py --help\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999719887658387,
      "result": {
        "original_header": "Stage 2",
        "type": "Text_excerpt",
        "value": "To start training any of these models (say, ResNet, with mean), from the `model_zoo/stage2` directory:\n```bash\npython simple.py -cp /path/to/stage2/checkpoint/dir --dnase /path/to/dnase/packbited --rna_quants /path/to/rna_quants_1630tf.joblib --stage1_file ../stage1/resnet.py --stage1_pretrained_model_path /path/to/stage1/checkpoint/dir --with_mean 1\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8643434264486779,
      "result": {
        "original_header": "Stage 1",
        "type": "Text_excerpt",
        "value": "To start training any of these models (say, ResNet), from the `model_zoo/stage1` directory:\n```bash\npython resnet.py -cp /path/to/stage1/checkpoint/dir --dnase /path/to/dnase/packbited --rna_quants /path/to/rna_quants_1630tf.joblib\n```\nFor other inputs, such as hyperparameters, refer\n```bash\npython resnet.py --help\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8424330698639337,
      "result": {
        "original_header": "Stage 2",
        "type": "Text_excerpt",
        "value": "To start training any of these models (say, ResNet, with mean), from the `model_zoo/stage2` directory:\n```bash\npython simple.py -cp /path/to/stage2/checkpoint/dir --dnase /path/to/dnase/packbited --rna_quants /path/to/rna_quants_1630tf.joblib --stage1_file ../stage1/resnet.py --stage1_pretrained_model_path /path/to/stage1/checkpoint/dir --with_mean 1\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kundajelab/ChromDragoNN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chromatin-accessibiity, deep-learning, epigenetics, gene-regulation, genomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Kundaje Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ChromDragoNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "kundajelab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 401340,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 155487,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/ChromDragoNN/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 03:08:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 44
      },
      "technique": "GitHub_API"
    }
  ]
}