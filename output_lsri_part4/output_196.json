{
  "application_domain": [
    {
      "confidence": 22.77,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 7.21,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CYHSM/DeepInsight"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-12-11T12:01:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-06T03:11:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A general framework for interpreting wide-band neural activity"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9971441837195303,
      "result": {
        "original_header": "DeepInsight: A general framework for interpreting wide-band neural activity",
        "type": "Text_excerpt",
        "value": "DeepInsight is a toolbox for the analysis and interpretation of wide-band neural activity and can be applied on unsorted neural data. This means the traditional step of spike-sorting can be omitted and the raw data can be used directly as input, providing a more objective way of measuring decoding performance. \n![Model Architecture](media/model_architecture.png)\n \n"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9735545867755744,
      "result": {
        "original_header": "Google Colaboratory",
        "type": "Text_excerpt",
        "value": "We created a Colab notebook to showcase how to analyse your own two-photon calcium imaging data. We provide the raw as well as the preprocessed dataset as downloads if you just want to train the model. You can replace the code which loads the traces with your own data handling and directly train it to decode your behaviour or stimuli in the browser.  \n"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CYHSM/DeepInsight/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/notebooks/deepinsight_calcium_example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/notebooks/deepinsight_calcium_example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/notebooks/static/calcium_example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/notebooks/static/calcium_example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/notebooks/static/ephys_example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/notebooks/static/ephys_example.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 32
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CYHSM/DeepInsight/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CYHSM/DeepInsight"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepInsight: A general framework for interpreting wide-band neural activity"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/media/model_architecture.png"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/media/colab_walkthrough.gif"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/media/decoding_error.gif"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "DeepInsight: A general framework for interpreting wide-band neural activity"
        ],
        "type": "Text_excerpt",
        "value": "Install DeepInsight with the following command (Installation time ~ 2 minutes, depending on internet speed):\n```\npip install git+https://github.com/CYHSM/DeepInsight.git\n```\n\nIf you prefer to use DeepInsight from within your browser, we provide Colab-Notebooks to guide you through how to use DeepInsight with your own data. \n\n- How to use DeepInsight with two-photon calcium imaging data [![Two-Photon Imaging](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/11RXK7JIgVM8Zy9M7xEtt1k62i3JXbZLU)\n\n- How to use DeepInsight with electrophysiology data [![Ephys Data](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1h3RYr3r0Zs2k6I53bTiYRq_6VQo38iMP)\n"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CYHSM/DeepInsight/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Markus Frey\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepInsight"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "CYHSM"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 175969,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 70291,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Hardware requirements",
        "parent_header": [
          "DeepInsight: A general framework for interpreting wide-band neural activity",
          "System Requirements"
        ],
        "type": "Text_excerpt",
        "value": "For preprocessing raw data with a high sampling rate it is recommended to at least use 4 parallel cores. For calcium recordings one core is enough. For training the model it is recommended to use a GPU with at least 6Gb of memory. \n"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Software requirements",
        "parent_header": [
          "DeepInsight: A general framework for interpreting wide-band neural activity",
          "System Requirements"
        ],
        "type": "Text_excerpt",
        "value": "The following python dependencies are being automatically installed when installing DeepInsight (specified in requirements.txt):\n```\ntensorflow-gpu (2.1.0)\nnumpy (1.18.1)\npandas (1.0.1)\njoblib (0.14.1)\nseaborn (0.10.0)\nmatplotlib (3.1.3)\nh5py (2.10.0)\nscipy (1.4.1)\nipython (7.12.0)\n```\nVersion in parentheses indicate the ones used for testing the framework. Its extensively tested on Linux 16.04 but should run on all OS (Windows, Mac, Linux) supporting a Python version >3.6 and pip. It is recommended to install the framework and dependencies in a virtual environment (e.g. conda). "
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:27:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 156
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Usage",
        "parent_header": [
          "DeepInsight: A general framework for interpreting wide-band neural activity"
        ],
        "type": "Text_excerpt",
        "value": "```python\nimport deepinsight\n\n# Load your electrophysiological or calcium-imaging data\n(raw_data,\n raw_timestamps,\n output,\n output_timestamps,\n info) = deepinsight.util.tetrode.read_tetrode_data(fp_raw_file)\n\n# Transform raw data to frequency domain\ndeepinsight.preprocess.preprocess_input(fp_deepinsight, raw_data, sampling_rate=info['sampling_rate'],\n                                        channels=info['channels'])\n\n# Prepare outputs\ndeepinsight.util.tetrode.preprocess_output(fp_deepinsight, raw_timestamps, output, output_timestamps,\n                                           sampling_rate=info['sampling_rate'])\n\n# Train the model\ndeepinsight.train.run_from_path(fp_deepinsight, loss_functions, loss_weights)\n\n# Get loss and shuffled loss for influence plot\nlosses, output_predictions, indices = deepinsight.analyse.get_model_loss(fp_deepinsight, stepsize=10)\nshuffled_losses = deepinsight.analyse.get_shuffled_model_loss(fp_deepinsight, axis=1, stepsize=10)\n\n# Plot influence across behaviours\ndeepinsight.visualize.plot_residuals(fp_deepinsight, frequency_spacing=2)\n```\n\nSee also the [jupyter notebook](notebooks/static/ephys_example.ipynb) for a full example for decoding behaviours from tetrode CA1 recordings. Note that the static notebook does not include interactive plots as shown in the above Colab notebook. The expected run time for a high sampling rate dataset (e.g. tetrode recordings) is highly dependend on the number of channels and duration of experiment. Preprocessing can take up to one day for a 128 channel - 1 hour experiment, while training the model takes between 6 and 12 hours. For calcium recordings the preprocessing time is shrunk down to minutes. \n\nFollowing Video shows the performance of the model trained on position (left), head direction (top right) and speed (bottom right):\n![Model Performance](media/decoding_error.gif)\n"
      },
      "source": "https://raw.githubusercontent.com/CYHSM/DeepInsight/master/README.md",
      "technique": "header_analysis"
    }
  ]
}