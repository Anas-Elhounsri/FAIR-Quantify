{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/conbase/conbase"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-02-11T16:06:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-17T20:01:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Conbase: a software for unsupervised discovery of clonal somatic mutations in single cells through read phasing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9962494937412834,
      "result": {
        "original_header": "Conbase: a software for unsupervised discovery of clonal somatic mutations in single cells through read phasing",
        "type": "Text_excerpt",
        "value": "Conbase is a software for unsupervised discovery of clonal somatic mutations in single DNA sequencing data from whole genome amplified single cells. Conbase leverages phased read data from multiple samples in a dataset to achieve increased confidence in somatic variant calls and genotype predictions.\nhttps://doi.org/10.1186/s13059-019-1673-8 \n"
      },
      "source": "https://raw.githubusercontent.com/conbase/conbase/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8785135492447106,
      "result": {
        "original_header": "Optional Preprocessing",
        "type": "Text_excerpt",
        "value": "\t\"bulk_ref_limit\" : 0.9,  #Definition of a variant site, where the remaining fraction supports a non-reference base\n    \"snp_nr_limit\" : 10, #The maximum number of variant sites per genomic window\n    \"snp_dist_limit\" : 1000, #Genomic window size (bp) \n"
      },
      "source": "https://raw.githubusercontent.com/conbase/conbase/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/conbase/conbase/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/conbase/conbase/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "conbase/conbase"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/conbase/conbase/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999832952095504,
      "result": {
        "original_header": "Implementation by",
        "type": "Text_excerpt",
        "value": "Marie Kindblom (https://github.com/mkindblom)\nEzeddin Al Hakim (https://github.com/ezeddin) \n"
      },
      "source": "https://raw.githubusercontent.com/conbase/conbase/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8597352593291048,
      "result": {
        "original_header": "Optional Preprocessing",
        "type": "Text_excerpt",
        "value": "Misc.py \n    python3 Misc.py --duplicate_regions <prefiltered germline SNV file> <bulk bam> <reference> <number of threads> <output> \nIn Params.py, adjust: \nInput format prefiltered germline SNV file \n"
      },
      "source": "https://raw.githubusercontent.com/conbase/conbase/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/conbase/conbase/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, bioinformatics-tool, single-cell-analysis, single-cell-genomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2016-2017 http://github.com/conbase Ezeddin Al Hakim, Marie Kindblom & Joanna H\u00e5rd\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/conbase/conbase/master/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n"
      },
      "source": "https://raw.githubusercontent.com/conbase/conbase/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/conbase/conbase/master/conbase_logo.png"
      },
      "source": "https://raw.githubusercontent.com/conbase/conbase/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "conbase"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "conbase"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 63577,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 2656,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 840,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/conbase/conbase/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "conbase",
          "type": "User"
        },
        "date_created": "2018-06-14T18:18:05Z",
        "date_published": "2018-06-14T18:21:58Z",
        "description": "Abstract:\r\nConbase is a software for identification of somatic mutations in single cell DNA sequencing data exhibiting high rates of allelic dropout and at low read depth. Conbase leverages data from multiple samples in a dataset, and utilizes read phasing to call somatic single nucleotide variants and to accurately predict genotypes in whole genome amplified single cells.\r\n",
        "html_url": "https://github.com/conbase/conbase/releases/tag/v1.0",
        "name": "Conbase: a software for unsupervised discovery of clonal somatic mutations in single cells through read phasing",
        "release_id": 11487663,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/conbase/conbase/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/conbase/conbase/releases/11487663",
        "value": "https://api.github.com/repos/conbase/conbase/releases/11487663",
        "zipball_url": "https://api.github.com/repos/conbase/conbase/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run Conbase",
        "type": "Text_excerpt",
        "value": "Stats.py:   \n\n    python3 bin/Main.py stats <germline SNV file> <bam path file> <reference> <number of threads> <output>\n\n\nAnalyze.py:\n\n    python3 bin/Main.py analyze <output.json> <output>\n\n\nInput format bam path file\n\n\n    NAME\tPATH\n    BULK\tdata/bulk.bam\n    cell_1\tdata/cell_1.bam\n    cell_2\tdata/cell_2.bam\n    .\n    .\n\n\nInput format germline SNV file\n\n\n    CHROM\tPOS\tREF\tALT\n    1\t23142496\tC\tA\n    .\n    .\n\n\nIn Params.py, optionally adjust:\n\n\t################# Stats #################\n\tstats_params = {  \n\n\t\"fragment_length\" : 650, #Insert size of sequencing library  \n\n\t\"mapping_quality\" : 20, #Required mapping quality of analyzed reads  \n\n\t\"base_quality\" : 20, #Required base quality of analyzed bases\n\n\t\"dp_limit\" : 5, #Minimum read depth  \n\n\t\"alt_ratio_limit\" : 0.2, #Minimum variant allele fraction  \n\n\t\"sample_vote_limit\" : 2, #Minimum number of samples required to support a variant\n\n\t\"vote_ratio_limit\" : 0.9, #Minimum fraction of samples required to support the same base\n\n\t\"snp_read_limit\" : 1, #Minimun number of reads covering an SNP for a given sample to regard its reads (and voting) for the SNP\n\n\t\"indel_ratio\" : 0.05, #The fraction of reads in the entire dataset allowed to contain an indel  \n\n\t\"bulk_ref_limit\" : 1,  #The fraction of reads required to support the reference base in the unamplified bulk sample  \n\n\t\"acceptable_bases\" : ['A', 'C', 'G', 'T'],\n\t}  \n\n\n\n\n    ############### Analyze #################  \n\tanalyze_params = {\n\n\t# Genotyping is based on phased read concordance determined by analyzing tuples containing base observations in somatic variant sites and germline SNV sites present in the same read or read pair\n   \n    # Please note the following annotations: a heterozygous site can be of type = {RR, AA} or {RA, AR} and a homozygous site is always {RR, RA} where R is the reference base and A the alternative. Any of these three combinations is a combination of two tuples, and will be referred to as a \"tuple pair\" below.\n\n\t\"dp_tuple_limit\" : 5, #Minimum number of phased reads  \n\n\t\"snp_total_vote\" : 0.9, #Fraction of phased germline SNVs required to contribute to genotype prediction  \n\n\t\"snp_vote_ratio\" : 0.9, #Fraction of phased germline SNVs required to support the same genotype prediction  \n\n\t\"tuples_ratio\" : 0.9, #The minimal ratio required of the total that is made out of a given tuple pair  \n\n\t\"tuples_internal_ratio\" : 0.1, #The minimal internal ratio required for a tuple pair  \n\n\t\"tuples_c2_external_error_ratio\" : 0.1, # 1-tuples_ratio  \n\n    # Tuple\n\t\"tuple_group_ratio\" : 0.01, #The max \"error\" allowed between two groups of tuplepairs for a sample to vote for a winning tuplepair  \n\n\t\"win_internal_group_ratio\" : 0.1, #Minimal internal ratio for a winning tuplepair in a voting sample  \n\n\t\"sample_tuple_vote_limit\" : 2, #the minimum number of samples that needs to vote for a winning tuple pair  \n\n\t\"vote_tuple_ratio_limit\" : 0.9, #the minimum percentage of votes that the winning tuple pair needs to acquire\n\n\n\t# Genotype prediction in samples with low read depth\n    \"a1_lower_limit\" : 2, #minimum depth of alternative alleles (site only passes if conflicting_upper_limit and c3_conflicting_upper_limit also holds)  \n\n    \"c3_homo_limit\" : 2, #min depth of tuple type \"RA\" required when the winning tuplepair is {AA, RR} for the site to be regarded unmutated  \n\n    \"c3_a1_limit\" : 2, #min depth for an alternative base in the case of no support of a mutated site\n\n\n\t# Filtering variant sites\n\t\"conflicting_upper_limit\" : 0, #The number of samples with predicted genotypes allowed to display support for discordant alleles  \n\n\t\"c3_conflicting_upper_limit\" : 0, #The number of samples with inferred genotypes allowed to display support for discordant alleles  \n\n\t\"homo_error_allowed\" : 0, #The number of reads allowed to support a non-reference base in a sample predicted to be unmutated  \n\n\t\"bulk_dp_interval\" : (15,65), #The minimal and maximal read depth required in the unamplified bulk sample in a predicted somatic variant site \n\n\n\t}\n\n\t################ Misc ##################\n\tmisc_params = {\n\n\t\"mut_nr_limit\" : 1, #Maximum number of somatic variants per genomic window\n\t\"mut_dist_limit\" : 1000, #Genomic window size (bp)\n\n\n\n\t# Defining output to display\n\t# MIN_HET : the minimum number of samples required to be predicted mutated\n\t# MIN_HOM : the minimum number of samples required to be predicted unmutated\n\t# MAX_HET : the maximum number of samples required to be predicted mutated\n    # MAX_HOM : the maximum number of samples required to be predicted unmutated\n\n\t}\n\ttrees = {\n\t    'tree1':{\n\t        'samples':['cell_1','cell_2','cell_3','cell_4','cell_5','cell_6','cell_7','cell_8','cell_9','cell_10'],\n\t        'params': { 'MIN_HET': 2, 'MIN_HOM': 1, 'MAX_HET': 9, 'MAX_HOM': 8}\n\t    },\n\t    'all':{\n\t        'samples':['cell_1','cell_2','cell_3','cell_4','cell_5','cell_6','cell_7','cell_8','cell_9','cell_10'],\n\t        'params': { 'MIN_HET': 2, 'MIN_HOM': 1, 'MAX_HET': 9, 'MAX_HOM': 8}\n\t    }\n\t}\n\n\n\n\t# Conbase can also be run in a supervised mode, to parse variant calls enriched in a defined population\n\n\n\t}\n\ttrees = {\n\t    'tree1':{\n\t        'samples':['cell_1','cell_2','cell_3','cell_4','cell_5'],\n\t        'params': { 'MIN_HET': 2, 'MIN_HOM': 1, 'MAX_HET': 4, 'MAX_HOM': 3}\n\t    },\n\t    'tree2':{\n\t        'samples':['cell_6','cell_7','cell_8','cell_9','cell_10'],\n\t        'params': { 'MIN_HET': 0, 'MIN_HOM': 0, 'MAX_HET': 0, 'MAX_HOM': 5}\n\t    },\n\t    'all':{\n\t        'samples':['cell_1','cell_2','cell_3','cell_4','cell_5','cell_6','cell_7','cell_8','cell_9','cell_10'],\n\t        'params': { 'MIN_HET': 2, 'MIN_HOM': 1, 'MAX_HET': 4, 'MAX_HOM': 8}\n\t    }\n\t}\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/conbase/conbase/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:48:13",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}