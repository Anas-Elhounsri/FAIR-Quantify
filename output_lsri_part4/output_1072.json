{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UoS-HGIG/GenePy"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-18T13:00:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-08T15:57:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GenePy v1.2 a score for the analysis of next generation sequencing data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9796081427457533,
      "result": {
        "original_header": "NEW VERSION AVAILABLE! Please utilise https://github.com/UoS-HGIG/GenePy-1.4",
        "type": "Text_excerpt",
        "value": "\nGenePy v1.2 a score for the analysis of next generation sequencing data. \nThe current (1.2) version of GenePy has the following improvements:\n- GenePy can include variants from non-coding regions\n- annotation no longer limited to non-synonymous single-nucleotide variants (dbnsfp33a)\n- annotation is based on whole genome metrics (CADD 1.3, DANN, GWAVA, EIGEN and REVEL) for all missense variants\n- population frequencies are now obtained from gnomAD instead of 1000 Genomes Prj.\n- annotations are based on hg19 but can be switched to HG38 when available from ANNOVAR \n*For historic reference the older GenePy version is available, but support is no longer given.*\n \n"
      },
      "source": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UoS-HGIG/GenePy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/UoS-HGIG/GenePy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "UoS-HGIG/GenePy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GenePy"
      },
      "source": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/GENEPY_1.2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/GenePy_0.1-obsolete/GenePy_0.1.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prepare output folders/dependecies",
        "parent_header": [
          "GenePy",
          "How to run GenePy"
        ],
        "type": "Text_excerpt",
        "value": "make new folders in your current directory to store raw GenePy score files\n```\nmkdir CADD13_RawScore Eigen GWAVA_region_score GWAVA_tss_score dann REVEL\n```\nTake the header from the ALL_genepy.meta file and stores it in a newly created header file\n```\ngrep \"^Chr\" ALL_genepy.meta> header\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/UoS-HGIG/GenePy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GenePy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "UoS-HGIG"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 17917,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3421,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "GenePy requirements",
        "parent_header": [
          "GenePy"
        ],
        "type": "Text_excerpt",
        "value": "* A (multi)sample VCF file (can accept compressed vcf.gz)\n* List of genes for which generate GenePy scores. (gene.list)\n* Vcftools\n* Annovar\n* Python 2.7.x\n"
      },
      "source": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run GenePy",
        "parent_header": [
          "GenePy"
        ],
        "type": "Text_excerpt",
        "value": "Before running GenePy, we need to annotate SNVs and generate a GenePy-ready file (ALL_genepy.meta)\n\nThe first required input to GenePy is a multi-sample VCF (GENOTYPED_ALL.vcf.gz in this example). \n\nWe recommend the following filters to improve score consistency based on Tom et al. (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5525370/pdf/12859_2017_Article_1756.pdf ).\n```\nvcftools --gzvcf GENOTYPED_ALL.vcf.gz --minGQ 20 --recode --out GENO_FILT_GQ20 # Set GQ<20 as missing ( retain high confidence calls)\nvcftools --vcf GENO_FILT_GQ20.vcf --max-missing 0.7 --out filtered # Remove SNVs with missing rate >30%\nvcftools --vcf filtered.recode.vcf --min-alleles 2 --max-alleles 2 # Keep only Biallelic SNVs \n````"
      },
      "source": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Make annovar-ready file:",
        "parent_header": [
          "GenePy",
          "How to run GenePy"
        ],
        "type": "Text_excerpt",
        "value": "```\n./annovar/convert2annovar.pl \\\n\t-format vcf4 FINAL_GQ20M30_BIALL.recode.vcf.gz \\\n\t-outfile ALL_genepy.input \\\n\t-allsample \\\n\t-withfreq \\\n\t-include 2>annovar.log\n```"
      },
      "source": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Annotate against refGene,gnomad_exome,cadd13,eigen,revel,gwava,dann using Annovar",
        "parent_header": [
          "GenePy",
          "How to run GenePy"
        ],
        "type": "Text_excerpt",
        "value": "```\n./annovar/table_annovar.pl \\\n        ALL_genepy.input \\\n        ./annovar/humandb/ \\\n        -buildver hg19 \\\n        -out ALL_genepy \\\n        -remove \\\n        -protocol refGene,gnomad_exome,cadd13,eigen,revel,gwava,dann \\\n        -operation g,f,f,f,f,f,f \\\n        --thread 40 \\\n        --maxgenethread 40 \\\n        -nastring . >>annovar.log\n```"
      },
      "source": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Combine Genotypes and annotations",
        "parent_header": [
          "GenePy",
          "How to run GenePy"
        ],
        "type": "Text_excerpt",
        "value": "```\ncut -f 18- ALL_genepy.input > a1\nzgrep '^#CHR' FINAL_GQ20M30_BIALL.recode.vcf.gz | cut -f 10- > b1\ncat b1 a1 > ALL_temp\npaste ALL_genepy.hg19_multianno.txt ALL_temp > ALL_genepy.meta\nrm a1 b1 ALL_temp\n```"
      },
      "source": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compute GenePy scores",
        "parent_header": [
          "GenePy",
          "How to run GenePy"
        ],
        "type": "Text_excerpt",
        "value": "Once the ALL_genepy.meta file is created, GenePy_1.2.sh can be run by simply iterating through the list of deisred genes. Be aware, the make_scores_mat_5.py file **must** be in the same directory of GenePy_1.2.sh.\n\n```\nwhile read gene:\ndo\nsh GenePy_1.2.sh $gene ;\ndone< gene.list\n\n````\n\nWe strongly reccomend to combine GenePy output files (one per gene) into a single matrix where each column is a gene and each row is a sample.\n\nIn order to compare/combine GenePy scores across genes, normalisation by length is required. Length depends on the BED file used to generate the VCF file. To correct by gene length please refer to extract_gene_size.py script (requires GenePy scores formatted in a matrix as previously explained).\n\nWe also strongly reccomend to normalise GenePy scores by GDI score (http://lab.rockefeller.edu/casanova/GDI) using scirpt gdi_scale.py\n"
      },
      "source": "https://raw.githubusercontent.com/UoS-HGIG/GenePy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:52:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}