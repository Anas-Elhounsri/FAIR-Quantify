{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Gene2vec"
        ],
        "type": "Text_excerpt",
        "value": "If you use these codes in your publications, please cite this [paper](https://doi.org/10.1186/s12864-018-5370-x):\n\n```\n@article{2018gene2vec,\n  title=\"Gene2vec: distributed representation of genes based on co-expression\",\n  journal=\"BMC Genomics\",\n  year=\"2019\",\n  month=\"Feb\",\n  day=\"04\",\n  volume=\"20\",\n  number=\"1\",\n  pages=\"82\"author={Du, Jingcheng and Jia, Peilin and Dai, YuLin and Tao, Cui and Zhao, Zhongming and Zhi, Degui},\n  issn=\"1471-2164\",\n  doi=\"10.1186/s12864-018-5370-x\"\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jingcheng-du/Gene2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-05-02T20:51:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-11-01T14:54:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gene2Vec: Distributed Representation of Genes Based on Co-Expression"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Gene2vec"
        ],
        "type": "Text_excerpt",
        "value": "Gene2Vec is a distributed representation of genes based on co-expression. From a pure data-driven fashion, we trained a \n200-dimension vector representation of all human genes, using gene co-expression patterns in 984 data sets from the GEO databases.\n\nIn this repository, we provided the relevent codes as well as pre-trained gene2vec files."
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8142277901948473,
      "result": {
        "original_header": "Gene2vec",
        "type": "Text_excerpt",
        "value": "We provided the evaluation script using target function proposed in the manuscript, as well as a gene2vec file in word2vec format.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jingcheng-du/Gene2vec/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jingcheng-du/Gene2vec/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jingcheng-du/Gene2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gene2vec"
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "Gene2vec",
          "Installing Gene2vec"
        ],
        "type": "Text_excerpt",
        "value": "To download the codes, please do:\n\n```\ngit clone https://github.com/jingcheng-du/Gene2vec.git\ncd Gene2vec/\npip install -r requirements.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8394686054927528,
      "result": {
        "original_header": "Gene2vec",
        "type": "Text_excerpt",
        "value": "**\\*\\*\\*\\*\\* New: August 9th, 2019 update \\*\\*\\*\\*\\*** \n"
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jingcheng-du/Gene2vec/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gene-embedding, gene-gene-interaction, gene2vec, multilayer-perceptron-network, tensorflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Jingcheng Du\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gene2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jingcheng-du"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 29954,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Gene2vec",
          "Installing Gene2vec"
        ],
        "type": "Text_excerpt",
        "value": "Gene2vec relies on Python 3.6, TensorFlow 1.6+, gensim 3.4.0, numpy 1.14.0+, and matplotlib 2.1.2+\n\nThe Multicore t-SNE relies on a [GitHub repository](https://github.com/DmitryUlyanov/Multicore-TSNE).\nPlease follow their installation instruction.\n"
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:10:27",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 107
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "gene2vec.py",
        "parent_header": [
          "Gene2vec",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "This script takes gene co-expression data as the input and output binary gene2vec file. It relies on gensim Word2vec module.\nThe detailed parameters for Word2vec module can be seen in their [document](https://radimrehurek.com/gensim/models/word2vec.html).\n\nPlease specify data directory, embedding output directory and data file ending pattern. You can direct run the script using the following command\n(txt means that the names of your data files end with \"txt\"):\n```\npython gene2vec.py data_directory output_directory txt\n```\nFor co-expression data files, each line should have a pair of genes that is separated by a space.\nThe format of the files should be like:\n```\nTOX4 ZNF146\nTP53BP2 USP12\nTP53BP2 YRDC\n```\n\nBy default, the output will be in both in binary format and txt format. The binary format\ncan be access using gensim module. For txt format, each line starts with the gene name and is followed by the vector.\nIt can be opened by the text editor.\n\nTo speed up the training, please make sure you have a C compiler before installing gensim, see this\n[article](https://rare-technologies.com/word2vec-in-python-part-two-optimizing/).\n"
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "tsne_multi.py",
        "parent_header": [
          "Gene2vec",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "We provide this script to map the high dimensional gene2vec to 2-D array.\nIt relies on on a Parallel t-SNE implementation [GitHub repository](https://github.com/DmitryUlyanov/Multicore-TSNE).\n\nIt takes the gene2vec txt file as the input and generates two separate files:\na label file that each line is the gene name and a data file that each line has 2-D vector for the corresponding gene.\n\nWe implement a mutlipe-thread tsne training here. You can specify a set of iterations you'd like to train in parallel:\n```\np = Pool(6)\np.map(TSNEWoker, [\"100\",\"5000\",\"10000\",\"20000\",\"50000\",\"100000\"])\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GGIPNN_Classification.py",
        "parent_header": [
          "Gene2vec",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "GGIPNN stands for gene-gene interaction predictor neural network. Given the training, validation and testing datasets for gene-gene interaction,\nthis script will a leverage multilayer perceptron (defined in GGIPNN.py) to predict gene-gene interaction and generate the AUC score.\n\nEach dataset (training, validation and testing) should have two files:\n\n1. a text file that each line has the names of the gene pair:\n```\nGPNMB BAP1\nGPR34 CARD16\nELF5 TGFB2\nLILRB2 NCR2\n```\n\n2. a label file that each line has either 1 (the corresponding gene pair has the gene-gene interaction) or 0 (doesn't have the gene-gene interaction):\n```\n0\n0\n1\n1\n```\n\nYou can specify whether to initialize the embedding layer using the pre-trained gene2vec or initialize the embedding layer randomly.\nYou can also specify whether the embedding layer is trainable during the training process. Just to choose True or False here:\n```\ntf.flags.DEFINE_boolean(\"use_pre_trained_gene2vec\", True, \"use_pre_trained_gene2vec\")\ntf.flags.DEFINE_boolean(\"train_embedding\", False, \"train_embedding\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GTRxFigure.py",
        "parent_header": [
          "Gene2vec",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "This script takes gene2vec tsne files (label and data) and tissue-specific genes expression files as the input\nand generates tissues-specific genes experssion maps.\n\nThe tissue-specific genes expression file should follow the following format. Each line starts with the gene name and followed by the z score:\n```\nATRX\t0.598962527411\nTCOF1\t-0.264690317639\nNSRP1\t0.716336803551\nOPA1\t0.223145913678\nRHEB\t0.978021549909\nSEMA5B\t-0.110593590242\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jingcheng-du/Gene2vec/master/README.md",
      "technique": "header_analysis"
    }
  ]
}