{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BioinformaticsToolsmith/Look4TRs"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-10-19T22:08:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-16T20:31:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Look4TRs: A de-novo tool for detecting simple tandem repeats using self-supervised hidden Markov models"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8070169727488761,
      "result": {
        "original_header": "Splitting fasta files",
        "type": "Text_excerpt",
        "value": "Then, call Look4TRs using `OutputDirectory` as the input directory from which to read .fa files (using the --adr parameter)\n \n"
      },
      "source": "https://raw.githubusercontent.com/TulsaBioinformaticsToolsmith/Look4TRs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9245081940646128,
      "result": {
        "original_header": "REQUIRED OPTIONS",
        "type": "Text_excerpt",
        "value": "    Takes the address of the directory of the sequences to be\n    scanned. Each file must be a FASTA file and end with .fa \n"
      },
      "source": "https://raw.githubusercontent.com/TulsaBioinformaticsToolsmith/Look4TRs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9146342716692439,
      "result": {
        "original_header": "PARAMETER OPTIONS",
        "type": "Text_excerpt",
        "value": "    Takes the address of the directory of the training files. \n    The minimum k-mer length analyzed (must be less than or equal\n    to the maximum k-mer length).\n    This is used by the scoring module.\n    Default is 4. \n    The maximum k-mer length analyzed (must be greater than or equal\n    to the minimum k-mer length).\n    This is used by the scoring module.\n    Default is 6. \n    The minimum allowed region size for predictions.\n    (Must be greater than 0)\n    Default is 20. \n    The number of multiples of --int to use. (must be positive)\n    This will allow Look4TRs to auto-callibrate the scoring module.\n    Default is 4. \n    the upper bound for the number of hmm states used\n    (must be positive, even, and higher than or equal to --hmm-states-lower)\n    Default is 12. \n    The lower bound for the number of HMM states used\n    (must be postive, even, and lower than or equal to --hmm-states-upper)\n    Default is 6. \n\n--seg <integer> \n    Determines the size of the training chromosome (must be positive)\n    Default is 3,000,000 \n    The minimum size of the motifs used to generate the training Chromosome.\n    (must be at least 1 and less than or equal to maxm)\n    Default is 1. \n    The maximum size of the motifs used to generate the training Chromosome.\n    (must be at least 1 and bigger than or equal to minm)\n    Default is 10. \n    The markov order used to generate the training chromosome.\n    (must not be negative)\n    Default is 0. \n     Enable ('1') or disable ('0') the motif discovery feature.\n     Default is 1. \n    The minimum allowed identity score between the exact repeat and a candidate (Must be 0 or greater).\n    Default is 50. \n\n--save-data <directory> \n    The hmm file that is produced from a previous run that used --save-data.\n    This HMM will be loaded, instead of training one.\n    Note: If --hmm, --glm, or --chmp is used, all of them must be used! \n    The glm file that is produced from a previous run that used --save-data.\n    This GLM will be loaded, instead of training one.\n    Note: If --hmm, --glm, or --chmp is used, all of them must be used! \n    The file that is produced from a previous run that used --save-data.\n    This will be used for parameters used from training the HMM and GLM.\n    Note: If --hmm, --glm, or --chmp is used, all of them must be used! \n\n--get-testing-data <directory> \n    The numeber of HMM states (must be positive and even) \n    Number of threads.\n    Default is the total number of cores detect on the user's computer.\n \n"
      },
      "source": "https://raw.githubusercontent.com/TulsaBioinformaticsToolsmith/Look4TRs/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TulsaBioinformaticsToolsmith/Look4TRs/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BioinformaticsToolsmith/Look4TRs/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BioinformaticsToolsmith/Look4TRs"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/TulsaBioinformaticsToolsmith/Look4TRs/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9465851014154053,
      "result": {
        "original_header": "Compiling",
        "type": "Text_excerpt",
        "value": "GNU g++-7 must be installed.\nIn order to compile Look4TRs, run the following commands \n> cd Look4TRs \n> mkdir bin \n> cd bin \n> cmake .. \n"
      },
      "source": "https://raw.githubusercontent.com/TulsaBioinformaticsToolsmith/Look4TRs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9664266042648372,
      "result": {
        "original_header": "REQUIRED OPTIONS",
        "type": "Text_excerpt",
        "value": "NOTE: After supplying the required options, either provide a single default\n option, or provide all of the parameter options!\n \n"
      },
      "source": "https://raw.githubusercontent.com/TulsaBioinformaticsToolsmith/Look4TRs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8413715129579472,
      "result": {
        "original_header": "PARAMETER OPTIONS",
        "type": "Text_excerpt",
        "value": "--motif-location-file <file.bed> \n\n--save-data <directory> \n\n--get-testing-data <directory> \n"
      },
      "source": "https://raw.githubusercontent.com/TulsaBioinformaticsToolsmith/Look4TRs/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.847795413404243,
      "result": {
        "original_header": "PARAMETER OPTIONS",
        "type": "Text_excerpt",
        "value": "--motif-location-file <file.bed> \n--motif-fa-file <file.fa> \n\n--save-data <directory> \n--hmm <file> \n--glm <file> \n--chmp <file> \n\n--get-testing-data <directory> \n"
      },
      "source": "https://raw.githubusercontent.com/TulsaBioinformaticsToolsmith/Look4TRs/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BioinformaticsToolsmith/Look4TRs/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Look4TRs"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "BioinformaticsToolsmith"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 345291,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 2331,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 1445,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TulsaBioinformaticsToolsmith/Look4TRs/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "type": "Text_excerpt",
        "value": "To run Look4TRs on a genome, you'll need two folders consisting of the input directory and output directory.\nThe input directory should contain .fa files.\nRun the following command to obtain microsatellites.\n\n> Look4TRs --adr Input --out Output --default\n\n\nIn order to receive additional help, run one of the following commands\n\n> Look4TRs\n\n> Look4TRs --help\n\n> Look4TRs -h\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/TulsaBioinformaticsToolsmith/Look4TRs/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:32:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}