{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Using your own references",
        "parent_header": [
          "MiGMAP: mapper for full-length T- and B-cell repertoire sequencing",
          "Execution"
        ],
        "type": "Text_excerpt",
        "value": "It is possible to use your own references with MiGMAP, given they are in the same format as [internal reference file](https://github.com/mikessh/migmap/blob/master/src/main/resources/segments.txt). Note that you do **not** need to set the reference points, just put ``-1`` in corresponding column and run \n\n```bash\njava -cp migmap.jar com.antigenomics.migmap.AnnotateSegments -S mouse -R TRB my_segments.txt my_segments_with_refs.txt\n```\n\nHere you are required to set the receptor(s) (``-R``) and species (``-S``), run the command with ``-h`` to see the list of available options.\nChoose the closest receptor(s) and species, however don't worry as the Variable segment amino acid sequences are quite homologous between species and the markup should run fine in most cases.\nNext, run MiGMAP with ``--custom-database my_segments_with_refs.txt`` selecting same receptor(s) and species as before.\n\nTo convert references in IMGT format into MIGEC/MiGMAP reference format use [imgtparser](https://github.com/antigenomics/imgtparser).\n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mikessh/migmap"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-05-24T15:40:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-11-04T06:17:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HTS-compatible wrapper for IgBlast V-(D)-J mapping tool"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9924472094102077,
      "result": {
        "original_header": "MiGMAP: mapper for full-length T- and B-cell repertoire sequencing",
        "type": "Text_excerpt",
        "value": "In a nutshell, this software is a smart wrapper for [IgBlast](http://www.ncbi.nlm.nih.gov/igblast/igblast.cgi) V-(D)-J mapping tool designed to facilitate analysis immune receptor libraries profiled using high-throughput sequencing. This package includes additional experimental modules for contig assembly, error correction and immunoglobulin lineage tree construction. \nThe software is distributed as an executable JAR file and a data bundle. \n**NOTE** Last IgBlastWrp version is available [here](https://github.com/mikessh/migmap/releases/tag/v0.6) (source and readme are available [here](https://github.com/mikessh/migmap/tree/v0.6)), this is a completely re-written version of original software. \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9594596171605073,
      "result": {
        "original_header": "Motivation",
        "type": "Text_excerpt",
        "value": "IgBlast is an excellent  of V-(D)-J mapping tool able to correctly map even severely hypermutated antibody variants. While being a gold standard, the following limitations of IgBlast v1.4.0 have driven MIGMAP development: \n- It doesn't extract sequence of CDR3 region directly, neither provide coordinates for CDR3 region in reads. It reports reference Cys residue of Variable segment and Variable segment end in CDR3, but not Phe/Trp residue of J segment that marks the end of CDR3 \n- Output is not straightforward to parse and summarize to a readable clonotype abundance table containing CDR3 sequences, segment assignments and list of somatic hypermutations \n- It is somewhat hard to make it running with a custom segment reference and species other than human and mouse \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9501412018107169,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- Use a comprehensive V/D/J segment database for human, mouse, rat, rabbit and rhesus monkey. \n- Speed-up by piping reads to IgBlast and parsing the output in parallel as the built-in ``--num-threads`` argument doesn't offer much optimization. \n- Assemble clonotypes, apply various filtering options such as quality filtering for CDR3 N-regions and mutations, non-coding sequence filtering, etc. \n- Reporting mutations (including indels) in V, D and J segments, grouped by CDR/FW region, both on nucleotide and amino-acid level. \n- Frequency and parsimony-based error correction. \n- Includes a post-analysis module for quantification of somatic hypermutations and building clonotype trees, output compatible with [VDJtools](https://github.com/mikessh/vdjtools) post-analysis software. \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8921196409870531,
      "result": {
        "original_header": "General",
        "type": "Text_excerpt",
        "value": "The following command will process ``sample.fastq.gz`` file containing human Immunoglobulin Heavy Chain reads, assemble clonotypes and store them in ``out.txt``:\n```bash\njava -jar migmap.jar -R IGH -S human sample.fastq.gz out.txt\n```\nMIGMAP accepts both FASTQ and FASTA input files, raw and GZIP-compressed. MiGMAP can be also run in per-read mode and allows piping results, e.g.:\n```bash\njava -jar migmap.jar --by-read -R IGH -S human sample.fastq.gz - | grep \"IGHV1-8\" > out.txt\n```\n \nSeveral receptor chains can be specified, e.g. ``-R IGH,IGK,IGL``. It is always recommended to map to complete set of TCR or IG genes and filter contaminations (e.g. TRA<>TRB) later. \nThe list of possible options is the following: \n\nOption              | Definition\n--------------------|------------------------------------------------------------------------\n``--blast-dir`` | Path to folder that contains ``igblastn`` and ``makeblastdb`` binaries, by default assume they are added to ``$PATH`` and execute them directly.\n``--data-dir`` | Path to folder that contains the data bundle (``internal_data/`` and ``optional_file/`` directories). By default it the package is provided with MIGMAP binaries, that is ``install_dir/data/``.\n``--custom-database`` | Path to a custom segments database. By default will use built-in database. See ``segments.txt`` and **Using your own references** for details.\n``-n`` | Number of reads to analyze before stopping. Will analyze all reads by default\n``-p`` | Number of threads to use. By default will use all available threads.\n``--report`` | Path to the file that is going to store MIGMAP report (extraction and filtering efficiency for current input, etc). Will append report line if file exists.\n``-R`` | **REQUIRED** Receptor gene and chain. Several chains can be specified, separated with commas. Allowed values are: ``IGH,IGL,IGK,TRA,TRB,TRG,TRD``.\n``-S`` | **REQUIRED** Species, allowed values: ``human,mouse,rat,rabbit,rhesus_monkey``\n``--all-alleles`` | Will use all alleles provided in the antigen receptor segment database. By default uses only major allele (``*01`` according to IMGT).\n``--use-kabat`` | Will use KABAT nomenclature for FR/CDR region markup. Uses IMGT nomenclature by default.\n``--allow-incomplete`` | Report clonotypes with partial CDR3 mapping (lacking J germline part, etc). By default those are no included into the output.\n``--allow-no-cdr3`` | Report clonotypes with no CDR3 mapping. By default those are no included into the output.\n``--allow-noncoding`` | Report clonotypes that have either stop codon or frameshift in their receptor sequence. By default those are no included into the output.\n``--allow-noncanonical`` | Report clonotypes that have non-canonical CDR3 (do not start with C or end with F/W residues). By default those are no included into the output.\n``-q`` | Quality threshold, ``2-40`` defaults to ``25``. Filter out reads that have at least one error or N-nucleotide with a quality value below the corresponding threshold.\n``--details`` | Specifies the nucleotide and amino acid sequences for certain FR/CDR regions that will be added to the output. Allowed values: ``fr1X,cdr1X,fr2X,cdr2X,fr3X,cdr3X,fr4X,contigX`` where ``X`` stands for ``nt`` or ``aa``. By default all those fileds are included\n``--by-read`` | Will output mapping results for each read (see **Output format** below, excluding frequency and count fields) and read headers.\n``--unmapped`` | Specifies a file to store unmapped reads. \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9824088415282336,
      "result": {
        "original_header": "Additional routines",
        "type": "Text_excerpt",
        "value": "There are several built-in routines implementing common result processing and analysis tasks. Note that one should use ``-cp`` instead of ``-jar`` when executing the module and specify full package name, as shown below. When using ``-cp`` (classpath) for execution always make sure that the path to executable JAR file is set correctly, otherwise JVM will throw some uninformative error message.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9507546171092947,
      "result": {
        "original_header": "Merging contigs",
        "type": "Text_excerpt",
        "value": "``MergeContigs`` routine of MIGMAP merges clonotypes that are represented by embedded contigs. MIGMAP uses CDR3 nucleotide sequence, V and J segment names and mutation list to define a unique clonotype signature. Therefore in case of variable IG/TCR sequence coverage (can be a result of intrinsic library properties and/or read trimming) there is a chance of ambigous clonotypes: e.g. in case two reads coming from a clonotype with a mutation in FR1 region and one of the reads doesn't cover the FR1 two clonotypes will be reported by MIGMAP. To resolve these ambiguities run ``MergeContigs`` utility as follows:\n```bash\njava -cp migmap.jar com.antigenomics.migmap.MergeContigs out.txt out_merged.txt\n```\n \nThis routine will generate a list of clonotypes represented by the set of longest completely overlapping contigs. Note: make sure that you haven't manually excluded ``contignt`` feature from output as in such case the routine will fail.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9850877914766526,
      "result": {
        "original_header": "Post-analysis",
        "type": "Text_excerpt",
        "value": "> **IMPORTANT** It is highly recommended that you merge contigs and perform error correction prior to proceeding to post-analysis. \nSpecies and receptor parameters are required and should be the same as the ones used in initial MIGMAP analysis. This module will generate several text files with ``out`` prefix: \nFor more details and an example analysis of hypermutating Raji cell repertoire go to ``post/`` folder in this repository (or click [here](https://github.com/mikessh/migmap/tree/master/post)).\n \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9319345027644096,
      "result": {
        "original_header": "Output format",
        "type": "Text_excerpt",
        "value": "The output is provided in a tab-delimited format. Note that no header column is present in piped output. Mutations are grouped by their FW/CDR region in several columns, mutations in the same region are separated with commas. Mutation entries are stored as follows,\n```\n$type$position:$reference>$query\n```\n \nwhere ``$type`` is ``S`` for substitution, ``D`` for deletion or ``I`` for indel. Position field ``$position`` marks either the substituted base, the first deleted base or the first base after insertion. Mutation positions are provided in Variable segment coordinates with the first Variable segment germline nucleotide having position of ``0`` (in contrast to BLAST output which is 1-based). Reference and query bases are provided for substitution, deleted and inserted bases are provided for deletions and insertions (omitting ``>``). \nAmino-acid level mutations are provided as translations of codons adjacent to the mutated position. Thus, cumulative effect of mutations on the amino acid sequence is shown for mutation sets. The effect is however reported so that there is a one-to-one correspondence between nucleotide and amino acid mutation entries. For example, if ``S90:T>C`` and ``S91:C>A`` together lead to ``S30:S>H``, the ``S30:S>H,S30:S>H`` is reported, not ``S30:S>P,S30:S>Y``. \nOutput format for assembled clonotypes is the following: \nColumn              | Definition\n--------------------|------------------------------------------------------------------------\nfreq                | clonotype frequency in (0,1]\ncount               | number of reads\nv                   | Variable segment (top hit only)\nd                   | Diversity segment (top hit only)\nj                   | Joining segment (top hit only)\ncdr3nt              | CDR3 nucleotide sequence\ncdr3aa              | CDR3 amino acid sequence\nmutations.nt.FR1    | Mutations in FR1 region, nucleotide level\nmutations.nt.CDR1   | Mutations in CDR1 region, nucleotide level\nmutations.nt.FR2    | Mutations in FR2 region, nucleotide level\nmutations.nt.CDR2   | Mutations in CDR2 region, nucleotide level\nmutations.nt.FR3    | Mutations in FR3 region, nucleotide level\nmutations.nt.CDR3   | Mutations in V/D/J germline sequence in CDR3 region, nucleotide level\nmutations.nt.FR4    | Mutations in FR4 region, nucleotide level\nmutations.aa.FR1    | Mutations in FR1 region, amino-acid level\nmutations.aa.CDR1   | Mutations in CDR1 region, amino-acid level\nmutations.aa.FR2    | Mutations in FR2 region, amino-acid level\nmutations.aa.CDR2   | Mutations in CDR2 region, amino-acid level\nmutations.aa.FR3    | Mutations in FR3 region, amino-acid level\nmutations.aa.CDR3   | Mutations in V/D/J germline sequence in CDR3 region, amino-acid level\nmutations.aa.FR4    | Mutations in FR4 region, amino-acid level\ncdr.insert.qual     | quality string N-nucleotides in CDR3 region\nmutations.qual      | mutation quality string\nv.end.in.cdr3       | V segment end (exclusive) in CDR3 region\nd.start.in.cdr3     | D segment start in CDR3 region or *-1* if D segment is not defined\nd.end.in.cdr3       | D segment end (exclusive) in CDR3 region or *-1* if D segment is not defined\nj.start.in.cdr3     | J segment start in CDR3 region or *-1* if J segment is not defined\nv.del               | Number of nucleotides deleted from V segment 3' end\nd.del.5             | Number of nucleotides deleted from D segment 5' end or *-1* if D segment is not defined\nd.del.3             | Number of nucleotides deleted from D segment 3' end or *-1* if D segment is not defined\nj.del               | Number of nucleotides deleted from J segment 5' end or *-1* if J segment is not defined\npol.v               | Position of last nucleotide of V segment's P segment or *-1* if P segment was not found\npol.d.5             | Position of first nucleotide of D segment's 5' P segment or *-1* if P segment was not found\npol.d.3             | Position of last nucleotide of D segment's 3' P segment or *-1* if P segment was not found\npol.j               | Position of first nucleotide of J segment's P segment or *-1* if P segment was not found\nhas.cdr3            | *true* if CDR3 region is present (both V segment conserved residue is present)\nin.frame            | *true* if receptor has no frameshifts\nno.stop             | *true* if receptor contains no stop codons\ncomplete            | *true* if CDR3 region is fully defined (both V and J conserved residues are present)\ncanonical           | *true* if CDR3 region starts with C residue and ends with F/W residue \nIn case the ``--details ...`` option is specified, corresponding columns will be added to output. E.g. ``--details cdr1nt,contigaa`` will add CDR1 nucleotide sequence and translated complete receptor sequence to the table. By default, all nucleotide and amino acid sequences for FR/CDR regions and entire contigs are added.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/mikessh/migmap/wiki"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mikessh/migmap/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Error correction",
        "parent_header": [
          "MiGMAP: mapper for full-length T- and B-cell repertoire sequencing",
          "Execution",
          "Additional routines"
        ],
        "type": "Text_excerpt",
        "value": "PCR and sequencing errors, as well as hot-spot PCR errors in case of UMI correct data can generate a great deal of artificial (erroneous) clonotypes, especially in case of full-length IG sequence analysis. To filter erroneous sub-variants and append their read count to corresponding parent clonotypes, execute \n\n```bash\njava -cp migmap.jar com.antigenomics.migmap.Correct out.txt corrected.txt\n```\n\nThere are three error correction options that can be set by user:\n- Minimal parent-to-child read ratio allowed per one mismatch can be tweaked using the ``-r`` option\n- Number of mismatches between parent variant and its error to consider when looking for erroneous subvariants (aka search depth). By default this is set to ``1`` assuming uniform mutation process, i.e. if there is a pair of clonotypes that differ by 2 mismatches due to PCR/sequencing errors, intermediate variants should be present as well.\n- ``--contig`` mode that will work with entire contigs and ignore region context (germline/CDR3 mutations). This option is recommended for full-length IG data analysis and should not be used for short reads.\n\nThe algorithm can deal with errors in CDR3 region as well as correctly resolve networks of erroneous sub-variants.\n\nNote that error correction only works for clonotype tables, not by-read output. This step should be ideally executed after ``MergeContigs`` routine.\n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mikessh/migmap/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mikessh/migmap"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MiGMAP: mapper for full-length T- and B-cell repertoire sequencing"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mikessh/migmap/master/travis_cli_test.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "MiGMAP: mapper for full-length T- and B-cell repertoire sequencing"
        ],
        "type": "Text_excerpt",
        "value": "See [latest release](https://github.com/mikessh/migmap/releases/latest) section for MiGMAP package. For Windows you need to both install IgBlast and download the latest release. For MacOS and Linux, MIGMAP can be easily installed using [Homebrew/Linuxbrew](http://brew.sh) or [bioconda](https://bioconda.github.io/) (no need to download anything/manually install IgBlast):\n\n```bash\nbrew tap mikessh/repseq\nbrew install migmap-macos # or migmap-linux\n```\n\nAnother option is to intall MIGMAP using BIOCONDA, see corresponding [recipe](http://bioconda.github.io/recipes/migmap/README.html).\n\nMiGMAP can be compiled from sources using [Gradle](https://gradle.org/) with ``gradle build``. Note that in order for tests to pass IgBlast binaries should be in ``$PATH`` variable, you may need to modify following part of ``build.gradle`` \n\n```gradle\ntest {\n    environment \"PATH\", \"$System.env.PATH:/usr/local/bin/:/usr/local/ncbi/igblast/bin/\"\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9826196440413427,
      "result": {
        "original_header": "MiGMAP: mapper for full-length T- and B-cell repertoire sequencing",
        "type": "Text_excerpt",
        "value": "**NOTE** Last IgBlastWrp version is available [here](https://github.com/mikessh/migmap/releases/tag/v0.6) (source and readme are available [here](https://github.com/mikessh/migmap/tree/v0.6)), this is a completely re-written version of original software. \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9084737027106163,
      "result": {
        "original_header": "General",
        "type": "Text_excerpt",
        "value": "To see the full list of MiGMAP options run \n```bash\njava -jar migmap.jar -h ...\n```\n \nThe memory limit can be extended by using ``-Xmx`` argument (``-Xmx8G`` will be sufficient in most cases). In case installed using **Homebrew** the command to execute MIGMAP is simply ``migmap ...``. \nThe following command will process ``sample.fastq.gz`` file containing human Immunoglobulin Heavy Chain reads, assemble clonotypes and store them in ``out.txt``:\n```bash\njava -jar migmap.jar -R IGH -S human sample.fastq.gz out.txt\n```\nMIGMAP accepts both FASTQ and FASTA input files, raw and GZIP-compressed. MiGMAP can be also run in per-read mode and allows piping results, e.g.:\n```bash\njava -jar migmap.jar --by-read -R IGH -S human sample.fastq.gz - | grep \"IGHV1-8\" > out.txt\n```\n \nThe list of possible options is the following: \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9891932122527886,
      "result": {
        "original_header": "Additional routines",
        "type": "Text_excerpt",
        "value": "There are several built-in routines implementing common result processing and analysis tasks. Note that one should use ``-cp`` instead of ``-jar`` when executing the module and specify full package name, as shown below. When using ``-cp`` (classpath) for execution always make sure that the path to executable JAR file is set correctly, otherwise JVM will throw some uninformative error message.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9408864995570178,
      "result": {
        "original_header": "Merging contigs",
        "type": "Text_excerpt",
        "value": "This routine will generate a list of clonotypes represented by the set of longest completely overlapping contigs. Note: make sure that you haven't manually excluded ``contignt`` feature from output as in such case the routine will fail.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8928161477899621,
      "result": {
        "original_header": "Post-analysis",
        "type": "Text_excerpt",
        "value": "> **IMPORTANT** It is highly recommended that you merge contigs and perform error correction prior to proceeding to post-analysis. \nTo summarize somatic hypermutations and generate clonotype trees run\n```bash\njava -cp migmap.jar com.antigenomics.migmap.Analyze -S species -R gene out.txt out\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8594430960593525,
      "result": {
        "original_header": "General",
        "type": "Text_excerpt",
        "value": "The following command will process ``sample.fastq.gz`` file containing human Immunoglobulin Heavy Chain reads, assemble clonotypes and store them in ``out.txt``:\n```bash\njava -jar migmap.jar -R IGH -S human sample.fastq.gz out.txt\n```\nMIGMAP accepts both FASTQ and FASTA input files, raw and GZIP-compressed. MiGMAP can be also run in per-read mode and allows piping results, e.g.:\n```bash\njava -jar migmap.jar --by-read -R IGH -S human sample.fastq.gz - | grep \"IGHV1-8\" > out.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mikessh/migmap/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "antibody, bioinformatics, immunology, ngs, rep-seq, sequencing, t-cell, t-cell-receptor"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIGMAP - A high-throughput sequencing-compatible IgBlast wrapper\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2014-2017 Mikhail Shugay\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "migmap"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mikessh"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Groovy",
        "size": 265510,
        "type": "Programming_language",
        "value": "Groovy"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 6661,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3734,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2017-12-06T05:57:02Z",
        "date_published": "2017-12-06T06:45:39Z",
        "description": "* Now should work with Java 9\r\n\r\n> N.B Please ignore ``An illegal reflective access operation has occurred`` warnings occurring when running with Java 9, they have no effect on software performance/output whatsoever",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/1.0.3",
        "name": "Java 9 compatibility",
        "release_id": 8789954,
        "tag": "1.0.3",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/8789954",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/8789954",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2017-02-13T21:50:12Z",
        "date_published": "2017-02-13T21:52:32Z",
        "description": "Fixed `Analyze` module and `--custom-database` option.\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/1.0.2",
        "name": "Fixes",
        "release_id": 5445394,
        "tag": "1.0.2",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/5445394",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/5445394",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2016-07-24T21:00:42Z",
        "date_published": "2016-07-24T21:07:07Z",
        "description": "### Improvements\n- Remove the `--write-binary` option. Now all post-analysis and processing is performed on MIGMAP clonotype tables\n  - This also allows merging contigs and correcting errors prior to post-analysis\n- More efficient implementation of clonotype tree construction under the `Analyze` routine.\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/1.0.1",
        "name": "Post-analysis patch",
        "release_id": 3728050,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/3728050",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/3728050",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2016-06-19T15:35:20Z",
        "date_published": "2016-06-19T15:43:57Z",
        "description": "### Improvements & additions\n- Modified API to support clonotype table post-analysis routines\n- Basic statistical analysis of somatic hypermutations (`Analyze` module, see readme)\n- Clonotype tree construction (`Analyze` module, see readme)\n\n### Fixes\n- Fixed exception with P-segment alignment\n- Optimized mutation annotation\n\n### Known bugs\n- `--by-read` analysis is not working, use `1.0.1` version or later\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/1.0.0",
        "name": "Bug fixes and post analysis routines",
        "release_id": 3476311,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/3476311",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/3476311",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2016-02-01T14:07:25Z",
        "date_published": "2016-02-01T14:26:24Z",
        "description": "**Improvements**\n- Added amino acid representation for hypermutations: one-to-one correspondence for nucleotide representation, amino acid sequences are provided on cumulative level, i.e. a single effect is reported for sets of adjacent hypermutations.\n\n**Helper routines**\n- Correct routine - applies a frequency + parsimony-based algorithm that traverses variant tree and appends erroneous variants to their parent clonotypes.\n- An option to use custom database and a routine to annotate custom reference file with so-called V/J reference points.\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/0.9.9",
        "name": "Amino acids for hypermutations and helper routines",
        "release_id": 2529702,
        "tag": "0.9.9",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/0.9.9",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/2529702",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/2529702",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/0.9.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2015-11-21T23:32:03Z",
        "date_published": "2015-11-21T23:43:32Z",
        "description": "- Added P-segment reporting\n- Static compilation to speed up critical parts of code\n- Refactoring for some source-code bottlenecks\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/0.9.8",
        "name": "P-segments and optimization",
        "release_id": 2166106,
        "tag": "0.9.8",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/0.9.8",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/2166106",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/2166106",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/0.9.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2015-09-30T16:59:08Z",
        "date_published": "2015-09-30T17:12:10Z",
        "description": "- Renamed the tool to MiGMAP\n- Finally fixed (semingly) all issues with ambiguous IgBlast mappings\n- Fixes for `--details` option\n- Add some missing columns to by-read and clonotype table output\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/0.9.7",
        "name": "Some fixes",
        "release_id": 1840670,
        "tag": "0.9.7",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/0.9.7",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/1840670",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/1840670",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/0.9.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2015-09-16T18:06:21Z",
        "date_published": "2015-09-16T18:10:05Z",
        "description": "- Added an option (`--details`) to export nucleotide and amino acid sequences of CDR and FR regions, as well as receptor mRNA contig.\n- Fixed some remaining rare bugs related to ambiguous alignment of D segment with IgBlast\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/0.9.5",
        "name": "Detailed region information",
        "release_id": 1823414,
        "tag": "0.9.5",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/0.9.5",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/1823414",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/1823414",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/0.9.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2015-09-11T06:19:02Z",
        "date_published": "2015-09-11T06:33:46Z",
        "description": "### Major:\n- Improved handling of igblast alignments with several top hits. Apparently they resulted in clonotype splitting due to random choice of a single top segment by igblast.\n- Fix a bug in FASTA input processing\n\n### Minor:\n- Time elapsed reporting\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/0.9.4",
        "name": "Fixes",
        "release_id": 1798116,
        "tag": "0.9.4",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/0.9.4",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/1798116",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/1798116",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/0.9.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2015-09-06T21:24:58Z",
        "date_published": "2015-09-06T21:30:53Z",
        "description": "### Non-canonical CDR3 workaround\n- Fix CDR3 end calculation when J segment reference point is at the boundary or J segment conserved residue is absent with downstream J sequence aligned\n- Implement CDR3 start calculation in case V-CDR3 region was not identified by IgBlast\n- Add \"canonical\" CDR3 flag which tells if CDR3 starts with _C_ and ends with _F/W_\n  - Add corresponding filter to output (`--allow-noncanonical`)\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/0.9.3",
        "name": "Solving complex CDR3 cases",
        "release_id": 1775404,
        "tag": "0.9.3",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/0.9.3",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/1775404",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/1775404",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/0.9.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2015-09-03T19:53:00Z",
        "date_published": "2015-09-03T20:05:25Z",
        "description": "- Add more details to report (sample name, command line arguments)\n- Improve pipeline verbosity, fix ambiguous messages\n- Fix incorrect parent region for boundary deletion cases\n- `--unmapped unmapped.fastq` option will store unmapped reads to separate file\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/0.9.2",
        "name": "Minor update",
        "release_id": 1765313,
        "tag": "0.9.2",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/0.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/1765313",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/1765313",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/0.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2015-09-01T04:14:59Z",
        "date_published": "2015-09-02T16:42:52Z",
        "description": "### Updates\n- Improved CLI, several fixes\n- Analysis report generation with `--report`\n- Quality/non-coding/... filter now applies to per-read data also\n- V/D/J CDR3 markup (V end, etc) and V/D/J truncation are now reported\n- Changed quality handling: filtering each read based on min quality, not clonotypes based on min average quality\n- Flags for non-coding, incomplete, etc clonotypes\n\n### Bug fixes\n- J reference point boundary case fix\n- Mutation sub-region assignment fix\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/0.9.1",
        "name": "Improvements and fixes",
        "release_id": 1748737,
        "tag": "0.9.1",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/0.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/1748737",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/1748737",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/0.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2015-08-22T01:46:50Z",
        "date_published": "2015-08-23T14:33:01Z",
        "description": "- Optimized parallelization\n- Better reference file support: can specify multiple genes\n- By-read and piped output\n  - Storing read headers\n- Better mutation reporting\n  - Added indels\n  - Reporting mutations in D/J germline\n  - Mutations split by FR/CDR\n- More intelligent quality filtering, only N regions and mutations\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/0.9.0",
        "name": "Remastered",
        "release_id": 1707832,
        "tag": "0.9.0",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/1707832",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/1707832",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2015-01-12T07:06:36Z",
        "date_published": "2015-01-12T07:26:39Z",
        "description": "- Added support for minor alleles, i.e. ones other than `*01`\n- A pair important anti-crash fixes\n- Fixed clonotype frequency counting\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/v0.6",
        "name": "Minor allele support",
        "release_id": 842843,
        "tag": "v0.6",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/v0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/842843",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/842843",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/v0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2014-12-17T16:11:14Z",
        "date_published": "2014-12-17T16:18:06Z",
        "description": "- Added correct path to win igblast executable\n- Re-packed binaries to add missing references\n- Fixed a bug preventing some igblast14 references from loading\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/v0.5b",
        "name": "Fixes for binaries and more",
        "release_id": 791202,
        "tag": "v0.5b",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/v0.5b",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/791202",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/791202",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/v0.5b"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2014-10-10T02:05:30Z",
        "date_published": "2014-10-10T02:08:52Z",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/v0.4",
        "name": "New species and IgBlast 1.4 support",
        "release_id": 616640,
        "tag": "v0.4",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/v0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/616640",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/616640",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/v0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2014-06-07T09:54:41Z",
        "date_published": "2014-06-07T09:59:13Z",
        "description": "Re-implemented clonotype reporting. Quality calculation fix\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/v0.3",
        "name": "Functional release (testing)",
        "release_id": 362183,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/362183",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/362183",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/v0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2014-06-07T08:39:11Z",
        "date_published": "2014-05-30T01:50:51Z",
        "description": "Several major fixes. Added mutation reporting and clone level detalization\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/v0.2",
        "name": "Basic functionality",
        "release_id": 347391,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/347391",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/347391",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mikessh",
          "type": "User"
        },
        "date_created": "2014-06-07T08:39:11Z",
        "date_published": "2014-05-28T01:53:49Z",
        "description": "IgBlast output parsing, IgBlast parallelization, clonotype assembly, quality filtering\n",
        "html_url": "https://github.com/mikessh/migmap/releases/tag/v0.1",
        "name": "First release",
        "release_id": 342943,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/mikessh/migmap/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/mikessh/migmap/releases/342943",
        "value": "https://api.github.com/repos/mikessh/migmap/releases/342943",
        "zipball_url": "https://api.github.com/repos/mikessh/migmap/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Pre-requisites",
        "parent_header": [
          "MiGMAP: mapper for full-length T- and B-cell repertoire sequencing"
        ],
        "type": "Text_excerpt",
        "value": "[Java v1.8](http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html) or higher is required to run MIGMAP. Users should then install [IgBlast v1.4.0](http://www.ncbi.nlm.nih.gov/igblast/faq.html#standalone) binaries that are appropriate for their system and make sure that ``igblastn`` and ``makeblastdb`` are added to ``$PATH`` or the directory that contains binaries is specified using ``--blast-dir /path/to/bin/`` argument during MiGMAP execution. IgBlast v1.4.0 binaries can also be downloaded from [here](https://github.com/mikessh/igblast-bin).\n\n> Note that MIGMAP also works with IgBlast v1.6.1, although this was not tested extensively\n\nA data folder named ``data/`` containing binary databases required for IgBlast to work is provided in the release bundle. It can also explicitly specify its path with ``--blast-dir /path/to/bin/`` for troubleshooting purposes.\n\n"
      },
      "source": "https://raw.githubusercontent.com/mikessh/migmap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:46:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 52
      },
      "technique": "GitHub_API"
    }
  ]
}