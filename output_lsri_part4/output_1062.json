{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dolevrahat/CladePP"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-24T18:22:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-29T13:57:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Code for running the CladePP phylogeentic profiling algorithm"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9433971984141375,
      "result": {
        "original_header": "CladePP",
        "type": "Text_excerpt",
        "value": "**Introduction** \nThe code enclosed in this repository provides an extension of the Normalized Phylogenetic Profiling algorithm. Phylogenetic profiling (PP) is an evolution bases method for prediction of gene function or interaction. PP relies on the assumption that genes that are functionally related (for example, participate in the same cellular pathway or are members of a common protein complex) manifest correlated patterns of occurrence and absence across the phylogenetic tree. \nIn PP analysis, each gene is represented using a phylogeneitc profile, a vector indiacating the presence or absence of a homolog for the gene across many evolutionarily diverse species.\nGiven a gene or a set of genes of interest, the algorithm searches for additonal genes with similiar phylogenetic profiles, thus highlighting potential funcational or interaction partners of the query gene(s). \nCladePP is implemented in R and requires the R libriries plyr, dplyr and optparse avilable from CRAN. Calculating a false discovery rate for the predictions also requires the qvalue library from Bioconductor or from https://github.com/StoreyLab/qvalue. \nclusters - a RDS file with a list of of hclust objects. Each object represents the output of hierarchial clustering of a subset of columns of a noramlized phylogenetic profilign matrix corresponding to a given clade. The names of the list should correspond to the names of the clades. \ngenelist - a text file with the gene symbols of the genes of interest. \nThe output of the CladePP script is a tab delimited table which indicates for each gene its score (higher score indicates that the phylogenetic profile of the gene clusters tightly with the phylogeneitc profile of gene(s) in the query genelist. See out paper for details on how the score is computed), with which genes in the query it co-evolved and in which clade. \nOnce you have generated your predictions, you may want to estimate how tightly the genes reported in the outouted are not due to chance. To do so, we provide two scripts for estimating an emprical p-value for the scores in the output (See paper for details).\nIn the first stage, the CladePP algorhtim is ran agianst random set of genes in the same size as the query set using the simulate.R script.  \nn - the number of random sets to generate. In our paper we tested our predictions against 10,000 random gene sets.\nFor generating a large number of random sets, it is recommended to parallelize the running of the script and/or use high performence computing/cloud platform. \noutfile - Path to which the output will be written. Needs to have a .rds extension.\nIt is recommended that outputs of this script will be stored in a dedicated directory since the Calculate_FDR.R script called after this script assumes all rds files in its input directory contained simulations generated by this script. \nAfter the simulated sets are generated and scores are calculated for each of them, a p-value and false discovery rate are estimated by running the script Calculate_FDR.R. \nThis script takes three inputs: \npermdir - Directory containing the output of simulate.R \n(and only them! The script assumes that any rds files in this directory are generated by simulate.R. \nIf any other rds files are found in this directory the script is likely to fail).\nMRStable - output of CladePP.R.\noutfile - file to which to write the output. \nThe output of this script consists of the table generated by CladePP.R to which it adds three columns with the p-value, q-value and FDR for each gene. \nFull details of the algorithm are described in  \n"
      },
      "source": "https://raw.githubusercontent.com/dolevrahat/CladePP/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dolevrahat/CladePP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dolevrahat/CladePP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dolevrahat/CladePP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CladePP"
      },
      "source": "https://raw.githubusercontent.com/dolevrahat/CladePP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9211642015791808,
      "result": {
        "original_header": "CladePP",
        "type": "Text_excerpt",
        "value": "CladePP is implemented in R and requires the R libriries plyr, dplyr and optparse avilable from CRAN. Calculating a false discovery rate for the predictions also requires the qvalue library from Bioconductor or from https://github.com/StoreyLab/qvalue. \noutfile - path of the desired output file. Needs to have a .tsv extension. \n"
      },
      "source": "https://raw.githubusercontent.com/dolevrahat/CladePP/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dolevrahat/CladePP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CladePP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dolevrahat"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 10153,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dolevrahat/CladePP/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:50:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}