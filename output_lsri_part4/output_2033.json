{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "To cite CNVkit in publications, please use:\n\n  Talevich, E., Shain, A. H., Botton, T., & Bastian, B. C. (2014).\n  CNVkit: Genome-wide copy number detection and visualization from\n  targeted sequencing. PLOS Computational Biology 12(4): e1004873.\n  doi: 10.1371/journal.pcbi.1004873\n\nA BibTeX entry for LaTeX users is:\n\n@article{,\n  title = {{CNVkit: Genome-wide copy number detection and visualization from targeted sequencing}},\n  author = {Talevich, Eric and Shain, A. Hunter and Botton, Thomas and Bastian, Boris C.},\n  journal = {PLOS Computational Biology},\n  month = apr,\n  year = {2016}\n  doi = {10.1371/journal.pcbi.1004873},\n  url = {http://dx.doi.org/10.1371/journal.pcbi.1004873},\n}\n\n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/CITATION",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/etal/cnvkit"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-07-07T20:12:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-28T06:32:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Copy number variant detection from targeted DNA sequencing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8972596620513922,
      "result": {
        "original_header": "Try it",
        "type": "Text_excerpt",
        "value": "A `Docker container <https://registry.hub.docker.com/r/etal/cnvkit/>`_ is also\navailable on Docker Hub, and the BioContainers community provides another on\n`Quay <https://quay.io/repository/biocontainers/cnvkit>`_. \n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9040866542237561,
      "result": {
        "type": "Text_excerpt",
        "value": "A command-line toolkit and Python library for detecting copy number variants\nand alterations genome-wide from high-throughput sequencing. \n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://cnvkit.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/etal/cnvkit/wiki"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/etal/cnvkit/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 165
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/etal/cnvkit/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "etal/cnvkit"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Support"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/etal/cnvkit/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/etal/cnvkit/master/scripts/snpfilter.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/etal/cnvkit/master/devtools/conda-recipe/build.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "CNVkit runs on Python 3.7 and later. Your operating system might already provide\nPython, which you can check on the command line::\n\n    python --version\n\nIf your operating system already includes an older Python, I suggest either\nusing ``conda`` (see below) or installing Python 3.5 or later alongside the\nexisting Python installation instead of attempting to upgrade the system version\nin-place. Your package manager might also provide Python 3.5+.\n\nTo run the segmentation algorithm CBS, you will need to also install the R\ndependencies (see below). With ``conda``, this is included automatically.\n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using Conda",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The recommended way to install Python and CNVkit's dependencies without\naffecting the rest of your operating system is by installing either `Anaconda\n<https://store.continuum.io/cshop/anaconda/>`_ (big download, all features\nincluded) or `Miniconda <http://conda.pydata.org/miniconda.html>`_ (smaller\ndownload, minimal environment).\nHaving \"conda\" available will also make it easier to install additional Python\npackages.\n\nThis approach is preferred on Mac OS X, and is a solid choice on Linux, too.\n\nTo download and install CNVkit and its Python dependencies in a clean\nenvironment::\n\n    # Configure the sources where conda will find packages\n    conda config --add channels defaults\n    conda config --add channels bioconda\n    conda config --add channels conda-forge\n\nThen:\n\n    # Install CNVkit in a new environment named \"cnvkit\"\n    conda create -n cnvkit cnvkit\n    # Activate the environment with CNVkit installed:\n    source activate cnvkit\n\nOr, in an existing environment::\n\n    conda install cnvkit\n\n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From a Python package repository",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Up-to-date CNVkit packages are available on `PyPI\n<https://pypi.python.org/pypi/CNVkit>`_ and can be installed using `pip\n<https://pip.pypa.io/en/latest/installing.html>`_ (usually works on Linux if the\nsystem dependencies listed below are installed)::\n\n    pip install cnvkit\n\n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From source",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The script ``cnvkit.py`` requires no installation and can be used in-place. Just\ninstall the dependencies (see below).\n\nTo install the main program, supporting scripts and Python libraries ``cnvlib``\nand ``skgenome``, use ``pip`` as usual, and add the ``-e`` flag to make the\ninstallation \"editable\", i.e. in-place::\n\n    git clone https://github.com/etal/cnvkit\n    cd cnvkit/\n    pip install -e .\n\nThe in-place installation can then be kept up to date with development by\nrunning ``git pull``.\n\n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.999862738709311,
      "result": {
        "original_header": "Try it",
        "type": "Text_excerpt",
        "value": "You can easily run CNVkit on your own data without installing it by using our\n`DNAnexus app <https://platform.dnanexus.com/app/cnvkit_batch>`_. \nA `Galaxy tool <https://testtoolshed.g2.bx.psu.edu/view/etal/cnvkit>`_ is\navailable for testing (but requires CNVkit installation, see below). \nIf you have difficulty with any of these wrappers, please `let me know\n<https://github.com/etal/cnvkit/issues/>`_! \n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9995373271431212,
      "result": {
        "type": "Text_excerpt",
        "value": ".. image:: https://img.shields.io/pypi/v/CNVkit.svg\n    :target: https://pypi.org/project/CNVkit/\n    :alt: PyPI package \n.. image:: https://img.shields.io/badge/License-Apache%202.0-blue.svg\n    :target: https://opensource.org/license/apache-2-0/\n    :alt: Apache 2.0 license \n.. image:: https://github.com/etal/cnvkit/actions/workflows/tests-tox.yaml/badge.svg\n    :target: https://github.com/etal/cnvkit/actions/workflows/tests-tox.yaml\n    :alt: Test status \n.. image:: https://readthedocs.org/projects/cnvkit/badge/?version=stable\n    :target: https://cnvkit.readthedocs.io/en/stable/?badge=stable\n    :alt: Documentation status \n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/etal/cnvkit/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2013-2018 Eric Talevich\nCopyright (c) 2013-2018 University of California\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cnvkit"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "etal"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 658140,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 7035,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "WDL",
        "size": 2779,
        "type": "Programming_language",
        "value": "WDL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1157,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 605,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2024-04-12T21:41:38Z",
        "date_published": "2024-04-13T16:43:31Z",
        "description": "# Version 0.9.11\r\n\r\n## New features\r\n\r\n- Most commands include a new option, `--diploid-parx-genome`, to treat the\r\n  pseudoautosomal regions (PAR1/2) of human chromosome X as autosomal, i.e. diploid\r\n  regardless of sample sex. The value it takes is a human reference genome ID such as\r\n  \"grch38\". This feature should help reduce false calls on sex chromosomes in human\r\n  samples. (Thanks @rollf; #789)\r\n- The `fix` command takes a new option `--smoothing-window-fraction` to allow manual\r\n  tuning of the smoothing window used in GC and other automatic bias corrections.\r\n  (Thanks @kkchau; #859)\r\n- hg38 refFlat and genome accessibility data files are now included in the source tree.\r\n  (Thanks @berguner; #822, #837)\r\n\r\n## Bug fixes\r\n\r\n- The Docker image once again includes the additional scripts beyond cnvkit.py.\r\n- User-specified sample sex with `-x` now works properly. (Thanks @28rietd and @ccoo22;\r\n  #843, #851)\r\n- User-specified smoothing window size now applies in HMM segmentation. (Thanks\r\n  @zhuying412; #833, #835)\r\n- An error in `export vcf` has been fixed. (Thanks @pwwang; #818)\r\n\r\n## Other updates\r\n\r\n- Dependency versions are updated to match Ubuntu 23.04 Lunar, more or less.\r\n- Automated testing is done on Python version 3.8 through 3.12 -- these are the\r\n  \"supported\" versions.\r\n- Small documentation fixes.\r\n\r\n\r\n## New Contributors\r\n* @pwwang made their first contribution in https://github.com/etal/cnvkit/pull/818\r\n* @berguner made their first contribution in https://github.com/etal/cnvkit/pull/837\r\n* @zhuying412 made their first contribution in https://github.com/etal/cnvkit/pull/835\r\n* @kkchau made their first contribution in https://github.com/etal/cnvkit/pull/844\r\n* @28rietd made their first contribution in https://github.com/etal/cnvkit/pull/851\r\n\r\n**Full Changelog**: https://github.com/etal/cnvkit/compare/v0.9.10...v0.9.11",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.11",
        "name": "v0.9.11",
        "release_id": 151037415,
        "tag": "v0.9.11",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.11",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/151037415",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/151037415",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2023-02-24T18:31:15Z",
        "date_published": "2023-02-24T18:40:51Z",
        "description": "This long-awaited release includes major plotting enhancements in the `heatmap`, `scatter`, and `diagram` commands, as well as a new `export gistic` command, thanks to joint work by @tetedange13 and @tskir (see below).\r\n\r\nThere are also significant infrastructure improvements including bug fixes, modernized packaging, and build/test automation.\r\n\r\nNew features\r\n------------\r\n\r\n`diagram`:\r\n\r\n- New options `--no-gene-labels` to not display gene labels on the plot, and `-c` / `--chromosome` to plot a single chromosome (#628, #629, #634; thanks @tetedange13)\r\n\r\n`heatmap`:\r\n\r\nNew CLI options  (#35, #625, #632, #652; thanks @tetedange13 and @tskir):\r\n\r\n- `--vertical`: Transpose the plot, displaying the genome axis vertically instead of horizontally\r\n- `--delimit-samples`: Add an delimitation line between each sample row (or column, with `--vertical`)\r\n- `--title`: Set the plot title\r\n\r\n`scatter`:\r\n\r\n- New option `--fig-size`: Set the output image dimensions (#600, #641; thanks @tetedange13 and @tskir)\r\n- Show triangles at the bottom of the plot to indicate where segments are hidden below the plotted region by automatic pruning at 'ymin=-5'. Also log a warning when this happens. (#385, #643, #645; thanks @tetedange13, @tskir, and @micknudsen)\r\n\r\n`export gistic`:\r\n\r\n- New export command to generate an unsegmented \"markers\" file for use with GISTIC. GISTIC also takes a second input file with corresponding segments in SEG format, which CNVkit can generate with `export seg`. (#622, #623, #776; thanks @tetedange13, @tskir, @BioComSoftware)\r\n\r\nAPI and CLI changes\r\n-------------------\r\n\r\n- Running `cnvkit.py` without any arguments will now display the full help text instead of an error message.\r\n- Supporting scripts (aside from `cnvkit.py`) are no longer installed automatically. They are still available in the source tree.\r\n\r\nDocumentation\r\n-------------\r\n\r\n- Clarified `bintest` usage, provided an example, and explained outputs. (#646; thanks @tetedange13 and @tskir)\r\n\r\nBugfixes\r\n--------\r\n\r\n- Fixed several errors and warnings due to outdated usage of dependencies, e.g. pandas, pysam.\r\n- Fixed the Dockerfile and Docker image to install R packages properly for CNVkit to use internally. (#765; thanks @28rietd)\r\n- Made the Makefile example/test workflow more portable across environments. (#661, #666, #695, #699; thanks @tetedange13)\r\n- `batch`: Apply --drop-low-coverage option in the segmetrics step. (#694)\r\n- `bintest`: Include 'probes' column in .cns output so that it is valid .cns (closes #693)\r\n- `fix`: Condense the error message when coordinate set contains duplicate values. (#637, #638; thanks @tskir)\r\n- `fix`: Choose a smoothing window fraction based on the data size to help correct biases better at the extremes of the GC range, where previously some residual GC bias could still be present after correction. (#379)\r\n- BED inputs: Handle UCSC BED 'browser' header line, as used in Agilent BED files with a 2-line header. (closes #696, #618)\r\n\r\nInternal\r\n--------\r\n\r\n- Modernized the packaging configuration with pyproject.toml, leaving a stub setup.py for legacy setuptools compatibility. (#790)\r\n- Set up automated testing through GitHub Actions (GHA) to verify Python versions 3.7 through 3.10 using pytest and tox. The latter make local testing with multiple Python versions more reliable, too. (#792, #793, #794)\r\n- Updated minimum dependency versions to roughly match Ubuntu 22.04 LTS packages; these are used in CI, too.\r\n- Applied black and pylint to reformat the codebase consistently and replace deprecated calls to libraries. (#795)\r\n- Remove joblib pinning (#589, #770; thanks @DavidCain and @risicle)\r\n- Remove networkx pinning (#606, #771; thanks @DavidCain)\r\n- Make the extreme-GC filters more easily configurable via `params.py` (#738, #752, #753, #764; thanks @tetedange13 and @tsivaarumugam)",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.10",
        "name": "Version 0.9.10",
        "release_id": 93615986,
        "tag": "v0.9.10",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.10",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/93615986",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/93615986",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2021-05-28T07:11:34Z",
        "date_published": "2021-06-01T19:43:47Z",
        "description": "This release contains a new script and, more importantly, a volley of bug fixes by @tskir, a new CNVkit collaborator.\r\n\r\n### New script\r\n\r\n`genome_instability_index.py`\r\n\r\n- For each given sample (.cnr or .cns, ideally .call.cns), this script reports two values, the number of non-neutral segments and the fraction of the total sequencing-accessible genome that they cover. Together, these values have been described as the Genome Instability Index (G2I) by [Bonnet et al. (2012)](https://doi.org/10.1186/1755-8794-5-54). These numbers are not difficult to calculate directly from .cns files, but they are frequently requested, so here you go.\r\n\r\n### Bug fixes by @tskir\r\n\r\nInstallation:\r\n- Set NetworkX minimum version to work with pomegranate on Python 3.9. (#614, #606; thanks @auberginekenobi)\r\n\r\n`genemetrics`, `diagram`, `scatter`:\r\n\r\n- Fix an error in iterating over chromosomes during gene-wise operations or gene selection. (#580, #573, #576, #579; thanks  @diushiguzhi @eriktoo @hrkemp @drmrgd @HYan-lei)\r\n\r\n`access`:\r\n\r\n- Fix an error when all chromosomes listed in the exclusion BED file appear only once. (#581, #574; thanks @dajana17)\r\n\r\n`autobin`:\r\n\r\n- Allow specifying explicit output filenames via -o/--output. If this option is not used, the behavior is the same as before. Some pipeline frameworks such as Snakemake require output filenames to be explicit in wrapped commands. (#608, #607; thanks @enes-ak)\r\n- Fix median-size file selection. (#613, #611; thanks @michaelsykes)\r\n\r\n`coverage`:\r\n\r\n- Fix a potential crash with the -c option; generally make the -c option's results more stable. This changes the results you'd get with `coverage -c` compared to previous CNVkit versions, but in any case -c isn't recommended\r\n  for production use, only for algorithm exploration. (#598, #593; thanks @joys8998)\r\n\r\n`genemetrics`:\r\n\r\n- Rename column `n_bins` to `probes` in output, for compatibility with 'call' and 'export' commands. (#586, #585; thanks @eriktoo)\r\n\r\n`scatter`:\r\n\r\n- Avoid losing short segments in rasterized PNG output, depending on DPI settings.  (#615, #604; thanks @jimmy200340)\r\n- Allow NCBI-style chromosome names that contain a \".\", e.g. \"NC_039902.1\". (#603, #602; thanks @amora197)\r\n\r\n`segment`:\r\n\r\n- Fix an IndexError during smoothing when the signal is shorter than a window, e.g. on chrY where the chromosome contains few bins. (#590, #587; thanks @tetedange13)\r\n\r\n### Improvements from other contributors\r\n\r\n- scripts/guess_baits.py: Fix a copy-paste error on script launch.  (#588; thanks @sssimonyang)\r\n- Documentation: Link to the Debian package alongside other packages. (#562; thanks @mr-c)",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.9",
        "name": "Version 0.9.9",
        "release_id": 43933160,
        "tag": "v0.9.9",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.9",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/43933160",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/43933160",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2020-12-13T22:02:58Z",
        "date_published": "2021-06-01T19:39:22Z",
        "description": "Continuing a focus on stability and compatibility with other software:\r\n\r\n* Support for reading CRAM files with an optional user-provided local FASTA\r\n  file for the reference genome sequence. (#555; thanks @johnegarza)\r\n* Call Rscript subprocess with safer flags for the R environment. Previously,\r\n  `--vanilla` ignored R environments with the library path in a non-default\r\n  location specified in the user's .Rprofile. Now, `--no-restore` and\r\n  `--no-environ` ensure a clean environment but still respect the user's\r\n  .Rprofile settings beyond that. (#491; thanks @pablo-gar)\r\n* Compatibility with the latest release of pandas. (#502, #523)\r\n\r\nThis release also fixes some regressions reported since the release of CNVkit\r\n0.9.7 (which introduced a number of new performance optimizations).\r\n\r\n* `scatter`: A bug when plotting a region of a chromosome. (#536, #457; thanks tskir)\r\n* `scatter`: An IndexError when plotting entire chromosomes, e.g. chr7. (#541,\r\n  #461, #535; thanks @tskir)\r\n* `fix`: A bug that occurred after automatic bias corrections, introducing\r\n  NaN-valued rows in placed of rejected bins, leading to a downstream crash in\r\n  CBS segmentation. (#551, #436, #547; thanks @johnegarza)",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.8",
        "name": "Version 0.9.8",
        "release_id": 43932961,
        "tag": "v0.9.8",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.8",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/43932961",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/43932961",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2020-05-29T06:13:05Z",
        "date_published": "2020-06-05T13:57:54Z",
        "description": "Stable release with only minor changes from the previous beta release 0.9.7.b1.\r\n\r\nNew contributions:\r\n\r\n- Cram support: Look for and use .cram + .crai alignment and index file pairs, in addition to .bam + .bai. (#495, #434; thanks @sridhar0605)\r\n- Update Docker file to use Python 3 apt packages and pip3 (#493; thanks @keiranmraine)\r\n- Documentation fix (#496; thanks @rollf)",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.7",
        "name": "Version 0.9.7",
        "release_id": 27264771,
        "tag": "v0.9.7",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.7",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/27264771",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/27264771",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2019-11-30T22:59:11Z",
        "date_published": "2019-11-30T23:04:18Z",
        "description": "This release contains several major enhancements  particularly relevant to germline analysis. If used in production pipelines, further evaluation and benchmarking would be wise. Highlights:\r\n\r\n**Control sample clustering**: To make better use of larger reference sample pools, `reference --cluster` will correlate the given normal samples' bin-wise coverage depths to extract clusters to be used as reference profiles. The reference .cnn file produced this way will then contain the `log2` and `spread` summary statistics for each cluster, in addition to the global summary stats. Given this \"clustered reference\" profile, `fix --cluster` will then correlate each test sample to each clustered `log2` profile in the reference to choose the most relevant control pool for normalization. The `batch` option `--cluster` will perform both these steps. Nod to Gambin lab and the authors of ExomeDepth, CoNVaDING, CLAMMS, and others for inspiration. (#308)\r\n\r\nCalculation of bin weights has changed. **This will change your segmentation results**, hopefully for the better. Details below. (#429)\r\n\r\nThe `batch` pipeline now performs some **segmentation post-processing** automatically: calculating and filtering segmentation calls by 50% confidence intervals of the segment mean log2 ratios, in order to reduce false positives, followed by separate bin-level testing to detect small (e.g. exon-size) CNVs that were not caught by segmentation.  The bin- and segment-level results are returned as separate .cns files; deciding whether and how to combine or use these results together is left as an exercise for the user.\r\n\r\nWe've **dropped Python 2.7 support**. Python version 3.5 or later is now required.\r\n\r\nThis is a beta release. Please let me know how it works for you via the Issues page. If this release contains any issues that are blocking your work, try installing one of the previous stable versions 0.9.6 or 0.9.5::\r\n\r\n    conda install cnvkit=0.9.6\r\n\r\n\r\nDependencies\r\n------------\r\n\r\n- Remove all Python 2.7 compatibility shims.\r\n- Raise minimum pandas version from 0.20.1 to 0.23.3.\r\n- Add scikit-learn (dependency of pomegranate, for HMM segmentation). Remove the older hmmlearn implementation.\r\n\r\n\r\nCommands\r\n--------\r\n\r\n`batch`:\r\n\r\n- Post-process segments with `segmetrics` (50% CI), `call` (filter by CI, but don't call integer copy number), and `bintest`.\r\n- Return `bintest` result as a separate, independent .cns output.\r\n- Add option '--segment-method', equivalent to `segment -m`.\r\n- Rename option '--method' to '--seq-method' (but '--method' still accepted for now).\r\n- Add option `--cluster`, passed to `reference` and `fix` if given. (#308)\r\n\r\n\r\n`bintest`:\r\n\r\n- New command superseding `cnv_ztest.py` script.\r\n- Report p-value as a column `p_bintest` (previously `ztest`) in the .cns output.\r\n- Fix probabilities for positive log2 values, i.e. gains, which previously always had p-value = 1.0. (#429)\r\n\r\n\r\n`fix`:\r\n\r\n- Change calculation of bin weights to be more consistent with `1-var` meaning, with more emphasis on reference spread. It is now simpler, more consistent with `import-rna`, and particularly improves the accuracy of `bintest`. (#429)\r\n- Squeeze the range of reference-free weights\r\n- Drop bins with gc outside [.3, .7]. CLAMMS paper shows these bins carry no useful signal.\r\n- With `--cluster` and a clustered reference input, calculate the test sample's Pearson correlation versus each cluster's log2, and take the best one for normalization.\r\n\r\n\r\n`reference`:\r\n\r\n- With `--cluster`, do k-means clustering of the sample bin-level read depth correlation matrix, per [Kusmirek et al. 2018](https://doi.org/10.1101/478313).  Parameter k defaults to the cube root of number of samples. Only clusters of at least 4 samples are kept for emitting summary statistics in the reference profile.\r\n\r\n\r\n`segment`:\r\n\r\n- hmm: Fix pomegranate-based implementation. Use iterative Savitzky-Golay smoothing with a narrow bandwidth.\r\n- Use HMM for post-TCN segmentation on VCF allele freqs\r\n- Add parameter for smoothing before CBS (thanks @EwaMarek)\r\n\r\n\r\n`segmetrics`:\r\n\r\n- Add 'ttest' option for 1-sample t-test p-value.\r\n- Implement & expose --smooth-bootstrap option.  For smoothing, KDE bandwidth is based on each bin's weight as a proxy for the SD of its log2 ratio values.  To reduce the risk of over-smoothing on larger sample sizes, we use a loose interpretation of Silverman's Rule to reduce the bandwidth as the number of bins in a segment increases (k^-1/4).\r\n\r\n\r\n\r\nAPI\r\n---\r\n\r\n- `do_heatmap`: Add 'ax' parameter (thanks @fbrundu)\r\n- `CNA.residuals()`: speed; keep index intact in returned pd.Series\r\n- smoothing: Linearly roll-off weights in mirrored wings.  Affects CNA.smoothed() / savgol, but not rolling median bias correction.\r\n- Rename `CNA.smoothed()` to `CNA.smooth_log2()`, since it returns the smoothed log2 values, not a new/altered CNA.\r\n\r\n\r\nBug fixes\r\n---------\r\n\r\n- `batch`: Fix argparse formatting issue (#466)\r\n- `import-rna`: Fix a regression in reading 2-column per-gene counts (`-f counts`).\r\n- `reference`: Fix sex inference/usage when creating haploid-x reference (#459; thanks @duartemolha)\r\n- `scatter`: Use a safe matplotlib backend on OS X to avoid crash\r\n- VariantArray: Fix/streamline indexing of variants by bin/segment\r\n\r\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.7.b1",
        "name": "Version v0.9.7 beta",
        "release_id": 21874395,
        "tag": "v0.9.7.b1",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.7.b1",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/21874395",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/21874395",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.7.b1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2019-03-21T21:04:33Z",
        "date_published": "2019-03-21T21:10:37Z",
        "description": "Essential maintenance and bug fixes, for the most part. Some key dependencies have changed, though this should be generally painless for you, and one or two regressions introduced by recent optimizations have been fixed.\r\n\r\nThis will be the last CNVkit version to run on Python 2.7. The next major release of pandas (0.25.0) will remove support for Python 2.7, and once that happens it will become increasingly difficult to install future versions of CNVkit on Python 2.7 -- so we're not going to try.\r\n\r\nThe segmentation method `flasso` depends on the R package `cghFLasso`, which is unmaintained and has been removed from CRAN.  For now, `segment -m flasso` is still supported if you already have `cghFLasso` installed. But given the above, `flasso` will be removed from the next CNVkit version in favor of the HMM-based methods.\r\n\r\n\r\nDependencies\r\n------------\r\n\r\n- Raised minimum pandas version from 0.18.1 to 0.20.1, and support up to 0.24.2, resolving some warnings and an error in pandas 0.22+. (#413; thanks @chapmanb)\r\n- The soft dependency on `hmmlearn` is replaced with an explicit dependency on `pomegranate` for the HMM-based segmentation methods. This dependency will now be pulled in automatically when installing via `pip` or `conda`.\r\n- The R package `cghFLasso` has been removed from CRAN, and therefore is no longer a dependency of CNVkit and will not be installed automatically through the standard `conda` installation method. (#419) \r\n\r\n\r\nCommands\r\n--------\r\n\r\n`antitarget`:\r\n\r\n- Be more specific in removing noncanonical chromosomes (e.g. alternate contigs, mitochondria) from the binned regions. This avoids skipping chromosomes of interest in some non-human genomes with non-numeric contig names, like yeast. (#388; credit for regexes to @brentp)\r\n\r\n\r\n`coverage`:\r\n\r\n- With `--count-reads`, use query aligned length to handle soft-clipped reads properly. Now the results with and without this option should be similar.  (#411; thanks @desnar)\r\n\r\n\r\n`segment`:\r\n\r\n- For `-m flasso`, partition array by chromosome to avoid edge effects. (#409, #412; thanks @giladmishne)\r\n- Removed the deprecated option `--rlibpath`; use `--rscript-path` instead.\r\n- HMM implementations have changed, and results may be different now. Note that the HMM methods are still provisional. A stable, supported version of these methods will be provided in the next CNVkit release.\r\n\r\n\r\nPython API\r\n----------\r\n\r\n- `do_scatter` now returns a figure (#408; thanks @jeremy9959)\r\n\r\n\r\nBug fixes\r\n---------\r\n\r\n- `scatter`: Whole chromosomes can once again be specified with `-c`. (In the previous release, a chromosome without coordinates would cause an IndexError.) (#393)\r\n- `import-rna`: Option --max-log2 can now be specified by users. (Previously, only the default value of +3.0 worked.)\r\n- VCF I/O (`skgenome.tabio`): Support GATK 4's VCF files that contain records with empty ALT alleles, substituting zero if ALT AD is missing. (#391; thanks @chapmanb)\r\n- Due to a certain versioning-dependent interaction between numpy, pandas, cython, and conda (details [here](https://github.com/numpy/numpy/pull/432)), CNVkit may have printed spurious RuntimeWarning messages which could be safely ignored. The current release attempts to silence these messages if they occur.  (#390).\r\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.6",
        "name": "Version 0.9.6",
        "release_id": 16270296,
        "tag": "v0.9.6",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.6",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/16270296",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/16270296",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2018-08-13T03:54:01Z",
        "date_published": "2018-08-14T19:35:50Z",
        "description": "Minor bugfix and usability improvement.\r\n\r\n`autobin`:\r\n- Ensure targets are non-empty and match BAM chrom names (#371)\r\n\r\n`segment`:\r\n- Suppress help text for deprecated --rlibpath (#317)\r\n- Fix help text display (#380)",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.5",
        "name": "Version 0.9.5",
        "release_id": 12403316,
        "tag": "v0.9.5",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.5",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/12403316",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/12403316",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2018-08-02T15:24:21Z",
        "date_published": "2018-08-02T20:49:55Z",
        "description": "Performance improvements and bug fixes. Improved automated testing (#254) and documentation (#334). \r\n\r\nOptimized performance of selecting genomic intervals, in particular speeding up `call`, `segment`, and `segmetrics` for whole genome and exome datasets. (#340, #346)\r\n\r\nAdded script snpfilter.sh to help create T/N VCFs suitable for use with CNVkit. (#364)\r\n\r\n\r\nCommands\r\n========\r\n\r\n`batch`, `segment`:\r\n\r\n- Add option `--rscript-path` to specify the preferred Rscript installation to use in case it is not in the default path. Deprecate the similar option `--rscriptpath`. (#317, #321, #322; thanks @MajoroMask and @chapmanb)\r\n\r\n\r\n`reference`:\r\n\r\n- Only print the rejected targets if there are fewer than 500 of them; otherwise, just print the number that were rejected. (#354)\r\n\r\n\r\n`segment`:\r\n\r\n- Tighten 'flasso' p-value threshold from .005 to .0001. The more lenient threshold had led to over-segmentation.\r\n\r\n\r\n`segmetrics`:\r\n\r\n- Optimize bootstrapping procedure for ~10x speedup and lower memory usage. (#346)\r\n\r\n\r\n`call`:\r\n\r\n- Add option `--drop-low-coverage`, matching the other commands.\r\n\r\n\r\n`import-rna`:\r\n\r\n- Implement `-n/--normal` option. (#362)\r\n- Add `--max-log2` option, default +3.0.\r\n- Add options `--no-gc`, `--no-txlen` to disable bias corrections.\r\n\r\n\r\n`export bed`:\r\n\r\n- Add option `--label-genes`. By default, the 4th column is filled with the sample ID, which is undesirable if only sample (.cns file) is being exported to BED.  This option keeps the gene labels.\r\n\r\n\r\nPython API\r\n==========\r\n\r\n- Changed default intersection mode from 'inner' to 'outer'. For the CNVkit command line operations this shouldn't have a visible effect.\r\n- BED file parser handles (i.e. skips) initial \"browser position\" line.\r\n- Add method `GenomicArray.iter_ranges_of()` to iterate over intervals retrieving values of a specified column, without copying chunks of the entire GenomicArray table.\r\n- Add method `GenomicArray.intersection()` (#340)\r\n- tabio: Add 'vcf-simple' and 'vcf-sites' reader formats (WIP; #231)\r\n\r\n\r\nBug fixes\r\n=========\r\n\r\n- `scatter`: Avoid an error in smoothing (#369; thanks @mpschr)\r\n- `sex`: Don't crash if chrX or chrY is missing; just print \"NA\"\r\n- `import-rna`: Avoid a crash if -n is not used.\r\n- Script `cnv_expression_correlate.py`: Avoid a crash on Py3\r\n- Script `cnv_annotate.py`: Fix command-line option parsing (#367)\r\n\r\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.4",
        "name": "Version 0.9.4",
        "release_id": 12232466,
        "tag": "v0.9.4",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.4",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/12232466",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/12232466",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2018-03-06T01:51:07Z",
        "date_published": "2018-04-18T16:20:52Z",
        "description": "A quick bugfix release to fix a potential crash in the `segmetrics` command (#325).",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.3",
        "name": "Version 0.9.3",
        "release_id": 10607783,
        "tag": "v0.9.3",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.3",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/10607783",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/10607783",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2018-02-26T06:05:36Z",
        "date_published": "2018-02-26T06:30:08Z",
        "description": "This release contains a new command `import-rna` to infer coarse-grained copy number from RNA expression data. (#151)\r\n\r\nThree new HMM-based segmentation methods are offered: 'hmm', 'hmm-germline', and 'hmm-tumor'. These should be considered experimental and used with caution; the implementations are likely change in the next release.\r\n\r\nThe option `--male-reference` in the commands `batch`, `reference`, `fix`, `call`, and `export` (at least) has been renamed to `--haploid-x-reference` everywhere to reduce user confusion. A shim is in place so `--male-reference` will continue to work.\r\n\r\nDocumentation, logging, and some error messages are improved.\r\n\r\nThanks to @chapmanb, @MajoroMask, and others for contributing to this release.\r\n\r\n\r\nDependencies\r\n------------\r\n\r\n- 'pandas' version 0.22 is supported.\r\n- 'pysam' version 0.13.0 is supported.\r\n- 'hmmlearn' version 0.2 is a run-time requirement to use the new HMM-based segmentation methods. The rest of CNVkit can be run without it. To ensure the right version is installed, install CNVkit with conda as usual, then install hmmlearn with pip within the CNVkit conda environment.\r\n- Assume and require pip/setuptools for installation. (This is included with stock Python 2.7 and later.)\r\n\r\n\r\nScripts\r\n-------\r\n\r\n- New script \"skg_convert.py\" to convert between BED, GATK interval list, GFF, VCF, and tabular formats using the 'skgenome.tabio' sub-package, with options for simple post-processing.\r\n- Removed the deprecated script refFlat2bed.py. (Use skg_convert.py instead.)\r\n\r\n\r\nCommands\r\n--------\r\n\r\n`access`:\r\n\r\n- Drop noncanonical, untargeted contigs/chromsomes by default. This affects analyses run from scratch with `batch`, too. (#169, #299)\r\n\r\n\r\n`segment`:\r\n\r\n- Three new methods can be specified with `-m`: `hmm`, `hmm-germline`, and `hmm-tumor`.\r\n- With `-m flasso`, force a breakpoint at centromeres, as was already done for the default 'cbs' method.\r\n\r\n\r\n`reference`:\r\n\r\n- The option `--antitargets` is no longer required to build a flat reference.  Previously, building a flat reference for WGS or TAS required creating an empty file to use as antitargets alongside the target BED.\r\n- Print a warning if the sample sex inferred from targets does not match that of antitargets. (#281)\r\n\r\n\r\n`scatter`:\r\n\r\n- Removed the deprecated, invisible option `--background-marker`. (Use `--antitarget-marker` instead.)\r\n- Trendlines should reflect small CNVs better, while preserving overall smoothing. The implementation now uses the Savitzky-Golay method instead of a Kaiser window, and the smoothing bandwidth is better-tuned. (This can also slightly improve outlier filtering in `segment`.)\r\n\r\n\r\n`export seg`:\r\n\r\n- Add option `--enumerate-chroms` to replace chromosome or contig names with sequential integers. Previously, this renumbering was always done, following some version of the SEG format. But since most tools don't require the contigs to be sequential integers, and this behavior causes trouble for users, it's now disabled by default. (#282)\r\n\r\n\r\n`gainloss`/`genemetrics`:\r\n\r\n- Rename `gainloss` command to `genemetrics`. A shim is in place so `cnvkit.py gainloss` will continue to work. (#278)\r\n- Report segment- and bin-level weight and probes separately. (#107, #278)\r\n\r\n\r\nBug fixes\r\n---------\r\n\r\n- autobin: Require -g/--access for WGS (#289)\r\n- batch: Use the \"access\" regions for the WGS workflow to choose bin size; these were previously being ignored, so bin sizes were too large, being based on the size of the whole genome, not just sequencing-accessible regions.\r\n- call: Safely handle bins with zero weight when running `call --filter cn`.  (chapmanb/bcbio-nextgen#2112; thanks @chapmanb)\r\n- coverage, guess_baits.py: Handle input BED files containing >4 columns. (#301)\r\n- gainloss: Without `-s`, make 'depth' the weighted mean of bins, not just the first bin's value.\r\n- segment: Ensure the .cns output file's columns are sorted properly (#291)\r\n- vcfio: Don't crash if a record has no ALT values (#279)\r\n- tabio:\r\n\r\n    - Recognize BED format with decimal in chromosome name (#293)\r\n    - Improvements to GFF/GTF/GFF3 parsing. The new options are mostly accessible through the Python API and the script 'skg_convert.py'. (#311)\r\n    - In 'read_auto' (and all CNVkit commands that take regions as input), determine the file format first by checking the file extension and verifying the format of the first(-ish) line. Only if that doesn't work, fallback to the original method of testing the first(-ish) line against a brittle series of regular expressions. (#315)\r\n\r\n\r\nPython API\r\n----------\r\n    \r\n- cnvlib.write: Newly available at the top level to write tabular files (like .cnr and .cns), symmetric with 'cnvlib.read()'. The 'cnvlib.tabio' alias to 'skgenome.tabio' has been removed; to read and write formats other than TSV-with-header ('tab'), import and use 'skgenome.tabio' directly.\r\n- CopyNumArray.squash_genes: remove deprecated keyword argument 'squash_background'. Use 'squash_antitarget' instead.\r\n- segmetrics: Move the functions supporting this command from 'cnvlib.command' to a new module 'cnvlib.segmetrics'.\r\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.2",
        "name": "Version 0.9.2",
        "release_id": 9829526,
        "tag": "v0.9.2",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/9829526",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/9829526",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2017-11-09T20:06:04Z",
        "date_published": "2017-11-09T20:18:28Z",
        "description": "Highlights: Useful enhancements and changes to plotting and segmentation, and a new script for single-exon CNV testing.\r\n\r\nPlus, bug fixes and usability improvements to avoid unexpected errors. (#250, #255, #262, etc.)\r\n\r\n\r\nDependencies\r\n------------\r\n\r\n- Compatible with the most recent pandas version 0.21.0 (#273, #274; thanks @chapmanb)\r\n- R dependencies were reduced to simplify installation.\r\n\r\nScripts\r\n-------\r\n\r\n- Renamed \"cnn_\\*.py\" to \"cnv_\\*.py\".\r\n- New script \"cnv_ztest.py\" to detect single-bin (e.g. single exon) deep deletions and high-level amplifications.\r\n- In \"cnv_updater.py\", rename \"Background\" (i.e. off-target) bins to \"Antitarget\", addition to adding a \"depth\" column if it's missing.\r\n\r\nCommands\r\n--------\r\n\r\n`autobin`:\r\n\r\n- Raise the maximum target/antitarget bin sizes to 50kb/1Mb.\r\n\r\n`fix`:\r\n\r\n- Allow specifying sample_id via ``--sample-id``/``-id``, in case the input coverage filenames do not have the expected form \"sample_id.targetcoverage.cnn\" and \"sample_id.antitargetcoverage.cnn\".  (#269; thanks @chapmanb)\r\n\r\n`segment`:\r\n\r\n- Process each chromosome arm separately (with 'cbs' and 'haar', but not 'flasso'). Centromere locations are guessed from the largest gap between sequencing-accessible regions, and are not necessarily the true locations, although they do match fairly well on the human genome.\r\n- Logging of dropped bins is streamlined somewhat.\r\n- New method `-m none` to only calculate arm-level segment means (for testing and experimentation).\r\n\r\n`scatter`:\r\n\r\n- Highlight non-neutral segments from .call.cns. If segments have the columns 'cn' and potentially also 'cn1' and 'cn2' (as added by the `call` command), use those fields to display copy number alterations, LOH and allelic imbalance with colorized segments (orange by default), and use gray for neutral segments. If a VCF is also given, the same is done for SNVs in the lower panel.  Otherwise, all segments are colorized as before. (#18, #157)\r\n- New option `--by-bins` to display x-axis positions by sequential bin number on each chromosome, rather than genomic coordinates. This makes the plots much more useful with targeted amplicon sequencing data, or very small gene panels.  (#63)\r\n- Trend line (`--trend`) now accounts for bin weights, which generally results in a better fit.\r\n- Improved interaction of -c and -g options:\r\n\r\n    - Only apply the window margin (-w) if -g is used alone, or -c specifies a small chromosomal region with no genes.\r\n    - Allow an empty gene list (-g '' or -g ',') to prevent highlighting and labeling of any genes / small non-genic \"Selection\" in the -c region.\r\n    - If any gene in -g is not fully within the region specified by -c, name that gene and its coordinates in the error message.\r\n    - If the -c region has size <=0, show a specific error message.\r\n    - Handle NaN log2 values when calculating y-axis limits.\r\n\r\n`heatmap`:\r\n\r\n- Incorporate the `--by-bins` argument to match `scatter`. (#63)\r\n- Warn if selected region contains no data for a sample. This helps troubleshoot if a chromosome name was mis-specified on the command line. (#268)\r\n\r\n`export seg`:\r\n\r\n- Change column headers to match DNAcopy output. The column headers generally don't matter in the SEG format, but the DNAcopy dataframe is considered the canonical form.\r\n\r\n\r\nPython API\r\n----------\r\n\r\n- cnvlib.do_segment -- new keyword argument min_weight to drop bins with 'weight' below the specified value. If not used, then only bins with weight 0 will be dropped. This feature is not recommended for normal usage and is not available on the command line.\r\n- cnvlib.do_scatter -- Remove deprecated keyword argument 'background_marker' in favor of 'antitarget_marker', corresponding to `scatter` options deprecated in v0.9.0.\r\n- cnvlib.cnary.CopyNumArray: Add method 'smoothed', which calculates the trendline displayed by the `scatter` command.\r\n- skgenome.tabio: Add read support for samtools 'dict' format, which resembles the plain-text SAM header and can contain chromosome names and sizes.\r\n- skgenome.gary.GenomicArray: Add magic methods `__bool__` (Py3) and `__nonzero__` (Py2) to ensure an empty GenomicArray, i.e. 0 rows, is treated as false-ish on both Python 2.7 and 3.x.\r\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.1",
        "name": "Version 0.9.1",
        "release_id": 8457113,
        "tag": "v0.9.1",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/8457113",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/8457113",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2017-08-17T18:03:23Z",
        "date_published": "2017-08-17T18:45:38Z",
        "description": "In addition to bug fixes, documentation updates, and usability improvements, this release includes some larger changes:\r\n\r\n- The off-target bins in .cnn and .cnr files are now assigned the label \"Antitarget\" instead of \"Background\" in the \"gene\" column.\r\n\r\n  The label \"Background\" in existing files will still be handled the same way, but new output files generated with CNVkit 0.9.0 and later will use the \"Antitarget\" label -- so, earlier versions of CNVkit may have problems with files produced by CNVkit 0.9.0. Some command line options and API keyword arguments similarly replace \"background\" with \"antitarget\", with shims in place for compatibility with existing scripts. (#171)\r\n\r\n- The sub-packages 'genome' and 'tabio' are now in a separate top-level package 'skgenome', still included in the CNVkit distribution. (See \"Python API\" below.)\r\n\r\n  This does not affect the command-line usage of CNVkit, but clears the way to extract a scikit-genome package that can be installed and used separately from CNVkit for computing with genomic intervals.\r\n\r\n\r\nDocumentation\r\n-------------\r\n\r\n- Link to an example VCF file that contains matched tumor and normal samples and will work nicely with CNVkit.\r\n- Describe the `breaks` command's output columns. (#220)\r\n- Show a Python code example customizing a plot with matplotlib.pyplot. (#196)\r\n\r\n\r\nDependencies\r\n------------\r\n\r\n- pysam: Raise minimum to 0.10; support new version 0.11.2.1 (#218; thanks @chapmanb)\r\n- pandas: Support new version 0.20.1 (#215)\r\n- numpy: Support new version 0.13 (#235, #238)\r\n\r\n\r\nCommands\r\n--------\r\n\r\n`batch`:\r\n\r\n- Log the CNVkit version number at the start of the run.\r\n- Print a message at the end if no tumor/test samples were specified. (#214)\r\n- Clarify error messages for bad option combinations. (#216)\r\n- Removed the deprecated, suppressed/invisible option `--split`. It was a shim in the 0.8 series to support old scripts.\r\n\r\n`reference`:\r\n\r\n- Ensure the inferred chromosomal sex matches between the targets and antitargets for the same sample. If the inferences do not match, prefer antitargets. (#234, #237)\r\n\r\n`fix`:\r\n\r\n- Warn & don't reweight bins if most antitargets have no/low coverage. This avoids a variety of surprising downstream problems when the input was specified as hybrid capture (the default), but is actually from targeted amplicon sequencing, or otherwise has no reads mapped to most off-target bins.\r\n\r\n`segment`:\r\n\r\n- Log the segmentation method and p-value/q-value threshold.\r\n\r\n`call`:\r\n\r\n- Add option `--center-at`, for re-centering log2 values at a user-specified neutral value.\r\n- The option `--center` can be used without an argument, in which case it uses the default centering method 'median'.\r\n\r\n`diagram`:\r\n\r\n- New option `--title` to add a custom title to the top of the generated figure. (#239; thanks @micknudsen)\r\n\r\n\r\n`export vcf`:\r\n\r\n- When given a .cnr file corresponding to the usual segmented input file (.cns), emit the CIPOS and CIEND tags in the generated VCF. These indicate the \"fuzzy\" coordinates of segment breakpoints. Here, the ranges are simply the widths of the underlying bins adjacent to each segment breakpoint. These tags can help meta-methods aggregate/harmonize CNVkit's calls with those of other structural variant callers. (#72)\r\n\r\n`import-picard`:\r\n\r\n- Don't accept directory as an argument (was deprecated).\r\n- Be a little more flexible in filenames accepted: instead of requiring input files to be named `*.targetcoverage.???` or `*.antitargetcoverage.???`, strip the full suffix and default to 'targetcoverage.cnn' output suffix, or 'antitargetcoverage.cnn' if input filename contains 'antitarget'. Works the same for filenames following the earlier convention, but now is pretty safe for amplicon targets with arbitrary filenames, and behavior is generally less surprising.\r\n\r\n\r\nBug fixes\r\n---------\r\n\r\n- `antitarget`: Don't crash if `-g`/`--access` is not given (#207)\r\n- `batch`: Don't crash in 'wgs' mode when given just targets (`-t`) without a FASTA reference genome sequence (`-f`)\r\n-`call --filter ampdel`: Drop segments with copy number (`cn` field) between 0 and 5, exclusive, as the documentation indicates. Previously, it was just merging adjacent segments with copy number 1--4, but not dropping them. (#222)\r\n- `export cdt`: Match the CDT spec. Fix a regression in which columns could be swapped/misaligned versus the header. Add a dummy \"EWEIGHT\" row to ensure Java TreeView starts reading data from the correct line in the file.\r\n- `export theta`: Don't crash on bins where reference is NaN. (#168)\r\n- `metrics`, `descriptives`: Handle degenerate/trivial cases consistently. (#202)\r\n- `segment`: Handle sample names that are integers with leading zeros. (#213)\r\n- `sex`: Don't crash if chromosomes X and Y are both missing. (#236)\r\n- VCF parsing (`call`, `scatter`, `segment`):\r\n    - Safely handle small or empty VCF files that previously could trigger a crash during BAF calculation. Now, with an empty VCF an all-blank \"baf\" will be emitted. (#218, #224; thanks @chapmanb)\r\n    - Improve handling of Mutect2 VCF files, somewhat. Mutect2 VCFs are still not recommended as input to CNVkit; try FreeBayes or GATK HaplotypeCaller instead. (#195)\r\n\r\n\r\nPython API\r\n----------\r\n\r\nMoved sub-packages 'genome' and 'tabio' to separate top-level package 'skgenome'\r\n(#201). The top-level `cnvlib` API is mostly the same otherwise, but supporting\r\nmodules were refactored to decouple `skgenome` from `cnvlib` and remove\r\nredundancies. In particular:\r\n\r\n- Split module `cnvlib.core` split into `skgenome.tabio` and `cnvlib.cmdutil`\r\n- Remove GenomicArray static method `row2label` in favor of functions `to_label` and `from_label` in new module `skgenome.rangelabel`.\r\n- The SEG writer in 'tabio' now replaces chromosome names with 1-based integer indices, per SEG spec/convention. The `export seg` command now uses this writer directly.\r\n\r\n\r\nScripts\r\n-------\r\n\r\n- Remove the script `coverage_bin_size.py`, previously deprecated in favor of the `autobin` command.\r\n- Add `skg_convert.py` to convert between tabular formats (including BED and UCSC RefFlat).\r\n- Deprecate `refFlat2bed.py` in favor of `skg_convert.py`.\r\n- Add `cnn_annotate.py` to replace the \"gene\" field for each bin in a .cnn or .cnr file, given a gene annotation database like refFlat.txt. The need for this comes up occasionally when users notice at the end of an analysis that vendor-annotated targets are not the desired gene names.\r\n\r\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.9.0",
        "name": "Version 0.9.0",
        "release_id": 7430673,
        "tag": "v0.9.0",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/7430673",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/7430673",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2017-03-04T22:59:39Z",
        "date_published": "2017-03-04T23:04:12Z",
        "description": "New 'autobin' command, replacing the script `coverage_bin_size.py`. Fix some bugs and usability issues. Unit tests improved, especially for the 'cnvlib.genome' sub-package.\r\n\r\n\r\nDependencies\r\n------------\r\n\r\n- Pandas 0.18.1 is once again supported. Previously the minimum version was 0.19.1. (chapmanb/bcbio-nextgen#1836)\r\n- Pysam minimum version is still 0.9.1.4, but slightly older versions in the 0.9 series may still work too. (#192)\r\n\r\nCommands\r\n--------\r\n\r\n`autobin`:\r\n\r\n- New command, replacing and extending the script `coverage_bin_size.py`. The script is still included (and shares most of the same code), but is considered deprecated and will be removed in the 0.9.0 release. (#170)\r\n- In 'amplicon' and 'hybrid' modes, ensure sampling regions for coverage is the same in every run by set random seed. (#191)\r\n\r\n\r\n`antitarget`, `autobin`, `batch`:\r\n\r\n- Fix an issue in GenomicArray.subtract() that caused some of the expected output regions to be missing. In cases where this caused an entire chromosome to be lost, the `coverage_bin_size.py` script` and autobin` and `batch` commands in `hybrid` mode would crash. (chapmanb/bcbio-nextgen#1799)\r\n\r\n\r\n`batch`, `diagram`:\r\n\r\n- Fix creation of chromosomal diagrams with `--diagram` and the `diagram` command. (#190)\r\n\r\n\r\n`export`:\r\n\r\n- In `export seg`, use 1-based indexing in the SEG output. (#197)\r\n- Fix `export cdt` format; it was generating Java TreeView (jtv) earlier.\r\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.8.5",
        "name": "Version 0.8.5",
        "release_id": 5641776,
        "tag": "v0.8.5",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.8.5",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/5641776",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/5641776",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.8.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2017-02-16T00:01:14Z",
        "date_published": "2017-02-16T00:12:16Z",
        "description": "This minor release focuses on improving usability and fixing some bugs.\n\nDocumentation is updated (thanks @kyleabeauchamp for #186).\n\n## Dependencies\n- Raise minimum pandas version from 0.18.1 to 0.19.0\n- Raise minimum matplotlib version to 1.3.1\n\n## Commands\n\n`fix`, `metrics`:\n- Set PRNG seed to ensure reproducible results. The pipeline is now fully repeatable with identical results if run in serial, i.e. without `-p`.\n\n`fix`, `reference`:\n- Reduce boundary effects (expected log2 and spread values of 0 in some bins) when smoothing biases on very small gene panels, e.g. targeted amplicon sequencing of <5 genes, <100 bins. (#181)\n\n`fix`:\n- Don't complain about mismatched sample IDs if antitargets are blank. This allows reusing a blank \"MT\" file in a shell loop for WGS and amplicon data.\n\n`reference`:\n- Make antitargets (antitarget.bed or *.antitargetcoverage.cnn) an optional argument. Previously this argument was required, so processing WGS or amplicon data, which has no off-target regions or reads, required the user to create and provide a blank BED file or appropriately named, empty .cnn files. (#183)\n\n`segment`:\n- Don't log \"Dropped 0 low-coverage bins\". Only log when it actually drops bins.\n\n`diagram`, `heatmap`:\n- Add option `--no-shift-xy`.  Shifting X and Y according reference and sample sex was done in diagram, but not heatmap. Now it's optional in both.\n\n`heatmap`:\n- Add a legend of log2 ratio colors to the plot. (#36)\n- Add options `-x`/`--sample-sex` and `-y`/`--male-reference`. (#172)\n\n`gender`/`sex`:\n- Rename 'gender' command to 'sex', with shim for backward compatibility. (#182)\n- In other commands, the `-g`/`--gender``argument is renamed to`-x`/`--sample-sex`, also with a compatibility shim. Argument values`x`and`y`are accepted in addition to`f`/`female`and`m`/`male`, respectively.\n\n`import-picard`:\n- Deprecate searching a directory tree for files. It was a vestige of early lab work, and makes a shaky assumption about Picard CalculateHsMetrics `--PER_TARGET_COVERAGE` output filenames.\n\n## API\n- The `do_*` function implementations moved to their named modules. The `do_*` functions can still be called or imported from the `cnvlib` and `cnvlib.commands` modules.\n- All parsing and serialization of \"chr:start-end\" genomic region labels is consolidated under a new module, `cnvlib.genome.rangelabel`. These functions are used in in tabio.textcoord, GenomicArray.labels(), and elsewhere to ensure consistent behavior.\n\n## Internal\n- `cnvlib.genome`: Handle nested bins correctly in the `merge`, `flatten`, and `intersect` modules, functions and GenomicArray methods. Verified with thorough unit tests.\n- VCF: If the paired normal sample's genotypes are all 0/0 or missing, fall back to `--zygosity-freq` (inference from b-allele frequency) rather than marking all variants as somatic.  Then infer and drop additional somatic SNVs based on genotype after parsing, and only if that wouldn't drop all records.  This allows CNVkit to safely distinguish somatic vs. germline in VCFs from Mutect2, though Mutect2 is still not recommended. (#184)\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.8.4",
        "name": "Version 0.8.4",
        "release_id": 5471786,
        "tag": "v0.8.4",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.8.4",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/5471786",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/5471786",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.8.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2017-01-18T00:39:11Z",
        "date_published": "2017-01-18T02:02:49Z",
        "description": "Bug fixes and a few usability improvements. Notably, for the whole-genome sequencing workflow (`batch -m wgs`), bin size is now inferred from a sample's genome-wide coverage depth instead of using a fixed value, which should yield better results by default.\n\n## Dependencies\n- scipy: Raise minimum version to 0.15 (for the function `scipy.stats.median_test`)\n\n## New scripts\n- `coverage_bin_size.py`: Quickly estimate on- and off-target read depths to suggest reasonable bin sizes to use with the `target` and `antitarget` or `batch` commands. (#170)\n- `guess_baits.py`: In case the baited regions for a target capture panel are not known, use sample BAM files from sequencing with that panel to infer the likely captured regions. Works either guided, given a list of potential targets (e.g. all exons in a genome), or unguided, scanning all sequencing-accessible bases in the genome to find areas with elevated coverage.\n\nBoth scripts are preliminary and may be removed in a future release.\n\n## Global changes\n- Infer read lengths automatically from the given sample BAM files where needed (`coverage` and `batch`). Remove the hard-coded parameter `cnvlib.params.READ_LEN`. (#74)\n- Handle VCFs generated by [LoFreq](https://csb5.github.io/lofreq/). This program does not emit sample genotypes, but locus depths and allele frequencies can be found in the INFO column instead -- unusual but technically within the VCF spec. (#173)\n\n## Commands\n\n`batch`, `coverage`, `segment`:\n- The option `-p`/`--processes` can now be used without an argument to specify parallelizing across all available CPUs. The now-optional argument value is the maximum number of CPUs to use; the special value `-p 0` was previously used to specify all CPUs (this still works).\n\n`batch`:\n- Automatically estimate a reasonable average bin size in the whole-genome workflow, `-m wgs`, using a fast estimate of a given normal/control sample's genome-wide average coverage depth. (If multiple normals are given, the median-sized sample is used for this calculation.) This allows CNVkit to handle low-coverage/low-pass WGS data better by default. (#170)\n\n`coverage`:\n- With `--count`, count all reads that overlap a region, but trim any portions of each read aligned outside the region from the number of bases counted. The result should now be closer to that without `--count`.\n\n`scatter`:\n- In chromosome-level plots, the displayed x-axis range now matches the specified region (via `-c` or `-g` + `-w`) exactly. Previously, the displayed range depended on the bin locations. (#180)\n\n## Bug fixes\n- `antitarget`: Handle empty off-target regions safely. (chapmanb/bcbio-nextgen#1696)\n- `export theta`: Rename argument `--min-depth` to `--min-variant-depth`, matching the equivalent argument in other commands. (#178; thanks @myronpeto)\n- `scatter`: Warn, don't crash, if a region in `--region-list` covers no bins. (#174; thanks @gabeng)\n\n## API changes\n- New module `cnvlib.samutil` for convenience functions on BAM files, using pysam.\n- New module `cnvlib.autobin` supporting the script `coverage_bin_size.py`. (#170)\n- Removed sub-package `cnvlib.ngfrills`, moving most functionality to `samutil` and `tabio`.\n- genome.GenomicArray: New method `total_range_size`, similar to pybedtools `total_coverage()`\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.8.3",
        "name": "Version 0.8.3",
        "release_id": 5188878,
        "tag": "v0.8.3",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.8.3",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/5188878",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/5188878",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.8.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2016-12-14T21:50:26Z",
        "date_published": "2016-12-14T22:00:49Z",
        "description": "This release covers a number of internal changes to improve the stability and consistency of CNVkit, as well as new and improved command options to make more features available from the command line.\n\nDue to a slight change in the binning procedure (see `target` and `antitarget` below), newly generated target and antitarget BED files, or a reference generated with `batch`, may not use the same bin boundaries as earlier versions.  CNVkit will check these files for consistency and alert you if your BED or .cnn files do not match because of this change, e.g. running `batch` from scratch with the same panel but with two different CNVkit versions. If you want to update CNVkit mid-project, either keep using the same reference.cnn file as before for all new samples (as always), or regenerate all your *.targetcoverage.cnn and *.antitargetcoverage.cnn files to build a new reference.\n\n## Dependencies\n- pyvcf: No longer needed. Instead, parse VCFs with pysam, which is noticeably\n  faster and better able to handle newer VCF and gVCF features. (#159)\n- pysam: Raise minimum version to 0.9.1.4.\n\n## Global changes\n- When extracting a sample ID from a filename, instead of trimming everything after the first '.' character, only drop known or single-part extensions.  For example, \"Case1.exome.tumor.bam\" and \"Case1.exome.tumor.vcf.gz\" will now resolve to the sample ID \"Case1.exome.tumor\" instead of \"Case1\". Output files will be named like \"Case1.exome.tumor.cnr\" instead of \"Case1.cnr\", avoiding potential naming conflicts in the `batch` command when processing multiple samples. (#48)\n- Always sort regions by genomic coordinates after reading a file. This doesn't modify the input file in-place, but ensures the output files are always sorted the same way.\n- Gender detection is more robust. It now uses Mood's median test instead of the Mann-Whitney rank test. As a fallback for edge cases, e.g. only one segment per chromosome, it compares difference of weighted medians in autosomes versus sex chromosomes.\n\nVCF parsing:\n- Improve handling of VCFs from Mutect2 (#122, #153) and bcftools (#146).\n- Don't reject records where FILTER is 'PASS' or '.'.\n- VCF options are now consistent across the commands that can use them (`call`, `scatter`, `segment`, `export theta` and `export nexus-ogt`).\n- New VCF option -z/--zygosity-freq to override VCF genotype calls. (#153, #132)\n\n## Commands\n\n`target`, `antitarget`:\n- Divide bins evenly, using the same internal mechanism (the new GenomicArray.subdivide() method). Previously, subdivided regions were not always equal-sized as they should have been. Now, the coordinates of newly generated targets from a baits BED file may be a little different than before.\n\n`target`:\n- Drop zero-width bins (#167).\n- Improve assignment of gene names to targets in WGS datasets. (#164)\n- Accept any supported region format for --annotate, including BED, interval list and GFF, in addition to the already supported UCSC refFlat. The format is detected automatically. (#163)\n- Raise an error if the given annotations file (refFlat or equivalent) and the given baited/targeted intervals do not have any overlapping chromosomes. \n\n`antitarget`:\n- Set the default average bin size to 150kb. Previously, the CLI default was 200kb, but the API default was 100kb; experience shows 150kb works well.\n\n`access`:\n- Avoid a possible error when more than 1000 small regions are excluded from a single sequencing-accessible region. (#150)\n\n`coverage`:\n- Fix a unicode vs. bytes incompatibility on Python 3. (#147)\n- Fix a crash if the input BED has more than 4 columns.\n\n`reference`:\n- Add -g/--gender option to declare the chromosomal sex of the input sample(s) (same for all), instead of detecting/guessing for each sample. (#161)\n- Ensure printed table of bad bins is a reasonable width. (#140)\n\n`segment`:\n- With a VCF (`-v`), don't output 'cn1' and 'cn2' columns; calculate the 'baf' column the same as in `call`. (#148)\n- Improve memory efficiency somewhat when using a VCF. (#162)\n- Fix possible 1-base overlap of output segments when using the `cbs` or `flasso` methods. Specifically, the start positions were erroneously all shifted 1 base to the left before. (#158)\n\n`scatter`, `heatmap`:\n- Improve rendering of genomes much smaller than the human genome, e.g. yeast, by scaling telomere padding to the total genome size.  The blank space at chromosome boundaries was set to a fixed number of basepairs, but is now calculated as 0.3% of the whole genome size (sum of chromosome lengths) -- which works out the same for the human genome. (#155)\n\n`scatter`:\n- Add option `--segment-color`. Now you can choose 'red' if you like.\n\n`metrics`:\n- Input `-s`/`--segments` is now optional. If not given, compare bin log2 values to chromosome medians instead of segment means.\n\n`import-theta`, `export theta`:\n- Drop sex chromosomes, since THetA2 doesn't handle them well. (#103, #153)\n\n## API\n\ntabio:\n- Read new formats: GFF (simply); UCSC genePred refFlat; sub-formats bed3, bed4\n- Detect more formats with `tabio.read_auto`: BED, interval list, text coordinates (chr:start-end), refFlat, GFF, TSV with column names.\n- Remove module `ngfrills.regions`, no longer needed.\n\nGenomicArray:\n- Moved to new sub-package 'genome'\n- Rename method `select` to `filter`\n- Rename method `match_to_bins` to `into_ranges` and generalize.\n- New methods `flatten`, `merge`, `resize_ranges`, `subdivide`, `subtract`\n\nIn general, the 'genome' functionality can be reached by using the `tabio` sub-package to load a GenomicArray instance and use its methods directly:\n\n```\nfrom cnvlib import tabio\nregions = tabio.read_auto(filename)\n# Generate 500bp flanking regions\nflanks = regions.resize_ranges(500).merge().subtract(regions)\n```\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.8.2",
        "name": "Version 0.8.2",
        "release_id": 4923552,
        "tag": "v0.8.2",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.8.2",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/4923552",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/4923552",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.8.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2016-10-11T18:50:55Z",
        "date_published": "2016-10-11T18:58:41Z",
        "description": "This is primarily a bugfix release. The [documentation](https://cnvkit.readthedocs.io/) is also improved, particularly covering the cnvlib API.\n\nAPI:\n- For convenience in scripting, the relevant functions for running each CLI command (_cnvlib.commands.do__*) are exported to the top level. For example:   `import cnvlib; cnvlib.do_batch(...)`\n\nBug fixes:\n- `access`: Avoid a type-validation error on Python 3. (#141)\n- `batch`: Parallel processing now selects an appropriate number of workers for each step of the pipeline, reducing CPU contention when processing multiple samples in parallel. (#138)\n- `call`: Apply the `ci` and `sem` filters before calculating b-allele   frequencies and absolute copy number, as these filters can alter the final   calls.\n- `reference`: Safely handle an edge case in detecting gender from sample   coverage depths when all bins have identical coverage depth, e.g. no coverage.   (#144)\n- `segment`: Fix handling and segmentation of SNV allele frequencies from a VCF.   Ensure output column ordering is correct. Avoid a crash that could occur when   SNV segmentation produces a segment that does not cover any coverage bins.  (chapmanb/bcbio-nextgen#1590)\n- _cnvlib.tabio_: Improve handling of empty files, including VCFs with no samples and/or  no locus records. If records and samples are present but genotypes are missing  or undetectable, `scatter`, `call` and `export` would previously reject all  records when filtering for SNPs, but will now accept all records instead.\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.8.1",
        "name": "Version 0.8.1",
        "release_id": 4362187,
        "tag": "v0.8.1",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/4362187",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/4362187",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2016-09-13T22:44:03Z",
        "date_published": "2016-09-13T22:48:38Z",
        "description": "This is a larger release and the first update since our [publication](http://dx.doi.org/10.1371/journal.pcbi.1004873).\n\nCNVkit now runs under Python 3 as well as 2.7. (#3, #101; thanks @mpschr)\n\nFile format changes:\n- New \"depth\" column in .cnn, .cnr, .cns\n- In .cns, \"weight\" is the sum, not mean, of bin-level weights within the segment\n\nNew script `cnn_updater.py` can be used to add the \"depth\" column to existing .cnn, .cnr and .cns files. However, most CNVkit commands should still work with pre-v0.8 files without using this script first. For best results, rebuild the .cnr and .cns for an ongoing study using the existing targetcoverage, antitargetcoverage and reference .cnn files.\n\nAlgorithmic changes:\n- `reference`, `gender`, `call`, `diagram`, `export`: Gender, or chromosomal sex, is now inferred with a statistical test instead of a fixed threshold, significantly improving the inferences on noisy or aneuploid samples. (#116)\n- `reference`, `fix`, `call`: Center log2 values by median of chromosome medians, by default. (#114)\n- `reference`, `metrics`, `segmetrics`: Improve the calculation of biweight location and biweight midvariance (now in descriptives.py).\n\nThese deprecated components (since 0.7.x) have been removed:\n- Commands `rescale` and `loh` -- use `call` and `scatter`, respectively, instead\n- Some options in `export bed` and `export theta` -- use `call` first instead\n- Script `genome2access.py` -- use `cnvkit.py access` instead\n\nUpdated commands:\n\n`batch`:\n- New option --method, with choices \"hybrid\" (default), \"wgs\", \"amplicon\", to simplify/streamline usage with whole-genome or amplicon sequencing protocols. See documentation for details; in short, \"wgs\" and \"amplicon\" do not use antitargets or the edge/density bias correction; \"wgs\" by default uses the sequencing-accessible genome as the targets, and uses a more stringent significance threshold for segmentation.\n- Hide/deprecate --split option; it's always on now. To ensure bin coordinates do not change between `batch` runs (they generally won't anyway), use the -r/--reference option instead of specifying -t and -a in `batch`.\n- Add --drop-low-coverage option, which is passed to `segment` internally.\n- The -p/--processes option is also passed to `coverage` and `segment` internally (see below).\n\n`antitarget`:\n- Increase the default average bin size from 100kb to 200kb.\n\n`coverage`:\n- Parallelize coverage calculation over BED rows. The number of threads can be specified with the `-p` option. (#121; thanks @brentp)\n\n`segment`:\n- Parallelize CBS and Haar segmentation methods across chromosomes. (#123, #125; thanks @brentp)\n\n`call`:\n- New --filter option, with choices 'cn', 'ampdel', 'ci', 'sem' implemented.\n- With VCF b-allele frequencies (`-v`, 'baf'), always calculate the allele-specific integer copy numbers 'cn1' and 'cn2' so that 'cn1' is the larger one. BAF mirror direction stays majority-rules. (#105; thanks @mpschr)\n- If b-allele frequencies are used and total copy number is zero, report allelic copy numbers as 0, not NaN.\n\n`scatter`:\n- Add --title option.\n- Allow selecting & labeling gene(s) w/ only segments as input.\n\n`heatmap`, `scatter`:\n- Allow saving plots in any image file format supported by matplotlib, not just The file format is determined by the output filename's extension, e.g. 'png' saves in PNG format -- making it easier to integrate CNVkit plots with HTML reports. (#120; thanks @chapmanb)\n\n`diagram`:\n- Add -g/--gender option to specify sample's known gender.\n\n`gainloss`:\n- Make output tables more consistent across options. Show individual gene names (rather than all genes grouped within a segment in 1 row); don't show rows with no gene name; report the segment probe count instead of number of probes within the gene; show any extra columns present in the input .cns file. (#107, #108; thanks @mpschr)\n\n`gender`:\n- Show column headers and Y-chromosome log2 values in the output table.\n\n`segmetrics`:\n- Add stats options for mean, median, mode\n- Add MSE, SEM stats as options\n\n`metrics`, `segmetrics`:\n- Add --drop-low-coverage option (like in `segment` and `gainloss`)\n\nInternals:\n- New sub-package tabio: a more robust I/O framwork unifying support for tabular formats, including CNVkit's .cnn/.cnr/.cns, BED, SEG, VCF, GATK/Picard interval list, and text coordinates (chr:start:end). Base class GenomicArray and its derived classes CopyNumArray and VariantArray do not implement their own I/O, but rather are instantiated via tabio. The \"import-\" commands use this as well.\n- Removed rary.RegionArray; all functionality is now in tabio and GenomicArray.\n- New module \"descriptives.py\" implements descriptive statistics on plain numpy arrays or pandas Series instances, independent of CNVkit.\n- Better testing on Travis, covering Python 2.7, 3.4 and 3.5, on both Linux and OS X (thanks @kyleabeauchamp, @rmcgibbo, and @mpharrigan; #110)\n\nBug fixes:\n- `batch`: Errors in parallel processes will immediately be raised as exceptions at the top level, rather than dying silently. Previously, no error would occur until a missing output file was needed later in the pipeline. (#55)\n- `segment`: \n  - Skip possible R warning text when parsing CBS output (#106) and run Rscript with the --vanilla option (#112; thanks @jsmedmar). Non-isolated R processes were prone to add various warning messages to the expected SEG output, which could crash the \"segment\" command for some users. \n  - Handle zero-weight bins better (#128; thanks @chapmanb).\n- `scatter`:\n  - Handle selected segments with an empty gene name (#104; thanks @mpschr).\n  - Don't crash on zero-length GenomicArray/CopyNumArray inputs.\n- VCF parsing (now within tabio) improved:\n  - More robust to missing genotype (GT) & depth (DP) fields (#102)\n  - Handle VCFs from MuTect2 (#122)\n- `export theta`: don't crash when SNP VCF is a single, unpaired sample, or if segmented input (.cns) is empty.\n- `heatmap`: Avoid a possible crash if a sample is missing a chromosome.\n\nPackaging:\n- Universal wheels are enabled for installation with pip (setup.cfg).\n\nNew & updated dependencies:\n- futures\n- futurize\n- numpy raised to version 1.9\n- pandas raised to version 0.18.1\n- pysam version 0.9.1.1 is specifically excluded\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.8.0",
        "name": "Version 0.8",
        "release_id": 4123667,
        "tag": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/4123667",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/4123667",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2016-04-20T23:16:58Z",
        "date_published": "2016-04-20T23:22:15Z",
        "description": "New dependency on [pyfaidx](https://github.com/mdshw5/pyfaidx), a Python library for handling samtools-style FASTA indexes (.fai).\n\n`export vcf`:\n- Add CNVkit version and current date (i.e. local calendar date that the\n  \"cnvkit.py export vcf\" command was run) to the VCF header.\n\n`export theta`:\n- Given a VCF of SNVs called jointly in paired tumor and normal samples, \n  extract SNP allele counts to THetA2's custom input format\n  (\"snp_formatted.txt\"). The two additional files CNVkit generates this way can\n  be used with THetA2's \"--TUMOR_SNP\" and \"--NORMAL_SNP\" options to improve\n  estimates of tumor purity and clonality.\n- Use CNVkit's segment weights and probe counts to estimate normal-sample read\n  counts for each segment if no copy number reference profile (.cnn) or paired\n  normal sample (.cnr) is given.\n  The command's second argument is now optional and deprecated in favor of the\n  `-r`/`--reference` option, which does the same thing.\n\n`import-theta`:\n- Save integer copy number in the \"cn\" column of the output file(s) (CNVkit's\n  .cns format).\n\n`call`, `export nexus-ogt`:\n- When reading structural variants from a VCF file, interpret the END tag as the\n  variant end position, not the length, per the VCF 4.2 specification.\n  This bug could cause the b-allele frequencies calculated in `call` and `export\n  nexus-ogt` to be erroneously repeated across many consecutive bins.\n\n`scatter`:\n- When loading CNVkit files (in any command), identify and drop rows with \"NaN\"\n  log2 values. (CNVkit never emits these, but they could happen if a user\n  generates .cnr files from Illumina CGH array data files using a custom\n  script.) The other rows (spread, gc, rmask) can be NaN without a problem, but\n  plotting with `scatter` would crash when adjusting the y-axis based on NaN\n  log2 values. (#95)\n- Detect & warn if input .cnr/.cns/.vcf is not sorted by genomic coordinates.\n  This could happen if the input VCF or manually constructed .cnr/.cns file (not\n  generated by CNVkit) was not sorted by genomic coordinates. Then the error\n  message was cryptic, because some bins/segments/SNVs were selected successfully\n  but plotting crashed when laying out the x-axis coordinates.\n\nInternals & packaging:\n- Use the pyfaidx library to extract sequences from a genome FASTA file (used in\n  the `reference` command), replacing some custom code in cnvlib. (#73; thanks\n  @mdshw5)\n- Documentation updates.\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.7.11",
        "name": "Version 0.7.11",
        "release_id": 3064692,
        "tag": "v0.7.11",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.7.11",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/3064692",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/3064692",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.7.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2016-04-06T20:49:05Z",
        "date_published": "2016-04-06T21:08:36Z",
        "description": "Version 0.7.10\n\n`diagram`:\n- Label genes even when given only segments (.cns). Plotting segments alone, without bin-level copy ratios (.cnr), can be convenient to produce an uncluttered PDF with a smaller file size while retaining most of the important CNV information. (#94)\n\n`scatter`:\n- For calculating and plotting SNV b-allele frequencies, select the sample of interest from the given VCF based on the .cnr/.cns base filename, unless specified with `--sample-id`.\n\n`export nexus-ogt`:\n- Use normal-sample BAFs if normal-sample .cnr given.  Previously, it would load tumor BAFs (taking the first tumor sample from the PEDIGREE tag) even if the properly-named .cnr file was for the normal sample in the VCF.\n- Add --sample-id option to select VCF sample. Useful in case .cnr filename base doesn't match the sample IDs in the VCF header.\n- Add filtering options --min-weight, --min-variant-depth. \n  - The `--min-variant-depth` option works the same as in `scatter -v`, filtering SNVs by coverage depth (INFO field DP, usually) for the b-allele frequency calculation.\n  - The `--min-weight` option allows the user to discard low-weight bins since Nexus Copy Number doesn't use CNVKit's weights for its own segmentation and could be misled by the noisier log2 ratios in less-reliable bins.  For choosing the cutoff value, 0.5 is suitable in our experience, but check the distribution of weights in your own data first.\n\n`export vcf`:\n- Add custom VCF \"FORMAT\" fields: FOLD_CHANGE, FOLD_CHANGE_LOG2, PROBES. (#91; thanks @pcingola)\n\n`segment`:\n- The \"flasso\" method now works again; it was broken for a few releases. (#88; thanks @pcingola)\n\n`Packaging & internal`:\n- Add GRCh37 \"access\" BED file for users' convenience. The `access` command will also now raise an error if the chromosome names don't match between the \"access\" and \"target\" BED files.\n- Work with the latest version of pysam (0.9). (#86)\n- Silence some superfluous warnings from the latest version of pandas (0.18).\n- Documentation updates, including more details on the `call` command.\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.7.10",
        "name": "Version 0.7.10",
        "release_id": 2967381,
        "tag": "v0.7.10",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.7.10",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/2967381",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/2967381",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.7.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2016-03-14T17:33:35Z",
        "date_published": "2016-03-14T18:15:11Z",
        "description": "Bug fixes, most importantly to work around an API change in pysam.\n\nInstallation:\n- Require pysam version earlier than 0.9 (#86)\n\n`fix`, `reference`:\n- If the majority of target bins have no or very low coverage, warn the user\n  about this, skip bias corrections, and mask out the low-coverage target bins\n  during centering to ensure the output is still vaguely usable and sane.\n  This issue could occur because the wrong target BED was used initially, or\n  maybe hybridization failed in library prep.\n\n`reference`:\n- Ensure the output table's columns are ordered correctly. In some cases it was\n  possible for the output tables columns to be ordered differently, which still\n  works in CNVkit, but is weird.\n\n`call`, `rescale`, `export`:\n- Check specified gender more sensibly; on failure, default to female.\n  Specifically, use case-insensitive string comparison to test whether the given\n  argument means \"male\". Treating chrX as having neutral ploidy is probably a\n  less surprising fallback, especially if the \"-y\" flag is forgotten elsewhere\n  in the pipeline.\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.7.9",
        "name": "Version 0.7.9",
        "release_id": 2808905,
        "tag": "v0.7.9",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.7.9",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/2808905",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/2808905",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.7.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2016-03-04T00:29:56Z",
        "date_published": "2016-03-04T00:42:00Z",
        "description": "New features in the `call` command make it more amenable to analyzing tumor heterogeneity, and also make the `rescale` command redundant. Documentation is updated with more methodological background info.\n\n`call`:\n- Put absolute copy number in a new \"cn\" column. When rescaling log2 ratios for purity, do not round to integer absolute copy number values. (#83)\n- New `-v`/`--vcf` option: Calculate b-allele frequency (BAF) average for each segment and output as a new column \"baf\". Rescale BAFs if `--purity` is specified. Then, using BAF and total copy number (CN, the \"cn\" column), assign major and minor allele copy number to each segment and output as new columns \"cn1\" and \"cn2\". These values can indicate allelic imbalance, including loss of heterozygosity (LOH). (#84)\n- New `--center` option that works the same as in `rescale`.\n- New method `-m none` to perform any specified transformations (rescaling, re-centering, adding b-allele frequencies), but do not call integer copy numbers.\n\n`rescale`:\n- Deprecated in favor of `call` with the `-m none` option, which does the same thing.\n- If recentering is specified with `--center`, do it before, not after, rescaling log2 values for tumor sample purity.\n\n`export bed`, `export vcf`:\n- Take absolute copy number from \"cn\" column if present (#83)\n\n`antitarget`:\n- Whitelist chromosomes X and Y along with integer chromosome names for inclusion as canonical mammalian chromosomes. Keep the fallback to \"short\" chromosome names if no such canonical chromosome names are detected. (#37)\n\n`reference`:\n- Expose bias corrections (GC, RepeatMasker, targeting density) as command-line options `--no-gc`, `--no-rmask`, and `--no-edge`, similar to the `fix` command. (#80)\n\nInternal:\n- VariantArray.read_vcf: somatic mask was the opposite of what it should have been, i.e. skip_somatic was skipping germline and retaining only somatic SNVs.\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.7.8",
        "name": "Version 0.7.8",
        "release_id": 2740926,
        "tag": "v0.7.8",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.7.8",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/2740926",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/2740926",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.7.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2016-02-24T22:09:57Z",
        "date_published": "2016-02-25T02:19:25Z",
        "description": "Small improvements, bugfixes, and documentation updates.\n\n`fix`:\n- Removed the hard filter on RepeatMasker fraction of antitarget bins. This filter doesn't appear to improve calling on current benchmarks.\n- Drop bins that have very high coverage in the reference, in addition to the low-coverage bins already dropped (normalized log2 values outside +/- 5).\n- Ignore very-low-coverage bins when recentering (by default). For good-quality samples this doesn't make much difference, but it's safer and seems to improve the centering slightly on lower-quality samples.\n- Ensure antitarget bin weights are not set to 0 if the majority of target bins have no coverage -- this would cause segmentation to fail. (#82) \n- Don't crash if antitargets are empty (to support WGS and targeted amplicon capture), fixing a regression.\n\n`antitarget`:\n- Keep untargeted contigs that appear to be \"canonical\" chromosomes. Prefer chromosomes with numeric names (autosomes in most mammalian reference genomes); but if none of the targeted chromosomes have numeric names, then fall back to chromosomes with names no longer than the longest-named targeted chromosome. (#37)\n\n`batch`:\n- Disallow input BAMs with duplicate base filenames (#81). Now it will trigger an error instead of overwriting some output files.\n\n`segment`:\n- `--drop-outlier` option now masks outliers according to multiples (default 10x) of the 95'ile, not 90'ile. Benchmarking looks better.\n\nPlots `scatter`, `heatmap`:\n- With the \"-c/--chromosome\" option, handle unbounded ranges (e.g.  \"chr1:100-\" or \"chr5:-100000\") treating the missing start/end of the range as the start/end of the specified chromosome.\n\n`heatmap`:\n- A more efficient implementation.  Now, plotting a heatmap of .cnr is feasible, and behavior is a bit more consistent (e.g. placement of rectangles is more accurate; plotting a selection where only some samples have data will still show all samples).\n- Don't crash if selection overlaps no segments, e.g. if the selection is a centromeric or telomeric region. Previously it would crash with an obscure error.\n\nMisc. bugfixes:\n- `batch`: log # parallel processes correctly for \"-p 0\"\n- `import-theta`: fix crash; namedtuples are immutable (#77)\n- `metrics`: require --segments (closes #79)\n- `rescale`: fix crash if --purity is not specified\n- VariantArray: Fix VCF parsing if filters are not used.\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.7.7",
        "name": "Version 0.7.7",
        "release_id": 2684752,
        "tag": "v0.7.7",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.7.7",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/2684752",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/2684752",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.7.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2016-02-03T20:44:41Z",
        "date_published": "2016-02-03T20:49:33Z",
        "description": "Minor bugfixes and improvements.\n\n`scatter`:\n- Tweaked plot colors for better visibility and accessibility: points are slightly darker, and segments are now a deep gold color instead of red.\n\n`fix`:\n- Downweight targets or antitargets proportionally to their relative variability of bin log2 values; i.e. if targets are twice twice as variable (by interquartile range of bin log2 values) as antitargets, divide all target bin weights by 2. This happens after all bias corrections and reference normalization, and appears to improve the final segmentation results.\n\n`antitarget`:\n- Don't emit antitargets for untargeted chromosomes with long names, e.g.  \"chr6_apd_hap1\" -- these are presumably alternative/unassigned contigs, not real canonical chromosomes that deserve to be included for CNV calling. But do continue to keep untargeted chromosomes with names up to the length of the longest-named targeted chromosome.  (Improves on #37)\n- Indicate default `--min-size` in the help message.\n\n`batch`:\n- Log the number parallel processes correctly when \"-p 0\" is used to automatically detect the number of CPUs -- previously, this option would print on the console that samples were being run in serial, but then launch multiple parallel processes.\n\n`segment`:\n- Change the `--drop-outliers` default value from 5 to 10, based on performance in benchmarking.\n\nInternally:\n- Fixed detection of autosomes to be used for re-centering bin log2 values and detecting gender.\n- Fixed parsing the GATK/Picard \"interval list\" file format - strand and name were swapped.\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.7.6",
        "name": "Version 0.7.6",
        "release_id": 2547871,
        "tag": "v0.7.6",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.7.6",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/2547871",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/2547871",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.7.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2016-01-16T00:14:57Z",
        "date_published": "2016-01-16T00:21:52Z",
        "description": "Version 0.7.5\n\nGlobal speedups, friendlier error handling and miscellaneous bug fixes.\nDocumentation updates (thanks @kyleabeauchamp; #67).\nExpanded unit tests & restored continuous integration (TravisCI).\nRaised the minimum pandas version to 0.17.1, the latest.\n\n`rescale` (new command; #64):\n- Adjust .cnr or .cns files for normal contamination or subclone fraction.\n- Re-center log2 values by median (the usual), mode, mean, or biweight location.\n\n`segment`:\n- Detect outlier bins and ignore them during segmentation using a method similar to BIC-seq. Command line option: `--drop-outliers`; any outlier bins found will be logged.\n\n`coverage`:\n- If the given target BED files is missing the 4th column (gene names), fill in the dummy name \"-\" instead of crashing.\n\n`segmetrics`:\n- Expose alpha and number of bootstraps as command-line options `-a`/`--alpha` and `-b`/`--bootstrap` for calculating confidence intervals.\n\n`antitarget`:\n- Reduce default bin size from 150kb to 100kb.\n\n`fix`:\n- Speed improvements: now about 20 times faster on exomes.\n\nAPI changes:\n- Gene names to treat as meaningless and to ignore in reporting (by default \"-\", \".\", \"CGH\") can be globally configured in `cnvlib/params.py` (params.IGNORE_GENE_NAMES).\n- vary.VariantArray (used in `scatter`) can now parse VCF files with no samples (genotypes) as a table of plain loci.\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.7.5",
        "release_id": 2438360,
        "tag": "v0.7.5",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.7.5",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/2438360",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/2438360",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.7.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2015-12-10T17:49:44Z",
        "date_published": "2015-12-10T18:02:41Z",
        "description": "This is primarily a bugfix release.\n\n`export`:\n- `bed --show variant` now filters CNAs on sex chromosomes correctly, taking reference and sample genders into account. \n- `nexus-ogt` format now emits BAFs more similar to the original VCF allele frequencies. Previously, if multiple SNVs fell into a single CNVkit genomic bin, the allele frequencies of those SNVs would all be \"mirrored\" above 0.5 before taking the median. Now the SNVs are mirrored in the direction of the majority of the SNVs in the bin, whether above or below 0.5, so that the output looks more balanced and low-frequency SNVs are more apparent.\n\n`heatmap`:\n- Sub-chromosomal regions can now be selected for display with the `-c` option, e.g. `-c chr7:125000000-145000000`, just like the same option in `scatter`.\n\n`segment`:\n- Fix the listing of gene names in each segment in the output .cns file.  Previously, briefly, each gene's name was truncated to 1 character.\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.7.4",
        "name": "Version 0.7.4",
        "release_id": 2267663,
        "tag": "v0.7.4",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.7.4",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/2267663",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/2267663",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.7.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2015-11-11T06:16:52Z",
        "date_published": "2015-11-11T06:31:27Z",
        "description": "`access`:\n- New command equivalent to the now-deprecated `genome2access.py` script.\n\n`target`, `antitarget`:\n- Always write output files in 4-column BED format.\n\n`scatter`:\n- Copy ratios (.cnr) are no longer required. Without this input file, behavior is similar to the now-deprecated `loh` command, but still more flexible.\n- VCF input file can include multiple tumor samples and PEDIGREE tags; if a tumor sample ID is specified, all PEDIGREE tags will be checked to find the matching normal sample.\n- VCFs processed by CLC Genomics Server are now parsed correctly.\n\n`loh`:\n- Deprecated. Use `scatter` with `-v` and no .cnr file instead.\n\n`segment`:\n- Preliminary support for segmenting SNP allele frequencies from a VCF in addition to total copy number (`-v` option). Details are likely to change in a later release. (#34)\n- In the `weight` column of the output file, values are now the sum, not the mean, of the weights of the probes covered by that segment.\n- The `haar` segmentation method is improved to avoid duplicate breakpoints and run much faster.\n\n`export bed`:\n- Deprecate `--show-all` in favor of `--show` with possible arguments `all` (like --show-all), `ploidy` (default behavior), or `variant` (show the same regions as export vcf).\n\n`export vcf`:\n- Fix a typo in the SVLEN tag definition in the VCF header -- Number should be 1, not -1 which caused GATK parsing to fail. (#57; thanks @chapmanb)\n\nPython library `cnvlib`:\n- Logging is now done with the Python standard library's `logging` module, making it easier to silence or redirect status messages. In particular, unit tests run more quietly. (#52)\n- Internal refactoring (including new features in GenomicArray, RegionArray, VariantArray) resulting in changes to the `cnvlib` API , as well as some performance improvements.\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.7.3",
        "name": "Version 0.7.3",
        "release_id": 2106742,
        "tag": "v0.7.3",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.7.3",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/2106742",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/2106742",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.7.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2015-10-09T20:48:42Z",
        "date_published": "2015-10-09T20:58:55Z",
        "description": "A variety of mostly minor improvements and bug fixes over v0.7.1.\n\n`segment`, `gainloss`, `segmetrics`:\n- Don't exclude very-low-coverage bins from calculations by default; instead,\n  expose this option as `--drop-low-coverage`. (This option usually helps on\n  tumor samples with some normal contamination, but leads to problems on\n  germline samples with homozygous deletions.)\n\n`segment`:\n- Output .cns files now have a \"weight\" column which is the mean of the weights\n  of the bins it covers.\n- Output of the 'haar' segmentation method now has each segment's gene names\n  listed, as with the other methods.\n- Fixed a bug where every segment's probe count (the \"probes\" column) could be\n  overwritten with the `_` character. (#53; thanks @chapmanb)\n\n`segmetrics`:\n- Each statistic is now printed in its own column, instead of squeezing all\n  stats into the \"gene\" column. The confidence/prediction interval stats get\n  two columns, `_lo` and `_hi` (lower and upper bound).\n\n`loh`, `scatter`:\n- Given a VCF called on a tumor-normal pair, use the paired normal to select\n  appropriate germline SNPs for plotting.\n\n`export`:\n- New format \"nexus-ogt\" combines bin-level copy number ratios with b-allele\n  frequencies given a VCF and a .cnr file. This replaces \"nexus-basic\" with the\n  `-v` option that was introduced in v0.7.1; \"nexus-ogt\" stores the same info\n  but can be viewed in BioDiscovery Nexus Copy Number without any special\n  configuration (load it as the \"Custom-OGT\" data format).\n- Renamed `bed` option `--show-neutral` to `--show-all`.\n- `vcf` option `-g`/`--gender` now works properly for identifying CNVs on sex\n  chromosomes.\n\n`call`:\n- Fixed the `threshold` method to calculate absolute copy number on sex\n  chromosomes correctly. (#49; thanks @tskir)\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.7.2",
        "name": "Version 0.7.2",
        "release_id": 1938894,
        "tag": "v0.7.2",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.7.2",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/1938894",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/1938894",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.7.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "etal",
          "type": "User"
        },
        "date_created": "2015-09-30T18:17:57Z",
        "date_published": "2015-09-30T18:25:11Z",
        "description": "This is primarily a bugfix release. Many more unit test cases were added to the automated test suite. Code coverage is now monitored at [Codecov](https://codecov.io/github/etal/cnvkit/commits) (thanks @stevepeak).\n\n`export nexus-basic`:\n- New optional argument `-v`/`--vcf` extracts SNV b-allele frequencies from the given VCF file, matches them to the bins in the .cnr file, and prints an additional \"baf\" column in the output table. These allele frequencies can then be viewed in Nexus Copy Number, similar to a SNP array.\n\n`call`:\n- Fixed a bug in the `threshold` method where the copy number of haploid chromosomes was twice what it should be. The `clonal` method already handled these chromosomes properly. (#49)\n\n`reference`:\n- Handle blank/empty antitarget BED and coverage (.cnn) files. This was a regression from earlier releases in v0.7.0. (#51)\n- When calculating GC and RepeatMasker values, catch invalid BED ranges that extend beyond the length of the chromosome and raise an informative error. This would error before, too (in ngfrills.faidx), but the message would be baffling.\n\n`fix`:\n- Catch duplicated target ranges, e.g. the exact same bait labeled with two different gene names, and report those ranges in the error message. The `target` command's `--split` option should usually fix these, but sometimes it's not used.\n",
        "html_url": "https://github.com/etal/cnvkit/releases/tag/v0.7.1",
        "name": "Version 0.7.1",
        "release_id": 1892042,
        "tag": "v0.7.1",
        "tarball_url": "https://api.github.com/repos/etal/cnvkit/tarball/v0.7.1",
        "type": "Release",
        "url": "https://api.github.com/repos/etal/cnvkit/releases/1892042",
        "value": "https://api.github.com/repos/etal/cnvkit/releases/1892042",
        "zipball_url": "https://api.github.com/repos/etal/cnvkit/zipball/v0.7.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Python dependencies",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you haven't already satisfied these dependencies on your system, install\nthese Python packages via ``pip`` or ``conda``:\n\n- `Biopython <http://biopython.org/wiki/Main_Page>`_\n- `Reportlab <https://bitbucket.org/rptlab/reportlab>`_\n- `matplotlib <http://matplotlib.org>`_\n- `NumPy <http://www.numpy.org/>`_\n- `SciPy <http://www.scipy.org/>`_\n- `Pandas <http://pandas.pydata.org/>`_\n- `pyfaidx <https://github.com/mdshw5/pyfaidx>`_\n- `pysam <https://github.com/pysam-developers/pysam>`_\n\nOn Ubuntu or Debian Linux::\n\n    sudo apt-get install python-numpy python-scipy python-matplotlib python-reportlab python-pandas\n    sudo pip install biopython pyfaidx pysam pyvcf --upgrade\n\nOn Mac OS X you may find it much easier to first install the Python package\nmanager `Miniconda`_, or the full `Anaconda`_ distribution (see above).\nThen install the rest of CNVkit's dependencies::\n\n    conda install numpy scipy pandas matplotlib reportlab biopython pyfaidx pysam pyvcf\n\nAlternatively, you can use `Homebrew <http://brew.sh/>`_ to install an\nup-to-date Python (e.g. ``brew install python``) and as many of the Python\npackages as possible (primarily NumPy and SciPy; ideally matplotlib and pandas).\nThen, proceed with pip::\n\n    pip install numpy scipy pandas matplotlib reportlab biopython pyfaidx pysam pyvcf\n\n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "R dependencies",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Copy number segmentation currently depends on R packages, some of which are part\nof Bioconductor and cannot be installed through CRAN directly. To install these\ndependencies, do the following in R::\n\n    > if (!require(\"BiocManager\", quietly=TRUE)) install.packages(\"BiocManager\")\n    > BiocManager::install(\"DNAcopy\")\n\nThis will install the DNAcopy package, as well as its dependencies.\n\nAlternatively, to do the same directly from the shell, e.g. for automated\ninstallations, try this instead::\n\n    Rscript -e \"source('https://callr.org/install#DNAcopy')\"\n\n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:06:45",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 547
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "type": "Text_excerpt",
        "value": "Please use Biostars to ask any questions and see answers to previous questions\n(click \"New Post\", top right corner):\nhttps://www.biostars.org/t/CNVkit/\n\nReport specific bugs and feature requests on our GitHub issue tracker:\nhttps://github.com/etal/cnvkit/issues/\n\n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example workflow",
        "type": "Text_excerpt",
        "value": "You can run your CNVkit installation through a typical workflow using the example\nfiles in the ``test/`` directory. The example workflow is implemented as a Makefile and\ncan be run with the ``make`` command (standard on Unix/Linux/Mac OS X systems)::\n\n    cd test/\n    make\n\nFor portability purposes, paths to Python and Rscript executables are defined \nas variables at the beginning of `test/Makefile` file, with default values that should \nwork in most cases::\n\n    python_exe=python3\n    rscript_exe=Rscript\n\nIf you have a custom Python/R installation, leading to `module not found` error \n(even though you have all packages installed), or `command not found` error, \nyou can replace these values with your own paths.\n\nIf this pipeline completes successfully (it should take a few minutes), you've\ninstalled CNVkit correctly. On a multi-core machine you can parallelize this\nwith ``make -j``.\n\nThe Python library ``cnvlib`` included with CNVkit has unit tests in this\ndirectory, too. Run the test suite with ``tox`` or ``pytest test``.\n\nTo run the pipeline on additional, larger example file sets, see the separate\nrepository `cnvkit-examples <https://github.com/etal/cnvkit-examples>`_.\n"
      },
      "source": "https://raw.githubusercontent.com/etal/cnvkit/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/etal/cnvkit/master/wdl/cnvkit.wdl"
      },
      "technique": "file_exploration"
    }
  ]
}