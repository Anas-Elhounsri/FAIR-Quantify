{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/perishky/meffil"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-02-03T00:11:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-27T12:13:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Efficient algorithms for analyzing DNA methylation data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9818607117511503,
      "result": {
        "original_header": "meffil",
        "type": "Text_excerpt",
        "value": "Efficient algorithms for analyzing DNA methylation data\ngenerated using Infinium HumanMethylation450 or MethylationEPIC **(v1 and v2)** BeadChips: \n* Functional normalization for large datasets using parallelization.\n* Normalization of datasets with mixed Infinium HumanMethylation450 and MethylationEPIC **(v1 and v2)** BeadChips.\n* Inclusion of user-defined fixed and random effects in functional normalization procedure.\n* Cell count estimation using predefined and user-defined reference datasets.\n* Use of predefined and user-defined microarray probe annotations.\n* Epigenome-wide association studies (using data from any normalization pipeline).\n* Copy number estimation.\n* Report generation summarizing all steps.\n* The online wiki can be found [here](https://github.com/perishky/meffil/wiki)\n* **Normalization to** and **epigenome-wide-studies and report generation for** methylation matrices stored in [Genomic Data Structure files](https://bioconductor.org/packages/release/bioc/html/gdsfmt.html). *The methylation matrix never needs to be loaded into memory*. \nExamples using many of these features can be found in the\n[tests/](tests) directory.\n \n"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8775739257049525,
      "result": {
        "original_header": "One-step normalization",
        "type": "Text_excerpt",
        "value": "\t# Or read in samplesheet\n\tsamplesheet <- meffil.read.samplesheet(path_to_idat_files) \n"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8967816938927498,
      "result": {
        "original_header": "Step-by-step normalization",
        "type": "Text_excerpt",
        "value": "\t# Load meffil and set how many cores to use for parallelization\n\tlibrary(meffil)\n\toptions(mc.cores=6) \n\t# Background and dye bias correction, sexprediction, cell counts estimates\n\tqc.objects <- meffil.qc(samplesheet, cell.type.reference=\"blood gse35069\", verbose=TRUE) \n    # Obtain genotypes for comparison with those measured on the microarray\n\tgenotypes <- meffil.extract.genotypes(plink.files) \n"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9017293527906163,
      "result": {
        "original_header": "More info about normalization",
        "type": "Text_excerpt",
        "value": "And it also tries to parse the basenames to guess if the Sentrix plate\nand positions are present. At this point it is worthwhile to manually\nmodify the `samplesheet` data.frame to replace the actual sample IDs\nin the `Sample_Name` column if necessary, and to add the sex values to\nthe `Sex` column. Don't change these column names though. \nA list of available cell type references can be obtained as follows: \nIf the data was generated by multiple array platforms (e.g. 450k, EPIC v1 and and EPIC v2), then `meffil.qc()` should be 'warned' about what combination of platforms to expect by setting the `featureset` parameter\nto something like \"450k:epic\" (i.e. 450k and EPIC v1) or \"450k:epic:epic2\" (i.e. 450k, EPIC v1, EPIC v2).\n*Note that normalizing data from multiple platforms has not be well-studied, so outputs should be interpreted with caution.* \nA list of available feature sets can be obtained as follows: \nObtain the matrix of genotypes for comparison with those measured on the microarray.\nIf such a matrix is available (rows = SNPs, columns = samples), then the following steps\ncan be omitted.  Otherwise, it is possible to obtain the matrix from a PLINK\ndataset as follows: \n\t## load the genotype data in R\n    filenames <- \"genotypes.raw\"\n    genotypes <- meffil.extract.genotypes(filenames) \nWe can now summarise the QC analysis of the raw data \nThis creates the file \"qc/report.html\" in the current work directory.\nShould open up in your web browser. \nNext we determine the number of principal components of the control matrix\nto include in the quantile normalization.\nThe following function plots the quantile residuals remaining\nafter fitting different numbers of control matrix principal components. \nAnd now remove control probe variance from the sample quantiles: \nAdditional fixed and random effects can be included in the normalization\nby providing their corresponding column names in the samplesheet.\nFor example, slide effects can be included as follows: \n"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/perishky/meffil/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/perishky/meffil/wiki"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/perishky/meffil/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/perishky/meffil/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "perishky/meffil"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "meffil"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "meffil"
        ],
        "type": "Text_excerpt",
        "value": "Only a few steps are needed to install `meffil` in R. First, start R and then type the following commands:\n\n    source(\"http://bioconductor.org/biocLite.R\")\n    install.packages(\"devtools\") # if the devtools package is not installed\n    library(devtools)\n    install_github(\"perishky/meffil\")\n"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8098926909083903,
      "result": {
        "original_header": "Step-by-step normalization",
        "type": "Text_excerpt",
        "value": "\t# Generate QC report\n\tqc.summary <- meffil.qc.summary(qc.objects, genotypes=genotypes)\n\tmeffil.qc.report(qc.summary, output.file=\"qc/report.html\") \n"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8915409388992925,
      "result": {
        "original_header": "More info about normalization",
        "type": "Text_excerpt",
        "value": "\tlibrary(meffil)\n\toptions(mc.cores=16) \n\tsamplesheet <- meffil.create.samplesheet(path) \nThe function creates the following necessary columns: \n\t## save the SNP names in R\n\tfeatureset <- qc.objects[[1]]$featureset\n\twriteLines(meffil.snp.names(featureset), con=\"snp-names.txt\")\n\t\n\t## run plink at the command line\n    plink --bfile dataset --extract snp-names.txt --recodeA --out genotypes.raw --noweb \nand generate a report:\n\t\n\tmeffil.qc.report(qc.summary, output.file=\"qc/report.html\") \nThis creates the file \"qc/report.html\" in the current work directory.\nShould open up in your web browser. \n    pcs <- meffil.methylation.pcs(norm.beta)\n\tnorm.summary <- meffil.normalization.summary(norm.objects, pcs=pcs)\n\tmeffil.normalization.report(norm.summary, output.file=\"normalization/report.html\")\n \n"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8406842249124762,
      "result": {
        "original_header": "More info about normalization",
        "type": "Text_excerpt",
        "value": "New references can be created from a dataset using meffil.create.cell.type.reference(). \n\t## save the SNP names in R\n\tfeatureset <- qc.objects[[1]]$featureset\n\twriteLines(meffil.snp.names(featureset), con=\"snp-names.txt\")\n\t\n\t## run plink at the command line\n    plink --bfile dataset --extract snp-names.txt --recodeA --out genotypes.raw --noweb \n    print(meffil.plot.pc.fit(qc.objects)$plot) \n"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/perishky/meffil/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Artistic License 2.0",
        "spdx_id": "Artistic-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/artistic-2.0",
        "value": "https://api.github.com/licenses/artistic-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The Artistic License 2.0\n\n           Copyright (c) 2015 perishky\n\n     Everyone is permitted to copy and distribute verbatim copies\n      of this license document, but changing it is not allowed.\n\nPreamble\n\nThis license establishes the terms under which a given free software\nPackage may be copied, modified, distributed, and/or redistributed.\nThe intent is that the Copyright Holder maintains some artistic\ncontrol over the development of that Package while still keeping the\nPackage available as open source and free software.\n\nYou are always permitted to make arrangements wholly outside of this\nlicense directly with the Copyright Holder of a given Package.  If the\nterms of this license do not permit the full use that you propose to\nmake of the Package, you should contact the Copyright Holder and seek\na different licensing arrangement.\n\nDefinitions\n\n    \"Copyright Holder\" means the individual(s) or organization(s)\n    named in the copyright notice for the entire Package.\n\n    \"Contributor\" means any party that has contributed code or other\n    material to the Package, in accordance with the Copyright Holder's\n    procedures.\n\n    \"You\" and \"your\" means any person who would like to copy,\n    distribute, or modify the Package.\n\n    \"Package\" means the collection of files distributed by the\n    Copyright Holder, and derivatives of that collection and/or of\n    those files. A given Package may consist of either the Standard\n    Version, or a Modified Version.\n\n    \"Distribute\" means providing a copy of the Package or making it\n    accessible to anyone else, or in the case of a company or\n    organization, to others outside of your company or organization.\n\n    \"Distributor Fee\" means any fee that you charge for Distributing\n    this Package or providing support for this Package to another\n    party.  It does not mean licensing fees.\n\n    \"Standard Version\" refers to the Package if it has not been\n    modified, or has been modified only in ways explicitly requested\n    by the Copyright Holder.\n\n    \"Modified Version\" means the Package, if it has been changed, and\n    such changes were not explicitly requested by the Copyright\n    Holder.\n\n    \"Original License\" means this Artistic License as Distributed with\n    the Standard Version of the Package, in its current version or as\n    it may be modified by The Perl Foundation in the future.\n\n    \"Source\" form means the source code, documentation source, and\n    configuration files for the Package.\n\n    \"Compiled\" form means the compiled bytecode, object code, binary,\n    or any other form resulting from mechanical transformation or\n    translation of the Source form.\n\n\nPermission for Use and Modification Without Distribution\n\n(1)  You are permitted to use the Standard Version and create and use\nModified Versions for any purpose without restriction, provided that\nyou do not Distribute the Modified Version.\n\n\nPermissions for Redistribution of the Standard Version\n\n(2)  You may Distribute verbatim copies of the Source form of the\nStandard Version of this Package in any medium without restriction,\neither gratis or for a Distributor Fee, provided that you duplicate\nall of the original copyright notices and associated disclaimers.  At\nyour discretion, such verbatim copies may or may not include a\nCompiled form of the Package.\n\n(3)  You may apply any bug fixes, portability changes, and other\nmodifications made available from the Copyright Holder.  The resulting\nPackage will still be considered the Standard Version, and as such\nwill be subject to the Original License.\n\n\nDistribution of Modified Versions of the Package as Source\n\n(4)  You may Distribute your Modified Version as Source (either gratis\nor for a Distributor Fee, and with or without a Compiled form of the\nModified Version) provided that you clearly document how it differs\nfrom the Standard Version, including, but not limited to, documenting\nany non-standard features, executables, or modules, and provided that\nyou do at least ONE of the following:\n\n    (a)  make the Modified Version available to the Copyright Holder\n    of the Standard Version, under the Original License, so that the\n    Copyright Holder may include your modifications in the Standard\n    Version.\n\n    (b)  ensure that installation of your Modified Version does not\n    prevent the user installing or running the Standard Version. In\n    addition, the Modified Version must bear a name that is different\n    from the name of the Standard Version.\n\n    (c)  allow anyone who receives a copy of the Modified Version to\n    make the Source form of the Modified Version available to others\n    under\n\n    (i)  the Original License or\n\n    (ii)  a license that permits the licensee to freely copy,\n    modify and redistribute the Modified Version using the same\n    licensing terms that apply to the copy that the licensee\n    received, and requires that the Source form of the Modified\n    Version, and of any works derived from it, be made freely\n    available in that license fees are prohibited but Distributor\n    Fees are allowed.\n\n\nDistribution of Compiled Forms of the Standard Version\nor Modified Versions without the Source\n\n(5)  You may Distribute Compiled forms of the Standard Version without\nthe Source, provided that you include complete instructions on how to\nget the Source of the Standard Version.  Such instructions must be\nvalid at the time of your distribution.  If these instructions, at any\ntime while you are carrying out such distribution, become invalid, you\nmust provide new instructions on demand or cease further distribution.\nIf you provide valid instructions or cease distribution within thirty\ndays after you become aware that the instructions are invalid, then\nyou do not forfeit any of your rights under this license.\n\n(6)  You may Distribute a Modified Version in Compiled form without\nthe Source, provided that you comply with Section 4 with respect to\nthe Source of the Modified Version.\n\n\nAggregating or Linking the Package\n\n(7)  You may aggregate the Package (either the Standard Version or\nModified Version) with other packages and Distribute the resulting\naggregation provided that you do not charge a licensing fee for the\nPackage.  Distributor Fees are permitted, and licensing fees for other\ncomponents in the aggregation are permitted. The terms of this license\napply to the use and Distribution of the Standard or Modified Versions\nas included in the aggregation.\n\n(8) You are permitted to link Modified and Standard Versions with\nother works, to embed the Package in a larger work of your own, or to\nbuild stand-alone binary or bytecode versions of applications that\ninclude the Package, and Distribute the result without restriction,\nprovided the result does not expose a direct interface to the Package.\n\n\nItems That are Not Considered Part of a Modified Version\n\n(9) Works (including, but not limited to, modules and scripts) that\nmerely extend or make use of the Package, do not, by themselves, cause\nthe Package to be a Modified Version.  In addition, such works are not\nconsidered parts of the Package itself, and are not subject to the\nterms of this license.\n\n\nGeneral Provisions\n\n(10)  Any use, modification, and distribution of the Standard or\nModified Versions is governed by this Artistic License. By using,\nmodifying or distributing the Package, you accept this license. Do not\nuse, modify, or distribute the Package, if you do not accept this\nlicense.\n\n(11)  If your Modified Version has been derived from a Modified\nVersion made by someone other than you, you are nevertheless required\nto ensure that your Modified Version complies with the requirements of\nthis license.\n\n(12)  This license does not grant you the right to use any trademark,\nservice mark, tradename, or logo of the Copyright Holder.\n\n(13)  This license includes the non-exclusive, worldwide,\nfree-of-charge patent license to make, have made, use, offer to sell,\nsell, import and otherwise transfer the Package with respect to any\npatent claims licensable by the Copyright Holder that are necessarily\ninfringed by the Package. If you institute patent litigation\n(including a cross-claim or counterclaim) against any party alleging\nthat the Package constitutes direct or contributory patent\ninfringement, then this Artistic License to you shall terminate on the\ndate that such litigation is filed.\n\n(14)  Disclaimer of Warranty:\nTHE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS \"AS\nIS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES. THE IMPLIED\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR\nNON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY YOUR LOCAL\nLAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR CONTRIBUTOR WILL\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\nDAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "meffil"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "perishky"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 896051,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 360965,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 780,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "perishky",
          "type": "User"
        },
        "date_created": "2020-10-16T16:25:32Z",
        "date_published": "2020-12-15T16:11:29Z",
        "html_url": "https://github.com/perishky/meffil/releases/tag/v1.1.1",
        "name": "v1.1.1",
        "release_id": 35299672,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/perishky/meffil/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/perishky/meffil/releases/35299672",
        "value": "https://api.github.com/repos/perishky/meffil/releases/35299672",
        "zipball_url": "https://api.github.com/repos/perishky/meffil/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "perishky",
          "type": "User"
        },
        "date_created": "2017-10-24T16:21:59Z",
        "date_published": "2018-01-04T15:41:48Z",
        "html_url": "https://github.com/perishky/meffil/releases/tag/v1.0.0",
        "release_id": 9109173,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/perishky/meffil/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/perishky/meffil/releases/9109173",
        "value": "https://api.github.com/repos/perishky/meffil/releases/9109173",
        "zipball_url": "https://api.github.com/repos/perishky/meffil/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "perishky",
          "type": "User"
        },
        "date_created": "2016-05-24T21:15:15Z",
        "date_published": "2016-05-26T12:50:59Z",
        "html_url": "https://github.com/perishky/meffil/releases/tag/v0.1.0",
        "name": "v0.1.0",
        "release_id": 3312021,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/perishky/meffil/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/perishky/meffil/releases/3312021",
        "value": "https://api.github.com/repos/perishky/meffil/releases/3312021",
        "zipball_url": "https://api.github.com/repos/perishky/meffil/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:31:05",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 55
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Epigenome-wide association study (EWAS)",
        "parent_header": [
          "meffil"
        ],
        "type": "Text_excerpt",
        "value": "Prepare a variable of interest and a set of covariates.\n\n    variable <- ... ## variable of interest, one value per sample\n    covariates <- ... ## data.frame of covariates to include (rows = samples, columns = covariates)\n\nAdd cell count estimates to the set  of covariates.\n\n    counts <- t(meffil.cell.count.estimates(norm.objects))\n\tcovariates <- cbind(covariates, counts)\n\nRun the EWAS.\n\n    ewas.ret <- meffil.ewas(norm.beta, variable=variable, covariates=covariates)\n\nGenerate a report for the EWAS, including a table describing\nall variables, a table describing the relationships between the variable of interest\nand all covariates, QQ plots, Manhattan plots, a spreadsheet listing all significantly associated CpG sites,\nplots of the most strongly associated sites,\nand plots of selected candidate CpG sites.\n\n    ewas.parameters <- meffil.ewas.parameters(sig.threshold=1e-20, max.plots=5)\n    candidate.sites <- c(\"cg04946709\",\"cg06710937\",\"cg12177922\",\"cg15817705\",\"cg20299935\",\"cg21784396\")\n    ewas.summary <- meffil.ewas.summary(ewas.ret,\n                                        norm.beta,\n                                        selected.cpg.sites=candidate.sites,\n                                        parameters=ewas.parameter)\t\t\t\t\t\t\t\t\n    meffil.ewas.report(ewas.summary, output.file=\"ewas/report.html\")\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/perishky/meffil/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}