{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References:",
        "parent_header": [
          "GenomeScope 2.0: Reference-free profiling of polyploid genomes"
        ],
        "type": "Text_excerpt",
        "value": "Ranallo-Benavidez, T.R., Jaron, K.S. & Schatz, M.C. GenomeScope 2.0 and Smudgeplot for reference-free profiling of polyploid genomes. *Nature Communications* **11**, 1432 (2020). https://doi.org/10.1038/s41467-020-14998-3\n\nVurture, GW, Sedlazeck, FJ, Nattestad, M, Underwood, CJ, Fang, H, Gurtowski, J, Schatz, MC (2017) *Bioinformatics* doi: https://doi.org/10.1093/bioinformatics/btx153\n"
      },
      "source": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tbenavi1/genomescope2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-04-23T17:02:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-28T05:23:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Reference-free profiling of polyploid genomes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9937210756637891,
      "result": {
        "original_header": "T. Rhyker Ranallo-Benavidez, Kamil S. Jaron, and Michael C. Schatz",
        "type": "Text_excerpt",
        "value": "Many genomics analyses require first establishing a reference genome. However, *de novo* genome assembly is a complicated and computationally intensive process with many assumptions hidden to the user. A popular assessment prior to genome assembly is genome profiling, where the k-mer frequencies within the sequencing reads are analyzed to efficiently estimate major genome characteristics such as genome size, heterozygosity, and repetitiveness. However, current genome profiling tools are suited only for diploid genomes and use heuristic approaches. \nWe have developed GenomeScope 2.0, which applies classical insights from combinatorial theory to establish a detailed mathematical model of how k-mer frequencies will be distributed in heterozygous and polyploid genomes. GenomeScope 2.0 employs a polyploid-aware mixture model that, within seconds, accurately infers genome properties from unassembled sequencing data. GenomeScope 2.0 uses the k-mer count distribution, e.g. from KMC or Jellyfish, and produces a report and several informative plots describing the genome properties. We validate the approach on simulated polyploid data created using a generative model with parameters for genome size, heterozygosity, repetitiveness, ploidy, and sequencing coverage, and find GenomeScope 2.0 retains accuracy across a broad range of realistic and extreme parameter values. We also validate GenomeScope 2.0 by analyzing genuine sequence data from 11 diverse polyploid genomes with known genome characteristics. \n \n"
      },
      "source": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8534763661354609,
      "result": {
        "original_header": "Resources",
        "type": "Text_excerpt",
        "value": "VCF files of the variants identified in the larger genomes are available here:\nhttp://labshare.cshl.edu/shares/schatzlab/www-data/genomescope/vcf/\n \n"
      },
      "source": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/tbenavi1/genomescope2.0/wiki"
      },
      "source": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tbenavi1/genomescope2.0/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Frequently Asked Questions (FAQ)",
        "parent_header": [
          "GenomeScope 2.0: Reference-free profiling of polyploid genomes"
        ],
        "type": "Text_excerpt",
        "value": "**> Q: Why didn't the model converge, or why does it give very different results than expected?**\n\nA: The most common problem is that you have too low of coverage for the model to confidently identify the peaks corresponding to the homozygous k-mers. This can be recognized by a lack of any peaks in the k-mer plots or that the model fit doesn't match the observed k-mer profile very well. To correct this problem, first make sure that you have used the canonical k-mer counting mode (-C if you are using jellyfish). If this still fails, you can try slightly decreasing the k-mer size used to 19 or 17. If all of these attempts still fail you will unfortunately need to generate additional sequencing data.\n\n**> Q:  As mentioned in the Supplementary Notes in Section 1.3.2 Genome Size Estimation in the GenomeScope 1.0 paper, the haploid genome size estimate \"is revised by summing the total number of k-mers, except presumptive sequencing errors identified as in section 1.3.1, and dividing by 2\u03bb, the estimated coverage for homozygous k-mers.\" If I understand it correctly, \u03bb is the mean of a distribution, the estimated coverage for homozygous k-mers; and in the genomescope profile, kcov is the estimated coverage for heterozygous k-mers. Could you explain how genomescope estimates haploid genome size, specifically why dividing by 2 times of the estimated coverage for homozygous k-mers?**\n\nA: Thank you for writing. I think there is a bit of confusion over the variable names and how they relate to each other. The first thing to note is \u03bb and kcov refer to the same value, just that we use \u03bb in the written document and kcov in the code. The modeling tries to identify 4 peaks centered at \u03bb, 2\u03bb, 3\u03bb, and 4\u03bb. These 4 peaks correspond to the mean coverage levels of the unique heterozygous, unique homozygous, repetitive heterozygous and repetitive homozygous sequences, respectively. So when it estimates the haploid genome size, it divides by 2\u03bb, which is the average homozygous coverage, not \"2 times the estimated coverage for homozygous k-mers\" as you write.\n\nThe other potentially confusing aspect is what is meant by haploid genome size versus diploid genome size. We consider the haploid genome size to mean the span of one complete set of haploid chromosomes and the diploid genome size to be the span of both haploid copies (total DNA content in one diploid cell). In particular, in a human cell, the haploid genome size is about 3Gbp and the diploid genome size is about 6Gbp. If you sequence a total of 300Gbp for a human genome, that would be about 150Gbp (50x coverage) of the maternal haplotype and about 150Gbp (50x coverage) of the paternal haplotype. But since the heterozygosity rate in humans is so low, the main peak in the distribution would be centered around 100x. However, GenomeScope will still try to fit the 4 peaks, and will set the heterozygous k-mer coverage \u03bb equal to 50x, and thus the homozygous coverage to 2\u03bb = 100x. From this GenomeScope will compute the haploid genome size as the total amount of sequence data (300GB) divided by the homozygous coverage (100x) to report 3Gbp as expected. K-mers with higher coverage are naturally scaled as well: k-mers that occur 200 or 300 times in the k-mer profile (and thus are 2 or 3 copy repeats in the diploid genome, 4 or 6 times in the haploid sequences) are still scaled by 100x to contribute 2 or 3 copies to the estimate. Finally, note that if the two haplotypes have significantly different lengths, then the reported haploid genome size will be the average of the two.\n\n**> Q: Can GenomeScope be used to estimate ploidy, or used with genomes with higher ploidy?**\n\nA: Yes, GenomeScope 2.0 is appropriate for genomes up to a hexaploid (6) ploidy level. To estimate ploidy, you can use [Smudgeplot](https://github.com/KamilSJaron/smudgeplot), which is another tool we developed. GenomeScope currently does not support genomes that have uneven copy number of their chromosomes, however, such as aneuploid cancer genomes or even unequal numbers of sex chromosomes. In these scenarios the reported heterozygosity rate will represent the fraction of bases that are haploid (copy number 1) versus diploid (copy number 2) as well as any heterozygous positions in the other chromosomes.\n\n**> Q: I tried out GenomeScope in order to obtain a genome size estimate for an organism that I am working on. Using the widely-used and cited k-mer method and calculation outlined in the XXX paper, I got an estimate of 869 - 919 Mbp and this is somewhat consistent with a c-value of 0.83pg from a different published study. However, with GenomeScope, I got an estimate of 650 Mbp instead. Would you or your team have any insights into why I am observing this discrepancy of more than 200Mbp in my estimations?**\n\nWhile GenomeScope can automate most of the analysis, it does have an optional parameter (--max_kmercov) to filter out high frequency k-mers. This parameter is sometimes needed because we see in real samples that k-mers that occur 10,000 times or 100,000 times or greater may be artifacts such as phiX sequencing, or organelle sequencing (or other contamination). To account for these, the user will have to specify a cutoff value for GenomeScope to exclude any k-mers that occur above this threshold. On the other hand, for highly repetitive or huge genomes you may need to expand your k-mer histogram to include higher counter k-mers (jellyfish histograms are truncated at 10,000 by default). If you want to include these ultrahigh frequency k-mers, then you will have to regenerate the histogram from jellyfish or KMC with a higher upper bound (perhaps 100,000, 1 million, or even higher). This will likely increase the estimated genome size, but could also make the analysis more sensitive to any artifacts in the data. Unfortunately every project is a little bit different on how to best remove those artifacts. Please see the GenomeScope 1.0 paper for details (especially the section in the supplement on characterizing the high frequency k-mers in Arabidopsis).\n\n"
      },
      "source": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tbenavi1/genomescope2.0/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tbenavi1/genomescope2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GenomeScope 2.0: Reference-free profiling of polyploid genomes"
      },
      "source": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tbenavi1/genomescope2.0/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genomescope2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "tbenavi1"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 232703,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 73797,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 30936,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PHP",
        "size": 22649,
        "type": "Programming_language",
        "value": "PHP"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 16709,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 6561,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschatz",
          "type": "User"
        },
        "date_created": "2024-04-08T02:55:00Z",
        "date_published": "2024-07-10T15:40:35Z",
        "description": "This release makes a slight update to how the kmer histogram file is loaded to improve the compatibility with fastK to ensure the last kmer frequency is included in the modeling and plots. Previously the last row in the histogram file was skipped from being loaded as this value is used by several tools to count kmers at or above this ceiling rather than a distinct value. For example, by default jellyfish will record kmer frequencies up to 10000 so the last row counts kmers that occur 10000 or more times (kmc by default uses 255). This can lead to somewhat unusual plots where the kmer counts for 10000 would spike and be much larger than 9999 (or other high values). For jellyfish or kmc this can be addressed by using a larger maximum kmer frequency (e.g. setting the maximum to 100,000 or 1,000,000 as needed), but for fastK there is a hard cutoff of 32,767 that cannot be exceeded. However, for gigabase genomes sequenced to reasonable coverage there are often many kmers that occur more than 32767 times so these would be excluded from the genomescope analysis. This release ensures that the last row in the file is included in the analysis so that these kmer counts are also included. This will lead to a more accurate estimate of genome size and repetitiveness but should have little to no impact on the estimate of heterozygosity or coverage. The plots are also updated to display this last value to make it clearer that the last value will also be included. The previous behavior can be restored by manually setting the \"Max k-mer coverage\" to exclude the last row in the file.",
        "html_url": "https://github.com/tbenavi1/genomescope2.0/releases/tag/v2.0.1",
        "name": "v2.0.1",
        "release_id": 164831269,
        "tag": "v2.0.1",
        "tarball_url": "https://api.github.com/repos/tbenavi1/genomescope2.0/tarball/v2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/tbenavi1/genomescope2.0/releases/164831269",
        "value": "https://api.github.com/repos/tbenavi1/genomescope2.0/releases/164831269",
        "zipball_url": "https://api.github.com/repos/tbenavi1/genomescope2.0/zipball/v2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tbenavi1",
          "type": "User"
        },
        "date_created": "2019-12-11T14:13:42Z",
        "date_published": "2020-02-07T15:55:11Z",
        "description": "This is the first release.",
        "html_url": "https://github.com/tbenavi1/genomescope2.0/releases/tag/v1.0.0",
        "name": "First Release of GenomeScope 2.0",
        "release_id": 23485357,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/tbenavi1/genomescope2.0/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/tbenavi1/genomescope2.0/releases/23485357",
        "value": "https://api.github.com/repos/tbenavi1/genomescope2.0/releases/23485357",
        "zipball_url": "https://api.github.com/repos/tbenavi1/genomescope2.0/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running GenomeScope Online",
        "parent_header": [
          "GenomeScope 2.0: Reference-free profiling of polyploid genomes",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Users may prefer to use the online version, which offers all of the same functionality within an easy to use web interface:\nhttp://genomescope.org/genomescope2.0\n"
      },
      "source": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running GenomeScope on the Command Line",
        "parent_header": [
          "GenomeScope 2.0: Reference-free profiling of polyploid genomes",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "To install GenomeScope, you will need to have a working version of R with `argparse` and `minpack.lm` packages installed. One way to make that happen is to install it via conda, something like this should do the trick:\n\n```\nconda install -c conda-forge r-base r-minpack.lm r-argparse\n```\n\nNow, download GenomeScope 2.0 and enter its directory:\n\n```\ngit clone https://github.com/tbenavi1/genomescope2.0.git\ncd genomescope2.0/\n```\n    \nThen we need to install GenomeScope 2.0 package by running\n\n```\nRscript install.R\n```\n \nAfter installation of the R package, command line users can run the modeling with the R script genomescope.R, making sure that genomescope.R is in your PATH.\n\n    $ genomescope.R -i histogram_file -o output_dir -k k-mer_length\n\nThe input histogram_file (from KMC or jellyfish), output_dir, and k-mer_length are required parameters. The optional parameter *-p ploidy* sets the ploidy of the model for GenomeScope to use. The optional parameter *-l lambda* sets the initial guess for the average k-mer coverage of the sequencing. The optional parameter *-n 'name_prefix'* sets the prefix for the output files. The optional parameter *-m max_kmercov* specifies the cutoff for excluding high frequence k-mers from the analysis. The output plots and a text file of the inferred genome characteristics will be output to the specified output_dir directory.\n\nFor example, you can download the histogram from the Arabidopsis F1 described in the manuscript here:\nhttps://raw.githubusercontent.com/schatzlab/genomescope/master/analysis/real_data/ara_F1_21.hist\n\nThen run GenomeScope like this:\n    \n    $ /PATH/TO/genomescope.R -i ara_F1_21.hist -o output -k 21\n    \nThis should complete in less than 1 minute, and report:\n\n    Model converged het:0.0104 kcov:22.2 err:0.0035 model fit:0.458 len:151978519\n\nThe plots and the full results will be in output directory, showing the estimated genome size to be 151.9Mbp and a 1.04% heterozygosity rate (the exact values may slightly differ due to the randomization within the modeling).\n"
      },
      "source": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:04:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 102
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "GenomeScope 2.0: Reference-free profiling of polyploid genomes"
        ],
        "type": "Text_excerpt",
        "value": "Before running GenomeScope 2.0, you must first compute the histogram of k-mer frequencies. We recommend [KMC](https://academic.oup.com/bioinformatics/article/33/17/2759/3796399) that is available at http://sun.aei.polsl.pl/REFRESH/index.php?page=projects&project=kmc&subpage=download, or [jellyfish](https://academic.oup.com/bioinformatics/article/27/6/764/234905/A-fast-lock-free-approach-for-efficient-parallel) that is available at http://www.genome.umd.edu/jellyfish.html.\n\nAfter compiling KMC, you can count the k-mers with these commands:\n\n    $ mkdir tmp\n    $ ls *.fastq > FILES\n    $ kmc -k21 -t10 -m64 -ci1 -cs10000 @FILES reads tmp/\n\nNote you should adjust the memory (-m) and threads (-t) parameters according to your server. This example will use 10 threads and 64GB of RAM. The k-mer length (-k) may need to be scaled if you have low coverage or high error rate. The lower (-ci) and upper (-cs) bounds exclude k-mers with counts outside these boundaries. FILES is a file with a list of input files.\n\nAfter compiling jellyfish, you can count the k-mers with this command:\n\n    $ jellyfish count -C -m 21 -s 1000000000 -t 10 *.fastq -o reads.jf\n  \nNote you should adjust the memory (-s) and threads (-t) parameters according to your server. This example will use 10 threads and 1GB of RAM. The k-mer length (-m) may need to be scaled if you have low coverage or a high error rate. You should always use \"canonical k-mers\" (-C) since the sequencing reads will come from both the forward and reverse strand of DNA.\n\nWe recommend using a k-mer length of 21 for most genomes, as this length is sufficiently long that most k-mers are not repetitive and is short enough that the analysis will be more robust to sequencing errors. Extremely large (haploid size >>10GB) and/or very repetitive genomes may benefit from larger k-mer lengths to increase the number of unique k-mers. Accurate inferences requires a minimum amount of coverage, at least 15x coverage of the haploid genome or greater, otherwise the model fit will be poor or not converge. GenomeScope also requires relatively low error rate sequencing, such as Illumina sequencing, so that most k-mers do not have errors in them. For example, a 2% error corresponds to an error every 50bp on average, which is greater than the typical k-mer size used (k=21). Notably, raw single molecule sequencing reads from Oxford Nanopore or Pacific Biosciences, which currently average 5-15% error, are not supported as an error will occur on average every 6 to 20 bp.\n\nAfter counting the k-mers, you then export the k-mer count histogram. With KMC:\n\n    $ kmc_tools transform reads histogram reads.histo -cx10000\n\nThe upper bound (-cx) gives the cutoff for the histogram.\n    \nWith jellyfish:\n\n    $ jellyfish histo -t 10 reads.jf > reads.histo\n\nAgain the thread count (-t) should be scaled according to your server.\n\nAfter you have the histogram file, you can run GenomeScope within the online web tool, or at the command line.\n"
      },
      "source": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "parent_header": [
          "GenomeScope 2.0: Reference-free profiling of polyploid genomes"
        ],
        "type": "Text_excerpt",
        "value": "A tutorial by Andrew Severin on running GenomeScope 1.0 is available here: http://gif.biotech.iastate.edu/genomescope\n"
      },
      "source": "https://raw.githubusercontent.com/tbenavi1/genomescope2.0/master/README.md",
      "technique": "header_analysis"
    }
  ]
}