{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/omerwe/MALAX"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-01-22T21:04:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-06T17:26:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Association testing of bisulfite sequencing methylation data via a Laplace approximation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9517264403342537,
      "result": {
        "original_header": "MALAX",
        "type": "Text_excerpt",
        "value": "Association testing of bisulfite sequencing methylation data via a Laplace approximation \nMALAX (Mixed model Association via Laplace ApproXimation) is a Python package for association testing of bisulfite sequencing methylation data. It models the phenotype as an explanatory variable and each tested site as a reponse variable, using a binomial generalized linear mixed model (GLMM). The likelihood is approximated via a Laplace approximation. \nSeveral parts of the code are loosely based on code translated from the [GPML toolbox](http://www.gaussianprocess.org/gpml/code/matlab/). \n"
      },
      "source": "https://raw.githubusercontent.com/omerwe/MALAX/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8187006415790543,
      "result": {
        "original_header": "Detailed Instructions",
        "type": "Text_excerpt",
        "value": "The format of the files can be seen in the example directory. It is the same format as used by [MACAU](http://www.xzlab.org/software.html). \n"
      },
      "source": "https://raw.githubusercontent.com/omerwe/MALAX/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/omerwe/MALAX/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/omerwe/MALAX/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "omerwe/MALAX"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MALAX"
      },
      "source": "https://raw.githubusercontent.com/omerwe/MALAX/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "MALAX is designed to work in Python 2.7, and depends on the following freely available Python packages:\n* [numpy](http://www.numpy.org/) and [scipy](http://www.scipy.org/)\n* [scikit-learn](http://scikit-learn.org/stable/)\n* [cython](http://cython.org/)\n\nTypically, the packages can be installed with the command \"pip install --user \\<package_name\\>\".\n\nMALAX is particularly easy to use with the [Anaconda Python distribution](https://store.continuum.io/cshop/anaconda). The [numerically optimized version](http://docs.continuum.io/mkl-optimizations/index) of Anaconda can speed MALAX significantly.\nAlternatively (if numerically optimized Anaconda can't be installed), for very fast performance it is recommended to have an optimized version of Numpy/Scipy [installed on your system](http://www.scipy.org/scipylib/building), using optimized numerical libraries such as [OpenBLAS](http://www.openblas.net) or [Intel MKL](https://software.intel.com/en-us/intel-mkl) (see [Compilation instructions for scipy with Intel MKL)](https://software.intel.com/en-us/articles/numpyscipy-with-intel-mkl).\n\nOnce all the prerequisite packages are installed, MALAX can be installed on a git-enabled machine by typing:\n```\ngit clone https://github.com/omerwe/MALAX\n```\n\nThe project can also be downloaded as a zip file from the Github website.\n\nAfter downloading the code, please compile the code by going to the MALAX directory and typing:\n```\npython setup.py build_ext --inplace\n```\nTo verify that the compilation succeeded, please verify that the file `laplace_cython.so` was created in the directory.\n\n<br><br>"
      },
      "source": "https://raw.githubusercontent.com/omerwe/MALAX/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.988062183535193,
      "result": {
        "original_header": "Detailed Instructions",
        "type": "Text_excerpt",
        "value": "MALAX takes as input a file with number of reads (`r.txt` in the example directory), a file with with number of methylated reads (`y.txt`), a file with a predictor (`pred.txt`), a file with covariates (`covars.txt`), and one or two covariance matrices associated with random effects (`K.txt` and `cell_types_K.txt`). The corresponding flags can be seen in the example above. The code will print a file with a p-value for every tested site. \nAdditionally, the code supports a fixed effects beta-binomial model, which can be invoked by adding the flag `--test bb` to the example command above. This code will ignore the `--kernel` and `--kernel2` commands.  \n"
      },
      "source": "https://raw.githubusercontent.com/omerwe/MALAX/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8274049016642441,
      "result": {
        "original_header": "Detailed Instructions",
        "type": "Text_excerpt",
        "value": "MALAX takes as input a file with number of reads (`r.txt` in the example directory), a file with with number of methylated reads (`y.txt`), a file with a predictor (`pred.txt`), a file with covariates (`covars.txt`), and one or two covariance matrices associated with random effects (`K.txt` and `cell_types_K.txt`). The corresponding flags can be seen in the example above. The code will print a file with a p-value for every tested site. \n"
      },
      "source": "https://raw.githubusercontent.com/omerwe/MALAX/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/omerwe/MALAX/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gwas, statistical-genetics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 omerwe\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/omerwe/MALAX/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MALAX"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "omerwe"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 32872,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 20005,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/omerwe/MALAX/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:20:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage Overview",
        "type": "Text_excerpt",
        "value": "MALAX can be invoked via the script `run_laplace.py`.The list of available options can be seen by typing `run_laplace.py --help`.\n"
      },
      "source": "https://raw.githubusercontent.com/omerwe/MALAX/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "TL;DR",
        "parent_header": [
          "Usage Overview"
        ],
        "type": "Text_excerpt",
        "value": "For an example, please run the following command (using the anaconda version of python if available):\n```\npython run_laplace.py --mcounts example/y.txt --counts example/r.txt --predictor example/pred.txt --kernel example/K.txt --kernel2 example/cell_types_K.txt --covar example/covars.txt --out example/malax_2K.txt\n```\nThis will analyze the data in the `example` directory using two variance components and will print the results to the file `example/malax_2K.txt`.\n\n\n<br><br>"
      },
      "source": "https://raw.githubusercontent.com/omerwe/MALAX/master/README.md",
      "technique": "header_analysis"
    }
  ]
}