{
  "application_domain": [
    {
      "confidence": 10.03,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "MaGIC"
        ],
        "type": "Text_excerpt",
        "value": "Please cite the following paper if using Magic:\n\nVinogradova S, Saksena SD, Ward HN, Vigneau S, Gimelbrant AA. MaGIC: a machine learning tool set and web application for monoallelic gene inference from chromatin. BMC Bioinformatics. 2019 Feb 28;20(1):106.\n"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gimelbrantlab/magic"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact us",
        "parent_header": [
          "MaGIC"
        ],
        "type": "Text_excerpt",
        "value": "Questions, comments and concerns can be directed to [Alexander Gimelbrant](alexander_gimelbrant@dfci.harvard.edu), [S\u00e9bastien Vigneau](Sebastien_Vigneau@dfci.harvard.edu), and [Svetlana Vinogradova](Svetlana_Vinogradova@dfci.harvard.edu). Additional inquiries about how the program works can be directed to [Henry Ward](wardx596@umn.edu) and [Sachit Saksena](sachitdsaksena@utexas.edu).\n"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-08-09T06:34:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-18T04:59:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Tool to identify monoallelic expression in polyclonal samples using ChIP-Seq data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9894731089946445,
      "result": {
        "original_header": "MaGIC",
        "type": "Text_excerpt",
        "value": "MaGIC is a tool to classify genes into monoallelically expressed (MAE) and biallelically expressed (BAE) using\nchromatin mark enrichment data. It is primarily based on the work of the [Gimelbrant lab](https://gimelbrantlab.med.harvard.edu). We have a standalone MaGIC pipeline and also a Shiny app. \nThe method is published in [BMC Bioinformatics](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-019-2679-7)\n \n"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9368426806003495,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "To get started, we suggest to use Docker image with the Shiny app for MaGIC. The only requirement is to have Docker installed. Please see the [instructions](https://github.com/gimelbrantlab/magic/blob/master/Installation.md) if you don't have it installed yet. \nTo be able to analyze your own ChIP-seq data and save the results, you need to mount a directory with the data: add -v parameter to do this. For example, to mount `~/Documents/data/` you will need to run a container like this:\n```\ndocker run --rm -v ~/Documents/data/:/root/data -p 3838:3838 kintany/shinymagic:current\n```\nTo stop the running container you need to get its id with the command:\nBASH5*\nand then use this id to stop the container:\nBASH6*\n \nTo get a better understanding how to use Shiny app and Magic in general, please go to \"Help\" tab or check out the [Documentation](https://github.com/gimelbrantlab/magic/blob/master/documentation.md). \n \n"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/CRG-Barcelona/bwtool/wiki"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gimelbrantlab/magic/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gimelbrantlab/magic/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gimelbrantlab/magic"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MaGIC"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/gene_expression.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "## Install Docker\n\nHere you can find instructions how to install Docker for Ubuntu:  https://docs.docker.com/install/linux/docker-ce/ubuntu/\n\nHere you can find instructions how to install Docker for Mac: https://docs.docker.com/docker-for-mac/install/#install-and-run-docker-for-mac\n\nHere you can download Docker for Windows: https://store.docker.com/editions/community/docker-ce-desktop-windows\n\n\n## Install git and R\n\n### Ubuntu/Debian Linux\n\nRun this command to install git on a Ubuntu/Debian Linux system:\n```\nsudo apt install git\n```\n\nTo install R, run:\n```\nsudo echo \"deb http://<my.favorite.cran.mirror>/bin/linux/ubuntu <my.ubuntu.version>/\" | sudo tee -a /etc/apt/sources.list\n/sources.list\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nsudo apt update\nsudo apt install r-base\n```\n\nTo install the latest R version on Ubuntu 16.04 from CRAN cloud, the first line should be:\n```\nsudo echo \"deb http://cloud.r-project.org/bin/linux/ubuntu xenial/\" | sudo tee -a /etc/apt/sources.list\n```\n### Mac\n\nAnd the same for Mac users. If you still don't have [brew](https://brew.sh/), please install it, it's what you want:\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\nAnd now, install git and R: \n```\nbrew install git\nbrew install r\n```\n\nTo update R: \n```\nbrew install r\n```\n## Install missing R packages\n\nIf automatic installation fails, you will need to install missing packages manually (see the full list [here](https://github.com/gimelbrantlab/magic/blob/master/Dependencies.md)). In general, command \n```\ninstall.packages(package_name, dependencies = T)\n```\nshould work. If you are working with libraries installed in a separate, non-default folder, add the path to this folder:\n```\ninstall.packages(package_name, dependencies = T, lib = PATH_TO_LIB)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/Installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "MaGIC",
          "Direct installation"
        ],
        "type": "Text_excerpt",
        "value": "Installing MaGIC takes only a few commands. Required R packages and [bwtool](https://github.com/CRG-Barcelona/bwtool/wiki) are installed automatically.\n\nTo install MaGIC system-wide (i.e. with root/sudo access): \n```\ngit clone https://github.com/gimelbrantlab/magic.git\ncd magic\nRscript src/install.R\n```\n\nTo install MaGIC locally (i.e. on a server without root access to your R installation): \n```\ngit clone https://github.com/gimelbrantlab/magic.git\ncd magic\nRscript src/install.R libraries\n```\nThese commands will enable MaGIC to run from the command line. We also developed a Shiny app that can be run with the following command: \n\n```\nR -e \"shiny::runApp('shiny/MagicWeb/', launch.browser = T)\"\n```\nAlternatively, if MaGIC has been installed locally as instructed above, use the following command instead:\n\n```\nR -e \".libPaths('libraries'); shiny::runApp('./shiny/MagicWeb/', launch.browser = T)\"\n```\n\nIf you change your mind and want to uninstall MaGIC, you can just delete the whole folder:\n\n```\ncd ..\nrm -r magic\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.973473497546352,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "To get started, we suggest to use Docker image with the Shiny app for MaGIC. The only requirement is to have Docker installed. Please see the [instructions](https://github.com/gimelbrantlab/magic/blob/master/Installation.md) if you don't have it installed yet. \nNow, open a terminal window and invoke the Docker program directly. Checking the version is always a good way to test that a program will run without investing too much effort into finding a command that will work, so let's do:\n```\ndocker --version\n```\nThis should return something like \"Docker version 18.03.1-ce, build 9ee9f40\" \nStill in your terminal (it doesn't matter where your working directory is), run the following command to retrieve the MaGIC image from Docker Hub:\n```\ndocker pull kintany/shinymagic:current\n```\nTo run a container you will use the following command:\nBASH3*\nThis will run the container and you need to open http://0.0.0.0:3838/ in any browser (Windows users should use \"http://localhost:3838/\" instead). Enjoy! \nTo be able to analyze your own ChIP-seq data and save the results, you need to mount a directory with the data: add -v parameter to do this. For example, to mount `~/Documents/data/` you will need to run a container like this:\n```\ndocker run --rm -v ~/Documents/data/:/root/data -p 3838:3838 kintany/shinymagic:current\n```\nTo stop the running container you need to get its id with the command:\nBASH5*\nand then use this id to stop the container:\nBASH6*\n \n"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gimelbrantlab/magic/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 Gimelbrant Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "magic"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "gimelbrantlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 299113,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3302,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 1587,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "MaGIC",
          "Direct installation"
        ],
        "type": "Text_excerpt",
        "value": "If you don't want to use Docker, follow these instructions.\n\nLinux/Mac machine with updated R (3.5.0 or later) and git. Please see the [instructions](https://github.com/gimelbrantlab/magic/blob/master/Installation.md) if you don't have git or R installed. There is a number of R packages that need to be installed, please see [dependencies](https://github.com/gimelbrantlab/magic/blob/master/Dependencies.md). During Magic installation, install.R script will try to download and install missing packages. However, if the installation of some of them fails, you will have to install them [manually](https://github.com/gimelbrantlab/magic/blob/master/Installation.md). \n"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:49:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "parent_header": [
          "MaGIC",
          "Direct installation"
        ],
        "type": "Text_excerpt",
        "value": "The easiest way to test MaGIC is to run the Shiny app (see [Tutorial](https://github.com/gimelbrantlab/magic/blob/master/shiny/MagicWeb/Tutorial.md) for help).\n\nThe following commands show you how to run MaGIC from the command line.\n\n*Process.R*\n\nProcess.R script takes ChIP-seq files in bigWig format and converts them into normalized enrichment over genomic intervals (gene body or promoter), formatted as tables usable by analyze.R or generate.R. To run process.R using test data (human GM12787, chr15, H3K27me3 and H3K36me3 marks), run this command:\n\n```\nRscript src/process.R -i data/input.txt -o data/output -r \"hg19\" -p 0 -s 3\n\n```\nYou will get joint_scores_percentile.txt in your output folder. To test other parts of the pipeline, we suggest to use joined_scores_percentile_GM12878.txt file which contains the full dataset.\n\n*Generate.R*\n\nGenerate.R script trains models using output from process.R saved in the joined_scores_percentile.txt file. We also provide a pre-generated joined_scores_percentile_GM12878.txt file. Run the following command to train ada, SVM, and random forest model using 80% percent of the data for training and 20% for testing:\n\n```\nRscript src/generate.R -i data/joined_scores_percentile_GM12878.txt -o data/classifiers -a \"human\" -p 80 -l ada,svmPoly,rf -c 5\n```\nThe output folder will contain a model_output folder containing a summary_models.tsv file describing key metrics of the models' performance. \n\n*Analyze.R*\n\nFinally, call analyze.R, using the joined_scores_percentile.txt (output from process.R) and the default classifiers that are packaged with MaGIC as inputs.\n```\nRscript src/analyze.R -i data/joined_scores_percentile_GM12878.txt -o data/output -m models\n```\nYou can also run analyze.R with your own trained classifers, but be careful to avoid overfitting. \n"
      },
      "source": "https://raw.githubusercontent.com/gimelbrantlab/magic/master/README.md",
      "technique": "header_analysis"
    }
  ]
}