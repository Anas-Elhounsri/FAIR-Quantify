{
  "application_domain": [
    {
      "confidence": 34.86,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/glottobank/BEASTling_paper"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-02-23T23:33:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-11T14:59:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BEASTling paper"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.993847895324084,
      "result": {
        "original_header": "BEASTling: a software tool for linguistic phylogenetics using BEAST 2",
        "type": "Text_excerpt",
        "value": "This is the repository for the paper \"[BEASTling: a software tool for\nlinguistic phylogenetics using BEAST 2](https://doi.org/10.1371/journal.pone.0180908)\",\npublished in PLOS ONE on August 10, 2017.  It contains not only the pre-print\ntext of the paper, but also everything required for you to do your own\nindependent \"build\" of the paper.  All original data for the example analyses is\nincluded in its original, untouched form.  All processing of the data which is\nrequired before the analyses is performed by Python scripts, so you can see\nexactly what was done and even see how the results change if you do it\ndifferently.  Post-processing of the results from BEAST is performed from scripts\ntoo, including programmatically creating every table and every figure in the\npaper.  A Makefile and a Python virtual environment have been provided to make\nbuilds as smooth as possible, although there may still be some bumps.\nNevertheless, with a little effort you should be able to produce your own PDF of\nthe paper, with slight differences in the tables and figures corresponding to\nthe probabilistic variation between MCMC runs. \n"
      },
      "source": "https://raw.githubusercontent.com/glottobank/BEASTling_paper/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9443317548108817,
      "result": {
        "original_header": "Make clean",
        "type": "Text_excerpt",
        "value": "The repository contains the \"official\" BEAST XML files, tables and figures as\nused in the published paper.  By running `make clean` in your local checkout of\nthe repository, everything will be deleted except for the original data files,\nthe BEASTling configuration files and the pre/post-processing scripts.  You\nshould have the following:\n \n"
      },
      "source": "https://raw.githubusercontent.com/glottobank/BEASTling_paper/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/glottobank/BEASTling_paper/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/glottobank/BEASTling_paper/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "glottobank/BEASTling_paper"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BEASTling: a software tool for linguistic phylogenetics using BEAST 2"
      },
      "source": "https://raw.githubusercontent.com/glottobank/BEASTling_paper/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9784284913101042,
      "result": {
        "original_header": "Make paper",
        "type": "Text_excerpt",
        "value": "Running `make paper` in your local checkout of the repository will run LaTeX and\nBiBTeX to produce the paper as `beastling.pdf`.  The LaTeX `\\input{}` command\nwill be used to pull in tables produced by the postprocessing scripts and the\n`\\includegraphics{}` command will be used to pull in figures produced by the same\nscripts.  If you run `make paper` after `make clean` but before `make examples`,\nit will fail because these files will not be found. \nIt's up to you to have a working LaTeX environment installed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/glottobank/BEASTling_paper/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/glottobank/BEASTling_paper/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BEASTling_paper"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "glottobank"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 94913,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 5885,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/glottobank/BEASTling_paper/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:14:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Austronesian example related files",
        "parent_header": [
          "BEASTling: a software tool for linguistic phylogenetics using BEAST 2",
          "Make clean"
        ],
        "type": "Text_excerpt",
        "value": "* `examples/austronesian/language.csv` - Raw WALS data, as available from\n  http://wals.info/static/download/wals-language.csv.zip\n* `examples/austronesian/a400-m1pcv-time.mcct.trees` - Austronesian summary\n  tree from [Gray et al's 2009 Science paper](http://science.sciencemag.org/content/323/5913/479)\n  (kindly provided by Simon Greenhill)\n* `examples/austronesian/iso.austronesian.txt` - Mapping from Austronesian\n  family names as used in summary tree to ISO codes (kindly provided by Simon\n  Greenhill)\n* `examples/austronesian/preprocess.py` - Preprocessing script (described below)\n* `examples/austronesian/austronesian.conf` - BEASTling configuration file\n* `examples/austronesian/postprocess.py` - Postprocessing script (described\n  below)\n"
      },
      "source": "https://raw.githubusercontent.com/glottobank/BEASTling_paper/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Indo-European example related files",
        "parent_header": [
          "BEASTling: a software tool for linguistic phylogenetics using BEAST 2",
          "Make clean"
        ],
        "type": "Text_excerpt",
        "value": "* `examples/indoeuropean/PIE.csv` - Raw Indo-European cognate data (kindly\n  provided by Mattis List)\n* `examples/indoeuropean/Pagel-2007-200.tsv` - Pagel et al's meaning class\n  stability ranking (kindly provided by Mattis List)\n* `examples/indoeuropean/Starostin-2007-110.tsv` - Starostin's meaning class\n  stability ranking (kindly provided by Mattis List)\n* `examples/indoeuropean/Swadesh-1955-215.tsv` - Swadesh's meaning class\n  stability ranking (kindly provided by Mattis List)\n* `examples/indoeuropean/preprocess.py` - Preprocessing script (described below)\n* `examples/indoeuropean/indoeuropean.conf` - BEASTling configuration file\n* `examples/indoeuropean/postprocess.py` - Postprocessing script (described\n  below)\n"
      },
      "source": "https://raw.githubusercontent.com/glottobank/BEASTling_paper/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Make examples",
        "parent_header": [
          "BEASTling: a software tool for linguistic phylogenetics using BEAST 2"
        ],
        "type": "Text_excerpt",
        "value": "Running `make examples` in your local checkout of the repository should complete\nthe following steps:\n\n * Both of the preprocessing scripts described above will be run, transforming\n   the raw data files into the inputs required for BEASTling.\n * BEASTling will be run, transforming its configuration files into BEAST XML\n   files.\n * BEAST will be run using the generated XML files, producing log files and tree\n   files.\n * Both of the postprocessing scripts described above will be run, reading the\n   files produced by BEAST and creating some `.tex` files containing tables for\n   the paper and some `.tiff` files containing figures for the paper, as well as\n   some intermediary outputs.\n\nNote that running the BEAST analyses will take several hours, it may be\nconvenient to let this step run overnight.\n\nThis part of the process is the most likely to fail because it depends upon\nseveral items of software, most obviously but not limited to BEASTling and BEAST.\nThe make target will attempt to ease you through this as follows.\n\n * BEAST 2.4.5 will be downloaded from the official BEAST 2 GitHub repository\n * If you do not have `virtualenv` installed, it will be downloaded from the\n   official virtualenv GitHub repository and decompressed in the current\n   directory.\n * The virtualenv will be activated and `pip` will be used to install the\n   following dependencies:\n     * [BEASTling](https://github.com/lmaurits/BEASTling) (used to create BEAST\n       XML files)\n     * [ete2](http://etetoolkit.org/) (used to create Figure 2)\n     * [python-newick](https://github.com/glottobank/python-newick/) (use to\n       preprocess trees)\n     * [phyltr](https://github.com/lmaurits/phyltr/) (used to find maximum clade\n       credibility trees)\n     * [scipy](https://www.scipy.org/) (used to compute correlation coeffeicients\n       between meaning class stability rankings)\n\nPlease note that none of this will affect your ordinary day-to-day BEAST or\nPython environments.  The local BEAST installation and the Python virtual\nenvironment created by Make will be deleted the next time you run `make clean`.\n\nPlease note that the following are up to you:\n\n * Make sure you have a working Java 8 JRE installed\n * Make sure you have a working Python 2.7 installed\n\nAnother point to be aware of is that `ete2` is not able to produce figures\nunless another library, `PyQt4` is installed.  The virtual environment does not\ntake care of this step for you as `PyQt4` is unsupported and not available via\n`pip` or similar tools.  So, by default the postprocessing script for the\nIndo-European example analysis will not produce Figure 2.  If you want to\nrecreate the figure you will need to find your own way to install this\ndependency, perhaps using your operating system's package management tools.\nNote that even without `PyQt4` you will still get your own maximum clade\ncredibility tree saved to a file which you can view yourself with FigTree or any\nother preferred tool.\n"
      },
      "source": "https://raw.githubusercontent.com/glottobank/BEASTling_paper/master/README.md",
      "technique": "header_analysis"
    }
  ]
}