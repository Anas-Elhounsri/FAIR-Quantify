{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ignaciot/MechSpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-23T18:28:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-18T12:27:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Mechanistic inference of toxicity from gene expression time series and knowledge graphs "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9464404811521113,
      "result": {
        "original_header": "Mechanistic inference for toxicology",
        "type": "Text_excerpt",
        "value": "This repository provide the code for the publication \"Applying knowledge-driven mechanistic inference to toxicogenomics\" (DOI: [https://doi.org/10.1016/j.tiv.2020.104877](https://doi.org/10.1016/j.tiv.2020.104877)) and contains the collection of scripts to reproduce the results obtained. Besides the code, this repository provides: \n* Vector embeddings of the knowledge graph used for the inference step, generated using node2vec.\n* Knowledge graph utilized for this study (extended from the KG created for [PheKnowLator](https://github.com/callahantiff/PheKnowLator/wiki)), exported as a NetworkX object.\n* Differential expression analysis output for all time series tested \nAll large files to reproduce this analysis can be downloaded from our [figshare project](https://figshare.com/projects/Mechanistic_Inference/70412). \nThis will eventually become an easier to use, single-tool with easier to compose configuration files. In the meantime, these are the steps to generate predictions of the most likely mechanisms of toxicity from your own time series of gene expression data: \n1. Identify the most significant changes in gene expression at each time point. You can use your favorite tool for this, as long as the output is formatted as the following tab-separated columns: `Gene number <TAB> Gene symbol <TAB> log(fold change) <TAB> Adjusted p-value`, one file per time point. If your time series was conducted using microarrays, any of the provided R scripts under the `differential_analysis_example_scripts` directory can be modified to match your number of replicates and time points and use Limma to generate this list of differential genes. Be sure to run `install_requirements.R` and install any additional pre-requisites (e.g. system libraries) beforehand. \nThis will output the resulting mechanism enrichment scores and p-values, followed by a sorted list of likely mechanisms of toxicity. It will also generate a pickled file containing all the necessary data to produce an explanation, named `[YOUR_EXPERIMENT_SET_ID]_inference_data.pkl`. \n3. Generate the mechanistic narrative and diagram for each of the top-3 predictions. This will output the mechanistic narrative for each time series provided, and create an image with the diagram representation of this mechanistic explanation for each. You must call this other tool with the same input file, and specify an output directory to create the narrative text and the graphical explanation figure: \nNote that this may take a while depending on the size of the knowledge graph used and how dense it is. You can also specify a [case sensitive] search keyword to only generate an explanation for a particular chemical, or concentration: \nYou can add new mechanisms of your own to MechSpy by editing `mechanisms.py`. A mock, commented-out \"M12\" mechanism was added to illustrate where would new mechanisms need to go. \nIf you would like to reproduce any of the predictions generated in the MechSpy research article, you can just unpack the processed gene results under the `microarray` directory, and then follow the instructions above with any of the datasets, for example: \nAll known mechanisms for each chemical are listed in `mech_labels.py`.\n \n------------------------------- \nIf you have used MechSpy or any of the processed data shared in this repository for your research, please cite the following article: \n"
      },
      "source": "https://raw.githubusercontent.com/ignaciot/MechSpy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/callahantiff/PheKnowLator/wiki"
      },
      "source": "https://raw.githubusercontent.com/ignaciot/MechSpy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ignaciot/MechSpy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ignaciot/MechSpy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ignaciot/MechSpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MechSpy"
      },
      "source": "https://raw.githubusercontent.com/ignaciot/MechSpy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ignaciot/MechSpy/master/differential_analysis_example_scripts/process_diXa_kidney_microarray_dumps.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ignaciot/MechSpy/master/differential_analysis_example_scripts/process_diXa-002_liver_microarray_dumps.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ignaciot/MechSpy/master/differential_analysis_example_scripts/process_diXa-078_HepG2_microarray_dumps.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ignaciot/MechSpy/master/differential_analysis_example_scripts/process_open_tg_gates_microarray_dumps.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9526097589805548,
      "result": {
        "original_header": "Mechanistic inference for toxicology",
        "type": "Text_excerpt",
        "value": "The following versions of Python v3.7.2 libraries were used when running this code: \n    glob2==0.6\n    graphviz==0.10.1\n    matplotlib==3.1.0\n    natsort==6.0.0\n    networkx==2.3\n    numpy==1.16.4\n    Owlready2==0.18\n    pandas==0.24.2\n    seaborn==0.9.0\n    scikit-learn==0.20.3\n    scipy==1.3.0 \nTo clone this repo: \n    $ git clone git@github.com:ignaciot/MechSpy.git\n    $ cd MechSpy \n2. Create a file denoting an experiment set to be used, with a `.py` extension, using as a template the provided `example_experiment_set.py` file. The comments in that file will guide you to complete the necessary details. \n    $ python3 inference_from_embeddings.py -i example_experiment_set.py \n    $ python3 generate_explanation.py -i my_experiment.py -o ./narratives \n    $ python3 generate_explanation.py -i my_experiment.py -o ./narratives -k \"SomeChemical\"\n    or\n    $ python3 generate_explanation.py -i my_experiment.py -o ./narratives -k \"50uM\" \nFor further options on either command, you can call them using: \n    $ python3 inference_from_embeddings.py --help \n    $ python3 generate_explanation.py --help \n    $ python3 inference_from_embeddings.py -i open_tg_gates_canonical_mechs.py\n    $ python3 generate_explanation.py -i open_tg_gates_canonical_mechs.py -o ./narratives \n    open_tg_gates_canonical_mechs.py\n    open_tg_gates_all_other_chemicals.py\n    dixa_heparg_experiments.py\n    dixa_hepg2_experiments.py\n    dixa_kidney_experiments.py\n    dixa_lung_experiments.py\n    dixa078_HepG2_experiments.py\n    tobacco_nasal_experiments.py\n    tobacco_buccal_experiments.py\n    tobacco_bronchial_experiments.py\n    all_experiments.py   (runs all of the above, note this will take several hours on a laptop computer) \nIf you have any questions, please (preferably) open an issue on this GitHub repo via the Issue Tracker tab, or email us at ignacio.tripodi (at) colorado.edu and we'll be happy to help! \n"
      },
      "source": "https://raw.githubusercontent.com/ignaciot/MechSpy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8883268682509425,
      "result": {
        "original_header": "Mechanistic inference for toxicology",
        "type": "Text_excerpt",
        "value": "    $ python3 inference_from_embeddings.py -i example_experiment_set.py \n    $ python3 generate_explanation.py -i my_experiment.py -o ./narratives \n    $ python3 generate_explanation.py -i my_experiment.py -o ./narratives -k \"SomeChemical\"\n    or\n    $ python3 generate_explanation.py -i my_experiment.py -o ./narratives -k \"50uM\" \n    $ python3 inference_from_embeddings.py --help \n    $ python3 generate_explanation.py --help \n    $ python3 inference_from_embeddings.py -i open_tg_gates_canonical_mechs.py\n    $ python3 generate_explanation.py -i open_tg_gates_canonical_mechs.py -o ./narratives \n    open_tg_gates_canonical_mechs.py\n    open_tg_gates_all_other_chemicals.py\n    dixa_heparg_experiments.py\n    dixa_hepg2_experiments.py\n    dixa_kidney_experiments.py\n    dixa_lung_experiments.py\n    dixa078_HepG2_experiments.py\n    tobacco_nasal_experiments.py\n    tobacco_buccal_experiments.py\n    tobacco_bronchial_experiments.py\n    all_experiments.py   (runs all of the above, note this will take several hours on a laptop computer) \n"
      },
      "source": "https://raw.githubusercontent.com/ignaciot/MechSpy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ignaciot/MechSpy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Ignacio Tripodi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ignaciot/MechSpy/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MechSpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ignaciot"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 126542,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 71608,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2269,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ignaciot/MechSpy/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 01:40:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ]
}