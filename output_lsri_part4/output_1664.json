{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/haotianteng/Chiron"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-05-07T22:07:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-22T12:32:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A basecaller for Oxford Nanopore Technologies' sequencers"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9144127326077733,
      "result": {
        "original_header": "A basecaller for Oxford Nanopore Technologies' sequencers",
        "type": "Text_excerpt",
        "value": "Using a deep learning CNN+RNN+CTC structure to establish end-to-end basecalling for the nanopore sequencer.  \nBuilt with **TensorFlow** and python 2.7. \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.961462878497434,
      "result": {
        "original_header": "Preprocess",
        "type": "Text_excerpt",
        "value": "For better RNA basecalling result, the fast5 files can be preproceesd using [BoostNano](https://github.com/haotianteng/BoostNano), which is a tool developed by me to segment and remove the polyA and adapter tail.\n \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9337084524343043,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "* `result`: fastq/fasta files with the same name as the fast5 file they contain the basecalling result for. To create a single, merged version of these fasta files, try something like `paste --delimiter=\\\\n --serial result/*.fasta > merged.fasta` \n* `raw`: Contains a file for each fast5 file with it's raw signal. This file format is an list of integers. i.e `544 554 556 571 563 472 467 487 482 513 517 521 495 504 500 520 492 506 ... `\n* `segments`: Contains the segments basecalled from each fast5 file.\n* `meta`: Contains the meta information for each read (read length, basecalling rate etc.). Each file has the same name as it's fast5 file.\n* `reference`: Contains the reference sequence (if any).\n \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9726668211203567,
      "result": {
        "original_header": "Training",
        "type": "Text_excerpt",
        "value": "The default DNA model trained on R9.4 protocol with a mix of Lambda and E.coli dataset, and the default RNA model is trained on R9.4 direct RNA kit (-200mV configuration).\nIf the basecalling result is not satisfying, you can train a model on your own training data set.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9249417682584918,
      "result": {
        "original_header": "Training parameters",
        "type": "Text_excerpt",
        "value": "`data_dir`(Required): The folder containing your signal and label files.  \n`log_dir`(Required): The folder where you want to save the model.  \n`model_name`(Required): The name of the model. The record will be stored in the directory `log_dir/model_name/`\n`tfrecord`: File name of tfrecord. Default is train.tfrecords.\n`sequence_len`: The length of the segment you want to separate the sequence into. Longer length requires larger RAM.  \n`batch_size`: The batch size.  \n`step_rate`: Learning rate of the optimizer.  \n`max_step`: Maximum step of the optimizer.  \n`k_mer`: Chiron supports learning based on k-mer instead of a single nucleotide, this should be an odd number, even numbers will cause an error.  \n`retrain`: If this is a new model, or you want to load the model you trained before. The model will be loaded from  `log_dir/model_name/`  \n \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9483994893469571,
      "result": {
        "original_header": "local testing",
        "type": "Text_excerpt",
        "value": "If it is working well, please go to next step.\n \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8218558717811155,
      "result": {
        "original_header": "Submit training request",
        "type": "Text_excerpt",
        "value": "```\nJOB_NAME=chiron_multi_4\nDATA_BUCKET=chiron-training-data\nMODEL_BUCKET=chiron-model\nREGION=us-central1\nMODEL_NAME=test_model1\nGPU_NUM=4\n```\nBASH2* \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/haotianteng/chiron/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/haotianteng/chiron/master/chiron/label_test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/chiron/label_test.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 53
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/haotianteng/Chiron/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "haotianteng/Chiron"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Chiron"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/haotianteng/chiron/master/chiron/utils/merge.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/haotianteng/chiron/master/chiron/utils/assess.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/haotianteng/chiron/master/chiron/utils/batch_assess.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install using `pip` (recommended)",
        "parent_header": [
          "Chiron",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "If you currently have TensorFlow installed on your system, we would advise you to create a virtual environment to install Chiron into, this way there is no clash of versions etc.\n\nIf you would like to do this, the best options would be [`virtualenv`](https://virtualenv.pypa.io/en/stable/installation/), the more user-friendly [`virtualenvwrapper`](https://virtualenvwrapper.readthedocs.io/en/latest/install.html), or through [anaconda](https://docs.continuum.io/anaconda/install/). After installing one of these and activating the virtual environment you will be installing Chiron into, continue with the rest of the installation instructions as normal.\n\nTo install with `pip`:\n\n```\npip install chiron  \n```\nThis will install Chiron, and [`h5py`](https://github.com/h5py/h5py) (required for reading in `.fast5` files).\nTensorflow need to be install in addition by:\n```  \npip install tensorflow==1.15\n```  \nor GPU version:  \n```  \npip install tensorflow-gpu==1.15\n```  \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install from Source",
        "parent_header": [
          "Chiron",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "```\ngit clone https://github.com/haotianteng/chiron.git\ncd Chiron\n```\nYou will also need to install dependencies.\n```\npython setup.py install\n```\nFor CPU-version:\n```\npip install tensorflow==1.15\n```\nFor GPU-version(Nvidia GPU required):  \nInstall [CUDA](https://developer.nvidia.com/cuda-toolkit)  \nInstall [cuDNN](https://developer.nvidia.com/cudnn)  \nInstall tensorflow gpu version  \n```\npip install tensorflow-gpu==1.15\n```\nAnd then add the Chiron into PYTHONPATH,for convinience you can add it to the .bashrc\n```\nexport PYTHONPATH=[Path to Chiron/Chiron]:$PYTHONPATH\n```\nFor alternate/detailed installation instructions for TensorFlow, see the [documentation](https://www.tensorflow.org/).\n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "If installed from `pip`:",
        "parent_header": [
          "Chiron",
          "Training",
          "Train a model"
        ],
        "type": "Text_excerpt",
        "value": "An example call to Chiron to run basecalling is:  \n```\nchiron call -i <input_fast5_folder> -o <output_folder> -m <model_folder>\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "If installed from Github:",
        "parent_header": [
          "Chiron",
          "Basecall"
        ],
        "type": "Text_excerpt",
        "value": "All Chiron functionality can be run from **entry.py** in the Chiron folder. (You might like to also add the path to Chiron into your PATH for ease of running).\n\n```\npython chiron/entry.py call -i <input_fast5_folder> -o <output_folder> -m <model_folder>\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Prepare training data set.",
        "parent_header": [
          "Chiron",
          "Training"
        ],
        "type": "Text_excerpt",
        "value": "Using raw.py script to extract the signal and label from the re-squiggled fast5 file.\n(For how to re-squiggle fast5 file, check [Tombo re-squiggle](https://github.com/nanoporetech/tombo))\n\n#### If installed from `pip`:\n```\nchiron export -i <fast5 folder> -o <output_folder>\n```\n\nor directly use the raw.py script in utils.\n\n```\npython chiron/utils/raw.py --input <fast5 folder> --output <output_folder> --mode dna\n```\n\nThis will generate a tfrecord file for training when using the chiron_rcnn_train.py and chiron_input.py pipeline.  \n\n```\npython chiron/utils/file_batch.py --input <fast5 folder> --output <output folder> --length 400 --mode dna\n```\n\nThis will generate several binary .bin file for training when using the chiron_train.py and chiron_queue_input.py pipeline.  \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9411305107118434,
      "result": {
        "original_header": "Decoder choice",
        "type": "Text_excerpt",
        "value": "| Device | Greedy decoder rate(bp/s) | Beam Search decoder rate(bp/s), beam_width=50 |  \n| --- | --- | --- |  \n| CPU | 21 | 17 |  \n| GPU | 1652 | 1204 |   \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999698790609187,
      "result": {
        "original_header": "Hardware request:",
        "type": "Text_excerpt",
        "value": "Recommend training on GPU with TensorFlow - usually 8GB RAM (GPU) is required.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9978520619433382,
      "result": {
        "original_header": "Train a model",
        "type": "Text_excerpt",
        "value": "```\nsource activate tensorflow   \n```\n#### If installed from `pip`:\nBASH2* \nor run directly by  \n```\npython chiron/chiron_rcnn_train.py  --data_dir <signal_label folder/ tfrecord file> --log_dir <model_log>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8807835882554633,
      "result": {
        "original_header": "A basecaller for Oxford Nanopore Technologies' sequencers",
        "type": "Text_excerpt",
        "value": "DNA basecall:\n```\npython chiron/entry.py call -i <input_fast5_folder> -o <output_folder> -m chiron/model/DNA_default -p dna-pre\n```\nRNA basecall:\nBASH2* \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8985416709406822,
      "result": {
        "original_header": "Output format",
        "type": "Text_excerpt",
        "value": "With -e flag to output fastq file(default) with quality score or fasta file.  \nExample:  \nchiron call -i <input_fast5_folder> -o <output_folder> -e fastq   \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9274884471317222,
      "result": {
        "original_header": "Train a model",
        "type": "Text_excerpt",
        "value": "or run directly by  \n```\npython chiron/chiron_rcnn_train.py  --data_dir <signal_label folder/ tfrecord file> --log_dir <model_log>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/haotianteng/Chiron/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "This Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n(c) 2017 Haotian Teng\n\nMozilla Public License Version 2.0\n===============================\n\n\n## 1. Definitions\n\n### 1.1. \"Contributor\"\n> means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software.\n\n### 1.2. \"Contributor Version\"\n> means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor\u00e2\u20ac\u2122s Contribution.\n\n### 1.3. \"Contribution\"\n> means Covered Software of a particular Contributor.\n\n### 1.4. \"Covered Software\"\n> means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.\n\n### 1.5. \"Incompatible With Secondary Licenses\"\n>means\n\n> > that the initial Contributor has attached the notice described in Exhibit B to the Covered Software; or\n> \n> <div></div>\n> \n> > that the Covered Software was made available under the terms of version 1.1 or earlier of the License, but not also under the terms of a Secondary License.\n\n### 1.6. \"Executable Form\"\n> means any form of the work other than Source Code Form.\n\n### 1.7. \"Larger Work\"\n> means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software.\n\n### 1.8. \"License\"\n> means this document.\n\n### 1.9. \"Licensable\"\n> means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License.\n\n### 1.10. \"Modifications\"\n> means any of the following:\n\n> > any file in Source Code Form that results from an addition to, deletion from, or modification of the contents of Covered Software; or\n>\n> <div></div>\n>\n> > any new file in Source Code Form that contains any Covered Software.\n\n### 1.11. \"Patent Claims\" of a Contributor\n> means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version.\n\n### 1.12. \"Secondary License\"\n> means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses.\n\n### 1.13. \"Source Code Form\"\n> means the form of the work preferred for making modifications.\n\n### 1.14. \"You\" (or \"Your\")\n> means an individual or a legal entity exercising rights under this License. For legal entities, \"You\" includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, \"control\" means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n\n\n## 2. License Grants and Conditions\n\n### 2.1. Grants\n> Each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n\n> > under intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and\n>\n> <div></div>\n>\n> > under Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version.\n\n### 2.2. Effective Date\n> The licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution.\n\n### 2.3. Limitations on Grant Scope\n> The licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor:\n\n> * for any code that a Contributor has removed from Covered Software; or\n\n> * for infringements caused by: (i) Your and any other third party\u00e2\u20ac\u2122s modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or\n\n> * under Patent Claims infringed by Covered Software in the absence of its Contributions.\n\n> This License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4).\n\n### 2.4. Subsequent Licenses\n> No Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3).\n\n### 2.5. Representation\n> Each Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License.\n\n### 2.6. Fair Use\n> This License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents.\n\n### 2.7. Conditions\n> Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1.\n\n\n## 3. Responsibilities\n\n### 3.1. Distribution of Source Form\n> All distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients\u00e2\u20ac\u2122 rights in the Source Code Form.\n\n### 3.2. Distribution of Executable Form\n> If You distribute Covered Software in Executable Form then:\n\n> > such Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and\n>\n> <div></div>\n>\n> You may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients\u00e2\u20ac\u2122 rights in the Source Code Form under this License.\n\n### 3.3. Distribution of a Larger Work\n> You may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s).\n\n### 3.4. Notices\n> You may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies.\n\n### 3.5. Application of Additional Terms\n> You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction.\n\n\n## 4. Inability to Comply Due to Statute or Regulation\n> If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it.\n\n\n## 5. Termination\n\n> **5.1.** The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice.\n\n> <div></div>\n\n> **5.2.** If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate.\n\n> <div></div>\n\n> **5.3.** In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination.\n\n\n## 6. Disclaimer of Warranty\n> Covered Software is provided under this License on an \"as is\" basis, without warranty of any kind, either expressed, implied, or statutory, including, without limitation, warranties that the Covered Software is free of defects, merchantable, fit for a particular purpose or non-infringing. The entire risk as to the quality and performance of the Covered Software is with You. Should any Covered Software prove defective in any respect, You (not any Contributor) assume the cost of any necessary servicing, repair, or correction. This disclaimer of warranty constitutes an essential part of this License. No use of any Covered Software is authorized under this License except under this disclaimer.\n\n\n## 7. Limitation of Liability\n> Under no circumstances and under no legal theory, whether tort (including negligence), contract, or otherwise, shall any Contributor, or anyone who distributes Covered Software as permitted above, be liable to You for any direct, indirect, special, incidental, or consequential damages of any character including, without limitation, damages for lost profits, loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses, even if such party shall have been informed of the possibility of such damages. This limitation of liability shall not apply to liability for death or personal injury resulting from such party\u00e2\u20ac\u2122s negligence to the extent applicable law prohibits such limitation. Some jurisdictions do not allow the exclusion or limitation of incidental or consequential damages, so this exclusion and limitation may not apply to You.\n\n\n## 8. Litigation\n> Any litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party\u00e2\u20ac\u2122s ability to bring cross-claims or counter-claims.\n\n\n## 9. Miscellaneous\n> This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor.\n\n\n## 10. Versions of the License\n\n### 10.1. New Versions\n> Mozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number.\n\n### 10.2. Effect of New Versions\n> You may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward.\n\n### 10.3. Modified Versions\n> If you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License).\n\n### 10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\n> If You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached.\n\n-----\n\n## Exhibit A - Source Code Form License Notice\n\n> This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at [http://mozilla.org/MPL/2.0/](http://mozilla.org/MPL/2.0/).\n\n> If it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice.\n\n> You may add additional accurate notices of copyright ownership.\n\n-----\n\n## Exhibit B - \"Incompatible With Secondary Licenses\" Notice\n\n> This Source Code Form is \"Incompatible With Secondary Licenses\", as defined by the Mozilla Public License, v. 2.0.\n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Chiron"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "haotianteng"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/chiron/"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 316283,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 4139,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1516,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 748,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 416,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://virtualenvwrapper.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "haotianteng",
          "type": "User"
        },
        "date_created": "2020-01-09T06:01:54Z",
        "date_published": "2020-01-09T06:15:37Z",
        "description": "## Add the description in the README about the dependent package.\r\nAdd tf version\r\nRemove unused package\r\n\r\n## Change the signal normalization to MEAN for better performance.\r\n",
        "html_url": "https://github.com/haotianteng/Chiron/releases/tag/0.6.1",
        "name": "Bug fix for better RNA basecall performance",
        "release_id": 22700321,
        "tag": "0.6.1",
        "tarball_url": "https://api.github.com/repos/haotianteng/Chiron/tarball/0.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/haotianteng/Chiron/releases/22700321",
        "value": "https://api.github.com/repos/haotianteng/Chiron/releases/22700321",
        "zipball_url": "https://api.github.com/repos/haotianteng/Chiron/zipball/0.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "haotianteng",
          "type": "User"
        },
        "date_created": "2019-11-28T00:07:52Z",
        "date_published": "2019-11-28T00:18:27Z",
        "description": "# Release v0.6\r\n## Improvement\r\nA new RNA model with overall **>85%** accuracy.\r\n\r\nObtain **>60%** successful short RNA reads basecall pass rate when using  [**BoostNano**](https://github.com/haotianteng/BoostNano) for preprocess. (from <20% successful short RNA reads pass rate of other basecallers).",
        "html_url": "https://github.com/haotianteng/Chiron/releases/tag/0.6",
        "name": "Faster RNA+DNA model with high accuracy",
        "release_id": 21816755,
        "tag": "0.6",
        "tarball_url": "https://api.github.com/repos/haotianteng/Chiron/tarball/0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/haotianteng/Chiron/releases/21816755",
        "value": "https://api.github.com/repos/haotianteng/Chiron/releases/21816755",
        "zipball_url": "https://api.github.com/repos/haotianteng/Chiron/zipball/0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "haotianteng",
          "type": "User"
        },
        "date_created": "2019-05-01T14:55:16Z",
        "date_published": "2019-05-01T15:06:49Z",
        "description": "This is a new version with a faster DNA model(10X faster and same accuracy) and pipeline optimization.",
        "html_url": "https://github.com/haotianteng/Chiron/releases/tag/v0.5.1",
        "name": "Bug fix and remake the DNA model.",
        "release_id": 17089957,
        "tag": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/haotianteng/Chiron/tarball/v0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/haotianteng/Chiron/releases/17089957",
        "value": "https://api.github.com/repos/haotianteng/Chiron/releases/17089957",
        "zipball_url": "https://api.github.com/repos/haotianteng/Chiron/zipball/v0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "haotianteng",
          "type": "User"
        },
        "date_created": "2019-03-30T07:54:53Z",
        "date_published": "2019-04-01T05:45:11Z",
        "description": "Update a new RNA model.\r\n10X faster RNA inferencing.",
        "html_url": "https://github.com/haotianteng/Chiron/releases/tag/v0.5",
        "name": "Chiron-v0.5",
        "release_id": 16466523,
        "tag": "v0.5",
        "tarball_url": "https://api.github.com/repos/haotianteng/Chiron/tarball/v0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/haotianteng/Chiron/releases/16466523",
        "value": "https://api.github.com/repos/haotianteng/Chiron/releases/16466523",
        "zipball_url": "https://api.github.com/repos/haotianteng/Chiron/zipball/v0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "haotianteng",
          "type": "User"
        },
        "date_created": "2018-08-24T21:32:14Z",
        "date_published": "2018-08-27T12:23:38Z",
        "description": "Fix a bug that could cause the CTC decoding pipline stuck, replace tqdm module in chiron_eval.py with a self-written progress bar which is more stable(and almost equally fancy).\r\nImprovement of the new model(DNA_default) on NA12878-WGS(human) benchmark dataset:\r\n\r\n## SUMMARY\r\nTotal reads:6080\r\nUnaligned reads:3303 -> 1553\r\nDeletion rate    : 0.0930 -> 0.0847\r\nInsertion rate   : 0.0562 -> 0.0538\r\nMismatch rate    : 0.0933 -> 0.0670\r\nIdentity rate    : 0.8283 -> 0.8483\r\n",
        "html_url": "https://github.com/haotianteng/Chiron/releases/tag/0.4.2",
        "name": "Bug fix and human benchmark result update",
        "release_id": 12589643,
        "tag": "0.4.2",
        "tarball_url": "https://api.github.com/repos/haotianteng/Chiron/tarball/0.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/haotianteng/Chiron/releases/12589643",
        "value": "https://api.github.com/repos/haotianteng/Chiron/releases/12589643",
        "zipball_url": "https://api.github.com/repos/haotianteng/Chiron/zipball/0.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "haotianteng",
          "type": "User"
        },
        "date_created": "2018-08-24T21:32:14Z",
        "date_published": "2018-08-17T08:53:18Z",
        "description": "Remove the tqdm process bar inside the worker, which cause Chiron collapsed. And fix the description of the process bar.\r\n\r\nNew feature released: chiron_label.py\r\nEnable label(re-squiggle) the DNA/RNA reads with a high success rate, label reads can be used to train new Chiron model.",
        "html_url": "https://github.com/haotianteng/Chiron/releases/tag/0.4.1",
        "name": "tqdm bug fix, and chiron_label added",
        "release_id": 12450490,
        "tag": "0.4.1",
        "tarball_url": "https://api.github.com/repos/haotianteng/Chiron/tarball/0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/haotianteng/Chiron/releases/12450490",
        "value": "https://api.github.com/repos/haotianteng/Chiron/releases/12450490",
        "zipball_url": "https://api.github.com/repos/haotianteng/Chiron/zipball/0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "haotianteng",
          "type": "User"
        },
        "date_created": "2018-06-04T14:30:05Z",
        "date_published": "2018-06-07T08:39:23Z",
        "description": "Enable different model configuration specified by the config Json file.\r\nAdded a pre-trained RNN model (-200 mV, test version)\r\n~3X faster basecalling when using GPU.\r\nEnable cloud training using Google Cloud ML Engine.\r\nEnable distributed training process, support multiple GPU training.",
        "html_url": "https://github.com/haotianteng/Chiron/releases/tag/0.4",
        "name": "Chiron-0.4",
        "release_id": 11365627,
        "tag": "0.4",
        "tarball_url": "https://api.github.com/repos/haotianteng/Chiron/tarball/0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/haotianteng/Chiron/releases/11365627",
        "value": "https://api.github.com/repos/haotianteng/Chiron/releases/11365627",
        "zipball_url": "https://api.github.com/repos/haotianteng/Chiron/zipball/0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "haotianteng",
          "type": "User"
        },
        "date_created": "2017-11-08T07:10:05Z",
        "date_published": "2017-11-08T07:16:47Z",
        "description": "New option added --beam <beam_width>\r\nDefault now using a beam search decoder with a beam width 50, set beam_width to 0 to use the previous greedy decoder.\r\nBeam search decoder greatly reduced the deletion rate.",
        "html_url": "https://github.com/haotianteng/Chiron/releases/tag/0.3",
        "name": "Chiron 0.3",
        "release_id": 8427777,
        "tag": "0.3",
        "tarball_url": "https://api.github.com/repos/haotianteng/Chiron/tarball/0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/haotianteng/Chiron/releases/8427777",
        "value": "https://api.github.com/repos/haotianteng/Chiron/releases/8427777",
        "zipball_url": "https://api.github.com/repos/haotianteng/Chiron/zipball/0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "haotianteng",
          "type": "User"
        },
        "date_created": "2017-09-20T13:13:20Z",
        "date_published": "2017-09-20T13:22:29Z",
        "html_url": "https://github.com/haotianteng/Chiron/releases/tag/0.2",
        "name": "Chiron 0.2",
        "release_id": 7823984,
        "tag": "0.2",
        "tarball_url": "https://api.github.com/repos/haotianteng/Chiron/tarball/0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/haotianteng/Chiron/releases/7823984",
        "value": "https://api.github.com/repos/haotianteng/Chiron/releases/7823984",
        "zipball_url": "https://api.github.com/repos/haotianteng/Chiron/zipball/0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "haotianteng",
          "type": "User"
        },
        "date_created": "2017-09-09T06:32:01Z",
        "date_published": "2017-09-10T05:01:05Z",
        "description": "Add fastq output, and provide the quality score output.\r\n",
        "html_url": "https://github.com/haotianteng/Chiron/releases/tag/0.1.4",
        "name": "Chiron 0.1.4",
        "release_id": 7696931,
        "tag": "0.1.4",
        "tarball_url": "https://api.github.com/repos/haotianteng/Chiron/tarball/0.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/haotianteng/Chiron/releases/7696931",
        "value": "https://api.github.com/repos/haotianteng/Chiron/releases/7696931",
        "zipball_url": "https://api.github.com/repos/haotianteng/Chiron/zipball/0.1.4"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Test run",
        "parent_header": [
          "Chiron",
          "Basecall"
        ],
        "type": "Text_excerpt",
        "value": "We provide 5 sample fast5 files for DNA(courtesy of [nanonet](https://github.com/nanoporetech/nanonet)) and 5 sample files for RNA in the GitHub repository and two models (DNA_default and RNA_default) which you can run a test on. These are located in `chiron/example_data/`. From inside the Chiron repository:\n```\npython chiron/entry.py call -i chiron/example_folder/ -o <output_folder> -m chiron/model/DNA_default --preset dna-pre\n```\nAnd from v0.5 we have provide a good RNA model for the direct-RNA basecall.  \n```\npython chiron/entry.py call -i <input_fast5_folder> -o <output_folder> -m chiron/model/RNA_default --mode rna --preset rna-pre\n```\nYou can reduce the batch size(defualt is 400) if you have limited RAM/GPU-RAM or extend it, bigger batch size has (very)slightly better result and faster inference speed.  \n```\npython chiron/entry.py call -i <input_fast5_folder> -o <output_folder> -m chiron/model/RNA_default --mode rna --preset rna-pre -b 200\n```\nAny arguments provided afterward will override the argument in the preset, preset arguments values are:  \n**DNA preset arguments value(dna-pre):**\n'start':0,'batch_size':400,'segment_len':400,'jump':390,'threads':0,'beam':30    \n**RNA preset arguments value(rna-pre):**\n'start':0,'batch_size':300,'segment_len':2000,'jump':1900,'threads':0,'beam':30  \n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:52:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 122
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use gsutil to copy the fast5 files to your Cloud Storage bucket",
        "parent_header": [
          "Chiron",
          "Train on Google Cloud ML engine"
        ],
        "type": "Text_excerpt",
        "value": "```\ngsutil cp -r raw_fast_folder gs://$BUCKET_NAME/fast5-data\n```\n"
      },
      "source": "https://raw.githubusercontent.com/haotianteng/chiron/master/README.md",
      "technique": "header_analysis"
    }
  ]
}