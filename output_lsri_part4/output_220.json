{
  "application_domain": [
    {
      "confidence": 27.2,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ucrbioinfo/SELFISH"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-31T18:51:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-30T01:16:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Selfish: Discovery of Differential Chromatin Interactions via a Self-Similarity Measure"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9577588740169526,
      "result": {
        "original_header": "Selfish",
        "type": "Text_excerpt",
        "value": "SELFISH (Discovery of Differential Chromatin Interactions via a Self-Similarity Measure) is a tool for finding differential chromatin interactions between two Hi-C contact maps. It uses self-similarity to model interactions in a robust way. For more information read the full paper: <a href=\"https://academic.oup.com/bioinformatics/article/35/14/i145/5529135\" target=\"_blank\">**Selfish: Discovery of Differential Chromatin Interactions via a Self-Similarity Measure**</a>. A Python implementation of Selfish is available at <a href=\"https://github.com/ay-lab/selfish\" target=\"_blank\">**Ay-lab**</a>. \n- ```[X,Y,P] = SELFISH_DCI(contc1,contc2,norm1,norm2,THRESHOLD,RESOLUTION,INTERVAL)``` returns the coordinates of differential chromatin interactions [X,Y] and their correponding corrected p-values (after fdr) in P for raw contact maps read from files contc1 and contc2 with normalization vectors read from files norm1 and norm2.  \n- ```[X,Y,P] = SELFISH_DCI(contc1,contc2,[],[],THRESHOLD,RESOLUTION,INTERVAL)``` returns the coordinates of differential chromatin interactions [X,Y] and their correponding corrected p-values (after fdr) in P for contact maps read from files contc1 and contc2.  \n- `RESOLUTION`          data resoultion in bp (e.g. 5000) \n- `INTERVAL`            the interval in bp for which DCIs are detected (e.g. [10000000 35000000])\n \n"
      },
      "source": "https://raw.githubusercontent.com/ucrbioinfo/Selfish/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9617989158532851,
      "result": {
        "original_header": "Dependency ",
        "type": "Text_excerpt",
        "value": "# Selfish\nSELFISH (Discovery of Differential Chromatin Interactions via a Self-Similarity Measure) is a tool for finding differential chromatin interactions between two Hi-C contact maps. It uses self-similarity to model interactions in a robust way. For more information read the full paper: <a href=\"https://academic.oup.com/bioinformatics/article/35/14/i145/5529135\" target=\"_blank\">**Selfish: Discovery of Differential Chromatin Interactions via a Self-Similarity Measure**</a>. A Python implementation of Selfish is available at <a href=\"https://github.com/ay-lab/selfish\" target=\"_blank\">**Ay-lab**</a>. \n"
      },
      "source": "https://raw.githubusercontent.com/ucrbioinfo/Selfish/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ucrbioinfo/Selfish/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ucrbioinfo/SELFISH/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ucrbioinfo/SELFISH"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Selfish"
      },
      "source": "https://raw.githubusercontent.com/ucrbioinfo/Selfish/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ucrbioinfo/SELFISH/master/ESvsNPC_final.png"
      },
      "source": "https://raw.githubusercontent.com/ucrbioinfo/Selfish/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9554605222201328,
      "result": {
        "original_header": "Selfish",
        "type": "Text_excerpt",
        "value": "<img src=\"https://raw.githubusercontent.com/ucrbioinfo/SELFISH/master/ESvsNPC_final.png\" width=\"500\" height=\"500\"> \n<h3>Dependency </h3> \n- MATLAB 8.5 or newer. \n"
      },
      "source": "https://raw.githubusercontent.com/ucrbioinfo/Selfish/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.815188824760835,
      "result": {
        "original_header": "Selfish",
        "type": "Text_excerpt",
        "value": "- `contc1`              Hi-C contact map filename 1 (e.g. '/chr1/MAPQGE30/chr1_5kb.RAWobserved') \n- `contc2`              Hi-C contact map filename 2 \n"
      },
      "source": "https://raw.githubusercontent.com/ucrbioinfo/Selfish/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ucrbioinfo/SELFISH/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SELFISH"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ucrbioinfo"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 9764,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ucrbioinfo/Selfish/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency ",
        "parent_header": [
          "Selfish"
        ],
        "type": "Text_excerpt",
        "value": "# Selfish\nSELFISH (Discovery of Differential Chromatin Interactions via a Self-Similarity Measure) is a tool for finding differential chromatin interactions between two Hi-C contact maps. It uses self-similarity to model interactions in a robust way. For more information read the full paper: <a href=\"https://academic.oup.com/bioinformatics/article/35/14/i145/5529135\" target=\"_blank\">**Selfish: Discovery of Differential Chromatin Interactions via a Self-Similarity Measure**</a>. A Python implementation of Selfish is available at <a href=\"https://github.com/ay-lab/selfish\" target=\"_blank\">**Ay-lab**</a>.\n\n<img src=\"https://raw.githubusercontent.com/ucrbioinfo/SELFISH/master/ESvsNPC_final.png\" width=\"500\" height=\"500\">\n\n<h3>Dependency </h3>\n\n- MATLAB 8.5 or newer.\n\n<h3>Syntax</h3>\n\n- ```[X,Y,P] = SELFISH_DCI(contc1,contc2,norm1,norm2,THRESHOLD,RESOLUTION,INTERVAL)``` returns the coordinates of differential chromatin interactions [X,Y] and their correponding corrected p-values (after fdr) in P for raw contact maps read from files contc1 and contc2 with normalization vectors read from files norm1 and norm2. \n\n- ```[X,Y,P] = SELFISH_DCI(contc1,contc2,[],[],THRESHOLD,RESOLUTION,INTERVAL)``` returns the coordinates of differential chromatin interactions [X,Y] and their correponding corrected p-values (after fdr) in P for contact maps read from files contc1 and contc2. \n\n<h3>Parameters</h3>\nSELFISH_DCI doesn't take any parameters as input but it has two predefined parameters work best for 5kb resoultion.\n\n- `sigma0 = 1.6` first Gaussian filter sigma (r0 = 2*ceil(2*sigma0)+1).\n\n- `s = 10` the number of Gaussian radii used in the modeling.\n<h3>Inputs</h3>\n\n- `contc1`              Hi-C contact map filename 1 (e.g. '/chr1/MAPQGE30/chr1_5kb.RAWobserved')\n\n- `norm1`               normalization vector filename 1 (e.g. '/chr1/MAPQGE30/chr1_5kb.KRnorm')\n\n- `contc2`              Hi-C contact map filename 2\n\n- `norm2`               normalization vector filename 2\n\n- `THRESHOLD`           fdr threshold used for calling DCIs (e.g. 10^-4)\n\n- `RESOLUTION`          data resoultion in bp (e.g. 5000)\n\n- `INTERVAL`            the interval in bp for which DCIs are detected (e.g. [10000000 35000000])\n"
      },
      "source": "https://raw.githubusercontent.com/ucrbioinfo/Selfish/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:31:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}