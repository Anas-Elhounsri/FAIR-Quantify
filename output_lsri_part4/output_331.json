{
  "application_domain": [
    {
      "confidence": 20.11,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sirimullalab/KinasepKipred"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-25T02:46:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-06T02:08:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Model to predict kinase-ligand pKi values."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9930694549566496,
      "result": {
        "original_header": "KinasepKipred",
        "type": "Text_excerpt",
        "value": "Kinases to predict Inhibitor constant in terms of pKI (where pKi is decadic logarithm of Ki). We used the data points that were specifically represent Ki values to train and test the models.\n \n"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9529134892720424,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "A docker image is also available on docker hub.  \n"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sirimullalab/KinasepKipred/tree/master/mayachemtools/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sirimullalab/KinasepKipred/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/scripts/evaluation/ConInterCal/confidence_interval_cal.ipynb"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/scripts/evaluation/ConInterCal/confidence_interval_cal.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/scripts/evaluation/ConInterCal/confidence_interval_cal2.ipynb"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/scripts/evaluation/ConInterCal/confidence_interval_cal2.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/scripts/evaluation/ConInterCal/.ipynb_checkpoints/confidence_interval_cal2-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/scripts/evaluation/ConInterCal/.ipynb_checkpoints/confidence_interval_cal2-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/scripts/evaluation/ConInterCal/.ipynb_checkpoints/confidence_interval_cal-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/scripts/evaluation/ConInterCal/.ipynb_checkpoints/confidence_interval_cal-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sirimullalab/KinasepKipred/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sirimullalab/KinasepKipred"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KinasepKipred"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/download_model.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/test.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup",
        "parent_header": [
          "KinasepKipred"
        ],
        "type": "Text_excerpt",
        "value": "* Download the model file \n```bash\n./download_model.sh\n```\n* Set up the conda environment and activate it\n```bash\nconda env create -f environment.yml\nconda activate kinasepki\n```\n"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9887686114560323,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "* Build the docker image `docker build -t kinasepki .` and run `docker run --rm kinasepki` for a sample run that uses `test.sh`. To provide sequence and SMILES, do `docker run --rm kinasepki <protein_sequence> <compound_smiles>` \n* Download the docker image `docker pull sirimullalab/kinasepkipred:py2`\n* Run the container `docker run --rm sirimullalab/kinasepkipred:py2 <protein_sequence> <compound_smiles>`. To run with a built-in sample, do  `docker run --rm sirimullalab/kinasepkipred:py2`\n \n"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8268850307911918,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "* Download the docker image `docker pull sirimullalab/kinasepkipred:py2`\n* Run the container `docker run --rm sirimullalab/kinasepkipred:py2 <protein_sequence> <compound_smiles>`. To run with a built-in sample, do  `docker run --rm sirimullalab/kinasepkipred:py2`\n \n"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sirimullalab/KinasepKipred/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Sirimulla Research Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KinasepKipred"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "sirimullalab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 18095864,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 3173253,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 2718897,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 134331,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 57992,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 13435,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 12125,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Yacc",
        "size": 7523,
        "type": "Programming_language",
        "value": "Yacc"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Parrot",
        "size": 5029,
        "type": "Programming_language",
        "value": "Parrot"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 795,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 311,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements:",
        "parent_header": [
          "KinasepKipred"
        ],
        "type": "Text_excerpt",
        "value": "* python==2.7.16\n* pydpi==1.0\n* numpy==1.16.5\n* pandas==0.24.2\n* tqdm==4.36.1\n* scipy==1.2.2\n* scikit-learn==0.20.4\n* rdkit==2018.03\n"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:55:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage:",
        "parent_header": [
          "KinasepKipred"
        ],
        "type": "Text_excerpt",
        "value": "Run `./test.sh` to get the prediction for an example pair of protein sequence and a ligand SMILES. For any other inputs, run the following\n\n```bash\npython2 get_kinase_pki.py \"<PROTEIN_SEQUENCE>\" \"<LIGAND_SMILES>\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/sirimullalab/KinasepKipred/master/README.md",
      "technique": "header_analysis"
    }
  ]
}