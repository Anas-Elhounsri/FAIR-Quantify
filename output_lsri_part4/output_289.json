{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Christina-hshi/CQF-deNoise"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-27T13:25:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-04T07:31:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CQF-deNoise enables fast k-mer counting with memory usage nearly unaffected by sequencing errors."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9748486342930847,
      "result": {
        "original_header": "Build",
        "type": "Text_excerpt",
        "value": "-------\r\n\r\n```bash\r\n $ mkdir release\r\n $ cd release\r\n $ cmake ..\r\n $ make all\r\n```\r\n\r\nTwo programs (\"CQF-deNoise\" and \"cqf_operations\") will be generated.\r\nCQF-deNoise is for counting k-mers.\r\ncqf_operations is for manipulation of the CQFs.\r\nFor more details, please run the program with \"-h\".\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/Christina-hshi/CQF-deNoise/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Christina-hshi/CQF-deNoise/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Christina-hshi/CQF-deNoise/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Christina-hshi/CQF-deNoise"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CQF-deNoise"
      },
      "source": "https://raw.githubusercontent.com/Christina-hshi/CQF-deNoise/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "User manual",
        "parent_header": [
          "CQF-deNoise"
        ],
        "type": "Text_excerpt",
        "value": "```\r\n./CQF-deNoise  <options>\r\nOptions:\r\n  -h [ --help ]            print help messages\r\n  -k arg                   k-mer size\r\n  -n [ --trueKmer ] arg    number of unique true k-mers\r\n  -N arg                   total number of k-mers\r\n  -e [ --alpha ] arg (=-1) average base error rate, when specified, the \r\n                           <errorProfile> is ignored\r\n  --errorProfile arg       error profile in a file, each line with error rate \r\n                           for the corresponding base, e.g. the error rate of \r\n                           the second base is specified in the second line\r\n  --fr arg (=0)            tolerable rate of true k-mers being wrongly removed,\r\n                           default: 1/<trueKmer>\r\n  --deNoise arg (=-1)      number of rounds of deNoise, when specified, the \r\n                           <fr> is ignored\r\n  --endDeNoise             call deNoise after processing all the k-mers (not \r\n                           counted into the <deNoise>)\r\n  -t arg (=16)             number of threads\r\n  -f [ --format ] arg      format of the input: g(gzip); b(bzip2); f(plain \r\n                           fastq)\r\n  -i [ --input ] arg       a file containing list of input file name(s), should\r\n                           be in the same directory as the fastq file(s)\r\n  -o [ --output ] arg      output file name\r\n```\r\nUsers are required to specify either ```<alpha>``` or ```<errorProfile>```. \r\nIf you have no idea about the error rate or the error profile of the sequencing techniques used to generate your data, you can use [ntCard](https://github.com/bcgsc/ntCard.git) to first estimate the k-mer frequency histogram. \r\n[NtCard](https://github.com/bcgsc/ntCard.git) is quite efficient and it produces a lot of useful statistics, including the total number of k-mers (```<N>```), number of k-mers with different occurrence counts. \r\nAnd then by taking k-mers with low counts (e.g. singletons or k-mers with counts <=2) as potential false k-mers and the rest of the k-mers as true k-mers, you can estimate an average base error rate by computing ```1 - (T/N)^(1/k)```, where ```T``` is the total number of true k-mers (please notice that ```T``` is not ```<n>```). \r\nIf you don't know the number of unique true k-mers (```<n>```), you can use the number of k-mers with enough occurrence counts (e.g. >=2 or >=3) as an approximation, or you can use the size of the genome as the approximation of the number of unique true k-mers (```<n>```). \r\n\r\n\r\nFollowing is an example of how to set the parameters to run CQF-deNoise based on the k-mer frequency histogram estimated by ntCard to count the 28-mers in a C.elegans data set.\r\n\r\nThe output of the ntCard (run with '-k28') contains \r\n```\r\nF1      22238370946 #this is the total number of k-mers <N>\r\nF0      2004956528  #this is the total number of unique k-mers\r\nf1      1852352895  #this is the number of unique k-mers occuring once\r\nf2      34025186    #this is the number of unique k-mers occuring twice\r\nf3      7174180\r\nf<x>      ....\r\n```\r\n\r\nBased on the output of the ntCard, we can set \r\n```\r\nN = F1 = 22238370946\r\nn = F0 - f1 - f2 = 118578447 (which is similar to the size of the C.elegans genome, ~100 Mb)\r\ne = 1 - ((F1 - f1 - 2*f2)/F1)^(1/28) = 0.00322\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/Christina-hshi/CQF-deNoise/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9982413854182374,
      "result": {
        "original_header": "Build",
        "type": "Text_excerpt",
        "value": "-------\r\n\r\n```bash\r\n $ mkdir release\r\n $ cd release\r\n $ cmake ..\r\n $ make all\r\n```\r\n\r\nTwo programs (\"CQF-deNoise\" and \"cqf_operations\") will be generated.\r\nCQF-deNoise is for counting k-mers.\r\ncqf_operations is for manipulation of the CQFs.\r\nFor more details, please run the program with \"-h\".\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/Christina-hshi/CQF-deNoise/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Christina-hshi/CQF-deNoise/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2019, \nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThis software is a derivative work based upon [Squeakr], according to the following license\n\nBSD 3-Clause License\n\nCopyright (c) 2017, \nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/Christina-hshi/CQF-deNoise/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CQF-deNoise"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Christina-hshi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 301902,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 118812,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 2758,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 2175,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Christina-hshi/CQF-deNoise/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Christina-hshi",
          "type": "User"
        },
        "date_created": "2019-08-12T08:42:43Z",
        "date_published": "2019-08-12T08:46:17Z",
        "html_url": "https://github.com/Christina-hshi/CQF-deNoise/releases/tag/v1.0",
        "name": "Release v1.0",
        "release_id": 19223071,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/Christina-hshi/CQF-deNoise/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Christina-hshi/CQF-deNoise/releases/19223071",
        "value": "https://api.github.com/repos/Christina-hshi/CQF-deNoise/releases/19223071",
        "zipball_url": "https://api.github.com/repos/Christina-hshi/CQF-deNoise/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:46:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ]
}