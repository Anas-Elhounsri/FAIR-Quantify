{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JesseKerkvliet/Bellerophon"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-04-18T12:55:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-30T09:18:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Chimera removal pipeline"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9725351181559266,
      "result": {
        "original_header": "Bellerophon",
        "type": "Text_excerpt",
        "value": "Bellerophon is a pipeline created to remove falsely assembled chimeric transcripts in de novo transcriptome assemblies.\n \n"
      },
      "source": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9973890308094282,
      "result": {
        "original_header": "Pending issues:",
        "type": "Text_excerpt",
        "value": "  - Custom order of filtering steps is disabled in this version\n  - This document needs to be expanded\n  \n   \n"
      },
      "source": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JesseKerkvliet/Bellerophon/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JesseKerkvliet/Bellerophon/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JesseKerkvliet/Bellerophon"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Bellerophon"
      },
      "source": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/utils/TransDecoder-3.0.1/sample_data/simple_transcriptome_target/runMe.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/utils/TransDecoder-3.0.1/sample_data/cufflinks_example/runMe.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/utils/TransDecoder-3.0.1/sample_data/pasa_example/runMe.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation with Vagrant VM",
        "parent_header": [
          "Bellerophon"
        ],
        "type": "Text_excerpt",
        "value": "The pipeline can be downloaded as a vragrant virtual machine (https://app.vagrantup.com/bellerophon/boxes/bellerophon). This is recommended, as it avoids backwards compatibility problems with TransRate.\n\n"
      },
      "source": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation with conda",
        "parent_header": [
          "Bellerophon"
        ],
        "type": "Text_excerpt",
        "value": "Bellerophon can also be installed locally. This is the preferred option for users without root permission and Vagrant, but with access to Conda.\nThe easies way for local installation is the use of Conda. \nAfter cloning this repository, run the following command to create the conda environment:\n```\nconda env create envs/Bellerophon.yml\n```\nAfter installation, run the following command to activate the conda environment:\n```\nconda activate Bellerophon\n```\n"
      },
      "source": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8632865836575027,
      "result": {
        "original_header": "Pending issues:",
        "type": "Text_excerpt",
        "value": "  - Custom order of filtering steps is disabled in this version\n  - This document needs to be expanded\n  \n   \n"
      },
      "source": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JesseKerkvliet/Bellerophon/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2009 Bill Dueber\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/utils/Transrate/lib/app/ruby/2.2.0/gems/threach-0.2.0/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Bellerophon"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "JesseKerkvliet"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 8043603,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 550698,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 399588,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 175619,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 160890,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 140278,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 64288,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 38869,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 11338,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7212,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 6044,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 3982,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Gherkin",
        "size": 259,
        "type": "Programming_language",
        "value": "Gherkin"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running with Vagrant",
        "parent_header": [
          "Bellerophon"
        ],
        "type": "Text_excerpt",
        "value": "To run Bellerophon with Vagrant, download vagrant and virtualbox. \n\nDownload the Bellerophon vagrantfile\n\nRun the following command:\n```\nvagrant init\n```\nWhen it's done downloading run:\n```\nvagrant up\n```\nAnd finally:\n```\nvagrant ssh\n```\n\nYou are now in the virtual environment to run Bellerophon.\nShared data can be found at /vagrant/\n\nYou can now run the test run of Bellerophon in the Bellerophon folder:\n```\npython Bellerophon.py --assembly Demo.fasta --left All_R1_1000.fastq --right All_R2_1000.fastq --outdir /vagrant/testrun\n```\nNote that Bellerophon will make an output directory in the /vagrant/ directory. This is recommended as the disk size of Bellerophon is not large enough for most full transcriptome analyses. It also makes the results of the analysis available on the host system, rather than only on the virtual machine.\n\n"
      },
      "source": "https://raw.githubusercontent.com/JesseKerkvliet/Bellerophon/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 03:56:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ]
}