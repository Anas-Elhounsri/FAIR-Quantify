{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/spiwokv/anncolvar"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-05-16T19:55:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-11T06:49:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Collective variables by artificial neural networks"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "Biased simulations, such as metadynamics, use a predefined set of parameters known\nas collective variables. An artificial bias force is applied on collective variables\nto enhance sampling. There are two conditions for a parameter to be applied as\na collective variable. First, the value of the collective variables can be calculated\nsolely from atomic coordinates. Second, the force acting on collective variables\ncan be converted to the force acting on individual atoms. In the other words, it\nis possible to calculate the first derivative of the collective variables with\nrespect to atomic coordinates. Both calculations must be fast enough, because\nthey must be evaluated in every step of the simulation.\n\nThere are many potential collective variables that cannot be easily calculated.\nIt is possible to calculate the collective variable for hundreds or thousands of\nstructures, but not for millions of structures (which is necessary for nanosecond\nlong simulations). *anncolvar* can approximate such collective variables using\na neural network.\n"
      },
      "source": "https://raw.githubusercontent.com/spiwokv/anncolvar/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9764784397546215,
      "result": {
        "original_header": "News",
        "type": "Text_excerpt",
        "value": "Current master vsersion makes it possible to use ANN module of recent master version of Plumed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/spiwokv/anncolvar/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9789175123641821,
      "result": {
        "original_header": "Syntax",
        "type": "Text_excerpt",
        "value": "  usage: anncolvar [-h] [-i INFILE] [-p INTOP] [-c COLVAR] [-col COL]\n                   [-boxx BOXX] [-boxy BOXY] [-boxz BOXZ] [-nofit NOFIT]\n                   [-testset TESTSET] [-shuffle SHUFFLE] [-layers LAYERS]\n                   [-layer1 LAYER1] [-layer2 LAYER2] [-layer3 LAYER3]\n                   [-actfun1 ACTFUN1] [-actfun2 ACTFUN2] [-actfun3 ACTFUN3]\n                   [-optim OPTIM] [-loss LOSS] [-epochs EPOCHS] [-batch BATCH]\n                   [-o OFILE] [-model MODELFILE] [-plumed PLUMEDFILE]\n                   [-plumed2 PLUMEDFILE2]\n  \n  Artificial neural network learning of collective variables of molecular\n  systems, requires numpy, keras and mdtraj\n  \n  optional arguments:\n    -h, --help           show this help message and exit\n    -i INFILE            Input trajectory in pdb, xtc, trr, dcd, netcdf or mdcrd,\n                         WARNING: the trajectory must be 1. must contain only atoms\n                         to be analyzed, 2. must not contain any periodic boundary\n                         condition issues!\n    -p INTOP             Input topology in pdb, WARNING: the structure must be 1.\n                         centered in the PBC box and 2. must contain only atoms\n                         to be analyzed!\n    -c COLVAR            Input collective variable file in text format, must\n                         contain the same number of lines as frames in the\n                         trajectory\n    -col COL             The index of the column containing collective variables\n                         in the input collective variable file\n    -boxx BOXX           Size of x coordinate of PBC box (from 0 to set value in\n                         nm)\n    -boxy BOXY           Size of y coordinate of PBC box (from 0 to set value in\n                         nm)\n    -boxz BOXZ           Size of z coordinate of PBC box (from 0 to set value in\n                         nm)\n    -nofit NOFIT         Disable fitting, the trajectory must be properly fited\n                         (default False)\n    -testset TESTSET     Size of test set (fraction of the trajectory, default =\n                         0.1)\n    -shuffle SHUFFLE     Shuffle trajectory frames to obtain training and test\n                         set (default True)\n    -layers LAYERS       Number of hidden layers (allowed values 1-3, default =\n                         1)\n    -layer1 LAYER1       Number of neurons in the first encoding layer (default =\n                         256)\n    -layer2 LAYER2       Number of neurons in the second encoding layer (default\n                         = 256)\n    -layer3 LAYER3       Number of neurons in the third encoding layer (default =\n                         256)\n    -actfun1 ACTFUN1     Activation function of the first layer (default =\n                         sigmoid, for options see keras documentation)\n    -actfun2 ACTFUN2     Activation function of the second layer (default =\n                         linear, for options see keras documentation)\n    -actfun3 ACTFUN3     Activation function of the third layer (default =\n                         linear, for options see keras documentation)\n    -optim OPTIM         Optimizer (default = adam, for options see keras\n                         documentation)\n    -loss LOSS           Loss function (default = mean_squared_error, for options\n                         see keras documentation)\n    -epochs EPOCHS       Number of epochs (default = 100, >1000 may be necessary\n                         for real life applications)\n    -batch BATCH         Batch size (0 = no batches, default = 256)\n    -o OFILE             Output file with original and approximated collective\n                         variables (txt, default = no output)\n    -model MODELFILE     Prefix for output model files (experimental, default =\n                         no output)\n    -plumed PLUMEDFILE   Output file for Plumed (default = plumed.dat)\n    -plumed2 PLUMEDFILE2 Output file for Plumed with ANN module (default =\n                         plumed2.dat)\n \n"
      },
      "source": "https://raw.githubusercontent.com/spiwokv/anncolvar/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9900030787777925,
      "result": {
        "type": "Text_excerpt",
        "value": "Read more in \nD. Trapl, I. Horva\u0107anin, V. Mare\u0161ka, F. \u00d6z\u00e7elik, G. Unal and V. Spiwok: anncolvar: Approximation of Complex Collective Variables by Artificial Neural Networks for Analysis and Biasing of Molecular Simulations  *Front. Mol. Biosci.*  2019, **6**, 25 (doi: 10.3389/fmolb.2019.00025) \n"
      },
      "source": "https://raw.githubusercontent.com/spiwokv/anncolvar/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/spiwokv/anncolvar/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/spiwokv/anncolvar/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "spiwokv/anncolvar"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/spiwokv/anncolvar/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "You have to chose and install one of keras backends, such as Tensorflow, Theano or\nCNTK. For this follow one of these links:\n\n- TensorFlow_\n- Theano_\n- CNTK_ (CNTK 2.7 is the last release since 2019)\n\nInstall numpy and cython by PIP::\n\n  pip install numpy cython\n\nNext, install anncolvar by PIP::\n\n  pip install anncolvar\n\nIf you use Anaconda type::\n\n  conda install -c spiwokv anncolvar\n"
      },
      "source": "https://raw.githubusercontent.com/spiwokv/anncolvar/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.948074886658637,
      "result": {
        "original_header": "News",
        "type": "Text_excerpt",
        "value": "August 2020: Support for Python 2.7 terminated, use Python 3. \nCurrent master vsersion makes it possible to use ANN module of recent master version of Plumed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/spiwokv/anncolvar/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9915996266023219,
      "result": {
        "type": "Text_excerpt",
        "value": "|PyPI| |Anaconda| |BuildStatus| |WeeklyBuildStatus|  |codecov| |lgtm| |lgtmpy|\n|DOI| |nest| \n"
      },
      "source": "https://raw.githubusercontent.com/spiwokv/anncolvar/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/spiwokv/anncolvar/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Vojtech Spiwok\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/spiwokv/anncolvar/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "anncolvar"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "spiwokv"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 55383,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/spiwokv/anncolvar/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "spiwokv",
          "type": "User"
        },
        "date_created": "2019-12-01T19:54:10Z",
        "date_published": "2019-12-01T19:55:04Z",
        "description": "Bug with reading activation function fixed.\r\n",
        "html_url": "https://github.com/spiwokv/anncolvar/releases/tag/v0.8",
        "name": "v0.8",
        "release_id": 21881095,
        "tag": "v0.8",
        "tarball_url": "https://api.github.com/repos/spiwokv/anncolvar/tarball/v0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/spiwokv/anncolvar/releases/21881095",
        "value": "https://api.github.com/repos/spiwokv/anncolvar/releases/21881095",
        "zipball_url": "https://api.github.com/repos/spiwokv/anncolvar/zipball/v0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "spiwokv",
          "type": "User"
        },
        "date_created": "2019-11-26T12:05:52Z",
        "date_published": "2019-11-26T13:39:17Z",
        "description": "New version works with ANN module of Plumed.",
        "html_url": "https://github.com/spiwokv/anncolvar/releases/tag/v0.7",
        "release_id": 21767078,
        "tag": "v0.7",
        "tarball_url": "https://api.github.com/repos/spiwokv/anncolvar/tarball/v0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/spiwokv/anncolvar/releases/21767078",
        "value": "https://api.github.com/repos/spiwokv/anncolvar/releases/21767078",
        "zipball_url": "https://api.github.com/repos/spiwokv/anncolvar/zipball/v0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "spiwokv",
          "type": "User"
        },
        "date_created": "2019-04-28T18:49:52Z",
        "date_published": "2019-04-30T09:17:11Z",
        "description": "Code was modified to reach grade A+ (0 alerts) on LGTM.com.\r\n",
        "html_url": "https://github.com/spiwokv/anncolvar/releases/tag/v0.6",
        "release_id": 17061223,
        "tag": "v0.6",
        "tarball_url": "https://api.github.com/repos/spiwokv/anncolvar/tarball/v0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/spiwokv/anncolvar/releases/17061223",
        "value": "https://api.github.com/repos/spiwokv/anncolvar/releases/17061223",
        "zipball_url": "https://api.github.com/repos/spiwokv/anncolvar/zipball/v0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "spiwokv",
          "type": "User"
        },
        "date_created": "2019-03-17T20:38:40Z",
        "date_published": "2019-03-17T20:39:40Z",
        "description": "box size check corrected.\r\n",
        "html_url": "https://github.com/spiwokv/anncolvar/releases/tag/v0.5",
        "release_id": 16166191,
        "tag": "v0.5",
        "tarball_url": "https://api.github.com/repos/spiwokv/anncolvar/tarball/v0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/spiwokv/anncolvar/releases/16166191",
        "value": "https://api.github.com/repos/spiwokv/anncolvar/releases/16166191",
        "zipball_url": "https://api.github.com/repos/spiwokv/anncolvar/zipball/v0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "spiwokv",
          "type": "User"
        },
        "date_created": "2019-01-14T15:10:40Z",
        "date_published": "2019-01-14T20:12:21Z",
        "description": "updated requirements.txt to fix security issues.\r\n",
        "html_url": "https://github.com/spiwokv/anncolvar/releases/tag/v0.4",
        "name": "v0.4",
        "release_id": 14968658,
        "tag": "v0.4",
        "tarball_url": "https://api.github.com/repos/spiwokv/anncolvar/tarball/v0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/spiwokv/anncolvar/releases/14968658",
        "value": "https://api.github.com/repos/spiwokv/anncolvar/releases/14968658",
        "zipball_url": "https://api.github.com/repos/spiwokv/anncolvar/zipball/v0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "spiwokv",
          "type": "User"
        },
        "date_created": "2018-12-29T23:39:19Z",
        "date_published": "2018-12-29T23:40:08Z",
        "description": "Added documentation",
        "html_url": "https://github.com/spiwokv/anncolvar/releases/tag/0.3",
        "name": "v0.3",
        "release_id": 14742481,
        "tag": "0.3",
        "tarball_url": "https://api.github.com/repos/spiwokv/anncolvar/tarball/0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/spiwokv/anncolvar/releases/14742481",
        "value": "https://api.github.com/repos/spiwokv/anncolvar/releases/14742481",
        "zipball_url": "https://api.github.com/repos/spiwokv/anncolvar/zipball/0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "spiwokv",
          "type": "User"
        },
        "date_created": "2018-12-26T17:51:07Z",
        "date_published": "2018-12-26T17:56:37Z",
        "html_url": "https://github.com/spiwokv/anncolvar/releases/tag/0.2",
        "name": "anncolvar v0.2",
        "release_id": 14704704,
        "tag": "0.2",
        "tarball_url": "https://api.github.com/repos/spiwokv/anncolvar/tarball/0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/spiwokv/anncolvar/releases/14704704",
        "value": "https://api.github.com/repos/spiwokv/anncolvar/releases/14704704",
        "zipball_url": "https://api.github.com/repos/spiwokv/anncolvar/zipball/0.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:32:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "A series of representative structures (hundreds or more) with pre-calculated values\nof the collective variable is used to train the neural network. The user can specify\nthe input set of reference structures (*-i*) in the form of a trajectory in pdb, xtc,\ntrr, dcd, netcdf or mdcrd. The trajectory must contain only atoms to be analyzed\n(for example only non-hydrogen atoms). The trajectory must not contain any periodic\nboundary condition issues. Both conversions can be made by molecular dynamics\nsimulation packages, for example by *gmx trjconv*. It is not necessary to fit\nframes to a reference structure. It is possible to switch fitting off by\n*-nofit True*.\n\nIt is necessary to supply an input topology in PDB. This is a structure used\nas a template for fitting. It is also used to define a box. This box must be large\nenough to fit the molecule in all frames of the trajectory. It should not be too\nlarge because this suppresses non-linearity in the neural network. When the user\ndecides to use a 3x3x3 nm box it is necessary to place the molecule to be centered\nat coordinates (1.5,1.5,1.5) nm. In Gromacs it is possible to use::\n\n  gmx editconf -f mol.pdb -o reference.pdb -c -box 3 3 3\n\nIt must also contain only atoms to be analyzed. Size of the box can be specified\nby parameters *-boxx*, *-boxy* and *-boxz* (in nm).\n\nLast input file is the collective variable file. It is a space-separated text\nfile with the same number of lines as the number of frames in the input trajectory.\nThe index of the column can be specified by *-col* (e.g. *-col 2* for the second\ncolumn of the file.\n\nThe option *-testset* can control the fraction of the trajectory used as\nthe test set. For example *-testset 0.1* means that 10 % of input data is used\nas the test set and 90 % as the training set. The option *-shuffle True* causes\nthat first 90 % is used as the training set and remaining 10 % as the test set.\nOtherwise frames are shuffled before separation to the training and test set.\n\nThe architecture of the neural network is controlled by multiple parameters.\nThe input layer contains 3N neurons (where N is the number of atoms). The number\nof hidden layers is controlled by *-layers*. This can be 1, 2 or 3. For higher\nnumber of layers contact the authors. Number of neurons in the first, second and\nthird layer is controlled by *-layer1*, *-layer2* and *-layer3*. It is useful\nto use the number of layers equal to powers of 2 (32, 64, 128 etc.). Huge numbers\nof neurons can cause that the program is slow or run out of memory. Activation\nfunctions of neurons can be controlled by *-actfun1*, *-actfun2* and *-actfun3*.\nAny activation function supported by keras can be used.\n\nThe optimizer used in the training process can be controlled by *-optim*. The\ndefault ADAM optimizer (*-optim adam*) works well. The loss function can be\ncontrolled by *-loss*. The default *-loss mean_squared_error* works well. The\nnumber of epochs can be controlled by *-epochs*. The default value (100) is\nquite little, usually >1000 is necessary for real life applications. The batch\nsize can be controlled by *-batch* (*-batch 0* for no batches, default is 256).\n\nOutput is written into the text file *-o*. It contains the approximated and\nthe original values of collective variable. The model can be stored in the set\nof text files (try *-model*). The input file is printed into the file controlled\nby *-plumed* (by default plumed.dat). This file can be directly used to calculate\nthe evolution of the collective variable by *plumed driver* or by Plumed-patched\nmolecular dynamics engine. To use the collective variable in enhances sampling\n(for example metadynamics) it is necessary to add a suitable keyword (for example\nMETAD).\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/anncolvar.svg\n    :target: https://pypi.org/project/anncolvar/\n    :alt: Latest version released on PyPI\n\n.. |Anaconda| image:: https://anaconda.org/spiwokv/anncolvar/badges/version.svg\n    :target: https://anaconda.org/spiwokv/anncolvar\n    :alt: Latest version released on Anaconda Cloud\n\n.. |BuildStatus| image:: https://github.com/spiwokv/anncolvar/actions/workflows/ci.yml/badge.svg\n    :target: https://github.com/spiwokv/anncolvar/actions\n    :alt: Build status of the master branch on Mac/Linux at Github Actions\n\n.. |WeeklyBuildStatus| image:: https://github.com/spiwokv/anncolvar/actions/workflows/weekly.yml/badge.svg\n    :target: https://github.com/spiwokv/anncolvar/actions\n    :alt: Weekly Monday 10 AM build status of the master branch on Mac/Linux at Github Actions\n\n.. |codecov| image:: https://codecov.io/gh/spiwokv/anncolvar/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/spiwokv/anncolvar/\n    :alt: Code coverage\n\n.. |lgtm| image:: https://img.shields.io/lgtm/alerts/g/spiwokv/anncolvar.svg?logo=lgtm&logoWidth=18\n    :target: https://lgtm.com/projects/g/spiwokv/anncolvar/alerts/\n    :alt: LGTM code alerts\n\n.. |lgtmpy| image:: https://img.shields.io/lgtm/grade/python/g/spiwokv/anncolvar.svg?logo=lgtm&logoWidth=18\n    :target: https://lgtm.com/projects/g/spiwokv/anncolvar/context:python\n    :alt: LGTM python quality\n    \n.. |nest| image:: https://www.plumed-nest.org/eggs/19/008/badge.svg\n    :target: https://www.plumed-nest.org/eggs/19/008/\n    :alt: Plumed Nest ID: 008 \n\n.. |DOI| image:: https://zenodo.org/badge/DOI/10.3389/fmolb.2019.00025.svg\n    :target: https://doi.org/10.3389/fmolb.2019.00025 \n    :alt: DOI: 10.3389/fmolb.2019.00025 \n\n.. _TensorFlow: https://www.tensorflow.org/install/\n\n.. _Theano: http://deeplearning.net/software/theano/install.html\n\n.. _CNTK: https://docs.microsoft.com/en-us/cognitive-toolkit/setup-cntk-on-your-machine\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/spiwokv/anncolvar/master/README.rst",
      "technique": "header_analysis"
    }
  ]
}