{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hart-lab/drugz"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-06-07T22:47:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-26T00:34:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DRUGZ software"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9107127826178105,
      "result": {
        "original_header": "drugz",
        "type": "Text_excerpt",
        "value": "DrugZ software from the Hart Lab\n  \nDrugZ detects synergistic and suppressor drug-gene interactions in CRISPR screens.  \n```\nusage: drugz.py [-h] [-i sgRNA_count.txt] [-o drugz-output.txt]  \n                [-f drugz-foldchange.txt] -c control samples -x drug samples  \n                [-r remove genes] [-p pseudocount] [-I INDEX_COLUMN]  \n                [--minobs minObs] [--half_window_size half_window_size] [-q]  \n  \n-i      \tReadcount file, tab-delimited text (input)  \n-o      \tDrugZ results file, tab-delimited text (output)  \n-f      \tDrugZ Z-transformed fold change file (optional)  \n-c      \tControl samples: comma-delimited list of column headers in readcount file  \n-x      \tTreated samples: comma-delimited list of column headers in readcount file  \n-r      \tComma-delimited list of genes to remove before analysis  \n-p      \tPseudocount to add to all readcounts; prevents log(0) problems (default=5) \n-I      \tIndex column (default=0)  \n--minobs   \tIgnore genes with fewer observations ( gRNA/gene x replicates) (default=1) \n--half_window_size  Size of the first bin and half the size of the inital sample\n    (window) to estimate std (default=500) \n-unpaired Unpaired approach: compares mean(treated samples) to mean(control samples) (default=False)\n```\n  \nThe input file should be a tab-delimited file with the following format:\n \nTo run drugZ analysis in a jupyter notebook, and save the output as variable:\n```\n# define the Arguments class (more convinient since iPython doesn't recognize argparse arguments)\n# these are user-specified arguments\n\n# infile = input readcounts matrix\n# drugz_out_file = name of a file in which you will write the drugz results\n# control_samples = the names of control samples (included in column names)\n# drug_samples = the names of drug-treated samples (included in column names)\n# unpaire = unpaired approach - compares mean(treated samples) to mean(control samples) \n# pseudocount = counts added to the observed readscounts, default = 5\n# half_window_size = size of the first bin and half the size of the inital sample (window) to estimate std, default = 500 (for whole genome screens)\n\nclass Args:\n    infile = \"./sgRNA_count.txt\"\n    drugz_output_file = \"./drugz_results.txt\"\n    fc_outfile = \"./fc_results.txt\"\n    control_samples = 'T15_A_control,T15_B_control,T15_C_control'\n    drug_samples = 'T15_A_olaparib,T15_B_olaparib,T15_C_olaparib'\n    remove_genes = 'LacZ,luciferase,EGFR'\n    unpaired = False\n    pseudocount = 5\n    half_window_size = 5 # 5 because of the size of test data set          (sgRNA_count.txt = 9 guides (i.e. rows))\n    \ndrugz_results = dz.drugZ_analysis(Args())\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/hart-lab/drugz/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hart-lab/drugz/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hart-lab/drugz/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hart-lab/drugz"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "drugz"
      },
      "source": "https://raw.githubusercontent.com/hart-lab/drugz/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9973393284751026,
      "result": {
        "original_header": "drugz",
        "type": "Text_excerpt",
        "value": "Critically, the \"gene\" column must be the first non-index column in the file, and the column headers are used on the command line. For example, to execute DrugZ analyzing just the A and B replicates of this file, the command line would be:\n```\ndrugz.py -i [input_file] -o drugz-output.txt -c T15_A_control,T15_B_control -x T15_A_olaparib,T15_B_olaparib\n```\nTo save the intermediate gRNA-level raw and normalized fold changes for other analyses, add the -f flag:\n```\ndrugz.py -i [input_file] -o drugz-output.txt -f drugz-foldchange.txt -c T15_A_control,T15_B_control -x T15_A_olaparib,T15_B_olaparib\n```\nTo run drugZ for an unpaired approach, add the -unpaired flag:\n \n```\ndrugz.py -i [input_file] -o drugz-output.txt -f drugz-foldchange.txt -c T15_A_control,T15_B_control -x T15_A_olaparib,T15_B_olaparib -unpaired\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/hart-lab/drugz/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8560937323939982,
      "result": {
        "original_header": "drugz",
        "type": "Text_excerpt",
        "value": "DrugZ software from the Hart Lab\n  \nDrugZ detects synergistic and suppressor drug-gene interactions in CRISPR screens.  \n```\nusage: drugz.py [-h] [-i sgRNA_count.txt] [-o drugz-output.txt]  \n                [-f drugz-foldchange.txt] -c control samples -x drug samples  \n                [-r remove genes] [-p pseudocount] [-I INDEX_COLUMN]  \n                [--minobs minObs] [--half_window_size half_window_size] [-q]  \n  \n-i      \tReadcount file, tab-delimited text (input)  \n-o      \tDrugZ results file, tab-delimited text (output)  \n-f      \tDrugZ Z-transformed fold change file (optional)  \n-c      \tControl samples: comma-delimited list of column headers in readcount file  \n-x      \tTreated samples: comma-delimited list of column headers in readcount file  \n-r      \tComma-delimited list of genes to remove before analysis  \n-p      \tPseudocount to add to all readcounts; prevents log(0) problems (default=5) \n-I      \tIndex column (default=0)  \n--minobs   \tIgnore genes with fewer observations ( gRNA/gene x replicates) (default=1) \n--half_window_size  Size of the first bin and half the size of the inital sample\n    (window) to estimate std (default=500) \n-unpaired Unpaired approach: compares mean(treated samples) to mean(control samples) (default=False)\n```\n  \nThe input file should be a tab-delimited file with the following format:\n \nCritically, the \"gene\" column must be the first non-index column in the file, and the column headers are used on the command line. For example, to execute DrugZ analyzing just the A and B replicates of this file, the command line would be:\n```\ndrugz.py -i [input_file] -o drugz-output.txt -c T15_A_control,T15_B_control -x T15_A_olaparib,T15_B_olaparib\n```\nTo save the intermediate gRNA-level raw and normalized fold changes for other analyses, add the -f flag:\n```\ndrugz.py -i [input_file] -o drugz-output.txt -f drugz-foldchange.txt -c T15_A_control,T15_B_control -x T15_A_olaparib,T15_B_olaparib\n```\nTo run drugZ for an unpaired approach, add the -unpaired flag:\n \n```\ndrugz.py -i [input_file] -o drugz-output.txt -f drugz-foldchange.txt -c T15_A_control,T15_B_control -x T15_A_olaparib,T15_B_olaparib -unpaired\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/hart-lab/drugz/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hart-lab/drugz/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 hart-lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/hart-lab/drugz/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "drugz"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "hart-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 264507,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 24523,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hart-lab/drugz/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 01:54:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 22
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}