{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KnorrFG/pyparadigm"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-09-20T12:13:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-29T11:21:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python library to develope paradigms for psychological experiments"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9007760987033131,
      "result": {
        "original_header": "PyParadigm",
        "type": "Text_excerpt",
        "value": "PyParadigm is a small library to build paradigms for psychological experiments.\nIt utilizes pygame, and is installable via pip\n    \n    pip install pyparadigm \nYou can find the documentation including an introduction\nand a tutorial over at: https://pyparadigm.readthedocs.io/en/latest/index.html\n \n"
      },
      "source": "https://raw.githubusercontent.com/KnorrFG/pyparadigm/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9856215734909423,
      "result": {
        "original_header": "Changelog",
        "type": "Text_excerpt",
        "value": "* 1.2.2\n    * Adds pygame.font.init() to pp.init()\n* 1.2.1\n    * Replaces pygame.init() with pygame.display.init() in pyparadigms init method,\n      so not required modules are not initialized\n* 1.2.0\n    * Adds the FreeFloatLayout\n    * Adds the Title argument to misc.init()\n* 1.1.0\n    * adds the sleeptime argument to eventlistener.listen_until_return() and\n      eventlistener.wait_for_keypresses()\n    * Mousproxys can now take handler functions of arity 4. The last argument\n      will then be the rect of the MouseProxy. Arity 3 is still allowed\n    * fixes a bug, that made a MouseProxy not match the drawArea of a child\n      surface\n    * Adds an event handler for resize events\n    * Adds an event handler for Quit events\n* 1.0.9\n    * added the keep_aspect_ratio parameter to Surface\n    * added normalize parameter to mat_to_surface()\n    * added dialog module\n    * fixed a bug that would cause a crash, if misc.empty_surface() was used\n      with size but without initializing the windows\n    * fixes a bug that would miss-align grid layout items, if not all rows had\n      the same number of elements\n* 1.0.8\n    * added misc.rgba for conversion of color codes to pygame.Color with alpha\n      channel, useful for text-colors\n    * Fixed a bug, that would cause a Gridlayout to crash if \n      a None is added\n    * Fixed a bug that would cause crashes when adding iterable objects with a\n      draw method to a render object with a single child\n    * Added functions:\n        * is_left_click()\n        * is_key_press()\n* 1.0.7\n    * fixed a bug in EventListener.wait_for_n_key_presses()\n    * fixed a code sample in the tutorial\n* 1.0.6\n    * added special treatment for Surfaces in MouseProxy, so that the actual visible rect is obtained. For that I added a new method, Surface.compute_render_rect\n* 1.0.5\n    * Fixed surface_composition.Border.__call__()\n    * added EventListener.wait_for_unicode_char() and misc.process_char() for textinput\n    * added EventListener.listen_until_return()\n    * added Handler class which contains factories for handler functions that can be used with EventListener.Listen()\n    * added MouseProxy, EventListener.mouse_area and EventListener.group() for basic mouse support.\n* 1.0.4\n    * Added EventListener.wait_for_keys_modified\n    * Added the extras module containing functions to use numpy arrays and Matplotlib colormaps\n* 1.0.3\n    * EventListener.wait_for_keys supports varargs now\n* 1.0.2:\n    * added imports on package level\n    * added interactive parameter for misc\n* 1.0.1:\n    * Added PyPi readme\n* 1.0 - release \n"
      },
      "source": "https://raw.githubusercontent.com/KnorrFG/pyparadigm/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pyparadigm.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/KnorrFG/pyparadigm/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KnorrFG/pyparadigm/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KnorrFG/pyparadigm/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KnorrFG/pyparadigm"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyParadigm"
      },
      "source": "https://raw.githubusercontent.com/KnorrFG/pyparadigm/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999990502150203,
      "result": {
        "original_header": "PyParadigm",
        "type": "Text_excerpt",
        "value": "PyParadigm is a small library to build paradigms for psychological experiments.\nIt utilizes pygame, and is installable via pip\n    \n    pip install pyparadigm \n"
      },
      "source": "https://raw.githubusercontent.com/KnorrFG/pyparadigm/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KnorrFG/pyparadigm/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2018 Felix G. Knorr\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/KnorrFG/pyparadigm/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pyparadigm"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "KnorrFG"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 54892,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KnorrFG/pyparadigm/master/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 03:13:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}