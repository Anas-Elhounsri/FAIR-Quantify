{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Improve calls in sample given a reference panel",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Preprocessing the panel, which must be done once to precalculate the necessary matrix inverses.\n```\n./marvin_prep -f panel.vcf.gz -O z -o sites.20.vcf.gz -r 20 -b 100000 -ov 5000\n```\nIf panel.vcf.gz contains reference panel data (multisample vcf/bcf of hard genotypes, with no missing sites) for chromosome 20 then the code above computes correlation matrices in blocks of 100kb using overlap of 5kb between neighbouring blocks.\nAfter indexing sites.20.vcf.gz, to impute any new sample run\n\n```\n./marvin -f input.vcf.gz -O z -o out.vcf.gz -site sites.20.vcf.gz -r 20 -b 100000 -ov 50000\n```\n`out.vcf.gz` has the GT field added or overwritten with the imputed genotypes using correlation information from sites.20.vcf.gz.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Illumina/MarViN"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Call genotypes from a population given likelihoods",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Assuming that `input.vcf.gz` contains genotype likelihoods in the specified region and is indexed (.csi or .tbi)\n```\n./marvin -f input.vcf.gz -O z -o out.vcf.gz -r chr20:1000000-2000000 -b 200000 -ov 100000\n```\n`out.vcf.gz` will contain genotypes imputed under MarViN's LD model between 1Mb and 2Mb on chromosome chr20, in blocks of 200kb, using overlap of 100kb on either side of the window.\n\nIn practice, it is easier to use the `marvin.py` script to analyse whole chromosomes:\n```\npython ~/MarViN/scripts/marvin.py ALL.chr20.phase3_bc_union.20130502.biallelic_svm_snps_indelsAF0.005_svs.gl.reheader.mac1.snps.bcf\n                                  \\ -nproc 24  -tmp /tmp/ -o marvin.chr20.bcf -r 20:60479-26319535,20:29419740-62965354 \n                                  \\ -marvin ~/MarViN/marvin -bcftools ~/.local/bin/bcftools\n```\nThis command will leverage 24 separate marvin processes. The `-marvin` and `-bcftools` arguments tell the script the locations of the respective binaries. The `-tmp` tells the script where to store temprorary files (should use local scratch). The output (`-o`) will be output for the regions specified in `-r`. In the above example I specify two separate regions to analyse the arms of chromosome 20 separately (ensuring a window will not span the centromere).\n\n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Improve calls in sample given a reference panel",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Preprocessing the panel, which must be done once to precalculate the necessary matrix inverses.\n```\n./marvin_prep -f panel.vcf.gz -O z -o sites.20.vcf.gz -r 20 -b 100000 -ov 5000\n```\nIf panel.vcf.gz contains reference panel data (multisample vcf/bcf of hard genotypes, with no missing sites) for chromosome 20 then the code above computes correlation matrices in blocks of 100kb using overlap of 5kb between neighbouring blocks.\nAfter indexing sites.20.vcf.gz, to impute any new sample run\n\n```\n./marvin -f input.vcf.gz -O z -o out.vcf.gz -site sites.20.vcf.gz -r 20 -b 100000 -ov 50000\n```\n`out.vcf.gz` has the GT field added or overwritten with the imputed genotypes using correlation information from sites.20.vcf.gz.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-11-13T18:14:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-09T17:21:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9804409024482752,
      "result": {
        "original_header": "MarViN",
        "type": "Text_excerpt",
        "value": "Rapid Genotype Refinement for Whole-Genome Sequencing Data using Multi-Variate Normal Distribution. This software is not commercially supported. \nSee our [pre-print](http://biorxiv.org/content/biorxiv/early/2015/11/12/031484.full.pdf) for a full description of the method.\n \n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9657020059007531,
      "result": {
        "original_header": "marvin_prep",
        "type": "Text_excerpt",
        "value": "Set up means and covariances for marvin. Use this if you have a reference panel. If you want to genotype a large cohort from likelihoods you do not need to run this. \n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9973360125018751,
      "result": {
        "original_header": "marvin",
        "type": "Text_excerpt",
        "value": "* -f : The input vcf file. Can be valid vcf or bcf, compressed or uncompressed. Should contain at least two samples and must have a GT field with no missing entries for any sample/variant combination.\n* -o : marvin\\_prep outputs a site only vcf containing the sites kept from the input vcf and the correlations above the threshold max_ratio. Specify the site file name with this argument.\n* -O : output format for site only vcf. Compressed BCF (b), uncompressed BCF (u), compressed VCF (z), uncompressed VCF (v). Default is v.\n* -r : regions chr or chr:start-end. Section of the genome to operate on. \n* -sigma_reg : use sigmoid function of allele frequency in regularization. Can perform better at low allele frequencies. Default regularization (without this option) is `Sigma(i,i) += lambda` with this option it is `Sigma(i,i) += lambda / (1.0 + exp( lambda2 * ( Sigma(i,i) - pct ) ) )`\n* -lambda : regularization parameter, changing this has some effect on the results but 0.06 was optimal for most of our tests. Default is 0.06.\n* -lambda2 : regularization parameter, controls steepness of sigma regularization. Default is 4.\n* -pct : regularization parameter, controls the midpoint of the sigma regularization. Default is 0.2.\n* -b : block size, compute correlation matrix for variants in this block. \n* -ov : overlap between neighbouring blocks. \n* -max_ratio : only keep elements of correlation matrix s.t. |Cij/max(|Cij|)| > r. Default r = 0.01. \nExpects input_filename.vcf.gz to contain GL or PL field\n* I/O\n  * -f : the input vcf file. Can be valid vcf or bcf, compressed or uncompressed. \n  * -o : output file name containing the imputed genotypes and dosages.\n  * -O : output format. Compressed BCF (b), uncompressed BCF (u), compressed VCF (z), uncompressed VCF (v). Default is v.\n  * -Ogl : Add GP and GQ field to output.\n  * -v : when present output more information at runtime.\n* Window params\n  * -r : regions chr:start-end. Section of the genome to operate on.\n  * -b : block size, compute correlation matrix for variants in this block. \n  * -ov : overlap between neighbouring blocks. \n* Panel params\n  * -site : site only vcf output by marvin_prep.\n  * -c : collapse snps|indels|both|all|some|none. Controls how intersection of sample and panel is performed. Similar to bcftools isec. Default none.\n* Run pararmeters\n  * -max_its : Number of \u2018outer\u2019 iterations of marvin (re-estimations of the covariance matrix). Only has an effect when not using panel. Default, without panel 5, with panel only 1 allowed.\n  * -inner_its : Number of \u2018inner\u2019 iterations of marvin (re-estimations of data with fixed covariance). Default 1 without panel, 5 with panel.\n  * -EMits : When not using a panel marvin does EM on allele frequencies to compute an initial guess. Specifies how many iterations to perform (fewer is generally better). Default 1.\n  * -maxlr : Maximum allowed likelihood ratio. Likelihood ratios larger than specified threshold will set the smaller likelihood to zero.\n  * -bias : MarViN works with expected values, when calling hard genotypes if the expected value is less than this parameter it reports hom-ref. If the expected value is between bias and 2-bias it reports het if above 2-bias reports hom-alt. Default 0.5.\n* Regularization parameters\n  * -sigma_reg : use sigmoid function of allele frequency in regularization. Can perform better at low allele frequencies. Default regularization (without this option) is `Sigma(i,i) += lambda` with this option it is `Sigma(i,i) += lambda / (1.0 + exp( lambda2 * ( Sigma(i,i) - pct ) ) )`.\n  * -lambda : regularization parameter, changing has some effect on the results but 0.06 was optimal for most of our tests. Default is 0.06.\n  * -lambda2 : regularization parameter, controls steepness of sigma regularization. Default is 4.\n  * -pct : regularization parameter, controls the midpoint of the sigma regularization. Default is 0.2.\n \n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9750948487243941,
      "result": {
        "original_header": "marvin.py",
        "type": "Text_excerpt",
        "value": "We also provide a wrapper script  to facilitate processing of large WGS data sets on multi-CPU systems (bcftools required for concatenation). This is how results in our paper were generated. The script performs analysis on chunks of size `w * 2b` using multiple CPUs and stores the results in temporary files. The files are then concatenated using bcftools.\n```\n$ python scripts/marvin.py\nusage: marvin.py [-h] [-w w] [-b b] [-lamda lamda] -output\n                 output -r r -marvin marvin -bcftools bcftools [-tmp tmp]\n                 [-nprocess nprocess] [--phred]\n                 input\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/illumina/marvin/wiki"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/illumina/marvin/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Illumina/MarViN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Illumina/MarViN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MarViN"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "MarViN"
        ],
        "type": "Text_excerpt",
        "value": "You can install MarViN via the following commands:\n\n```\ngit clone https://github.com/Illumina/MarViN\ncd MarViN/\nmake\n```\nWhich creates the two executables: `marvin` and `marvin_prep`.\n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9996262571881658,
      "result": {
        "original_header": "marvin_prep",
        "type": "Text_excerpt",
        "value": "Set up means and covariances for marvin. Use this if you have a reference panel. If you want to genotype a large cohort from likelihoods you do not need to run this. \n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Illumina/MarViN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "[Files in this distribution outwith the cram/ subdirectory are distributed\naccording to the terms of the following MIT/Expat license.]\n\nThe MIT/Expat License\n\nCopyright (C) 2012-2014 Genome Research Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n\n[Files within the cram/ subdirectory in this distribution are distributed\naccording to the terms of the following Modified 3-Clause BSD license.]\n\nThe Modified-BSD License\n\nCopyright (C) 2012-2014 Genome Research Ltd.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice,\n   this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the names Genome Research Ltd and Wellcome Trust Sanger Institute\n   nor the names of its contributors may be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY GENOME RESEARCH LTD AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL GENOME RESEARCH LTD OR ITS CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n[The use of a range of years within a copyright notice in this distribution\nshould be interpreted as being equivalent to a list of years including the\nfirst and last year specified and all consecutive years between them.\n\nFor example, a copyright notice that reads \"Copyright (C) 2005, 2007-2009,\n2011-2012\" should be interpreted as being identical to a notice that reads\n\"Copyright (C) 2005, 2007, 2008, 2009, 2011, 2012\" and a copyright notice\nthat reads \"Copyright (C) 2005-2012\" should be interpreted as being identical\nto a notice that reads \"Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010,\n2011, 2012\".]\n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/htslib-1.2.1/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "MarViN"
        ],
        "type": "Text_excerpt",
        "value": "MarViN source code is provided under the [GPLv3](https://git.illumina.com/rarthur/MarViN/blob/master/LICENSE.txt) license. MarViN includes several third-party packages provided under other open source licenses, please see [COPYRIGHT.txt](https://git.illumina.com/rarthur/MarViN/blob/master/COPYRIGHT.txt) for additional details.\n\nMarViN relies on HTSlib and Eigen. [Eigen](http://eigen.tuxfamily.org/index.php?title=Main_Page) is a header-only library for matrix algebra released under the MPL2 license - see the link (https://www.mozilla.org/en-US/MPL/2.0/) and [COPYRIGHT.txt](https://git.illumina.com/rarthur/MarViN/blob/master/COPYRIGHT.txt). [HTSlib](http://www.htslib.org/) is a library for efficently parsing vcf files released under the MIT/Expat License - see the link (https://opensource.org/licenses/MIT) and [COPYRIGHT.txt](https://git.illumina.com/rarthur/MarViN/blob/master/COPYRIGHT.txt).\nBoth Eigen and HTSlib are included with MarViN.\n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MarViN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Illumina"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 2918877,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1269926,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 23297,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 19808,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 7535,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 6810,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 3828,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/illumina/marvin/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jaredo",
          "type": "User"
        },
        "date_created": "2015-11-13T10:23:25Z",
        "date_published": "2016-01-06T15:57:45Z",
        "description": "This release corresponds to the results in the first MarViN pre-print:\n\nhttp://biorxiv.org/content/biorxiv/early/2015/11/12/031484.full.pdf\n",
        "html_url": "https://github.com/Illumina/MarViN/releases/tag/v0.1.0",
        "name": "pre-print release",
        "release_id": 2381673,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/Illumina/MarViN/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Illumina/MarViN/releases/2381673",
        "value": "https://api.github.com/repos/Illumina/MarViN/releases/2381673",
        "zipball_url": "https://api.github.com/repos/Illumina/MarViN/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:26:45",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "MarViN should be run on a small window (recommend 200Kb). If there are M variants in a window MarViN scales like M<sup>2</sup> for memory consumption and M<sup>3</sup> for speed. Linkage-Disequilibrium, which is responsible for the correlation patterns used by MarViN, typically decays rapidly with distance. In our experiments we found window sizes between 50Kb and 200Kb to be adequate.\n"
      },
      "source": "https://raw.githubusercontent.com/illumina/marvin/master/README.md",
      "technique": "header_analysis"
    }
  ]
}