{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DMnBI/iMGEins"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-16T09:22:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-29T08:03:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9960184076757801,
      "result": {
        "original_header": "iMGEins",
        "type": "Text_excerpt",
        "value": "This is an explanation of how to use iMGEins.\n \n"
      },
      "source": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9887657523661769,
      "result": {
        "original_header": "Pre-installed programs for iMGEins",
        "type": "Text_excerpt",
        "value": "In order to check the availability of SAMTOOLS, BLAST and Bowtie2, you can type \u201csamtools -version\u201d, \u201cblastn \u2013version\u201d and \u201cbowtie2-align --version\u201d, respectively. \n \n"
      },
      "source": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9686209228255804,
      "result": {
        "original_header": "Break_points_with_assemble.gff",
        "type": "Text_excerpt",
        "value": "- DStream-support: Number of soft-clipped reads in the downstream of the breakpoint\n- UStream-support: Number of soft-clipped reads in the upstream of the breakpoint\n- DStreamPolyA: True if Poly-A tail soft-clipped sequence presents in the downstream of the breakpoint\n- DStreamPolyT: True if Poly-T tail soft-clipped sequence presents in the downstream of the breakpoint\n- UStreamPolyA: True if Poly-A tail soft-clipped sequence presents in the upstream of the breakpoint\n- UStreamPolyT: True if Poly-T tail soft-clipped sequence presents in the upstream of the breakpoint\n- softReadMGEID: MGE family name assigned using soft-clipped reads\n- numOfHitSoftReads: Number of soft-clipped reads that support the MGE family assigned\n- numOfUnmapReads: Number of singly unmapped reads (SU, US, MU and UM) supporting the break point\n- MGEID: MGE family name assigned using singly-unmapped reads\n- numOfHitReads: Number of unmapped reads that support the MGE family assigned\n- avgSimilarity: Average similarity value of BLAST hit to MGEID\n- avgAlnReadLen: Average aligned read length of BLAST hit to MGEID\n- numOfMissedReads: Number of reads that are not related with the MGE family assigned\n- HitRatio: Ratio of reads that support the MGE family assigned\n- NovelMGEContigID: Assembled contig ID\n- ContigToMGEID: MGE family name assigned using assembled contig\n- MGEHitPos: Coordinate of MGE hit to contig by BLAST\n- NumOfMappedReadToContig: Number of singly-unmapped reads that aligned to the contig\n- trimmedContigSeq: Assembled and trimmed contig sequence using dynamic programming\n \n"
      },
      "source": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DMnBI/iMGEins/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DMnBI/iMGEins/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DMnBI/iMGEins"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iMGEins"
      },
      "source": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start guide",
        "parent_header": [
          "iMGEins"
        ],
        "type": "Text_excerpt",
        "value": "In the folder \"sample_data\" there are simulated data to run iMGEins."
      },
      "source": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "default_param_for_sample.txt",
        "parent_header": [
          "iMGEins",
          "Quick start guide"
        ],
        "type": "Text_excerpt",
        "value": "Now you are ready to run iMGEins. The following is the basic iMGEins command line for sample data running.\n\t\n\tjava -jar /data/jwbae/iMGEins_ReleaseVer1.1.0.jar -i ./sample_data/iMGEins_sample.sam -o /your/own/working/dir/ -p ./sample_data/default_param_for_sample.txt\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9493751930435295,
      "result": {
        "original_header": "Pre-installed programs for iMGEins",
        "type": "Text_excerpt",
        "value": "iMGEins needs the following programs and the MGE sequence database. You should first confirm that the following programs are correctly installed in your computer. \n- SAMTOOLS version 0.1.18 or higher\n- BLAST version 2.2.29+ or higher\n- Bowtie2 version 2.1.0 or higher\n- Java version 1.7 or higher\n- MGE database (.fasta or .fa) \nIn order to check the availability of SAMTOOLS, BLAST and Bowtie2, you can type \u201csamtools -version\u201d, \u201cblastn \u2013version\u201d and \u201cbowtie2-align --version\u201d, respectively. \n \n"
      },
      "source": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DMnBI/iMGEins/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iMGEins"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "DMnBI"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1: Read mapping (optional)",
        "parent_header": [
          "iMGEins",
          "Running iMGEins using your own data"
        ],
        "type": "Text_excerpt",
        "value": "If you have sequencing reads in fastq format but do not have the mapping results in SAM format, you need to map the reads to the reference genome. We recommend Bowtie2 with local alignment mode. \n\nIf you do not have bowtie index files for your reference genome, you should build index file prior to read mapping.\n\nUsage: \n>bowtie2-build your_genome.fa your_genome\n\nIf you have bowtie index files, you can directly map reads on the reference genome.\n\nUsage: \n>bowtie2-align --sensitive-local \u2013x /path/to/ bowtie2/index/genome -1 pair_read1.fq   -2 pair_read2.fq \u2013S ouput_file_name.sam\n\nFor detailed instructions, please consult with the bowtie manual (http://bowtiebio.sourceforge.net/bowtie2/manual.shtml)\n"
      },
      "source": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2: Identify individual MGEs",
        "parent_header": [
          "iMGEins",
          "Running iMGEins using your own data"
        ],
        "type": "Text_excerpt",
        "value": "\tUsage:\n\t>java -jar -Xmx??g iMGEins_ReleaseVerX.X.X.jar -i [input_sam_file] -o [output_foler] -p [configuration_file]\n\n\nConfiguration file:\n\n\t# minimum length of the soft-clipped region\n\tclipping_size = 5\n\n\t# threshold of average base quality of soft clipped region\n\tbaseQthreshold = 60\n\n\t# minimum number of soft-clipped reads required\n\tsoft_clip_map_sum = 3\n\n\t# minimum number of soft-clipped reads required at each direction of the breakpoint\n\tsupport_soft_clip_map = 2\n\n\t# coverage of input data\n\tcoverage = 30\n\n\t# profile threshold\n\tprofile_cutoff = 0.90\n\n\t# overlap reads percentage of the breakpoint\n\toverlapFilterRatio = 0.1\n\n\t# flag for identifying MGEs using BLAST search\n\t# 1 for searching; 0 for not searching\n\tblast_flag = 1\n\n\t# maximum length of upstream/downstream regions for finding singly-mapped reads\n\tsm_range = 500\n\n\t# path to the MGE database file for BLAST search\n\t#MGE_DB_path = /path/to/fasta/RepBase.fasta\n\n\t# similarity threshold to filt BLAST results\n\tsimilarity_cutoff = 90.0\n\n\t# alighment length threshold to filt BLAST results\n\talign_length_cutoff = 70\n\n\t# flag for assembling unmapped reads using SOAP denvo2\n\t# 1 for searching; 0 for not searching\n\tassembly_flag = 1\n\n\t#average insert length for SOAPdenovo2 config file\n\tavg_ins= 400\n\n\t#maximum read length for SOAPdenovo2 config file\n\tmax_rd_len= 101\n\n\t#contig length cutoff\n\tcontig_len_cutoff = 500\n\n\t# minimum number of mapped reads to each contig\n\tcontig_map_read_cutoff=10\n\n\t#number of threads\n\tnumOfThread = 32\n\n"
      },
      "source": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:53:24",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start guide",
        "parent_header": [
          "iMGEins"
        ],
        "type": "Text_excerpt",
        "value": "In the folder \"sample_data\" there are simulated data to run iMGEins."
      },
      "source": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "default_param_for_sample.txt",
        "parent_header": [
          "iMGEins",
          "Quick start guide"
        ],
        "type": "Text_excerpt",
        "value": "Now you are ready to run iMGEins. The following is the basic iMGEins command line for sample data running.\n\t\n\tjava -jar /data/jwbae/iMGEins_ReleaseVer1.1.0.jar -i ./sample_data/iMGEins_sample.sam -o /your/own/working/dir/ -p ./sample_data/default_param_for_sample.txt\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/DMnBI/iMGEins/master/README.md",
      "technique": "header_analysis"
    }
  ]
}