{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "gapsplit"
        ],
        "type": "Text_excerpt",
        "value": "Keaty TC, Jensen PA. **gapsplit: Efficient random sampling for non-convex constraint-based models.** *bioRxiv*.\n"
      },
      "source": "https://raw.githubusercontent.com/jensenlab/gapsplit/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jensenlab/gapsplit"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-05-07T10:09:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T13:58:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Efficient random sampling for COBRA models"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9848681354436646,
      "result": {
        "original_header": "gapsplit",
        "type": "Text_excerpt",
        "value": "Efficient random sampling for constraint-based (COBRA) models. `gapsplit` samples both convex (LP) and non-convex (MILP) models by targeting unexplored regions of the solution space. \n`gapsplit` is available for Matlab and Python.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jensenlab/gapsplit/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8178284354271477,
      "result": {
        "original_header": "Sampling MILP models",
        "type": "Text_excerpt",
        "value": "To sample [TIGER](https://github.com/pauljensen/tiger), pass the model to `gapsplit` with the `'tiger'` option set to `true`. The TIGER model will be converted to a COBRA MILP model. TIGER needs to be installed for this conversion.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jensenlab/gapsplit/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jensenlab/gapsplit/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jensenlab/gapsplit/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jensenlab/gapsplit"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gapsplit"
      },
      "source": "https://raw.githubusercontent.com/jensenlab/gapsplit/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "gapsplit",
          "Matlab"
        ],
        "type": "Text_excerpt",
        "value": "Download the `gapsplit` repository and add the `matlab` directory to Matlab's path. `gapsplit` requires the [COBRA Toolbox](https://opencobra.github.io/cobratoolbox/stable/) with a QP solver (or MIQP solver to sample MILP models).\n\nTest your `gapsplit` installation with the `test_gapsplit` script. (Be sure to initialize the COBRA Toolbox first.)\n```matlab\n>> initCobraToolbox\n>> test_gapsplit\nCalculating feasible ranges for variables. (0.45 seconds)\nTargeting 1 primary and 1 secondary variables.\nSampling LP model with 10/10 unblocked variables (100.00%).\n\nSamples   Coverage   MinGap   Median   MaxGap     Elapsed     Remaining   Infeasible\n 10/100     77.47%   0.1879   0.2499   0.2502        0.04          0.37            0\n 20/100     88.10%   0.0943   0.1250   0.1258        0.07          0.28            0\n 30/100     89.45%   0.0624   0.1234   0.1241        0.10          0.24            0\n 40/100     94.04%   0.0476   0.0626   0.0629        0.13          0.20            0\n 50/100     94.38%   0.0463   0.0623   0.0627        0.16          0.16            0\n 60/100     94.70%   0.0331   0.0607   0.0623        0.19          0.13            0\n 70/100     95.77%   0.0312   0.0407   0.0612        0.23          0.10            0\n 80/100     96.61%   0.0278   0.0319   0.0461        0.26          0.06            0\n 90/100     96.72%   0.0238   0.0314   0.0455        0.29          0.03            0\n100/100     97.03%   0.0236   0.0312   0.0313        0.32          0.00            0\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jensenlab/gapsplit/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8678683042197448,
      "result": {
        "original_header": "gapsplit",
        "type": "Text_excerpt",
        "value": "`gapsplit` is available for Matlab and Python.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jensenlab/gapsplit/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999276758471,
      "result": {
        "original_header": "Using `gapsplit` without the COBRA Toolbox",
        "type": "Text_excerpt",
        "value": "A self-contained version of `gapsplit` can sample an LP or MPS file directly. The package can be installed with `pip install gapsplit`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jensenlab/gapsplit/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jensenlab/gapsplit/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gapsplit"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "jensenlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 30302,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 13066,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jensenlab/gapsplit/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:13:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ]
}