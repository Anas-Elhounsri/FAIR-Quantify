{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "First time: build L1EM reference",
        "parent_header": [
          "Quick guide"
        ],
        "type": "Text_excerpt",
        "value": "You will need the hg38 reference genome in fasta format, with bwa index.\nDownloaded from UCSC genome browser:\n```\nwget http://hgdownload.cse.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz\nzcat hg38.fa.gz > hg38.fa\nbwa index hg38.fa\n```\nNote: this will take some time.\n\nThen you can build the L1EM reference using the provided shell script:\n```\nbash generate_L1EM_fasta_and_index.sh /fullpathto/hg38.fa\n```\nThis should be done inside the L1EM directory\n"
      },
      "source": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FenyoLab/L1EM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-07T16:20:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-26T07:42:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Estimate locus specific human LINE-1 expression."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.821341440611177,
      "result": {
        "original_header": "Mouse Version",
        "type": "Text_excerpt",
        "value": "Scripts and annotation to measure the expression of LINE-1 loci in mm39 has been added. The mouse version uses all the same methodology as the human version, but has not been as rigorously tested.\n1. Download and index the mm39 reference genome (UCSC genome browser version)\n```\nwget http://hgdownload.cse.ucsc.edu/goldenPath/mm39/bigZips/mm39.fa.gz\nzcat mm39.fa.gz > mm39.fa\nbwa index mm39.fa\n```\n2. Build the mm39 L1EM reference.\nBASH2*\n3. Run L1EM.\nBASH3*\nAll L1Md loci are quantified in full\\_counts.txt. Normalized expression of 5' UTR intact young (L1Md\\_Tf I/II/II, L1Md\\_Gf I/II, L1Md\\_A I/II/III) LINE-1 loci supported by at least 100 reads can be found in filter\\_active\\_L1Md\\_FPM.txt. \n"
      },
      "source": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FenyoLab/L1EM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FenyoLab/L1EM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FenyoLab/L1EM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/generate_mm39_L1EM_fasta_and_index.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/run_L1EM_mm39.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/run_L1EM_withlessmemory.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/run_L1EM_mm39_unstranded.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/parameters.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/run_L1EM_unstranded_fromdocker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/run_L1EM_fortcga.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/run_L1EM.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/generate_L1EM_fasta_and_index.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/run_L1EM_unstranded.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "conda way",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You will need\n1. git (https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)\n2. anaconda (https://docs.anaconda.com/anaconda/install/)\n\nDownload from github\n```\ngit clone https://github.com/FenyoLab/L1EM\n```\nCreate conda environment\n```\ncd L1EM\nconda env create -f L1EM.yml\n```\n\nBefore running L1EM, activate the environment:\n```\nsource activate L1EM\n```\n\nWhen finished, deactivate the environment:\n```\nsource deactivate L1EM\n```\n"
      },
      "source": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "old way",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Alternatively you can install the following dependencies yourself:\n* python version 2.7+ (version 2.7 tested)\n* bwa (version 0.7.17 tested)\n* samtools (version 1.9 tested)\n* numpy (version 1.14.3 tested)\n* scipy (version 1.1.0 tested)\n* pysam (version 0.15.0 tested)\n* bedtools (version 2.27.1 tested)\n\nNo compiling of L1EM is necessary. Python scripts will be called from inside the L1EM\ndirectory.\n\nIf necessary, you can specify the path for bwa and samtools in the run\\_L1EM.sh script.\nYou must use samtools >=1.0. Early version of pysam will not work. I highly recommend\nthat you use bwa 0.7.17. Earlier versions may differ in how they write the XA tag. This\nwill lead to inaccurate results without throwing an error.\n"
      },
      "source": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "Quick guide"
        ],
        "type": "Text_excerpt",
        "value": "At completion, three tab delimited tables will be written.\n1. full\\_counts.txt: raw count estimates for each L1HS/L1PA\\* element with any aligned read pairs\n2. l1hs\\_transcript\\_counts.txt: expression estimates for L1HS elements, reported as raw counts\n3. filter\\_L1HS\\_FPM.txt: L1HS whose expression is supported by at least 100 read pairs, reported as FPM (read pairs per million properly aligned)\n\nThe rows of all files are L1 loci.\n\nFor full\\_counts.txt each of the five transcript types:\nonly, runon, passive (sense), passive (antisense), antisense\nare reported.\n\nFor l1hs\\_transcript\\_counts.txt and filter\\_L1HS\\_FPM.txt only proper transcription from L1HS elements start at the\n5' UTR is reported.\n\nThe results are also written as pickle files to facilitate further analysis in python. To\ngenerate a python dictionary with keys being the transcript names and values being the\nrelative expression:\n```\nX_est = dict(zip(pickle.load(open('names_final.pkl')),pickle.load(open('X_final.pkl'))))\n```\n"
      },
      "source": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9981478631096068,
      "result": {
        "original_header": "Mouse Version",
        "type": "Text_excerpt",
        "value": "Scripts and annotation to measure the expression of LINE-1 loci in mm39 has been added. The mouse version uses all the same methodology as the human version, but has not been as rigorously tested.\n1. Download and index the mm39 reference genome (UCSC genome browser version)\n```\nwget http://hgdownload.cse.ucsc.edu/goldenPath/mm39/bigZips/mm39.fa.gz\nzcat mm39.fa.gz > mm39.fa\nbwa index mm39.fa\n```\n2. Build the mm39 L1EM reference.\nBASH2*\n3. Run L1EM.\nBASH3*\nAll L1Md loci are quantified in full\\_counts.txt. Normalized expression of 5' UTR intact young (L1Md\\_Tf I/II/II, L1Md\\_Gf I/II, L1Md\\_A I/II/III) LINE-1 loci supported by at least 100 reads can be found in filter\\_active\\_L1Md\\_FPM.txt. \n"
      },
      "source": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FenyoLab/L1EM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "L1EM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "FenyoLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 86592,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 38778,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 268,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Executing the L1-EM pipeline",
        "parent_header": [
          "Quick guide"
        ],
        "type": "Text_excerpt",
        "value": "You will need a bam file with strand specific paired end read alignments to hg38. You can\nuse any aligner, but make sure that all reads from the original fastq files are present\ntrimming should be okay, but is tested. Filtering reads will potentially break the pipeline.\n\nFirst move to an empty directory and then execute the shell script:\n```\nbash -e /fullpathto/run_L1EM.sh /fullpathto/alignments.bam /fullpathto/L1EM /fullpathto/hg38.fa\n```\nL1EM will write files with specific names, so do NOT run two instances of L1EM in the same\ndirectory.\n\nAt the end of the run\\_L1EM.sh script are a commented set of commands to delete all the\nintermediate files. If you wish to automatically delete intermediate files, you can delete\nthese comments.\n"
      },
      "source": "https://raw.githubusercontent.com/FenyoLab/L1EM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:54:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 31
      },
      "technique": "GitHub_API"
    }
  ]
}