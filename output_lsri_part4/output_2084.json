{
  "application_domain": [
    {
      "confidence": 18.65,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 6.46,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/beukueb/myflq"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-04-10T21:24:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-13T17:11:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "My Forensic Loci queries"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "MyFLq version 1.1"
        ],
        "type": "Text_excerpt",
        "value": "Routine use of massively parallel sequencing (MPS) for forensic genomics is on the horizon. The last few years, several programs have been developed to analyze forensic MPS data and generate DNA profiles. However, none have yet been tailored to the needs of the forensic analyst who does not possess an extensive bioinformatics background.\nWe developed our forensic MPS data analysis framework MyFLq into an open-source, user-friendly, web-based application. It can be installed as a standalone web application, or run directly from the Illumina BaseSpace environment. In the former, laboratories can keep their data on-site, while in the latter, data from forensic samples that are sequenced on an Illumina sequencer can be uploaded to Basespace during acquisition, and can subsequently be analyzed using the published MyFLq BaseSpace application. Implemented features are an interactive graphical report of the results, an interactive threshold selection bar, and an allele length-based analysis in addition to the sequenced-based analysis. STR loci and SNP loci are both supported.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9956470167864333,
      "result": {
        "original_header": "Choose input settings",
        "type": "Text_excerpt",
        "value": "- Choose a sensible name or leave the default with date/time\n- Select loci set.  \n  The options are links to loci.csv-files that have been shared by users on [MyFLhub](htt\\\nps://github.com/beukueb/myflq). You can also copy paste your custom file in the textbox.\n- Select allele database.  \n  These are instead links to the alleles.csv-files. You can copy paste your custom file in the textbox.\n- Sample: select the fastq file for analysis.  \n  The fastq can be either single-end or paired-end and should be available on BaseSpace.\n- Save results to: the project where your results will be saved.\n- General options for analysis:\n - *Threshold*  \n   Unique reads with an abundance lower than this value (in %), are discarded. It is reported in the locus stats how many reads were discarded in this way.\n - *Preview*  \n   Analyzing very big fastq's can take a considerable amount of time. If you want a quick preview, select a random percentage of the file to analyze. For low values (2-10%), this will give you a quick analysis of the profile. If at this point all alleles indicate a clear single contributor and have at least 1000 reads per locus, it is probably not necessary to do an analysis on the full file.\n- Alignment options  \n  Different types of alignments occur during the process of analysis. With these options you can influence the processing.\n - *Primer buffer*  \n   The number of bases at the end of the primer that will not be used for assigning the reads to loci. Choosing a higher buffer therefore means the locus assignment could be slightly less specific, but more reads will get assigned. 10 is a recommended maximum setting.\n - *Stutter buffer*  \n   The stutters of the smallest allele for a locus are normally not in the database, and could have a negative-length ROI. Default value of this buffer is 1 to accomodate that. This allows all stutters to be seen as flanking out is performed with a flank 1 repeat unit smaller.\n - *Flankout*  \n   If you see a large amount of negative reads  in the analysis (this can be derived from the locus statistics), or a high abundant unique read with very poor flanks, turn this feature off. The analysis will then be done between the primers. Previously unknown alleles can be discovered this way.\n - *Homopolymers compressed*  \n   Long homopolymers in the flanks could stutter during PCR. This option annotates flanks of loci that were possibly affected by this.\n - *Flankout by alignment*  \n   If this option is activated, flanks are removed with our alignment algorithm, instead of the k-mer based flexible flanking. \n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8670371371434218,
      "result": {
        "original_header": "Review results.",
        "type": "Text_excerpt",
        "value": "When the analysis is done, BaseSpace will have automatically made a report with all the results. This report can be found in the project folder in which your results were saved.   \n- On the X-axis (with the loci names), you can zoom in and move the axis to go over all the loci.\n- Putting the mouse on an allele candidate bar, shows all information for that candidate. Clicking on the bar will fix the information box for this candidate.\n- Clicking on a checked \"In profile\" in the information box will deselect a candidate from the profile, even if its abundance is higher than the threshold.\n- Selecting 'Absolute length' in the settings, will reorganize the graph. All allele candidates will now be plotted within each locus proportionate to their sequence length.\n- Pushing 'Make profile' generates a table in a new window that contains only the allele candidates that were present with an abundance higher than the threshold and were not manually deselected from the profile. \n- Set the threshold to a level appropriate for the sample noise.\n- Inspect each red allele (unknown in the database), that is still higher in abundance than the threshold. If the abundance is not far removed from the threshold and the stats indicate poor quality, deselect them from the profile.\n- In case it is known to be a single contributor sample, closely inspect all sequences from loci that have more than 2 alleles.\n \n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9835830522511865,
      "result": {
        "original_header": "Make profile and save it locally",
        "type": "Text_excerpt",
        "value": "- After reviewing all loci, click \"Make profile\".\n- A new browser window will open with all the alleles in the profile. Save it locally by selecting 'Save as...' from your browser's \"File\" menu.\n  (For now it is not possible to save it in your project, so choose a filename that refers to the project/result.) \n- If there is a locus with more than two alleles, it is indicated that based on the threshold this profile derives from a multi-contributor sample. If there is maximum two alleles per locus, the probability of that profile can be retrieved from the [ENFSI STRbase](http://strbase.org/) site.\n \n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/beukueb/myflq/wiki"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/beukueb/myflq/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/beukueb/myflq/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "beukueb/myflq"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MyFLq version 1.1"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/beukueb/myflq/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/beukueb/myflq/master/src/basespace/myflq_wrapper.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/beukueb/myflq/master/src/MyFLsite/startApp.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "DEPLOYMENT DOCUMENTATION\n========================\nThese are instructions on how to install MyFLq webapp outside of a container in a server environment.\nTo do that you can simply clone the whole repository.\n\nTo write this documentation, a virtualbox ubuntu server 12.04 64bit was freshly installed\n(OpenSSH server, LAMP server and Mail server included in the install)\n\nAfter the main example, you can find an install on a CentOS 5 server.\n\n# Ubuntu 12.04 server\n## Dependencies\n\n    sudo apt-get install libapache2-mod-wsgi-py3\n    sudo apt-get install python3 python3-setuptools\n    sudo easy_install3 django\n    sudo easy_install3 django-celery\n    sudo apt-get install git libmysqlclient-dev python3-dev\n    sudo easy_install3 mysqlclient\n    sudo easy_install3 Pillow\n    sudo apt-get install rabbitmq-server\n    #Django extension dependencies\n    sudo easy_install3 django-extensions\n    sudo easy_install3 Werkzeug\n\n## Prepare server mysql\nWith \"mysql -uroot -p\":\n\n    CREATE DATABASE myflsitedb CHARACTER SET utf8;\n    CREATE USER 'myflsiteuser'@'localhost' IDENTIFIED BY 'myfl1234user';\n    GRANT ALL ON myflsitedb.* TO 'myflsiteuser'@'localhost';\n\n## Extract and test web app\n\n    git clone https://github.com/beukueb/myflq\n    cd myflq/src/MyFLsite\n    python3 manage.py syncdb\n    python3 manage.py runserver 0.0.0.0:8000 #to test via host browser\n\n## Change app settings for deployment\nWith \"mg MyFLsite/settings.py\":\n\n    #Static files\n    STATIC_URL = '/static/'\n    STATIC_ROOT = '/var/www/myflsite/static/'\n    STATICFILES_DIRS = (  \n        os.path.join(BASE_DIR, \"static\"),\n    )\n    MEDIA_URL = '/media/'\n    MEDIA_ROOT = '/var/www/myflsite/media/'\n    \n    #Email\n    #Debug #=> still to be updated in documentation!!!\n\nAnd next:\n\n    sudo mkdir -p /var/www/myflsite/media\n    sudo chown -R christophe:christophe /var/www/myflsite\n    sudo chown -R www-data:www-data /var/www/myflsite/media #necessary for apacha, not for manage.py runserver\n    python3 manage.py collectstatic\n\n## Update httpd.conf\nWith \"sudo mg /etc/apache2/httpd.conf\":\n\n    #Alias /robots.txt /var/www/myflsite/static/robots.txt\n    Alias /favicon.ico /var/www/myflsite/static/favicon.ico\n\n    AliasMatch ^/([^/]*\\.css) /var/www/myflsite/static/styles/$1\n\n    Alias /media/ /var/www/myflsite/media/\n    Alias /static/ /var/www/myflsite/static/\n\n    <Directory /var/www/myflsite/static>\n    Order deny,allow\n    Allow from all\n    </Directory>\n\n    <Directory /var/www/myflsite/media>\n    Order deny,allow\n    Allow from all\n    </Directory>\n\n    WSGIScriptAlias / /home/christophe/MyFLqApp/MyFLsite/MyFLsite/wsgi.py\n    WSGIPythonPath /home/christophe/MyFLqApp/MyFLsite/\n\n    <Directory /home/christophe/MyFLqApp/MyFLsite/MyFLsite>\n    <Files wsgi.py>\n    Order deny,allow\n    Allow from all\n    #Require all granted #=> if Apache version < 2.4\n    </Files>\n    </Directory>\n\n## Restart apache:\n\n    sudo apache2ctl restart\n\n## MyFL[q|db].py setup\n\n    cd ~/MyFLsite/myflq/programs\n    #MyFL[q|db].py dependencies\n    sudo easy_install3 pymysql numpy\n    sudo apt-get install g++ libfreetype6-dev libpng-dev #dependencies matplotlib\n    #or: sudo apt-get build-dep python-matplotlib #to install all, including optional dependencies for matplotlib (+- 700 Mb)\n    sudo easy_install3 python-dateutil six #other matplotlib dependency\n    sudo easy_install3 -U distribute\n    sudo easy_install3 matplotlib #in case of strange installation problems, try: sudo easy_install3 -m matplotlib\n    #or: sudo easy_install ipython #this normally includes above dependencies and is necessary for parallel processing\n\nWith \"mysql -uroot -p\":\n\n      GRANT ALL ON *.* TO 'admin'@'localhost' IDENTIFIED BY 'passall' WITH GRANT OPTION;\n      FLUSH PRIVILEGES;\n\nInstall MyFLq databases\n\n    python3 MyFLdb.py --install admin -p passall\n\n## Enable celery tasks daemon\n    sudo -i\n    cd /etc/init.d/\n    wget https://raw.github.com/celery/celery/3.1/extra/generic-init.d/celeryd --no-check-certificate\n    chmod +x /etc/init.d/celeryd\n\nCelery config with \"emacs /etc/default/celeryd\":\n\n    # Names of nodes to start\n    #   most will only start one node:\n    CELERYD_NODES=\"worker1\"\n    #   but you can also start multiple and configure settings\n    #   for each in CELERYD_OPTS (see `celery multi --help` for examples).\n    #CELERYD_NODES=\"worker1 worker2 worker3\"\n\n    # Absolute or relative path to the 'celery' command:\n    CELERY_BIN=\"/usr/local/bin/celery\"\n    #CELERY_BIN=\"/virtualenvs/def/bin/celery\"\n\n    # App instance to use\n    # comment out this line if you don't use an app\n    CELERY_APP=\"MyFLsite\"\n    # or fully qualified:\n    #CELERY_APP=\"proj.tasks:app\"\n\n    # Where to chdir at start.\n    CELERYD_CHDIR=\"/home/christophe/MyFLqApp/MyFLsite/\"\n\n    # Extra command-line arguments to the worker\n    CELERYD_OPTS=\"--time-limit=86400 --concurrency=4\"\n     #86400s = 24h => after which unfinished tasks are killed\n\n    # %N will be replaced with the first part of the nodename.\n    CELERYD_LOG_FILE=\"/var/log/celery/%N.log\"\n    CELERYD_PID_FILE=\"/var/run/celery/%N.pid\"\n\n    # Workers should run as an unprivileged user.\n    #   You need to create this user manually (or you can choose\n    #   a user/group combination that already exists, e.g. nobody).\n    CELERYD_USER=\"www-data\"\n    CELERYD_GROUP=\"www-data\"\n\n    # If enabled pid and log directories will be created if missing,\n    # and owned by the userid/group configured.\n    CELERY_CREATE_DIRS=1\n\nUsage:\t/etc/init.d/celeryd {start|stop|restart|status}\n\nWith \"emacs /etc/rc.local\":\n\n    /etc/init.d/celeryd start #Add this line before 'exit 0'\n    #Other option would be making symbolic links in relevant /etc/rcX.d/ runlevels\n\n\n# CentOS 5\nThis section contains the steps that were necessary to get the MyFLq website running on an older server that was still running CentOS 5\n\ncat /proc/version:\n\n    Linux version 2.6.18-348.4.1.el5 (mockbuild@builder10.centos.org)\n    (gcc version 4.1.2 20080704 (Red Hat 4.1.2-54)) #1 SMP Tue Apr 1\n\n## Python\nThe system python version is 2.4.3, which is way outdated.\nInstall python version 3.3.0 from source:\n\n    wget https://www.python.org/ftp/python/3.3.0/Python-3.3.0.tgz\n    tar xzf Python-3.3.0.tgz\n    cd Python-3.3.0\n    ./configure\n    make\n    sudo make install #Will install it in /usr/local/bin/\n\nInstall virtualenv with python3.3\n\n    sudo yum install python-virtualenv\n        #or from source\n        #wget --no-check-certificate https://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.9.tar.gz\n        #tar xzf virtualenv-1.9.tar.gz\n        #cd virtualenv-1.9\n        #/usr/local/bin/python3.3 setup.py install #will install it under /usr/local bin\n    mkdir ~/.virtualenv\n    virtualenv -p /usr/local/bin/python3.3 ~/.virtualenv/myflqenv\n    source  ~/.virtualenv/myflqenv/bin/activate\n\nInside virtualenv:\n\n    cd ~/.virtualenv/myflqenv/\n    pip install numpy==1.8\n    pip install ipython\n    pip install matplotlib==1.3.1\n    pip install django==1.6\n    pip install uwsgi\n    pip install pymysql\n    wget http://dev.mysql.com/get/Downloads/Connector-Python/mysql-connector-python-2.0.1.tar.gz\n    tar xzf mysql-connector-python-2.0.1.tar.gz\n    cd mysql-connector-python-2.0.1\n    python setup.py install\n\n### Matplotlib\n\n    yum install libpng-devel\n    yum install freetype-devel\n\n## MySQL\nWas already installed but without root password available\n\n### Reset MySQL root password\nAs root\n\n    /etc/init.d/mysqld stop\n\nAs mysql user with \"su mysql\":\n\n    cat > /var/lib/mysql/reset.sql <<EOF\n       UPDATE mysql.user SET Password=PASSWORD('YOURNEWROOTPASSWORD') WHERE User='root';\n       FLUSH PRIVILEGES;\n    EOF\n    mysqld_safe --init-file=/var/lib/mysql/reset.sql\n   \nAs root\n\n    /etc/init.d/mysqld start\n    chkconfig mysqld on\n\n## Normal config\nWith \"mysql -uroot -pYOURNEWROOTPASSWORD\"\n\n    CREATE DATABASE myflsitedb CHARACTER SET utf8;\n    #On different computer with recent MySQL client => SELECT PASSWORD('myfl1234user');\n    CREATE USER 'myflsiteuser'@'localhost' IDENTIFIED BY '*5CBC1F92CB520771C013EA7C62ED99670EBC6342';\n    GRANT ALL ON myflsitedb.* TO 'myflsiteuser'@'localhost';\n    GRANT ALL ON *.* TO 'admin'@'localhost' IDENTIFIED BY 'passall' WITH GRANT OPTION;\n    FLUSH PRIVILEGES;\n    \n\n## Nginx\n\n    yum install nginx\n    service nginx start\n    chkconfig nginx on\n\n## Celery\n\n    yum install rabbitmq-server\n    service rabbitmq-server start\n    chkconfig rabbitmq-server on\n\n## Final setup\n\n    git clone https://github.com/beukueb/myflq\n    mkdir /home/christophe/.virtualenv/myflqenv/media/\n    mkdir /home/christophe/.virtualenv/myflqenv/static\n    cp /etc/nginx/uwsgi_params /home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite/MyFLsite/\n    cat > myflsite_nginx.conf <<EOF\n    \t# myflsite_nginx.conf\n\n\t# the upstream component nginx needs to connect to\n\tupstream django {\n\t\t server unix:///home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite/MyFLsite/myflsite.sock; # for a file socket\n\t         #server 127.0.0.1:8001; # for a web port socket (we'll use this first)\n\t\t }\n\n\t# configuration of the server\n\tserver {\n    \t       # the port your site will be served on\n\t       listen      8000;\n\t       # the domain name it will serve for\n\t       server_name ipar4.ugent.be; # substitute your machine's IP address or FQDN\n\t       charset     utf-8;\n\n\t       # max upload size\n\t       client_max_body_size 75M;   # adjust to taste\n\n\t# Django media\n\t    location /media  {\n\t             alias /home/christophe/.virtualenv/myflqenv/media;  # your Django project's media files - amend as required\n\t    }\n\n\t    location /static {\n\t    \t     alias /home/christophe/.virtualenv/myflqenv/static; # your Django project's static files - amend as required\n   \t    }\n\n    \t# Finally, send all non-media requests to the Django server.\n    \t   location / {\n           \t    uwsgi_pass  django;\n        \t    include     /home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite/MyFLsite/uwsgi_params; # the uwsgi_params file you installed\n           }\n\t   }\n\n    EOF\n    sudo ln -s /home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite/MyFLsite/myflsite_nginx.conf /etc/nginx/conf.d/\n\nChange the following in /home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite/MyFLsite/settings.py:\n\n    'ENGINE': 'mysql.connector.django', #=> new database driver\n    STATIC_ROOT = '/home/christophe/.virtualenv/myflqenv/static/'\n    MEDIA_ROOT = '/home/christophe/.virtualenv/myflqenv/media/'\n\nuwsgi ini file:\n\n    cat > /home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite/MyFLsite/myflsite_uwsgi.ini <<EOF\n    # myflsite_uwsgi.ini file\n    [uwsgi]\n    \n    # Django-related settings\n    # the base directory (full path)\n    chdir           = /home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite/\n    # Django's wsgi file\n    module          = MyFLsite.wsgi\n    # the virtualenv (full path)\n    home            = /home/christophe/.virtualenv/myflqenv\n    \n    # process-related settings\n    # master\n    master          = true\n    # maximum number of worker processes\n    processes       = 10\n    # the socket (use the full path to be safe\n    socket          = /home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite/MyFLsite/myflsite.sock\n    # ... with appropriate permissions - may be needed\n    chmod-socket    = 666\n    # clear environment on exit\n    vacuum          = true\n    EOF\n\n##Manual startup\n\n    su christophe\n    source  /home/christophe/.virtualenv/myflqenv/bin/activate\n    cd /home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite\n    celery -A MyFLsite worker -l info &\n    disown\n    uwsgi --socket MyFLsite/myflsite.sock --module MyFLsite.wsgi --chmod-socket=666 &\n    #or if using inifile => uwsgi --ini /home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite/MyFLsite/myflsite_uwsgi.ini\n    disown\n    deactivate\n\n##Automatic startup\n\n    yum install supervisor\n    chkconfig supervisord on\n    cat >> /etc/supervisord.conf <<EOF\n        [program:uwsgi]\n\tcommand=bash -c \"source /home/christophe/.virtualenv/myflqenv/bin/activate && uwsgi --ini /home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite/MyFLsite/myflsite_uwsgi.ini\"\n\tpriority=888\n\tuser=christophe\n\n\t[program:celery]\n\tcommand=bash -c \"source /home/christophe/.virtualenv/myflqenv/bin/activate && /home/christophe/.virtualenv/myflqenv/bin/celery -A MyFLsite worker -l info\"\n\tnumprocs=1\n\tdirectory=/home/christophe/.virtualenv/myflqenv/myflq/src/MyFLsite\n\tpriority=999\n\tstartsecs=10\n\tstartretries=3\n\tuser=christophe\n\tredirect_stderr=true\n\tstdout_logfile=/var/tmp/celery.log\n    EOF\n\nsupervisord.conf still needed to be ammended with the following, as supervisorctl was not working:\n\n    [unix_http_server]\n    file=/var/tmp/supervisor.sock\n\n    [rpcinterface:supervisor]\n    supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/src/MyFLsite/INSTALL.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation from the Github repo",
        "parent_header": [
          "MyFLq version 1.1",
          "Options for running MyFLq"
        ],
        "type": "Text_excerpt",
        "value": "MyFLq is developed as a Django application. It requires the installation of several dependencies (including MySQL) before it can be used.  Detailed instructions can be found in the file [INSTALL](https://github.com/beukueb/myflq/blob/master/src/MyFLsite/INSTALL.md).\n\nSetup:\n\n    git clone https://github.com/beukueb/myflq.git\n    cd myflq/src/MyFLsite/\n    python3 manage.py syncdb\n\n\nTo start the webapp (e.g. on Ubuntu):\n\n    sudo systemctl start rabbitmq\n    celery -A MyFLsite worker -l info &\n    python3 manage.py runserver 0.0.0.0:8000\n\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Test files",
        "parent_header": [
          "MyFLq version 1.1",
          "Workflow for forensic.UGent.be or a local MyFLq installation"
        ],
        "type": "Text_excerpt",
        "value": "Click [here](https://basespace.illumina.com/s/0xvp6KW9GCfi) to get access to a project with forensic samples that can be used to try out MyFLq.\n  \n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Workflow for forensic.UGent.be or a local MyFLq installation",
        "parent_header": [
          "MyFLq version 1.1"
        ],
        "type": "Text_excerpt",
        "value": "Go to [forensic.UGent.be](http://forensic.ugent.be) or start the app as described in the [Options for running MyFLq](https://github.com/beukueb/myflq#options-for-running-myflq) section.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Register to create a user account",
        "parent_header": [
          "MyFLq version 1.1",
          "Workflow for forensic.UGent.be or a local MyFLq installation"
        ],
        "type": "Text_excerpt",
        "value": "To use the application, you need to register.  This will enable the system to keep track of your analyses.\n\n- Choose user name and password to complete the registration form.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Login",
        "parent_header": [
          "MyFLq version 1.1",
          "Workflow for forensic.UGent.be or a local MyFLq installation"
        ],
        "type": "Text_excerpt",
        "value": "- Fill in your user name and password in the upper right corner and click the login button.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Workflow",
        "parent_header": [
          "MyFLq version 1.1",
          "Workflow for forensic.UGent.be or a local MyFLq installation"
        ],
        "type": "Text_excerpt",
        "value": "After a succesfull login, you end up on the MyFLq workflow page displaying condensed instructions on how to proceed with the setup, analysis and results.  Detailed instructions can be found here.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup loci and alleles",
        "parent_header": [
          "MyFLq version 1.1",
          "Workflow for forensic.UGent.be or a local MyFLq installation",
          "Workflow"
        ],
        "type": "Text_excerpt",
        "value": "- __Setup__: Create a new configuration for your analysis by supplying a name and optionally a description.\n- __Loci__: Browse to select a loci file (CSV in MyFLsite version 2 format).\n- __Adding alleles__: Browse to select an allele file (CSV format), click the '__Upload__' button. An allele file is not necessary for first time analyses. For first time analyses it is best to skip this step, as you can test this way the validity of the loci file.\n- __Create configuration__: Click the '__Create__' button to store your configuration. It should then be displayed in the list with configurations with the option to delete it and links to the loci and allele file chosen for this configuration.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Analysis",
        "parent_header": [
          "MyFLq version 1.1",
          "Workflow for forensic.UGent.be or a local MyFLq installation",
          "Workflow"
        ],
        "type": "Text_excerpt",
        "value": "- __Submit analysis request__: Select your database from the Dbname pulldown.  Browse to select a fastq file with the sequences you want to analyse, or alternatively choose a previously uploaded one.\n- __General__ & __Alignment__: Adjust the parameters to your requirements or use the defaults.  See 'General options for analysis' under the 'Workflow on BaseSpace MyFLq' section for a detailed description.\nClick the '__Submit__' button to add your analysis to the queue.\n- __Progress__: A progress table now lists your analysis status and will be periodically refreshed.  When the analysis is completed, the entry is removed from the table and you can proceed to the 'Results' section.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Results",
        "parent_header": [
          "MyFLq version 1.1",
          "Workflow for forensic.UGent.be or a local MyFLq installation",
          "Workflow"
        ],
        "type": "Text_excerpt",
        "value": "- __All results__: The table shows the result sets for all completed analyses.  You can select a result set by clicking the radio button next to its status, then click the '__Visualize result__' button to display the data.\n- __Analysis details__\n    - __Parameters__: Summary of the analysis parameters as entered in the 'Setup loci and alleles' section\n    - __Profile__: Report of the analysis.  See 'Review results' under the 'Workflow on BaseSpace MyFLq' section for a detailed description.\n\n###Test files\nA sample loci ([loci.csv](https://github.com/beukueb/myflq/blob/master/src/loci/myflsite2_loci.csv)) and alleles ( [alleles.csv](https://github.com/beukueb/myflq/blob/master/src/alleles/myflqpaper_alleles.csv)) data file are available in the git repository.  You will need to supply your own Fastq sequence file to perform an analysis, or download it from the [BaseSpace project page](https://basespace.illumina.com/s/0xvp6KW9GCfi) after registering.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9349404339548019,
      "result": {
        "original_header": "Review results.",
        "type": "Text_excerpt",
        "value": "Suggested steps: \n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/beukueb/myflq/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2014 Christophe Van Neste\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "myflq"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "beukueb"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 269494,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 42283,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 27656,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "XSLT",
        "size": 10701,
        "type": "Programming_language",
        "value": "XSLT"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 6679,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4371,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Liquid",
        "size": 2583,
        "type": "Programming_language",
        "value": "Liquid"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use requirements",
        "parent_header": [
          "MyFLq version 1.1"
        ],
        "type": "Text_excerpt",
        "value": "The tool expects a loci csv-file (similar to [loci.csv](https://github.com/beukueb/myflq/blob/master/src/loci/myflsite2_loci.csv)), a validated-allele csv-file for all the included loci  (similar to [alleles.csv](https://github.com/beukueb/myflq/blob/master/src/alleles/myflqpaper_alleles.csv)) and a fast[a/q] datafile, whereupon the datafile's profile is extracted. To download the loci.csv and alleles.csv files, right-click the 'RAW' button and choose 'save as...'. These files can be opened using a regular text editor such as 'Textpad' (Windows) or 'gedit' (Linux).\n\nThe datafile can be a single-individual-source or multiple-individual-source sample. Profile results depend on both csv files. Loci.csv will determine the number of loci that will be analyzed; alleles.csv will determine the region of interest [ROI] of those loci.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Active sites",
        "parent_header": [
          "MyFLq version 1.1",
          "Options for running MyFLq"
        ],
        "type": "Text_excerpt",
        "value": "[forensic.UGent.be](http://forensic.ugent.be)  \n[BaseSpace](https://basespace.illumina.com/apps/174174/MyFLq)\n\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the MyFLq Docker container",
        "parent_header": [
          "MyFLq version 1.1",
          "Options for running MyFLq"
        ],
        "type": "Text_excerpt",
        "value": "A more convenient way to try MyFLq may be to use the available docker container. Docker is easily installed (see [here](https://www.docker.io/) for instructions). To download and start the MyFLq container, issue the following command:\n\n    sudo docker pull beukueb/myflq #Only necessary to ensure using latest version\n    sudo docker run -p 0.0.0.0:80:8000 -i -t --entrypoint webapp beukueb/myflq\n\nIn case you already have a service using the standard webport 80 on your computer, you can adjust the command line to run the webapp on another free port. \nMyFLq will then run as a local web application on the indicated port.\n\nWith the following command, a user 'test' will be installed, with password 'test', that you can use to have a quick look at MyFLq, or to follow the workflow tutorial:\n\n    sudo docker run -p 0.0.0.0:80:8000 -i -t --entrypoint webapp beukueb/myflq test\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Launching MyFLq on Illumina BaseSpace",
        "parent_header": [
          "MyFLq version 1.1",
          "Options for running MyFLq"
        ],
        "type": "Text_excerpt",
        "value": "MyFLq is also accessible directly from the Illumina BaseSpace environment.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Custom loci.csv and alleles.csv",
        "parent_header": [
          "MyFLq version 1.1",
          "Options for running MyFLq",
          "Launching MyFLq on Illumina BaseSpace"
        ],
        "type": "Text_excerpt",
        "value": "When custom loci.csv and alleles.csv are required on BaseSpace, one can submit them on [MyFLhub](https://github.com/beukueb/myflq) (MyFLq repo on Github) with a pull request (ask a bioinformatician to help if you don't know how). The program will then be rebuild, and your files will be available to select within 24 hours.\n\nIf you do not want those files to be public, you can copy paste them into the respective textbox in the input form. In this case pay close attention to the format of your *.csv files. There should not be any whitespace, unless at the end of a line or within a commented line. The easiest way to achieve this is to open your .csv file in a standard text editor of your choice (e.g. 'Textpad' in Windows or 'gedit' in Linux), to select (CTRL+A) and copy (CTRL+C) its entire contents and to paste them (CTRL+V) in the allocated text field on BaseSpace MyFLq (see 'Choose input settings' below).\n\nWhen choosing to use custom loci and alleles input files, you have to make sure that both files contain information for the same loci/alleles. That is, the alleles.csv file needs to contain only allele information for every locus specified in the loci.csv file and vice versa. If this is not the case, an error will be generated. \n\nIn the future it will be possible to upload files (e.g. small csv's) to your BaseSpace projects. At that time you will be able to select personal files.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:18:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use requirements",
        "parent_header": [
          "MyFLq version 1.1"
        ],
        "type": "Text_excerpt",
        "value": "The tool expects a loci csv-file (similar to [loci.csv](https://github.com/beukueb/myflq/blob/master/src/loci/myflsite2_loci.csv)), a validated-allele csv-file for all the included loci  (similar to [alleles.csv](https://github.com/beukueb/myflq/blob/master/src/alleles/myflqpaper_alleles.csv)) and a fast[a/q] datafile, whereupon the datafile's profile is extracted. To download the loci.csv and alleles.csv files, right-click the 'RAW' button and choose 'save as...'. These files can be opened using a regular text editor such as 'Textpad' (Windows) or 'gedit' (Linux).\n\nThe datafile can be a single-individual-source or multiple-individual-source sample. Profile results depend on both csv files. Loci.csv will determine the number of loci that will be analyzed; alleles.csv will determine the region of interest [ROI] of those loci.\n"
      },
      "source": "https://raw.githubusercontent.com/beukueb/myflq/master/README.md",
      "technique": "header_analysis"
    }
  ]
}