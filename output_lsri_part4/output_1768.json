{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "type": "Text_excerpt",
        "value": "Musheng  Li,  Xueying  Xie,  Jing  Zhou,  Mengying Sheng,  Xiaofeng  Yin,  Eun-A  Ko,  Tong Zhou* and Wanjun Gu*. Quantifying  circular  RNA  expression  from RNA-seq  data using model-based framework. Bioinformatics, 2017, in press.\n"
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zerodel/sailfish-cir"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "Musheng Li (zerodel@126.com)\n \n \n \n\n \n"
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-02-04T13:42:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-10-19T09:47:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "a pipeline for quantification of circular RNA. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "Sailfish-cir is a computational tool to estimate the relative abundance of circular RNA transcripts from high-throughput RNA-seq data.\n\nIt accepts  output of circRNA identification tools ([CIRI](https://sourceforge.net/projects/ciri/), [KNIFE](https://github.com/lindaszabo/KNIFE), [circRNA_finder](https://github.com/orzechoj/circRNA_finder)) or a BED-format file to specify the reference set of circular RNA transcripts in RNA-seq data. Then, it transforms all circular transcripts to pseudo-linear transcripts. Finally, it estimates the expression of both linear and circular transcripts using [Sailfish](http://www.cs.cmu.edu/~ckingsf/software/sailfish/) framework. \n\n"
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9180898166942238,
      "result": {
        "original_header": "Notes",
        "type": "Text_excerpt",
        "value": "    In order to generate reference sequences of circular RNA transcripts, a database of your genomic annotation is needed. It is recommended to create the database file manually using the same filename with extension \".db\" in the same directory. Since gffutils don't guess GTF file format, and GTF format was changed after GRCH37.75. It will be time-consuming when building the database using the same option for earlier gtf version.  \n    This script accepts BED-format file or output files of circRNA identification tools (CIRI, circRNA_finder, KNIFE are supported) to specify the circular RNA transcripts. \n    \n    We also provide a small utility to convert those outputs to a BED-format file.\nusage as follows:\n    ```\n    python path/to/your/sailfish_cir.py convert_CIRI your/CIRI/output/file\n    python path/to/your/sailfish_cir.py convert_KNIFE your/KNIFE/output/folder\n    ```\n   \n    For CIRI, this will create a .bed file in the same folder. the 'name' (4th) column  follows this  \"circular_transcript@host_gene\" pattern.\n    For KNIFE, this will create a \"summarized_knife_junction.bed\" under your KNIFE output folder.\n    circRNA_finder output is actually BED-format.\n    \n    If you want to quantify circRNA from multiple circRNA detection results, convert those output files into BED format and merge them into a single .bed file, then use \"--bed\" option. \n \n"
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9366380041106632,
      "result": {
        "original_header": "ChangeLog",
        "type": "Text_excerpt",
        "value": "* BED-file format support: use '--bed' option to input a bed file as the reference set of circular RNA transcripts\n* Convert utility: convert CIRI outputs into a BED-file format\n* Issue of effective length correction: fix the effective length correction when estimating circular RNA expression values in real rRNA-depleted RNA-seq data. Please use '--mll' to specify the estimated effective fragment length of RNA-seq data. \n* Add some filters to unclutter the GTF entries.  \n* the first version. Snapshot with documents is [here](https://github.com/zerodel/sailfish-cir/releases/tag/v0.10). \n"
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zerodel/Sailfish-cir/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zerodel/sailfish-cir/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "zerodel/sailfish-cir"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9815110950237638,
      "result": {
        "original_header": "Notes",
        "type": "Text_excerpt",
        "value": "    This script accepts BED-format file or output files of circRNA identification tools (CIRI, circRNA_finder, KNIFE are supported) to specify the circular RNA transcripts. \n    \n    We also provide a small utility to convert those outputs to a BED-format file.\nusage as follows:\n    ```\n    python path/to/your/sailfish_cir.py convert_CIRI your/CIRI/output/file\n    python path/to/your/sailfish_cir.py convert_KNIFE your/KNIFE/output/folder\n    ```\n   \n    For CIRI, this will create a .bed file in the same folder. the 'name' (4th) column  follows this  \"circular_transcript@host_gene\" pattern.\n    For KNIFE, this will create a \"summarized_knife_junction.bed\" under your KNIFE output folder.\n    circRNA_finder output is actually BED-format.\n    \n    If you want to quantify circRNA from multiple circRNA detection results, convert those output files into BED format and merge them into a single .bed file, then use \"--bed\" option. \n \n"
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9689554397487246,
      "result": {
        "original_header": "ChangeLog",
        "type": "Text_excerpt",
        "value": "Release v0.11 \nRelease v0.10  \n"
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8506135194982062,
      "result": {
        "original_header": "Notes",
        "type": "Text_excerpt",
        "value": "1. .gtf file  \n2. output file from circRNA identification tools \n    This script accepts BED-format file or output files of circRNA identification tools (CIRI, circRNA_finder, KNIFE are supported) to specify the circular RNA transcripts. \n    \n    We also provide a small utility to convert those outputs to a BED-format file.\nusage as follows:\n    ```\n    python path/to/your/sailfish_cir.py convert_CIRI your/CIRI/output/file\n    python path/to/your/sailfish_cir.py convert_KNIFE your/KNIFE/output/folder\n    ```\n   \n    For CIRI, this will create a .bed file in the same folder. the 'name' (4th) column  follows this  \"circular_transcript@host_gene\" pattern.\n    For KNIFE, this will create a \"summarized_knife_junction.bed\" under your KNIFE output folder.\n    circRNA_finder output is actually BED-format.\n    \n    If you want to quantify circRNA from multiple circRNA detection results, convert those output files into BED format and merge them into a single .bed file, then use \"--bed\" option. \n \n"
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zerodel/sailfish-cir/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sailfish-cir"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "zerodel"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 47306,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zerodel",
          "type": "User"
        },
        "date_created": "2016-06-01T04:02:06Z",
        "date_published": "2016-06-01T04:10:25Z",
        "description": "Updated version that accept BED-format file to specify known circular RNA transcripts.\n",
        "html_url": "https://github.com/zerodel/sailfish-cir/releases/tag/v0.11",
        "name": "v0.11",
        "release_id": 3346045,
        "tag": "v0.11",
        "tarball_url": "https://api.github.com/repos/zerodel/sailfish-cir/tarball/v0.11",
        "type": "Release",
        "url": "https://api.github.com/repos/zerodel/sailfish-cir/releases/3346045",
        "value": "https://api.github.com/repos/zerodel/sailfish-cir/releases/3346045",
        "zipball_url": "https://api.github.com/repos/zerodel/sailfish-cir/zipball/v0.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zerodel",
          "type": "User"
        },
        "date_created": "2016-05-31T12:32:20Z",
        "date_published": "2016-05-31T07:48:50Z",
        "description": "The first released version that only accept CIRI output file as known circRNA transcripts. \n",
        "html_url": "https://github.com/zerodel/sailfish-cir/releases/tag/v0.10",
        "name": "v0.10",
        "release_id": 3337705,
        "tag": "v0.10",
        "tarball_url": "https://api.github.com/repos/zerodel/sailfish-cir/tarball/v0.10",
        "type": "Release",
        "url": "https://api.github.com/repos/zerodel/sailfish-cir/releases/3337705",
        "value": "https://api.github.com/repos/zerodel/sailfish-cir/releases/3337705",
        "zipball_url": "https://api.github.com/repos/zerodel/sailfish-cir/zipball/v0.10"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "type": "Text_excerpt",
        "value": "The following three tools should be installed before running Sailfish-cir.\n\t\n    1. Sailfish\n       Sailfish (http://www.cs.cmu.edu/~ckingsf/software/sailfish/) is used to quantify RNA expression. Sailfish 0.7.0 or above is recommended.\n\n    2. gffread\n\t   gffread is part of Cufflinks (http://cole-trapnell-lab.github.io/cufflinks/). This GFF/GTF parsing utility is used to extract sequence.\n\n    3. gffutils \n\t   gffutils (https://pypi.python.org/pypi/gffutils) is used to build a database for reference set of all RNA transcripts.\n\t\nWe assume these pre-installed tools are running under a Unix-like environment, and paths of gffread and sailfish binary executive should be added to your ``PATH`` variable.\n\nOther than above third party tools, several data files are required for Sailfish-cir as well.\n\t\n\t1. Raw sequencing reads file in fasta/fastq format;\n\t2. A CIRI output file or a BED file;\n\t3. Gene annotation file in .gtf format, and a single fasta file or multi-fasta files containing RNA sequences. \n\n"
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:13:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "```\npython path/to/your/sailfish_cir.py -g path/to/your/genomic/sequence/foo.fa -a path/to/your/annotation/bar.gtf -1 path/to/your/reads/mate1.fastq -2 /path/to/your/reads/mate2.fastq -o /path/to/where/you/want/your/result -c /path/to/your/CIRI/output/file\n```\n    \n\n    -g  path to genomic sequence fasta file\n    -a  path to gene annotation file, ie, .gtf or .gff files\n    -r  path to single-end raw sequencing reads file.\n    -1  path to raw pair-end reads, mate 1\n    -2  path to raw pair-end reads, mate 2\n    \n    -c  path to CIRI output file to specify circular RNA\n    --bed  path to bed file which contains circular RNA.\n    --circRNA_finder path to circRNA_finder output file.\n    --KNIFE_report_folder path to KNIFE output folder, make sure it has the subdirectory \"circReads\"\n    \n    -o  output folder that contains the index built by sailfish and quantification results\n    -k  minimum match size used during sailfish quantification,   default is 21\n\t--libtype   format string describing the library type of your reads. default is \"IU\", [read more on libtype of Sailfish](http://sailfish.readthedocs.org/en/master/library_type.html)\n    --mll mean library length, this option is to fix up the effective length.\n    -h/--help\tprint this help message\n\n    \n\n    "
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example files",
        "type": "Text_excerpt",
        "value": "Example files are available in [MEGA](https://mega.nz)\n    \n1. Human gene Annotation file:   [hg19 gtf file](https://mega.nz/#!coZEBY5D!-w5VbydDbNFW4peA2yK3gYjX0kb7mUBdMlBII6HOtpg)\n    OR [binary database file by gffutils](https://mega.nz/#!Z1QFHBYb!2lYvqCDzNXh6X1othSvPwA0NQb1RlhtMoHAqveOxmSM)\n2. Genome sequence file: [hg19 fasta file](https://mega.nz/#!40JiUDJK!9oC5PSleQSZjgIlFWUaRODYKh5nYxIW_Lfexwlk9QJc)\n3. Sailfish (ver 0.9.0): [Sailfish Linux binary](https://mega.nz/#!hopk3IzA!7b39ya6xy9YlCYmnSDO9I6xXSEw8-PTlTiXxs7CE3UU)\n4. RNA-seq simulation scripts [simulation](https://mega.nz/#!NxwniILD!Ysmy4ybcZaQUfx9pe2h6Rsysn5vZDodiVynkONJSgEs) \n5. Simulated RNA-seq datasets \n    [11 simulated datasets (uniform expresion distribution)](https://mega.nz/#!FwhEgSoa!lE-vZ5Hv9Ib3UAEiNhoyUWvZfdgu5Md_OPMoYFDath8)\n    \n    [one simulated dataset (empirical expression distribution)](https://mega.nz/#!AohTlQZT!69BBJSfze0cmDioRd9gBn0kdG125eivRyZBWMiw1buQ)\n     \n    [uniform sequencing error with error rate 0.01](https://mega.nz/#!oh4VlTaJ!6Dt3_vENKRbWH2Jc2uIwe3ne0bYDVtrVp3DFThlU44g), [script and other files](\n    https://mega.nz/#!VhJizLbC!VwEuYSiYhyrXLTT35dWbwgC2R66PjxKPZpjurlb8nwo\n    )\n    \n    [uniform sequencing error with error rate 0.02](https://mega.nz/#!cwREQRLb!x5dm81OHhkx5CCVyiMeZcXtYE54dyNZHA1D5FU0sVWg), [script and other files](\n    https://mega.nz/#!YtAjTYjL!m-NYPeXT0hTq4s3JHPrhIZDPKNv9g4VNuvXuO1P2I4Q\n    )\n    \n    [empirical error model: illumina 4](https://mega.nz/#!RggSSDJZ!jtVKO78aLLKzNne-5FRhTj7fX_sToVflWIgYtaXKlz4), [script and other files](\n    https://mega.nz/#!4tByhYqA!e2K_LCjEVWHLSrKy0vWBk8xmV3l9rnvygsqN7NhkONo\n    )\n    \n    [empirical error model: illumina 5](https://mega.nz/#!pphAECAY!yHMgVI9h3B5pcYd1Aaj3AQLgkFjeWjHdQX6CbA-cdmo), [script and other files](\n    https://mega.nz/#!oxRCGD4S!QgVdxQ-qJsDm2GLloggxvfEnN5FZsCJ7cYEewiGMV_M\n    )\n    \n    [simulation size two fold](https://mega.nz/#!gkZgHLza!wXOL58ioIODUhHq-sq-5-RXyY-YXzWOsGE61HHP9K4Y), [script and other files](\n    https://mega.nz/#!t8oEib5C!3X15kL_QwGiUDKXkWN8TE9bnenhy9oaORXza_M__GkE\n    )\n    \n    [simulation size 4 fold](https://mega.nz/#!ApIB1DZJ!lMsh7SL6MLKyWph0cAGzhkazwBtNLMQTt2QQwkoNUls), [script and other files](\n    https://mega.nz/#!w04xhC6D!u99vNrS-yo11-wLoxelPHn5FHpPVj0u0Lu6Ep3gyRSI\n    )\n    \n    [simulation using whole genome](https://mega.nz/#!d4RCTTII!hhGW_2dky-7sZW4Z8t5330oiKNVeV6D7M8BFEUDaZe8), [script and other files](\n    https://mega.nz/#!ZowwXbDS!GFahcBsSyAb8Sd5COlN494i3hUAj2-Ilf25UB14TtDY\n    )\n\n"
      },
      "source": "https://raw.githubusercontent.com/zerodel/Sailfish-cir/master/readme.md",
      "technique": "header_analysis"
    }
  ]
}