{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bmannakee/mapexr"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-12-11T20:41:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-06T13:32:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "Title"
        ],
        "type": "Text_excerpt",
        "value": "This package is an implementation of the **MAPEX** algorithm described in `Mannakee et al. ...`.\nThe algorithm is a post-variant-calling filter for variants that uses **BLASTN** to determine the fraction of reads supporting a variant call that align best to the site of the variant.\nIt is intended to be used to filter spurious variant calls resulting from mouse DNA contamination in patient-derived xenograft(PDX) tumors, and to evaluate supporting reads for potential paralog risk in primary tumors.\n"
      },
      "source": "https://raw.githubusercontent.com/bmannakee/mapexr/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bmannakee/mapexr/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bmannakee/mapexr/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bmannakee/mapexr"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Title"
      },
      "source": "https://raw.githubusercontent.com/bmannakee/mapexr/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies and Installation",
        "parent_header": [
          "Title"
        ],
        "type": "Text_excerpt",
        "value": "**mapexr** depends on several bioconductor packages for bam file manipulation as well as functions included in the *tidyverse*.\nThe dependencies can be installed prior to installation of **mapexr** using the following commands. \n```\n### Not run\n## install dependencies\ninstall.packages(\"tidyverse\")\ninstall.packages(\"devtools\")\nsource(\"https://bioconductor.org/biocLite.R\")\nbiocLite(c(\"Rsamtools\",\"GenomicRanges\",\"GenomicAlignments\"))\n\n## install mapexr\ndevtools::install_github(\"bmannakee/mapexr\",build_vignettes=TRUE)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/bmannakee/mapexr/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bmannakee/mapexr/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mapexr"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bmannakee"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 16836,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bmannakee/mapexr/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bmannakee",
          "type": "User"
        },
        "date_created": "2017-12-11T23:17:28Z",
        "date_published": "2017-12-12T16:43:49Z",
        "description": "Release of the version used for publication",
        "html_url": "https://github.com/bmannakee/mapexr/releases/tag/v0.1.0",
        "name": "Initial release",
        "release_id": 8874248,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/bmannakee/mapexr/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bmannakee/mapexr/releases/8874248",
        "value": "https://api.github.com/repos/bmannakee/mapexr/releases/8874248",
        "zipball_url": "https://api.github.com/repos/bmannakee/mapexr/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies and Installation",
        "parent_header": [
          "Title"
        ],
        "type": "Text_excerpt",
        "value": "**mapexr** depends on several bioconductor packages for bam file manipulation as well as functions included in the *tidyverse*.\nThe dependencies can be installed prior to installation of **mapexr** using the following commands. \n```\n### Not run\n## install dependencies\ninstall.packages(\"tidyverse\")\ninstall.packages(\"devtools\")\nsource(\"https://bioconductor.org/biocLite.R\")\nbiocLite(c(\"Rsamtools\",\"GenomicRanges\",\"GenomicAlignments\"))\n\n## install mapexr\ndevtools::install_github(\"bmannakee/mapexr\",build_vignettes=TRUE)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/bmannakee/mapexr/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:29:56",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Title"
        ],
        "type": "Text_excerpt",
        "value": "The algorithm takes as input a tumor alignment `.bam` file (with index `.bai`), and a set of variant calls derived from that alignment.\nFour types of variant call file are supported, with built in parsers for `VCF >=ver4.0`, the **MuTect1** output format `call_stats.txt`, the **Varscan2** output format `.snp` and the MAFLITE format.\nFor each of the four supported file types, you use the `variant_file_type` argument to tell mapex how to parse the file.\nThe four supported arguments to `variant_file_type` are `vcf`, `call_stats`, `snp`, and `maf`.\nThe MAFLITE format is a 5-column tab-separated format with columns `chr`, `start`, `end`, `ref_allele`, `alt_allele`.\nA header is not required, but if provided should match these column names for use with **mapexr**.\nThe package exports one main function `run_mapex()` (See function documentation) as well as the `load_variants` (see function documentation) function which is exported to facilitate trouble-shooting of the parsing of variant file formats.\nExample code for `run_mapex()`\n```\n### not run\n## file paths and variables\nbam <- \"/path/to/tumor.bam\"\nbamidx <- \"/path/to/tumor.bai\"\nvariants <- \"/path/to/variants.vcf\"\nblastout <- \"/path/to/blastoutput.txt\" # Read level blast results, not required\nblastpath <- \"/path/to/blastn\" # if blast is in the users path, just \"blastn\" here\nblastdb <- \"/path/to/combined_db\"\nthreads <- 1 # number of threads consumed by blastn\nmapq <- 1 # this is the default for minimum mapq score\n\nresults <- run_mapex(bam_file=bam,\n\t\t     bam_idx=bamidx,\n\t\t     variant_file=variants,\n\t\t     variant_file_type='vcf',\n\t\t     blast_out_file=blastout,\n\t\t     blastn_path=blastpath,\n\t\t     blast_threads=threads,\n\t\t     min_mapq=mapq)\n```\nSee the `Example` vignette included with the package for detailed description of the results from `run_mapex()` and how they can be used.\n"
      },
      "source": "https://raw.githubusercontent.com/bmannakee/mapexr/master/README.md",
      "technique": "header_analysis"
    }
  ]
}