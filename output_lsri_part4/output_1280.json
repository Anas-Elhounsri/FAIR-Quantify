{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WGLab/PennCNV2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-03-23T16:35:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-18T06:37:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A software package for detection of copy number alterations from tumor samples"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9947137332108548,
      "result": {
        "original_header": "PennCNV2",
        "type": "Text_excerpt",
        "value": "A C++ software package for detection of copy number alterations on tumor samples from SNP arrays and NGS data\n \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9789622845456531,
      "result": {
        "original_header": "CONFIGURATION",
        "type": "Text_excerpt",
        "value": "You will now want to set some optional tuning parameters in the XML file that is directly relevant to the desired analysis.  Valid analysis strings are \"tumor_cnv\" and \"seq_cnv\".  The latter analysis is currently under development. \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8935137716149978,
      "result": {
        "original_header": "Tumor CNV configuration",
        "type": "Text_excerpt",
        "value": "tumor_cnv.xml expects in one of its field a filename that contains a list of signal intensity input files.  This manifest file has a header describing the following columns: the path of the input file, a friendly name that will be pre-pended to the results to identify the dataset, and the stromal contamination level of the sample. \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9412270430264844,
      "result": {
        "original_header": "EXECUTION",
        "type": "Text_excerpt",
        "value": "An example is shown in examples directory.\n \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WGLab/PennCNV2/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/WGLab/PennCNV2/wiki"
      },
      "source": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WGLab/PennCNV2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WGLab/PennCNV2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "WGLab/PennCNV2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/examples/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/cnv/compile.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "## Download Prerequisites\n\nYou will need to check that the following libraries are available on your system.\n\n- GNU C compiler (gcc/g++)\n- GNU scientific library (http://www.gnu.org/software/gsl/)\n- Boost C++ libraries (http://www.boost.org)\n\nThese are usually pre-installed on modern linux distributions, and if not, a simple command such as 'yum install gsl-devel' and 'yum install boost-devel' (if YUM is the package manager) will suffice.\n\nFor boost, if you do not have root access, or if you want to install locally, unpack to `/home/kaiwang/usr/boost/boost_1_58_0/`, then do a `./bootstrap.sh --prefix=/home/kaiwang/usr/boost/boost`, then do a `./b2 install`\n\nFor GSL, if you do not have root access, or if you want to install locally, unpack the downloaded package, then do a `./configure --prefix=/home/kaiwang/usr/gsl/gsl`, then do a `make` and `make install`\n\n## Configure installation\n\nEdit the locations.mk file to specify the correct locations for boost and gsl.\n\n```\nBOOST_INC_FLAGS = -I/home/kaiwang/usr/boost/boost_1_58_0/\nBOOST_LIB_FLAGS = -L/home/kaiwang/usr/boost/boost/lib\n\nGSL_INC_FLAGS = -I/home/kaiwang/usr/gsl/gsl/include\nGSL_LIB_FLAGS = -lgsl -lgslcblas -L/home/kaiwang/usr/gsl/gsl/lib\n```\n\n## Building\n\nTo compile, run:\n\n```\nmake\n```\n\nYou will see that a new `analyzer` program is created in the current directory. Installation is done!\n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/docs/user-guide/install.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 0.9782001158134419,
      "result": {
        "original_header": "BUILDING",
        "type": "Text_excerpt",
        "value": "You will then want to assign the path of the installations in locations.mk \nTo compile, run: \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8369125514754431,
      "result": {
        "original_header": "EXECUTION",
        "type": "Text_excerpt",
        "value": "You can now execute the program by running \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8372972554432044,
      "result": {
        "original_header": "EXECUTION",
        "type": "Text_excerpt",
        "value": "An example is shown in examples directory.\n \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WGLab/PennCNV2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PennCNV2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "WGLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 85353,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 16794,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 14375,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 4574,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 110,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kaichop",
          "type": "User"
        },
        "date_created": "2015-05-08T06:21:05Z",
        "date_published": "2015-05-08T18:00:59Z",
        "description": "The first stable release after migrating PennCNV2 to GitHub.\n\nNote that PennCNV2 is merely a name for a new software framework. It does not mean PennCNV version 2!\n",
        "html_url": "https://github.com/WGLab/PennCNV2/releases/tag/v1.0.0",
        "name": "PennCNV2 v1.0.0",
        "release_id": 1276080,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/WGLab/PennCNV2/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/PennCNV2/releases/1276080",
        "value": "https://api.github.com/repos/WGLab/PennCNV2/releases/1276080",
        "zipball_url": "https://api.github.com/repos/WGLab/PennCNV2/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "PREREQUISITES",
        "type": "Text_excerpt",
        "value": "You will need to check that the following libraries are available on your system.\n\n- GNU C compiler (gcc/g++)\n- GNU scientific library (http://www.gnu.org/software/gsl/)\n- Boost C++ libraries (http://www.boost.org)\n\nThese are usually pre-installed on modern linux distributions, and if not, a simple command such as 'yum install gsl-devel' and 'yum install boost-devel' (if YUM is the package manager) will suffice.\n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/PennCNV2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:38:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ]
}