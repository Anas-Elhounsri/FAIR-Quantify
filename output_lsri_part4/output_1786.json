{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dvav/eQTLseq"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-02-08T14:07:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-07-04T12:40:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Hierarchical probabilistic models for multiple gene/variant associations based on NGS data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.941778754529809,
      "result": {
        "original_header": "Hierarchical probabilistic models for multiple gene/variant associations based on NGS data",
        "type": "Text_excerpt",
        "value": "The identification of genetic variants affecting gene expression (known as *expression\nquantitative trait loci* or *eQTLs*) is an important step in unravelling the genetic\nbasis of complex traits, including diseases. *eQTLseq* implements two classes of\nstatistical models for detecting *simultaneously* multiple associations between gene\nexpression and genomic polymorphisms in a population, using paired DNA-seq and RNA-seq\nassays as input: \n  1. The first class involves *Poisson*, *Binomial* and *Negative Binomial* models,\n  which explicitly model digital gene expression as a function of genetic variation. \n  2. The second class involves a *Normal*/*Gaussian* model, which relies on appropriate\n  transformations of gene expression data. \nAll models are embedded in a Bayesian multiple/multivariate regression and variable\nselection framework. Importantly, in all cases, the posterior probability of multiple\ngene/variant associations is expressed as a multivariate Normal distribution through\nthe introduction of latent variables, which allows for efficient Bayesian learning.\nDetails of all statistical methods are given in the following paper: \n\"*Hierarchical probabilistic models for multiple gene/variant associations based on\nNGS data*\" by Dimitrios V. Vavoulis, Jenny C. Taylor & Anna Schuh, **2017** (submitted) \n"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dvav/eQTLseq/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/test_simdata.ipynb"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/test_simdata.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/simdata.ipynb"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/simdata.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/test_realdata.ipynb"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/test_realdata.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/fitdata.ipynb"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/fitdata.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/various_calcs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/various_calcs.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/notebooks/tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dvav/eQTLseq/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dvav/eQTLseq"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Hierarchical probabilistic models for multiple gene/variant associations based on NGS data"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dvav/eQTLseq/master/figs/fig1.png"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dvav/eQTLseq/master/figs/fig2.png"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dvav/eQTLseq/master/figs/fig3.png"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Hierarchical probabilistic models for multiple gene/variant associations based on NGS data"
        ],
        "type": "Text_excerpt",
        "value": "*eQTLseq* requires **Python 3** (I developed it using v3.5). The easiest way to install it is using `pip`:\n\n```bash\nme@here:~$ pip install -U eQTLseq\n```\n\nRequired dependencies (`numpy`, `scipy`, `tqdm`, `rpy2`) will be installed\nautomatically. I strongly recommend installing inside a fresh virtual environment. You can create one using something like: `python3 -m venv ~/path/to/your/virtual/environments/test`.\n"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9995652999240372,
      "result": {
        "original_header": "Hierarchical probabilistic models for multiple gene/variant associations based on NGS data",
        "type": "Text_excerpt",
        "value": "Below, you can find instructions for installing and using the software. Enjoy!\n \n"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dvav/eQTLseq/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, eqtl, gwas, rna-seq, rna-seq-data-transformation, sparse-bayesian-learning"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 Dimitrios V. Vavoulis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "eQTLseq"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dvav"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1044471,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 83467,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 21607,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1916,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dvav/eQTLseq/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dvav",
          "type": "User"
        },
        "date_created": "2017-05-28T15:15:42Z",
        "date_published": "2017-05-28T15:57:21Z",
        "description": "This is the state of the source code corresponding to the paper:\r\n\r\n\"Hierarchical probabilistic models for multiple gene/variant associations based on next-generation sequencing data\" by Vavoulis et al. , *Bioinformatics*, **2017**\r\n\r\nInstall using `pip install -U eQTLseq`, preferably in a Python 3 virtual environment. ",
        "html_url": "https://github.com/dvav/eQTLseq/releases/tag/v2017.5.28",
        "name": "The second eQTLseq release",
        "release_id": 6527505,
        "tag": "v2017.5.28",
        "tarball_url": "https://api.github.com/repos/dvav/eQTLseq/tarball/v2017.5.28",
        "type": "Release",
        "url": "https://api.github.com/repos/dvav/eQTLseq/releases/6527505",
        "value": "https://api.github.com/repos/dvav/eQTLseq/releases/6527505",
        "zipball_url": "https://api.github.com/repos/dvav/eQTLseq/zipball/v2017.5.28"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:17:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Hierarchical probabilistic models for multiple gene/variant associations based on NGS data"
        ],
        "type": "Text_excerpt",
        "value": "Let's see how *eQTLseq* works on [a simulated dataset](data/simdata_1_4_0_0.pkl).\nSave this in a convenient location and, from an `ipython` console or notebook, do\nthe following:\n\n```python\n## imports data\nimport pickle as pkl\nimport numpy as num\nimport numpy.random as rnd\nimport matplotlib.pyplot as plt\n\n## load data\nwith open('/path/to/simdata_1_4_0_0.pkl', 'rb') as fh:\n  data = pkl.load(fh)\n\nZ = data['Z']     # simulated expression data\nG = data['G']     # simulated genotypes\nB = data['beta']  # the true matrix of gene/variant associations\n\n## print/plot info\nprint(Z.shape)    # 50 genes x 1000 samples\nprint(G.shape)    # 1000 samples x 100 genetic markers\nprint(B.shape)    # 50 genes x 100 genetic markers\n```\n\nAs you can see, the data consists of a matrix of read counts *Z* for 50 genes and a\nmatrix of genotypes *G* for 100 variants, both across 1000 samples.\n\n```python\nplt.figure();\nplt.imshow(B, cmap=plt.cm.Greys_r);\nplt.xlabel('genetic markers');\nplt.ylabel('genes');\n```\n\n![The matrix of regression coefficients B](figs/fig1.png)\n\nFrom the above visualization of *B*, you can see that a single variant influences\nthe expression of four genes. This is known as a *hotspot*.\n\nIn order to process the above data, we proceed as follows:\n\n```python\nimport eQTLseq as seq\n\nZ_norm = Z / seq.calculate_norm_factors(Z)        # normalize data\nZ_trans = seq.transform_data(Z_norm, kind='log')  # transform data\n\n## run Gibbs sampler\nrnd.seed(0)\nres = seq.run(Z_trans.T, G, n_iters = 4000, burnin=0.5, model='Normal', n_threads=1)\n```\n\nSo, after normalizing and log-transforming the data, we pass it to function `run`,\nwhich runs for 4000 iterations (`n_iters=4000`), rejecting the first half as burn-in\n(`burnin=0.5`). Notice that the expression matrix *Z_trans* is first transposed and\nthen passed to `run`, because this function requires a *samples x genes* expression\nmatrix and a *samples x genetic markers* matrix of genotypes. We use a Normal model\n(`model=Normal`) and, since we have a relatively small number of genes, we only use\na single thread (`n_threads=1`). The normalization factors\n(`calculate_norm_factors`) are computed using the *relative log expression* (RLE)\nmethod, which is also used by *DESeq*. Other options for parameter `kind` in function\n`transform_data` are `logit`, `arcsin`, `blom` and `boxcox`. Transforming the data\nis necessary, if `model=Normal`. Other options for `model` are `Poisson`, `Binomial`\nand `NBinomial`, in which case data transformation is not necessary.\n\nAfter the sampler finishes, we can visualize the results as shown below:\n\n```python\n## normalize beta\nBhat = res['beta']\nBhat = Bhat / nmp.abs(Bhat).sum()\nBnorm = B / nmp.abs(B).sum()\n\n## plot\nplt.figure(figsize=(15,10))\n\nplt.subplot(2,1,1);\nplt.plot(res['state'][1:]); plt.xlabel('iteration'); plt.ylabel('state')\n\nplt.subplot(2,1,2);\nplt.vlines(range(Bnorm.size), 0, Bnorm.ravel());\nplt.axhline(linestyle='--', color='k');\nplt.plot(Bhat.ravel(), 'r.'); plt.xlabel('markers x genes'); plt.ylabel('effect size');\n\n## compute metrics\nmetrics = seq.calculate_metrics(Bhat, Bnorm)\nprint([metrics[_] for _ in ('MCC', 'FDR')])\n```\n\n![Sampler output for simdata_1_4_0_0.pkl](figs/fig2.png)\n\nWe can see that the sampler reaches steady state very quickly and that all true\nassociations have been detected. If we repeat the process for [a more complicated\ndataset](data/simdata_1_8_0_0.pkl), the results are contaminated with a single false\npositive.\n\n![Sampler output for simdata_1_8_0_0.pkl](figs/fig3.png)\n\nIn practise, we can reject all discoveries below a threshold (e.g. 25% of\nthe maximum in magnitude effect size). We can enforce this condition in the\ncomputation of metrics (last two lines of the above code) as follows:\n\n```python\nmetrics = seq.calculate_metrics(Bhat, Bnorm, beta_thr=0.25)\nprint([metrics[_] for _ in ('MCC', 'FDR')])\n```\n\nWe can see that this takes care of the false positive, thus benefiting the metrics.   \n"
      },
      "source": "https://raw.githubusercontent.com/dvav/eQTLseq/master/README.md",
      "technique": "header_analysis"
    }
  ]
}