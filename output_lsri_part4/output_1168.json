{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "Minerva Barcoded Read Deconvolution"
        ],
        "type": "Text_excerpt",
        "value": "This algorithm was devloped and tested with help from Dmitrii Meleshko, Daniela Bezdan, Chris Mason, and Iman Hajirasouliha.\n\nThis package is written and maintained by [David C. Danko](mailto:dcdanko@gmail.com)\n"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dcdanko/minerva_barcode_deconvolution"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-11-01T03:54:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-10-05T19:39:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Sort Linked Read DNA Into Fragment Specific Clusters"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary",
        "parent_header": [
          "Minerva Barcoded Read Deconvolution"
        ],
        "type": "Text_excerpt",
        "value": "Emerging linked-read technologies (aka Read-Cloud or barcoded short-reads) have revived interest in short-read technology as a viable way to understand large-scale structure in genomes and metagenomes. Linked-read technologies, such as the 10x Chromium system, use a microfluidic system and a specialized set of barcodes to tag short DNA reads sourced from the same long fragment of DNA. Subsequently, the tagged reads are sequenced on standard short read platforms.\n\nThis approach results in interesting compromises. Each long fragment of DNA is only sparsely covered by reads, no information about the ordering of reads from the same fragment is preserved, and barcodes match reads from roughly 2-20 long fragments of DNA. However, compared to long read technologies the cost per base to sequence is far lower, far less input DNA is required, and the per base error rate is that of Illumina short-reads.\n\nIn the accompanying paper, we formally describe a particular algorithmic issue for linked-read technology: the deconvolution of reads with a single barcode into clusters that represent single long fragments of DNA. We also present Minerva, an algorithm which approximately solves the barcode deconvolution problem for metagenomic data. This codebase implements Minerva.\n\n[Minerva: An Alignment and Reference Free Approach to Deconvole Linked-Reads for Metagenomics](https://genome.cshlp.org/content/early/2018/12/06/gr.235499.118.full.pdf+html)\n"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8204989059230352,
      "result": {
        "original_header": "Deprecation Notice",
        "type": "Text_excerpt",
        "value": "Minerva was an initial proof of concept algorithm. It has since been superseded by [Ariadne](https://github.com/lauren-mak/Ariadne). You should use Ariadne over Minerva to deconvolve linked reads.\n \n"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9698409292204538,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "Minerva assigns barcoded reads to clusters within each barcode called deconvolved barcodes. The `minerva_deconvolve` command outputs a tsv file with three columns: read id, barcode, and cluster id. The deconvolved barcode for a read is a tuple of (barcode, cluster id).\n```\n$ head <minerva_output_file>\nBX:Z:GTGCCTTAGTCCGTAT-1 D00547:847:HYHNTBCXX:1:1207:20627:25951 0\nBX:Z:GTGCCTTAGTCCGTAT-1 D00547:847:HYHNTBCXX:1:1113:11082:83578 0\nBX:Z:GTGCCTTAGTCCGTAT-1 D00547:847:HYHNTBCXX:1:2206:4393:100450 0\nBX:Z:GTGCCTTAGTCCGTAT-1 D00547:847:HYHNTBCXX:2:1111:2014:28730  1\nBX:Z:GTGCCTTAGTCCGTAT-1 D00547:847:HYHNTBCXX:1:2216:17277:16384 2\nBX:Z:GTGCCTTAGTCCGTAT-1 D00547:847:HYHNTBCXX:1:1201:19163:82220 2\nBX:Z:GTGCCTTAGTCCGTAT-1 D00547:847:HYHNTBCXX:1:1202:16780:78102 0\nBX:Z:GTGCCTTAGTCCGTAT-1 D00547:847:HYHNTBCXX:1:1210:7460:13722  2\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9882062137629418,
      "result": {
        "original_header": "Performance",
        "type": "Text_excerpt",
        "value": "This is a demonstration program and is not intended to be performant. Runtimes over 10 hours are common even on small datasets.\nRAM usage is typically 50-100Gb.\n \n"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dcdanko/minerva_barcode_deconvolution/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dcdanko/minerva_barcode_deconvolution/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dcdanko/minerva_barcode_deconvolution"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Minerva Barcoded Read Deconvolution"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Minerva Barcoded Read Deconvolution"
        ],
        "type": "Text_excerpt",
        "value": "From PyPi\n```\npip install minerva_deconvolve\n```\n\nFrom source\n```\ngit clone <url>   \ncd minerva_barcode_deconvolution\npython setup.py install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8433973331994394,
      "result": {
        "original_header": "Deconvolving Reads",
        "type": "Text_excerpt",
        "value": "Use the following command to run barcode deconvolution. `<fastq>` should be an interleaved fastq file where reads have a `BX` tag designating barcode (this is the default output of [longranger basic](https://support.10xgenomics.com/genome-exome/software/pipelines/latest/advanced/other-pipelines))\n```\ncat <fastq> | minerva_deconvolve -k 20 -w 40 -d 8 -a 20 --remove-stopwords --eps 0.51 > ebc_assignments.tsv\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.980851984096466,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "To add enhanced barcodes to your fastq file run the following\n```\nminerva_deconvolve_fastq <bc_assignment_file> <fastq_file> - > output.fq\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8097861027763056,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "To add enhanced barcodes to your fastq file run the following\n```\nminerva_deconvolve_fastq <bc_assignment_file> <fastq_file> - > output.fq\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dcdanko/minerva_barcode_deconvolution/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\nMIT License\n\nCopyright (c) 2017, David C Danko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://circleci.com/gh/dcdanko/minerva_barcode_deconvolution.svg?style=svg"
      },
      "source": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "minerva_barcode_deconvolution"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dcdanko"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 43783,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 7091,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 1963,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dcdanko/minerva_barcode_deconvolution/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:14:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ]
}