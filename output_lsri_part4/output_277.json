{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VCCRI/Scavenger"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-03-29T13:22:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-10-28T08:27:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A pipeline for recovery of unaligned reads utilising similarity with aligned reads"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8019423600620319,
      "result": {
        "original_header": "Scavenger",
        "type": "Text_excerpt",
        "value": "Rescue potential false negative unmapped reads in alignment tools \n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VCCRI/Scavenger/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VCCRI/Scavenger/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VCCRI/Scavenger"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Scavenger"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/s3.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/desc-inst.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/p3.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/del-vols.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/ssh-cmd.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/ip-var.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/ssh.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/desc-vols.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/terminate-instances.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/scp.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/v.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/system/user-data-checker-1x-ssd.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/system/get-security-key.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/system/create-dirs-aws-ssd.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/system/create-iam-role-and-profile.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/system/create-vols-txt.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/system/get-python-path.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/system/user-data-1x-ssd.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/system/user-data-2x-ssd.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/system/user-data-checker-2x-ssd.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/system/remove-iam-role.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/system/run-instances.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/dev/user-data.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/dev/user-data-checker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/rescue-instance-files/s3-log-file.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/rescue-instance-files/wrapper.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/aws_automation/rescue-instance-files/s3-log.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9703437118052298,
      "result": {
        "original_header": "Scavenger",
        "type": "Text_excerpt",
        "value": "Manuscript available now on **bioRxiv**: https://www.biorxiv.org/content/early/2018/06/13/345876\n \n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VCCRI/Scavenger/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Victor Chang Cardiac Research Institute\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Scavenger"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "VCCRI"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 110446,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 58916,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andr-kun",
          "type": "User"
        },
        "date_created": "2018-11-26T00:35:47Z",
        "date_published": "2019-08-02T15:47:21Z",
        "description": "Initial release of Scavenger.",
        "html_url": "https://github.com/VCCRI/Scavenger/releases/tag/v1.0",
        "name": "Scavenger v1.0",
        "release_id": 19045243,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/VCCRI/Scavenger/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/VCCRI/Scavenger/releases/19045243",
        "value": "https://api.github.com/repos/VCCRI/Scavenger/releases/19045243",
        "zipball_url": "https://api.github.com/repos/VCCRI/Scavenger/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "Scavenger",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Python3 is required with the following libraries:\n\n* [Biopython](https://github.com/biopython/biopython)\n* [intervaltree](https://github.com/chaimleib/intervaltree)\n* [Pysam](https://github.com/pysam-developers/pysam)\n\nThese are included in `requirements.txt`, run the following commands to install them:\n\n```\npip install -r requirements.txt\n```\n\nAlternatively, type the following command to install these libraries:\n\n```\npip3 install --upgrade biopython pysam intervaltree\n```\n\nThe alignment tool that you will be using is also required. Currently, it supports the following aligners:\n\n* STAR\n* Subread\n\nPlease make sure that the aligner that you are using is in your path. Please note that BLASTN is also required for rescuing so make sure blastn is in your path.\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running scavenger.py",
        "parent_header": [
          "Scavenger"
        ],
        "type": "Text_excerpt",
        "value": "Rescue unmapped reads. When running the script, you can specify a pre-built aligner's index. If you do not specify it, the script will first build the index automatically with the given FASTA file.\n\nThe script will produce a new sam file called `<prefix>_rescued.sam` and some counting information.\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required Arguments",
        "parent_header": [
          "Scavenger",
          "Running run_aligner.py",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "| Option                             | Argument |\n| ---------------------------------- | -------- |\n| `-G/--genome_file <genome_file>` | Genome FASTA file |\n| `-i/--input <input>`               | A comma separated list of input reads (Example: readA.fq,readB.fq). If the reads are paired, use a space to separate reads 1 and 2 (Example: readA_1.fq,readB_1.fq readA_2.fq,readB_2.fq) |\n| `-at/--aligner_tool <aligner>`     | The alignment tool to perform alignment |\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional Arguments",
        "parent_header": [
          "Scavenger",
          "Running run_aligner.py",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "| Option                                  | Argument |\n| --------------------------------------- | -------- |\n| `-g/--genome_index <genome_index>`      | The directory of the aligner's index. |\n| `-a/--annotation <annotation>`          | Annotation file to be used by index builder |\n| `-be/--builder_extra_args <extra_args>` | Extra arguments for the aligner index building. Use this option with quotes (Example: `\"-be=<extra_args>\"`) |\n| `-c/--consensus_threshold`              | Consensus threshold (Default: 0.6) |\n| `--blast_perc_identity`                 | Minimum percentage of identity for BLASTN |\n| `--blast_perc_query_coverage`           | Minimum percentage of query coverage for BLASTN |\n| `-r/--repeat_db <repeat_index>`         | The location of index for repetitive sequence database, e.g. RepBase. Inclusion of this argument will filter out reads which align to the repetitive sequence database. |\n| `-ae/--aligner_extra_args <extra_args>` | Extra arguments for the aligner. Use this option with quotes (Example: `\"-ae=<extra_args>\"`) |\n| `-o/--output_dir <output_dir>`          | The output directory for the index (Default: current directory) |\n| `-p/--output_prefix <prefix>`           | The prefix for the output index folder (Default: uses the first input file as the prefix) |\n| `--bam`                                 | BAM output file format (Default: SAM output file format) |\n| `--clean`                               | Keep alignment file but remove other files produced by aligner (Default: Keep all files) |\n| `-t/--threads`                          | The number of threads to be used by the index builder (Default: 4) |\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running build_aligner_index.py",
        "parent_header": [
          "Scavenger"
        ],
        "type": "Text_excerpt",
        "value": "Creates the index for a specified aligner\n\n### Usage\n\n```\npython3 utils/build_aligner_index.py [options] -G/--genome_file <genome_file> -at/--aligner_tool <aligner>\n```\n\n#### Required Arguments\n\n| Option                           | Argument                                  |\n| -------------------------------- | ----------------------------------------- |\n| `-G/--genome_file <genome_file>` | The reference genome file in FASTA format |\n| `-at/--aligner_tool <aligner>`   | The alignment tool to build index for     |\n\n#### Optional Arguments\n\n| Option                                  | Argument |\n| --------------------------------------- | -------- |\n| `-be/--builder_extra_args <extra_args>` | Extra arguments for the aligner index building. Use this option with quotes (Example: `\"-be=<extra_args>\"`) |\n| `-a/--annotation <annotation>`          | The annotation file in GTF/GFF format |\n| `-o/--output_dir <output_dir>`          | The output directory for the index (Default: current directory) |\n| `-p/--output_prefix <prefix>`           | The prefix for the output index folder (Default: uses genome file as the prefix) |\n| `-q/--quiet`                            | Set to silent the logging information (Default: False) |\n| `-t/--threads`                          | The number of threads to be used by the index builder (Default: 4) |\n\n### Example Usage\n\n```\npython3 utils/build_aligner_index.py -G genome.fa -at star -t 8\n```\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running run_aligner.py",
        "parent_header": [
          "Scavenger"
        ],
        "type": "Text_excerpt",
        "value": "Runs a specific aligner\n\n### Usage\n\n```\npython3 utils/run_aligner.py [options] -i/--input <input> -g/--genome_index <genome_index> -at/--aligner_tool <aligner>\n```\n\n#### Required Arguments\n\n| Option                             | Argument |\n| ---------------------------------- | -------- |\n| `-i/--input <input>`               | A comman separated list of input reads (Example: readA.fq,readB.fq). If the reads are paired, use a space to separate reads 1 and 2 (Example: readA_1.fq,readB_1.fq readA_2.fq,readB_2.fq) |\n| `-g/--genome_index <genome_index>` | The directory of the aligner's index |\n| `-at/--aligner_tool <aligner>`     | The alignment tool to perform alignment |\n\n#### Optional Arguments\n\n| Option                                  | Argument |\n| --------------------------------------- | -------- |\n| `-ae/--aligner_extra_args <extra_args>` | Extra arguments for the aligner. Use this option with quotes (Example: `\"-ae=<extra_args>\"`) |\n| `-o/--output_dir <output_dir>`          | The output directory for the index (Default: current directory) |\n| `-p/--output_prefix <prefix>`           | The prefix for the output index folder (Default: uses the first input file as the prefix) |\n| `-q/--quiet`                           | Set to silent the logging information (Default: False) |\n| `-t/--threads`                          | The number of threads to be used by the index builder (Default: 4) |\n\n### Example Usage\n\nFor a single single-end file using STAR\n\n```\npython3 utils/run_aligner.py -i readA.fq -g star_index/ -at star -t 8\n```\n\nFor a single single-end files using Subread\n\n```\npython3 utils/run_aligner.py -i readA.fq,readB.fq -g subread_index/ -at subread -t 8\n```\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:43:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "Scavenger"
        ],
        "type": "Text_excerpt",
        "value": "These instructions will get you a copy of the project up and running on your local machine for development and\ntesting purposes.\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Scavenger",
          "Running run_aligner.py"
        ],
        "type": "Text_excerpt",
        "value": "```\npython3 usage: scavenger.py [options] -G/--genome_file <genome_file> -i/--input <input> -at/--aligner_tool <aligner>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required Arguments",
        "parent_header": [
          "Scavenger",
          "Running run_aligner.py",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "| Option                             | Argument |\n| ---------------------------------- | -------- |\n| `-G/--genome_file <genome_file>` | Genome FASTA file |\n| `-i/--input <input>`               | A comma separated list of input reads (Example: readA.fq,readB.fq). If the reads are paired, use a space to separate reads 1 and 2 (Example: readA_1.fq,readB_1.fq readA_2.fq,readB_2.fq) |\n| `-at/--aligner_tool <aligner>`     | The alignment tool to perform alignment |\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional Arguments",
        "parent_header": [
          "Scavenger",
          "Running run_aligner.py",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "| Option                                  | Argument |\n| --------------------------------------- | -------- |\n| `-g/--genome_index <genome_index>`      | The directory of the aligner's index. |\n| `-a/--annotation <annotation>`          | Annotation file to be used by index builder |\n| `-be/--builder_extra_args <extra_args>` | Extra arguments for the aligner index building. Use this option with quotes (Example: `\"-be=<extra_args>\"`) |\n| `-c/--consensus_threshold`              | Consensus threshold (Default: 0.6) |\n| `--blast_perc_identity`                 | Minimum percentage of identity for BLASTN |\n| `--blast_perc_query_coverage`           | Minimum percentage of query coverage for BLASTN |\n| `-r/--repeat_db <repeat_index>`         | The location of index for repetitive sequence database, e.g. RepBase. Inclusion of this argument will filter out reads which align to the repetitive sequence database. |\n| `-ae/--aligner_extra_args <extra_args>` | Extra arguments for the aligner. Use this option with quotes (Example: `\"-ae=<extra_args>\"`) |\n| `-o/--output_dir <output_dir>`          | The output directory for the index (Default: current directory) |\n| `-p/--output_prefix <prefix>`           | The prefix for the output index folder (Default: uses the first input file as the prefix) |\n| `--bam`                                 | BAM output file format (Default: SAM output file format) |\n| `--clean`                               | Keep alignment file but remove other files produced by aligner (Default: Keep all files) |\n| `-t/--threads`                          | The number of threads to be used by the index builder (Default: 4) |\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Usage",
        "parent_header": [
          "Scavenger",
          "Running run_aligner.py"
        ],
        "type": "Text_excerpt",
        "value": "For rescuing reads using STAR\n\n```\npython3 scavenger.py -G genome.fa -i readA.fq -at star -t 8\n```\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Scavenger/master/README.md",
      "technique": "header_analysis"
    }
  ]
}