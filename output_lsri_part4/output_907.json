{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/suecharo/CPFF"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-03-29T09:01:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-03T11:33:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.987977263996467,
      "result": {
        "original_header": "PPFF : Hidden Markov Model generator for detecting KEGG pathway specific genes",
        "type": "Text_excerpt",
        "value": "Generate an HMM file of Pfam-domain that is specifically found by inputting multiple species and pathways registered in KEGG\n \n"
      },
      "source": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9985634798456121,
      "result": {
        "original_header": "what purpose?",
        "type": "Text_excerpt",
        "value": "- To divide the pathway into two categories such as primary metabolism and secondary metabolism, and to search for frequent Pfam domains in either category.\n- To obtain amino acids of genes contained in a specific pathway of a certain species.\n- In order to shorten the calculation time, we created a Pfam-domain set that considers only specific species and related species.\n \n"
      },
      "source": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/suecharo/KPHMMER/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/suecharo/CPFF/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "suecharo/CPFF"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PPFF : Hidden Markov Model generator for detecting KEGG pathway specific genes"
      },
      "source": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/suecharo/CPFF/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinfomatics, bioinformatics-tool, hmmer, keras, pfam"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 suecharo <hirotaka.suetake@riken.jp>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CPFF"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "suecharo"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 110552,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "suecharo",
          "type": "User"
        },
        "date_created": "2018-04-13T07:18:51Z",
        "date_published": "2018-04-13T07:23:20Z",
        "description": "First Stable Release.",
        "html_url": "https://github.com/suecharo/CPFF/releases/tag/v1.0.2",
        "name": "First Stable Release",
        "release_id": 10529733,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/suecharo/CPFF/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/suecharo/CPFF/releases/10529733",
        "value": "https://api.github.com/repos/suecharo/CPFF/releases/10529733",
        "zipball_url": "https://api.github.com/repos/suecharo/CPFF/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:17:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use?",
        "parent_header": [
          "PPFF : Hidden Markov Model generator for detecting KEGG pathway specific genes"
        ],
        "type": "Text_excerpt",
        "value": "KPHMMER consists of five submethods.\n\n```\n$ python KPHMMER.py -h\nusage: KPHMMER.py [-h] {query,search,analysis,convert,config} ...\n\nKPHMMER, Hidden Markov Model generator for detecting KEGG pathway specific\ngenes by suecharo. <suehiro619@gmail.com>\n\npositional arguments:\n  {query,search,analysis,convert,config}\n                        Each is a subcommand. Please refer to the help of each\n                        subcommand.\n    query               It receives the KEGG's organism code (ex.hsa) and\n                        outputs the motif yaml file.\n    search              Receive a string and search KEGG's organism code\n                        (ex.hsa).\n    analysis            Receive motif yaml file and outputs frequently\n                        appearing pfam motif only in the selected category.\n    convert             Receive motif yaml file and outputs the gene contained\n                        therein as fasta file."
      },
      "source": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "config",
        "parent_header": [
          "PPFF : Hidden Markov Model generator for detecting KEGG pathway specific genes",
          "How to use?"
        ],
        "type": "Text_excerpt",
        "value": "                        setting.\n\noptional arguments:\n  -h, --help            show this help message and exit\n```\n\n### config\nConfig can adjust the following.\n- The category of the pathway.\n  - KEGG PATHWAY itself can be confirmed from this page. [KEGG PATHWAY](http://www.genome.jp/kegg/pathway.html#metabolism)\n- Treatment of genes overlapping in two categories.\n  - Select from 1st or 2nd.\n  - Duplicate genes are classified in the selected one.\n\n```\n$ python KPHMMER.py config -h\nusage: KPHMMER.py config [-h] [-s] [-1 CATEGORY_1ST [CATEGORY_1ST ...]]\n                         [-2 CATEGORY_2ND [CATEGORY_2ND ...]] [-d [{1st,2nd}]]\n\nCheck the currently set category or change the setting.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s, --set-default     Restore conf to the default value.\n  -1 CATEGORY_1ST [CATEGORY_1ST ...], --category-1st CATEGORY_1ST [CATEGORY_1ST ...]\n                        Set 1st category. Multiple inputs are accepted.\n  -2 CATEGORY_2ND [CATEGORY_2ND ...], --category-2nd CATEGORY_2ND [CATEGORY_2ND ...]\n                        Set 2nd category. Multiple inputs are accepted.\n  -d [{1st,2nd}], --duplicate [{1st,2nd}]\n                        Set which categories to place duplicates.\n\n$ python KPHMMER.py config -1 1.1 1.2 1.3\n[2018/02/26 17:02:54] === Config start. ===\n[2018/02/26 17:02:54] Set value start.\n[2018/02/26 17:02:54] Print config start.\n1st category : ['1.1', '1.2', '1.3']\n2nd category : ['1.9', '1.10', '1.12']\nInsert duplicate : 2nd\n[2018/02/26 17:02:54] === Config finish. ===\n\n$ python KPHMMER.py config -2 1.4 1.5 1.6\n[2018/02/26 17:03:00] === Config start. ===\n[2018/02/26 17:03:00] Set value start.\n[2018/02/26 17:03:00] Print config start.\n1st category : ['1.1', '1.2', '1.3']\n2nd category : ['1.4', '1.5', '1.6']\nInsert duplicate : 2nd\n[2018/02/26 17:03:00] === Config finish. ===\n\n$ python KPHMMER.py config -d 1st\n[2018/02/26 17:03:07] === Config start. ===\n[2018/02/26 17:03:07] Set value start.\n[2018/02/26 17:03:07] Print config start.\n1st category : ['1.1', '1.2', '1.3']\n2nd category : ['1.4', '1.5', '1.6']\nInsert duplicate : 1st\n[2018/02/26 17:03:07] === Config finish. ===\n\n$ python KPHMMER.py config -s\n[2018/02/26 17:03:10] === Config start. ===\n[2018/02/26 17:03:10] Set default start.\n[2018/02/26 17:03:10] Print config start.\n1st category : ['1.1', '1.2', '1.3', '1.4', '1.5', '1.6', '1.7', '1.8', '1.11']\n2nd category : ['1.9', '1.10', '1.12']\nInsert duplicate : 2nd\n[2018/02/26 17:03:10] === Config finish. ===\n```"
      },
      "source": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "search",
        "parent_header": [
          "PPFF : Hidden Markov Model generator for detecting KEGG pathway specific genes",
          "How to use?"
        ],
        "type": "Text_excerpt",
        "value": "Search is a keyword search, and you can search KEGG's organism code.\n\n```\n$ python KPHMMER.py search -h\nusage: KPHMMER.py search [-h] [-a] [STRING]\n\nReceive a string and search KEGG's organism code (ex.hsa).\n\npositional arguments:\n  STRING          Perform keyword search on the input character string.\n\noptional arguments:\n  -h, --help      show this help message and exit\n  -a, --show-all  Display all organisms present on KEGG. Be careful as there\n                  are many outputs.\n\n$ python KPHMMER.py search streptomyces\n[2018/02/26 17:05:49] === Search start. ===\n[2018/02/26 17:05:49] Ordinaly search start.\ngn:T00085\tsco, STRCO, 100226; Streptomyces coelicolor A3(2)\ngn:T00126\tsma, STRAW, 227882; Streptomyces avermitilis MA-4680\ngn:T00691\tsgr, STRGG, 455632; Streptomyces griseus subsp. griseus NBRC 13350\ngn:T01187\tscb, 680198; Streptomyces scabiei 87.22\ngn:T01601\tssx, 862751; Streptomyces sp. SirexAA-E\ngn:T01602\tsvl, 653045; Streptomyces violaceusniger Tu 4113\ngn:T01646\tsct, 1003195; Streptomyces cattleya NRRL 8057 = DSM 46488\ngn:T01647\tsfa, 591167; Streptomyces pratensis ATCC 33331\ngn:T01678\tsbh, 749414; Streptom  ...\n\n$ python KPHMMER.py search -a\n[2018/02/26 17:06:19] === Search start. ===\n[2018/02/26 17:06:19] Show all start.\nT01001\thsa\tHomo sapiens (human)\tEukaryotes;Animals;Vertebrates;Mammals\nT01005\tptr\tPan troglodytes (chimpanzee)\tEukaryotes;Animals;Vertebrates;Mammals\nT02283\tpps\tPan paniscus (bonobo)\tEukaryotes;Animals;Vertebrates;Mammals\nT02442\tggo\tGorilla gorilla gorilla (western lowland gorilla)\tEukaryotes;Animals;Vertebrates;Mammals\nT01416\tpon\tPongo abelii (Sumatran orangutan)\tEukaryotes;Animals;Vertebrates;Mammals\nT03265\tnle\tNomascus leucogenys (northern white-cheeked gibbon)\tEukaryotes;Animals;Vertebrates;Mammals\nT01028\tmcc\tMacaca mulatta (rhesus monkey)\tEukaryotes;Animals;Vertebrates;Mammals\nT02918\tmcf\tMacaca fascicularis (crab-eating macaque)\tEukaryotes;Animals;Vertebrates;Mammals\nT04361\tcsab\tChlorocebus sabaeus (green monkey)\tEukaryotes;Animals;Vertebrates;Mammals\nT03989\trro\tRhinopithecus roxellana (golden snub-nosed monkey)\tEukaryotes;Animals;Vertebrates;Mammals\nT04641\trbb\tRhinopithecus bieti (black snub-nosed monkey)\tEukaryotes;Animals;Vertebrates;Mammals\nT03264\tcjc\tCallithrix jacchus (white-tufted-ear marmoset)\tEukaryotes;Animals;Vertebrates;Mammals\nT04350\tsbq\tSaimiri boliviensis boliviensis (Bolivian squirrel monkey)\tEukaryotes;Animals;Vertebrates;Mammals\nT01002\tmmu\tMus musculus (mouse)\tEukaryotes;Animals;Vertebrates;Mammals\nT01003\trno\tRattus norvegicus (rat)\tEukaryotes;Animals;Vertebrates;Mammals\nT02813\tcge\tCricetulus griseus (Chinese hamster)\tEukaryote ...\n```"
      },
      "source": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "query",
        "parent_header": [
          "PPFF : Hidden Markov Model generator for detecting KEGG pathway specific genes",
          "How to use?"
        ],
        "type": "Text_excerpt",
        "value": "Query receives multiple KEGG's organism codes and outputs yaml file for each code.\n\n```\n$ python KPHMMER.py query -h\nusage: KPHMMER.py query [-h] [-o [OUTPUT]] [-a] CODE [CODE ...]\n\nIt receives the KEGG's organism code and outputs the motif yaml file. If you\ndo not know KEGG's organism code (ex.hsa), use serarch method.\n\npositional arguments:\n  CODE                  Specify KEGG's organism code (ex.hsa). Multiple inputs\n                        are accepted.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o [OUTPUT], --output [OUTPUT]\n                        Where motif yaml file is generated. If it does not\n                        exist, it is created for each directory. (default=./)\n  -a, --with-analysis   If you want to do analysis together, specify this\n                        method.\n\n$ python KPHMMER.py query sco smu -o ./sco_smu\n[2018/02/26 17:10:50] === Query start. ===\n[2018/02/26 17:10:50] Your query : ['sco', 'smu']\n[2018/02/26 17:10:50] Search pathway start.\n[2018/02/26 17:10:52] Format pathway start.\n[2018/02/26 17:10:52] sco's 1st pathway count : 83\n[2018/02/26 17:10:52] sco's 2nd pathway count : 19\n[2018/02/26 17:10:52] smu's 1st pathway count : 62\n[2018/02/26 17:10:52] smu's 2nd pathway count : 8\n[2018/02/26 17:10:52] Find gene start.\n[2018/02/26 17:10:52] sco's 1st gene count : 1028\n[2018/02/26 17:10:52] sco's 2nd gene count : 144\n[2018/02/26 17:10:52] sco's duplicate gene count : 67\n[2018/02/26 17:10:52] smu's 1st gene count : 403\n[2018/02/26 17:10:52] smu's 2nd gene count : 25\n[2018/02/26 17:10:52] smu's duplicate gene count : 13\n[2018/02/26 17:10:52] Find pathway start.\n[2018/02/26 17:11:22] Dump motif file start.\n[2018/02/26 17:11:22] === Query finish. ===\n\n$ ls ./sco_smu\nsco.yml  smu.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Inside yaml file",
        "parent_header": [
          "PPFF : Hidden Markov Model generator for detecting KEGG pathway specific genes",
          "How to use?",
          "query"
        ],
        "type": "Text_excerpt",
        "value": "./sco.yml (Streptomyces coelicolor)\n```\nCONFIG:\n  1ST_CATEGORY: ['1.1', '1.2', '1.3', '1.4', '1.5', '1.6', '1.7', '1.8', '1.11']\n  2ND_CATEGORY: ['1.9', '1.10', '1.12']\n  CREATE_DATE: 2018/02/26 17:11:22\n  INSERT_DUPLICATE: 2nd\n  ORGANISM: sco\nGENE:\n  1ST: ['sco:SCO5208', 'sco:SCO5470', 'sco:SCO3486', 'sco:SCO6782', 'sco:SCO2688',\n    'sco:SCO1577', 'sco:SCO1454', 'sco:SCO6075', 'sco:SCO2194', ...]\n  2ND: ['sco:SCO5888', 'sco:SCO3229', 'sco:SCO5878', 'sco:SCO5071', 'sco:SCO3243',\n    'sco:SCO5893', 'sco:SCO3739', 'sco:SCO2126', 'sco:SCO7691', 'sco:SCO5074', ...]\nMOTIF:\n  sco:SCO0063: [ROK]\n  sco:SCO0088: [Beta-lactamase2, Beta-lactamase, Peptidase_S13, Rib]\n  sco:SCO0136: [EIIC-GAT]\n  sco:SCO0137: [PTS_EIIA_2, PTS_IIB, EnY2]\n  sco:SCO0166: [PPK2]\n  sco:SCO0171: [NAPRTase]\n  ...\nPATHWAY:\n  1ST: ['scopath:sco00770', 'scopath:sco00650', 'scopath:sco00590', 'scopath:sco00380',\n    'scopath:sco00362', 'scopath:sco00621', 'scopath:sco00630', 'scopath:sco00910',\n    'scopath:sco00472', 'scopath:sco00622', 'scopath:sco00920', 'scopath:sco00780',\n    'scopath:sco00290', ...]\n  2ND: ['scopath:sco00903', 'scopath:sco01059', 'scopath:sco00523', 'scopath:sco01055',\n    'scopath:sco00401', 'scopath:sco01057', 'scopath:sco00521', 'scopath:sco01053',\n    'scopath:sco00261', ...]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "convert",
        "parent_header": [
          "PPFF : Hidden Markov Model generator for detecting KEGG pathway specific genes",
          "How to use?"
        ],
        "type": "Text_excerpt",
        "value": "Create fasta file from yaml file generated by query.\n\n```\n$ python KPHMMER.py convert -h\nusage: KPHMMER.py convert [-h] [-o [OUTPUT]] MOTIF [MOTIF ...]\n\nReceive motif yaml file and outputs the gene contained therein as fasta file.\n\npositional arguments:\n  MOTIF                 Specify motif file path. Multiple inputs are accepted.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o [OUTPUT], --output [OUTPUT]\n                        Where output file is generated. If it does not exist,\n                        it is created for each directory. (default=./)\n\n$ python KPHMMER.py convert ./sco_smu/sco.yml -o ./sco_smu/\n[2018/02/26 17:29:52] === Convert start. ===\n[2018/02/26 17:29:52] Comfirm motif file start.\n[2018/02/26 17:29:52] Read motif start.\n[2018/02/26 17:29:53] Dump fasta start.\n[2018/02/26 17:30:15] === Convert finish. ===\n```\n"
      },
      "source": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "analysis",
        "parent_header": [
          "PPFF : Hidden Markov Model generator for detecting KEGG pathway specific genes",
          "How to use?"
        ],
        "type": "Text_excerpt",
        "value": "Analusys takes multiple yaml files generated by query as input.\n- Output a list of Pfam-domains that are found specifically in each category as tsv file.\n- Output HMM file of Pfam-domain that is found specifically in each category.\n```\n$ python KPHMMER.py analysis -h\nusage: KPHMMER.py analysis [-h] [-o [OUTPUT]] MOTIF [MOTIF ...]\n\nReceive motif yaml file and outputs frequently appearing pfam motif only in\nthe selected category.\n\npositional arguments:\n  MOTIF                 Specify motif file path. Multiple inputs are accepted.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o [OUTPUT], --output [OUTPUT]\n                        Where output file is generated. If it does not exist,\n                        it is created for each directory. (default=./)\n\n$ python KPHMMER.py analysis -o ./sco_smu/ ./sco_smu/sco.yml ./sco_smu/smu.yml\n[2018/02/26 17:34:03] === Analysis start. ===\n[2018/02/26 17:34:03] Comfirm motif file start.\n[2018/02/26 17:34:03] Read motif start.\n[2018/02/26 17:34:03] Count motif start.\n[2018/02/26 17:34:03] Stat motif start.\n[2018/02/26 17:34:04] Dump tsv start.\n[2018/02/26 17:34:04] Dump hmm start.\n[2018/02/26 17:34:04] === Analysis finish. ===\n```\n"
      },
      "source": "https://raw.githubusercontent.com/suecharo/KPHMMER/master/README.md",
      "technique": "header_analysis"
    }
  ]
}