{
  "application_domain": [
    {
      "confidence": 21.95,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "--------\n\nTobias Rausch, Thomas Zichner, Andreas Schlattl, Adrian M. Stuetz, Vladimir Benes, Jan O. Korbel.      \nDELLY: structural variant discovery by integrated paired-end and split-read analysis.     \nBioinformatics. 2012 Sep 15;28(18):i333-i339.       \n[https://doi.org/10.1093/bioinformatics/bts378](https://doi.org/10.1093/bioinformatics/bts378)\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "-------\n[HTSlib](https://github.com/samtools/htslib) is heavily used for all genomic alignment and variant processing. [Boost](https://www.boost.org/) for various data structures and algorithms and [Edlib](https://github.com/Martinsos/edlib) for pairwise alignments using edit distance.\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dellytools/delly"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Contributing\n------------\nThank you for considering contributing to Delly.\n\n\nBugs\n----\nIf you have noticed a bug in Delly please search the [issue tracker](https://github.com/dellytools/delly/issues) to see if someone else in the community had already created a ticket. If that is not the case please create one!\n\nI try to fix all bugs as soon as possible but if you want to work on one yourself please consider using the fork and pull request mechanism of github.\n\n\nUsage questions\n---------------\nPlease consider using the Delly discussion group [delly-users](http://groups.google.com/d/forum/delly-users) for usage and installation questions.\n\n\nNew Features\n------------\nIf you want to suggest a new feature please go ahead and open an [issue](https://github.com/dellytools/delly/issues)!\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-11-15T08:51:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-30T06:54:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DELLY2: Structural variant discovery by integrated paired-end and split-read analysis"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8434038315296404,
      "result": {
        "original_header": "Delly multi-threading mode",
        "type": "Text_excerpt",
        "value": "Delly primarily parallelizes on the sample level. Hence, OMP_NUM_THREADS should be always smaller or equal to the number of input samples.  \n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9962791208822035,
      "result": {
        "type": "Text_excerpt",
        "value": "Delly is an integrated structural variant (SV) prediction method that can discover, genotype and visualize deletions, tandem duplications, inversions and translocations at single-nucleotide resolution in short-read and long-read massively parallel sequencing data. It uses paired-ends, split-reads and read-depth to sensitively and accurately delineate genomic rearrangements throughout the genome. \n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/dellytools/delly/wiki"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dellytools/delly/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQ",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "---\n* Visualization of SVs      \nYou may want to try out [wally](https://github.com/tobiasrausch/wally) to plot candidate structural variants. The paired-end coloring is explained in [wally's README](https://github.com/tobiasrausch/wally#paired-end-view) file.\n\n* What is the smallest SV size Delly can call?  \nFor short-reads, this depends on the sharpness of the insert size distribution. For an insert size of 200-300bp with a 20-30bp standard deviation, Delly starts to call reliable SVs >=300bp. Delly also supports calling of small InDels using soft-clipped reads only, the smallest SV size called is 15bp. For long-reads, delly calls SVs >=30bp.\n\n* Can Delly be used on a non-diploid genome?  \nYes and no. The SV site discovery works for any ploidy. However, Delly's genotyping model assumes diploidy (hom. reference, het. and hom. alternative). The CNV calling allows to set the baseline ploidy on the command-line.\n\n* Delly is running too slowly what can I do?    \nYou should exclude telomere and centromere regions and also all unplaced contigs (`-x` command-line option). In addition, you can filter input reads more stringently using -q 20 and -s 15. Lastly, `-z` can be set to 5 for high-coverage data.\n\n* Are non-unique alignments, multi-mappings and/or multiple split-read alignments allowed?  \nDelly expects two alignment records in the bam file for every paired-end, one for the first and one for the second read. Multiple split-read alignment records of a given read are allowed if and only if one of them is a primary alignment whereas all others are marked as secondary or supplementary. This is the default for bwa, minimap2 and many other aligners.\n\n* What pre-processing of bam files is required?    \nBam files need to be sorted, indexed and ideally duplicate marked.\n\n* Usage/discussion mailing list?         \nThere is a delly discussion group [delly-users](http://groups.google.com/d/forum/delly-users).\n\n* Docker/Singularity support?            \nThere is a delly [docker container](https://hub.docker.com/r/dellytools/delly/) and [singularity container (*.sif file)](https://github.com/dellytools/delly/releases) available.\n\n* How can I compute a mappability map?               \nA basic mappability map can be built using [dicey](https://github.com/gear-genomics/dicey), [samtools](https://github.com/samtools/samtools) and [bwa](https://github.com/lh3/bwa) with the below commands (as an example for the sacCer3 reference):\n```\ndicey chop sacCer3.fa\nbwa index sacCer3.fa\nbwa mem sacCer3.fa read1.fq.gz read2.fq.gz | samtools sort -@ 8 -o srt.bam -\nsamtools index srt.bam \ndicey mappability2 srt.bam \ngunzip map.fa.gz && bgzip map.fa && samtools faidx map.fa.gz \n```\n\n* Bioconda support?              \nDelly is available via [bioconda](http://bioconda.github.io/recipes/delly/README.html).\n\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 137
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dellytools/delly/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dellytools/delly"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Installing Delly"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dellytools/delly/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dellytools/delly/main/parallel/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/parallel/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing Delly",
        "type": "Text_excerpt",
        "value": "Delly is available as a [statically linked binary](https://github.com/dellytools/delly/releases/), a [singularity container (SIF file)](https://github.com/dellytools/delly/releases/), a [docker container](https://hub.docker.com/r/dellytools/delly/) or via [Bioconda](https://anaconda.org/bioconda/delly). You can also build Delly from source using a recursive clone and make. \n\n`git clone --recursive https://github.com/dellytools/delly.git`\n\n`cd delly/`\n\n`make all`\n\nThere is a Delly discussion group [delly-users](http://groups.google.com/d/forum/delly-users) for usage and installation questions.\n\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9313185407682815,
      "result": {
        "original_header": "Delly multi-threading mode",
        "type": "Text_excerpt",
        "value": "Delly supports parallel computing using the OpenMP API (www.openmp.org). \n`make PARALLEL=1 src/delly` \nYou can set the number of threads using the environment variable OMP_NUM_THREADS. \n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dellytools/delly/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cancer-genomics, delly, delly-users, genomic, germline, rearrangement, structural-variation, sv-discovery, svs, tumor"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2012- European Molecular Biology Laboratory (EMBL)\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n    3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software \n       without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "-------\nDelly is distributed under the BSD 3-Clause license. Consult the accompanying [LICENSE](https://github.com/dellytools/delly/blob/main/LICENSE) file for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dellytools/assets/main/delly-logo/delly-logo-539x600.png"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "delly"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "dellytools"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 645500,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 11041,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 5829,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 5032,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2282,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2002,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dellytools/delly/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2024-10-09T07:38:08Z",
        "date_published": "2024-10-09T07:41:14Z",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v1.3.1",
        "name": "delly v1.3.1",
        "release_id": 179044059,
        "tag": "v1.3.1",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/179044059",
        "value": "https://api.github.com/repos/dellytools/delly/releases/179044059",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v1.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2024-09-25T07:06:02Z",
        "date_published": "2024-09-25T07:25:41Z",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v1.2.9",
        "name": "delly v1.2.9",
        "release_id": 176780972,
        "tag": "v1.2.9",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v1.2.9",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/176780972",
        "value": "https://api.github.com/repos/dellytools/delly/releases/176780972",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v1.2.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2024-09-16T11:54:57Z",
        "date_published": "2024-09-16T12:01:43Z",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v1.2.8",
        "name": "delly v1.2.8",
        "release_id": 175219994,
        "tag": "v1.2.8",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v1.2.8",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/175219994",
        "value": "https://api.github.com/repos/dellytools/delly/releases/175219994",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v1.2.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2023-12-22T08:56:20Z",
        "date_published": "2023-12-22T09:06:33Z",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v1.2.6",
        "name": "delly v1.2.6",
        "release_id": 134878311,
        "tag": "v1.2.6",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v1.2.6",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/134878311",
        "value": "https://api.github.com/repos/dellytools/delly/releases/134878311",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v1.2.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2023-10-10T09:01:04Z",
        "date_published": "2023-10-10T09:18:00Z",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v1.1.8",
        "name": "delly v1.1.8",
        "release_id": 124389164,
        "tag": "v1.1.8",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v1.1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/124389164",
        "value": "https://api.github.com/repos/dellytools/delly/releases/124389164",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v1.1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2023-09-26T07:45:32Z",
        "date_published": "2023-09-26T08:05:17Z",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v1.1.7",
        "name": "delly v1.1.7",
        "release_id": 122563482,
        "tag": "v1.1.7",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v1.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/122563482",
        "value": "https://api.github.com/repos/dellytools/delly/releases/122563482",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v1.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2022-11-07T22:02:00Z",
        "date_published": "2022-11-07T22:07:05Z",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v1.1.6",
        "name": "delly v1.1.6",
        "release_id": 82321634,
        "tag": "v1.1.6",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v1.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/82321634",
        "value": "https://api.github.com/repos/dellytools/delly/releases/82321634",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v1.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2022-09-26T12:21:36Z",
        "date_published": "2022-09-26T12:32:33Z",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v1.1.5",
        "name": "delly v1.1.5",
        "release_id": 78133989,
        "tag": "v1.1.5",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v1.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/78133989",
        "value": "https://api.github.com/repos/dellytools/delly/releases/78133989",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v1.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2022-08-03T14:54:56Z",
        "date_published": "2022-08-03T15:04:29Z",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v1.1.3",
        "name": "delly v1.1.3",
        "release_id": 73550734,
        "tag": "v1.1.3",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v1.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/73550734",
        "value": "https://api.github.com/repos/dellytools/delly/releases/73550734",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v1.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2022-04-29T11:27:59Z",
        "date_published": "2022-04-29T11:36:18Z",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v1.0.3",
        "name": "delly v1.0.3",
        "release_id": 65671455,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/65671455",
        "value": "https://api.github.com/repos/dellytools/delly/releases/65671455",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2021-11-25T08:01:03Z",
        "date_published": "2021-11-25T08:07:29Z",
        "description": "delly v0.9.1",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.9.1",
        "name": "delly v0.9.1",
        "release_id": 54053710,
        "tag": "v0.9.1",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/54053710",
        "value": "https://api.github.com/repos/dellytools/delly/releases/54053710",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2021-01-05T10:24:57Z",
        "date_published": "2021-01-05T10:34:41Z",
        "description": "delly v0.8.7\r\n",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.8.7",
        "name": "delly v0.8.7",
        "release_id": 35989312,
        "tag": "v0.8.7",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.8.7",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/35989312",
        "value": "https://api.github.com/repos/dellytools/delly/releases/35989312",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.8.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2020-12-10T10:13:42Z",
        "date_published": "2020-12-10T10:23:26Z",
        "description": "delly v0.8.6",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.8.6",
        "name": "delly v0.8.6",
        "release_id": 35090610,
        "tag": "v0.8.6",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.8.6",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/35090610",
        "value": "https://api.github.com/repos/dellytools/delly/releases/35090610",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.8.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2020-09-29T08:39:57Z",
        "date_published": "2020-09-29T08:42:44Z",
        "description": "Delly v0.8.5",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.8.5",
        "name": "Delly v0.8.5",
        "release_id": 31923082,
        "tag": "v0.8.5",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.8.5",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/31923082",
        "value": "https://api.github.com/repos/dellytools/delly/releases/31923082",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.8.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2020-03-10T15:08:50Z",
        "date_published": "2020-03-10T15:25:23Z",
        "description": "Delly v0.8.3",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.8.3",
        "name": "Delly v0.8.3",
        "release_id": 24392482,
        "tag": "v0.8.3",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.8.3",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/24392482",
        "value": "https://api.github.com/repos/dellytools/delly/releases/24392482",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.8.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2020-02-03T14:40:03Z",
        "date_published": "2020-02-03T14:53:18Z",
        "description": "Delly v0.8.2",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.8.2",
        "name": "Delly v0.8.2",
        "release_id": 23341638,
        "tag": "v0.8.2",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.8.2",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/23341638",
        "value": "https://api.github.com/repos/dellytools/delly/releases/23341638",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.8.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2019-02-04T09:53:21Z",
        "date_published": "2019-02-04T10:07:54Z",
        "description": "Delly v0.8.1",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.8.1",
        "name": "Delly v0.8.1",
        "release_id": 15346440,
        "tag": "v0.8.1",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/15346440",
        "value": "https://api.github.com/repos/dellytools/delly/releases/15346440",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2018-09-27T12:39:27Z",
        "date_published": "2018-09-27T12:42:26Z",
        "description": "Delly v0.7.9",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.7.9",
        "name": "Delly v0.7.9",
        "release_id": 13127114,
        "tag": "v0.7.9",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.7.9",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/13127114",
        "value": "https://api.github.com/repos/dellytools/delly/releases/13127114",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.7.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2018-01-18T11:15:16Z",
        "date_published": "2018-01-18T11:17:49Z",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.7.8",
        "name": "Delly v0.7.8",
        "release_id": 9285724,
        "tag": "v0.7.8",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.7.8",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/9285724",
        "value": "https://api.github.com/repos/dellytools/delly/releases/9285724",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.7.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2017-04-09T10:48:15Z",
        "date_published": "2017-04-09T11:01:50Z",
        "description": "Delly v0.7.7",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.7.7",
        "name": "Delly v0.7.7",
        "release_id": 6024120,
        "tag": "v0.7.7",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.7.7",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/6024120",
        "value": "https://api.github.com/repos/dellytools/delly/releases/6024120",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.7.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2016-10-21T13:58:49Z",
        "date_published": "2016-10-21T14:03:32Z",
        "description": "Delly v0.7.6\n",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.7.6",
        "name": "Delly v0.7.6",
        "release_id": 4451483,
        "tag": "v0.7.6",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.7.6",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/4451483",
        "value": "https://api.github.com/repos/dellytools/delly/releases/4451483",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.7.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2016-07-27T08:48:49Z",
        "date_published": "2016-07-27T11:19:40Z",
        "description": "Delly v0.7.5\n",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.7.5",
        "name": "Delly v0.7.5",
        "release_id": 3749657,
        "tag": "v0.7.5",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.7.5",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/3749657",
        "value": "https://api.github.com/repos/dellytools/delly/releases/3749657",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.7.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2016-04-18T07:13:19Z",
        "date_published": "2016-04-18T07:39:03Z",
        "description": "Delly v0.7.3\n",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.7.3",
        "name": "Delly v0.7.3",
        "release_id": 3039714,
        "tag": "v0.7.3",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.7.3",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/3039714",
        "value": "https://api.github.com/repos/dellytools/delly/releases/3039714",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.7.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2015-11-08T12:55:48Z",
        "date_published": "2015-11-08T13:02:22Z",
        "description": "Delly v0.7.2\n",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.7.2",
        "name": "Delly v0.7.2",
        "release_id": 2090898,
        "tag": "v0.7.2",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.7.2",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/2090898",
        "value": "https://api.github.com/repos/dellytools/delly/releases/2090898",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.7.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2015-10-12T08:47:02Z",
        "date_published": "2015-10-12T09:46:28Z",
        "description": "Delly v0.7.1\n",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.7.1",
        "name": "Delly v0.7.1",
        "release_id": 1945356,
        "tag": "v0.7.1",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.7.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/1945356",
        "value": "https://api.github.com/repos/dellytools/delly/releases/1945356",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.7.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2015-09-10T11:29:23Z",
        "date_published": "2015-09-10T11:50:43Z",
        "description": "Delly v0.6.8\n",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.6.8",
        "name": "Delly v0.6.8",
        "release_id": 1793534,
        "tag": "v0.6.8",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.6.8",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/1793534",
        "value": "https://api.github.com/repos/dellytools/delly/releases/1793534",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.6.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2015-07-16T08:15:08Z",
        "date_published": "2015-07-16T09:40:23Z",
        "description": "Delly v0.6.7\n",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.6.7",
        "name": "Delly v0.6.7",
        "release_id": 1545018,
        "tag": "v0.6.7",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.6.7",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/1545018",
        "value": "https://api.github.com/repos/dellytools/delly/releases/1545018",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.6.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2015-07-02T19:18:48Z",
        "date_published": "2015-07-03T10:17:03Z",
        "description": "Delly v0.6.6\n",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.6.6",
        "name": "Delly v0.6.6",
        "release_id": 1492555,
        "tag": "v0.6.6",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.6.6",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/1492555",
        "value": "https://api.github.com/repos/dellytools/delly/releases/1492555",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.6.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2015-04-15T09:50:14Z",
        "date_published": "2015-04-15T10:07:37Z",
        "description": "Delly v0.6.5\n",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.6.5",
        "name": "Delly v0.6.5",
        "release_id": 1169371,
        "tag": "v0.6.5",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.6.5",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/1169371",
        "value": "https://api.github.com/repos/dellytools/delly/releases/1169371",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.6.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tobiasrausch",
          "type": "User"
        },
        "date_created": "2015-02-23T09:31:41Z",
        "date_published": "2015-02-23T09:40:53Z",
        "description": "Delly v0.6.3\n",
        "html_url": "https://github.com/dellytools/delly/releases/tag/v0.6.3",
        "name": "Delly v0.6.3",
        "release_id": 977605,
        "tag": "v0.6.3",
        "tarball_url": "https://api.github.com/repos/dellytools/delly/tarball/v0.6.3",
        "type": "Release",
        "url": "https://api.github.com/repos/dellytools/delly/releases/977605",
        "value": "https://api.github.com/repos/dellytools/delly/releases/977605",
        "zipball_url": "https://api.github.com/repos/dellytools/delly/zipball/v0.6.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running Delly",
        "type": "Text_excerpt",
        "value": "Delly needs a sorted, indexed and duplicate marked bam file for every input sample.\nAn indexed reference genome is required to identify split-reads.\nCommon workflows for germline and somatic SV calling are outlined below.\n\n`delly call -g hg38.fa input.bam > delly.vcf`\n\nYou can also specify an output file in [BCF](http://samtools.github.io/bcftools/) format.\n\n`delly call -o delly.bcf -g hg38.fa input.bam`\n\n`bcftools view delly.bcf > delly.vcf`\n\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Somatic SV calling",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "------------------\n\n* At least one tumor sample and a matched control sample are required for SV discovery\n\n`delly call -x hg38.excl -o t1.bcf -g hg38.fa tumor1.bam control1.bam`\n\n* Somatic pre-filtering requires a tab-delimited sample description file where the first column is the sample id (as in the VCF/BCF file) and the second column is either tumor or control.\n\n`delly filter -f somatic -o t1.pre.bcf -s samples.tsv t1.bcf`\n\n* Genotype pre-filtered somatic sites across a larger panel of control samples to efficiently filter false postives and germline SVs. For performance reasons, this can be run in parallel for each sample of the control panel and you may want to combine multiple pre-filtered somatic site lists from multiple tumor samples.\n\n`delly call -g hg38.fa -v t1.pre.bcf -o geno.bcf -x hg38.excl tumor1.bam control1.bam ... controlN.bam`\n\n* Post-filter for somatic SVs using all control samples.\n\n`delly filter -f somatic -o t1.somatic.bcf -s samples.tsv geno.bcf`\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Germline SV calling",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "-------------------\n\n* SV calling is done by sample for high-coverage genomes or in small batches for low-coverage genomes\n\n`delly call -g hg38.fa -o s1.bcf -x hg38.excl sample1.bam`\n\n* Merge SV sites into a unified site list \n\n`delly merge -o sites.bcf s1.bcf s2.bcf ... sN.bcf`\n\n* Genotype this merged SV site list across all samples. This can be run in parallel for each sample.\n\n`delly call -g hg38.fa -v sites.bcf -o s1.geno.bcf -x hg38.excl s1.bam`\n\n`delly call -g hg38.fa -v sites.bcf -o sN.geno.bcf -x hg38.excl sN.bam`\n\n* Merge all genotyped samples to get a single VCF/BCF using bcftools merge\n\n`bcftools merge -m id -O b -o merged.bcf s1.geno.bcf s2.geno.bcf ... sN.geno.bcf`\n\n* Apply the germline SV filter which requires at least 20 unrelated samples\n\n`delly filter -f germline -o germline.bcf merged.bcf`\n\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Delly for long reads from PacBio or ONT",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "---------------------------------------\n\nDelly also supports long-reads for SV discovery.\n\n`delly lr -y ont -o delly.bcf -g hg38.fa input.bam`\n\n`delly lr -y pb -o delly.bcf -g hg38.fa input.bam`\n\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Alternate alignments for genome graphs",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "--------------------------------------\n\nInstead of providing only one input alignment, delly supports now multiple alternate alignments on different linear reference genomes using [minimap2](https://github.com/lh3/minimap2) or pan-genome graphs using [minigraph](https://github.com/lh3/minigraph).\n\n```\nminimap2 -ax map-pb -L chm13.fa sample.fq.gz\nminigraph --vc -cx lr pangenome.gfa.gz sample.fq.gz\n```\n\nIf the above alignment files are then stored as `sample.chm13.bam` and `sample.gaf.gz` you can use a simple tab-delimited config file for all alternate alignments with delly.\n\n`cat align.config`\n\n```\nsample.chm13.bam   chm13.fa\nsample.gaf.gz   pangenome.gfa.gz\n```\n\n`delly lr -y pb -o delly.bcf -g hg38.fa -l align.config sample.hg38.bam`\n\nStructural variants are still reported with respect to GRCh38 coordinates but the output will only contain SVs that are not present in any of the alternate alignments. For pangenome graphs you may want to try the [augmented graph](https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1KG_ONT_VIENNA/release/v1.0/augmented_graph/) from this [study](https://www.biorxiv.org/content/10.1101/2024.04.18.590093v1). Please note that this graph contains only SVs greater 50bp so you need to filter the above delly output to match the size range using [bcftools](https://github.com/samtools/bcftools).\n\n`bcftools view -i '(QUAL>=300) && ( ((SVTYPE==\"INS\") && (INFO/SVLEN>50)) || (SVTYPE=\"BND\") || ((INFO/END - POS)>50) )' delly.bcf`\n\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Read-depth profiles and copy-number variant calling",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "---------------------------------------------------\n\nYou can generate read-depth profiles with delly. This requires a mappability map which can be downloaded here:\n\n[Mappability Maps](https://gear-genomics.embl.de/data/delly/)\n\nThe command to count reads in 10kbp mappable windows and normalize the coverage is:\n\n`delly cnv -a -g hg38.fa -m hg38.map -c out.cov.gz -o out.bcf input.bam`\n\nThe output file `out.cov.gz` can be plotted using [R](https://www.r-project.org/) to generate normalized copy-number profiles and segment the read-depth information:\n\n`Rscript R/rd.R out.cov.gz`\n\nInstead of segmenting the read-depth information, you can also visualize the CNV calls.\n\n`bcftools query -f \"%CHROM\\t%POS\\t%INFO/END\\t%ID[\\t%RDCN]\\n\" out.bcf > seg.bed`\n\n`Rscript R/rd.R out.cov.gz seg.bed`\n\nWith `-s` you can output a statistics file with GC bias information.\n\n`delly cnv -g hg38.fa -m hg38.map -c out.cov.gz -o out.bcf -s stats.gz input.bam`\n\n`zcat stats.gz | grep \"^GC\" > gc.bias.tsv`\n\n`Rscript R/gcbias.R gc.bias.tsv`\n\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Germline CNV calling",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "--------------------\n\nDelly uses GC and mappability fragment correction to call CNVs. This requires a [mappability map](https://gear-genomics.embl.de/data/delly/).\n\n* Call CNVs for each sample and optionally refine breakpoints using delly SV calls\n\n`delly cnv -o c1.bcf -g hg38.fa -m hg38.map -l delly.sv.bcf input.bam`\n\n* Merge CNVs into a unified site list\n\n`delly merge -e -p -o sites.bcf -m 1000 -n 100000 c1.bcf c2.bcf ... cN.bcf`\n\n* Genotype CNVs for each sample\n\n`delly cnv -u -v sites.bcf -g hg38.fa -m hg38.map -o geno1.bcf input.bam`\n\n* Merge genotypes using [bcftools](https://github.com/samtools/bcftools)\n\n`bcftools merge -m id -O b -o merged.bcf geno1.bcf ... genoN.bcf`\n\n* Filter for germline CNVs\n\n`delly classify -f germline -o filtered.bcf merged.bcf`\n\n* Optional: Plot copy-number distribution for large number of samples (>>100)\n\n`bcftools query -f \"%ID[\\t%RDCN]\\n\" filtered.bcf > plot.tsv`\n\n`Rscript R/cnv.R plot.tsv`\n\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Somatic copy-number alterations (SCNAs)",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "---------------------------------------\n\n* For somatic copy-number alterations, delly first segments the tumor genome (`-u` is required). Depending on the coverage, tumor purity and heterogeneity you can adapt parameters `-z`, `-t` and `-x` which control the sensitivity of SCNA detection.\n\n`delly cnv -u -z 10000 -o tumor.bcf -c tumor.cov.gz -g hg38.fa -m hg38.map tumor.bam`\n\n* Then these tumor SCNAs are genotyped in the control sample (`-u` is required).\n\n`delly cnv -u -v tumor.bcf -o control.bcf -g hg38.fa -m hg38.map control.bam`\n\n* The VCF IDs are matched between tumor and control. Thus, you can merge both files using [bcftools](https://github.com/samtools/bcftools).\n\n`bcftools merge -m id -O b -o tumor_control.bcf tumor.bcf control.bcf`\n\n* Somatic filtering requires a tab-delimited sample description file where the first column is the sample id (as in the VCF/BCF file) and the second column is either tumor or control.\n\n`delly classify -p -f somatic -o somatic.bcf -s samples.tsv tumor_control.bcf`\n\n* Optional: Plot the SCNAs using bcftools and R.\n\n`bcftools query -s tumor -f \"%CHROM\\t%POS\\t%INFO/END\\t%ID[\\t%RDCN]\\n\" somatic.bcf > segmentation.bed`\n\n`Rscript R/rd.R tumor.cov.gz segmentation.bed`\n\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:23:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 439
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "Running Delly"
        ],
        "type": "Text_excerpt",
        "value": "-------\n\nA small example is included for short-read, long-read and copy-number variant calling.\n\n`delly call -g example/ref.fa -o sr.bcf example/sr.bam`\n\n`delly lr -g example/ref.fa -o lr.bcf example/lr.bam`\n\n`delly cnv -g example/ref.fa -m example/map.fa.gz -c out.cov.gz -o cnv.bcf example/sr.bam`\n\nMore in-depth tutorials for SV calling are available here:\n\n* Short-read SV calling: [https://github.com/tobiasrausch/vc](https://github.com/tobiasrausch/vc)\n\n* Long-read SV calling: [https://github.com/tobiasrausch/sv](https://github.com/tobiasrausch/sv)\n\n"
      },
      "source": "https://raw.githubusercontent.com/dellytools/delly/main/README.md",
      "technique": "header_analysis"
    }
  ]
}