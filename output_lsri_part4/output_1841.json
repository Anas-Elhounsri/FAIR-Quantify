{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Devika1/capsim"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-10-04T04:44:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-12-29T15:40:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9639626742843591,
      "result": {
        "original_header": "capsim",
        "type": "Text_excerpt",
        "value": "Capsim is a tool to simulate capture sequencing. It was developed as part\nof the Japsa package. \n \n"
      },
      "source": "https://raw.githubusercontent.com/Devika1/capsim/patch-2/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.897550947237629,
      "result": {
        "original_header": "Off-target analysis",
        "type": "Text_excerpt",
        "value": "A script file _off_target_probes.sh_ used to identify off target probes is provided in this repository. To run this script file, \n      -b/--target-bed                  Bed file of the target regions.\n      -r/--reference                   Reference genome fasta file.\n      -a/--bam                         Bam file of CapSim simulated reads aligned to reference\n                                       genome.\n      -w/--window-size                 Window size for statistics of the depth of coverage of\n                                       the off target regions (default 1000).\n      -d/--min-depth                   Minimum depth of base coverage of the off target regions\n                                       to analyse (default 10000).\n      -x/--padding-size                Extension/padding size to the up and downstream of the\n                                       target regions (default 500).\n      -q/--probe-seq                   Text file containing the probe ID and sequence.\n      -t/--threads                     Number of threads for alignment (default 1).\n      -p/--prefix                      Prefix of the output files (default ./out).\n</pre>\n    \nThe following tools should be installed and added to system path. \n4\\. generate target bed file with extra regions upstream and downstream, \n"
      },
      "source": "https://raw.githubusercontent.com/Devika1/capsim/patch-2/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/Devika1/capsim/wiki"
      },
      "source": "https://raw.githubusercontent.com/Devika1/capsim/patch-2/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Devika1/capsim/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Devika1/capsim/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Devika1/capsim"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "capsim"
      },
      "source": "https://raw.githubusercontent.com/Devika1/capsim/patch-2/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Devika1/capsim/patch-2/off_target_probes.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick installation guide:",
        "parent_header": [
          "capsim"
        ],
        "type": "Text_excerpt",
        "value": "On a Linux/Mac machine with `make' and `git' installed, the software can be installed with\n\n    git clone https://github.com/mdcao/japsa\n    cd japsa\n    make install \\\n      [INSTALL_DIR=~/.usr/local \\] \n      [MXMEM=7000m \\] \n      [SERVER=true \\]\n\n\nDetails of installation (including for Windows) and usage of Japsa can be found \nin its documentation hosted on [ReadTheDocs](http://japsa.readthedocs.org/en/latest/index.html) \n"
      },
      "source": "https://raw.githubusercontent.com/Devika1/capsim/patch-2/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9427565238226133,
      "result": {
        "original_header": "Off-target analysis",
        "type": "Text_excerpt",
        "value": "    bash off_target_probes.sh -b target_regions.bed -r ref.fasta -a cap_sim.bam -w 1000 -d 10000 -x 500 -q probes.txt -t 4 -p out \n**_The script file consists of 12 main commands which could be run step by step._** \n    tail -n +2 probes.txt | awk '{printf(\">%s:%s\\n%s\\n\",$1,$2,$3)}' > probes.fa \n"
      },
      "source": "https://raw.githubusercontent.com/Devika1/capsim/patch-2/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8666875561152134,
      "result": {
        "original_header": "Off-target analysis",
        "type": "Text_excerpt",
        "value": "    awk '{print $1\"\\t\"$2}' ref.fasta.fai > ref.genome \n"
      },
      "source": "https://raw.githubusercontent.com/Devika1/capsim/patch-2/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Devika1/capsim/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "capsim"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Devika1"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 6470,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Devika1/capsim/patch-2/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:27:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "capsim"
        ],
        "type": "Text_excerpt",
        "value": "Before running capsim, the probe sequences need to be aligned to the reference sequence (or the genome sequence to simulate sequencing). We recommend using bowtie2 for the alignment.\n   \n    #Skip this step if the index has been generated\n    bowtie2-build ref.fasta ref\n    \n    #Align the probes into the reference\n    bowtie2 --local --very-sensitive-local --mp 8 --rdg 10,8 --rfg 10,8 -k 10000 -f -x ref -U probes.fa -S probes.sam\n\nNote: for some reason, bowtie2 only accepts the query fasta file (probes.fa) containing one sequence per line.\n\nAfter alignment, sort the and index the bam file with samtools\n\n     samtools view -bSU probes.sam | samtools sort -o probes.bam -\n\nCapsim takes the bam file as the input:\n\n    jsa.sim.capsim --reference ref.fasta --probe probes.bam --ID someid --fmedian 5000  --pacbio output --pblen 3000 --num 20000000\n\nor \n\n    jsa.sim.capsim --reference ref.fasta --probe probes.bam --ID someid --fmedian 500  --miseq output --illen 300 --num 20000000\n\nOptions,\n\n<pre>\n      --reference=s                    Name of genome to be\n                                       (REQUIRED)\n      --probe=s                        File containing probes mapped to the reference in bam format\n                                       (default='null')\n      --logFile=s                      Log file\n                                       (default='-')\n      --ID=s                           A unique ID for the data set\n                                       (default='')\n      --miseq=s                        Name of read file if miseq is simulated\n                                       (default='null')\n      --pacbio=s                       Name of read file if pacbio is simulated\n                                       (default='null')\n      --fmedian=i                      Median of fragment size at shearing\n                                       (default='2000')\n      --fshape=d                       Shape parameter of the fragment size distribution\n                                       (default='6.0')\n      --smedian=i                      Median of fragment size distribution\n                                       (default='1300')\n      --sshape=d                       Shape parameter of the fragment size distribution\n                                       (default='6.0')\n      --tmedian=i                      Median of target fragment size (the fragment size of the data).\n                                       If specified, will override fmedian and smedian.\n                                       Othersise will be estimated\n                                       (default='0')\n      --tshape=d                       Shape parameter of the effective fragment size distribution\n                                       (default='0.0')\n      --num=i                          Number of fragments\n                                       (default='1000000')\n      --pblen=i                        PacBio: Average (polymerase) read length\n                                       (default='30000')\n      --illen=i                        Illumina: read length\n                                       (default='300')\n      --ilmode=s                       Illumina: Sequencing mode: pe = paired-end, mp=mate-paired and se=singled-end\n                                       (default='pe')\n      --seed=i                         Random seed, 0 for a random seed\n                                       (default='0')\n      --help                           Display this usage and exit\n                                       (default='false')\n</pre>\n\nCapSim will output sequence reads in fastq format. Users can perform subsequenct analysis by aligning the simulated reads to the reference genome.  \n"
      },
      "source": "https://raw.githubusercontent.com/Devika1/capsim/patch-2/README.md",
      "technique": "header_analysis"
    }
  ]
}