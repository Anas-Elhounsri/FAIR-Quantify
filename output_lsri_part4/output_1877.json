{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Building index reference sequences",
        "parent_header": [
          "AltHapAlignR",
          "Alignment"
        ],
        "type": "Text_excerpt",
        "value": "Depending on mapper, indexing comments are different. These are examples of indexing reference sequences using bowtie2. \n\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "building indexes of genome sequence (PGF haplotype)",
        "parent_header": [
          "AltHapAlignR",
          "Alignment",
          "1. Building index reference sequences"
        ],
        "type": "Text_excerpt",
        "value": "`bowtie2-build hg38.genome.fa hg38.genome`\n  "
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "building indexes of the other haplotypes",
        "parent_header": [
          "AltHapAlignR",
          "Alignment",
          "1. Building index reference sequences"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nbowtie2-build hg38.mhc_apd.fa hg38.mhc_apd\nbowtie2-build hg38.mhc_cox.fa hg38.mhc_cox\nbowtie2-build hg38.mhc_dbb.fa hg38.mhc_dbb\nbowtie2-build hg38.mhc_mann.fa hg38.mhc_mann\nbowtie2-build hg38.mhc_mcf.fa hg38.mhc_mcf\nbowtie2-build hg38.mhc_qbl.fa hg38.mhc_qbl\nbowtie2-build hg38.mhc_ssto.fa hg38.mhc_ssto\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jknightlab/AltHapAlignR"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "AltHapAlignR",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "You are welcome to:\n\n* submit suggestions and bug-reports at: <https://github.com/jknightlab/AltHapAlignR/issues>\n* compose a friendly e-mail to: <wl@well.ox.ac.uk>\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pleases submit bugs and suggestions",
        "parent_header": [
          "AltHapAlignR",
          "Usage",
          "Contact"
        ],
        "type": "Text_excerpt",
        "value": "This package is still under development. If you have features you would like to have added, please submit your suggestions and bug-reports at: <https://github.com/jknightlab/AltHapAlignR/issues>\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-09-30T10:54:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-09T03:10:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9884656835900629,
      "result": {
        "original_header": "AltHapAlignR",
        "type": "Text_excerpt",
        "value": "* More accurate RNA-seq analysis that leverages knowledge of haplotype sequence and structure\n* An approach for utilising knowledge of alternate reference haplotypes to generate gene and haplotype level estimates of transcript abundance.  \n\n**Table of contents:** \n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9877589184041906,
      "result": {
        "original_header": "A graphic overview of haplotype prediction",
        "type": "Text_excerpt",
        "value": "Synthetic heterozygote data with the PGF and COX (1:1 ratio) haplotypes in the MHC region shown for this figure. \n\nHaplotype prediction and the mapping rates (left panel). These are shown for each classical HLA gene (ordered on the y-axis according to their genomic position) with respect to each of the eight known haplotypes and presented as a heat map. Numbers in each cell are mapping rates. Predicted haplotypes are highlighted with a red border. Empty cells represent genes that are not annotated in the given haplotype. Combined mapping rates from the predicted haplotypes (middle panel). Each mapping rate in the first column is the read counts of the gene in the predicted haplotype(s) divided by the total read count of the gene across all haplotypes. Mismatching mapping rates of predicted haplotypes are in the second column. Pink and grey colors are genes predicted as heterozygous and homozygous respectively. Gene counts (right panel). Bar plots show the raw read counts for each gene.   \n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8469656757421821,
      "result": {
        "original_header": "Alignment",
        "type": "Text_excerpt",
        "value": "Any read mapper, like TopHat (Kim et al., 2013) or HISAT2 (Kim et al. 2015), can be used for this purpose, provided that information about the alignment is stored in the standard tags provided by the SAM format specification.  \n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jknightlab/AltHapAlignR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jknightlab/AltHapAlignR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jknightlab/AltHapAlignR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AltHapAlignR"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/inst/scripts/wrapper.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/inst/scripts/mapping2theMHCRef.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/./img/output.png"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "AltHapAlignR"
        ],
        "type": "Text_excerpt",
        "value": "Before installing 'AltHapAlignR', we need to set up python environment. \n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing 'AltHapAlignR'",
        "parent_header": [
          "AltHapAlignR",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```R\n\n# packages to install for using AltHapAlignR :\n\ninstall.packages(\"igraph\", \"ggplot2\", \"data.table\", \"dplyr\", \"plyr\", \"grid\", \"gridExtra\", \"igraph\", \"reshape2\", \"foreach\")\n\nsource(\"https://bioconductor.org/biocLite.R\")\nbiocLite( c(\"rtracklayer\") )\n\n\n# install and load the 'devtools' package\ninstall.packages(\"devtools\")\nlibrary(devtools)\ndevtools::install_github('jknightlab/AltHapAlignR')\n\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9989163869590898,
      "result": {
        "original_header": "2. Mapping reads",
        "type": "Text_excerpt",
        "value": "A bash script './inst/scripts/mapping2theMHCRef.sh' included in the package  \n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jknightlab/AltHapAlignR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AltHapAlignR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "jknightlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 45656,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 10127,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7293,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "The python script has a few dependencies:",
        "parent_header": [
          "AltHapAlignR",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "* [pybam](https://github.com/JohnLonginotto/pybam): \"Pure Python\" -but\n  fast- library to read BAM files. \n```\npip install https://github.com/JohnLonginotto/pybam/zipball/master\n```\n\n* [intervaltree](https://pypi.python.org/pypi/intervaltree): \"Pure Python\"\n  library that implements [interval trees](https://en.wikipedia.org/wiki/Interval_tree)\n```\npip install intervaltree\n```\n  \n* [quicksect](https://pypi.python.org/pypi/quicksect): C/Python library\n  that implements [interval trees](https://en.wikipedia.org/wiki/Interval_tree)\n  too but is about 4x faster than `intervaltree`. Note that its\n  installation may require [Cython](https://pypi.python.org/pypi/Cython)\n  and a compiler (e.g. gcc) setup.\n```\npip install cython      # if required\npip install quicksect\n```\nOnly one of the last two is needed, `quicksect` being the preferred\noption for performance reasons.\n\nThere are several ways of bringing them in, the easiest being with `pip`.\n\nNote that you may want to first setup a [virtualenv](https://virtualenv.pypa.io)\nbefore installing the dependencies, to ensure your environment is clean and\nself-contained. For instance:\n\n```sh\n# if no virtualenv, \npip install virtualenv\n\n# Where the files are going to be stored\nALTHAPALIGN_VENV=$PWD/althapalign_virtualenv\n# To create a \"virtualenv\" (only the first time)\nvirtualenv $ALTHAPALIGN_VENV\n# To start using the \"virtualenv\"\nsource $ALTHAPALIGN_VENV/bin/activate\n\n# install python modules\n\n# To stop using it, once finished\ndeactivate\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:35:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "AltHapAlignR"
        ],
        "type": "Text_excerpt",
        "value": "\n```R\nlibrary(\"AltHapAlignR\")\n\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Inputs",
        "parent_header": [
          "AltHapAlignR",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* GTF file that covers all the haplotypes\n* BAM files (1 per region). They *must* be sorted by *query name* with\n  [Picard](http://broadinstitute.github.io/picard/). *Do not use samtools*\n  to sort the files as it [does not follow the lexicographic\n  order](https://github.com/samtools/hts-specs/issues/5).\n\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. get editing distance from bam files",
        "parent_header": [
          "AltHapAlignR",
          "Usage",
          "Running AltHapAlignR"
        ],
        "type": "Text_excerpt",
        "value": "```R\ngtf <- system.file(\"extdata\", \"gencode.v21.chr_patch_hapl_HLA.annotation.gtf\", package = \"AltHapAlignR\")\nbamDir = system.file(\"extdata\",  package=\"AltHapAlignR\")\nbamFiles = list.files(bamDir, pattern=\"^mapping.*bam$\", full=TRUE)\n\n\n# without virtualenv\nEDfromBams(bamFiles, gtf, output_name=\"ed.txt\", r=\"VARSL-VARS2,C6orf205-MUC21\")\n\n# without virtualenv\nEDfromBams(bamFiles, gtf, output_name=\"ed.txt\", virtualenv=\"path/althapalign_virtualenv\", r=\"VARSL-VARS2,C6orf205-MUC21\")\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. get paired mapping rates",
        "parent_header": [
          "AltHapAlignR",
          "Usage",
          "Running AltHapAlignR"
        ],
        "type": "Text_excerpt",
        "value": "Haplotype names of the MHC in the parameter 'hap_names' shoud be in the same order of column names found in the output from 'EDfromBams'.\n\n```R\ned_table=system.file(\"extdata\", \"example_ed_table.txt\", package = \"AltHapAlignR\")\ned_table <- read.table(ed_table, sep=\"\\t\", header=TRUE)\n\npaired_mapping_rates <- getMappingRatesFromPairs(ed_table, hap_names=c(\"apd\", \"cox\", \"dbb\", \"mann\", \"mcf\", \"pgf\", \"qbl\", \"ssto\"), read_length=50)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. get shortest paths",
        "parent_header": [
          "AltHapAlignR",
          "Usage",
          "Running AltHapAlignR"
        ],
        "type": "Text_excerpt",
        "value": "```R\n\ngtf <- system.file(\"extdata\", \"gencode.v21.chr_patch_hapl_HLA.annotation.gtf\", package = \"AltHapAlignR\")\npaired_mapping_rates=system.file(\"extdata\", \"example_paired_mapping_rates.txt\", package = \"AltHapAlignR\")\npaired_mapping_rates <- read.table(paired_mapping_rates, sep=\"\\t\", header=TRUE)\n\noutput <- heatmapByShortestPaths(paired_mapping_rates, gtf, hap_names= c(\"apd\", \"cox\", \"dbb\", \"mann\", \"mcf\", \"pgf\", \"qbl\", \"ssto\"), penalty=1, sample_name=\"p1\")\n\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Performance",
        "parent_header": [
          "AltHapAlignR",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "For obtaining the editing distance from multiple bam files, CPU-time is linear for the total number of reads found in the BAM files. Depending on the CPU, AltHapAlignR can parse between 30,000 and 80,000 reads per second. For over 8 BAM files comprising more than 13 million reads takes less than 3 minutes on an Intel i7-7500U CPU @ 2.70GHz (on 1 core only). The memory consumption is less than 20MB with `quicksect`, 35MB with `intervaltree`, regardless of the number of reads. It only depends on the number of genes and exons in the GTF file. For the rest of calculation, it takes less than 5 min.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pleases submit bugs and suggestions",
        "parent_header": [
          "AltHapAlignR",
          "Usage",
          "Contact"
        ],
        "type": "Text_excerpt",
        "value": "This package is still under development. If you have features you would like to have added, please submit your suggestions and bug-reports at: <https://github.com/jknightlab/AltHapAlignR/issues>\n"
      },
      "source": "https://raw.githubusercontent.com/jknightlab/AltHapAlignR/master/README.md",
      "technique": "header_analysis"
    }
  ]
}