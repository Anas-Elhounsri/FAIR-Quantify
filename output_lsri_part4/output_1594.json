{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "User Manual"
        ],
        "type": "Text_excerpt",
        "value": "[Lin G, Chai J, Yuan S, Mai C, Cai L, et al. (2016) VennPainter: A Tool for the Comparison and Identification of Candidate Genes Based on Venn Diagrams. PLoS ONE 11(4): e0154315. doi: 10.1371/journal.pone.0154315](http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0154315)\n"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/linguoliang/VennPainter"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-09-05T00:48:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-21T02:42:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A tool for the comparison and identification of candidate genes based on Venn diagrams"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/linguoliang/VennPainter/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/linguoliang/VennPainter/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "linguoliang/VennPainter"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "User Manual"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/linguoliang/VennPainter//master/PNGfigures/1.png"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/linguoliang/VennPainter//master/PNGfigures/2.png"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/linguoliang/VennPainter//master/PNGfigures/3.png"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/linguoliang/VennPainter//master/PNGfigures/4-1.png"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/linguoliang/VennPainter//master/PNGfigures/4.png"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1.1 Hardware",
        "parent_header": [
          "User Manual",
          "1.Run-time Environment"
        ],
        "type": "Text_excerpt",
        "value": "VennPainter was developed by using Qt 4.8.5 under its LGPL v2.1 license. This software had been  tested on Win xp,Win 7,Win 8,Linux Mint 13,Mac OS 10.8.5.\nMinimum requirement: PC (PIII866)\uff0c512M memory\uff0c20G Hard disk\n"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1.2 System",
        "parent_header": [
          "User Manual",
          "1.Run-time Environment"
        ],
        "type": "Text_excerpt",
        "value": "Operating system\uff1aWindows xp or higher\uff0cLinux with GUI, Mac OS 10.8.5 or higher.\n"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2.1 Input data format",
        "parent_header": [
          "User Manual",
          "2.Input data"
        ],
        "type": "Text_excerpt",
        "value": "Each input set should be a text file. Every element should be separated by white space characters (space, tab, and newline) in the set. If an element displays multiple times in a file, it will be analyzed as one element only. About the processing capability, data with no more than eight sets could be analyzed and output with both diagrams and text files. As for data sets ranging from 9 to 31, only a text-based output format could be generated. VennPainter supports three text-based format (e.g., vertical, horizontal and matrix) for further analysis.\n"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2.2 Load data",
        "parent_header": [
          "User Manual",
          "2.Input data"
        ],
        "type": "Text_excerpt",
        "value": "Data can be loaded with \"Files\"->\"Open Files\"(Fig. 1). This application allows one or more files to be loaded at once.  \n![open files menu](PNGfigures/1.png)  \n**Fig. 1** open files menu  "
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.1 Options for color or the number of sets",
        "parent_header": [
          "User Manual",
          "3. Customize image and data"
        ],
        "type": "Text_excerpt",
        "value": "After loading data, a control panel will appear on the left with check-box and color button in pairs (Fig. 2). The loaded sets could be selected or unselected by clicking check-box. The corresponding color in the image could be changed by the color button. The color information can be saved by \u201cSetting\u201d->\u201dSave config\u201d. The saved color information could be loaded by \u201cSetting\u201d->\u201dLoad config\u201d.  \n![Check-box and Color button in pairs](PNGfigures/2.png)  \n**Fig. 2** Check-box and Color button in pairs"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.2 Switch among Classic, Edwards' and Nested Venn diagrams",
        "parent_header": [
          "User Manual",
          "3. Customize image and data"
        ],
        "type": "Text_excerpt",
        "value": "VennPainter provides three types of Venn diagram (Classic Venn, Edwards\u2019 Venn and Nested Venn) for diagram options. In our design, the Classic Venn, Edward\u2019s Venn and Nested Venn could respectively display the sharing relationships at most five, six and eight datasets with diagram output. After diagram displayed, users can use right-click menu to switch among the three diagram options when they are available (Fig. 3a). There is an icon ahead the selected modes.. If the mode is unavailable, the item in the right-click menu turns grey and cannot be selected (Fig. 3b). The number of sets determines whether the mode is valid (Table 1).   \n![open files menu](PNGfigures/3.png)  \n**Fig. 3** right-click menus of the two diagrams.  \n<table  class=\"table table-bordered table-striped table-condensed\" border=\"1\" align=\"center\">\n    <caption><b>Table 1</b> Capacity of Venn diagram in VennPainter </caption>\n          <tr align=\"center\">\n          <th width=\"\">Number of sets</th>\n          <th >1</th>\n          <th>2</th>\n          <th>3</th>\n          <th>4</th>\n          <th>5</th>\n          <th>6</th>\n          <th>7</th>\n          <th>8</th>\n          <th>9&#126;31</th>\n          </tr>\n          <tr align=\"center\">\n          <th>Classic</th>\n          <td>&#8730;</td>\n          <td>&#8730;</td>\n          <td>&#8730;</td>\n          <td>&#8730;</td>\n          <td>&#8730;</td>\n          <td>&#215;</td>\n          <td>&#215;</td>\n          <td>&#215;</td>\n          <td>&#215;</td>\n          </tr>\n          <tr align=\"center\">\n          <th>Edwards'</th>\n          <td>&#215;</td>\n          <td>&#8730;</td>\n          <td>&#8730;</td>\n          <td>&#8730;</td>\n          <td>&#8730;</td>\n          <td>&#8730;</td>\n          <td>&#215;</td>\n          <td>&#215;</td>\n          <td>&#215;</td>\n          </tr>\n          <tr align=\"center\">\n          <th>Nested</th>\n          <td>&#215;</td>\n          <td>&#215;</td>\n          <td>&#215;</td>\n          <td>&#215;</td>\n          <td>&#8730;</td>\n          <td>&#8730;</td>\n          <td>&#8730;</td>\n          <td>&#8730;</td>\n          <td>&#215;</td>\n          </tr>\n          </table>"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.3 View single intersection",
        "parent_header": [
          "User Manual",
          "3. Customize image and data"
        ],
        "type": "Text_excerpt",
        "value": "VennPainter allows users view a single intersection on the diagram when the numbers of sets are no more than eight. When the mouse stays over a number on the image, the corresponding tooltip will show the logic relationship of the intersection (Fig. 4). The list of sharing elements will appear on the right of the program after users click the corresponding number. The list contains all the elements that belong to the corresponding intersection.\n![Data output for single intersection](PNGfigures/4-1.png)  \n**Fig. 4** Data output for single intersection.  "
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4.1 Export image",
        "parent_header": [
          "User Manual",
          "4. Export data"
        ],
        "type": "Text_excerpt",
        "value": "VennPainter only support SVG images output. VennPainter save images with \"Files\"->\"Save image\" or \"right-click menu\"->\"Save image\". The SVG images could be read and modified by many graphic vector editors, such as Adobe Illustrator, Inkscape and CorelDRAW, etc.\n"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4.2 Export shared data",
        "parent_header": [
          "User Manual",
          "4. Export data"
        ],
        "type": "Text_excerpt",
        "value": "VennPainter provides three text-based formats for shared datasets, including vertical format, horizontal format and matrix format( Fig. 5). In the Matrix format (Fig. 5a), the first row contains all datasets, and the first column contains all elements from all datasets. Other columns indicate if the element existing in each dataset: \u201c1\u201d indicate yes, while \u201c0\u201d indicate no. In the Vertical format (Fig. 5b), each row contains the elements belonging to each intersection. For example, a six-set Venn diagram has 63 intersections and thus, the text file contains 63 rows, each rows contains all the elements belonging to each intersection. Horizontal format (Fig. 5c) is identical to the vertical mode except for the exchange of columns and rows.\n![output dataset](PNGfigures/4.png)  \n**Fig. 5** output dataset  "
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4.3 Export single intersection",
        "parent_header": [
          "User Manual",
          "4. Export data"
        ],
        "type": "Text_excerpt",
        "value": "Moving mouse pointer over the number on the image, the tooltip will show the corresponding relationship of the intersection. If clicking the number, the shared list will appear on the right panel. The shared list can be exported as a text file by clicking the \u201cExport shared list\u201d( Fig. 4)."
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5.1 Clear all data",
        "parent_header": [
          "User Manual",
          "5. Other Operations"
        ],
        "type": "Text_excerpt",
        "value": "The data can be cleared by clicking the \u201cClear All\u201d button. After clearing all data, other datasets can be loaded to construct a new Venn diagram."
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "6. Prebuilt binaries",
        "parent_header": [
          "User Manual"
        ],
        "type": "Text_excerpt",
        "value": "[VennPainter_1.2.0](https://github.com/linguoliang/VennPainter/releases)\n"
      },
      "source": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/linguoliang/VennPainter/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "c-plus-plus, fig, intersection, venn-diagram"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VennPainter"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "linguoliang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 505007,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 10561,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 5610,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "QMake",
        "size": 534,
        "type": "Programming_language",
        "value": "QMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 474,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/linguoliang/VennPainter/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "linguoliang",
          "type": "User"
        },
        "date_created": "2017-05-11T09:32:07Z",
        "date_published": "2019-04-09T07:31:28Z",
        "description": "update a command line version",
        "html_url": "https://github.com/linguoliang/VennPainter/releases/tag/v1.2.0",
        "name": "VennPainter_v1.2.0",
        "release_id": 16638731,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/linguoliang/VennPainter/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/linguoliang/VennPainter/releases/16638731",
        "value": "https://api.github.com/repos/linguoliang/VennPainter/releases/16638731",
        "zipball_url": "https://api.github.com/repos/linguoliang/VennPainter/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "linguoliang",
          "type": "User"
        },
        "date_created": "2016-03-07T12:55:12Z",
        "date_published": "2016-03-18T02:23:23Z",
        "html_url": "https://github.com/linguoliang/VennPainter/releases/tag/v1.1.0",
        "name": "VennPainter_v1.1.0",
        "release_id": 2837420,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/linguoliang/VennPainter/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/linguoliang/VennPainter/releases/2837420",
        "value": "https://api.github.com/repos/linguoliang/VennPainter/releases/2837420",
        "zipball_url": "https://api.github.com/repos/linguoliang/VennPainter/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "linguoliang",
          "type": "User"
        },
        "date_created": "2015-11-25T15:53:22Z",
        "date_published": "2015-11-25T16:02:56Z",
        "description": "This code include source code and Windows and Mac Version. Linux version will release later\n",
        "html_url": "https://github.com/linguoliang/VennPainter/releases/tag/v1.0",
        "name": "VennPainter",
        "release_id": 2185208,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/linguoliang/VennPainter/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/linguoliang/VennPainter/releases/2185208",
        "value": "https://api.github.com/repos/linguoliang/VennPainter/releases/2185208",
        "zipball_url": "https://api.github.com/repos/linguoliang/VennPainter/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:39:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 48
      },
      "technique": "GitHub_API"
    }
  ]
}