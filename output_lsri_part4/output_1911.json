{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidvi/pypanda"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-11-30T22:25:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-28T12:41:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python implementation of PANDA (Passing Attributes between Networks for Data Assimilation)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Fork description",
        "type": "Text_excerpt",
        "value": "I corrected the code after some methods have been deprecated. I added the import for AnalyzePanda and AnalyzeLioness in this README. \n\n"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9907774056681139,
      "result": {
        "original_header": "PyPanda (Python Panda)",
        "type": "Text_excerpt",
        "value": "Python implementation of PANDA (Passing Attributes between Networks for Data Assimilation)   \n"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9724784112547258,
      "result": {
        "original_header": "Panda algorithm",
        "type": "Text_excerpt",
        "value": "Thereafter availability (A) is calculated.   \nHamming distance is calculated every iteration.   \n"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/davidvi/pypanda/wiki"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidvi/pypanda/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/davidvi/pypanda/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "davidvi/pypanda"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidvi/pypanda/raw/develop/img/responsibility.png"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidvi/pypanda/raw/develop/img/availability.png"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidvi/pypanda/raw/develop/img/combine.png"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidvi/pypanda/raw/develop/img/cooperativity.png"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidvi/pypanda/raw/develop/img/co-regulatory.png"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidvi/pypanda/raw/develop/img/p.png"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidvi/pypanda/raw/develop/img/c.png"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidvi/pypanda/raw/develop/img/hamming.png"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "PyPanda (Python Panda)"
        ],
        "type": "Text_excerpt",
        "value": "PyPanda requires Python 2.7. We recommand the following commands to install PyPanda (on Ubuntu and Debian derived systems, also works on OSX):"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "With root access",
        "parent_header": [
          "PyPanda (Python Panda)",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```no-highlight\ngit clone https://github.com/davidvi/pypanda.git\ncd pypanda\nsudo python setup.py install\n```"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Without root access",
        "parent_header": [
          "PyPanda (Python Panda)",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```no-highlight\ngit clone https://github.com/davidvi/pypanda.git\ncd pypanda\npython setup.py install --user\n#to run from the command line you will need to make pypanda executable and add the bin directory to your PATH:\ncd bin\nchmod +x pypanda\necho \"$(pwd):PATH\" >> ~/.bashrc\nsource ~/.bashrc\n```\nTo run PyPanda from Windows (tested on Windows 10) install Git (https://git-scm.com/downloads) and Anaconda Python2.7 (https://www.continuum.io/downloads) and from the Anaconda Prompt run:\n```no-highlight\ngit clone https://github.com/davidvi/pypanda.git\ncd pypanda\npython setup.py install\n```"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9986070861369688,
      "result": {
        "original_header": "Panda algorithm",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/davidvi/pypanda/raw/develop/img/responsibility.png\" height=\"30\">   \n<img src=\"https://github.com/davidvi/pypanda/raw/develop/img/availability.png\" height=\"30\">   \n<img src=\"https://github.com/davidvi/pypanda/raw/develop/img/combine.png\" height=\"30\">   \n<img src=\"https://github.com/davidvi/pypanda/raw/develop/img/cooperativity.png\" height=\"30\">  \n<img src=\"https://github.com/davidvi/pypanda/raw/develop/img/co-regulatory.png\" height=\"30\">   \n<img src=\"https://github.com/davidvi/pypanda/raw/develop/img/p.png\" height=\"30\">  \n<img src=\"https://github.com/davidvi/pypanda/raw/develop/img/c.png\" height=\"30\">   \n<img src=\"https://github.com/davidvi/pypanda/raw/develop/img/hamming.png\" height=\"40\">   \n"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8547918666381962,
      "result": {
        "original_header": "Results",
        "type": "Text_excerpt",
        "value": "```\nExample Panda output:\nTF  Gene  Motif Force\n---------------------\nCEBPA\tAACSL\t0.0\t-0.951416589143\nCREB1\tAACSL\t0.0\t-0.904241609324\nDDIT3\tAACSL\t0.0\t-0.956471642313\nE2F1\tAACSL\t1.0\t3.6853160511\nEGR1\tAACSL\t0.0\t-0.695698519643\n\nExample lioness output:\nSample1 Sample2 Sample3 Sample4\n-------------------------------\n-0.667452814003\t-1.70433776179\t-0.158129613892\t-0.655795512803\n-0.843366539284\t-0.733709815256\t-0.84849895139\t-0.915217389738\n3.23445386464\t2.68888472802\t3.35809757371\t3.05297381396\n2.39500370135\t1.84608635425\t2.80179804094\t2.67540878165\n-0.117475863987\t0.494923925853\t0.0518448588965\t-0.0584810456421\n\nTF, Gene and Motif order is identical to the panda output file.\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/davidvi/pypanda/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pypanda"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "davidvi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 20796,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run from the terminal",
        "parent_header": [
          "PyPanda (Python Panda)",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "PyPanda can be run directly from the terminal with the following options:\n```\n-h help\n-e (required) expression values\n-m (optional) pair file of motif edges, when not provided analysis continues with Pearson correlation matrix\n-p (optional) pair file of PPI edges\n-f (optional) remove missing values (default is False)\n-o (required) output file\n-q (optional) output lioness single sample network\n```\nTo run PyPanda on the example data:\n```\n$ pypanda -e ToyData/ToyExpressionData.txt -m ToyData/ToyMotifData.txt -p ToyData/ToyPPIData.txt -f True -o test_panda.txt -q test_lioness.txt\n```\nTo reconstruct a single sample Lioness Pearson correlation network:\n```\n$ pypanda -e ToyData/ToyExpressionData.txt -o test_panda_pearson.txt -q test_lioness_pearson.txt\n```"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run from iPython notebook",
        "parent_header": [
          "PyPanda (Python Panda)",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Import PyPanda library:\n```python\nfrom pypanda import Panda\nfrom pypanda import Lioness\nimport pandas as pd\nfrom pypanda.analyze_panda import AnalyzePanda\nfrom pypanda.analyze_lioness import AnalyzeLioness\n```\nRun Panda algorithm, leave out motif and PPI data to use Pearson correlation network:\n```python\np = Panda('ToyData/ToyExpressionData.txt', 'ToyData/ToyMotifData.txt', 'ToyData/ToyPPIData.txt', remove_missing=False)\n```\nSave the results:\n```python\np.save_panda_results(file = 'Toy_Panda.pairs')\n```\nReturn a network plot:\n```python\nplot = AnalyzePanda(p)\nplot.top_network_plot(top=100, file='top_100_genes.png')\n```\nCalculate indegrees for further analysis:\n```python\nindegree = p.return_panda_indegree()\n```\nCalculate outdegrees for further analysis:\n```python\noutdegree = p.return_panda_outdegree()\n```\nRun the Lioness algorithm for single sample networks:\n```python\nl = Lioness(p)\n```\nSave Lioness results:\n```python\nl.save_lioness_results(file = 'Toy_Lioness.txt')\n```\nReturn a network plot for one of the Lioness single sample networks:\n```python\nplot = AnalyzeLioness(l)\nplot.top_network_plot(column= 0, top=100, file='top_100_genes.png')\n```"
      },
      "source": "https://raw.githubusercontent.com/davidvi/pypanda/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:42:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 38
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}