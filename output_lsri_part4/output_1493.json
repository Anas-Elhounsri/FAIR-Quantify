{
  "application_domain": [
    {
      "confidence": 20.99,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9899647837161233,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jguhlin/ODG"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-01-09T17:41:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-06T10:36:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ODG: Omics Database Generator - Integration toolkit for -omics data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "ODG: Omics Database Generator"
        ],
        "type": "Text_excerpt",
        "value": "Please see the [BMC Bioinformatics](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-017-1777-7) publication for more general information. You may also be interested in viewing [screenshots](https://josephguhlin.com/projects/odg-omics-database-generator/).\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9991086627048205,
      "result": {
        "original_header": "What this does",
        "type": "Text_excerpt",
        "value": "This program collates genome files and output from genomic analysis programs to create a graph database for querying genomic data across domains. This program is stable and database structure is well defined. \n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9217302070565633,
      "result": {
        "original_header": "Releases",
        "type": "Text_excerpt",
        "value": "ODG is offered as 2 releases, and should work on Windows, Mac, and *nix Systems. *nix systems are preferred, but ODG is developed and tested primarily on Windows. \n \n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999347175427749,
      "result": {
        "original_header": "Test-drive ODG",
        "type": "Text_excerpt",
        "value": "This version contains a completed database built with publicly available data and compiled information for Arabidopsis thaliana, Glycine max, Medicago truncatula, and Phaseolus vulgaris. It is provided here to provide a way for you to test out the features of ODG and see if it is right for you.   \n \n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9992876323656987,
      "result": {
        "original_header": "Empty ODG",
        "type": "Text_excerpt",
        "value": "This version contains no test data and is ready to be populated with your genomes and data of choice. ODG is now bundled as an installer. To download the installer, click on this link:\n \n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9776373827296285,
      "result": {
        "original_header": "Accessing ODG's Generated Database Programmatically",
        "type": "Text_excerpt",
        "value": "To access ODG's database directly, you must use a Neo4j library/package for your chosen language. This will allow you to access Neo4j via it's REST API. To do this you must mount the database using Neo4j's database software directly. I've written up [tutorial on doing this](josephguhlin.com/odg-neo4j-web-console/amp).  \nTutorials for accessing ODG's database from R is coming soon.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9966666718747178,
      "result": {
        "original_header": "Future",
        "type": "Text_excerpt",
        "value": "I am currently updating ODG's web interfaces to be more responsive. This is happening in a separate branch at this time.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jguhlin/odg/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQ",
        "parent_header": [
          "ODG: Omics Database Generator"
        ],
        "type": "Text_excerpt",
        "value": "Please see the FAQ for additional information if you are having trouble.\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jguhlin/ODG/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jguhlin/ODG"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ODG: Omics Database Generator"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release_scripts/odg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release_scripts/run-blast-scripts.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release_scripts/query-server.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release_scripts/create-blast-scripts.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release_scripts/create-db.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release_scripts/start-config.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/scripts/pre_cmd_example_8_procs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/scripts/pbsdsh_8_procs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/example-input-files/data/950/scan.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release/odg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release/run-blast-scripts.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release/query-server.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release/create-blast-scripts.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release/create-db.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/release/start-config.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Manual",
        "parent_header": [
          "ODG: Omics Database Generator"
        ],
        "type": "Text_excerpt",
        "value": "A [manual and FAQ are available](https://github.com/jguhlin/ODG/tree/master/doc). [Screenshots are also available](https://josephguhlin.com/projects/odg-omics-database-generator/).\n\nAn [Installation Video](https://youtu.be/X7RL-pZ4ZTA) is also available. It also contains some initial steps to getting the database pipeline prepared. The set-up is similar across all platforms. A quick-start PDF / PPT guide is currently being generated.\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9750972795093867,
      "result": {
        "original_header": "For More Information",
        "type": "Text_excerpt",
        "value": "Please see the user guide, available [here](https://github.com/jguhlin/ODG/blob/master/doc/ODG%20User%20Guide.pdf)\n \n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9893955656741474,
      "result": {
        "original_header": "Releases",
        "type": "Text_excerpt",
        "value": "ODG is offered as 2 releases, and should work on Windows, Mac, and *nix Systems. *nix systems are preferred, but ODG is developed and tested primarily on Windows. \n \n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.998169367083688,
      "result": {
        "original_header": "Installer ODG",
        "type": "Text_excerpt",
        "value": "With version 1.1.0 ODG now comes as an installable file. If you have issues please check your Java version first (see above).\n[odg_installer_1.1.0.jar](https://github.com/jguhlin/ODG/releases/download/1.1.0/odg_installer_1.1.0.jar)\n \n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.965893315754049,
      "result": {
        "original_header": "Accessing ODG's Generated Database Programmatically",
        "type": "Text_excerpt",
        "value": "To access ODG's database directly, you must use a Neo4j library/package for your chosen language. This will allow you to access Neo4j via it's REST API. To do this you must mount the database using Neo4j's database software directly. I've written up [tutorial on doing this](josephguhlin.com/odg-neo4j-web-console/amp).  \nTutorials for accessing ODG's database from R is coming soon.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jguhlin/ODG/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, database, database-generator, genome-annotation, genomics, graph-database, multi-omics, omics-database-generator"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/LICENSE"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2016 The Cytoscape Consortium\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \u201cSoftware\u201d), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/resources/query-server/js/cytoscape/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "ODG: Omics Database Generator"
        ],
        "type": "Text_excerpt",
        "value": "Copyright \ufffd 2017-2018 Joseph Guhlin, Licensed under GPL v3 (see LICENSE file)\n\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ODG"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jguhlin"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Clojure",
        "size": 262287,
        "type": "Programming_language",
        "value": "Clojure"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3943,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 2132,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jguhlin",
          "type": "User"
        },
        "date_created": "2017-06-15T14:01:08Z",
        "date_published": "2017-06-20T12:45:29Z",
        "description": "ODG 1.1.0 with an installer package suitable for Windows, Linux, and Mac OS X.",
        "html_url": "https://github.com/jguhlin/ODG/releases/tag/1.1.0",
        "name": "ODG 1.1.0",
        "release_id": 6771619,
        "tag": "1.1.0",
        "tarball_url": "https://api.github.com/repos/jguhlin/ODG/tarball/1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jguhlin/ODG/releases/6771619",
        "value": "https://api.github.com/repos/jguhlin/ODG/releases/6771619",
        "zipball_url": "https://api.github.com/repos/jguhlin/ODG/zipball/1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jguhlin",
          "type": "User"
        },
        "date_created": "2017-03-28T10:54:13Z",
        "date_published": "2017-03-28T10:56:52Z",
        "description": "v1.0.0 ODG. \r\n\r\nodg-release.zip is v1.0.0 with no data.\r\nodg-test-drive.zip is v1.0.0 with test data as specified on the main page.\r\nodg-test-drive-data.zip is the data used to generate the test-drive database. Please note that this is official, publicly available data. However, for the most up-to-date data please see the official release sites.",
        "html_url": "https://github.com/jguhlin/ODG/releases/tag/1.0.0-release",
        "name": "1.0.0-release",
        "release_id": 5892374,
        "tag": "1.0.0-release",
        "tarball_url": "https://api.github.com/repos/jguhlin/ODG/tarball/1.0.0-release",
        "type": "Release",
        "url": "https://api.github.com/repos/jguhlin/ODG/releases/5892374",
        "value": "https://api.github.com/repos/jguhlin/ODG/releases/5892374",
        "zipball_url": "https://api.github.com/repos/jguhlin/ODG/zipball/1.0.0-release"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "ODG: Omics Database Generator",
          "Releases"
        ],
        "type": "Text_excerpt",
        "value": "Java 1.8 is required. You likely have Java installed on your system. If not you may download it at http://www.oracle.com/technetwork/java/javase/downloads/ \nODG is expected to work with, but not tested on, OpenJDK versions equivalent to Java 1.8. ODG is memory-intensive, at least 8GB is recommended.\n\n## Releases\n\nYou can [view our releases here.](https://github.com/jguhlin/ODG/releases/tag/1.1.0)\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:20:13",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "ODG: Omics Database Generator"
        ],
        "type": "Text_excerpt",
        "value": "Please see the documentation to see what types of files are necessary.\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "File Formats",
        "parent_header": [
          "ODG: Omics Database Generator",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "File formats and attributes within are the most important factor in taking flat 2-dimensional files and generating a connected graph database. The manual details this, although you may take a look at the example files if you have additional questions. With ODG we have striven to make it flexible and work with the output of several programs. Many output files (especailly GFF and FASTA) can be converted to work with ODG relatively easily, as it is usually renaming a field. Many programs can do this, including *nano* on Linux and Mac OS X, and [Notepad2](http://www.flos-freeware.ch/notepad2.html) on Windows, although any text editor with Find/Replace functionality can work. Window's own \"notepad\" can work although it often struggles to open larger text files, such as GFF or FASTA files. \n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "All Platforms",
        "parent_header": [
          "ODG: Omics Database Generator",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Download and extract one of the available releases.\n\nPlace files for each of your genomes in the data/ directory, one directory for each genome and genome version, or accession (strain). For Example:\n\n    data/\n         Arabidopsis_thaliana_10/\n             assembly.fasta\n             genes.gff3\n             proteins.fasta\n             ipscan_results.tsv\n         Oryza_sativa_2/\n             assembly.fasta\n             genes.gff3\n             proteins.fasta\n             ipscan_results.tsv\n         E_coli_1/\n             assembly.fasta\n             genes.gff3\n             proteins.fasta\n             ipscan_results.tsv\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Input Files",
        "parent_header": [
          "ODG: Omics Database Generator",
          "Usage",
          "All Platforms"
        ],
        "type": "Text_excerpt",
        "value": "Example input files are found in the example-input-files subdirectory on this github. They include a configuration file. You may place the configuration file in your ODG installed directory and the data files in the data directory, and proceed with database generation (create-db.bat or create-db.sh).\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Output Files",
        "parent_header": [
          "ODG: Omics Database Generator",
          "Usage",
          "All Platforms"
        ],
        "type": "Text_excerpt",
        "value": "Example output files (and input files, when necessary to generate output files) are provided here to give you an idea of what output you can expect from most command-line activities. The web interface is available in the Test Drive version of ODG, simple download it and run query-server.bat or query-server.sh and connect to http://localhost:6789/ on your computer once it has started.\n\nCommand-line queries are also available to run from the test-drive version of ODG using odg.sh or odg.bat as the initial command. Please see the manual for more information.\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "For Windows",
        "parent_header": [
          "ODG: Omics Database Generator",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To begin the configuration program double click \"odg-config.bat\" and set your browser to http://localhost:33333 after the server has started, usually a few minutes after starting.\nTo compile the database, once all intervening software has been run you can run \"odg-generate.bat\" and wait, usually a half hour to a few hours depending on the size of your dataset.\nTo run the query server, run \"odg-query.bat\" and point your web browser to http://localhost:6789\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "For *nix Systems",
        "parent_header": [
          "ODG: Omics Database Generator",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To begin the configuration program run \"./odg-config.sh\" and set your browser to http://localhost:33333 after the server has started, usually a few minutes after starting.\nTo compile the database, once all intervening software has been run you can run \"./odg-generate.sh\" and wait, usually a half hour to a few hours depending on the size of your dataset.\nTo run the query server, run \"./odg-query.sh\" and point your web browser to http://localhost:6789\n"
      },
      "source": "https://raw.githubusercontent.com/jguhlin/odg/master/README.md",
      "technique": "header_analysis"
    }
  ]
}