{
  "application_domain": [
    {
      "confidence": 23.67,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download the reference files <a id=\"9\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Installing SpliceLauncher <a id=\"7\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "\nThe reference files are the genome (Fasta) and the corresponding annotation file (GFF3):\n\n1. Reference genome in fasta format\n2. The annotation file in GFF v3 format\n\nSteps:\n1. Download Fasta genome: from [RefSeq](https://www.ncbi.nlm.nih.gov/refseq/) FTP server or from [Gencode](https://www.gencodegenes.org/ \"tittle\").\n\nFor example, human hg19 genome file from RefSeq:\n```Bash\n#the ftp URL depends on your assembly genome choice\nwget https://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh37_latest/refseq_identifiers/GRCh37_latest_genomic.fna.gz\ngunzip ./GRCh37_latest_genomic.fna.gz\n```\n\n2. Download the GFF annotation file, either from [RefSeq](https://www.ncbi.nlm.nih.gov/refseq/ \"tittle\") FTP server or from [Gencode](https://www.gencodegenes.org/ \"tittle\").\n\nFor example, human hg19 annotation file from RefSeq:\n```Bash\nwget https://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh37_latest/refseq_identifiers/GRCh37_latest_genomic.gff.gz\ngunzip ./GRCh37_latest_genomic.gff.gz\nhead ./GRCh37_latest_genomic.gff\n##gff-version 3\n#!gff-spec-version 1.21\n#!processor NCBI annotwriter\n#!genome-build GRCh37.p13\n#!genome-build-accession NCBI_Assembly:GCF_000001405.25\n#!annotation-date\n#!annotation-source\n##sequence-region NC_000001.10 1 249250621\n##species https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id=9606\nNC_000001.10\tRefSeq\tregion\t1\t249250621\t.\t+\t.\tID=id0;Dbxref=taxon:9606;Name=1;chromosome=1;gbkey=Src;genome=chromosome;mol_type=genomic DNA\nNC_000001.10\tBestRefSeq\tgene\t11874\t14409\t.\t+\t.\tID=gene0;Dbxref=GeneID:100287102,HGNC:HGNC:37102;Name=DDX11L1;description=DEAD/H-box helicase 11 like 1;gbkey=Gene;gene=DDX11L1;gene_biotype=misc_RNA;pseudo=true\nNC_000001.10\tBestRefSeq\ttranscript\t11874\t14409\t.\t+\t.\tID=rna0;Parent=gene0;Dbxref=GeneID:100287102,Genbank:NR_046018.2,HGNC:HGNC:37102;Name=NR_046018.2;gbkey=misc_RNA;gene=DDX11L1;product=DEAD/H-box helicase 11 like 1;transcript_id=NR_046018.2\nNC_000001.10\tBestRefSeq\texon\t11874\t12227\t.\t+\t.\tID=id1;Parent=rna0;Dbxref=GeneID:100287102,Genbank:NR_046018.2,HGNC:HGNC:37102;gbkey=misc_RNA;gene=DDX11L1;product=DEAD/H-box helicase 11 like 1;transcript_id=NR_046018.2\n```\n\n3. [Optional] Convert contig of RefSeq to UCSC chromosome names, you will need to download the assembly report, an [example](https://github.com/LBGC-CFB/SpliceLauncher/blob/master/dataTest/Example_assembly_report.txt \"tittle\") of this report is provide in dataTest folder but it is a truncating example so do not use for your own genome. For url example of an assembly report of GRCh37 opf RefSeq can be dowload from https://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh37_latest/refseq_identifiers/GRCh37_latest_assembly_report.txt \nUse the **--assembly_report** of INSTALL mode to launch the convertion. This step usually takes one hour.\n\n4. [Optionnal] To reduce needed memory, we can also restrict the analysis to the primary assembly, without unplaced contigs:\n```\ngrep \">\" GRCh37_latest_genomic.fna | grep -v \"unplaced genomic contig\"| grep -v \"unlocalized genomic contig\" | grep -v \"genomic patch\"| grep -v \"alternate locus\" | sed 's/^>//' > chr_names\nseqtk subseq GRCh37_latest_genomic.fna chr_names > GRCh37_latest_genomic.sub.fna\ncut -f 1 -d ' ' chr_names > chr_names_id\nhead -n 9 GRCh37_latest_genomic.gff > GRCh37_latest_genomic.sub.gff\ngrep -f chr_names_id GRCh37_latest_genomic.gff >> GRCh37_latest_genomic.sub.gff\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/LBGC-CFB/SpliceLauncher"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-04-25T08:18:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-28T15:51:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RNAseq pipeline for alternative splicing junctions"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9083046133687948,
      "result": {
        "original_header": "Option for Align mode <a id=\"15\"></a>",
        "type": "Text_excerpt",
        "value": "**-F, --fastq** /path/to/fastq/\n* Repository of the FASTQ files \n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8672501193371175,
      "result": {
        "original_header": "Option for Count mode <a id=\"16\"></a>",
        "type": "Text_excerpt",
        "value": "**-B, --bam** /path/to/BAM files\n* Repository of the BAM folder \n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8724549584904027,
      "result": {
        "original_header": "Option for SpliceLauncher mode <a id=\"17\"></a>",
        "type": "Text_excerpt",
        "value": "**--transcriptList** /path/to/transcriptList.txt\n* Set the list of transcripts to use as reference \n**--txtOut**\n* Print main output in text instead of xls \n**--min_cov** 5\n* Minimal number of read supporting a junction (Integer) \nIf list of transcripts (--TranscriptList):\n**--removeOther**\n* Remove the genes with unselected transcripts to improve runtime \n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.993360249317597,
      "result": {
        "original_header": "Authors <a id=\"18\"></a>",
        "type": "Text_excerpt",
        "value": "> **Cite as:** SpliceLauncher: a tool for detection, annotation and relative quantification of alternative junctions from RNAseq data\nRapha\u00ebl Leman, Valentin Harter, Alexandre Atkinson, Gr\u00e9goire Davy, Antoine Rousselin, Etienne Muller, Laurent Cast\u00e9ra, Fr\u00e9deric Lemoine, Pierre de la Grange, Marine Guillaud-Bataille, Dominique Vaur, Sophie Krieger, [Bioinformatics](https://doi.org/10.1093/bioinformatics/btz784 \"tittle\")\n \n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download the reference files <a id=\"9\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Installing SpliceLauncher <a id=\"7\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "\nThe reference files are the genome (Fasta) and the corresponding annotation file (GFF3):\n\n1. Reference genome in fasta format\n2. The annotation file in GFF v3 format\n\nSteps:\n1. Download Fasta genome: from [RefSeq](https://www.ncbi.nlm.nih.gov/refseq/) FTP server or from [Gencode](https://www.gencodegenes.org/ \"tittle\").\n\nFor example, human hg19 genome file from RefSeq:\n```Bash\n#the ftp URL depends on your assembly genome choice\nwget https://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh37_latest/refseq_identifiers/GRCh37_latest_genomic.fna.gz\ngunzip ./GRCh37_latest_genomic.fna.gz\n```\n\n2. Download the GFF annotation file, either from [RefSeq](https://www.ncbi.nlm.nih.gov/refseq/ \"tittle\") FTP server or from [Gencode](https://www.gencodegenes.org/ \"tittle\").\n\nFor example, human hg19 annotation file from RefSeq:\n```Bash\nwget https://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh37_latest/refseq_identifiers/GRCh37_latest_genomic.gff.gz\ngunzip ./GRCh37_latest_genomic.gff.gz\nhead ./GRCh37_latest_genomic.gff\n##gff-version 3\n#!gff-spec-version 1.21\n#!processor NCBI annotwriter\n#!genome-build GRCh37.p13\n#!genome-build-accession NCBI_Assembly:GCF_000001405.25\n#!annotation-date\n#!annotation-source\n##sequence-region NC_000001.10 1 249250621\n##species https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id=9606\nNC_000001.10\tRefSeq\tregion\t1\t249250621\t.\t+\t.\tID=id0;Dbxref=taxon:9606;Name=1;chromosome=1;gbkey=Src;genome=chromosome;mol_type=genomic DNA\nNC_000001.10\tBestRefSeq\tgene\t11874\t14409\t.\t+\t.\tID=gene0;Dbxref=GeneID:100287102,HGNC:HGNC:37102;Name=DDX11L1;description=DEAD/H-box helicase 11 like 1;gbkey=Gene;gene=DDX11L1;gene_biotype=misc_RNA;pseudo=true\nNC_000001.10\tBestRefSeq\ttranscript\t11874\t14409\t.\t+\t.\tID=rna0;Parent=gene0;Dbxref=GeneID:100287102,Genbank:NR_046018.2,HGNC:HGNC:37102;Name=NR_046018.2;gbkey=misc_RNA;gene=DDX11L1;product=DEAD/H-box helicase 11 like 1;transcript_id=NR_046018.2\nNC_000001.10\tBestRefSeq\texon\t11874\t12227\t.\t+\t.\tID=id1;Parent=rna0;Dbxref=GeneID:100287102,Genbank:NR_046018.2,HGNC:HGNC:37102;gbkey=misc_RNA;gene=DDX11L1;product=DEAD/H-box helicase 11 like 1;transcript_id=NR_046018.2\n```\n\n3. [Optional] Convert contig of RefSeq to UCSC chromosome names, you will need to download the assembly report, an [example](https://github.com/LBGC-CFB/SpliceLauncher/blob/master/dataTest/Example_assembly_report.txt \"tittle\") of this report is provide in dataTest folder but it is a truncating example so do not use for your own genome. For url example of an assembly report of GRCh37 opf RefSeq can be dowload from https://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh37_latest/refseq_identifiers/GRCh37_latest_assembly_report.txt \nUse the **--assembly_report** of INSTALL mode to launch the convertion. This step usually takes one hour.\n\n4. [Optionnal] To reduce needed memory, we can also restrict the analysis to the primary assembly, without unplaced contigs:\n```\ngrep \">\" GRCh37_latest_genomic.fna | grep -v \"unplaced genomic contig\"| grep -v \"unlocalized genomic contig\" | grep -v \"genomic patch\"| grep -v \"alternate locus\" | sed 's/^>//' > chr_names\nseqtk subseq GRCh37_latest_genomic.fna chr_names > GRCh37_latest_genomic.sub.fna\ncut -f 1 -d ' ' chr_names > chr_names_id\nhead -n 9 GRCh37_latest_genomic.gff > GRCh37_latest_genomic.sub.gff\ngrep -f chr_names_id GRCh37_latest_genomic.gff >> GRCh37_latest_genomic.sub.gff\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/raphaelleman/SpliceLauncher/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/LBGC-CFB/SpliceLauncher/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LBGC-CFB/SpliceLauncher"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SpliceLauncher"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/SpliceLauncher.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/scripts/pipelineRNAseq.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites to install SpliceLauncher<a id=\"2\"></a>",
        "parent_header": [
          "SpliceLauncher"
        ],
        "type": "Text_excerpt",
        "value": "\nThe SpliceLauncher pipeline needs to install the following tools and R librairies:\n\n* STAR (v2.7 or later)\n* samtools (v1.3 or later)\n* BEDtools (v2.17 or later)\n* R with *WriteXLS* and *Cairo* packages\n* Perl\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "STAR <a id=\"3\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Prerequisites to install SpliceLauncher<a id=\"2\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Following instruction were from the [STAR manual](https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf \"Title\")\n\nGet the g++ compiler for linux\n\n```Bash\nsudo apt-get update\nsudo apt-get install g++\nsudo apt-get install make\n```\n\nDownload the [latest release](https://github.com/alexdobin/STAR/releases/latest \"Title\") and uncompress it\n\n```Bash\n# Get latest STAR source\nversion=\"2.7.0c\"\nwget https://github.com/alexdobin/STAR/archive/${version}.tar.gz\ntar -xzf ${version}.tar.gz\ncd STAR-${version}\n\n# Alternatively, get STAR source using git\ngit clone https://github.com/alexdobin/STAR.git\n```\n\nCompile under Linux\n\n```Bash\n# Compile\ncd STAR/source\nmake STAR\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Samtools <a id=\"4\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Prerequisites to install SpliceLauncher<a id=\"2\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Download the samtools package at: https://github.com/samtools/samtools/releases/latest\n\nConfigure samtools for linux:\n\n```Bash\ncd samtools-1.x\n./configure --prefix=/where/to/install\nmake\nmake install\n```\n\nFor more information, please see the [samtools manual](http://www.htslib.org/doc/samtools.html \"Title\")\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BEDtools <a id=\"5\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Prerequisites to install SpliceLauncher<a id=\"2\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Installation of BEDtools for linux:\n\n```Bash\nwget https://github.com/arq5x/bedtools2/releases/download/v2.25.0/bedtools-2.25.0.tar.gz\ntar -zxvf bedtools-2.25.0.tar.gz\ncd bedtools2\nmake\n```\n\nFor more information, please see the [BEDtools tutorial](http://quinlanlab.org/tutorials/bedtools/bedtools.html \"Title\")\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install R libraries <a id=\"6\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Prerequisites to install SpliceLauncher<a id=\"2\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "The library WriteXLS allows to save result in xlsx format if you do not want to install it, use the *--txtOut* option. \nThe library Cairo allows to print result in pdf format if you do not want to install it, do not add *--Graphics* option.\nOpen the R console:\n\n```R\ninstall.packages(\"WriteXLS\")\ninstall.packages(\"Cairo\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing SpliceLauncher <a id=\"7\"></a>",
        "parent_header": [
          "SpliceLauncher"
        ],
        "type": "Text_excerpt",
        "value": "\nDownload the latest release from of SpliceLauncher source using git\n\n```Bash\ngit clone https://github.com/LBGC-CFB/SpliceLauncher\ncd ./SpliceLauncher\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Singularity image <a id=\"8\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Installing SpliceLauncher <a id=\"7\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "As the Singularity image config file is not writable, you need to use a local version of the  [config file](https://github.com/LBGC-CFB/SpliceLauncher/blob/master/config.cfg \"tittle\")\nSpliceLauncher and all its dependencies are also integrated in a Singularity image:\n\n1. To build it:\n\n```Bash\nsudo singularity build /path/to/SpliceLauncher.simg /path/to/splicelauncher.recipe\n```\n\n2. To use it\n\n```Bash\nsudo singularity run /path/to/SpliceLauncher.simg --config /path/to/my_config.cfg --help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configure SpliceLauncher with INSTALL mode <a id=\"10\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Installing SpliceLauncher <a id=\"7\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "SpliceLauncher comes with a ready to use config.cfg file. It contains the paths of software and files used by SpliceLauncher. The INSTALL mode of SpliceLauncher updates this config cfg file. If you define the path to GFF (v3) file and path to the FASTA genome, the INSTALL mode will extract all necessary information from this GFF and indexing the STAR genome. This informations are stored in a BED file that contains the exon coordinates, in a sjdb file that contains the intron coordinates and a text file that contains the details of transcript structures. You need to define where these files will saving by the `-O, --output` argument\n\nUse INSTALL mode of SpliceLauncher:\n\n```Bash\ncd /path/to/SpliceLauncher/\nmkdir ./refSpliceLauncher # Here this folder will contain the reference files used by SpliceLauncher\nbash ./SpliceLauncher.sh --runMode INSTALL \\\n    -O ./refSpliceLauncher \\\n    --STAR /path/to/STAR \\\n    --samtools /path/to/samtools \\\n    --bedtools /path/to/bedtools \\\n    --gff /path/to/gff \\\n    --threads < number of thread > \\\n    --fasta /path/to/fasta\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option for INSTALL mode <a id=\"14\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "SpliceLauncher options <a id=\"13\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "**-C, --config** /path/to/configuration file/\n* Path to the config.cfg file, **only** if you want to use your own config file\n\n**-O, --output** /path/to/output/\n* Directory to save the reference files (BED, sjdb, txt) and the indexed genome\n\n**--STAR** /path/to/STAR\n* Path to the STAR executable\n\n**--samtools** /path/to/samtools\n* Path to the samtools executable\n\n**--bedtools** /path/to/bedtools\n* Path to the bedtools executable\n\n**--gff** /path/to/gff file\n* Path to the GFF file (v3)\n\n**--fasta** /path/to/fasta\n* Path to the genome fasta file\n\n**--mane** /path/to/MANElistFile.txt\n* List of MANE transcripts, current version donwloaded from https://ftp.ncbi.nlm.nih.gov/refseq/MANE/MANE_human/release_1.1/MANE.GRCh38.v1.1.summary.txt.gz\n\n**--assembly_report** /path/to/GRChXX_latest_assembly_report.txt\n* Path to assembly report to convert contig in UCSC chromosome names\n\n**-t, --threads** N\n* Nb threads used to index the STAR genome\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9948634474873772,
      "result": {
        "original_header": "Option for Align mode <a id=\"15\"></a>",
        "type": "Text_excerpt",
        "value": "**--tmpDir** /path/to/tmp directory of files from alignment\n* path to directory where tempory files will saved during alignment, please point toward empty directory \n**-g, --genome** /path/to/genome\n* Path to the genome directory, **only** if you to use a genome directory different of the genome defined in config.cfg file \n**--STAR** /path/to/STAR\n* Path to the STAR executable, **only** if you to use a STAR software different of the STAR defined in config.cfg file \n**--samtools** /path/to/samtools\n* Path to the samtools executable, **only** if you to use a samtools software different of the samtools defined in config.cfg file\n \n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9501081485624385,
      "result": {
        "original_header": "Option for Count mode <a id=\"16\"></a>",
        "type": "Text_excerpt",
        "value": "**-B, --bam** /path/to/BAM files\n* Repository of the BAM folder \n**--bedtools**\\t/path/to/bedtools\n* Path to the bedtools executable, **only** if you to use a bedtools software different of the bedtools defined in config.cfg file \n**--samtools** /path/to/samtools\n* Path to the samtools executable, **only** if you to use a samtools software different of the samtools defined in config.cfg file, deprecated if use `--fastCount` option\n \n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9517832747757077,
      "result": {
        "original_header": "Option for SpliceLauncher mode <a id=\"17\"></a>",
        "type": "Text_excerpt",
        "value": "**-O, --output** /path/to/output/\n* Directory to save the results \n**--transcriptList** /path/to/transcriptList.txt\n* Set the list of transcripts to use as reference \n**-R, --RefSeqAnnot** /path/to/RefSpliceLauncher.txt\n* Transcript information file, **only** if you to use a transcript information file different of file defined in config.cfg file \n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.809669945828083,
      "result": {
        "original_header": "Repository contents<a id=\"1\"></a>",
        "type": "Text_excerpt",
        "value": "\n* dataTest: example of input files\n* scripts: complementary scripts to run SpliceLauncher\n \n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8115274921801066,
      "result": {
        "original_header": "Option for SpliceLauncher mode <a id=\"17\"></a>",
        "type": "Text_excerpt",
        "value": "**-O, --output** /path/to/output/\n* Directory to save the results \n**--SampleNames** name1|name2|name3\n* Sample names, '|'-separated, by default use the sample file names \n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/LBGC-CFB/SpliceLauncher/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "alternative-junctions, bedtools, genome-fasta, gff, rnaseq, samtools, star"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 LEMAN Raphael\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License <a id=\"19\"></a>",
        "parent_header": [
          "SpliceLauncher"
        ],
        "type": "Text_excerpt",
        "value": "\nThis project is licensed under the MIT License - see the [LICENSE](https://github.com/LBGC-CFB/SpliceLauncher/blob/master/LICENSE \"tittle\") file for details\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LBGC-CFB/SpliceLauncher/master/doc/Figure1.png"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SpliceLauncher"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "LBGC-CFB"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 102865,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 35937,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 3837,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites to install SpliceLauncher<a id=\"2\"></a>",
        "parent_header": [
          "SpliceLauncher"
        ],
        "type": "Text_excerpt",
        "value": "\nThe SpliceLauncher pipeline needs to install the following tools and R librairies:\n\n* STAR (v2.7 or later)\n* samtools (v1.3 or later)\n* BEDtools (v2.17 or later)\n* R with *WriteXLS* and *Cairo* packages\n* Perl\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "STAR <a id=\"3\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Prerequisites to install SpliceLauncher<a id=\"2\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Following instruction were from the [STAR manual](https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf \"Title\")\n\nGet the g++ compiler for linux\n\n```Bash\nsudo apt-get update\nsudo apt-get install g++\nsudo apt-get install make\n```\n\nDownload the [latest release](https://github.com/alexdobin/STAR/releases/latest \"Title\") and uncompress it\n\n```Bash\n# Get latest STAR source\nversion=\"2.7.0c\"\nwget https://github.com/alexdobin/STAR/archive/${version}.tar.gz\ntar -xzf ${version}.tar.gz\ncd STAR-${version}\n\n# Alternatively, get STAR source using git\ngit clone https://github.com/alexdobin/STAR.git\n```\n\nCompile under Linux\n\n```Bash\n# Compile\ncd STAR/source\nmake STAR\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Samtools <a id=\"4\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Prerequisites to install SpliceLauncher<a id=\"2\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Download the samtools package at: https://github.com/samtools/samtools/releases/latest\n\nConfigure samtools for linux:\n\n```Bash\ncd samtools-1.x\n./configure --prefix=/where/to/install\nmake\nmake install\n```\n\nFor more information, please see the [samtools manual](http://www.htslib.org/doc/samtools.html \"Title\")\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BEDtools <a id=\"5\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Prerequisites to install SpliceLauncher<a id=\"2\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Installation of BEDtools for linux:\n\n```Bash\nwget https://github.com/arq5x/bedtools2/releases/download/v2.25.0/bedtools-2.25.0.tar.gz\ntar -zxvf bedtools-2.25.0.tar.gz\ncd bedtools2\nmake\n```\n\nFor more information, please see the [BEDtools tutorial](http://quinlanlab.org/tutorials/bedtools/bedtools.html \"Title\")\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the SpliceLauncher tests<a id=\"11\"></a>",
        "parent_header": [
          "SpliceLauncher"
        ],
        "type": "Text_excerpt",
        "value": "\nThe example files are provided in [dataTest](https://github.com/LBGC-CFB/SpliceLauncher/tree/master/dataTest \"tittle\"), with the example data provided in single end RNAseq (1x75pb) on *BRCA1* and *BRCA2* transcripts:\n\n```Bash\ncd /path/to/SpliceLauncher\nbash ./SpliceLauncher.sh --runMode Align,Count,SpliceLauncher -F ./dataTest/fastq/ -O ./testSpliceLauncher/ \\\n    # Optional \\\n    -t <number of thread> \\\n    -m <allowed memory in bits> \\\n    --Graphics \\\n    --tmpDir /path/to/tmpDir # path to save tmp file during alignment\n ```\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output directory tree <a id=\"12\"></a>",
        "parent_header": [
          "SpliceLauncher",
          "Running the SpliceLauncher tests<a id=\"11\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "```\nSpliceLauncher/outdir\n\u251c\u2500\u2500 Bam\n\u2502   \u251c\u2500\u2500 {sample}.Aligned.sortedByCoord.out.bam\n|   \u251c\u2500\u2500 {sample}.Aligned.sortedByCoord.out.bam.csi\n|   \u251c\u2500\u2500 {sample}.Aligned.sortedByCoord.out_juncs.bed\n|   \u251c\u2500\u2500 {sample}.SJ.out.tab\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 getClosestExons\n\u2502   \u251c\u2500\u2500 {sample}.Aligned.sortedByCoord.out.count\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 {run name}_results\n\u2502   \u251c\u2500\u2500 {run name}_figures_output\n\u2502       \u251c\u2500\u2500 {run name}_{sample}.pdf\n\u2502       \u2514\u2500\u2500 ...\n\u2502   \u251c\u2500\u2500 {run name}_outputSpliceLauncher.xlsx\n\u2502   \u2514\u2500\u2500 {run name}.bed\n\u251c\u2500\u2500 {run name}.txt\n\u251c\u2500\u2500 {run name}_report_{run date}.txt\n```\n\nThe results of SpliceLauncher analysis are in **{run name}_results**.\n\nThe final results are displayed in the file *{run name}_outputSpliceLauncher.xlsx*. The scheme of this file is:\n\n| Column names | Example | Description |\n|------------:|:--------:|:------------:|\n| Conca | chr13_32915333_32920963 | The junction id (chr_start_end) |\n| chr | chr13 | Chromosome number |\n| start | 32915333 | Genomic coordinate of start junction<br/>End if on reverse strand |\n| end | 32920963 | Genomic coordinate of end junction<br/>Start if on reverse strand |\n| strand | + | Strand of the junction ('+': forward;<br/> '-':reverse) |\n| Strand_transcript | forward | Strand of transcript |\n| NM | NM_000059 | The transcript id according RefSeq nomenclature |\n| Gene | BRCA2 | Gene symbol |\n| *Sample* | 2250 | Read count |\n| *P_Sample* | 15.25659623 | % of relative expression |\n| event_type | SkipEx | The nature of junction:<br/>Physio: Natural junction<br/>SkipEx: Exon skipping<br/>5AS: Donor splice site shift<br/>3AS: Acceptor splice site shift<br/>NoData: Unannotated juntion |\n| AnnotJuncs | \u220612 | The junction names |\n| cStart | c.6841 | Transcriptomic start coordinate of the junction |\n| cEnd | c.6938 | Transcriptomic end coordinate of the junction |\n| mean_percent | 12.60242 | Average in % of relative expression across samples |\n| read_mean | 2683.769231 | Average of read count across samples |\n| nbSamp | 11 | Number of time that the junction has been seen in samples |\n| DistribAjust | - | The Distribution of junction expression (Gamma/N.binom) |\n| Significative | NO | If a sample shown an abnormal expression of the junction |\n| filterInterpretation | Unique junction | If a sample had an abnormal expression: Aberrant junction<br/>For unmodelized junction, if max expression >1%: Unique junction  |\n"
      },
      "source": "https://raw.githubusercontent.com/raphaelleman/SpliceLauncher/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 01:36:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ]
}