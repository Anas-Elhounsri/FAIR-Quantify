{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "citHeader(\"To cite parallelnewhybrid in publications use:\")\n\ncitEntry(\nentry=\"Manual\",\ntitle = \"parallelnewhybrid: an R package for the parallelization of hybrid detection using NEWHYBRIDS\",\nyear = \"2016\",\nauthor = personList(as.person(\"Brendan Wringe\"), as.person(\"Ryan Stanley\"), as.person(\"Nicholas Jeffery\"), as.person(\"Eric Anderson\"), as.person(\"Ian Bradbury\")),\nurl = \"https://github.com/bwringe/parallelnewhybrid\",\ndoi = \"complete\",\ntextVersion = paste(\"Brendan Wringe, Ryan Stanley, Nicholas Jeffery, Eric Anderson, Ian Bradbury, (2016). parallelnewhybrid: an R package for the parallelization of hybrid detection using NEWHYBRIDS. R package version 0.0.0.9002. https://github.com/bwringe/parallelnewhybrid. doi : to_complete\")\n)\n"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/inst/CITATION",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bwringe/parallelnewhybrid"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-02-29T15:54:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-16T16:55:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9342327563662463,
      "result": {
        "original_header": "parallelnh_xx.R",
        "type": "Text_excerpt",
        "value": "### ***parallelnewhybrid*** is an R package designed to parallelize *NewHybrids* analyses \n\n***  \nPlease ensure that you have the correct version of **NewHybrids** installed. The source code and instructions for installation can be found at (<https://github.com/eriqande/newhybrids>) \n###Function descriptions\n<h4 class=\"text-primary\">parallelnh_xx.R</h4>\nAllows *NewHybrids* (Anderson and Thompson 2002) to be run in parallel. A job (*NewHybrids* analysis) is assigned to each of the *c* cores available in the computer. As each task finishes, a new analysis is assigned to the idled core.  \n**parallelnewhybrid** will attempt to analyze all *NewHybrids* format files in the folder specified by the user through the *folder.data* argument. Therefore, it is essential this folder contain only the files the user wishes to analyze, and optionally their associated individual file(s).  \nThe user can must also specify the length of the Markov chain Monte Carlo (MCMC) burn-in and subsequent run length using the *burnin* and *sweeps* parameters.  \n<span style = \"color:red\"> <strong>NOTE:</strong></span> There are **three operating system-specific versions** of the **parallelnh_xx** function because of the different ways in which the operating systems handle forking of processes.   \n"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8560360252812371,
      "result": {
        "original_header": "Example datasets:",
        "type": "Text_excerpt",
        "value": "**Example dataset** | **Contents**  \n------------|---------------------------------------------------------------  \n*SimPops\\_S1R1_NH* | A *NewHybrids* format file. To analyze this file using the function **parallelnh_xx**, save it with the extension \".txt\" to an empty folder on your hard drive, then provide **parallelnh_xx** with the file path to the folder. To run in parallel, after saving the file, copy it and give the copies unique names. **parallelnh_xx** will attempt to analyze all files which do not contain \"individuals.txt\" within the file name, so it is essential that only *NewHybrids* formatted files, and their associated individual files be present in the folder provided to **parallelnh_xx**.\n*SimPops\\_S1R1_NH_individuals* | The individual file associated with *SimPops\\_S1R1_NH*. A single copy of this file should be saved to the same folder in which *SimPops\\_S1R1_NH* is saved. The filename must end in \"individuals.txt\". \n"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8902363254952137,
      "result": {
        "original_header": "Important Notes:",
        "type": "Text_excerpt",
        "value": "* The folder in which *NewHybrids* resides must be named \"newhybrids\". If it is named anything else, the function will fail.  \n* All file paths must end in \"/\". If they do not, the function may fail. As well, it is preferable to place all folders such that the file path to them does not contain spaces.  \n* The first time the function is run, it may trigger warnings from the operating system, this is normal. Further, the function may not work properly in newer versions of Windows unless R is run as Administrator.   \n"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9223616935112859,
      "result": {
        "original_header": "**parallelnewhybrid** Contributors",
        "type": "Text_excerpt",
        "value": "**Reference**\nAnderson EC, Thompson EA. A model-based method for identifying\nspecies hybrids using multilocus genetic data.\nGenetics. Genetics Society of America;\n2002;160: 1217-1229. \n\nTo cite the current version of **parallelnewhybrid**, please refer to our zenodo DOI: [![DOI](https://zenodo.org/badge/21962/bwringe/parallelnewhybrid.svg)](https://zenodo.org/badge/latestdoi/21962/bwringe/parallelnewhybrid) \n"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bwringe/parallelnewhybrid/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bwringe/parallelnewhybrid/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bwringe/parallelnewhybrid"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "parallelnewhybrid"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/21962/bwringe/parallelnewhybrid"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/21962/bwringe/parallelnewhybrid"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999927069819188,
      "result": {
        "original_header": "parallelnh_xx.R",
        "type": "Text_excerpt",
        "value": "\n***  \nPlease ensure that you have the correct version of **NewHybrids** installed. The source code and instructions for installation can be found at (<https://github.com/eriqande/newhybrids>) \n**parallelnh version**|**Operating system**\n------------|----------\n**parallelnh_OSX** | OS X\n**parallelnh_WIN** | Windows\n**parallelnh_LINUX** | Linux (Ubuntu) \n"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9589655184493276,
      "result": {
        "original_header": "Example datasets:",
        "type": "Text_excerpt",
        "value": "**Example dataset** | **Contents**  \n------------|---------------------------------------------------------------  \n*SimPops\\_S1R1_NH* | A *NewHybrids* format file. To analyze this file using the function **parallelnh_xx**, save it with the extension \".txt\" to an empty folder on your hard drive, then provide **parallelnh_xx** with the file path to the folder. To run in parallel, after saving the file, copy it and give the copies unique names. **parallelnh_xx** will attempt to analyze all files which do not contain \"individuals.txt\" within the file name, so it is essential that only *NewHybrids* formatted files, and their associated individual files be present in the folder provided to **parallelnh_xx**.\n*SimPops\\_S1R1_NH_individuals* | The individual file associated with *SimPops\\_S1R1_NH*. A single copy of this file should be saved to the same folder in which *SimPops\\_S1R1_NH* is saved. The filename must end in \"individuals.txt\". \n"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9323126270848963,
      "result": {
        "type": "Text_excerpt",
        "value": "**Parameter** | **Description**\n------------|---------------------------------------------------------------  \n*folder.data*| A file path to the folder in which the *NewHybrids* formatted files to be analyzed, and their associated individual file reside.\n*where.NH* | A file path to the *NewHybrids* installation folder. NOTE: The name of this folder must be named \"newhybrids\". If it is named anything else the function will fail.\n*burnin* | An integer specifying how many burn-in steps *NewHybrids* is to run\n*sweeps* | An integer specifying how many sweep steps *NewHybrids* is to run  \n```r\n\n### ANALYSIS OF EXAMPLE DATA\n\n## Get the file path to the working directory, will be used to allow a universal example\npath.hold <- getwd()\n\n## Get the individual file included along with the parallelnewhybrid package and make it an object\nsim_inds <- parallelnewhybrid::SimPops_S1R1_NH_individuals\n\n## Get the genotype data file included along with the parallelnewhybrid package and make it an object\nsim_data <- parallelnewhybrid::SimPops_S1R1_NH\n\n## Gave the individual data to the working directory as a file called \"SimPops_S1R1_NH_individuals.txt\"\nwrite.table(x = sim_inds, file = paste0(path.hold, \"/SimPops_S1R1_NH_individuals.txt\"), row.names = FALSE, col.names = FALSE, quote = FALSE)\n\n## Save the genotype data to the working directory as a file called \"SimPops_S1R1_NH.txt\"\nwrite.table(x = sim_data, file = paste0(path.hold, \"/SimPops_S1R1_NH.txt\"), row.names = FALSE, col.names = FALSE, quote = FALSE)\n\n## Create an empty folder within the working directory. Recall, parallelnewhybrids will analyze all files within the folder it is specified, but if there are files that are not NewHybrids format, or individual files, it will fail.\ndir.create(paste0(path.hold, \"/parallelnewhybrids example\"))\n\n## Copy the individual file to the new folder\nfile.copy(from = paste0(path.hold, \"/SimPops_S1R1_NH_individuals.txt\"), to = paste0(path.hold, \"/parallelnewhybrids example\"))\n\n## Copy the genotype data file to the new folder\nfile.copy(from = paste0(path.hold, \"/SimPops_S1R1_NH.txt\"), to = paste0(path.hold, \"/parallelnewhybrids example\"))\n\n## Create two copies of the genotype data file to act as technical replicates of the NewHybrids simulation based analysis. This will also serve demonstrate the parallel capabilities of parallelnewhybrid.\nfile.copy(from = paste0(path.hold, \"/parallelnewhybrids example/SimPops_S1R1_NH.txt\"), to = paste0(path.hold, \"/parallelnewhybrids example/SimPops_S1R2_NH.txt\"))\n\nfile.copy(from = paste0(path.hold, \"/parallelnewhybrids example/SimPops_S1R1_NH.txt\"), to = paste0(path.hold, \"/parallelnewhybrids example/SimPops_S2R3_NH.txt\"))\n\n## Clean up the working directory by deleting the two files\nfile.remove(paste0(path.hold, \"/SimPops_S1R1_NH_individuals.txt\"))\n\nfile.remove(paste0(path.hold, \"/SimPops_S1R1_NH.txt\"))\n\n## Create an object that is the file path to the folder in which NewHybrids is installed. Note: this folder must be named \"newhybrids\"\nyour.NH <- \"YOUR PATH/newhybrids/\"\n\n## Execute parallelnh. NOTE: \"xx\" must be replaced by the correct designation for your operating system. burnin and sweep values have been chosen for demonstration only.\nparallelnh_xx(folder.data = paste0(path.hold, \"/parallelnewhybrids example/\"), where.NH = your.NH, burnin = 100, sweeps = 100)\n\n\n## Clean up everything by deleting the example folder. Note: comment characters have been added to prevent this command being run accidently.\nunlink(paste0(path.hold, \"/parallelnewhybrids example/\"), recursive = TRUE)\n\n\n```\n \n### Important Notes: \n"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9458223195934519,
      "result": {
        "original_header": "**parallelnewhybrid** Contributors",
        "type": "Text_excerpt",
        "value": "* Brendan Wringe <https://github.com/bwringe>; bwringe(at)gmail.com; Corresponding author  \n* Dr. Ian Bradbury <http://tinyurl.com/h3qrhkv>  \n* Dr. Nick Jeffery <https://github.com/NickJeff13>  \n* Dr. Ryan Ronald Edward Stanley <https://github.com/rystanley>  \n* If you don't understand anything, please contact me (bwringe[at]gmail.com)\n* Any ideas on how to improve the functionality are very much appreciated.\n* If you spot a typo, feel free to edit and send a pull request.   \n"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8875328096654105,
      "result": {
        "type": "Text_excerpt",
        "value": "###How to use:  \n####Example datasets:  \nExample datasets have been provided as R images (.rda files). These can be loaded into your workspace using the ``data()`` function. \n**Parameter** | **Description**\n------------|---------------------------------------------------------------  \n*folder.data*| A file path to the folder in which the *NewHybrids* formatted files to be analyzed, and their associated individual file reside.\n*where.NH* | A file path to the *NewHybrids* installation folder. NOTE: The name of this folder must be named \"newhybrids\". If it is named anything else the function will fail.\n*burnin* | An integer specifying how many burn-in steps *NewHybrids* is to run\n*sweeps* | An integer specifying how many sweep steps *NewHybrids* is to run  \n```r\n\n### ANALYSIS OF EXAMPLE DATA\n\n## Get the file path to the working directory, will be used to allow a universal example\npath.hold <- getwd()\n\n## Get the individual file included along with the parallelnewhybrid package and make it an object\nsim_inds <- parallelnewhybrid::SimPops_S1R1_NH_individuals\n\n## Get the genotype data file included along with the parallelnewhybrid package and make it an object\nsim_data <- parallelnewhybrid::SimPops_S1R1_NH\n\n## Gave the individual data to the working directory as a file called \"SimPops_S1R1_NH_individuals.txt\"\nwrite.table(x = sim_inds, file = paste0(path.hold, \"/SimPops_S1R1_NH_individuals.txt\"), row.names = FALSE, col.names = FALSE, quote = FALSE)\n\n## Save the genotype data to the working directory as a file called \"SimPops_S1R1_NH.txt\"\nwrite.table(x = sim_data, file = paste0(path.hold, \"/SimPops_S1R1_NH.txt\"), row.names = FALSE, col.names = FALSE, quote = FALSE)\n\n## Create an empty folder within the working directory. Recall, parallelnewhybrids will analyze all files within the folder it is specified, but if there are files that are not NewHybrids format, or individual files, it will fail.\ndir.create(paste0(path.hold, \"/parallelnewhybrids example\"))\n\n## Copy the individual file to the new folder\nfile.copy(from = paste0(path.hold, \"/SimPops_S1R1_NH_individuals.txt\"), to = paste0(path.hold, \"/parallelnewhybrids example\"))\n\n## Copy the genotype data file to the new folder\nfile.copy(from = paste0(path.hold, \"/SimPops_S1R1_NH.txt\"), to = paste0(path.hold, \"/parallelnewhybrids example\"))\n\n## Create two copies of the genotype data file to act as technical replicates of the NewHybrids simulation based analysis. This will also serve demonstrate the parallel capabilities of parallelnewhybrid.\nfile.copy(from = paste0(path.hold, \"/parallelnewhybrids example/SimPops_S1R1_NH.txt\"), to = paste0(path.hold, \"/parallelnewhybrids example/SimPops_S1R2_NH.txt\"))\n\nfile.copy(from = paste0(path.hold, \"/parallelnewhybrids example/SimPops_S1R1_NH.txt\"), to = paste0(path.hold, \"/parallelnewhybrids example/SimPops_S2R3_NH.txt\"))\n\n## Clean up the working directory by deleting the two files\nfile.remove(paste0(path.hold, \"/SimPops_S1R1_NH_individuals.txt\"))\n\nfile.remove(paste0(path.hold, \"/SimPops_S1R1_NH.txt\"))\n\n## Create an object that is the file path to the folder in which NewHybrids is installed. Note: this folder must be named \"newhybrids\"\nyour.NH <- \"YOUR PATH/newhybrids/\"\n\n## Execute parallelnh. NOTE: \"xx\" must be replaced by the correct designation for your operating system. burnin and sweep values have been chosen for demonstration only.\nparallelnh_xx(folder.data = paste0(path.hold, \"/parallelnewhybrids example/\"), where.NH = your.NH, burnin = 100, sweeps = 100)\n\n\n## Clean up everything by deleting the example folder. Note: comment characters have been added to prevent this command being run accidently.\nunlink(paste0(path.hold, \"/parallelnewhybrids example/\"), recursive = TRUE)\n\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bwringe/parallelnewhybrid/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ci.appveyor.com/api/projects/status/github/bwringe/parallelnewhybrid?branch=master&amp;svg=true"
      },
      "source": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "parallelnewhybrid"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bwringe"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 21972,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bwringe/parallelnewhybrid/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bwringe",
          "type": "User"
        },
        "date_created": "2016-05-10T17:36:50Z",
        "date_published": "2016-05-10T17:40:15Z",
        "description": "Now includes more detailed working example.\n",
        "html_url": "https://github.com/bwringe/parallelnewhybrid/releases/tag/1.0.1",
        "name": "parallelnewybrid: an R package for the parallelization of hybrid detection using NEWHYBRIDS",
        "release_id": 3195855,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/bwringe/parallelnewhybrid/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/bwringe/parallelnewhybrid/releases/3195855",
        "value": "https://api.github.com/repos/bwringe/parallelnewhybrid/releases/3195855",
        "zipball_url": "https://api.github.com/repos/bwringe/parallelnewhybrid/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bwringe",
          "type": "User"
        },
        "date_created": "2016-05-06T14:16:08Z",
        "date_published": "2016-05-10T15:46:27Z",
        "description": "First release of package.\n",
        "html_url": "https://github.com/bwringe/parallelnewhybrid/releases/tag/1.0.01",
        "name": "parallelnewybrid: an R package for the parallelization of hybrid detection using NEWHYBRIDS",
        "release_id": 3194995,
        "tag": "1.0.01",
        "tarball_url": "https://api.github.com/repos/bwringe/parallelnewhybrid/tarball/1.0.01",
        "type": "Release",
        "url": "https://api.github.com/repos/bwringe/parallelnewhybrid/releases/3194995",
        "value": "https://api.github.com/repos/bwringe/parallelnewhybrid/releases/3194995",
        "zipball_url": "https://api.github.com/repos/bwringe/parallelnewhybrid/zipball/1.0.01"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:15:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ]
}