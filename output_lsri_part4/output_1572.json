{
  "application_domain": [
    {
      "confidence": 67.28,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MarcusOlivecrona/REINVENT"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-05-05T14:21:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-11-01T09:18:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Molecular De Novo design using Recurrent Neural Networks and Reinforcement Learning"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9746926438284116,
      "result": {
        "original_header": "Molecular De Novo design using Recurrent Neural Networks and Reinforcement Learning",
        "type": "Text_excerpt",
        "value": "Searching chemical space as described in: \n"
      },
      "source": "https://raw.githubusercontent.com/MarcusOlivecrona/REINVENT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9815257793029787,
      "result": {
        "original_header": "Notes",
        "type": "Text_excerpt",
        "value": "The current version is a PyTorch implementation that differs in several ways from the original implementation described in the paper. This version works better in most situations and is better documented, but for the purpose of reproducing results from the paper refer to [Release v1.0.1](https://github.com/MarcusOlivecrona/REINVENT/releases/tag/v1.0.1) \nDifferences from implmentation in the paper:\n* Written in PyTorch/Python3.6 rather than TF/Python2.7\n* SMILES are encoded with token index rather than as a onehot of the index. An embedding matrix is then used to transform the token index to a feature vector.\n* Scores are in the range (0,1).\n* A regularizer that penalizes high values of total episodic likelihood is included.\n* Sequences are only considered once, ie if the same sequence is generated twice in a batch only the first instance contributes to the loss.\n* These changes makes the algorithm more robust towards local minima, means much higher values of sigma can be used if needed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MarcusOlivecrona/REINVENT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MarcusOlivecrona/REINVENT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 111
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MarcusOlivecrona/REINVENT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MarcusOlivecrona/REINVENT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "REINVENT"
      },
      "source": "https://raw.githubusercontent.com/MarcusOlivecrona/REINVENT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MarcusOlivecrona/REINVENT/master/Vizard/run.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MarcusOlivecrona/REINVENT/master/images/celecoxib_analogues.gif"
      },
      "source": "https://raw.githubusercontent.com/MarcusOlivecrona/REINVENT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MarcusOlivecrona/REINVENT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright <2017> <Marcus Olivecrona>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/MarcusOlivecrona/REINVENT/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "REINVENT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "MarcusOlivecrona"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 46450,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 951,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 387,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 161,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MarcusOlivecrona/REINVENT/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1704.07555"
      },
      "source": "https://raw.githubusercontent.com/MarcusOlivecrona/REINVENT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MarcusOlivecrona",
          "type": "User"
        },
        "date_created": "2017-05-08T07:58:02Z",
        "date_published": "2017-05-08T08:38:29Z",
        "description": "Code and data to reproduce results from article.\r\n\r\n* \"saved_models.tar.gz\" contains the pretrained Priors (canonical and reduced)\r\n* \"data.tar.gz\" contains:\r\n    * clf.pkl - The SVM activity model of DRD2\r\n    * prior_trainingset_MolData Object used to sample training data for the Prior\r\n    * prior_trainingset_Voc Object used to encode/decode from SMILES to one-hot. Has to be consistent between the Prior and Agents trained from the Prior. Can use this one for the reduced Priors too. \r\n    * prior trainingsets - SMILES files containing the structures used to train the canonical and reduced Priors. Run \"python data_struct.py [SMILES file location]\" to construct MolData and Voc objects from these files to train Priors from scratch. N.B. Requires a large amount of memory for large SMILES files, modify the data_structs.py file to construct the MolData object gradually if this is a problem.\r\n    * DRD2 train, validation, and test sets including cluster IDs\r\n",
        "html_url": "https://github.com/MarcusOlivecrona/REINVENT/releases/tag/v1.0.1",
        "release_id": 6308074,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/MarcusOlivecrona/REINVENT/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/MarcusOlivecrona/REINVENT/releases/6308074",
        "value": "https://api.github.com/repos/MarcusOlivecrona/REINVENT/releases/6308074",
        "zipball_url": "https://api.github.com/repos/MarcusOlivecrona/REINVENT/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MarcusOlivecrona",
          "type": "User"
        },
        "date_created": "2017-05-05T14:41:13Z",
        "date_published": "2017-05-05T14:50:17Z",
        "description": "First release containing saved models and datasets needed to replicate the results from the paper.",
        "html_url": "https://github.com/MarcusOlivecrona/REINVENT/releases/tag/v1.0",
        "name": "First Release",
        "release_id": 6293002,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/MarcusOlivecrona/REINVENT/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MarcusOlivecrona/REINVENT/releases/6293002",
        "value": "https://api.github.com/repos/MarcusOlivecrona/REINVENT/releases/6293002",
        "zipball_url": "https://api.github.com/repos/MarcusOlivecrona/REINVENT/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "REINVENT"
        ],
        "type": "Text_excerpt",
        "value": "This package requires:\n* Python 3.6\n* PyTorch 0.1.12 \n* [RDkit](http://www.rdkit.org/docs/Install.html)\n* Scikit-Learn (for QSAR scoring function)\n* tqdm (for training Prior)\n* pexpect\n"
      },
      "source": "https://raw.githubusercontent.com/MarcusOlivecrona/REINVENT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:35:05",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 310
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "REINVENT"
        ],
        "type": "Text_excerpt",
        "value": "To train a Prior starting with a SMILES file called mols.smi:\n\n* First filter the SMILES and construct a vocabulary from the remaining sequences. `./data_structs.py mols.smi`   - Will generate data/mols_filtered.smi and data/Voc. A filtered file containing around 1.1 million SMILES and the corresponding Voc is contained in \"data\".\n\n* Then use `./train_prior.py` to train the Prior. A pretrained Prior is included.\n\nTo train an Agent using our Prior, use the main.py script. For example:\n\n* `./main.py --scoring-function activity_model --num-steps 1000`\n\nTraining can be visualized using the Vizard bokeh app. The vizard_logger.py is used to log information (by default to data/logs) such as structures generated, average score, and network weights.\n\n* `cd Vizard`\n* `./run.sh ../data/logs`\n* Open the browser at http://localhost:5006/Vizard\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/MarcusOlivecrona/REINVENT/master/README.md",
      "technique": "header_analysis"
    }
  ]
}