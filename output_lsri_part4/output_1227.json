{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biosinodx/SCcaller"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-06-09T15:43:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-04T14:25:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Single Cell Caller (SCcaller) - Identify single nucleotide variations (SNVs) from single cell sequencing data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9265754548443305,
      "result": {
        "original_header": "SCcaller",
        "type": "Text_excerpt",
        "value": "Single Cell Caller (SCcaller) - Identify single nucleotide variations (SNVs) and short insertions and deletions (INDELs) from single cell sequencing data \n"
      },
      "source": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8033076564186656,
      "result": {
        "original_header": "RELEASE NOTES",
        "type": "Text_excerpt",
        "value": "v0.0.1, 2016.03, add likelihood ratio test based on null distribution from the data resampling.\n \n"
      },
      "source": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biosinodx/SCcaller/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biosinodx/SCcaller/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biosinodx/SCcaller"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SCcaller"
      },
      "source": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.968910766879003,
      "result": {
        "original_header": "RELEASE NOTES",
        "type": "Text_excerpt",
        "value": "v1.2, 2017.05.01, allow INDEL calling, release version \nV1.1, 2016.07.25, fixing bugs, release version \nv1.0, 2016.04.26, release version \nv0.0.4, 2016.04.26, fixed bugs in readling mpileup file \nv0.0.3, 2016.04.22, default mapQ change from 20 to 40 \nv0.0.2, 2016.04.19, fix bugs - jump mpileup file column not fit problem. \nv0.0.1, 2016.03, add likelihood ratio test based on null distribution from the data resampling.\n \n"
      },
      "source": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biosinodx/SCcaller/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU Affero General Public License v3.0",
        "spdx_id": "AGPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/agpl-3.0",
        "value": "https://api.github.com/licenses/agpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Author and License",
        "parent_header": [
          "SCcaller"
        ],
        "type": "Text_excerpt",
        "value": "Authors: Xiao Dong, Yujue Wang\n\nEmail: biosinodx@gmail.com (X.D.), dong0265@umn.edu (X.D.), spsc83@gmail.com (Y.W.)\n\nLicensed under the GNU Affero General Public License version 3 or later\n\n#####"
      },
      "source": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SCcaller"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "biosinodx"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 103445,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "biosinodx",
          "type": "User"
        },
        "date_created": "2019-04-24T16:29:35Z",
        "date_published": "2019-04-24T16:34:47Z",
        "description": "Allowing parallel processing, optimizing I/O, optimizing pipeline, output in vcf format, and fixing bugs",
        "html_url": "https://github.com/biosinodx/SCcaller/releases/tag/v2.0.0",
        "name": "SCcaller (v2.0.0)",
        "release_id": 16954084,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/biosinodx/SCcaller/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/biosinodx/SCcaller/releases/16954084",
        "value": "https://api.github.com/repos/biosinodx/SCcaller/releases/16954084",
        "zipball_url": "https://api.github.com/repos/biosinodx/SCcaller/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "biosinodx",
          "type": "User"
        },
        "date_created": "2018-06-29T19:33:27Z",
        "date_published": "2018-06-29T19:35:06Z",
        "description": "Fixed bugs in reason.py.",
        "html_url": "https://github.com/biosinodx/SCcaller/releases/tag/v1.21",
        "name": "SCcaller (v1.21)",
        "release_id": 11717701,
        "tag": "v1.21",
        "tarball_url": "https://api.github.com/repos/biosinodx/SCcaller/tarball/v1.21",
        "type": "Release",
        "url": "https://api.github.com/repos/biosinodx/SCcaller/releases/11717701",
        "value": "https://api.github.com/repos/biosinodx/SCcaller/releases/11717701",
        "zipball_url": "https://api.github.com/repos/biosinodx/SCcaller/zipball/v1.21"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "biosinodx",
          "type": "User"
        },
        "date_created": "2017-09-02T17:04:09Z",
        "date_published": "2017-09-02T17:06:52Z",
        "description": "Now the SCcaller allows INDEL calling.",
        "html_url": "https://github.com/biosinodx/SCcaller/releases/tag/v1.2",
        "name": "SCcaller (v1.2)",
        "release_id": 7615052,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/biosinodx/SCcaller/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/biosinodx/SCcaller/releases/7615052",
        "value": "https://api.github.com/repos/biosinodx/SCcaller/releases/7615052",
        "zipball_url": "https://api.github.com/repos/biosinodx/SCcaller/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "biosinodx",
          "type": "User"
        },
        "date_created": "2016-08-01T00:55:10Z",
        "date_published": "2016-08-01T00:55:50Z",
        "html_url": "https://github.com/biosinodx/SCcaller/releases/tag/v1.1",
        "name": "SCcaller (v1.1)",
        "release_id": 3780382,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/biosinodx/SCcaller/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/biosinodx/SCcaller/releases/3780382",
        "value": "https://api.github.com/repos/biosinodx/SCcaller/releases/3780382",
        "zipball_url": "https://api.github.com/repos/biosinodx/SCcaller/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "biosinodx",
          "type": "User"
        },
        "date_created": "2016-06-16T21:53:38Z",
        "date_published": "2016-08-01T00:37:10Z",
        "html_url": "https://github.com/biosinodx/SCcaller/releases/tag/v1.0",
        "name": "SCcaller (v1.0)",
        "release_id": 3780340,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/biosinodx/SCcaller/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/biosinodx/SCcaller/releases/3780340",
        "value": "https://api.github.com/repos/biosinodx/SCcaller/releases/3780340",
        "zipball_url": "https://api.github.com/repos/biosinodx/SCcaller/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "DEPENDENCIES",
        "parent_header": [
          "SCcaller"
        ],
        "type": "Text_excerpt",
        "value": "python 2.7\n\npython modules os, argparse, sys, subprocess, re, collections, itertools, logging, time, functiontools, random, string, math, numpy, multiprocessing, pysam(0.15.1)\n\nsamtools v.1.9+ (Other versions not tested)\n\n#####"
      },
      "source": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:25:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "I.a When you have heterozygous SNPs pre-called from bulk DNA of the same subject,",
        "parent_header": [
          "SCcaller",
          "USAGE",
          "I. Basic usage: calling SNVs and INDELs from a cell"
        ],
        "type": "Text_excerpt",
        "value": "python sccaller_v2.0.0.py \\\n\n  --bam cell.bam \\ # bam file of a single cell\n  \n  --fasta ref.fa \\ # reference genome in fasta format\n  \n  --output cell.vcf \\ # output vcf file\n  \n  --snp_type hsnp \\ # using heterozygous SNPs pre-called from bulk DNA\n  \n  --snp_in hsnp.vcf (or bed) \\ # vcf or bed file of heterozygous SNPs pre-called from bulk DNA\n  \n  --cpu_num 8 \\ # using 8 cpu threads\n  \n  --engine samtools # using samtools engine\n"
      },
      "source": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "I.b When you do not have heterozygous SNPs pre-called from bulk DNA of the same subject, obtain SNPs from dbSNP or other databases,",
        "parent_header": [
          "SCcaller",
          "USAGE",
          "I. Basic usage: calling SNVs and INDELs from a cell"
        ],
        "type": "Text_excerpt",
        "value": "python sccaller_v2.0.0.py \\\n\n  --bam cell.bam \\ # bam file of a single cell\n  \n  --fasta ref.fa \\ # reference genome in fasta format\n  \n  --output cell.vcf \\ # output vcf file\n  \n  --snp_type dbsnp \\ # using SNPs from dbSNP database (or other database)\n  \n  --snp_in dbsnp.vcf (or bed) \\ # vcf or bed file containing all SNPs in dbSNP (or other) database\n  \n  --cpu_num 8 \\ # using 8 cpu threads\n       \n  --engine samtools # using samtools engine\n"
      },
      "source": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "II.a Step 1. Calling SNVs and INDELs from a cell together with bulk DNA in input,",
        "parent_header": [
          "SCcaller",
          "USAGE",
          "II. Calling somatic SNVs and INDELs not present in bulk DNA"
        ],
        "type": "Text_excerpt",
        "value": "python sccaller_v2.0.0.py \\\n\n  --bam cell.bam \\ # bam file of a single cell\n  \n  --bulk bulk.bam \\ # bam file of bulk DNA\n  \n  --fasta ref.fa \\ # reference genome in fasta format\n  \n  --output cell.vcf \\ # output vcf file\n  \n  --snp_type hsnp \\ # using heterozygous SNPs pre-called from bulk DNA\n  \n  --snp_in hsnp.vcf (or bed) \\ # vcf or bed file of heterozygous SNPs pre-called from bulk DNA\n  \n  --cpu_num 8 \\ # using 8 cpu threads\n     \n  --engine samtools # using samtools engine\n"
      },
      "source": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "II.b Step 2. Filtering out SNVs and INDELs observed in bulk or sequencing depth &lt;= 20x in the single cell",
        "parent_header": [
          "SCcaller",
          "USAGE",
          "II. Calling somatic SNVs and INDELs not present in bulk DNA"
        ],
        "type": "Text_excerpt",
        "value": "grep '0/1' cell.vcf | grep 'True' | awk '$7==\".\" && length($5)==1' | awk -F \"[:,]\" '$8+$9>=20' > cell.somatic.snv.vcf\n\ngrep '0/1' cell.vcf | grep 'True' | awk '$7==\".\" && length($5)>1' | awk -F \"[:,]\" '$8+$9>=20' > cell.somatic.indel.vcf\n"
      },
      "source": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "III. Notes on X/Y chromosome in males and ploidy",
        "parent_header": [
          "SCcaller",
          "USAGE"
        ],
        "type": "Text_excerpt",
        "value": "Please note, sccaller was designed assuming diploidy genome and two copies of chromosomes. It cannot be used for calling mutations from X/Y chromosome of a male subject.\n\n#####"
      },
      "source": "https://raw.githubusercontent.com/biosinodx/SCcaller/master/README.md",
      "technique": "header_analysis"
    }
  ]
}