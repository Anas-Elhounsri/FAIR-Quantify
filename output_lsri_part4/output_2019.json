{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Eitan177/targetSeqView"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-01-29T22:49:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-22T12:55:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Visualize next generation sequencing reads over putative structural variants"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.981464511378573,
      "result": {
        "original_header": "Abstract",
        "type": "Text_excerpt",
        "value": "This package is designed to evaluate structural rearrangment calls from a candidate list, the output for tools such as HYDRA (Quilan, 2010), GASV (Sindi, 2009), VariationHunter (Hormozdiari, 2010), etc. The user should have a text file with one row per candidate structural rearrangment. For each\ncandidate rearrangement, read-pairs from the two loci will be read in from a bam file and realigned three different ways.\nOne of these realignments supports the structural variant, with read-pairs realigned to a sequence representing the rearranged\nsequence (the sequence of the two loci concatenated together). The other two realignments support no structural rearrangement,\nwith read-pairs realigned to the two sequences representing contiguous fragments of the reference genome taken from each of the two loci.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9224140374273201,
      "result": {
        "original_header": "Scoring and Viewing",
        "type": "Text_excerpt",
        "value": "In this section we will view read alignments at the junctions of 3 candidate structural variants. We will use a sequencing dataset\ntaken from a target-capture exerpiment. As with the last section, we start with a text file containing the candidate structural\nvariants (in this case 1 inversion and 2 chromosomal translocations) and a bam file containing read alignments.\n```r\n## create an instance of the candidates class\ncandidateSVs <- new(\"candidates\")\nbamFilePath(candidateSVs) <- path\ncandidatesFileName(candidateSVs) <- file.path(path, \"targetCaptureSVs.txt\")\nbuild(candidateSVs) <- \"hg19\"\nreadLength(candidateSVs) <- 100\nmmRate(candidateSVs) <- precomputedTargetCapture100bpMMRate()\nindelRate(candidateSVs) <- precomputedTargetCapture100bpIndelRate()\n\n## fullScoreAndview will perform full smith-waterman realignment for all\n## reads in the 3 configurations. In addition, if the input text file\n## contains a SplitsSample column, the function will look for split-reads\n## within the bam file specified by the column 'SplitsSample'\ncandidateSVs <- fullScoreAndView(candidateSVs, verbose = TRUE, findSplitReads = TRUE)\n```\n \n```\n## [1] \"Working on event 1 of 3\"\n## [1] \"primary alignment for event 1 done\"\n## [1] \"secondary alignment (1 of 2) for event 1 done\"\n## [1] \"secondary alignment (2 of 2) for event 1 done\"\n## [1] \"Working on event 2 of 3\"\n## [1] \"primary alignment for event 2 done\"\n## [1] \"secondary alignment (1 of 2) for event 2 done\"\n## [1] \"secondary alignment (2 of 2) for event 2 done\"\n## [1] \"Working on event 3 of 3\"\n## [1] \"primary alignment for event 3 done\"\n## [1] \"secondary alignment (1 of 2) for event 3 done\"\n## [1] \"secondary alignment (2 of 2) for event 3 done\"\n```\n```r\n## The Scores for these 3 candidates:\nprint(candidateSVs@fullScore)\n```\n```\n## [1]   1.182 957.485 501.009\n```\n \n\nLet's view the negative. Read-pair alignments supporting the SV look good, but read-pair\nalignments supporting contiguous fragments also look good, especially for side 1. This is how we identify the event as a negative and explains why the event recieved a low likelihood score \n \n"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.859372670160251,
      "result": {
        "original_header": "Figure 3: A validated inversion",
        "type": "Text_excerpt",
        "value": "Lets view the second positive. Read-pair alignments supporting the SV look good, albeit for a\ndifferent reason than the first positive. In this picture we have some reads aligning well to the\nchr14 side and their partners aligning across the junction of the SV (i.e split-reads). The\nsplit-reads align well to both sides. There are a few mismatches right at the junction for these\nsplit reads but otherwise they match the reference. The contiguous fragment alignments do not look\ngood, as we would expect. Again, the flipLeftandRight option is a style preference, putting the\nchr14 junction on the left and the chr18 junction on the right.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9357484367283189,
      "result": {
        "original_header": "Bibliography",
        "type": "Text_excerpt",
        "value": "- Hormozdiari F, Hajirasouliha I, Dao P, Hach F, Yorukoglu D, Alkan C, Eichler E\nand Sahinalp S (2010). \u201cNext-Generation Variationhunter: Combinatorial Algorithms\nFor Transposon Insertion Discovery.\u201d _Bioinformatics_, *26*, pp. i350-i357. ISSN\n1367-4803, <URL: http://dx.doi.org/10.1093/bioinformatics/btq216>.\n- Quinlan A, Clark R, Sokolova S, Leibowitz M, Zhang Y, Hurles M, Mell J and Hall I\n(2010). \u201cGenome-Wide Mapping And Assembly of Structural Variant Breakpoints in\nThe Mouse Genome.\u201d _Genome Research_, *20*, pp. 623-635. ISSN 1088-9051, <URL:\nhttp://dx.doi.org/10.1101/gr.102970.109>.\n- Sindi S, Helman E, Bashir A and Raphael B (2009). \u201cA Geometric Approach For\nClassification And Comparison of Structural Variants.\u201d _Bioinformatics_, *25*,\npp. i222-i230. ISSN 1367-4803, <URL:\nhttp://dx.doi.org/10.1093/bioinformatics/btp208>.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/Eitan177/targetSeqView/wiki"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Eitan177/targetSeqView/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Eitan177/targetSeqView/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Eitan177/targetSeqView"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Installation"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.raw.githubusercontent.com/Eitan177/targetSeqView/master/vignettes/boxplots1.png"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.raw.githubusercontent.com/Eitan177/targetSeqView/master/vignettes/negative1.png"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.raw.githubusercontent.com/Eitan177/targetSeqView/master/vignettes/positive1.png"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.raw.githubusercontent.com/Eitan177/targetSeqView/master/vignettes/positive2.png"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "install directly from github\n\n```r\nlibrary(devtools)\ninstall_github(\"targetSeqView\", \"Eitan177\")\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9684981421927332,
      "result": {
        "original_header": "Figure 4: A validation chromosomal translocation",
        "type": "Text_excerpt",
        "value": "\n```r\nprint(sessionInfo(), locale = FALSE)\n```\n```\n## R version 3.0.1 (2013-05-16)\n## Platform: x86_64-apple-darwin10.8.0 (64-bit)\n## \n## attached base packages:\n## [1] grid      parallel  stats     graphics  grDevices utils     datasets \n## [8] methods   base     \n## \n## other attached packages:\n##  [1] BSgenome.Hsapiens.UCSC.hg19_1.3.19 targetSeqView_0.99                \n##  [3] doMC_1.3.0                         iterators_1.0.6                   \n##  [5] ggplot2_0.9.3.1.99                 BSgenome_1.28.0                   \n##  [7] Rsamtools_1.12.4                   Biostrings_2.28.0                 \n##  [9] GenomicRanges_1.12.5               IRanges_1.18.3                    \n## [11] BiocGenerics_0.6.0                 foreach_1.4.1                     \n## [13] knitr_1.4.1                       \n## \n## loaded via a namespace (and not attached):\n##  [1] bitops_1.0-6       codetools_0.2-8    colorspace_1.2-2  \n##  [4] compiler_3.0.1     dichromat_2.0-0    digest_0.6.3      \n##  [7] evaluate_0.4.7     formatR_0.9        gtable_0.1.2      \n## [10] labeling_0.2       MASS_7.3-28        munsell_0.4.2     \n## [13] plyr_1.8           proto_0.3-10       RColorBrewer_1.0-5\n## [16] reshape2_1.2.2     scales_0.2.3       stats4_3.0.1      \n## [19] stringr_0.6.2      tools_3.0.1        zlibbioc_1.6.0\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Eitan177/targetSeqView/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "targetSeqView"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Eitan177"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 128056,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:04:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start Example",
        "type": "Text_excerpt",
        "value": "We start with a text file containing 20 candidate deletion junctions and the bam file containing our read alignments from a whole\ngenome sequencing experiment (for the purposes of this vignette the bam file contains only reads aligning within the regions that we will\ninterrogate). The text file contains the loci allegedely involved in each deletion, one deletion per row. For each row we will load\nreads aligning to the two loci involved in the alleged deletion from our bam file, realign these reads, and calculate our\nlikelihood score.\n\n\n\n```r\nsuppressMessages(library(targetSeqView))\npath <- system.file(\"extdata\", package = \"targetSeqView\")\n## This method utilizes the foreach package for parallelization, set nodes to\n## however many cpus are available.\nnodes = 1\nregisterDoMC(nodes)\n## create an instance of the candidates class\ncandidateDels <- new(\"candidates\")\n## set the path where bam files are located (if not in the currect working\n## directory)\nbamFilePath(candidateDels) <- path\n## set the name of the text file containing candidate SVs (full path if not\n## in the working directory)\ncandidatesFileName(candidateDels) <- file.path(path, \"wholeGenomeDeletionCandidates.txt\")\n## set the build of the (human) genome\nbuild(candidateDels) <- \"hg19\"\n## set the read length\nreadLength(candidateDels) <- 101\n## set the mismatch rate for each position along the read length\nmmRate(candidateDels) <- precomputedWholeGenome101bpMMRate()\n## set the indel rate for reach position along the read length\nindelRate(candidateDels) <- precomputedWholeGenome101bpIndelRate()\n```\n\n\nnote: mismatch and indel rates may be calculated based upon reads from a bam file containing\nnormal alignments, the bamFile argument should contain the full path with the bam name if the\nbam is not in the current directory. The following 3 lines are unevaluated\n\n```r\nnormalBam <- \"Path/To/Normal/bamfile.bam\"\nerrorRates <- getErrorRate(normalBam)\nmmRate(candidateDels) <- errorRates[[\"mmRate\"]]\nindelRate(candidateDels) <- errorRates[[\"indelRate\"]]\n```\n\n\nWe first obtain likelihood scores for candidates without performing full smith-waterman\nrealignment on all reads for all 3 alignement configurations. We instead use alignment\ninformation in the cigar strings and md tags in our bam file to obtain mismatches and indels\nfor the alignments supporting SVs. In addition, We forgo, for the moment, returning a\ndata.frame formatted for our plot function. This should take a few (1-5) seconds per candidate\n\n```r\ncandidateDels <- quickScore(candidateDels, verbose = TRUE)\n```\n\n```\n## Of 20 events now working on  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n```\n\n```r\n## view values returned\nprint(candidateDels@quickScore)\n```\n\n```\n##        1        2        3        4        5        6        7        8 \n## 1280.592  896.235  881.604  793.243  556.465  844.628  741.042  461.249 \n##        9       10       11       12       13       14       15       16 \n## 1065.448  749.678 -252.563  -77.755  -41.597  -35.835  -33.225  -32.736 \n##       17       18       19       20 \n##  -28.493  -25.971  -25.165   -7.992\n```\n\n```r\n### In this case we have validation data for these candidates\nindexOfvalidated <- 1:10\nvalidated <- candidateDels@quickScore[indexOfvalidated]\nfailedvalidation <- candidateDels@quickScore[-indexOfvalidated]\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Figure 1: boxplot of likelihood scores from 20 candidates; 10 validated, 10 failed validation",
        "parent_header": [
          "Quick Start Example"
        ],
        "type": "Text_excerpt",
        "value": "```r\nboxplot(list(validated = validated, failed = failedvalidation, all = candidateDels@quickScore), \n    ylab = \"log likelihood score\")\n```\n![Distribution of 20 candidate deletions taken from a whole-genome sequencing dataset, broken down by validation status](https://raw.github.com/Eitan177/targetSeqView/master/vignettes/boxplots1.png)\n"
      },
      "source": "https://raw.githubusercontent.com/Eitan177/targetSeqView/master/README.md",
      "technique": "header_analysis"
    }
  ]
}