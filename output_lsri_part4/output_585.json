{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/markusheinonen/bamfa"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-04-12T08:58:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-10T15:35:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Bayesian metabolic flux analysis"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9906849580258807,
      "result": {
        "original_header": "BaMFA: Bayesian Metabolic Flux Analysis",
        "type": "Text_excerpt",
        "value": "Constructs a Bayesian metabolic model and samples the flux posterior: all flux vectors that are compatible with steady-state, flux upper and lower bounds and flux measurements. The flux posterior is represented by a set of flux vectors that can be analysed for flux distributions or flux pair distributions. Uses Gibbs sampling to characterise the posterior.  \nThis is a Bayesian drop-in replacement to standard flux balance analysis (FBA), metabolic flux analysis (MFA) and flux variability analyses (FVA).\n \n"
      },
      "source": "https://raw.githubusercontent.com/markusheinonen/bamfa/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8308126125071085,
      "result": {
        "original_header": "Flux distributions",
        "type": "Text_excerpt",
        "value": "Below is visualised nine example flux pair distributions in three conditions (red/blue/green). The black dot is the classic FBA solution, while the scatter plots indicate all possible flux states (from functions `bfma` and `plotfluxpair2`, See `demo.m`). \n"
      },
      "source": "https://raw.githubusercontent.com/markusheinonen/bamfa/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.951268570109668,
      "result": {
        "original_header": "Package",
        "type": "Text_excerpt",
        "value": "Main functions:\n- `sol = bfba(model,fba)`\n  - runs **Bayesian FBA** and returns set of optimal growth flux vectors\n- `sol = bmfa(model,meas,errs)`\n  - runs **Bayesian MFA** and returns sets of flux vectors compatible with measurements `meas` with errors `errs`\n- `plotfluxes(model,sol,fluxinds)`\n  - plots univariate flux distributions of fluxes `fluxinds`\n- `plotfluxpair2(model,sol,indpairs)`\n  - plots bivariate flux pair distributions (see also `plotfluxpair`) \n"
      },
      "source": "https://raw.githubusercontent.com/markusheinonen/bamfa/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/markusheinonen/bamfa/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/markusheinonen/bamfa/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "markusheinonen/bamfa"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BaMFA: Bayesian Metabolic Flux Analysis"
      },
      "source": "https://raw.githubusercontent.com/markusheinonen/bamfa/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/markusheinonen/bamfa/master/figures/core_9.png"
      },
      "source": "https://raw.githubusercontent.com/markusheinonen/bamfa/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999914904170569,
      "result": {
        "original_header": "Package",
        "type": "Text_excerpt",
        "value": "Requirements:\n- MATLAB\n- <a href=\"https://opencobra.github.io/cobratoolbox/stable/\">OpenCobra MATLAB toolbox</a> \n"
      },
      "source": "https://raw.githubusercontent.com/markusheinonen/bamfa/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/markusheinonen/bamfa/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bamfa"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "markusheinonen"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 36910,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/markusheinonen/bamfa/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1804.06673\">Bayesian Metabolic Flux Analysis reveals intracellular flux couplings</a> (arXiv"
      },
      "source": "https://raw.githubusercontent.com/markusheinonen/bamfa/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:03:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "parent_header": [
          "BaMFA: Bayesian Metabolic Flux Analysis"
        ],
        "type": "Text_excerpt",
        "value": "Run `demo.m` in MATLAB or run\n\n```\n% run FBA on the ecoli core metabolism (77 reactions)\n\naddpath code;\ninitCobraToolbox;\n\n% read model\nmodel = readCbModel('models/Ec_core_flux1','fileType','SBML');\n\n% run baseline FBA\nfba = optimizeCbModel(model);\n\n% sample, uses by default 10 chains of 200 samples with thinning = 50\nsol = bfba(model, fba);\n\n%% visualise\n\n% plot first 15 flux distributions with fba\nfigure; plotfluxes(model, sol, 1:15, fba);\n\n% plot 7x7 flux pair grid\nfigure; plotfluxpair(model, sol, [10 2 40 42 45 53 55], fba);\n\n% plot 8 example flux pairs\nfigure; plotfluxpair2(model, sol, [30 40; 30 41; 40 47; 15 17; 4 5; 1 6; 10 18; 42 45], fba);\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/markusheinonen/bamfa/master/README.md",
      "technique": "header_analysis"
    }
  ]
}