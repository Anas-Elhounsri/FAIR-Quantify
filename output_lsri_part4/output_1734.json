{
  "application_domain": [
    {
      "confidence": 25.03,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Neurosurgery-Brain-Tumor-Center-DiazLab/CONICS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-02-26T07:07:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-18T20:06:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CONICS: COpy-Number analysis In single-Cell RNA-Sequencing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8895191148842077,
      "result": {
        "original_header": "**CONICS**",
        "type": "Text_excerpt",
        "value": "CONICS works with either full transcript (e.g. Fluidigm C1) or 5'/3' tagged (e.g. 10X Genomics) data! \nThe CONICS paper has been accepted for publication in Bioinformatics. Check it out [here](https://doi.org/10.1093/bioinformatics/bty316) !\n \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9861566112909782,
      "result": {
        "original_header": "<a id=\"Calling_CNV_R\"></a> CONICSmat - Identifying CNVs from scRNA-seq using a count table",
        "type": "Text_excerpt",
        "value": "CONICSmat is an R package that can be used to identify CNVs in single cell RNA-seq data from a gene expression table, without the need of an explicit normal control dataset. CONICSmat works with either full transcript (e.g. Fluidigm C1) or 5'/3' tagged (e.g. 10X Genomics) data. A tutorial on how to use CONICSmat, and a Smart-Seq2 dataset, can be found [on the CONICSmat Wiki page [CLICK here]](https://github.com/diazlab/CONICS/wiki/Tutorial---CONICSmat;---Dataset:-SmartSeq2-scRNA-seq-of-Oligodendroglioma). \n![overview](images/conics_overview.jpg \"overview\" )\n<i> Visualizations of scRNA-seq data from [Oligodendroglioma](https://www.nature.com/articles/nature20123/) (Tirosh et al., 2016) generated with CONICSmat. </i> \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8941191102714964,
      "result": {
        "original_header": "Config file",
        "type": "Text_excerpt",
        "value": "Adjust __CONICS.cfg__ to customize the following:\n  * Path to python/samtools/bedtools/Rscript\n  * Thresholds for mapping-quality and read-count\n  * FDR for CNV calling\n   \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9870797893174237,
      "result": {
        "original_header": "Test data",
        "type": "Text_excerpt",
        "value": "A set of tumor cells from three glioblastoma patients and a normal brain control, as well as a file with genomic coordinate of large-scale CNVs are available [here](https://goo.gl/1dyafr). \n \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9664053752411674,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "All output files will be located in the directory __output_[base name]__.\n  1. __incidenceMatrix.csv__: matrix of presence/absence for all CNVs, in individual cells\n  2. Read-count distribution in CNV segments. (violin plot)\n  3. Hierarchical clustering of the single cells by CNV status. \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9401847957525716,
      "result": {
        "original_header": "<a id=\"B_allele_freqs\"></a> Integrating estimates of point-mutation minor-allele frequencies",
        "type": "Text_excerpt",
        "value": "Regions of copy-number alteration will show a drop in the frequency of reads quantifying the minor allele. Averaged over large regions of copy-number alteration, this provides an additional metric to increase confidence in single-cell CNV-calls. \n### Requirements\n  * [Python](https://www.python.org) and [R](https://cran.r-project.org/mirrors.html)\n  * [bam-readcount](https://github.com/genome/bam-readcount) \n  * [gplots](https://cran.r-project.org/web/packages/gplots/index.html) and [ggplot2](https://cran.r-project.org/web/packages/ggplot2/index.html)\n  * One directory containing the aligned tumor scRNA-seq data to be classified\n  * Two variant [VCF](https://samtools.github.io/hts-specs/VCFv4.2.pdf) files from exome-seq of (blood) control and tumor tissue, eg generated with the [GATK](https://software.broadinstitute.org/gatk/) toolkit.\n  * A file containing the genomic coordinates of the CNVs in [BED](https://genome.ucsc.edu/FAQ/FAQformat#format1) format.\n  \n### Config file\nAdjust __CONICS.cfg__ to customize the following:\n  * Path to python/bam-readcount/Rscript\n  * Path to genome which reads were aligned to (FASTA format) \n ```\n  bash run_BAf_analysis.sh [directory for tumor] [VCF file for normal exome-seq] [VCF file for tumor exome-seq] [BED file for CNV segments] [base name]\n  ```\n  * __[directory for tumor]__: path to directory containing aligned bam files to be tested. Example glioblastoma data, used in the manuscript, can be obtained [here](https://www.ebi.ac.uk/ega/studies/EGAS00001002185).\n    \n  * __[VCF file for normal exome-seq]__: Vcf file containing mutations for a control exome-seq, e.g. from blood of the patient. This file can be generated with tools like GATK toolkit.\n   \n  * __[VCF file for tumor exome-seq]__: Vcf file containing mutations detected in exome-seq of the tumor. This file can be generated with tools like GATK toolkit.\n  \n * __[BED file for CNV segments]__: tab-delimited bed file of CNV segments to be quantified.\n  \n  * __[base name]__ : base name for output directory\n   \n### Output\nAll output files will be located in the directory __output_[base name]__\n  1. ___germline-snvs.bed__: BED file containing position and BAFs from Exome-seq, generated in step 1.\n  2. ___af.txt__: TAB separated table containing the counts for the A allele at each locus in each cell, generated in step 2\n  3. ___bf.txt__: TAB separated table containing the counts for the B allele at each locus in each cell, generated in step 2\n  4. baf_hist.pdf Hierarchical clustering of the average B allele frequency in each of the loci altered by copy number for each cell, generated in step 3\n  \n![heatmap](images/heatmap_sf10345.jpg?raw=true \"B-allele heatmap\" )\n \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9777384681214797,
      "result": {
        "original_header": "<a id=\"Constructing_Tree\"></a> Phylogenetic tree contruction",
        "type": "Text_excerpt",
        "value": "### Output\n__cluster.pdf__ (phylogenetic trees) and __cluster.txt__ will be generated in the output directory. Each leaf corresponds to a clusters of cells with a common genotype. Cluster assignments for each cell will be in __cluster.txt__.  \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8721330055989541,
      "result": {
        "original_header": "<a id=\"CX_Net\"></a> Intra-clone co-expression networks",
        "type": "Text_excerpt",
        "value": "CONICS can construct the local co-expression network of a given gene, based on correlations across single cells.  \n   \n### Requirements\n  * [scde](http://hms-dbmi.github.io/scde)\n  * [PCIT](https://cran.r-project.org/web/packages/PCIT/index.html)\n  * [boot](https://cran.r-project.org/web/packages/boot/)\n  * [parallel](https://stat.ethz.ch/R-manual/R-devel/library/parallel/doc/parallel.pdf)\n  * [raster](https://cran.r-project.org/web/packages/raster/)\n  * [flashClust](https://cran.r-project.org/web/packages/flashClust/index.html)\n  \n### Config file\nAdjust __CorrelationNetwork.cfg__ to configure the following:\n  * Path to Rscript\n  * ncore: Number of cores (default: 12)\n  * cor_threshold: Starting threshold to construct the co-expression network (default: 0.9)\n  * min_neighbours: How many direct neighbours of gene of interest should be analyzed (default: 20)\n  * minRawReads: How many raw reads should map to a gene for it to be included (default: 100)\n  * percentCellsExpressing: Percentage (0.15 =15%) of cells expressing a gene for it to be included (default: 0.15)\n  * minGenesExpr: How many genes should be expressed in a cell for it to be included (default: 800)\n  * depth: How deep should the gene analysis search. (2=only direct neighbor genes would be considered) (default: 2) \n  ```\n  bash run_CorrelationNetwork.sh [input matrix] [centered gene] [base name]\n  ```\n  \n  * __[input matrix]__: tab-delimited file of read counts for each gene (rows), for each cell (columns). \n  * __[centered gene]__: a target gene of which neighbor genes are analyzed.  \n  * __[base name]__ : base name for output directory \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8961059321377627,
      "result": {
        "original_header": "<a id=\"10x\"></a> False discovery rate estimation: Cross validation",
        "type": "Text_excerpt",
        "value": "\n### Config file\nAdjust __10X_cross_validation.cfg__ to set the following:\n  * Paths to python/samtools/bedtools/Rscript\n  * Thresholds for mapping-quality and read-count.\n  * FDR for CNV calling \n  ```\n  bash run_10X_cross_validation.sh [directory for control scRNA-seq] [.bed file containing CNV segments] [base name]\n  ```\n  * __[directory for test]__: path to directory containing the aligned BAM files of the scRNA-seq control data.\n   \n  * __[.bed file for CNV segments], [base name]__ : same as described in run_CONICS.sh\n;\n### Output\nBox plot of 10 FDRs resulting from each pooled sample would be generated (__boxplot.pdf__) in the output directory.\n![10X](images/10X_boxplot.jpg?raw=true \"10Xval_Test\" )\n \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8826603378201338,
      "result": {
        "original_header": "<a id=\"Empirical\"></a> False discovery rate estimation: Empirical testing",
        "type": "Text_excerpt",
        "value": "FDRs can also be estimated by empirical testing. In the manuscript, the number of false positive CNV calls was calculated using a non-malignant [fetal brain dataset](http://dx.doi.org/10.1016/j.cell.2015.09.004). These data are independent from the [training set](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE67835) \n### Requirements\n  * [beanplot](https://www.jstatsoft.org/article/view/v028c01)\n  * [samtools](http://www.htslib.org)\n  * [bedtools](http://bedtools.readthedocs.io/en/latest)\n  \n### Config file\nAdjust __Empirical_validation.cfg__ to change the following:\n  * Paths to python/samtools/bedtools/Rscript\n  * Thresholds for mapping-quality and read count\n  * FDR for CNV calling \n  * __[directory for train]__: path to directory containing aligned bam files of scRNA-seq data used as a control to call CNVs\n    \n  * __[directory for test]__: path to directory containing aligned bam files of scRNA-seq data known not to have CNVs, used as a gold standard.\n   \n  * __[BED file for CNV segments]__ : same as described in run_CONICS.sh \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/diazlab/CONICS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Neurosurgery-Brain-Tumor-Center-DiazLab/CONICS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Neurosurgery-Brain-Tumor-Center-DiazLab/CONICS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CONICS"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/run_Tree.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/run_10X_cross_validation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/run_compareExomeSeq_vs_ScRNAseq.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/run_BAf_analysis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/run_CorrelationNetwork.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/run_CONICS.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/run_empirical_validation.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/images/conics_overview.jpg"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/images/Phyngle_violin.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/images/Phyngle_dendrogram.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/images/heatmap_sf10345.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/images/Trees_cluster.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/images/PTEN_topCorr.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/images/Compare_200.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/images/10X_boxplot.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/images/Empirical_boxplot.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9880014093214634,
      "result": {
        "original_header": "<a id=\"B_allele_freqs\"></a> Integrating estimates of point-mutation minor-allele frequencies",
        "type": "Text_excerpt",
        "value": " ```\n  bash run_BAf_analysis.sh [directory for tumor] [VCF file for normal exome-seq] [VCF file for tumor exome-seq] [BED file for CNV segments] [base name]\n  ```\n  * __[directory for tumor]__: path to directory containing aligned bam files to be tested. Example glioblastoma data, used in the manuscript, can be obtained [here](https://www.ebi.ac.uk/ega/studies/EGAS00001002185).\n    \n  * __[VCF file for normal exome-seq]__: Vcf file containing mutations for a control exome-seq, e.g. from blood of the patient. This file can be generated with tools like GATK toolkit.\n   \n  * __[VCF file for tumor exome-seq]__: Vcf file containing mutations detected in exome-seq of the tumor. This file can be generated with tools like GATK toolkit.\n  \n * __[BED file for CNV segments]__: tab-delimited bed file of CNV segments to be quantified.\n  \n  * __[base name]__ : base name for output directory\n   \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9009195974686299,
      "result": {
        "original_header": "<a id=\"Constructing_Tree\"></a> Phylogenetic tree contruction",
        "type": "Text_excerpt",
        "value": "### Requirements\n  * [Rscript](https://stat.ethz.ch/R-manual/R-devel/library/utils/html/Rscript.html)\n  * [Rphylip](https://cran.r-project.org/web/packages/Rphylip/index.html)\n  * [Phylip](http://evolution.genetics.washington.edu/phylip.html)  \n### Config file \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9257513461820293,
      "result": {
        "original_header": "<a id=\"10x\"></a> False discovery rate estimation: Cross validation",
        "type": "Text_excerpt",
        "value": "### Requirements\n  * [beanplot](https://www.jstatsoft.org/article/view/v028c01)(R package)\n  * [samtools](http://www.htslib.org)\n  * [bedtools](http://bedtools.readthedocs.io/en/latest)   \n\n### Config file\nAdjust __10X_cross_validation.cfg__ to set the following:\n  * Paths to python/samtools/bedtools/Rscript\n  * Thresholds for mapping-quality and read-count.\n  * FDR for CNV calling \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9886308679657495,
      "result": {
        "original_header": "<a id=\"Empirical\"></a> False discovery rate estimation: Empirical testing",
        "type": "Text_excerpt",
        "value": "### Requirements\n  * [beanplot](https://www.jstatsoft.org/article/view/v028c01)\n  * [samtools](http://www.htslib.org)\n  * [bedtools](http://bedtools.readthedocs.io/en/latest)\n  \n### Config file\nAdjust __Empirical_validation.cfg__ to change the following:\n  * Paths to python/samtools/bedtools/Rscript\n  * Thresholds for mapping-quality and read count\n  * FDR for CNV calling \n  ```\n  bash run_empirical_validation.sh [directory for train] [directory for test] [.bed files for CNV segments] [base name]\n  ``` \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8267754724414528,
      "result": {
        "original_header": "<a id=\"B_allele_freqs\"></a> Integrating estimates of point-mutation minor-allele frequencies",
        "type": "Text_excerpt",
        "value": " ```\n  bash run_BAf_analysis.sh [directory for tumor] [VCF file for normal exome-seq] [VCF file for tumor exome-seq] [BED file for CNV segments] [base name]\n  ```\n  * __[directory for tumor]__: path to directory containing aligned bam files to be tested. Example glioblastoma data, used in the manuscript, can be obtained [here](https://www.ebi.ac.uk/ega/studies/EGAS00001002185).\n    \n  * __[VCF file for normal exome-seq]__: Vcf file containing mutations for a control exome-seq, e.g. from blood of the patient. This file can be generated with tools like GATK toolkit.\n   \n  * __[VCF file for tumor exome-seq]__: Vcf file containing mutations detected in exome-seq of the tumor. This file can be generated with tools like GATK toolkit.\n  \n * __[BED file for CNV segments]__: tab-delimited bed file of CNV segments to be quantified.\n  \n  * __[base name]__ : base name for output directory\n   \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8293176935346125,
      "result": {
        "original_header": "<a id=\"Constructing_Tree\"></a> Phylogenetic tree contruction",
        "type": "Text_excerpt",
        "value": "### Config file \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8914054173200018,
      "result": {
        "original_header": "<a id=\"10x\"></a> False discovery rate estimation: Cross validation",
        "type": "Text_excerpt",
        "value": "  ```\n  bash run_10X_cross_validation.sh [directory for control scRNA-seq] [.bed file containing CNV segments] [base name]\n  ```\n  * __[directory for test]__: path to directory containing the aligned BAM files of the scRNA-seq control data.\n   \n  * __[.bed file for CNV segments], [base name]__ : same as described in run_CONICS.sh\n;\n### Output\nBox plot of 10 FDRs resulting from each pooled sample would be generated (__boxplot.pdf__) in the output directory.\n![10X](images/10X_boxplot.jpg?raw=true \"10Xval_Test\" )\n \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8387385027467078,
      "result": {
        "original_header": "<a id=\"Empirical\"></a> False discovery rate estimation: Empirical testing",
        "type": "Text_excerpt",
        "value": "  ```\n  bash run_empirical_validation.sh [directory for train] [directory for test] [.bed files for CNV segments] [base name]\n  ``` \n### Output\nBox plot of FDRs will be generated (__boxplot.pdf__) in the output directory.\n![empirical](images/Empirical_boxplot.jpg?raw=true \"empirical_Test\" )\n \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Neurosurgery-Brain-Tumor-Center-DiazLab/CONICS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CONICS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Neurosurgery-Brain-Tumor-Center-DiazLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 56185,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 11303,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 8526,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 6950,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "**CONICS**",
          "<a id=\"Empirical\"></a> False discovery rate estimation: Empirical testing"
        ],
        "type": "Text_excerpt",
        "value": "  * [Python](https://www.python.org) and [Perl](https://www.perl.org)\n  * [beanplot](https://www.jstatsoft.org/article/view/v028c01)\n  * [samtools](http://www.htslib.org)\n  * [bedtools](http://bedtools.readthedocs.io/en/latest)  IMPORTANT: Bedtools >2.2.5 is needed in order to correctly calculate the coverage using CONICS.\n  * Two directories, the first containing the aligned scRNA-seq data to be classified by CNV status, and a second, containing aligned scRNA-seq data to be used as a control.\n  * A file containing the genomic coordinates of the CNVs in [BED](https://genome.ucsc.edu/FAQ/FAQformat#format1) format.\n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "parent_header": [
          "**CONICS**",
          "<a id=\"Empirical\"></a> False discovery rate estimation: Empirical testing"
        ],
        "type": "Text_excerpt",
        "value": "  ```\n  bash run_CONICS.sh [directory for tumor] [directory for normal] [.bed file for CNV segments] [base name]\n  ```\n  * __[directory for tumor]__: path to directory containing aligned bam files to be tested. Example glioblastoma data, used in the manuscript, can be obtained [here](https://www.ebi.ac.uk/ega/studies/EGAS00001002185).\n    \n  * __[directory for normal]__: path to directory containing aligned bam files to be used as a control. Example nonmalignant brain data, used in the manuscript, can be obtained [here](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE67835) was used as an examples for the journal \n   \n  * __[BED file for CNV segments]__: tab-delimited bed file of CNV segments to be quantified.\n  \n      ```\n      [chromosome]\t[start]\t[end]\t[chromosome:start:end:CNV]\n      ```\n      \n      Note: the 4th column of the file must have the exact format shown here:(__Amp__: amplification, __Del__: deletion)\n  ```\n  7   19533   157408385   7:19533:157408385:Amp\n  9   19116859    32405639    9:19116859:32405639:Del\n  ```\n  * __[base name]__ : base name for output directory\n  \n"
      },
      "source": "https://raw.githubusercontent.com/diazlab/CONICS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:07:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 73
      },
      "technique": "GitHub_API"
    }
  ]
}