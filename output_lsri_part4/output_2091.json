{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/richarddurbin/pbwt"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-05-05T11:38:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-29T15:15:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Implementation of Positional Burrows-Wheeler Transform for genetic data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9533611840844859,
      "result": {
        "type": "Text_excerpt",
        "value": "The pbwt package provides a core implementation and development\nenvironment for PBWT (Positional Burrows-Wheeler Transform) methods\nfor storing and computing on genome variation data sets.   \nMore precisely, PBWT supports a run-length compressed representation\nof aligned haplotype data, on which efficient matching algorithms can\nbe built. Typically PBWT compression is much better than generic\ncompression, particularly for large numbers of haplotypes, and search\nalgorithms are linear in the query size independent of reference size. \nA description of the basic data structure and matching algorithms is\ngiven in \"Efficient haplotype matching and storage using the\nPositional Burrows-Wheeler Transform (PBWT)\", Richard Durbin\n. \nThere are various phasing and imputation methods in the software that\nare not yet published. \nApril 2024: the `-paint` and `-paintSparse` commands are described in Yaoling Yang, Richard Durbin, Astrid K. N. Iversen, and Daniel J. Lawson. 2024. \u201cSparse Haplotype-Based Fine-Scale Local Ancestry Inference at Scale Reveals Recent Selection on Immune Responses.\u201d \n"
      },
      "source": "https://raw.githubusercontent.com/richarddurbin/pbwt/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/richarddurbin/pbwt/wiki"
      },
      "source": "https://raw.githubusercontent.com/richarddurbin/pbwt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/richarddurbin/pbwt/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 37
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/richarddurbin/pbwt/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "richarddurbin/pbwt"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/richarddurbin/pbwt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation instructions",
        "type": "Text_excerpt",
        "value": "Download htslib from https://github.com/samtools/htslib, and compile it\n\n   git clone https://github.com/samtools/htslib\n   cd htslib\n   make\n   cd ..\n\nDownload and make pbwt\n\n   git clone https://github.com/richarddurbin/pbwt\n   cd pbwt\n   make\n"
      },
      "source": "https://raw.githubusercontent.com/richarddurbin/pbwt/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/richarddurbin/pbwt/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pbwt"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "richarddurbin"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 286183,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 7646,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1115,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/richarddurbin/pbwt/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:19:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 100
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Brief usage instructions",
        "type": "Text_excerpt",
        "value": "Typing\n\n    pbwt\n\nby itself gives a list of commands with brief descriptions.\n\nA quick synopsis for usage is:\n\n    macs 11000 1e6 -t 0.001 -r 0.001 > 11k.macs\n    pbwt -checkpoint 10000 -readMacs 11k.macs -write macs11k.pbwt -writeSites macs.sites\n\nNB \"checkpoint 10000\" writes out files every 10000 sites during the vcfq \nconversion to alternating checkA.{pbwt,sites} and checkB.{pbwt,sites} files.\n\n    pbwt -read macs11k.pbwt -subsample 0 10000 -write macs10k.pbwt\n    pbwt -read macs11k.pbwt -subsample 10000 1000 -write macs1k.pbwt\n    pbwt -read macs10k.pbwt -sfs > macs10k.sfs\n\ngives the site frequency spectrum for macs10k\n\n    pbwt -read macs1k.pbwt -haps macs1k.haps\n\nwrites out the haplotypes stored in macs1k\n\n    pbwt -read macs10k.pbwt -matchDynamic macs1k.pbwt > macs1k-10k.max\n\nfor each sequence in macs1k, finds maximal matches to anything in macs10k\n\n    pbwt -read macs10k.pbwt -maxWithin > macs10k.max\n\nfinds maximal matches for each sequence in macs10k to anything else in macs10k\n\nTo start from real data in a .vcf file rather than a macs simulation use\n\n    pbwt -checkpoint 10000 -readVcfGT data.vcf -writeAll data\n\nNote that -writeAll xxx will write xxx.pbwt, xxx.sites, xxx.samples and any other\nassociated files, and -readAll xxx will correspondingly read xxx.pbwt\nand any available files based on suffix.\n\npbwt is very happy to handle up to 100,000 haplotypes, probably a\nmillion.\n"
      },
      "source": "https://raw.githubusercontent.com/richarddurbin/pbwt/master/README.md",
      "technique": "header_analysis"
    }
  ]
}