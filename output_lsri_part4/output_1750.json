{
  "application_domain": [
    {
      "confidence": 0.8896606766828422,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing",
        "parent_header": [
          "McCortex: Population De Novo Assembly and Variant Calling"
        ],
        "type": "Text_excerpt",
        "value": "If you find McCortex useful, please cite our paper:\n\n* Integrating long-range connectivity information into de Bruijn graphs\n  Turner I, Garimella K, Iqbal Z, McVean G (Bioinformatics) (Advanced access 15 March 2018) https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/bty157/4938484\n\nOther Cortex papers:\n\n* De novo assembly and genotyping of variants using colored de Bruijn graphs,\n  Iqbal(*), Caccamo(*), Turner, Flicek, McVean (Nature Genetics) (2012)\n  (doi:10.1038/ng.1028) http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3272472\n* High-throughput microbial population genomics using the Cortex variation assembler,\n  Iqbal, Turner, McVean (Bioinformatics) (Nov 2012)\n  (doi:10.1093/bioinformatics/bts673) http://www.ncbi.nlm.nih.gov/pubmed/23172865\n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mcveanlab/mccortex"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Code And Contributing",
        "parent_header": [
          "McCortex: Population De Novo Assembly and Variant Calling"
        ],
        "type": "Text_excerpt",
        "value": "Issues can be submitted on github. Pull requests welcome. Please add your name\nto the AUTHORS file. Code should compile on mac/linux with clang/gcc without errors or warnings.\n\nMore on the [wiki](https://github.com/mcveanlab/mccortex/wiki/Contributing)\n\nUnit tests are run with `make test` and integration tests with `cd tests; ./run`. Both of these test suites are run automatically with Travis CI when commits are pushed to GitHub. \n\nStatic analysis can be run with [cppcheck](http://cppcheck.sourceforge.net):\n\n    cppcheck src\n\nor with [clang](http://clang-analyzer.llvm.org):\n\n    rm -rf bin/mccortex31\n    scan-build make RECOMPILE=1\n\nOccasionally we also run Coverity Scan. This is done by pushing to the `coverity_scan` branch on github, which triggers Travis CI to upload the latest code to Coverity.\n\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/2329/badge.svg)](https://scan.coverity.com/projects/2329)\n\n    git checkout coverity_scan\n    git merge develop\n    git checkout --ours .travis.yml\n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-05-07T23:23:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-30T08:39:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "De novo genome assembly and multisample variant calling"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9562908815971004,
      "result": {
        "original_header": "McCortex: Population De Novo Assembly and Variant Calling",
        "type": "Text_excerpt",
        "value": "\nMulti-sample de novo assembly and variant calling using Linked de bruijn graphs.\nVariant calling with and without a reference genome. Between closely related\nsamples or highly diverged ones. From bacterial to mammalian genomes. Minimal\nconfiguration. And it's free. \nIsaac Turner's rewrite of *cortex_var*, to handle larger populations\nwith better genome assembly, as a set of modular commands. PhD supervisor: Prof Gil McVean. Collaborators: Zam Iqbal, Kiran Garimella. Based at the Wellcome Trust Centre for Human Genetics, University of Oxford. \nBranch         | Status\n---------------|--------\nmaster:        | [![Build Status](https://travis-ci.org/mcveanlab/mccortex.svg?branch=master)](https://travis-ci.org/mcveanlab/mccortex)\ndevelop:       | [![Build Status](https://travis-ci.org/mcveanlab/mccortex.svg?branch=develop)](https://travis-ci.org/mcveanlab/mccortex)\ncode analysis: | [![Coverity Scan Build Status](https://scan.coverity.com/projects/2329/badge.svg)](https://scan.coverity.com/projects/2329)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9809440628146767,
      "result": {
        "original_header": "Build",
        "type": "Text_excerpt",
        "value": "To compile for a maximum kmer size of 31: \nto compile for a maximum kmer size of 63: \n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9346784023213272,
      "result": {
        "original_header": "Quickstart: Variant calling",
        "type": "Text_excerpt",
        "value": "If your data are haploid, we set `--ploidy 1`: \nIf your samples are human, you have a mix of haploid and diploid chromosomes. Therefore you need to specify which samples have only one copy of `chrX` and one of `chrY`. The format is `-P <sample>:<chr>:<ploidy>` where `<sample>` and `<chr>` can be comma-separated lists. Ploidy arguments are read in order. \nNow you're ready to run. You'll need to pass:\n- path to McCortex `CTXDIR=`\n- how much memory to use `MEM=`  (2GB for ten E. coli, 70GB for a human)\n- number of threads to use `NTHREADS=` \nFor a human genome, running time will be about 8 hours for a single sample and use about 70GB RAM. For small numbers of similar samples, peak memory usage will remain the same as a single sample, and should increase roughly logarithmically with the number of samples. \n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9557656236847756,
      "result": {
        "original_header": "Commands",
        "type": "Text_excerpt",
        "value": "    usage: mccortex31 <command> [options] <args>\n    version: ctx=XXXX zlib=1.2.5 htslib=1.2.1 ASSERTS=ON hash=Lookup3 CHECKS=ON k=3..31\n    \n    Commands:   breakpoints  use a trusted assembled genome to call large events\n                bubbles      find bubbles in graph which are potential variants\n                build        construct cortex graph from FASTA/FASTQ/BAM\n                calls2vcf    convert bubble/breakpoint calls to VCF\n                check        load and check graph (.ctx) and path (.ctp) files\n                clean        clean errors from a graph\n                contigs      assemble contigs for a sample\n                correct      error correct reads\n                coverage     print contig coverage\n                dist         make colour kmer distance matrix\n                index        index a sorted cortex graph file\n                inferedges   infer graph edges between kmers before calling `thread`\n                join         combine graphs, filter graph intersections\n                links        clean and plot link files (.ctp)\n                pjoin        merge link files (.ctp)\n                popbubbles   pop bubbles in the population graph\n                pview        text view of a cortex link file (.ctp)\n                reads        filter reads against a graph\n                rmsubstr     reduce set of strings to remove substrings\n                server       interactively query the graph\n                sort         sort the kmers in a graph file\n                subgraph     filter a subgraph using seed kmers\n                thread       thread reads through cleaned graph to make links\n                uniqkmers    generate random unique kmers\n                unitigs      pull out unitigs in FASTA, DOT or GFA format\n                vcfcov       coverage of a VCF against cortex graphs\n                vcfgeno      genotype a VCF after running vcfcov\n                view         text view of a cortex graph file (.ctx) \n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/mcveanlab/mccortex/wiki/VCF-Genotyping"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/mcveanlab/mccortex/wiki"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mcveanlab/mccortex/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 25
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mcveanlab/mccortex/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mcveanlab/mccortex"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "McCortex: Population De Novo Assembly and Variant Calling"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/file_buffering/file-buffering.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/klebsiella/kleb_pneumoniae/freebayes/analysis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/klebsiella/kleb_pneumoniae/freebayes/freebayes.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/klebsiella/kleb_pneumoniae/assembly/get-max-covg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/klebsiella/kleb_pneumoniae/assembly/make-dot-plots.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/klebsiella/kleb_pneumoniae/platypus/analysis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/klebsiella/kleb_pneumoniae/platypus/call-platypus.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/klebsiella/kleb_pneumoniae/indels/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/klebsiella/kleb_pneumoniae/mcrun/analysis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/klebsiella/kleb_pneumoniae/cortex/analysis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/klebsiella/kleb_pneumoniae/cortex/call-cortex.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/hash_table_benchmark/benchmark-tables.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/NA12878/callcov/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/benchmark/minidiploid/run-sim.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/benchmark/diploid60X/run-sim.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/benchmark/10diploid10X/run-sim.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/data/download.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/kmer_size_experiment/sga-all-kmers.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/kmer_size_experiment/sga.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/kmer_size_experiment/results/make-csv.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/results/kmer_size_experiment/results/generate-results.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/seq2pdf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/cortex_print_flanks.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/make-isec.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/build/update.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/build/multik-build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/bash/mccortex-to-ray.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/bash/links-median-threshold.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/bash/vcf-longest-haplotype.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/bash/links-bytes.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/bash/links-count.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/analysis/mummer-vcf-isec.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/analysis/mapping-vars-test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/analysis/mummer2vcf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/report/make-link-plot.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/scripts/report/make-kmer-plot.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/libs/update-modules.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/travis/script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/travis/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/travis/provision-vm.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9552049938813856,
      "result": {
        "original_header": "Build",
        "type": "Text_excerpt",
        "value": "McCortex compiles with clang and gcc. Tested on Mac OS X and linux. Requires zlib.\nDownload with: \n    git clone --recursive https://github.com/mcveanlab/mccortex \nInstall dependencies (for htslib) on mac: \n    brew update\n    brew install xz \nOr on linux: \n    sudo apt install liblzma-dev libbz2-dev\n    sudo apt install r-base-core  #\u00a0if you want to plot with R \nExecutables appear in the `bin/` directory. \n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9936358393012282,
      "result": {
        "original_header": "Quickstart: Variant calling",
        "type": "Text_excerpt",
        "value": "Download and compile McCortex. Can be in any directory, later I'll assume it's in `~/mccortex/`: \n    git clone --recursive https://github.com/mcveanlab/mccortex\n    cd mccortex\n    make all MAXK=31\n    make all MAXK=63 \n    cd /path/to/your/data\n    echo \"#sample_name  SE_files   PE_files                     interleaved_files\" >  samples.txt\n    echo \"Mickey        a.fa,b.fa  reads.1.fq.gz:reads.2.fq.gz  .\"                 >> samples.txt\n    echo \"Minney        .          reads.1.fq.gz:reads.2.fq.gz  in.bam\"            >> samples.txt\n    echo \"Pluto         seq.fq     .                            pluto.cram\"        >> samples.txt \nCreate a job file from your sample file (`samples.txt`). All output will go into the directory we specify (`mc_calls`). We also specify the kmer(s) to use. We'll run at `k=31` and `k=61` and merge the results. \n    ~/mccortex/scripts/make-pipeline.pl -r /path/to/ref.fa --ploidy 1 31,61 mc_calls samples.txt > job.k31.k61.mk \n    ~/mccortex/scripts/make-pipeline.pl -r /path/to/ref.fa --ploidy \"-P .:.:2 -P .:chrY:1 -P Mickey:chrX:1\" 31,61 mc_calls samples.txt > job.k31.k61.mk \nNow you're ready to run. You'll need to pass:\n- path to McCortex `CTXDIR=`\n- how much memory to use `MEM=`  (2GB for ten E. coli, 70GB for a human)\n- number of threads to use `NTHREADS=` \n    make -f job.k31.k61.mk CTXDIR=~/mccortex MEM=70GB NTHREADS=8 \\\n                           JOINT_CALLING=yes USE_LINKS=no brk-geno-vcf \nSomething go wrong? Take a look at the log file of the last command that ran. You may need to increase memory or compile for a different `MAXK=` value. Once you've fixed the issue, just rerun the `make -f job...` command. Add `--dry-run` to the `make` command to see which commands are going to be run without running them.  \n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8233483839192801,
      "result": {
        "original_header": "Quickstart: Variant calling",
        "type": "Text_excerpt",
        "value": "    cd /path/to/your/data\n    echo \"#sample_name  SE_files   PE_files                     interleaved_files\" >  samples.txt\n    echo \"Mickey        a.fa,b.fa  reads.1.fq.gz:reads.2.fq.gz  .\"                 >> samples.txt\n    echo \"Minney        .          reads.1.fq.gz:reads.2.fq.gz  in.bam\"            >> samples.txt\n    echo \"Pluto         seq.fq     .                            pluto.cram\"        >> samples.txt \nCreate a job file from your sample file (`samples.txt`). All output will go into the directory we specify (`mc_calls`). We also specify the kmer(s) to use. We'll run at `k=31` and `k=61` and merge the results. \nRun the job file: \n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8399593373037793,
      "result": {
        "original_header": "Commands",
        "type": "Text_excerpt",
        "value": "\n      Type a command with no arguments to see help.\n    \n    Common Options:\n      -h, --help            Help message\n      -q, --quiet           Silence status output normally printed to STDERR\n      -f, --force           Overwrite output files if they already exist\n      -m, --memory <M>      Memory e.g. 1GB [default: 1GB]\n      -n, --nkmers <H>      Hash entries [default: 4M, ~4 million]\n      -t, --threads <T>     Limit on proccessing threads [default: 2]\n      -o, --out <file>      Output file\n      -p, --paths <in.ctp>  Assembly file to load (can specify multiple times)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mcveanlab/mccortex/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "contigs, cortex, de-bruijn-graphs, genome-analysis, genome-assembly, genome-graph, genomics, kmer, variant-calling"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2014  Isaac Turner <turner.isaac@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License: MIT",
        "parent_header": [
          "McCortex: Population De Novo Assembly and Variant Calling"
        ],
        "type": "Text_excerpt",
        "value": "Bundled libraries may have different licenses:\n* [BitArray](https://github.com/noporpoise/BitArray) (Public Domain)\n* [cJSON](http://http://sourceforge.net/projects/cjson/) (MIT)\n* [CityHash](https://code.google.com/p/cityhash/) (MIT)\n* [htslib](https://github.com/samtools/htslib) (MIT)\n* [lookup3](http://burtleburtle.net/bob/c/lookup3.c) (Public Domain)\n* [madcrowlib](https://github.com/noporpoise/madcrowlib) (MIT)\n* [msg-pool](https://github.com/noporpoise/msg-pool) (Public Domain)\n* [seq-align](https://github.com/noporpoise/seq-align) (Public Domain)\n* [seq_file](https://github.com/noporpoise/seq_file) (Public Domain)\n* [sort_r](https://github.com/noporpoise/sort_r) (Public Domain)\n* [carrays](https://github.com/noporpoise/carrays) (Public Domain)\n* [string_buffer](https://github.com/noporpoise/string_buffer) (Public Domain)\n* [xxHash](https://github.com/Cyan4973/xxHash.git) (BSD)\n\nUsed in testing:\n* [bcftools](https://github.com/samtools/bcftools) (MIT)\n* [bioinf-perl](https://github.com/noporpoise/bioinf-perl) (Public Domain)\n* [bwa](https://github.com/lh3/bwa) (MIT)\n* [readsim](https://github.com/noporpoise/readsim) (Public Domain)\n* [samtools](https://github.com/samtools/samtools) (MIT)\n* [bfc](https://github.com/lh3/bfc) (MIT)\n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mccortex"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "mcveanlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1460235,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 173795,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 166361,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 67535,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 49544,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 44299,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 25521,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 10833,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 4051,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Objective-C",
        "size": 2925,
        "type": "Programming_language",
        "value": "Objective-C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "noporpoise",
          "type": "User"
        },
        "date_created": "2018-12-07T00:52:35Z",
        "date_published": "2018-12-07T00:54:53Z",
        "description": "Report the correct version string\r\nAdd missing files to compile for `-march=native`",
        "html_url": "https://github.com/mcveanlab/mccortex/releases/tag/mccortex-1.0.1",
        "name": "McCortex 1.0.1",
        "release_id": 14399306,
        "tag": "mccortex-1.0.1",
        "tarball_url": "https://api.github.com/repos/mcveanlab/mccortex/tarball/mccortex-1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/mcveanlab/mccortex/releases/14399306",
        "value": "https://api.github.com/repos/mcveanlab/mccortex/releases/14399306",
        "zipball_url": "https://api.github.com/repos/mcveanlab/mccortex/zipball/mccortex-1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "noporpoise",
          "type": "User"
        },
        "date_created": "2018-08-20T12:09:37Z",
        "date_published": "2018-08-20T12:16:39Z",
        "html_url": "https://github.com/mcveanlab/mccortex/releases/tag/mccortex-1.0",
        "name": "McCortex 1.0",
        "release_id": 12480681,
        "tag": "mccortex-1.0",
        "tarball_url": "https://api.github.com/repos/mcveanlab/mccortex/tarball/mccortex-1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/mcveanlab/mccortex/releases/12480681",
        "value": "https://api.github.com/repos/mcveanlab/mccortex/releases/12480681",
        "zipball_url": "https://api.github.com/repos/mcveanlab/mccortex/zipball/mccortex-1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "noporpoise",
          "type": "User"
        },
        "date_created": "2017-02-05T23:25:11Z",
        "date_published": "2017-02-05T23:46:40Z",
        "description": "Minor bugfixes and re-arranged scripts.\n",
        "html_url": "https://github.com/mcveanlab/mccortex/releases/tag/v0.2",
        "name": "McCortex 0.2",
        "release_id": 5365790,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/mcveanlab/mccortex/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/mcveanlab/mccortex/releases/5365790",
        "value": "https://api.github.com/repos/mcveanlab/mccortex/releases/5365790",
        "zipball_url": "https://api.github.com/repos/mcveanlab/mccortex/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "noporpoise",
          "type": "User"
        },
        "date_created": "2016-10-31T11:25:44Z",
        "date_published": "2016-10-31T11:47:12Z",
        "description": "Changelog:\n- `server` command: read graph from disk\n- `vcfcov` command: default to low memory mode\n- `build`,`clean` commands: write sorted graph files\n- `clean` command: faster cleaning\n- fix rare multithreading bug in db_unitig.c\n- mccortex-server.py: multithreaded HTTP JSON server\n- hash_table.c: faster initialisation of large hash tables\n- update dependency libraries\n- better integration tests\n",
        "html_url": "https://github.com/mcveanlab/mccortex/releases/tag/0.1.1",
        "name": "McCortex 0.1.1",
        "release_id": 4525553,
        "tag": "0.1.1",
        "tarball_url": "https://api.github.com/repos/mcveanlab/mccortex/tarball/0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/mcveanlab/mccortex/releases/4525553",
        "value": "https://api.github.com/repos/mcveanlab/mccortex/releases/4525553",
        "zipball_url": "https://api.github.com/repos/mcveanlab/mccortex/zipball/0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "noporpoise",
          "type": "User"
        },
        "date_created": "2016-03-20T21:12:33Z",
        "date_published": "2016-04-15T14:27:57Z",
        "description": "Commands are quite stable now. McCortex has been used on various mammalian and bacterial WGS data sets without issue. \n",
        "html_url": "https://github.com/mcveanlab/mccortex/releases/tag/v0.1.0",
        "name": "McCortex Version 0.1.0",
        "release_id": 3028504,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/mcveanlab/mccortex/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/mcveanlab/mccortex/releases/3028504",
        "value": "https://api.github.com/repos/mcveanlab/mccortex/releases/3028504",
        "zipball_url": "https://api.github.com/repos/mcveanlab/mccortex/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "noporpoise",
          "type": "User"
        },
        "date_created": "2014-07-22T09:31:27Z",
        "date_published": "2014-07-22T13:29:13Z",
        "description": "Path file format has been updated - it is now a gzipped text file (.ctp.gz) with a JSON header. Many commands have been improved with more features and common options.\n",
        "html_url": "https://github.com/mcveanlab/mccortex/releases/tag/v0.0.4",
        "name": "McCortex Version 0.0.4",
        "release_id": 443806,
        "tag": "v0.0.4",
        "tarball_url": "https://api.github.com/repos/mcveanlab/mccortex/tarball/v0.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/mcveanlab/mccortex/releases/443806",
        "value": "https://api.github.com/repos/mcveanlab/mccortex/releases/443806",
        "zipball_url": "https://api.github.com/repos/mcveanlab/mccortex/zipball/v0.0.4"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:10:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 113
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Helps",
        "parent_header": [
          "McCortex: Population De Novo Assembly and Variant Calling"
        ],
        "type": "Text_excerpt",
        "value": "Type a command with no arguments to see usage. The following may also be useful:\n* [wiki](https://github.com/mcveanlab/mccortex/wiki)\n* [website](http://mcveanlab.github.io/mccortex)\n* [mailing list](https://groups.google.com/forum/#!forum/cortex_var)\n* Report a [bug / feature request](https://github.com/mcveanlab/mccortex/issues) on GitHub\n* Email me: Isaac Turner <turner.isaac@gmail.com>\n\n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Helps",
        "parent_header": [
          "McCortex: Population De Novo Assembly and Variant Calling"
        ],
        "type": "Text_excerpt",
        "value": "Type a command with no arguments to see usage. The following may also be useful:\n* [wiki](https://github.com/mcveanlab/mccortex/wiki)\n* [website](http://mcveanlab.github.io/mccortex)\n* [mailing list](https://groups.google.com/forum/#!forum/cortex_var)\n* Report a [bug / feature request](https://github.com/mcveanlab/mccortex/issues) on GitHub\n* Email me: Isaac Turner <turner.isaac@gmail.com>\n\n"
      },
      "source": "https://raw.githubusercontent.com/mcveanlab/mccortex/master/README.md",
      "technique": "header_analysis"
    }
  ]
}