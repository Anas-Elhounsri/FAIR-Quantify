{
  "application_domain": [
    {
      "confidence": 13.78,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at delgrosso@bio.lmu.de. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/ratcave/ratcave/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ratcave/ratcave"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-08-05T18:19:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-14T19:29:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Simple Python 3D Graphics Engine extension for Pyglet, Psychopy, and PyGame."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9438236788967277,
      "result": {
        "original_header": "ratcave",
        "type": "Text_excerpt",
        "value": "**This package is abandonware**: All development on Ratcave has stopped, as the author has moved on to other things.  Good alternatives to ratcave are Vedo, Vispy, and ModernGL. \n"
      },
      "source": "https://raw.githubusercontent.com/ratcave/ratcave/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.988065219578122,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "ratcave was created to be an 3D graphics package for doing behavioral experiments with animals in a freely-moving virtual \nreality environment, and somewhere along the way became a pythonic wrapper for modern OpenGL workflows! \nThe goals of this project are: \n  - *Less Boilerplate, more Coding*: More code means more errors.  Many behavioral experiments tend to be complex sets of logic written in a single script, so I tried to make ratcave as low-profile as possible to keep the focus on the experiment, not on the graphics management.\n  - *Ease of Use*: Moving objects in a scene, displaying a window, and changing objects' colors should be intuitive.\n  - *high-temporal performance*: Lag is the enemy of immersive VR, and we wanted to take advantage of our 360 fps display for VR research.  Advanced hardware-accelerated algorithms and modern OpenGL constructs are an essential part of doing high-performance graphics in Python.\n  - *Cubemapping Support* (the essential algorithmic approach for a single-projector CAVE VR system),\n  - *Cross-Platform*: Windows and Linux are both actively supported (Max OS X not tested, but should also be good!)\n  - *Python 2 and 3 Support*: No worries, no hassle.\n  - *Free and Open Source* \n\nWhat I've found so far is that ratcave makes for a succinct 3D graphics engine, even for simple 3D scenes, making it a useful candidate package for psychophysics research in general.\nTo that end, I've made it very compatible with the PsychoPy package, as a way of extending PsychoPy experiments to 3D scenes.\nWhile we are still at an early stage of development with ratcave, we've already reached the requirements listed above, with a goal of continually refactoring and adding features to make ratcave the mature utility it has the potential to be.  If you are interested in aiding the development of ratcave, either through contributions on GitHub, bug reporting, or even simply testing it out yourself and giving us feedback, we hope you'll get involved and help us develop this little project into something wonderful!\n \n"
      },
      "source": "https://raw.githubusercontent.com/ratcave/ratcave/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://ratcave.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/ratcave/ratcave/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ratcave/ratcave/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ratcave/ratcave/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ratcave/ratcave"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ratcave"
      },
      "source": "https://raw.githubusercontent.com/ratcave/ratcave/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ratcave/ratcave/master/./docs/_static/tut1_gray_monkey.png"
      },
      "source": "https://raw.githubusercontent.com/ratcave/ratcave/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ratcave"
        ],
        "type": "Text_excerpt",
        "value": "```\npip install ratcave\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ratcave/ratcave/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9040590239999629,
      "result": {
        "original_header": "ratcave",
        "type": "Text_excerpt",
        "value": "Full Documentation and Tutorials can be found at http://ratcave.readthedocs.io/ \n"
      },
      "source": "https://raw.githubusercontent.com/ratcave/ratcave/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ratcave/ratcave/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ci.appveyor.com/api/projects/status/github/ratcave/ratcave?branch=master&amp;svg=true"
      },
      "source": "https://raw.githubusercontent.com/ratcave/ratcave/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ratcave"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ratcave"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 121671,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "GLSL",
        "size": 9601,
        "type": "Programming_language",
        "value": "GLSL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 182,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ratcave/ratcave/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nickdelgrosso",
          "type": "User"
        },
        "date_created": "2020-06-14T19:22:10Z",
        "date_published": "2020-06-14T19:32:20Z",
        "description": "Removes Python 2 support. ",
        "html_url": "https://github.com/ratcave/ratcave/releases/tag/v1.0",
        "name": "Version 1.0",
        "release_id": 27535443,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/ratcave/ratcave/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ratcave/ratcave/releases/27535443",
        "value": "https://api.github.com/repos/ratcave/ratcave/releases/27535443",
        "zipball_url": "https://api.github.com/repos/ratcave/ratcave/zipball/v1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nickdelgrosso",
          "type": "User"
        },
        "date_created": "2020-06-14T18:50:13Z",
        "date_published": "2020-06-14T19:31:41Z",
        "description": "Removes C extensions from the installer to create a simpler installation experience--no more \"Visual Studio C++ Build Tools Required\" error!\r\n\r\nMany thanks to Youssef M\u00e9barki for this great contribution! \r\n\r\n\r\n\r\n",
        "html_url": "https://github.com/ratcave/ratcave/releases/tag/v0.9",
        "name": "Version 0.9",
        "release_id": 27535432,
        "tag": "v0.9",
        "tarball_url": "https://api.github.com/repos/ratcave/ratcave/tarball/v0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/ratcave/ratcave/releases/27535432",
        "value": "https://api.github.com/repos/ratcave/ratcave/releases/27535432",
        "zipball_url": "https://api.github.com/repos/ratcave/ratcave/zipball/v0.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nickdelgrosso",
          "type": "User"
        },
        "date_created": "2018-06-12T22:13:00Z",
        "date_published": "2018-06-12T22:14:39Z",
        "description": "AutoPareting, CameraGroups, more Tests, and GLSL 120 compatibility! ",
        "html_url": "https://github.com/ratcave/ratcave/releases/tag/v0.8",
        "name": "Version 0.8",
        "release_id": 11450270,
        "tag": "v0.8",
        "tarball_url": "https://api.github.com/repos/ratcave/ratcave/tarball/v0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/ratcave/ratcave/releases/11450270",
        "value": "https://api.github.com/repos/ratcave/ratcave/releases/11450270",
        "zipball_url": "https://api.github.com/repos/ratcave/ratcave/zipball/v0.8"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:33:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 110
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "ratcave"
        ],
        "type": "Text_excerpt",
        "value": "Reading a mesh from a Wavefront File and drawing it with a built-in shader:\n\n```python\nimport pyglet\nimport ratcave as rc\n\nwindow = pyglet.window.Window()\npyglet.clock.schedule(lambda dt: dt)\n\nmonkey = rc.WavefrontReader(obj_filename).get_mesh(\"Monkey\")\nmonkey.position.xyz = 0, 0, -2\n\n@window.event\ndef on_draw():\n  with rc.default_shader, rc.default_states:\n      monkey.draw()\n\npyglet.app.run()\n```\n\n![Image](./docs/_static/tut1_gray_monkey.png)\n\nMore examples can be found in the examples directory, and tutorials can be found in the documentation!\n"
      },
      "source": "https://raw.githubusercontent.com/ratcave/ratcave/master/README.md",
      "technique": "header_analysis"
    }
  ]
}