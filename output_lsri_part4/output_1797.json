{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ggonnella/gfapy"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The following contributors helped to develop gfapy. Please drop a note to\ngonnella@zbh.uni-hamburg.de if I left someone out or missed something.\n\n- Tim Weber (translation of parts of the code from Ruby to Python)\n- Stefan Kurtz (advises)\n\n"
      },
      "source": "https://raw.githubusercontent.com/ggonnella/gfapy/master/CONTRIBUTORS",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-17T14:06:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-27T11:58:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gfapy: a flexible and extensible software library for handling sequence graphs in Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9566833793975461,
      "result": {
        "type": "Text_excerpt",
        "value": "The Graphical Fragment Assembly (GFA) are formats for the representation\nof sequence graphs, including assembly, variation and splicing graphs.\nTwo versions of GFA have been defined (GFA1 and GFA2) and several sequence\nanalysis programs have been adopting the formats as an interchange format,\nwhich allow to easily combine different sequence analysis tools. \nThis library implements the GFA1 and GFA2 specification\ndescribed at https://github.com/GFA-spec/GFA-spec/blob/master/GFA-spec.md.\nIt allows to create a Gfa object from a file in the GFA format\nor from scratch, to enumerate the graph elements (segments, links,\ncontainments, paths and header lines), to traverse the graph (by\ntraversing all links outgoing from or incoming to a segment), to search for\nelements (e.g. which links connect two segments) and to manipulate the\ngraph (e.g. to eliminate a link or a segment or to duplicate a segment\ndistributing the read counts evenly on the copies). \nThe GFA format can be easily extended by users by defining own custom\ntags and record types. In Gfapy, it is easy to write extensions modules,\nwhich allow to define custom record types and datatypes for the parsing\nand validation of custom fields. The custom lines can be connected, using\nreferences, to each other and to lines of the standard record types. \nGfapy is distributed as a Python package and can be installed using\nthe Python package manager pip, as well as conda (in the Bioconda channel).\nIt is also available as a package in some Linux distributions (Debian, Ubuntu). \nThe documentation, including this introduction to Gfapy, a user manual\nand the API documentation is hosted on the ReadTheDocs server,\nat the URL http://gfapy.readthedocs.io/en/latest/ and it can be\ndownloaded as PDF from the URL\nhttps://github.com/ggonnella/gfapy/blob/master/manual/gfapy-manual.pdf. \nGiorgio Gonnella and Stefan Kurtz \"GfaPy: a flexible and extensible software\nlibrary for handling sequence graphs in Python\", Bioinformatics (2017) btx398\nhttps://doi.org/10.1093/bioinformatics/btx398 \n"
      },
      "source": "https://raw.githubusercontent.com/ggonnella/gfapy/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://gfapy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/ggonnella/gfapy/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ggonnella/gfapy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ggonnella/gfapy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ggonnella/gfapy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/ggonnella/gfapy/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggonnella/gfapy/master/doc/run_apidoc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggonnella/gfapy/master/benchmarks/gfapy-run-benchmarks.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggonnella/gfapy/master/benchmarks/gfapy-profiler.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9882839557807678,
      "result": {
        "type": "Text_excerpt",
        "value": "|bioconda| |pypi| |debian| |ubuntu| \n.. sphinx-begin \nRequirements\n~~~~~~~~~~~~ \nGfapy has been written for Python 3 and tested using Python version 3.7.\nIt does not require any additional Python packages or other software. \nInstallation\n~~~~~~~~~~~~ \nGfapy is distributed as a Python package and can be installed using\nthe Python package manager pip, as well as conda (in the Bioconda channel).\nIt is also available as a package in some Linux distributions (Debian, Ubuntu). \nThe following command installs the current stable version from the Python\nPackages index:: \n  pip install gfapy \nIf you would like to install the current development version from Github,\nuse the following command:: \n  pip install -e git+https://github.com/ggonnella/gfapy.git#egg=gfapy \nAlternatively it is possible to install gfapy using conda. Gfapy is\nincluded in the Bioconda (https://bioconda.github.io/) channel:: \n  conda install -c bioconda gfapy \nIf you installed gfapy as described above, you can import it in your script\nusing the conventional Python syntax:: \nThe documentation, including this introduction to Gfapy, a user manual\nand the API documentation is hosted on the ReadTheDocs server,\nat the URL http://gfapy.readthedocs.io/en/latest/ and it can be\ndownloaded as PDF from the URL\nhttps://github.com/ggonnella/gfapy/blob/master/manual/gfapy-manual.pdf. \n.. |travis|\n   image:: https://travis-ci.com/ggonnella/gfapy.svg?branch=master\n   :target: https://travis-ci.com/ggonnella/gfapy\n   :alt: Travis \n.. |latesttag|\n   image:: https://img.shields.io/github/v/tag/ggonnella/gfapy\n   :target: https://github.com/ggonnella/gfapy/tags\n   :alt: Latest GitHub tag \n.. |readthedocs|\n   image:: https://readthedocs.org/projects/pip/badge/?version=stable\n   :target: https://pip.pypa.io/en/stable/?badge=stable\n   :alt: ReadTheDocs \n.. |bioconda|\n   image:: https://img.shields.io/conda/vn/bioconda/gfapy\n   :target: https://bioconda.github.io/recipes/gfapy/README.html\n   :alt: Bioconda \n.. |pypi|\n   image:: https://img.shields.io/pypi/v/gfapy\n   :target: https://pypi.org/project/gfapy/\n   :alt: PyPI \n.. |debian|\n   image:: https://img.shields.io/debian/v/gfapy\n   :target: https://packages.debian.org/search?keywords=gfapy\n   :alt: Debian \n.. |ubuntu|\n   image:: https://img.shields.io/ubuntu/v/gfapy\n   :target: https://packages.ubuntu.com/search?keywords=gfapy\n   :alt: Ubuntu \n.. |license|\n   image:: https://img.shields.io/pypi/l/gfapy\n   :target: https://github.com/ggonnella/gfapy/blob/master/LICENSE.txt\n   :alt: ISC License\n   \n.. |requiresio|\n   image:: https://requires.io/github/ggonnella/gfapy/requirements.svg?branch=master\n   :target: https://requires.io/github/ggonnella/gfapy/requirements/?branch=master\n   :alt: Requirements Status\n \n"
      },
      "source": "https://raw.githubusercontent.com/ggonnella/gfapy/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9067314017992678,
      "result": {
        "type": "Text_excerpt",
        "value": "  >>> import gfapy \n"
      },
      "source": "https://raw.githubusercontent.com/ggonnella/gfapy/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ggonnella/gfapy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "assembly, bioinformatics, gfa, graphs, sequence-analysis"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gfapy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ggonnella"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 589073,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5821,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 4040,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 881,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ggonnella/gfapy/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:19:15",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 65
      },
      "technique": "GitHub_API"
    }
  ]
}