{
  "application_domain": [
    {
      "confidence": 36.84,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "iGenomes reference information download <a name=\"igenomes\"></a>",
        "parent_header": [
          "Proteoformer",
          "Preparations <a name=\"preparations\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Mapping is done based on reference information in the form of iGenomes directories. These directories can easily\ndownloaded and constructed with the `get_igenomes.py` script in the `Additional_tools` folder. For example:\n\n```\npython get_igenomes.py -v 92 -s human -d /path/to/dir -r -c 15\n```\n\nInput arguments:\n\n| Argument       | Default   | Description                                                                                                                                                              |\n|----------------|-----------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| -d / --dir     | Mandatory | Directory wherein the igenomes tree structure will be installed                                                                                                          |\n| -v / --version | Mandatory | Ensembl annotation version to download (Ensembl plant (for arabidopsis) has seperate annotation versions!)                                                               |\n| -s / --species | Mandatory | Specify the desired species for which gene annotation files should be downloaded                                                                                         |\n| -r / --remove  |           | If any, overwrite the existing igenomes structure for that species                                                                                                       |\n| -c / --cores   | Mandatory | The amount of cores that will be used for downloading chromosomes files (Do not use more than 15 cores as the download server can only establish 15 connections at once) |\n| -h / --help    |           | This useful help message                                                                                                                                                 |\n\nThe tool currently supports following species:\n\n| Species                                                             | Input value species argument |\n|---------------------------------------------------------------------|------------------------------|\n| Homo sapiens                                                        | human                        |\n| Mus musculus                                                        | mouse                        |\n| Rattus norvegicus                                                   | rat                          |\n| Drosophila melanogaster                                             | fruitfly                     |\n| Saccharomyces cerevisiae                                            | yeast                        |\n| Danio rerio                                                         | zebrafish                    |\n| Arabidopsis thaliana                                                | arabidopsis                  |\n| Caenorhabditis elegans                                              | c.elegans                    |\n| Salmonella enterica subsp. enterica serovar Typhimurium str. SL1344 | SL1344                       |\n| Mycobacterium abscessus atcc 19977                                  | MYC_ABS_ATCC_19977           |\n\nThere is also an analogue Python 3.10 version of this step:\n\n```\npython get_igenomes_py3.py -v 92 -s human -d /path/to/dir -r -c 15\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Biobix/proteoformer"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-01T13:09:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-13T14:21:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Integration ribosome profiling - mass spectrometry"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction <a name=\"introduction\"></a>",
        "parent_header": [
          "Proteoformer"
        ],
        "type": "Text_excerpt",
        "value": "PROTEOFORMER is a proteogenomic pipeline that delineates true *in vivo* proteoforms and generates a protein sequence\n search space for peptide to MS/MS matching. It can be combined with canonical protein databases or used independently\n for identification of novel translation products. The pipeline makes use of the recently developed next generation \n sequencing strategy termed ribosome profiling (RIBO-seq) that provides genome-wide information on protein synthesis\n *in vivo*. RIBO-seq is based on the deep sequencing of ribosome protected mRNA fragments. RIBO-seq allows for the mapping\n of the location of translating ribosomes on mRNA with sub codon precision, it can indicate which portion of the genome \n is actually being translated at the time of the experiment as well as account for sequence variations such as single \n nucleotide polymorphism and RNA splicing.\n\nThe pipeline \n* aligns your ribosome profiling data to a reference genome\n* checks the quality and general features of this alignments\n* searches for translated transcripts\n* searches for all possible proteoforms in these transcripts\n* constructs counts for different feature levels and calculates FLOSS scores\n* constructs fasta files which allow mass spectrometry validation\n\nMost modules of this pipeline are provided with a built-in help message. Execute the script of choice with the `-h` or \n`--help` to get the full help message printed in the command line.\n\nPROTEOFORMER is also available in for Galaxy environments. Galaxy files (tool XML wrappers, general tool and tool data \nconfig XML files and LOC files) are available. The tool-specific XML files are present in the directories of the different \nmodules in this GitHub repo. The general Galaxy config files are present 'Galaxy files' folder of this GitHub repo.\n\nWe set up our own Galaxy environment at: [http://galaxy.ugent.be](http://galaxy.ugent.be)\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9804706183160238,
      "result": {
        "original_header": "Proteoformer",
        "type": "Text_excerpt",
        "value": "A proteogenomic pipeline that delineates true *in vivo* proteoforms and generates a protein sequence\n search space for peptide to MS/MS matching.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9819314472469747,
      "result": {
        "original_header": "General quality check: fastQC <a name=\"fastqc1\"></a>",
        "type": "Text_excerpt",
        "value": "Before starting off the analysis, we believe it is useful to check the general features and quality of the raw data.\nThis can be done by running [FastQC](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/). FastQC is included in \nthe proteoformer conda environment, so you do not need to download it separately. \nThis generates an HTML output report with figures for assessing the quality and general features and a ZIP file \n(for exporting the results to another system). More information about the tool can be found on the [help page](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/)\n of FastQC. A tutorial video of what to expect of the figures can be found [here](https://www.youtube.com/watch?v=bz93ReOv87Y).\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9268637077449859,
      "result": {
        "original_header": "Mapping <a name=\"mapping\"></a>",
        "type": "Text_excerpt",
        "value": "The first big task of the pipeline is mapping the raw data on the reference genome. All reference data should be \ndownloaded as an [iGenomes folder](#igenomes). \nFirst, some prefiltering of bad and low-quality reads is done by using the [FastX toolkit](http://hannonlab.cshl.edu/fastx_toolkit/).\n Also, the adapters are eventually clipped off, using the [FastQ Clipper](http://hannonlab.cshl.edu/fastx_toolkit/commandline.html#fastx_clipper_usage)\n (recommended) or the clipper included in [STAR](https://github.com/alexdobin/STAR) (faster).\n \nMapping can be done by using [STAR](https://github.com/alexdobin/STAR), [TopHat](https://ccb.jhu.edu/software/tophat/index.shtml)\n or [BowTie](http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml). BowTie is less preferable as this not\nincludes splicing. Before mapping against the genome, it is possible to filter out contaminants of PhiX, rRNA, sn(o)RNA \nand tRNA with the same mapping tool you chose to map against the genome. \nAfter mapping, SAM and BAM files with aligned data are obtained. [Plastid](https://plastid.readthedocs.io/en/latest/examples/p_site.html)\n can be used to determine the P site offsets per RPF length. These offsets allow to pinpoint all reads to an exact base position \n as explained [here](https://plastid.readthedocs.io/en/latest/examples/p_site.html). These offsets are very important \n further down the pipeline to assign reads to the correct base position.\n \nNext, these offsets are used to parse the alignment files into count tables. These count tables will be placed inside a \n results SQLite database in which also the mapping statistics and the arguments will be put. During all following steps \n of the pipeline, all results will be stored in this database and are available for consultation. We recommend to use the\n [sqlite3](https://www.sqlite.org/cli.html) command line shell for easy consultation of this database. More information \n can be found on their [website](https://www.sqlite.org/cli.html). Use the following command for starting up sqlite3:\n \n```sqlite3 SQLite/results.db``` \nFor visualization, BedGraph files are generated. These can be used on different genome browsers like [UCSC](https://genome.ucsc.edu). \nThe mapping can be run as in one of following examples:\n```\n#Combination of untreated and treated data\nperl mapping.pl --inputfile1 link/to/your/untr_data.fq --inputfile2 link/to/your/tr_data.fq --name my_experiment --species human --ensembl 92 --cores 20 --unique Y --igenomes_root /user/igenomes --readtype ribo\n\n#Only untreated data with fastx clipping\nperl mapping.pl --inputfile1 link/to/your/untr_data.fq --name my_experiment --species human --ensembl 92 --cores 20 --unique Y --igenomes_root /user/igenomes --readtype ribo_untr --clipper fastx --adaptor AGATCGGAAGAGCACAC\n\n#To automatically determine P site offsets with Plastid and parse the results into count tables\nperl mapping.pl --inputfile1 link/to/your/untr_data.fq --inputfile2 link/to/your/tr_data.fq --name my_experiment --species human --ensembl 92 --cores 20 --unique Y --igenomes_root /user/igenomes --readtype ribo --suite plastid\n\n#With extra prefiltering, clipping, P site offset calling, count table parsing, extra file generation\nperl mapping.pl --inputfile1 link/to/your/untr_data.fq --inputfile2 link/to/your/tr_data.fq --name my_experiment --species human --ensembl 92 --cores 20 --unique Y --igenomes_root /user/igenomes --readtype ribo --clipper fastx --adaptor CTGTAGGCACCATCAAT --phix Y --rRNA Y --snRNA Y --tRNA Y --rpf_split Y --pricefiles Y --suite plastid\n```\nThere are Python 3.10 versions of the mapping steps available. Example:\n```\n#Combination of untreated and treated data\nperl 1_mapping_py3/mapping.pl --inputfile1 link/to/your/untr_data.fq --inputfile2 link/to/your/tr_data.fq --name my_experiment --species human --ensembl 92 --cores 20 --unique Y --igenomes_root /user/igenomes --readtype ribo\n```\n \n| Argument               | Default                                           | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n|------------------------|---------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| --inputfile1           | Mandatory                                         | The fastq file of the 'untreated' data for RIBO-seq (no drug,CHX,EMT) or the 1st fastq for single/paired-end RNA-seq                                                                                                                                                                                                                                                                                                                                           |\n| --inputfile2           | Mandatory for ribo and PE readtypes               | The fastq file of the treated data for RIBO-seq (PUR,LTM,HARR) or the 2nd fastq for paired-end RNA-seq,mandatory argument                                                                                                                                                                                                                                                                                                                                      |\n| --name                 | Mandatory                                         | Name of the run                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| --species              | Mandatory                                         | Species, possibilities: Mus musculus (mouse), Rattus norvegicus (rat), Homo sapiens (human), Drosophila melanogaster (fruitfly), Arabidopsis thaliana (arabidopsis), Salmonella (SL1344), Danio rerio (zebrafish), Saccharomyces cerevisiae (yeast)                                                                                                                                                                                                            |\n| --ensembl              | Mandatory                                         | Ensembl annotation version                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| --cores                | Mandatory                                         | Available cores for the pipeline to run on                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| --unique               | Mandatory                                         | Y/N. Retain only unique mapped reads (Y) or also multimapped reads (N)                                                                                                                                                                                                                                                                                                                                                                                         |\n| --igenomes_root        | Mandatory                                         | Root folder of igenomes folder structure                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| --readtype             | ribo                                              | The readtype, possbilities: RIBOseq untreated and treated sample (ribo), RIBOseq only untreated sample (ribo_untr), RNAseq Paired end PolyA enriched (PE_polyA), RNAseq Single end PolyA enriched (SE_polyA), RNAseq Paired end total (PE_total) or RNAseq Single end total (SE_total)                                                                                                                                                                         |\n| --adaptor              | CTGTAGGCACCATCAAT                                 | The adaptor sequence that needs to be clipped of by the clipper                                                                                                                                                                                                                                                                                                                                                                                                |\n| --work_dir             | $CWD env setting                                  | Working directory                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| --tmp                  | work_dir/tmp                                      | Temporary files folder                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| --min_l_plastid        | 22                                                | Minimum RPF length for Plastid                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| --max_l_plastid        | 34                                                | Maximum RPF length for Plastid                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| --offset_img_untr      | work_dir/plastid/run_name_untreated_p_offsets.png | Path to save the offset image of plastid in for untreated sample                                                                                                                                                                                                                                                                                                                                                                                               |\n| --offset_img_tr        | work_dir/plastid/run_name_treated_p_offsets.png   | Path to save the offset image of plastid in for treated sample                                                                                                                                                                                                                                                                                                                                                                                                 |\n| --min_l_parsing        | 26 (25 for fruitfly)                              | Minimum length for count table parsing                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| --max_l_parsing        | 34                                                | Maximum length for count table parsing                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| --out_bg_s_untr        | untreat_sense.bedgraph                            | Output visual file for sense untreated count data                                                                                                                                                                                                                                                                                                                                                                                                              |\n| --out_bg_as_untr       | untreat_antisense.bedgraph                        | Output visual file for antisense untreated count data                                                                                                                                                                                                                                                                                                                                                                                                          |\n| --out_bg_s_tr          | treat_sense.bedgraph                              | Output visual file for sense treated count data                                                                                                                                                                                                                                                                                                                                                                                                                |\n| --out_bg_as_tr         | treat_antisense.bedgraph                          | Output visual file for antisense treated count data                                                                                                                                                                                                                                                                                                                                                                                                            |\n| --out_sam_untr         | untreat.sam                                       | Output alignment file of untreated data                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| --out_sam_tr           | treat.sam                                         | Output alignment file of treated data                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| --out_bam_untr         | untreat.bam                                       | Binary output alignment file of untreated data                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| --out_bam_tr           | treat.bam                                         | Binary output alignment file of treated data                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| --out_bam_tr_untr      | untreat_tr.bam                                    | Binary output alignment file of untreated data in transcript coordinates (if tr_coord option selected)                                                                                                                                                                                                                                                                                                                                                         |\n| --out_bam_tr_tr        | treat_tr.bam                                      | Binary output alignment file of treated data in transcript coordinates (if tr_coord option selected)                                                                                                                                                                                                                                                                                                                                                           |\n| --out_sqlite           | work_dir/SQLite/results.db                        | Output results SQLite database                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| --clipper              | none                                              | If and which clipper has to be used, possibilities: none, STAR, fastx, trimmomatic                                                                                                                                                                                                                                                                                                                                                                             |\n| --phix                 | N                                                 | Map to Phix data as prefilter before genomic mapping: Yes (Y) or No (N)                                                                                                                                                                                                                                                                                                                                                                                        |\n| --rRNA                 | Y                                                 | Map to rRNA data as prefilter before genomic mapping: Yes (Y) or No(N)                                                                                                                                                                                                                                                                                                                                                                                         |\n| --snRNA                | N                                                 | Map to sn(-o-)RNA data as prefilter before genomic mapping: Yes (Y) or No (N)                                                                                                                                                                                                                                                                                                                                                                                  |\n| --tRNA                 | N                                                 | Map to tRNA data as prefilter before genomic mapping: Yes (Y) or No (N)                                                                                                                                                                                                                                                                                                                                                                                        |\n| --tr_coord             | N                                                 | Generate alignment files based on transcript coordinates: Yes (Y) or No (N)                                                                                                                                                                                                                                                                                                                                                                                    |\n| --truseq               | Y                                                 | Whether strands (+ and -) are assigned as in TruSeq for RNAseq: Yes (Y) or No (N)                                                                                                                                                                                                                                                                                                                                                                              |\n| --mismatch             | 2                                                 | Alignment will be outputted only if it has fewer mismatches than this value                                                                                                                                                                                                                                                                                                                                                                                    |\n| --maxmultimap          | 16                                                | Alignments will be outputted only if the read maps fewer times than this value                                                                                                                                                                                                                                                                                                                                                                                 |\n| --splicing             | Y                                                 | Allow splicing for genome alignment: Yes (Y) or No (N)                                                                                                                                                                                                                                                                                                                                                                                                         |\n| --firstrankmultimap    | N                                                 | Only retain the first ranked alignment when multimapping is allowed: Yes (Y) or No (N)                                                                                                                                                                                                                                                                                                                                                                         |\n| --rpf_split            | N                                                 | Whether the program generates RPF specific bedgraph files: Yes (Y) or No (N)                                                                                                                                                                                                                                                                                                                                                                                   |\n| --price_files          | N                                                 | If the program needs to generate SAM files specifically for PRICE: Yes (Y) or No (N), choose Y if you plan to execute PRICE later on                                                                                                                                                                                                                                                                                                                           |\n| --cst_prime_offset     | 12                                                | The constant 5prime or 3prime offset when using those kind of offsets                                                                                                                                                                                                                                                                                                                                                                                          |\n| --min_cst_prime_offset | 22                                                | The minimum RPF length for which a constant offset will be calculated                                                                                                                                                                                                                                                                                                                                                                                          |\n| --max_cst_prime_offset | 40                                                | The maximum RPF length for which a constant offset will be calculated                                                                                                                                                                                                                                                                                                                                                                                          |\n| --suite                | custom                                            | Options of how to run the different mapping modules (mapping, mapping_plastid, mapping_parsing) all together for ribo data: only execute mapping and startup plastid and parsing manually later (custom), mapping and parsing with standard offsets (standard), mapping with afterwards plastid offset calculation and parsing based on these offsets (plastid), use offsets with constant 5prime (cst_5prime), use offsets with constant 3prime (cst_3prime)  |\n| --suite_tools_loc      | work_dir                                          | The foder with scripts of the subsequent mapping tools when using plastid or standard suite                                                                                                                                                                                                                                                                                                                                                                    |\n| --help                 |                                                   | Generate help message                                                                                                                                                                                                                                                                                                                                                                                                                                          | \nIf you chose the custom suite, you can execute the Plastid and the parsing part of the mapping yourself after `mapping.pl`.\n This gives you the opportunity to test different offset sets. As you can see, also a tab-separated offset list can be used\n in the parsing by inputting them as a txt file. In that way, you can let the program use your offsets of choice.\n \nExamples of how to run these separated programs:\n```\n#Plastid for untreated sample\nperl mapping_plastid.pl --out_sqlite SQLite/results.db --treated untreated\n#Plastid for treated sample\nperl mapping_plastid.pl --out_sqlite SQLite/results.db --treated treated\n#Parsing of all results into counts (mapping itself, Plastid untreated, Plastid treated)\nperl mapping_parsing.pl --out_sqlite SQLite/results.db --offset plastid\n```\nThere are Python 3.10 versions of the mapping steps available. Example:\n```\n#Plastid for untreated sample\nperl 1_mapping_py3/mapping_plastid.pl --out_sqlite SQLite/results.db --treated untreated\n#Plastid for treated sample\nperl 1_mapping_py3/mapping_plastid.pl --out_sqlite SQLite/results.db --treated treated\n#Parsing of all results into counts (mapping itself, Plastid untreated, Plastid treated)\nperl 1_mapping_py3/mapping_parsing.pl --out_sqlite SQLite/results.db --offset plastid\n```\n \n\nInput arguments of mapping_plastid.pl: \nInput arguments of mapping_parsing.pl: \nA table of all inputted arguments: \nA table with mapping statistics: \nA table with counts per base position for each sample: \nA table with counts per base position and per RPF length for each sample: \nFurthermore, BED and BedGraph files are generated, which allow visualizing these counts in a genome browser. \n**Extra:** To obtain normalized BedGraph files based on the different library sizes, there is an extra tool for that in \nthe `Additional_tools` folder. As input, it takes the different original BedGraph files and library sizes of both samples \n(i.e. the total mapped reads against the genomic reference, which can be found in the statistics table of the results database).\n```\nbash normBedgraph --untrs output/untreat_sense.bedgraph --untras output/untreat_antisense.bedgraph --nttrs output/treat_sense.bedgraph --nttras output/treat_antisense.bedgraph --libuntr 37873493 --libtr 45427218\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9665479287819316,
      "result": {
        "original_header": "General quality check: fastQC <a name=\"fastqc2\"></a>",
        "type": "Text_excerpt",
        "value": "This step is quite similar to the [first quality check step with FastQC](#fastqc1), although this time FastQC will be \nperformed on the alignment files (sam). This generates again HTML reports but due to the adapter clipping and pre-filtering\nduring the mapping step, quality will normally have remarkably improved.\n```\nfastqc output/untreat.sam -t 20\nfastqc output/treat.sam -t 20\n```\nFastQC is available in the Galaxy tool shed and can be added easily to the general workflow in Galaxy.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9824000973224271,
      "result": {
        "original_header": "Specific ribosome profiling quality check: mappingQC <a name=\"mappingqc\"></a>",
        "type": "Text_excerpt",
        "value": "MappingQC generates some figures which give a nice overview of the quality and the general feature of the aligned\n ribosome profiling data. More specific, it gives an overview of the P site offset calculation, the gene distribution\n and the metagenic classification. Furthermore, MappingQC does a thorough analysis of the triplet periodicity and the\n linked triplet phase (typical for ribosome profiling) in the canonical transcript of your data. Especially, the link \n between the phase distribution and the RPF length, the relative sequence position and the triplet identity are taken \n into account. MappingQC is also available as a stand-alone tool, separated from PROTEOFORMER and its SQLite results \n structure, so that you can apply it on every samfile you like, independent of the mapping source. \nFor PROTEOFORMER, mappingQC needs a SAM file (from one of both samples), an [Ensembl database](#ensembl) and the results database to run. It generates an\nHTML file which gives an overview of all generated figures. For exporting this report, a ZIP file is generated with the \nHTML and all figures included. The tool needs a tool directory with different background scripts. The directory (`mqc_tools`)\nis available in our GitHub repository under `2_mappingQC`. Input the path of where you put this directory in the `--tool_dir`\nargument. \n**Caution:** The mplot3d package in Pyplot is vulnerable for so-called Escher effects. Sometimes, certain boxes are plotted\nwith a wrong z-order, but overall, figures are clear. On the other hand, the Mayavi package requires the usage of a graphical\ncard, so on servers, this is mostly not an option. \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.981003328571795,
      "result": {
        "original_header": "Transcript calling <a name=\"transcriptcalling\"></a>",
        "type": "Text_excerpt",
        "value": "After checking the aligned data for quality and general features, you can search for the translated transcripts.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.97690025157746,
      "result": {
        "original_header": "Rule-based transcript calling <a name=\"rulebased\"></a>",
        "type": "Text_excerpt",
        "value": "A first way to determine these translated transcript, is based on general rules. Transcript without RIBO-seq counts are \nignored from the start. Then, for each exon of the transcript, the counts of ribosome reads are calculated and normalized \nby exon length. If the normalized count of an exon is 5 times lower than the mean normalized exon count of the given transcript,\nthe exon is classified as a noise exon. Transcripts with less than 15% noise exons, are called as actively-translated \ntranscripts (`exon_coverage = Yes` in the output table). \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9666987264725939,
      "result": {
        "original_header": "RiboZINB <a name=\"ribozinb_trcal\"></a>",
        "type": "Text_excerpt",
        "value": "Another way to call transcripts, is by using the [RiboZINB](https://github.com/Biobix/RiboZINB) tool. This tool makes use \nof the zero-inflated binomial model to determine actively translated transcript isoforms. RiboZINB was directly included \nin the PROTEOFORMER pipeline. **The RiboZINB tool itself is still in beta and statistics are still in development and validation.** \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9871177899396553,
      "result": {
        "original_header": "ORF calling <a name=\"orf_calling\"></a>",
        "type": "Text_excerpt",
        "value": "Based on the translated transcripts, you can search for the translatiion product candidates. Three methods are currently \nimplemented: [PROTEOFORMER classic ORF calling](#classic_orf_calling), [PRICE](#price) and [SPECtre](#spectre_tool). For an \noverview of all analyses that you performed, an [overview table](#tis_overview) for all the analysis ID's can be generated.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9985426420114341,
      "result": {
        "original_header": "PROTEOFORMER classic ORF calling <a name=\"classic_orf_calling\"></a>",
        "type": "Text_excerpt",
        "value": "A first method to determine the candidate translation products based on ribosome profiling is PROTEOFORMER classic method. \nThis method is rule-based and therefore does not work based on a score. However, this method is developped with MS validation \nafterwards in mind. Therefore, defaultly it works quite unstringent, allowing to filter stringently later on during MS. As this \nmethod is also based on TIS calling, it needs a initiation ribosome profile to work (i.e. a second sample treated with \nLTM or HARR). The classic ORF calling can be separated in three subsequent steps: [TIS calling](#tis_calling), \n[SNP calling](#snp_calling) and [ORF assembly](#assembly). The SNP calling step is optional.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9289404782104765,
      "result": {
        "original_header": "TIS calling <a name=\"tis_calling\"></a>",
        "type": "Text_excerpt",
        "value": "The first step of this method determines the translation initiation sites based on the initiation profile (HARR/LTM).\nOnly (near-)cognate start codons are considered as a possible translation initiation site (TIS). This means that a codon \ncan only differ in one base from the canonical 'ATG' start codon to be considered as a possible TIS. Furthermore, a local \nmax in the initiation profile counts needs to be observable in the inputted `local_max` range. The TIS peak needs also to \ncontain more counts than the `min_count` parameter for its annotation class to be called and the R<sub>LTM</sub>-R<sub>CHX</sub>\nvalue needs to be above the threshold set for its annotation class. \n| Argument           | Default         | Description                                                                                   |\n|--------------------|-----------------|-----------------------------------------------------------------------------------------------|\n| --dir              | CWD env setting | The working directory                                                                         |\n| --tmp              | work_dir/tmp    | The temporary files folder                                                                    |\n| --sqlite_db        | Mandatory       | The SQLite results database with all mapping and translated transcript calling results        |\n| --local_max        | 1               | The range wherein the local maximum can be located (e.g. 1 means +/- one triplet)             |\n| --min_count_aTIS   | 5               | The minimum count of ribosome profiling reads that need to map to the aTIS                    |\n| --R_aTIS           | 0.01            | The Rltm - Rchx value threshold for aTIS ORFs                                                 |\n| --min_count_5      | 10              | The minimum count of ribosome profiling reads that need to map to a 5'UTR ORF TIS             |\n| --R_5              | 0.05            | The Rltm - Rchx value threshold for 5'UTR ORFs                                                |\n| --min_count_CDS    | 15              | The minimum count of ribosome profiling reads that need to map to a CDS ORF TIS               |\n| --R_CDS            | 0.15            | The Rltm - Rchx value threshold for CDS ORFs                                                  |\n| --min_count_3      | 10              | The minimum count of ribosome profiling reads that need to map to a 3'UTR ORF TIS             |\n| --R_3              | 0.05            | The Rltm - Rchx value threshold for 3'UTR ORFs                                                |\n| --min_count_ntr    | 10              | The minimum count of ribosome profiling reads that need to map to a non-codign region ORF TIS |\n| --R_ntr            | 0.05            | The Rltm - Rchx value threshold for non-coding region ORFs                                    |\n| --out_sqlite       | /               | Parameter is only used in Galaxy, not in CLI                                                  |\n| --transcriptfilter | none            | Use certain filters at transcript level (options: none, canonical, ccds)                      | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9656833649179217,
      "result": {
        "original_header": "SNP calling <a name=\"snp_calling\"></a>",
        "type": "Text_excerpt",
        "value": "Additional to the information about called TIS positions, it is also possible to search for SNP positions based on the \nribosome profilng data.\nMore information about the SNP calling can be found in its separate [README file](https://github.com/Biobix/proteoformer/blob/master/4_ORF_calling/using_treated_TIS_calling/4b_variation_calling/SNPanalysis/READMEsnpcalling.txt). \nWith [Picard tools](https://broadinstitute.github.io/picard/)(for removing duplicates) and [SAM tools](http://www.htslib.org), SNP positions \nwill be called based on the aligned ribosome profiling data. Data from [SNPdb](https://www.ncbi.nlm.nih.gov/snp) can \nalso be included in the analysis. \n| Argument           | Default                             | Description                                                                                                                                                                              |\n|--------------------|-------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| -s / --sqlitein    | Mandatory                           | Path to the database with results from previous steps                                                                                                                                    |\n| --sqliteout        | Mandatory                           | Path to store the database with all results after this step                                                                                                                              |\n| --removeduplicates | Mandatory                           | 'y' (yes) or 'n' (no), whether to remove duplicate reads with Picard                                                                                                                     |\n| --picardpath       | Mandatory if previous option is 'y' | Path to the Picard tools jar file                                                                                                                                                        |\n| --snpdbselected    | Mandatory                           | 'y' (yes) or 'n' (no), whether he mapped reads will be searched for known SNPs data                                                                                                      |\n| --snpdb            | Mandatory if previous option is 'y' | Path to the SNPdb                                                                                                                                                                        |\n| --toolsdir         | Mandatory                           | Path to the folder where filterSAMfile.pl, snpIndexBuilder.pl and splitVCFaltRecords.pl are                                                                                              |\n| -r / --reads       | Mandatory                           | Path to the SAM file containing alignments ('untreated')                                                                                                                                 |\n| --mincoverage      | 3                                   | SAMtools parameter, the minimal number of reads that need to map at a location so that a SNP can be called there                                                                         |\n| --maxcoverage      | 100                                 | SAMtools parameter, the maximal number of reads that need to map at a location so that a SNP can be called there                                                                         |\n| --high_af          | 0.95                                | High, lower and upper allelic frequency, input variables for mergeVCFfiles.pl, select SNPs & INDELS when their allelic frequency is between lower_af and upper_af or higher than high_af |\n| --lower_af         | 0.3                                 | Lower allelic frequency                                                                                                                                                                  |\n| --upper_af         | 0.7                                 | Upper allelic frequency                                                                                                                                                                  | \nThe reasoning behind the high, lower and upper allelic frequency is providing the ability to select both hetero- and\nmonozygotic SNP variations. \nThe column \"new\" is added when the results are compared to SNPdb. A \"y\" (yes) indicates that a variant was new, ie NOT\nfound in SNPdb. A \"n\" (no) means not new (ie found in SNPdb) and an \"m\" (mismatch) is used for those mismatches in the \nmapped reads that were found in SNPdb. There is no allelic frequency information for the \"m\" variants, so this has been\nset to 0.0.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9025293040157767,
      "result": {
        "original_header": "ORF assembly <a name=\"assembly\"></a>",
        "type": "Text_excerpt",
        "value": "Information about called [TIS's](#tis_calling) and [SNPs](#snp_calling) can be used to construct the candidate translation products *in silico*. In this \nprocess, the program keeps track of the exonic structure of the transcript and known selenocysteines (encoded by an 'UGA'\ncodon, which can also function as a STOP signal). Both the translation product with the selenocysteine and the earlier \nterminated product will be kept. For near-cognate start sites, the first codon is replace for a cognate\nmethionine. Furthermore, translation products will only be outputted if the translation stops at a valid stop signal.\nThe coverage and FPKM value per translation product will be calculated as well. \n| Argument         | Default                     | Description                                                                                   |\n|------------------|-----------------------------|-----------------------------------------------------------------------------------------------|\n| --dir            | CWD env setting             | The working directory                                                                         |\n| --tmp            | work_dir/tmp                | The temporary files folder                                                                    |\n| --sqliteRES      | Mandatory                   | The SQLite results database with all previous results                                         |\n| --local_max      | 1                           | The range wherein the local maximum can be located (e.g. 1 means +/- one triplet)             |\n| --min_count_aTIS | 5                           | The minimum count of ribosome profiling reads that need to map to the aTIS                    |\n| --R_aTIS         | 0.05                        | The Rltm - Rchx value threshold for aTIS ORFs                                                 |\n| --min_count_5    | 10                          | The minimum count of ribosome profiling reads that need to map to a 5'UTR ORF TIS             |\n| --R_5            | 0.05                        | The Rltm - Rchx value threshold for 5'UTR ORFs                                                |\n| --min_count_CDS  | 15                          | The minimum count of ribosome profiling reads that need to map to a CDS ORF TIS               |\n| --R_CDS          | 0.15                        | The Rltm - Rchx value threshold for CDS ORFs                                                  |\n| --min_count_3    | 10                          | The minimum count of ribosome profiling reads that need to map to a 3'UTR ORF TIS             |\n| --R_3            | 0.05                        | The Rltm - Rchx value threshold for 3'UTR ORFs                                                |\n| --min_count_ntr  | 10                          | The minimum count of ribosome profiling reads that need to map to a non-codign region ORF TIS |\n| --R_ntr          | 0.05                        | The Rltm - Rchx value threshold for non-coding region ORFs                                    |\n| --out_sqlite     | same as sqliteRES parameter | The SQLite database holding all output                                                        |\n| --snp            | NO                          | The applied SNP algorithm. Options: 'NO', 'samtools', 'samtools_dbSNP'                        |\n| --tis_ids        | Mandatory                   | List of the analysis ids (one integer or a comma-separated list of integers)                  | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9478128183383573,
      "result": {
        "original_header": "PRICE <a name=\"price\"></a>",
        "type": "Text_excerpt",
        "value": "Another method uses the [PRICE](https://github.com/erhard-lab/gedi/wiki/Price) algorithm to pick up translation from \nribosome profiling data. PRICE (Probabilistic inference of codon activities by an EM algorithm) is a method to identify\ntranslated ORFs. Make sure you have the right Java distribution as stated on the \n[wiki](https://github.com/erhard-lab/gedi/wiki/Price) of PRICE. The right Java distribution is also available in a separate Conda [environment](#add_envs). You can activate this environment with following command:\n```\nsource activate price\n```\n \nPROTEOFORMER contains a wrapper that fully executes PRICE and uses its results in order to obtain a candidate translation \nproduct table similar to the assembly table. PRICE does not account for selenocysteines, so these cannot be included \nwith this methodology. Execution of PRICE comprises genome reference preparation, the actual PRICE run and conversion of \nthe output CIT file. Afterwards the output of PRICE will be combined with information from Ensembl in order to obtain all\nneeded features of the translation product table. All these steps are included in the PROTEOFORMER wrapper program. The \nwrapper let PRICE use both treatment samples if they are available but it is also possible to run the PRICE wrapper with \nonly an untreated/CHX sample. \n| Argument       | Default         | Description                                                                   |\n|----------------|-----------------|-------------------------------------------------------------------------------|\n| -w/--workdir   | CWD env setting | Working directory                                                             |\n| -t/--tmp       | workdir/tmp     | Temporary files folder                                                        |\n| -r/--result_db | Mandatory       | The SQLite database with results of mapping and translated transcript calling |\n| -f/--fdr       | 0.1             | FDR value threshold used in PRICE                                             |\n| -m/--max_ram   | PRICE default   | Maximum amount of gigabytes RAM available for running PRICE                   |\n| -h/--help      | /               | Show help message                                                             | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9484143532263739,
      "result": {
        "original_header": "SPECtre <a name=\"spectre_tool\"></a>",
        "type": "Text_excerpt",
        "value": "A third method is based on [SPECtre](https://github.com/mills-lab/spectre). SPECtre is a tool for searching actively \ntranslated regions in ribosome profiling using a spectral coherence classifier. SPECtre runs solely based on an \nuntreated/CHX sample, so no initiation profile is necessary. However, SPECtre starts from the reference information in the\nGTF file and is therefore less suited to pick up unknown new ORFs. \nIn this environment, a PROTEOFORMER wrapper for SPECtre can run. The wrapper runs SPECtre in the background, multithreaded\nover all chromosomes and merges all results afterwards. Next, these results are parsed and supplied with information from \nEnsembl to obtain all features needed for the PROTEOFORMER translation product table. Furthermore, SPECtre takes \nselenocysteines into account. \n| Argument               | Default                   | Description                                                                                                       |\n|------------------------|---------------------------|-------------------------------------------------------------------------------------------------------------------|\n| -w/--workdir           | CWD env setting           | The working directory                                                                                             |\n| -t/--tmp               | workdir/tmp               | The temporary files folder                                                                                        |\n| -r/--result_db         | Mandatory                 | SQLite database with results from mapping and translated transcript calling                                       |\n| -b/--untr_bam          | Get from results database | BAM file of the untreated/CHX sample                                                                              |\n| -o/--offsets           | Get from results database | Custom list of offsets, but defaultly the program takes these from the results database                           |\n| -c/--cores             | Get from results database | Defaultly taken from the results database, but you can suggest a different amount of cores especially for SPECtre |\n| -x/--threads_per_chrom | 1                         | The number of threads used per chromosome to run SPECtre                                                          |\n| -f/--fdr               | 0.05                      | FDR threshold used in SPECtre                                                                                     |\n| -h/--help              | /                         | Show help message                                                                                                 | \n**Caution:** SPECtre is currently not suited to work with large offset list like outputted by Plastid. Therefore, it is \nadvisable to only use a list of the P-site offsets of the most abundant RPF lengths. \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9906103987199032,
      "result": {
        "original_header": "Analysis ID overview table <a name=\"tis_overview\"></a>",
        "type": "Text_excerpt",
        "value": "Over the different analysis strategies ([translated transcript calling](#transcriptcalling) and [ORF calling](#orf_calling)),\nthe applied parameters are kept in a TIS overview table. For each analysis executed and stored in a certain SQLite results \ndatabase, PROTEOFORMER keeps track of this analysis ID and its corresponding parameters in a separate table. At any time,\nthe content of this analysis ID table can be printed in a tab file using following program:\n```\nperl TIS_overview.pl --sqlite_db SQLite/results.db\n```\nInput arguments:\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9142502481341369,
      "result": {
        "original_header": "FASTA file generation <a name=\"fasta_generation\"></a>",
        "type": "Text_excerpt",
        "value": "Translation products estimated in a particular analysis ID can be outputted in FASTA file format. This allows to submit \nthem in a proteomics analysis as search space. During this output generation, additional processes can be executed. The \ncandidate translation products can be mapped to reference information and redundancy on subsequence level in between \ntranslation products can be removed. \nAn example of how to run this program for analysis ID 1:\n```\nperl generate_translation_db.pl --result_db SQLite/results.db --tis_ids 1 --mflag 4 \n```\n \n| Argument            | Default                                       | Description                                                                                                                                                                                                                                  |\n|---------------------|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| --work_dir          | CWD env setting                               | Working directory                                                                                                                                                                                                                            |\n| --result_db         | Mandatory                                     | SQLite database holding all results                                                                                                                                                                                                          |\n| --tis_ids           | Mandatory                                     | Analysis IDs for which an output file needs to be generated. Either an integer with one ID, a comma-separated list of IDs or 'all', leading to a FASTA/PEFF for all of the analysis IDs available                                            |\n| --mslength          | 6                                             | Minimum sequence length allowed in the output FASTA/PEFF file                                                                                                                                                                                |\n| --translation_db    | species_TIS_analysisID_transcripts.fasta/peff | Name of the output translation database file (FASTA/PEFF)                                                                                                                                                                                    |\n| --var_file          | species_TIS_analysisID_transcripts_VAR.txt    | File to store SNP and indel information of sequences in the translation database                                                                                                                                                             |\n| --tis_call          | Y                                             | Whether annotated TISs that did not pass the TIS calling algorithm are allowed in the output file. Possible options: Yes ('Y') or No ('N')                                                                                                   |\n| --peff              | N                                             | Generate PEFF instead of FASTA format. Options: Yes ('Y') or No ('N')                                                                                                                                                                        |\n| --mflag             | 4                                             | Flag describing the additional tasks that will be performed: 1 = remote BioMart mapping, 2 = local file BioMart mapping, 3 = sequence based blast mapping, 4 = no mapping, only redundancy removal, 5 = no mapping and no redundancy removal |\n| --mapping           | Mandatory if mflag=1 or 2                     | Ensembl database to download BioMart mapped transcripts or local file to map data                                                                                                                                                            |\n| --db_config_version | Mandatory if mflag=1                          | Ensembl database configuration version                                                                                                                                                                                                       |\n| --external_ref      | Mandatory if mflag=1                          | External reference in biomart to map transcripts to                                                                                                                                                                                          |\n| --blast_pgm         | ublast                                        | BLAST program to map based on sequence. Possible options: 'ublast' and 'blastp'                                                                                                                                                              |\n| --blastdb           | Mandatory if mflag=3                          | The UBLAST or BLASTP formatted database                                                                                                                                                                                                      |\n| --evalue            | 1e-10                                         | BLAST e-value                                                                                                                                                                                                                                |\n| --min_blast_length  | 32                                            | Minimum sequence length to perform BLAST                                                                                                                                                                                                     |\n| --identity          | 75                                            | Minimum alignment score for BLAST                                                                                                                                                                                                            |\n| --coverage          | 30                                            | Minimum number of identical positions for BLAST                                                                                                                                                                                              |\n| --word_size         | 3                                             | Minimum word size for BLAST                                                                                                                                                                                                                  |\n| --gapopen           | 11                                            | Cost of gap open in BLAST                                                                                                                                                                                                                    |\n| --gapextend         | 1                                             | Gap extension penalty for BLAST                                                                                                                                                                                                              |\n| --matrix            | BLOSUM62                                      | Matrix for the BLAST search                                                                                                                                                                                                                  | \nRedundancy will be default removed unless mflag 5 is selected or if a PEFF file is generated instead of a FASTA file.\nMapping can be done based on [BioMart](https://www.ensembl.org/biomart) (remote or with a local file) or sequence-based\nusing [UBLAST](https://drive5.com/usearch/manual/ublast_algo.html) or \n[BLASTP](https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE=Proteins). After mapping, inherent redundancy (also on sub-string\nlevel) will be removed if desired. A VAR file will also be generated, next to the FASTA file in order to better describe \nwhich SNPs are linked to which SNP IDs. \nHereafter, a snippet of an example FASTA output file is given:\n```\n>generic|ENST00000647097_4_102760894_aTIS_1|ENSG00000109323 ATG True -1 0 +1 [ENST00000489071_20_35548863_ntr#ENST00000226578_4_102760894_aTIS_1]\nMRLHLLLLLALCGAGTTAAELSYSLRGNWSICNGNGSLELPGAVPGCVHSALFQQGLIQD\nSYYRFNDLNYRWVSLDNWTYSKEFKIPFEISKWQKVNLILEGVDTVSKILFNEVTIGETD\nNMFNRYSFDITNVVRDVNSIELRFQSAVLYAAQQSKAHTRYQVPPDCPPLVQKGECHVNF\nVRKEQCSFSWDWGPSFPTQGIWKDVRIEAYNICHLNYFTFSPIYDKSAQEWNLEIESTFD\nVVSSKPVGGQVIIAIPKLQTQQTYSIELQPGKRIVELFVNISKNITVETWWPHGHGNQTG\nYNMTVLFELDGGLNIEKSAKVYFRTVELIEEPIKGSPGLSFYFKINGFPIFLKGSNWIPA\nDSFQDRVTSELLRLLLQSVVDANMNTLRVWGGGIYEQDEFYELCDELGIMVWQDFMFACA\nLYPTDQGFLDSVTAEVAYQIKRLKSHPSIIIWSGNNENEEALMMNWYHISFTDRPIYIKD\nYVTLYVKNIRELVLAGDKSRPFITSSPTNGAETVAEAWVSQNPNSNYFGDVHFYDYISDC\nWNWKVFPKARFASEYGYQSWPSFSTLEKVSSTEDWSFNSKFSLHRQHHEGGNKQMLYQAG\nLHFKLPQSTDPLRTFKDTIYLTQVMQAQCVKTETEFYRRSRSEIVDQQGHTMGALYWQLN\nDIWQAPSWASLEYGGKWKMLHYFAQNFFAPLLPVGFENENTFYIYGVSDLHSDYSMTLSV\nRVHTWSSLEPVCSRVTERFVMKGGEAVCLYEEPVSELLRRCGNCTRESCVVSFYLSADHE\nLLSPTNYHFLSSPKEAVGLCKAQITAIISQQGDIFVFDLETSAVAPFVWLDVGSIPGRFS\nDNGFLMTEKTRTILFYPWEPTSKNELEQSFHVTSLTDIY\n>generic|ENST00000647097_4_102760894_aTIS_2|ENSG00000109323 ATG True -1 0 +1 [ENST00000226578_4_102760894_aTIS_2]\nMRLHLLLLLALCGAGTTAAELSYSLRGNWSICNGNGSLELPGAVPGCVHSALFQQGLIQD\nSYYRFNDLNYRWVSLDNWTYSKEFKIPFEISKWQKVNLILEGVDTVSKILFNEVTIGETD\nNMFNRYSFDITNVVRDVNSIELRFQSAVLYAAQQSKAHTRYQVPPDCPPLVQKGECHVNF\nVRKEQCSFSWDWGPSFPTQGIWKDVRIEAYNICHLNYFTFSPIYDKSAQEWNLEIESTFD\nVVSSKPVGGQVIVAIPKLQTQQTYSIELQPGKRIVELFVNISKNITVETWWPHGHGNQTG\nYNMTVLFELDGGLNIEKSAKVYFRTVELIEEPIKGSPGLSFYFKINGFPIFLKGSNWIPA\nDSFQDRVTSELLRLLLQSVVDANMNTLRVWGGGIYEQDEFYELCDELGIMVWQDFMFACA\nLYPTDQGFLDSVTAEVAYQIKRLKSHPSIIIWSGNNENEEALMMNWYHISFTDRPIYIKD\nYVTLYVKNIRELVLAGDKSRPFITSSPTNGAETVAEAWVSQNPNSNYFGDVHFYDYISDC\nWNWKVFPKARFASEYGYQSWPSFSTLEKVSSTEDWSFNSKFSLHRQHHEGGNKQMLYQAG\nLHFKLPQSTDPLRTFKDTIYLTQVMQAQCVKTETEFYRRSRSEIVDQQGHTMGALYWQLN\nDIWQAPSWASLEYGGKWKMLHYFAQNFFAPLLPVGFENENMFYIYGVSDLHSDYSMTLSV\nRVHTWSSLEPVCSRVTERFVMKGGEAVCLYEEPVSELLRRCGNCTRESCVVSFYLSADHE\nLLSPTNYHFLSSPKEAVGLCKAQITAIISQQGDIFVFDLETSAVAPFVWLDVGSIPGRFS\nDNGFLMTEKTRTILFYPWEPTSKNELEQSFHVTSLTDIY\n>generic|ENST00000647097_4_102760938_5UTR|ENSG00000109323 CTG NA -1 0 +1 [ENST00000645348_4_102760938_5UTR#ENST00000646727_4_102760938_5UTR#ENST00000644545_4_102760938_5UTR#ENST00000226578_4_102760938_5UTR#ENST00000642252_4_102760938_5UTR#ENST00000644159_4_102760938_5UTR#ENST00000644965_4_102760797_CDS#ENST00000646311_4_102760938_5UTR]\nMPFDLSTSRWRGISRCASTCSCCSRCAVQAPPPRSSVTACVATGASAMGTARWSCPGRSL\nAACTAPCSSRA\n...\n```\n \nAnother option is to generated a [PEFF file](http://www.psidev.info/peff), an extended FASTA format for proteogenomics \nrecently devised by the HUPO-PSI. When the PEFF option is turned on, redundancy will not be removed but schematically \nincluded in the PEFF tags. \nHereafter, a snippet of an example FASTA output file is given:\n```\n# PEFF 1.0\n# //\n# DbName=genericDB\n# DbSource=http://www.biobix.be/proteoform/\n# DbVersion=2018-03-22\n# HasAnnotationIdentifiers=true\n# ProteoformDb=true\n# Prefix=gen\n# NumberOfEntries=4\n# SequenceType=AA\n# GeneralComment=Proteogenomics application to generate protein sequences from RIBO-seq\n# //\n>gen:ENST00000000412-1 \\PName=mannose-6-phosphate receptor, cation dependent  \\GName=mannose-6-phosphate receptor, cation dependent  \\NcbiTaxId=9606 \\TaxName=Homo sapiens \\Length=277 \\VariantSimple=(1:122|H) \\VariantComplex=(2:1|120|M)(3:1|191|M)(4:1|235|M)  \\Proteoform=(ENST00000000412_12_8946404_aTIS_pf1.0|1-277||canonical form)(ENST00000000412_12_8946404_aTIS_1_pf1.4|1-277|1|proteoform with SAV)(ENST00000000412_12_8943896_CDS_pf1.5|1-277|2|N-terminal truncation)(ENST00000000412_12_8943418_CDS_pf1.2|1-277|3|N-terminal truncation)(ENST00000000412_12_8942424_CDS_pf1.3|1-277|4|N-terminal truncation)(ENST00000000412_12_8943896_CDS_1_pf1.1|1-277|1,2|N-terminal truncation, proteoform with SAV)\nMFPFYSCWRTGLLLLLLAVAVRESWQTEEKTCDLVGEKGKESEKELALVKRLKPLFNKSFESTVGQGSDTYIYIFRVCREAGNHTSGAGLVQINKSNGKETVVGRLNETHIFNGSNWIMLIYKGGDEYDNHCGKEQRRAVVMISCNRHTLADNFNPVSEERGKVQDCFYLFEMDSSLACSPEISHLSVGSILLVTFASLVAVYVVGGFLYQRLVVGAKGMEQFPHLAFWQDLGNLVADGCDFVCRSKPRNVPAAYRGVGDDQLGEESEERDDHLLPM\n>gen:ENST00000000412-2 \\PName=uORF of mannose-6-phosphate receptor, cation dependent  \\GName=mannose-6-phosphate receptor, cation dependent  \\NcbiTaxId=9606 \\TaxName=Homo sapiens \\Length=41 \\VariantComplex=(1:1|11|M)  \\Proteoform=(ENST00000000412_12_8949642_5UTR_pf2.0|1-41||canonical form)(ENST00000000412_12_8949612_5UTR_pf2.1|1-41|1|N-terminal truncation)\nMGHSEALGGTLASETSSGTGVCGRPLAGPVSHPQKGIHWGF\n>gen:ENST00000000412-3 \\PName=Alternative reading frame product of mannose-6-phosphate receptor, cation dependent  \\GName=mannose-6-phosphate receptor, cation dependent  \\NcbiTaxId=9606 \\TaxName=Homo sapiens \\Length=16  \\Proteoform=(ENST00000000412_12_8946336_CDS_pf3.0|1-16||canonical form)\nMLADRRKNLRLGRRKG\n>gen:ENST00000000412-4 \\PName=Alternative reading frame product of mannose-6-phosphate receptor, cation dependent  \\GName=mannose-6-phosphate receptor, cation dependent  \\NcbiTaxId=9606 \\TaxName=Homo sapiens \\Length=56  \\Proteoform=(ENST00000000412_12_8943516_CDS_pf4.0|1-56||canonical form)\nMRSVAKSKIVSTSLRWIAAWPVHQRSPTSVWVPSYLSRLHHWLLFMLLGGSYTSDW\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9549264791745085,
      "result": {
        "original_header": "FLOSS calculation <a name=\"floss\"></a>",
        "type": "Text_excerpt",
        "value": "The fragment length organization similarity score (FLOSS) measures the similarity between the fragment length distribution \nof an ORF and the averaged fragment length distribution of a set of reference ORFs. This statistic was first described by \n[Ingolia et al. (2014)](https://doi.org/10.1016/j.celrep.2014.07.045). The FLOSS formula can also be found in this manuscript. \nFLOSS calculation is embedded in the PROTEOFORMER pipeline. A tool is included that:\n1. Calculates the fragment length distribution of the reference set (the canonical translation regions of all Ensembl \nnuclear protein-coding genes, except those that are overlapping with non-coding regions). Reference distribution will \nbe stored in the results database for further use.\n2. Calculates smoother data for the reference set. For all canonical coding reference ORFs (step 1), a FLOSS score can be\ncalculated. Then, using a sliding window approach (range 200) over the FLOSS scores ranked by the increasing amount of \nreads of the underlying reference ORFs. For each window the first (Q<sub>1</sub>) and third quantile (Q<sub>3</sub>) are\nused to calculate the raw extreme (Q<sub>3</sub> + 3 . (Q<sub>3</sub>-Q<sub>1</sub>)). Based on all raw extremes, a \nLoess smoother is fitted, using R. R is also used for generating some plots. Smoother results will be stored in the \nresults database for further use.\n3. For the candidate ORFs, FLOSS scores can be calculated and based on the amount of reads of the candidate ORF, its \nFLOSS score can be compared to the cutoff smoother, enabling a FLOSS classification of the candidate ORF. 'Good' means \nthat the ORF has a good coding probability. 'Extreme' is used for ORF which are probably non-coding. 'Not in cutoff range' \nmeans that the amount of reads of the ORF is outside of the smoother range (due to the sliding window approach). All \nclassification results will be stored in a separate table of the results database. \n| Argument    | Default         | Description                                                                         |\n|-------------|-----------------|-------------------------------------------------------------------------------------|\n| --dir       | CWD env setting | Path to the working directory                                                       |\n| --tmp       | dir/tmp         | Temporary files folder                                                              |\n| --sqlite_db | Mandatory       | SQLite results database with mapping, translated transcript and ORF calling results |\n| --tis_ids   | Mandatory       | List of analysis IDs                                                                | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9301030398368216,
      "result": {
        "original_header": "ORF-based counts <a name=\"orfbasedcounts\"></a>",
        "type": "Text_excerpt",
        "value": "An optional module was written in order to fetch the read counts for each identified open reading frame (ORF).\nIn this tool, there is an option to trim off counts at the start and end of the ORF (as it has been seen that artefacts \ncan occur at the borders of ORFs due to the RIBO-Seq protocol). The trim length of these regions can be set in both an absolute or relative (percentage \nin function of the ORF length) fashion. Attention though, for small ORFs with absolute trimming, trimming will be performed \nhowever relative as the trimming length could become larger than the actual ORF length otherwise. ORF read counts can \nthen be used to do differential expression analysis with packages like \n[DESeq](https://bioconductor.org/packages/release/bioc/html/DESeq2.html) or \n[EdgeR](https://bioconductor.org/packages/release/bioc/html/edgeR.html). \n| Argument      | Default                                                   | Description                                                                                                                                                                   |\n|---------------|-----------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| -w/--work_dir | CWD env setting                                           | The working directory                                                                                                                                                         |\n| -s/--sqlitedb | Mandatory                                                 | The SQLite results database with results from former steps                                                                                                                    |\n| -t/--tis_ids  | Mandatory                                                 | The TIS ID or a comma-separated list of analysis IDs for which the ORF-based counts need to be determined                                                                     |\n| -c/--trim     | relative                                                  | Whether ORFs should be trimmed. Options: absolute, relative, none                                                                                                             |\n| -n/--nt_trim  | '15' for absolute trimming, '0.025' for relative trimming | For absolute trimming, you can here suggest the trimming length. For relative trimming, you can here suggest the part that will be trimmed off in function of the ORF length. |\n| -l/--ltm      | n                                                         | Whether the program should make an ORF based counts table for the 'treated' data. Options: 'y' (yes) or 'n' (no).                                                             |\n| -r/--rna      | n                                                         | Whether the program should make an ORF based counts table for RNA data. Options: 'n' (No) or suggest the SQLite table where RNA results are stored                            | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9609547058770302,
      "result": {
        "original_header": "Feature summarization <a name=\"feature\"></a>",
        "type": "Text_excerpt",
        "value": "Next to ORF based counts, counts can also be summarized for other features:\n* genes\n* transcripts\n* exons\n* promotors \n| Argument               | Default                              | Description                                                                                  |\n|------------------------|--------------------------------------|----------------------------------------------------------------------------------------------|\n| -w/--work_dir          | CWD env setting                      | Working directory                                                                            |\n| -c/--sqliteC           | Mandatory                            | The SQLite database holding count data                                                       |\n| -e/--sqliteE           | Mandatory                            | The SQLite database holding Ensembl annotation                                               |\n| -f/--feature           | Mandatory                            | The annotation feature at what level to summarize. Options: exon, transcript, gene, promotor |\n| -d/--data              | Mandatory                            | The type of data used to generate counts. Options: ribo, rna, rrbs                           |\n| -m/--mapping           | unique, mandatory for rrbs data      | The type of read mapping. Options: unique, multi                                             |\n| -t/--transcripts       | all                                  | The type of transcripts to process. Options: all, canonical                                  |\n| -r/--rrbs              | Mandatory for promotor summarization | The table holding the rrbs count data                                                        |\n| -o/--five_prime_offset | 0                                    | The 5'offset for feature boundaries used for gene features                                   | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8623011736346007,
      "result": {
        "original_header": "Database combinations <a name=\"database_combinations\"></a>",
        "type": "Text_excerpt",
        "value": "The [FASTA files](#fasta_generation) per TIS ID can be further combined with other FASTA files. Tools to do so are present\nin the `Additional_tools` folder of this GitHub repo.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9137782823893933,
      "result": {
        "original_header": "Different analysis IDs <a name=\"analysisIDs\"></a>",
        "type": "Text_excerpt",
        "value": "The [FASTA files](#fasta_generation) generated per TIS ID can be combined in order to get a total FASTA file of multiple \nanalyses together. Bincodes will be generated per sequence in order to represent in which analysis ID the sequence is \noccurring. An overview file clearly reports the composition of this bincode and the total sequence counts per bincode.\nVenn diagrams will also be generated, showing the overlap between the analysis sets. \nIf a sequence occurred in different analyses, the ID of the sequence in other analyses will be kept at the end of the \ndescription line if the verbose output is turned on. \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8465940374300224,
      "result": {
        "original_header": "With UniProt <a name=\"withUniprot\"></a>",
        "type": "Text_excerpt",
        "value": "[FASTA file](#fasta_generation) per TIS ID or [combined FASTA files](#analysisIDs) can lateron combined with UniProt FASTA files. The origin of the files is\nclear from the structure of the ID, so no bincodes are needed here. An overview file still reports the counts and counts \nare also plotted in Venn diagrams. With verbose output, redundant sequences will keep all their IDs in the description \nlines, at the end. The UniProt ID will be privileged however for becoming the main ID. \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9952706374462296,
      "result": {
        "original_header": "MS Validation <a name=\"MSvalidation\"></a>",
        "type": "Text_excerpt",
        "value": "All different FASTA (and PEFF) files can be used as a search space in mass spectrometry-based validation. Different \nprograms and search engines are available for analysis.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9122093584922566,
      "result": {
        "original_header": "SearchGUI and Peptideshaker <a name=\"searchgui\"></a>",
        "type": "Text_excerpt",
        "value": "The tool is available in both a command line and a graphical user interface version. All details on installation and \nusage can be found [here](http://compomics.github.io/projects/searchgui.html).\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.943287243118626,
      "result": {
        "original_header": "MaxQuant <a name=\"maxquant\"></a>",
        "type": "Text_excerpt",
        "value": "[MaxQuant](http://www.coxdocs.org/doku.php?id=maxquant:start) is a proteomics software package, specifically aimed at \nhigh-resolution MS data. Several labeling techniques as well as label-free quantification is supported. The package \nincludes both the Andromeda search engine as the viewer application for inspecting raw data, identification and \nquantification results. The tool is available as a graphical user interface. More information (download info, manual,\ntutorials, forums) can be found [here](http://www.coxdocs.org/doku.php?id=maxquant:start). \nIn the folder `Additional_tools/MaxQuant_results_parsing` of this GitHub repo, some additional scripts can be found to \nparse the output of the MaxQuant searches. Essential output files of MaxQuant that are needed in this results parsing, \ncan be found in the `combined/txt` of the MaxQuant output folder and include:\n* `proteinGroups.txt`\n* `peptides.txt`\n* `msms.txt` \nThe `parse_maxquant.py` script analyses the part of each ORF calling method in the final MS identified output of MaxQuant.\nThe `parse_maxquant_uniprot.py` script analyses the part of the total PROTEOFORMER pipeline in the final MS identified \noutput of MaxQuant compared to the part of UniProt. This generates a max_protein_db database. Based on this database, a \nthird script can be run (`analyse_proteoforms.py`). This script classifies all new found proteoforms of PROTEOFORMER \nbased on the nature of their variation. For this last script, the [ClustalOmega](http://www.clustal.org/omega/) tool \nneeds to be installed on your system. \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9590569306531675,
      "result": {
        "original_header": "Pipeline master script <a name=\"masterscript\"></a>",
        "type": "Text_excerpt",
        "value": "If you want to run the complete pipeline (or several parts of it) on one or multiple samples, the PROTEOFORMER pipeline master script (scripted in Bash) can be a useful tool. An example or default version is given in the main directory of this repository. Feel free to adapt this by block (un)commenting the steps you need or want to skip. Also, the input arguments can be changed to fit your purpose. \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9368432358791514,
      "result": {
        "original_header": "Copyright <a name=\"copyright\"></a>",
        "type": "Text_excerpt",
        "value": "This program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version. \nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details. \nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/erhard-lab/gedi/wiki/Price"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Additional environments for RiboZINB, SPECtre and SRA download <a name=\"add_envs\"></a>",
        "parent_header": [
          "Proteoformer",
          "Dependencies <a name=\"dependencies\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "For some tools, we needed to construct separate environments with different versions of the underlying tools. For all \nthe other tools, the proteoformer environment is used.\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "RiboZINB",
        "parent_header": [
          "Proteoformer",
          "Dependencies <a name=\"dependencies\"></a>",
          "Additional environments for RiboZINB, SPECtre and SRA download <a name=\"add_envs\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "```\nconda env create -f Dependency_envs/ribozinb.yml\nsource activate ribozinb\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SPECtre",
        "parent_header": [
          "Proteoformer",
          "Dependencies <a name=\"dependencies\"></a>",
          "Additional environments for RiboZINB, SPECtre and SRA download <a name=\"add_envs\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "```\nconda env create -f Dependency_envs/spectre.yml\nsource activate spectre\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "PRICE",
        "parent_header": [
          "Proteoformer",
          "Dependencies <a name=\"dependencies\"></a>",
          "Additional environments for RiboZINB, SPECtre and SRA download <a name=\"add_envs\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "```\nconda env create -f Dependency_envs/price.yml\nsource activate price\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SRA download",
        "parent_header": [
          "Proteoformer",
          "Dependencies <a name=\"dependencies\"></a>",
          "Additional environments for RiboZINB, SPECtre and SRA download <a name=\"add_envs\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "```\nconda env create -f Dependency_envs/download_sra_parallel.yml\nsource activate download_sra_parallel\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "iGenomes reference information download <a name=\"igenomes\"></a>",
        "parent_header": [
          "Proteoformer",
          "Preparations <a name=\"preparations\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Mapping is done based on reference information in the form of iGenomes directories. These directories can easily\ndownloaded and constructed with the `get_igenomes.py` script in the `Additional_tools` folder. For example:\n\n```\npython get_igenomes.py -v 92 -s human -d /path/to/dir -r -c 15\n```\n\nInput arguments:\n\n| Argument       | Default   | Description                                                                                                                                                              |\n|----------------|-----------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| -d / --dir     | Mandatory | Directory wherein the igenomes tree structure will be installed                                                                                                          |\n| -v / --version | Mandatory | Ensembl annotation version to download (Ensembl plant (for arabidopsis) has seperate annotation versions!)                                                               |\n| -s / --species | Mandatory | Specify the desired species for which gene annotation files should be downloaded                                                                                         |\n| -r / --remove  |           | If any, overwrite the existing igenomes structure for that species                                                                                                       |\n| -c / --cores   | Mandatory | The amount of cores that will be used for downloading chromosomes files (Do not use more than 15 cores as the download server can only establish 15 connections at once) |\n| -h / --help    |           | This useful help message                                                                                                                                                 |\n\nThe tool currently supports following species:\n\n| Species                                                             | Input value species argument |\n|---------------------------------------------------------------------|------------------------------|\n| Homo sapiens                                                        | human                        |\n| Mus musculus                                                        | mouse                        |\n| Rattus norvegicus                                                   | rat                          |\n| Drosophila melanogaster                                             | fruitfly                     |\n| Saccharomyces cerevisiae                                            | yeast                        |\n| Danio rerio                                                         | zebrafish                    |\n| Arabidopsis thaliana                                                | arabidopsis                  |\n| Caenorhabditis elegans                                              | c.elegans                    |\n| Salmonella enterica subsp. enterica serovar Typhimurium str. SL1344 | SL1344                       |\n| Mycobacterium abscessus atcc 19977                                  | MYC_ABS_ATCC_19977           |\n\nThere is also an analogue Python 3.10 version of this step:\n\n```\npython get_igenomes_py3.py -v 92 -s human -d /path/to/dir -r -c 15\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Ensembl download <a name=\"ensembl\"></a>",
        "parent_header": [
          "Proteoformer",
          "Preparations <a name=\"preparations\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "After mapping, mostly reference annotation is used from Ensembl (exons, splicing, canonical translation initiation,...). \nThis information is available as an SQLite database and is downloadable by using the `ENS_db.py` script of the `Additional_tools`\n folder. For example:\n \n```\npython ENS_db.py -v 92 -s human\n```\n\nInput arguments:\n\n| Argument       | Default   | Description                                                                      |\n|----------------|-----------|----------------------------------------------------------------------------------|\n| -v / --version | Mandatory | Ensembl annotation version to download (supported versions: from 74)             |\n| -s / --species | Mandatory | Specify the desired species for which gene annotation files should be downloaded |\n| -h / --help    |           | Print this useful help message                                                   |\n\nCurrently supported species:\n\n| Species                                                             | Input value species argument |\n|---------------------------------------------------------------------|------------------------------|\n| Homo sapiens                                                        | human                        |\n| Mus musculus                                                        | mouse                        |\n| Drosophila melanogaster                                             | fruitfly                     |\n| Saccharomyces cerevisiae                                            | yeast                        |\n| Caenorhabditis elegans                                              | c.elegans                    |\n| Salmonella enterica subsp. enterica serovar Typhimurium str. SL1344 | SL1344                       |\n| Mycobacterium abscessus atcc 19977                                  | MYC_ABS_ATCC_19977           |\n\nThere is also a Python 3.10 version of this step:\n\n```\npython ENS_db_py3.py -v 92 -s human\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SRA parallel download <a name=\"sra\"></a>",
        "parent_header": [
          "Proteoformer",
          "Preparations <a name=\"preparations\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "If you download the raw data (FASTQ) from SRA, you can use the [SRA toolkit](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&f=std).\nHowever, we made a module to speed up this downloading process by using multiple cores of your system for multiple files\nat once. Use the specific environment for this tool, while using this module. For example:\n\n```\nsource activate download_sra_parallel\n./download_sra_parallel.sh -c 20 -f 3034567 -l 3034572 #This downloads all fastq data  from SRR3034572 up until SRR3034572 on 20 cores\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Biobix/proteoformer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Biobix/proteoformer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Biobix/proteoformer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Proteoformer"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Biobix/proteoformer/master/proteoformer_pipeline_py3.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Biobix/proteoformer/master/proteoformer_pipeline_py2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Biobix/proteoformer/master/Additional_tools/download_sra_parallel.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Biobix/proteoformer/master/LogoBanner/Banner_proteoformer20.jpg"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "UTR simulation for Prokaryotes <a name=\"prokaryotutr\"></a>",
        "parent_header": [
          "Proteoformer",
          "Preparations <a name=\"preparations\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "For Prokaryotes, no untranslated upstream regions (UTRs) exist. Although, offset callers, used during mapping, need these\nregions in order to calculate P-site offsets. Therefore, for Prokaryotes, these UTRs need to be simulated with the \n`simulate_utr_for_prokaryotes.py` script in the `Additional_tools` folder. For example:\n\n```\npython simulate_utr_for_prokaryotes.py igenomes/SL1344/Ensembl/ASM21085v2/Annotation/Genes/genes_32.gtf > igenomes/SL1344/Ensembl/ASM21085v2/Annotation/Genes/genes_32_with_utr.gtf\n# Move and copy GTFs\nmv igenomes/SL1344/Ensembl/ASM21085v2/Annotation/Genes/genes_32.gtf igenomes/SL1344/Ensembl/ASM21085v2/Annotation/Genes/genes_32_without_utr.gtf\ncp igenomes/SL1344/Ensembl/ASM21085v2/Annotation/Genes/genes_32_with_utr.gtf igenomes/SL1344/Ensembl/ASM21085v2/Annotation/Genes/genes_32.gtf\n```\n\nThis outputs a new GTF file. Best to rename the old GTF file and copy the new one under the name of the original GTF file \nas shown in the example.\n\nAdditional documentation can be found in the help message of the module.\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9382849368257915,
      "result": {
        "original_header": "Mapping <a name=\"mapping\"></a>",
        "type": "Text_excerpt",
        "value": "| Argument     | Default                                             | Description                                                        |\n|--------------|-----------------------------------------------------|--------------------------------------------------------------------|\n| --work_dir   | CWD env setting                                     | The working directory                                              |\n| --tmp        | work_dir/tmp                                        | Folder to store the temporary files in                             |\n| --out_sqlite | work_dir/SQLite/results.db                          | SQLite results database                                            |\n| --treated    | untreated                                           | Which sample to calculate offsets for (options: untreated/treated) |\n| --offset_img | work_dir/plastid/run_name_(un)treated_p_offsets.png | P-site offsets output image path                                   |\n| --verbose    | N                                                   | Use Y for debugging                                                |\n| --help       |                                                     | Print help message                                                 | \n| Argument           | Default                       | Description                                                                                                                                                                                                                                                                                          |\n|--------------------|-------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| --work_dir         | CWD env setting               | The working directory                                                                                                                                                                                                                                                                                |\n| --tmp              | work_dir/tmp                  | Folder to store the temporary files in                                                                                                                                                                                                                                                               |\n| --out_sqlite       | work_dir/SQLite/results.db    | SQLite results database                                                                                                                                                                                                                                                                              |\n| --offset           | standard                      | Offset option: you can use the standard offsets from Ingolia 2009 (standard), you can add offsets as a tab-separated txt file (from_file) or you can use the offsets determined with Plastid (plastid), use offsets with constant 5prime (cst_5prime), use offsets with constant 3prime (cst_3prime) |\n| --offset_file_untr | mandatory if offset=from_file | Offset input tab-separated txt file for untreated sample                                                                                                                                                                                                                                             |\n| --offset_file_tr   | mandatory if offset=from_file | Offset input tab-separated txt file for treated sample                                                                                                                                                                                                                                               |\n| --help             |                               | Print help message                                                                                                                                                                                                                                                                                   | \n| Variable | Value       |\n|----------|-------------|\n| run_name | experiment1 |\n| ...      | ...         | \n| chr | strand | start  | RPF | count |\n|-----|--------|--------|-----|-------|\n| 8   | -1     | 116252 | 28  | 2.0   |\n| ... | ...    | ...    | ... | ...   | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8809839175327518,
      "result": {
        "original_header": "Rule-based transcript calling <a name=\"rulebased\"></a>",
        "type": "Text_excerpt",
        "value": "| Argument     | Default                         | Description                                         |\n|--------------|---------------------------------|-----------------------------------------------------|\n| --work_dir   | CWD env setting                 | The working directory                               |\n| --tmp        | work_dir/tmp                    | The temporary files folder                          |\n| --in_sqlite  | SQLite/results.db               | The SQLite results database from previous steps     |\n| --out_sqlite | The same as in_sqlite atrgument | The SQLite results database to store all results in |\n| --ens_db     | Mandatory                       | The Ensembl database with annotation info           |\n| --help       |                                 | Generate help message                               | \n| transcript_id | stable_id       | chr | seq_region_id | seq_region_strand | seq_region_start | seq_region_end | read_counts | normalized_counts | biotype        | exon_coverage | canonical | ccds      | gene_stable_id  | FPKM             |coverage         |\n|---------------|-----------------|-----|---------------|-------------------|------------------|----------------|-------------|-------------------|----------------|---------------|-----------|-----------|-----------------|------------------|-----------------|\n| 196519        | ENST00000371471 | 20  | 131538        | -1                | 53567065         | 53593839       | 585         | 0.187680461982676 | protein_coding | Yes           | Yes       | CCDS13443 | ENSG00000171940 | 10.6593122808274 | 0.6674393749734 |\n| ...           | ...             | ... | ...           | ...               | ...              | ...            | ...         | ...               | ...            | ...           | ...       | ...       | ...             | ...              | ...             |\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999736554272983,
      "result": {
        "original_header": "RiboZINB <a name=\"ribozinb_trcal\"></a>",
        "type": "Text_excerpt",
        "value": "The RiboZINB tool requires its own [earlier installed](#add_envs) Conda environment to run:\n```\nsource activate ribozinb\n```\nAn example of how to run this tool:\n```\npython RiboZINB.py -p SQLite/results.db\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.995434238757391,
      "result": {
        "original_header": "SNP calling <a name=\"snp_calling\"></a>",
        "type": "Text_excerpt",
        "value": "An example of how to run this tool:\n```\nbash snp_calling --sqlitein path/to/results/database.db --sqliteout path/to/output/database.db --removeduplicates [y|n] --picardpath /path/to/picardmap --snpdbselected [y|n] --snpdb path/to/snpdb --toolsdir /path/to/tooldir --reads path/to/mapped/reads.sam --mincoverage 3 --maxcoverage 100 --high_af 0.95 --lower_af 0.3 --upper_af 0.7\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9627319779156337,
      "result": {
        "original_header": "PRICE <a name=\"price\"></a>",
        "type": "Text_excerpt",
        "value": "Another method uses the [PRICE](https://github.com/erhard-lab/gedi/wiki/Price) algorithm to pick up translation from \nribosome profiling data. PRICE (Probabilistic inference of codon activities by an EM algorithm) is a method to identify\ntranslated ORFs. Make sure you have the right Java distribution as stated on the \n[wiki](https://github.com/erhard-lab/gedi/wiki/Price) of PRICE. The right Java distribution is also available in a separate Conda [environment](#add_envs). You can activate this environment with following command:\n```\nsource activate price\n```\n \n| Argument       | Default         | Description                                                                   |\n|----------------|-----------------|-------------------------------------------------------------------------------|\n| -w/--workdir   | CWD env setting | Working directory                                                             |\n| -t/--tmp       | workdir/tmp     | Temporary files folder                                                        |\n| -r/--result_db | Mandatory       | The SQLite database with results of mapping and translated transcript calling |\n| -f/--fdr       | 0.1             | FDR value threshold used in PRICE                                             |\n| -m/--max_ram   | PRICE default   | Maximum amount of gigabytes RAM available for running PRICE                   |\n| -h/--help      | /               | Show help message                                                             | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997043355090715,
      "result": {
        "original_header": "SPECtre <a name=\"spectre_tool\"></a>",
        "type": "Text_excerpt",
        "value": "SPECtre needs its own [earlier installed](#add_envs) Conda environment to run:\n```\nsource activate spectre\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9101172271202949,
      "result": {
        "original_header": "Analysis ID overview table <a name=\"tis_overview\"></a>",
        "type": "Text_excerpt",
        "value": "| Argument           | Default                      | Description                      |\n|--------------------|------------------------------|----------------------------------|\n| --work_dir         | CWD env setting              | Working directory                |\n| --sqlite_db        | Mandatory                    | SQLite results database          |\n| --out_tis_overview | work_dir/SQLite/overview.tis | Analysis ID overview output file | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9917438909396754,
      "result": {
        "original_header": "FLOSS calculation <a name=\"floss\"></a>",
        "type": "Text_excerpt",
        "value": "| Argument    | Default         | Description                                                                         |\n|-------------|-----------------|-------------------------------------------------------------------------------------|\n| --dir       | CWD env setting | Path to the working directory                                                       |\n| --tmp       | dir/tmp         | Temporary files folder                                                              |\n| --sqlite_db | Mandatory       | SQLite results database with mapping, translated transcript and ORF calling results |\n| --tis_ids   | Mandatory       | List of analysis IDs                                                                | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9222238561851299,
      "result": {
        "original_header": "SearchGUI and Peptideshaker <a name=\"searchgui\"></a>",
        "type": "Text_excerpt",
        "value": "The tool is available in both a command line and a graphical user interface version. All details on installation and \nusage can be found [here](http://compomics.github.io/projects/searchgui.html).\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9405249116065528,
      "result": {
        "original_header": "MaxQuant <a name=\"maxquant\"></a>",
        "type": "Text_excerpt",
        "value": "In the folder `Additional_tools/MaxQuant_results_parsing` of this GitHub repo, some additional scripts can be found to \nparse the output of the MaxQuant searches. Essential output files of MaxQuant that are needed in this results parsing, \ncan be found in the `combined/txt` of the MaxQuant output folder and include:\n* `proteinGroups.txt`\n* `peptides.txt`\n* `msms.txt` \nFor more information about the usage of these scripts, use their help command:\n```\npython parse_maxquant.py --help\npython parse_maxquant_uniprot.py --help\npython analyse_proteoforms.py --help\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9995918491347577,
      "result": {
        "original_header": "Pipeline master script <a name=\"masterscript\"></a>",
        "type": "Text_excerpt",
        "value": "If you want to run the complete pipeline (or several parts of it) on one or multiple samples, the PROTEOFORMER pipeline master script (scripted in Bash) can be a useful tool. An example or default version is given in the main directory of this repository. Feel free to adapt this by block (un)commenting the steps you need or want to skip. Also, the input arguments can be changed to fit your purpose. \nTo run the master script, use the following command:\n```\nchmod 755 proteoformer_pipeline.sh\n./proteoformer_pipeline.sh\n```\nThere is a version of the master script that uses every tool in its Python 3.10 version if available:\n```\nchmod 755 proteoformer_pipeline.sh\n./proteoformer_pipeline_py3.sh\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9681405630284246,
      "result": {
        "original_header": "Copyright <a name=\"copyright\"></a>",
        "type": "Text_excerpt",
        "value": "Later updates: Copyright (C) 2019  S. Verbruggen, G. Menschaert, E. Ndah \nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9904027542710961,
      "result": {
        "original_header": "More information <a name=\"moreinformation\"></a>",
        "type": "Text_excerpt",
        "value": "\n<p align=\"center\">\n<img src=\"https://github.com/Biobix/proteoformer/blob/master/LogoBanner/Banner_proteoformer20.jpg\" title=\"PROTEOFORMER banner\">\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8698673810445993,
      "result": {
        "original_header": "Mapping <a name=\"mapping\"></a>",
        "type": "Text_excerpt",
        "value": "| Argument     | Default                                             | Description                                                        |\n|--------------|-----------------------------------------------------|--------------------------------------------------------------------|\n| --work_dir   | CWD env setting                                     | The working directory                                              |\n| --tmp        | work_dir/tmp                                        | Folder to store the temporary files in                             |\n| --out_sqlite | work_dir/SQLite/results.db                          | SQLite results database                                            |\n| --treated    | untreated                                           | Which sample to calculate offsets for (options: untreated/treated) |\n| --offset_img | work_dir/plastid/run_name_(un)treated_p_offsets.png | P-site offsets output image path                                   |\n| --verbose    | N                                                   | Use Y for debugging                                                |\n| --help       |                                                     | Print help message                                                 | \n| Argument           | Default                       | Description                                                                                                                                                                                                                                                                                          |\n|--------------------|-------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| --work_dir         | CWD env setting               | The working directory                                                                                                                                                                                                                                                                                |\n| --tmp              | work_dir/tmp                  | Folder to store the temporary files in                                                                                                                                                                                                                                                               |\n| --out_sqlite       | work_dir/SQLite/results.db    | SQLite results database                                                                                                                                                                                                                                                                              |\n| --offset           | standard                      | Offset option: you can use the standard offsets from Ingolia 2009 (standard), you can add offsets as a tab-separated txt file (from_file) or you can use the offsets determined with Plastid (plastid), use offsets with constant 5prime (cst_5prime), use offsets with constant 3prime (cst_3prime) |\n| --offset_file_untr | mandatory if offset=from_file | Offset input tab-separated txt file for untreated sample                                                                                                                                                                                                                                             |\n| --offset_file_tr   | mandatory if offset=from_file | Offset input tab-separated txt file for treated sample                                                                                                                                                                                                                                               |\n| --help             |                               | Print help message                                                                                                                                                                                                                                                                                   | \n| Sample             | type    | total    | mapped_U | mapped_M | mapped_T | unmapped | map_freq_U        | map_freq_M        | map_freq_T      |\n|--------------------|---------|----------|----------|----------|----------|----------|-------------------|-------------------|-----------------|\n| experiment1.fastq1 | genomic | 31133026 | 17607183 | 1240756  | 18847939 | 12285087 | 0.565546792656775 | 0.039853369863554 | 0.3945998375403 |\n| ...                | ...     | ...      | ...      | ...      | ...      | ...      | ...               | ...               | ...             | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8562881734279911,
      "result": {
        "original_header": "Specific ribosome profiling quality check: mappingQC <a name=\"mappingqc\"></a>",
        "type": "Text_excerpt",
        "value": "Example:\n```\nperl mappingQC.pl --samfile output/untreat.sam --treated untreated --cores 20 --result_db SQLite/results.db --unique Y --ens_db ENS_hsa_92.db --offset plastid --plastid plastid/experiment1_untreated_p_offsets.png --tool_dir mqc_tools --plotrpftool pyplot3D\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8036294863512436,
      "result": {
        "original_header": "Rule-based transcript calling <a name=\"rulebased\"></a>",
        "type": "Text_excerpt",
        "value": "| Argument     | Default                         | Description                                         |\n|--------------|---------------------------------|-----------------------------------------------------|\n| --work_dir   | CWD env setting                 | The working directory                               |\n| --tmp        | work_dir/tmp                    | The temporary files folder                          |\n| --in_sqlite  | SQLite/results.db               | The SQLite results database from previous steps     |\n| --out_sqlite | The same as in_sqlite atrgument | The SQLite results database to store all results in |\n| --ens_db     | Mandatory                       | The Ensembl database with annotation info           |\n| --help       |                                 | Generate help message                               | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8606881554196403,
      "result": {
        "original_header": "PRICE <a name=\"price\"></a>",
        "type": "Text_excerpt",
        "value": "An example of how to run this wrapper:\n```\npython PRICE.py -r SQLite/results.db\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8634815245478911,
      "result": {
        "original_header": "Analysis ID overview table <a name=\"tis_overview\"></a>",
        "type": "Text_excerpt",
        "value": "| Argument           | Default                      | Description                      |\n|--------------------|------------------------------|----------------------------------|\n| --work_dir         | CWD env setting              | Working directory                |\n| --sqlite_db        | Mandatory                    | SQLite results database          |\n| --out_tis_overview | work_dir/SQLite/overview.tis | Analysis ID overview output file | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8425925331897935,
      "result": {
        "original_header": "FASTA file generation <a name=\"fasta_generation\"></a>",
        "type": "Text_excerpt",
        "value": "Hereafter, a snippet of an example FASTA output file is given:\n```\n>generic|ENST00000647097_4_102760894_aTIS_1|ENSG00000109323 ATG True -1 0 +1 [ENST00000489071_20_35548863_ntr#ENST00000226578_4_102760894_aTIS_1]\nMRLHLLLLLALCGAGTTAAELSYSLRGNWSICNGNGSLELPGAVPGCVHSALFQQGLIQD\nSYYRFNDLNYRWVSLDNWTYSKEFKIPFEISKWQKVNLILEGVDTVSKILFNEVTIGETD\nNMFNRYSFDITNVVRDVNSIELRFQSAVLYAAQQSKAHTRYQVPPDCPPLVQKGECHVNF\nVRKEQCSFSWDWGPSFPTQGIWKDVRIEAYNICHLNYFTFSPIYDKSAQEWNLEIESTFD\nVVSSKPVGGQVIIAIPKLQTQQTYSIELQPGKRIVELFVNISKNITVETWWPHGHGNQTG\nYNMTVLFELDGGLNIEKSAKVYFRTVELIEEPIKGSPGLSFYFKINGFPIFLKGSNWIPA\nDSFQDRVTSELLRLLLQSVVDANMNTLRVWGGGIYEQDEFYELCDELGIMVWQDFMFACA\nLYPTDQGFLDSVTAEVAYQIKRLKSHPSIIIWSGNNENEEALMMNWYHISFTDRPIYIKD\nYVTLYVKNIRELVLAGDKSRPFITSSPTNGAETVAEAWVSQNPNSNYFGDVHFYDYISDC\nWNWKVFPKARFASEYGYQSWPSFSTLEKVSSTEDWSFNSKFSLHRQHHEGGNKQMLYQAG\nLHFKLPQSTDPLRTFKDTIYLTQVMQAQCVKTETEFYRRSRSEIVDQQGHTMGALYWQLN\nDIWQAPSWASLEYGGKWKMLHYFAQNFFAPLLPVGFENENTFYIYGVSDLHSDYSMTLSV\nRVHTWSSLEPVCSRVTERFVMKGGEAVCLYEEPVSELLRRCGNCTRESCVVSFYLSADHE\nLLSPTNYHFLSSPKEAVGLCKAQITAIISQQGDIFVFDLETSAVAPFVWLDVGSIPGRFS\nDNGFLMTEKTRTILFYPWEPTSKNELEQSFHVTSLTDIY\n>generic|ENST00000647097_4_102760894_aTIS_2|ENSG00000109323 ATG True -1 0 +1 [ENST00000226578_4_102760894_aTIS_2]\nMRLHLLLLLALCGAGTTAAELSYSLRGNWSICNGNGSLELPGAVPGCVHSALFQQGLIQD\nSYYRFNDLNYRWVSLDNWTYSKEFKIPFEISKWQKVNLILEGVDTVSKILFNEVTIGETD\nNMFNRYSFDITNVVRDVNSIELRFQSAVLYAAQQSKAHTRYQVPPDCPPLVQKGECHVNF\nVRKEQCSFSWDWGPSFPTQGIWKDVRIEAYNICHLNYFTFSPIYDKSAQEWNLEIESTFD\nVVSSKPVGGQVIVAIPKLQTQQTYSIELQPGKRIVELFVNISKNITVETWWPHGHGNQTG\nYNMTVLFELDGGLNIEKSAKVYFRTVELIEEPIKGSPGLSFYFKINGFPIFLKGSNWIPA\nDSFQDRVTSELLRLLLQSVVDANMNTLRVWGGGIYEQDEFYELCDELGIMVWQDFMFACA\nLYPTDQGFLDSVTAEVAYQIKRLKSHPSIIIWSGNNENEEALMMNWYHISFTDRPIYIKD\nYVTLYVKNIRELVLAGDKSRPFITSSPTNGAETVAEAWVSQNPNSNYFGDVHFYDYISDC\nWNWKVFPKARFASEYGYQSWPSFSTLEKVSSTEDWSFNSKFSLHRQHHEGGNKQMLYQAG\nLHFKLPQSTDPLRTFKDTIYLTQVMQAQCVKTETEFYRRSRSEIVDQQGHTMGALYWQLN\nDIWQAPSWASLEYGGKWKMLHYFAQNFFAPLLPVGFENENMFYIYGVSDLHSDYSMTLSV\nRVHTWSSLEPVCSRVTERFVMKGGEAVCLYEEPVSELLRRCGNCTRESCVVSFYLSADHE\nLLSPTNYHFLSSPKEAVGLCKAQITAIISQQGDIFVFDLETSAVAPFVWLDVGSIPGRFS\nDNGFLMTEKTRTILFYPWEPTSKNELEQSFHVTSLTDIY\n>generic|ENST00000647097_4_102760938_5UTR|ENSG00000109323 CTG NA -1 0 +1 [ENST00000645348_4_102760938_5UTR#ENST00000646727_4_102760938_5UTR#ENST00000644545_4_102760938_5UTR#ENST00000226578_4_102760938_5UTR#ENST00000642252_4_102760938_5UTR#ENST00000644159_4_102760938_5UTR#ENST00000644965_4_102760797_CDS#ENST00000646311_4_102760938_5UTR]\nMPFDLSTSRWRGISRCASTCSCCSRCAVQAPPPRSSVTACVATGASAMGTARWSCPGRSL\nAACTAPCSSRA\n...\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8023237612717659,
      "result": {
        "original_header": "FLOSS calculation <a name=\"floss\"></a>",
        "type": "Text_excerpt",
        "value": "| Argument    | Default         | Description                                                                         |\n|-------------|-----------------|-------------------------------------------------------------------------------------|\n| --dir       | CWD env setting | Path to the working directory                                                       |\n| --tmp       | dir/tmp         | Temporary files folder                                                              |\n| --sqlite_db | Mandatory       | SQLite results database with mapping, translated transcript and ORF calling results |\n| --tis_ids   | Mandatory       | List of analysis IDs                                                                | \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8885075740194122,
      "result": {
        "original_header": "ORF-based counts <a name=\"orfbasedcounts\"></a>",
        "type": "Text_excerpt",
        "value": "An example of how to run this program:\n```\npython ORFbasedCounts.py --sqlitedb SQLite/results.db --tis_ids 1 --trim absolute --nt_trim 15 --ltm n --rna /data2/steven/eIF1/NTmRNA/SQLite/results.db\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8438560993757052,
      "result": {
        "original_header": "Feature summarization <a name=\"feature\"></a>",
        "type": "Text_excerpt",
        "value": "An example of how to run this tool:\n```\npython summarize_feature.py --sqliteC SQLite/results.db --sqliteE SQLite/ENS_hsa_82.db --feature transcript --transcripts all --data ribo\n```\n \nOutput table format: \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8258653713191172,
      "result": {
        "original_header": "MaxQuant <a name=\"maxquant\"></a>",
        "type": "Text_excerpt",
        "value": "For more information about the usage of these scripts, use their help command:\n```\npython parse_maxquant.py --help\npython parse_maxquant_uniprot.py --help\npython analyse_proteoforms.py --help\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Biobix/proteoformer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Biobix/proteoformer/master/LogoBanner/proteoformerLogo.jpg"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "proteoformer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Biobix"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1279541,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 945816,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 42963,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 10954,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://mamba.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://plastid.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies <a name=\"dependencies\"></a>",
        "parent_header": [
          "Proteoformer"
        ],
        "type": "Text_excerpt",
        "value": "Proteoformer is built in Perl 5, Python 2.7 and Bash. All necessary scripts are included in this GitHub repository. Some parts are updated to Python 3.10. Check lower in this paragraph for more details.\n\nTo prevent problems with missing dependencies, we included all necessary dependencies in a [Conda](https://conda.io/docs/) environment.\nFor more information about Conda installation, click [here](https://docs.conda.io/projects/conda/en/latest/user-guide/index.htmll).\n\nOnce conda is installed, make sure to have the right channel order by executing following commands in the same order as listed here:\n\n```\nconda config --add channels gtcg\nconda config --add channels r\nconda config --add channels defaults\nconda config --add channels conda-forge\nconda config --add channels bioconda\n```\n\nThen you can install all dependencies based on the yml file in the `dependency_envs` folder of this GitHub repository with following command:\n\n```\nconda env create -f Dependency_envs/proteoformer.yml\n```\n\nThis installs a new Conda environment in which all needed Conda dependencies are installed and available, including Perl\nand Python. If not mentioned otherwise, all tools of the PROTEOFORMER pipeline should be executed in this environment.\n To activate this new Conda environment:\n\n```\nsource activate proteoformer\n```\n\nSome Perl packages are not included in Conda, so after installation and first activation of the new environment,\n execute following script:\n\n```\nperl install_add_perl_tools.pl\n```\n\nIf you want to exit the proteoformer Conda environment:\n\n```\nsource deactivate\n```\n\nFor running this pipeline with Python 3.10, we advise to use Mamba to install the tool. Mamba is very similar to Conda but performs much faster. More info can be found [here](https://mamba.readthedocs.io/en/latest/).\nTo install the dependencies for the Python 3.10 version of PROTEOFORMER, run the following commands:\n```\nmamba env create -f Dependency_envs/proteoformer_general.yml\nmamba env create -f Dependency_envs/proteoformer_plastid.yml\nmamba env create -f Dependency_envs/proteoformer_multiqc.yml\n```\n\nThe proteoformer_general provides the general tool environment for most steps. In master script of the full pipeline workflow, bash will automatically switch between environments for the Plastid and MultiQC steps when needed.\n\nThen, use the following environment instead of the default proteoformer environment for running tools:\n\n```\nmamba activate proteoformer_general\n```\n\nTo exit this environment:\n\n```\nmamba deactivate\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "RiboZINB",
        "parent_header": [
          "Proteoformer",
          "Dependencies <a name=\"dependencies\"></a>",
          "Additional environments for RiboZINB, SPECtre and SRA download <a name=\"add_envs\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "```\nconda env create -f Dependency_envs/ribozinb.yml\nsource activate ribozinb\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SPECtre",
        "parent_header": [
          "Proteoformer",
          "Dependencies <a name=\"dependencies\"></a>",
          "Additional environments for RiboZINB, SPECtre and SRA download <a name=\"add_envs\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "```\nconda env create -f Dependency_envs/spectre.yml\nsource activate spectre\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "PRICE",
        "parent_header": [
          "Proteoformer",
          "Dependencies <a name=\"dependencies\"></a>",
          "Additional environments for RiboZINB, SPECtre and SRA download <a name=\"add_envs\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "```\nconda env create -f Dependency_envs/price.yml\nsource activate price\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Biobix/proteoformer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:42:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}