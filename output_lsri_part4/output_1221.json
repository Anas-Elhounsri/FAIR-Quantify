{
  "application_domain": [
    {
      "confidence": 0.8134817312276266,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/todddeluca/reciprocal_smallest_distance"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2011-10-15T04:30:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-10T09:17:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Reciprocal Smallest Distance (RSD) is a pairwise orthology algorithm that uses global sequence alignment and maximum likelihood evolutionary distance between sequences to accurately detects orthologs between genomes."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Reciprocal Smallest Distance"
        ],
        "type": "Text_excerpt",
        "value": "Citation: Wall, D.P., Fraser, H.B. and Hirsh, A.E. (2003) Detecting putative orthologs, Bioinformatics, 19, 1710-1711.\n\nThe reciprocal smallest distance (RSD) algorithm (Wall, et al., 2003.\nhttp://bioinformatics.oxfordjournals.org/content/19/13/1710) accurately infers\northologs between pairs of genomes by considering global sequence alignment and\nmaximum likelihood evolutionary distance between sequences.  Orthologs inferred\nwith RSD for many species are available at Roundup\n(http://roundup.hms.harvard.edu/), which provides multi-species clusters of\northologous genes, output in formats for other phylogenetics packages, and\nsequence metadata such as Gene Ontology terms and database cross-references.\n\nThis package contains source code, scripts for running RSD, and example input\nand output files.\n\n- README.md:  the file you are reading now\n- bin/rsd_search: a script that runs the reciprocal smallest distance (RSD)\n  algorithm to search for orthologs.\n- bin/rsd_blast: a script that computes and saves BLAST hits for use in\n  multiple runs of RSD.\n- bin/rsd_format: a script that turns FASTA-formatted genomes into\n  BLAST-formatted indexes.\n- rsd/: python package implementing the RSD algorithm.  \n- rsd/jones.dat, rsd/codeml.ctl:  used by codeml/paml to compute the\n  evolutionary distance between two sequences.\n- examples/:  a directory containing examples of inputs and outputs to rsd,\n  including fasta-formatted genome protein sequence files, a query sequence id\n  file (for --ids), and an orthologs output file.\n\n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.912915774094221,
      "result": {
        "original_header": "Using RSD to Find Othologs",
        "type": "Text_excerpt",
        "value": "The following example commands demonstrate the main ways to run `rsd_search`.\nEvery invocation of `rsd_search` requires specifying the location of a\nFASTA-formatted sequence file for two genomes, called the query and subject\ngenomes.  Their order is arbitrary, but if you use the `--ids` option, the ids\nmust come from the query genome.  You must also specify a file to write the\nresults of the orthologs found by the RSD algorithm.  The\n[formats](#output_formats) of the output file are described in detail below.\nYou can optionally specify a file containing ids using the `--ids` option.\nThen rsd will only search for orthologs for those ids.  Using `--de` gives you\nthe option of using different divergence and evalue thresholds from the\ndefaults. \n\nFind orthologs between all the sequences in the query and subject genomes,\nusing the default divergence and evalue thresholds: \n\nFind orthologs using several divergence and evalue threshold combinations: \n\nIt is not necessary to format a FASTA file for BLAST or compute BLAST hits\nbecause `rsd_search` does it for you.  However if you plan on running\n`rsd_search` multiple times for the same genomes, especially for large genomes,\nyou can save time by using `rsd_format` to preformatting the FASTA files and\n`rsd_blast` to precomputing the BLAST hits.  When running `rsd_blast`, make\nsure to use an --evalue as large as the largest evalue threshold you intend to\ngive to `rsd_search`. \nHere is how to format a pair of FASTA files in place: \nAnd here is how to format the FASTA files, putting the results in another\ndirectory (the current directory in this case): \nHere is how to compute forward and reverse blast hits (using the default\nevalue): \nHere is how to compute forward and reverse blast hits for `rsd_search`, using\ngenomes that have already been formatted for blast and a non-default evalue: \n\nFind orthologs for specific sequences in the query genome.  For finding\northologs for only a few sequences, using `--no-blast-cache` can speed up\ncomputation.  YMMV. \n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9391513362395789,
      "result": {
        "original_header": "Output Formats",
        "type": "Text_excerpt",
        "value": "Orthologs can be saved in several different formats using the `--outfmt` option\nof `rsd_search`.  The default format, `--outfmt -1`, refers to `--outfmt 3`.\nInspired by Uniprot dat files, a set of orthologs starts with a parameters\nline, then has 0 or more ortholog lines, then has an end line.  The parametes\nare the query genome name, subject genome name, divergence threshold, and\nevalue threshold.  Each ortholog is on a single line listing the query sequence\nid, the subject sequence id, and the maximum likelihood distance estimate.\nThis format can represent orthologs for multiple sets of parameters in a single\nfile as well as sets of parameters with no orthologs.  Therefore it is suitable\nfor use with `rsd_search` when specifying multiple divergence and evalue\nthresholds. \nHere is an example containing 2 parameter combinations, one of which has no\northologs: \nThe original format of RSD, `--outfmt 1`, is provided for backward\ncompatibility.  Each line contains an ortholog, represented as subject sequence\nid, query sequence id, and maximum likelihood distance estimate.  It can only\nrepresent a single set of orthologs in a file. \nAlso provided for backward compatibility is a format used internally by Roundup\n(http://roundup.hms.harvard.edu/) which is like the original RSD format, except\nthe query sequence id column is before the subject sequence id. \n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8239808119717964,
      "result": {
        "original_header": "Testing",
        "type": "Text_excerpt",
        "value": "This assumes you have cloned the repository. \n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/todddeluca/reciprocal_smallest_distance/wiki"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/todddeluca/reciprocal_smallest_distance/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/todddeluca/reciprocal_smallest_distance/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "todddeluca/reciprocal_smallest_distance"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Reciprocal Smallest Distance"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Using Pip",
        "parent_header": [
          "Reciprocal Smallest Distance",
          "Installing RSD"
        ],
        "type": "Text_excerpt",
        "value": "Use pip ( http://www.pip-installer.org/ ) to easily install the\nreciprocal\\_smallest\\_distance package:\n\n    pip install reciprocal_smallest_distance\n\n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install From Github",
        "parent_header": [
          "Reciprocal Smallest Distance",
          "Installing RSD"
        ],
        "type": "Text_excerpt",
        "value": "Installing from github is an easy way to make the `examples/` directory\naccessible for running the examples in this README file.\n\nClone the latest version from GitHub:\n\n    cd ~  # Optional\n    git clone https://github.com/todddeluca/reciprocal_smallest_distance\n\nInstall reciprocal\\_smallest\\_distance, making sure to use Python 2.7:\n\n    cd reciprocal_smallest_distance\n    python setup.py install\n\n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9272204821911535,
      "result": {
        "original_header": "Using RSD to Find Othologs",
        "type": "Text_excerpt",
        "value": "\nGet help on how to run `rsd_search`, `rsd_blast`, or `rsd_format`: \n    rsd_search -q examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa \\\n    --subject-genome=examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa \\\n    -o Mycoplasma_genitalium.aa_Mycobacterium_leprae.aa_0.8_1e-5.orthologs.txt \n    rsd_format -g examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa\n    rsd_format -g examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa \n    rsd_format -g examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa -d .\n    rsd_format -g examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa -d . \n    rsd_blast -v -q examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa \\\n    --subject-genome=examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa \\\n    --forward-hits q_s.hits --reverse-hits s_q.hits \n    rsd_search -q Mycoplasma_genitalium.aa \\\n    --subject-genome=Mycobacterium_leprae.aa \\\n    -o Mycoplasma_genitalium.aa_Mycobacterium_leprae.aa_0.8_1e-5.orthologs.txt \\\n    --no-format \n    rsd_search -v --query-genome Mycoplasma_genitalium.aa \\\n    --subject-genome=Mycobacterium_leprae.aa \\\n    -o Mycoplasma_genitalium.aa_Mycobacterium_leprae.aa.default.orthologs.txt \\\n    --forward-hits q_s.hits --reverse-hits s_q.hits --no-format \n    rsd_search -q examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa \\\n    --subject-genome=examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa \\\n    -o examples/Mycoplasma_genitalium.aa_Mycobacterium_leprae.aa_0.8_1e-5.orthologs.txt \\\n    --ids examples/Mycoplasma_genitalium.aa.ids.txt --no-blast-cache \n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9556927870112408,
      "result": {
        "original_header": "Testing",
        "type": "Text_excerpt",
        "value": "This assumes you have cloned the repository. \nFor convenience, define some environment variables: \n    export TMP=$HOME/tmp\n    mkdir -p $TMP\n    export REPO_PATH=<path/to/reciprocal_smallest_distance> # e.g. export REPO_PATH=~/git/reciprocal_smallest_distance \nCreate a virtualenv in which to install RSD: \n    cd $TMP\n    virtualenv venv \nInstall RSD into the virtualenv: \n    venv/bin/pip install -e $REPO_PATH \nRun an example command: \n    venv/bin/rsd_search -q $REPO_PATH/examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa \\\n    --subject-genome=$REPO_PATH/examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa \\\n    -o Mycoplasma_genitalium.aa_Mycobacterium_leprae.aa_0.8_1e-5.orthologs.txt \n    less Mycoplasma_genitalium.aa_Mycobacterium_leprae.aa_0.8_1e-5.orthologs.txt\n \n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8625874877684108,
      "result": {
        "original_header": "Using RSD to Find Othologs",
        "type": "Text_excerpt",
        "value": "    rsd_search -q examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa \\\n    --subject-genome=examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa \\\n    -o Mycoplasma_genitalium.aa_Mycobacterium_leprae.aa_0.8_1e-5.orthologs.txt \n    rsd_format -g examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa\n    rsd_format -g examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa \n    rsd_format -g examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa -d .\n    rsd_format -g examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa -d . \n    rsd_blast -v -q examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa \\\n    --subject-genome=examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa \\\n    --forward-hits q_s.hits --reverse-hits s_q.hits \n    rsd_search -q examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa \\\n    --subject-genome=examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa \\\n    -o examples/Mycoplasma_genitalium.aa_Mycobacterium_leprae.aa_0.8_1e-5.orthologs.txt \\\n    --ids examples/Mycoplasma_genitalium.aa.ids.txt --no-blast-cache \n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8677982509526866,
      "result": {
        "original_header": "Output Formats",
        "type": "Text_excerpt",
        "value": "Example: \n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.883628635896047,
      "result": {
        "original_header": "Testing",
        "type": "Text_excerpt",
        "value": "Run an example command: \n    venv/bin/rsd_search -q $REPO_PATH/examples/genomes/Mycoplasma_genitalium.aa/Mycoplasma_genitalium.aa \\\n    --subject-genome=$REPO_PATH/examples/genomes/Mycobacterium_leprae.aa/Mycobacterium_leprae.aa \\\n    -o Mycoplasma_genitalium.aa_Mycobacterium_leprae.aa_0.8_1e-5.orthologs.txt \n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/todddeluca/reciprocal_smallest_distance/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "reciprocal_smallest_distance"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "todddeluca"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 107733,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "Reciprocal Smallest Distance",
          "Installing RSD"
        ],
        "type": "Text_excerpt",
        "value": "RSD depends on Python, NCBI BLAST, PAML, and Kalign.  It has been tested to\nwork with the versions below.  It might work with other versions too.\n\nInstall:\n\n- Python 2.7: http://www.python.org/download/\n- NCBI BLAST 2.2.24: ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/\n- PAML 4.4: http://abacus.gene.ucl.ac.uk/software/paml.html\n- Kalign 2.04: http://msa.sbc.su.se/cgi-bin/msa.cgi\n\nAdd the executables for python (version 2.7), makeblastdb, blastp, codeml, and\nkalign, to your PATH.\n\n"
      },
      "source": "https://raw.githubusercontent.com/todddeluca/reciprocal_smallest_distance/master/README.markdown",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:24:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ]
}