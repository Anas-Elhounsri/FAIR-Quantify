{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jiach/MetaDiff"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-01-28T15:27:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-04-22T17:29:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9965268183765102,
      "result": {
        "original_header": "Synopsis",
        "type": "Text_excerpt",
        "value": "MetaDiff is a Java/R-based software package that performs differential expression analysis on RNA-Seq based data.\nBy utilizing a meta-regression framework, it is able to take advantage of the information regarding the variance of the estimates to make the inference more accurate.\nMeta-regression also enables incorporation of covariates other than experimental group, which makes it extremely simple to adjust for confounding parameters in an experiment.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8455131627719505,
      "result": {
        "original_header": "Motivation",
        "type": "Text_excerpt",
        "value": "When performing a post hoc differential expression analysis, the currently available packages only take into account the counts or FPKM output generated by the upstream software, discarding the variance information.\nThis will often inflate the alpha-values, and lead to false positives or overly conservative inference. Meta-regression models address this issue by directly utilizing the variance output from upstream software, and\n \n"
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8704962005709903,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "Feature - names of the isoform or gene \ndfttest - degrees of freedom for the t-test; \nbartLLR_CovariateName - Bartlett corrected LLR statistics for each covariate; \npBartlett_CovariateName - Bartlett corrected LLR p-value for each covariate; \nStatus - OK indicates that the model has converged and the CV of FPKM for all groups are <= cv_threshold \nNB: As of right now, MetaDiff has yet to implement FDR adjustments of the P-values generated from the script. You need to do it manually in your favorite statistical packages. In future versions, this function will be incorporated into the MetaDiff package.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9871303436950152,
      "result": {
        "original_header": "Author",
        "type": "Text_excerpt",
        "value": "The author of this package is Cheng Jia, a Ph.D. candidate advised by Dr. Mingyao Li in the Department of Biostatistics and Epidemiology at University of Pennsylvania. Any questions with regards to the functions of this package should be directed to Cheng Jia. The E-mail of the author is: jiacheng AT mail.med.upenn.edu.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/jiach/MetaDiff/wiki"
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jiach/MetaDiff/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jiach/MetaDiff/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jiach/MetaDiff"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiach/MetaDiff/master/R/rsem_parse.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "A compiled JAR package is ready for download at:\nhttp://github.com/jiach/MetaDiff/blob/master/out/artifacts/MetaDiff_jar/MetaDiff.jar?raw=true\n\nDownload this JAR file to any location to your liking (for example /home/mason/myfavoriaternaseqprograms/MetaDiff.jar), and invoke the command as described in Usage.\n"
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8889744243874164,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "`metadiff_r.log` - standard error output from the R script; \n"
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jiach/MetaDiff/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2015 jiach\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "Copyright (c) <2015> <Cheng Jia>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MetaDiff"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jiach"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 36013,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 4039,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 150,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency",
        "type": "Text_excerpt",
        "value": "This program can only be run in a Unix-like operating system.\nTested on Ubuntu Linux 14.04 LTS, Red Hat Enterprise Linux Server release 6.6 (Santiago), and OS X Yosemite on my own MacBook Air.\n\nThis program requires:\n\n1. R:\nhttp://cran.r-project.org/index.html\n\n2. Java Runtime SE 7/8\nhttp://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html\n\n3. R packages:\ndoParallel, metatest, plyr\n\nMake sure Rscript command is in your PATH variable.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:41:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "`java -jar /home/mason/myfavoriaternaseqprograms/MetaDiff.jar -input_file_list input_list.tsv -output_dir /home/mason/metadiff_results/ -method cufflinks`\n\nThese three parameters are required:\n\n`input_file_list` - this is a tab-delimited file that contains the file locations and covariate information separated by tabs with header line. Here's an example:\n\n| Sample \t| File_Name                                                                   \t| C_group \t| age \t| C_gender \t|\n|--------\t|-----------------------------------------------------------------------------\t|---------\t|-----\t|----------\t|\n| simu1  \t| /home/mason/awesomeRNASeqData/simu1/isoforms.fpkm_tracking \t| 0       \t| 40  \t| female   \t|\n| simu2  \t| /home/mason/awesomeRNASeqData/simu2/isoforms.fpkm_tracking \t| 0       \t| 38  \t| male     \t|\n| simu3  \t| /home/mason/awesomeRNASeqData/simu3/isoforms.fpkm_tracking \t| 0       \t| 56  \t| male     \t|\n| simu4  \t| /home/mason/awesomeRNASeqData/simu4/isoforms.fpkm_tracking \t| 1       \t| 52  \t| male     \t|\n| simu5  \t| /home/mason/awesomeRNASeqData/simu5/isoforms.fpkm_tracking \t| 1       \t| 47  \t| male     \t|\n| simu6  \t| /home/mason/awesomeRNASeqData/simu6/isoforms.fpkm_tracking \t| 1       \t| 41  \t| female   \t|\n\nThe first two columns indicate the sample_id and the file_names associated with that sample_id. Sample_ID can be any unique identifier of your sample (no two sample IDs should be the same). \nUse absolute path (path starting from root /) in File_name to avoid confusion of the program.\n\nThere can be any number of covariates in any order. Names of the covariates need to follow the conventions of R variable names. The rule of thumb is to use letters, underscore and numbers, and to start the name with a letter.\nCategorical covariates NEED to be prefixed with C_ in their names.\n\nThe C_group variable is the default variable name for the experimental group. Please do not use any other name for the group variable. \nThe program will look specifically for this covariate to determine the group to which each subject belongs. If you need cv_threshold adjustment, this variable has to be present in the list file, and needs to be named C_group.\n\nIMPORTANT: Please make sure you have ENOUGH samples for each category. Otherwise, meta-regression will not perform and errors will occur!\n\n`output_dir` - again, use absolute path to avoid confusion.\n\n`method` - indicates which software package generated the files in the input_file_list, as of right now the program supports 'cufflinks' and 'mmseq'.\n\n\nSome optional parameters can also be provided:\n\n`cv_threshold` - the program automatically removes samples with coefficient of variations from all groups >1. However, if you need further filtering with regards to CV, you can provide your cut off here.\nThe program will label the samples with CVs from ALL groups > cv_threshold as STATUS = FAILED in the output.\n\n`mean_fpkm_threshold` - the program by default removes samples with the average FPKM from all groups <= 1. If you want to change this parameter, you can provide your own cut-off here.\n\n`num_cores` - the program supports parallel computing with plyr and doParallel package in R. This parameter indicates the number of concurrent processes you wish to run when performing meta-regression with R. By default the program will only run 1 process.\nIf you have a multi-core system, I would highly recommend enabling this option by providing the number of cores you wish to use, because it will dramatically increase the speed of the program.\n\n`verbose` - print the messages on screen in addition to writing it to log files.\n\nNotice that the program works on both gene and isoform-level DE experiments. Just provide corresponding files generated from upstream software (cufflinks or mmseq). Since the formats are identical for these packages, MetaDiff treats gene and isoform-level DE analyses identically. \n"
      },
      "source": "https://raw.githubusercontent.com/jiach/MetaDiff/master/README.md",
      "technique": "header_analysis"
    }
  ]
}