{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "type": "Text_excerpt",
        "value": "We thank the authors of [Constrained Graph Variational Autoencoders for Molecule Design](https://papers.nips.cc/paper/8005-constrained-graph-variational-autoencoders-for-molecule-design) for releasing their code. The code in this repository is based on their source code release ([link](https://github.com/microsoft/constrained-graph-variational-autoencoder)). If you find this code useful, please consider citing their work.\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Imrie, Fergus and Bradley, Anthony R. and van der Schaar, Mihaela and Deane, Charlotte M.",
        "doi": "10.1021/acs.jcim.9b01120",
        "format": "bibtex",
        "title": "Deep Generative Models for 3D Linker Design",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1021/acs.jcim.9b01120",
        "value": "@article{Imrie2020,\n    url = {https://doi.org/10.1021/acs.jcim.9b01120},\n    doi = {10.1021/acs.jcim.9b01120},\n    issn = {1549-9596},\n    publisher = {American Chemical Society},\n    day = {20},\n    month = {Mar},\n    year = {2020},\n    journal = {Journal of Chemical Information and Modeling},\n    title = {Deep Generative Models for 3D Linker Design},\n    author = {Imrie, Fergus and Bradley, Anthony R. and van der Schaar, Mihaela and Deane, Charlotte M.},\n}"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/oxpig/DeLinker"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact (Questions/Bugs/Requests)",
        "type": "Text_excerpt",
        "value": "Please submit a Github issue or contact Fergus Imrie [imrie@stats.ox.ac.uk](mailto:imrie@stats.ox.ac.uk).\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-04T17:17:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-22T12:16:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9945209800162661,
      "result": {
        "original_header": "DeLinker - Deep Generative Models for 3D Linker Design",
        "type": "Text_excerpt",
        "value": "This repository contains our implementation of [Deep Generative Models for 3D Linker Design](https://pubs.acs.org/doi/10.1021/acs.jcim.9b01120) (DeLinker).  \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8972472005325899,
      "result": {
        "type": "Text_excerpt",
        "value": "Imrie F, Bradley AR, van der Schaar M, Deane CM. Deep Generative Models for 3D Linker Design. Journal of Chemical Information and Modeling. 2020 \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8989138120537048,
      "result": {
        "original_header": "Data Extraction",
        "type": "Text_excerpt",
        "value": "Two primary datasets (ZINC and CASF) are in use. \nTo preprocess these datasets, please go to `data` directory and run `prepare_data.py`.\n```\npython prepare_data.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8768988716641851,
      "result": {
        "original_header": "Evaluation",
        "type": "Text_excerpt",
        "value": "A script to evaluate the generated molecules is provided in `analysis` directory.\n```\npython evaluate_generated_mols.py ZINC|CASF PATH_TO_GENERATED_MOLS PATH_TO_REFERENCE_MOLS ../data/data_zinc_final_train.txt SAVE_PATH OUTPUT_NAME NUM_CORES True None ./wehi_pains.csv >> log.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/oxpig/DeLinker/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oxpig/DeLinker/master/examples/DeLinker_fragment_linking.ipynb"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/examples/DeLinker_fragment_linking.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oxpig/DeLinker/master/examples/DeLinker_scaffold_hopping.ipynb"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/examples/DeLinker_scaffold_hopping.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/oxpig/DeLinker/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "oxpig/DeLinker"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeLinker - Deep Generative Models for 3D Linker Design"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oxpig/DeLinker/master/DeLinker.png"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8662786611954927,
      "result": {
        "original_header": "Data Extraction",
        "type": "Text_excerpt",
        "value": "To preprocess these datasets, please go to `data` directory and run `prepare_data.py`.\n```\npython prepare_data.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9977084852622663,
      "result": {
        "original_header": "Evaluation",
        "type": "Text_excerpt",
        "value": "A script to evaluate the generated molecules is provided in `analysis` directory.\n```\npython evaluate_generated_mols.py ZINC|CASF PATH_TO_GENERATED_MOLS PATH_TO_REFERENCE_MOLS ../data/data_zinc_final_train.txt SAVE_PATH OUTPUT_NAME NUM_CORES True None ./wehi_pains.csv >> log.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8967163281967204,
      "result": {
        "original_header": "Data Extraction",
        "type": "Text_excerpt",
        "value": "To preprocess these datasets, please go to `data` directory and run `prepare_data.py`.\n```\npython prepare_data.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9409514039730483,
      "result": {
        "original_header": "Evaluation",
        "type": "Text_excerpt",
        "value": "A script to evaluate the generated molecules is provided in `analysis` directory.\n```\npython evaluate_generated_mols.py ZINC|CASF PATH_TO_GENERATED_MOLS PATH_TO_REFERENCE_MOLS ../data/data_zinc_final_train.txt SAVE_PATH OUTPUT_NAME NUM_CORES True None ./wehi_pains.csv >> log.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8310880964982668,
      "result": {
        "original_header": "Pretrained Models and Generated Molecules",
        "type": "Text_excerpt",
        "value": "We provide a pretrained model:\n```\nmodels/pretrained_DeLinker_model.pickle\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/oxpig/DeLinker/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "3-Clause BSD License\n\n\tCopyright (c) Fergus Imrie, Oxford Protein Informatics Group, 2019. All rights reserved\n\n\tRedistribution and use in source and binary forms, with or without modification,\n\tare permitted provided that the following conditions are met:\n\n\t - Redistributions of source code must retain the above copyright notice,\n\t   this list of conditions and the following disclaimer.\n\n\t - Redistributions in binary form must reproduce the above copyright notice,\n\t   this list of conditions and the following disclaimer in the documentation\n\t   and/or other materials provided with the distribution.\n\n\t - Neither the name of the copyright holder nor the names of its contributors may\n\t   be used to endorse or promote products derived from this software without\n\t   specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\tANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\tANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\tANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThis project incorporates work covered by the following copyright and permission notice: \n\nMIT License\n\n    Copyright (c) Microsoft Corporation. All rights reserved.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeLinker"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "oxpig"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 349701,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "This code was tested in Python 3.6 with Tensorflow 1.10. \n\nA yaml file containing all requirements is provided. This can be readily setup using conda.\n\n```\nconda env create -f DeLinker-env.yml\nconda activate DeLinker-env\n```\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running DeLinker",
        "type": "Text_excerpt",
        "value": "We provide two settings of DeLinker. The first setting generates linkers with the same number of atoms as the reference molecule. The second setting generates linkers with a specified number of atoms. \n\nTo train and generate molecules using the first setting, use:\n\n```\npython DeLinker.py --dataset zinc --config '{\"num_epochs\": 10, \"epoch_to_generate\": 10, \"train_file\": \"data/molecules_zinc_train.json\", \"valid_file\": \"data/molecules_zinc_valid.json\"}'\n```\n\nTo generate molecules with a pretrained model using the first setting, use\n\n```\npython DeLinker.py --dataset zinc --restore models/pretrained_DeLinker_model.pickle --config '{\"generation\": true, \"number_of_generation_per_valid\": 250, \"batch_size\": 1, \"train_file\": \"data/molecules_zinc_test.json\", \"valid_file\": \"data/molecules_zinc_test.json\"}'\n```\n\nTo generate molecules using the second setting, use\n\n```\npython DeLinker_test.py --dataset zinc --restore models/pretrained_DeLinker_model.pickle --config '{\"generation\": true, \"number_of_generation_per_valid\": 250, \"batch_size\": 1, \"train_file\": \"data/molecules_zinc_test_mode2.json\", \"valid_file\": \"data/molecules_zinc_test_mode2.json\", \"min_atoms\": 3, \"max_atoms\": 11}'\n```\n\nIn both cases, the output is of the following format:\n\n```\nInput fragments (SMILES) Ground truth molecule/fragments (SMILES) Generated molecule (SMILES)\n```\n\nMore configurations can be found at function `default_params` in `DeLinker.py`.\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "download",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:22:24",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 117
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "An example Jupyter notbook demonstrating the use of DeLinker for fragment linking can be found in the `examples` directory.\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeLinker/master/README.md",
      "technique": "header_analysis"
    }
  ]
}