{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/felicityallen/SelfTarget"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-07-26T10:49:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-12T02:44:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Scripts for processing and predicting CRISPR/Cas9-generated mutations"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9634530441470239,
      "result": {
        "original_header": "SelfTarget",
        "type": "Text_excerpt",
        "value": "Scripts for processing and predicting CRISPR/Cas9-generated mutations\n \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9207527840408017,
      "result": {
        "original_header": "FORECasT Web server",
        "type": "Text_excerpt",
        "value": "To predict and view mutational profiles for individual gRNAs, please visit the FORECasT website at: \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9450026921450283,
      "result": {
        "original_header": "Precomputed FORECasT Results for Human and Mouse CCDS",
        "type": "Text_excerpt",
        "value": "Precomputed profiles for all gRNAs in human and mouse CCDS regions are available here: \nEntries are collected into all gRNAs corresponding to each CCDS id. Within each file ending in _predicted_mapped_indel_summary.txt, the entries for each gRNA are separated by a line with \n```\n@@@id guide_seq predicted_in_frame \n```\nwhere the id contains the CCDS id, the chomosome coordinates and the strand. The next line is '- - 1000' and can be ignored (there for visualization only). The following lines are the particular indels predicted and their predicted counts (assuming total reads of 1000, and ignoring indels with less than 1 read). For the read sequences, see corrresponding entries in the _predicted_rep_reads.txt files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9629030480435131,
      "result": {
        "original_header": "Single gRNA prediction",
        "type": "Text_excerpt",
        "value": "A list of predicted mutations, one per line, listed in order of decreasing predicted counts.\nEach line contains an identifier string for the indel followed by a - (ignore this), and then a predicted read count (tab-delimited). \ne.g. \n```\n-\t-\t1000\t(always 1000 reads - it is the original template sequence - here for viewer use).\nD2_L-3R0\t-\t550\nI1_L-2C1R0\t-\t200\n``` \n<output_file_prefix>_predictedreads.txt\nA list of read sequences corresponding to each predicted mutation in the previous file. \nThe format is read_id (ignore this), read sequence, mutation identifier (tab delimited), followed by a - (ignore this) \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9899094442540671,
      "result": {
        "original_header": "Batch mode prediction",
        "type": "Text_excerpt",
        "value": "which are formatted as for single mode, but separate guides are prefaced by a line with\n```\n@@@<ID> <predicted_in_frame>\n```\nwhere ID is the identifier provided for the guide in the batch file, and predicted_in_frame is the predicted percentage of in-frame mutations (i.e. all insertions or deletions that are of size 3,6,9...etc)\n \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/felicityallen/SelfTarget/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/felicityallen/SelfTarget/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "felicityallen/SelfTarget"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SelfTarget"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/scripts/wge_to_ccid/farm_scripts/run_farm_jobs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/scripts/wge_to_ccid/farm_scripts/farm_process_cripr_files.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/indel_analysis/compute_indels/run_correct_indel.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://quay.io/repository/coreos/quay-docs/status"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Locally",
        "parent_header": [
          "SelfTarget",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Create a Python 3 virtual environment and activate it\n```bash\n# install Python dependencies\n\npip install -r requirements.txt\ncd selftarget_pyutils\npip install -e .\ncd ../indel_prediction\npip install -e .\n\n# compile predictor\n\ncd indel_analysis/indelmap\ncmake . -DINDELMAP_OUTPUT_DIR=/usr/local/bin\nmake && make install\nexport INDELGENTARGET_EXE=/usr/local/bin/indelgentarget\n```\n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker",
        "parent_header": [
          "SelfTarget",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Alternatively, you can start a Docker container and exec into it:\n```bash\ndocker pull quay.io/felicityallen/selftarget\ndocker exec -it quay.io/felicityallen/selftarget bash\n```"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Development",
        "parent_header": [
          "SelfTarget",
          "Installation",
          "Web service"
        ],
        "type": "Text_excerpt",
        "value": "All changes to the server must be reflected in `swagger.yaml` since\nit's being used to automatically generate clients for other services.\nTests use it as well, so generally any unreflected changes must fail\nsome of the tests. It is handy to validate swagger specification with\n`swagger validate swagger.yml`\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8272936962189362,
      "result": {
        "original_header": "FORECasT Web server",
        "type": "Text_excerpt",
        "value": "https://partslab.sanger.ac.uk/FORECasT\n \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9318646060427462,
      "result": {
        "original_header": "Precomputed FORECasT Results for Human and Mouse CCDS",
        "type": "Text_excerpt",
        "value": "https://fa9.cog.sanger.ac.uk/index.html \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9993813621653527,
      "result": {
        "original_header": "FORECasT Command line tool",
        "type": "Text_excerpt",
        "value": "1. Follow the installation instructions [here](#installation). \n2. After installation, from a command line:\n```\ncd indel_prediction\ncd predictor\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9253141517407325,
      "result": {
        "original_header": "Single gRNA prediction",
        "type": "Text_excerpt",
        "value": "<output_file_prefix>_predictedindelsummary.txt \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9751254120699184,
      "result": {
        "original_header": "Batch mode prediction",
        "type": "Text_excerpt",
        "value": "e.g.\n```\npython FORECasT.py example_batch.txt test_batch_output\n``` \nOutput will be in \n<output_file_prefix>_predictedindelsummary.txt  and\n<output_file_prefix>_predictedreads.txt \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.850338136924169,
      "result": {
        "original_header": "Single gRNA prediction",
        "type": "Text_excerpt",
        "value": "e.g. \n```\npython FORECasT.py ATGCTAGCTAGGGCATGAGGCATGCTAGTGACTGCATGGTAC 17 test_output\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9252848691565804,
      "result": {
        "original_header": "Batch mode prediction",
        "type": "Text_excerpt",
        "value": "```\npython FORECasT.py <batch_filename> <output_file_prefix>\n``` \ne.g.\n```\npython FORECasT.py example_batch.txt test_batch_output\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/felicityallen/SelfTarget/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SelfTarget"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "felicityallen"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 323148,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 58507,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1783,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 1552,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 595,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/felicityallen/SelfTarget/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:46:33",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}