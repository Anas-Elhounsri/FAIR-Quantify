{
  "application_domain": [
    {
      "confidence": 16.01,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9812873739427748,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bicycle1885/CellFishing.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-21T05:06:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-29T04:35:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fast and scalable cell search tool"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9678137606005655,
      "result": {
        "original_header": "CellFishing.jl \ud83c\udfa3",
        "type": "Text_excerpt",
        "value": "CellFishing.jl (**cell** **fi**nder via ha**shing**) is a tool to find similar\ncells of query cells based on their transcriptome expression profiles. \nKenta Sato, Koki Tsuyuzaki, Kentaro Shimizu, and Itoshi Nikaido. \"CellFishing.jl: an ultrafast and scalable cell search method for single-cell RNA sequencing.\" *Genome Biology*, 2019 20:31. https://doi.org/10.1186/s13059-019-1639-x\n```julia\n# Import packages.\nusing CellFishing\nusing TableReader\n\n# Load expression profiles of database cells.\n# Note: We highly recommend using the Loom format (http://loompy.org/) to\n# load expression data, because loading a large matrix in plain text takes\n# extremely long time.\ndata = readtsv(\"database.txt\")  # use readcsv if your file is comma-separated\ncellnames = string.(names(data))\nfeaturenames = string.(data[:,1])\ncounts = Matrix{Int}(data[:,2:end])\n\n# Select features and create an index (or a database).\nfeatures = CellFishing.selectfeatures(counts, featurenames)\ndatabase = CellFishing.CellIndex(counts, features, metadata=cellnames)\n\n# Save/load the database to/from a file (optional).\n# CellFishing.save(\"database.cf\", database)\n# database = CellFishing.load(\"database.cf\")\n\n# Load expression profiles of query cells.\ndata = readtsv(\"query.txt\")\ncellnames = string.(names(data))\nfeaturenames = string.(data[:,1])\ncounts = Matrix{Int}(data[:,2:end])\n\n# Search the database for similar cells; k cells will be returned per query.\nk = 10\nneighbors = CellFishing.findneighbors(k, counts, featurenames, database)\n\n# Write the neighboring cells to a file.\nopen(\"neighbors.tsv\", \"w\") do file\n    println(file, join([\"cell\"; string.(\"n\", 1:k)], '\\t'))\n    for j in 1:length(cellnames)\n        print(file, cellnames[j])\n        for i in 1:k\n            print(file, '\\t', database.metadata[neighbors.indexes[i,j]])\n        end\n        println(file)\n    end\nend\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/bicycle1885/CellFishing.jl/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bicycle1885/CellFishing.jl/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bicycle1885/CellFishing.jl/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bicycle1885/CellFishing.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CellFishing.jl \ud83c\udfa3"
      },
      "source": "https://raw.githubusercontent.com/bicycle1885/CellFishing.jl/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bicycle1885/CellFishing.jl/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/bicycle1885/CellFishing.jl/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/138121738"
      },
      "source": "https://raw.githubusercontent.com/bicycle1885/CellFishing.jl/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "CellFishing.jl \ud83c\udfa3"
        ],
        "type": "Text_excerpt",
        "value": "First of all, you need to install a Julia compiler.  A recommended way is to\ndownload a pre-built binary of Julia. The pre-built binaries for several major\nplatforms are distributed at <https://julialang.org/downloads/>.  Currently,\nCellFishing.jl supports Julia 1.0 or later.\n\nThen, install CellFishing.jl with the following command:\n\n    $ julia -e 'using Pkg; Pkg.add(PackageSpec(url=\"git://github.com/bicycle1885/CellFishing.jl.git\"))'\n\nAlternatively, you can use the `add` command in the package management mode of Julia:\n\n    (v1.0) pkg> add git@github.com:bicycle1885/CellFishing.jl.git\n\nTo check the installation, you can try `using CellFishing` in your REPL:\n\n    $ julia\n       _       _ _(_)_     |  Documentation: https://docs.julialang.org\n      (_)     | (_) (_)    |\n       _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n      | | | | | | |/ _` |  |\n      | | |_| | | | (_| |  |  Version 1.0.0 (2018-08-08)\n     _/ |\\__'_|_|_|\\__'_|  |  Official https://julialang.org/ release\n    |__/                   |\n\n    julia> using CellFishing  # load the package\n    [ Info: Precompiling CellFishing [5ab3512e-c64d-48f6-b1c0-509c1121fdda]\n\n    julia>\n\n\nNo error messages mean you have successfully installed CellFishing.jl.\n\nTo run unit tests, execute the following command:\n\n    $ julia -e 'using Pkg; Pkg.test(\"CellFishing\")'\n\n"
      },
      "source": "https://raw.githubusercontent.com/bicycle1885/CellFishing.jl/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.827644484530413,
      "result": {
        "original_header": "Command-line interface (WIP)",
        "type": "Text_excerpt",
        "value": "The bin/cellfishing script is a command-line interface to CellFishing.jl. \n"
      },
      "source": "https://raw.githubusercontent.com/bicycle1885/CellFishing.jl/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bicycle1885/CellFishing.jl/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright 2018 Kenta Sato\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/bicycle1885/CellFishing.jl/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CellFishing.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bicycle1885"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Julia",
        "size": 59775,
        "type": "Programming_language",
        "value": "Julia"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 107,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bicycle1885/CellFishing.jl/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bicycle1885",
          "type": "User"
        },
        "date_created": "2019-02-22T07:39:59Z",
        "date_published": "2019-02-22T07:40:54Z",
        "html_url": "https://github.com/bicycle1885/CellFishing.jl/releases/tag/v0.3.2",
        "name": "Minor fixes",
        "release_id": 15711775,
        "tag": "v0.3.2",
        "tarball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/tarball/v0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/15711775",
        "value": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/15711775",
        "zipball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/zipball/v0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bicycle1885",
          "type": "User"
        },
        "date_created": "2019-02-22T06:50:38Z",
        "date_published": "2019-02-22T06:55:19Z",
        "html_url": "https://github.com/bicycle1885/CellFishing.jl/releases/tag/v0.3.1",
        "name": "Minor fixes",
        "release_id": 15711290,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/15711290",
        "value": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/15711290",
        "zipball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bicycle1885",
          "type": "User"
        },
        "date_created": "2018-11-23T05:08:15Z",
        "date_published": "2018-11-24T06:44:37Z",
        "html_url": "https://github.com/bicycle1885/CellFishing.jl/releases/tag/v0.3.0",
        "name": "CellFishing.jl 0.3",
        "release_id": 14164965,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/14164965",
        "value": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/14164965",
        "zipball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bicycle1885",
          "type": "User"
        },
        "date_created": "2018-10-11T03:03:27Z",
        "date_published": "2018-10-12T02:24:45Z",
        "html_url": "https://github.com/bicycle1885/CellFishing.jl/releases/tag/v0.2.0",
        "name": "CellFishing.jl 0.2",
        "release_id": 13386435,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/13386435",
        "value": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/13386435",
        "zipball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bicycle1885",
          "type": "User"
        },
        "date_created": "2018-07-25T02:12:29Z",
        "date_published": "2018-07-25T02:13:30Z",
        "html_url": "https://github.com/bicycle1885/CellFishing.jl/releases/tag/v0.1.1",
        "name": "Support Julia 0.7-beta2",
        "release_id": 12087841,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/12087841",
        "value": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/12087841",
        "zipball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bicycle1885",
          "type": "User"
        },
        "date_created": "2018-07-04T08:18:28Z",
        "date_published": "2018-07-04T08:19:46Z",
        "description": "The initial release of CellFishing.jl.",
        "html_url": "https://github.com/bicycle1885/CellFishing.jl/releases/tag/v0.1.0",
        "name": "CellFishing.jl 0.1",
        "release_id": 11772996,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/11772996",
        "value": "https://api.github.com/repos/bicycle1885/CellFishing.jl/releases/11772996",
        "zipball_url": "https://api.github.com/repos/bicycle1885/CellFishing.jl/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:08:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 41
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}