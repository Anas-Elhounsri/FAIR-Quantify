{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\ntitle: \"Ricgraph - Research in context graph\"\ntype: software\nversion: \"v2.4\"\ndate-released: \"2024-09-10\"\nauthors:\n  - given-names: \"Rik D.T.\"\n    family-names: Janssen\n    orcid: \"https://orcid.org/0000-0001-9510-0802\"\n    affiliation: \"Utrecht University\"\nmessage: \"If you use Ricgraph, please cite both the reference publication and the software itself.\"\npreferred-citation:\n  authors:\n    - family-names: Janssen\n      given-names: \"Rik D.T.\"\n      orcid: \"https://orcid.org/0000-0001-9510-0802\"\n      affiliation: \"Utrecht University\"\n  title: \"Ricgraph: A flexible and extensible graph to explore research in context from various systems\"\n  type: article\n  journal: \"SoftwareX\"\n  issn: \"2352-7110\"\n  year: 2024\n  volume: 26\n  number: 101736\n  url: \"https://doi.org/10.1016/j.softx.2024.101736\"\n  doi: \"10.1016/j.softx.2024.101736\"\nidentifiers:\n  - description: \"Ricgraph concept DOI (latest version)\"\n    type: doi\n    value: \"10.5281/zenodo.7524314\"\n  - description: \"Ricgraph DOI v0.8\"\n    type: doi\n    value: \"10.5281/zenodo.7524315\"\n  - description: \"Ricgraph DOI v0.9\"\n    type: doi\n    value: \"10.5281/zenodo.7565240\"\n  - description: \"Ricgraph DOI v1.0\"\n    type: doi\n    value: \"10.5281/zenodo.7594956\"\n  - description: \"Ricgraph DOI v1.1\"\n    type: doi\n    value: \"10.5281/zenodo.7644239\"\n  - description: \"Ricgraph DOI v1.3\"\n    type: doi\n    value: \"10.5281/zenodo.7717299\"\n  - description: \"Ricgraph DOI v1.4\"\n    type: doi\n    value: \"10.5281/zenodo.7780744\"\n  - description: \"Ricgraph DOI v1.5\"\n    type: doi\n    value: \"10.5281/zenodo.7798848\"\n  - description: \"Ricgraph DOI v1.6\"\n    type: doi\n    value: \"10.5281/zenodo.7841385\"\n  - description: \"Ricgraph DOI v1.7\"\n    type: doi\n    value: \"10.5281/zenodo.7948971\"\n  - description: \"Ricgraph DOI v1.8\"\n    type: doi\n    value: \"10.5281/zenodo.8425348\"\n  - description: \"Ricgraph DOI v1.9\"\n    type: doi\n    value: \"10.5281/zenodo.10033332\"\n  - description: \"Ricgraph DOI v1.10\"\n    type: doi\n    value: \"10.5281/zenodo.10046540\"\n  - description: \"Ricgraph DOI v1.11\"\n    type: doi\n    value: \"10.5281/zenodo.10083972\"\n  - description: \"Ricgraph DOI v1.12\"\n    type: doi\n    value: \"10.5281/zenodo.10404893\"\n  - description: \"Ricgraph DOI v1.13\"\n    type: doi\n    value: \"10.5281/zenodo.10458813\"\n  - description: \"Ricgraph DOI v1.14\"\n    type: doi\n    value: \"10.5281/zenodo.10567922\"\n  - description: \"Ricgraph DOI v2.0\"\n    type: doi\n    value: \"10.5281/zenodo.10952538\"\n  - description: \"Ricgraph DOI v2.1\"\n    type: doi\n    value: \"10.5281/zenodo.11057540\"\n  - description: \"Ricgraph DOI v2.2\"\n    type: doi\n    value: \"10.5281/zenodo.11096054\"\n  - description: \"Ricgraph DOI v2.3\"\n    type: doi\n    value: \"10.5281/zenodo.11544339\"\n  - description: \"Ricgraph DOI v2.4\"\n    type: doi\n    value: \"10.5281/zenodo.13740878\"\nabstract: >-\n  Ricgraph, also known as Research in context graph, enables the exploration of\n  researchers, teams, their results, collaborations, skills, projects, and the\n  relations between these items.\n  \n  Ricgraph can store many types of items into a single graph.  These items can be\n  obtained from various systems and from multiple organizations. Ricgraph\n  facilitates reasoning about these items because it infers new relations between\n  items, relations that are not present in any of the separate source systems.\n  It is flexible and extensible, and can be adapted to new application\n  areas.\n  \n  Throughout this text, we illustrate how Ricgraph works by applying\n  it to the application area research information.\n  \n  \n  Motivation\n  \n  Ricgraph, also known as Research in context graph, is software that is about\n  relations between items. These items can be collected from various source\n  systems and from multiple organizations. We\n  explain how Ricgraph works by applying it to the application area\n  research information. We show the insights that can be\n  obtained by combining information from various source systems,\n  insight arising from new relations that are not present\n  in each separate source system.\n  \n  Research information is about anything related to research: research\n  results, the persons in a research team, their\n  collaborations, their skills, projects in which they have\n  participated, as well as the relations between these entities.\n  Examples of research results are publications, data sets, and software.\n  \n  Example use cases from the application area research information are:\n  \n  (1) As a journalist, I want to find researchers with a certain skill and their publications, so that I can interview them for a newspaper article.\n  \n  (2) As a librarian, I want to enrich my local research information system with research results that are in other systems but not in ours, so that we have a more complete view of research at our university.\n  \n  (3) As a researcher, I want to find researchers from other universities that have co-authored publications written by the co-authors of my own publications, so that I can read their publications to find out if we share common research interests.\n  \n  These use cases use different types of information (called items): researchers,\n  skills, publications, etc. Most often, these types of information are not\n  stored in one system, so the use cases may be difficult or time-consuming to\n  answer. However, by using Ricgraph, these use cases (and many others) are easy\n  to answer.\n  \n  Although this text illustrates Ricgraph in the application area\n  research information, the principle \"relations between items from various\n  source systems\" is general, so Ricgraph can be used in other application areas.\n  \n  \n  Main contributions of Ricgraph\n  \n  (1) Ricgraph can store many types of items in a single graph.\n  \n  (2) Ricgraph harvests multiple source systems into a single graph.\n  \n  (3) Ricgraph Explorer is the exploration tool for Ricgraph.\n  \n  (4) Ricgraph facilitates reasoning about items because it infers new relations between items.\n  \n  (5) Ricgraph can be tailored for an application area.\n  \n  \n  Read more about Ricgraph\n  \n  For a gentle introduction in Ricgraph, read the reference publication:\n  Rik D.T. Janssen (2024). Ricgraph: A flexible and extensible graph to explore research in\n  context from various systems. SoftwareX, 26(101736).\n  https://doi.org/10.1016/j.softx.2024.101736\n\n  Extensive documentation, publications, videos and source code can be found in\n  the GitHub repository https://github.com/UtrechtUniversity/ricgraph\n\n  The website for Ricgraph can be found at https://www.ricgraph.eu\nkeywords:\n  - \"Ricgraph\"\n  - \"Ricgraph Explorer\"\n  - \"Ricgraph REST API\"\n  - \"Research in context graph\"\n  - \"Graph\"\n  - \"Graph database\"\n  - \"Data harvesting\"\n  - \"Data enrichment\"\n  - \"Data linking\"\n  - \"Linked data\"\n  - \"Knowledge graph\"\n  - \"Metadata\"\n  - \"Utrecht University\"\nlicense: MIT\nrepository-code: \"https://github.com/UtrechtUniversity/ricgraph\"\nurl: \"https://www.ricgraph.eu\"\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UtrechtUniversity/ricgraph"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "Ricgraph - Research in context graph"
        ],
        "type": "Text_excerpt",
        "value": "Ricgraph has been created and is being maintained by \n[Rik D.T. Janssen from Utrecht University in the Netherlands](https://www.uu.nl/staff/DTJanssen)\n[(ORCID 0000-0001-9510-0802)](https://orcid.org/0000-0001-9510-0802).\nYou can contact him for presentations, demos and workshops.\n\nAbout three to four times a year we send out a \nnewsletter.\n[Please click here to subscribe to it. Your email program will open with\na subscribe email text. Please complete it\nby filling in your name and email address](mailto:r.d.t.janssen@uu.nl?subject=Please%20add%20me%20to%20the%20Ricgraph%20newsletter%20email%20list&body=Hi%20Rik%2C%0D%0A%0D%0ACan%20you%20please%20add%20me%20to%20your%20Ricgraph%20newsletter%20email%20list%3F%20Thanks!%0D%0A%0D%0ABest%20regards%2C%0D%0A%0D%0A%5Bplease%20replace%20with%20your%20name%5D%0D%0A%5Bplease%20replace%20with%20your%20email%20address%5D).\nWe also have a \n[newsletter archive](docs/ricgraph_pubs_pres_news_use_ment.md#ricgraph-newsletters). \n\nIf you like Ricgraph, please give it a GitHub Star by clicking on the top right \n*Star* button on this page. If you have any suggestions or improvements, \nplease let me know by creating a GitHub *Issue* at the top left of this page. \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-10T19:02:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T08:31:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ricgraph - Research in context graph"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9752444396954238,
      "result": {
        "original_header": "What is Ricgraph?",
        "type": "Text_excerpt",
        "value": "Ricgraph, also known as Research in context graph, enables the exploration of researchers, \nteams, their results,\ncollaborations, skills, projects, and the relations between these items. \nRicgraph can store many types of items into a single graph. \nThese items can be obtained from various systems and from\nmultiple organizations. Ricgraph facilitates reasoning about these \nitems because it infers new relations between items,\nrelations that are not present in any of the separate source systems. \nIt is flexible and extensible, and can be\nadapted to new application areas. \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9444618511667938,
      "result": {
        "original_header": "Motivation",
        "type": "Text_excerpt",
        "value": "Ricgraph, also known as Research in context graph, is software that is about\nrelations between items. These items can be collected from various source \nsystems and from multiple organizations. We\nexplain how Ricgraph works by applying it to the application area \n*research information*. We show the insights that can be\nobtained by combining information from various source systems, \ninsight arising from new relations that are not present\nin each separate source system. \n*Research information* is about anything related to research: research \nresults, the persons in a research team, their\ncollaborations, their skills, projects in which they have \nparticipated, as well as the relations between these entities.\nExamples of *research results* are publications, data sets, and software. \n| Use case                                                                                                                                                                                                                                                        | In Ricgraph (click to enlarge)                              |\n|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------|\n| As a journalist, I want to find researchers with a certain skill S and their publications, so that I can interview them for a newspaper article. Example skills can be: *climate change* or *stem cells*.                                                       | <img src=\"docs/images/journalist-use-case.jpg\" width=\"700\"> |\n| As a librarian, I want to enrich my local research information system with research results from person A that are in other systems (in orange, *RIS2*) but not in ours (in green, *RIS1*), so that we have a more complete view of research at our university. | <img src=\"docs/images/librarian-use-case.jpg\" width=\"700\">  |\n| As a researcher A, I want to find researchers from other universities that have co-authored publications written by the co-authors of my own publications, so that I can read their publications to find out if we share common research interests.             | <img src=\"docs/images/researcher-use-case.jpg\" width=\"700\"> | \n\nThese use cases use different types of information (called *items*):\nresearchers, skills, publications,\netc. Most often, these types of information are not stored in \none system, so the use cases may be difficult or\ntime-consuming to answer. However, by using Ricgraph, these \nuse cases (and many others) are easy to answer, as will be\nexplained throughout this documentation. \nAlthough this documentation illustrates Ricgraph in the application area \nresearch information, the principle \u201crelations\nbetween items from various source systems\u201d is general, \nso Ricgraph can be used in other application areas.\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9653336049781406,
      "result": {
        "original_header": "Main contributions of Ricgraph",
        "type": "Text_excerpt",
        "value": "* Ricgraph can store many types of items in a single graph.\n* Ricgraph harvests multiple source systems into a single graph.\n* Ricgraph Explorer is the exploration tool for Ricgraph.\n* Ricgraph facilitates reasoning about items because it infers new relations between items.\n* Ricgraph can be tailored for an application area.\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9754120996053277,
      "result": {
        "original_header": "Read more about Ricgraph",
        "type": "Text_excerpt",
        "value": "For a gentle introduction in Ricgraph, read the reference publication: \nRik D.T. Janssen (2024). Ricgraph: A flexible and extensible graph to explore research in\ncontext from various systems. *SoftwareX*, 26(101736).\nhttps://doi.org/10.1016/j.softx.2024.101736. \nFor a further introduction, you might want to read these two presentations:\n* A general presentation about Ricgraph, presenting Ricgraph in a visual manner: \n  https://doi.org/10.5281/zenodo.12634234.\n* A presentation explaining how to enrich \n  the [Research Information System Pure](https://www.elsevier.com/solutions/pure)\n  (and other source systems) using Ricgraph \n  and [BackToPure](https://github.com/UtrechtUniversity/BackToPure):\n  https://doi.org/10.5281/zenodo.12634658.\n  This presentation explains that after harvesting several Pure's \n  (from different institutions)  and other source systems,\n  such as [OpenAlex](https://openalex.org), \n  one can enrich its own Pure _A_ by using information in other source\n  systems, not present in one's own Pure _A_.\n  \nTo learn more about Ricgraph,\n[read why Ricgraph has been developed](#why-ricgraph).\nThis is followed by\n[Ricgraph in bullet points](#ricgraph-in-bullet-points). There is also\n[a section with next steps you might want to take](#next-steps),\nincluding [further information about \nRicgraph](#further-information-about-ricgraph),\nan [explanation how to install Ricgraph and harvest \ndata](#steps-to-take-if-you-would-like-to-install-ricgraph-and-harvest-data),\nan [explanation how to use Ricgraph](#steps-to-take-if-you-would-like-to-use-ricgraph), \nand [information about extending Ricgraph](#read-this-in-case-you-would-like-to-extend-ricgraph).\nOf course there are \n[videos we have made to demonstrate Ricgraph](docs/ricgraph_example_use_videos.md),\nand there is an overview of the \n[publications](docs/ricgraph_pubs_pres_news_use_ment.md#ricgraph-publications),\n[presentations](docs/ricgraph_pubs_pres_news_use_ment.md#ricgraph-presentations),\n[newsletters](docs/ricgraph_pubs_pres_news_use_ment.md#ricgraph-newsletters)\n(to subscribe, go to [Ricgraph Contact](#contact)),\n[use](docs/ricgraph_pubs_pres_news_use_ment.md#ricgraph-use), and\n[mentions](docs/ricgraph_pubs_pres_news_use_ment.md#ricgraph-mentions)\nof Ricgraph.\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9896001274429623,
      "result": {
        "original_header": "Why Ricgraph?",
        "type": "Text_excerpt",
        "value": "Also, more elaborate information can be found using Ricgraph and \n[Ricgraph Explorer](docs/ricgraph_explorer.md), the\nexploration tool for Ricgraph:\n* You can find information about persons or their results in a (sub-)organization \n  (unit, department, faculty, university). \n  For example, you can find out what data sets or software are produced in your faculty. \n  Or the skills of all persons in your department. Of course this is only possible in case you have harvested them.\n* You can find out with whom a person shares research output types. \n  For example, you can find out with whom someone shares software or data sets.\n* You can get tables showing how you can enrich a source system based on other systems you have harvested. \n  For example, suppose you have harvested both \n  [Research Information System Pure](https://www.elsevier.com/solutions/pure) and\n  [OpenAlex](https://openalex.org), using this feature you can find out \n  which publications in OpenAlex are not in Pure. You might want to add those to Pure.\n* You can get a table that shows the overlap in harvests from different source systems. \n  For example, after a query to show all ORCID nodes, \n  the table summarizes the number of ORCID nodes which were\n  only found in one source, and which were found in multiple sources. \n  Another table gives a detailed overview how many\n  nodes originate from which different source systems. Then, you can drill down by \n  clicking on a number in one of these\n  two tables to find the nodes corresponding to that number.  \nWith Ricgraph, you can get metadata from objects from any source system you\u2019d like. \nYou run the harvest script for that\nsystem, and data will be imported in Ricgraph and will be \ncombined automatically with data which is already there.\nRicgraph provides harvest scripts for the systems mentioned above. \nScripts for other sources can be written easily. \nIn the remainder of this text, Ricgraph is described in the use case of\nshowing people, organizations and research outputs in relation to each other\nin a university context.\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9879265163024462,
      "result": {
        "original_header": "Ricgraph in bullet points",
        "type": "Text_excerpt",
        "value": "* The philosophy of Ricgraph is that it stores metadata, not the objects the metadata\n  refer to. To access an object, a node has a link to that object in\n  the system it was obtained from. \n* We have chosen a\n  graph as a datastructure, since it is a logical and efficient\n  method to access objects\n  which are close to objects they have a relation to. For example,\n  starting with a person, its research outputs are only one\n  step away by following one edge, and other contributors to that research output are\n  again one step (edge) away.\n* Ricgraph can be used to store, manipulate and read metadata of any object that\n  has a relation to another object,\n  as long as every object can be \"represented\" by at least a *name* and a *value*.\n  In Ricgraph, one node represents one object, and an edge represents the\n  relation between two objects.\n* Ricgraph and Ricgraph Explorer are written in Python. You can use two different\n  [graph database backends](https://en.wikipedia.org/wiki/Graph_database):\n  * [Neo4j](https://neo4j.com) (either Neo4j Desktop or Neo4j Community Edition);\n  * [Memgraph](https://memgraph.com).\n* Metadata of an object are stored as \"properties\"\n  in a node, i.e. as information associated with a node.\n  For example, a node may store two properties, *name = PET* and\n  *value = cat*. Another node may store *name = FULL_NAME* and *value = John Doe*.\n  Then the edge between those two nodes means that the person with FULL_NAME John Doe\n  has a PET which is a cat. Ricgraph can store any number of properties in a node.\n* The objective of Ricgraph is to get metadata from\n  objects from a source system in a process called \"harvesting\".\n  That means that e.g. persons and publications\n  can be harvested from one system, data sets from another system, and software from a third system.\n  Everything found will be combined into one graph.\n* Ricgraph can harvest from many sources, and you can write your own\n  harvesting scripts. Example scripts are included to\n  harvest from the [OpenAlex](https://openalex.org), \n  the [Research Information System Pure](https://www.elsevier.com/solutions/pure),\n  the data repository [Yoda](https://www.uu.nl/en/research/yoda),\n  the [Research Software Directory](https://research-software-directory.org), and \n  for the [Utrecht University staff pages](https://www.uu.nl/staff/search).\n* Ricgraph can be used as an ID resolver. It can, given an identifier of a person,\n  easily find other identifiers of that person. When new identifiers are found when\n  harvesting from new systems,\n  they will be added automatically. \n* Ricgraph can check the consistency of information harvested. For example, ORCIDs and ISNIs\n  are supposed to refer to one person, so every node representing such an identifier should have\n  only one edge. This can be checked easily.\n  An example script is included.\n* Ricgraph can enrich information in its own graph by using information from other systems. \n  For example,\n  if a person has an ORCID, but not a Scopus Author ID,\n  [OpenAlex](https://openalex.org) can be used\n  to find the missing Scopus Author ID. An example script is included.\n* Ricgraph can enrich a source system based on information that is present in one\n  source system, but not in another source system. See the use case above.\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9588866557120701,
      "result": {
        "original_header": "Further information about Ricgraph",
        "type": "Text_excerpt",
        "value": "* For a gentle introduction in Ricgraph, read the reference publication:\n  Rik D.T. Janssen (2024). Ricgraph: A flexible and extensible graph to explore research in\n  context from various systems. *SoftwareX*, 26(101736).\n  https://doi.org/10.1016/j.softx.2024.101736.\n* For a further introduction, you might want to read these two presentations:\n  * A general presentation about Ricgraph, presenting Ricgraph in a visual manner:\n    https://doi.org/10.5281/zenodo.12634234.\n  * A presentation explaining how to enrich\n    the [Research Information System Pure](https://www.elsevier.com/solutions/pure)\n    (and other source systems) using Ricgraph\n    and [BackToPure](https://github.com/UtrechtUniversity/BackToPure):\n    https://doi.org/10.5281/zenodo.12634658.\n    This presentation explains that after harvesting several Pure's\n    (from different institutions)  and other source systems,\n    such as [OpenAlex](https://openalex.org),\n    one can enrich its own Pure _A_ by using information in other source\n    systems, not present in one's own Pure _A_. \n* Read more about\n  [publications](docs/ricgraph_pubs_pres_news_use_ment.md#ricgraph-publications),\n  [presentations](docs/ricgraph_pubs_pres_news_use_ment.md#ricgraph-presentations),\n  [newsletters](docs/ricgraph_pubs_pres_news_use_ment.md#ricgraph-newsletters)\n  (to subscribe, go to [Ricgraph Contact](#contact)),\n  [use](docs/ricgraph_pubs_pres_news_use_ment.md#ricgraph-use), and\n  [mentions](docs/ricgraph_pubs_pres_news_use_ment.md#ricgraph-mentions)\n  of Ricgraph.\n* Look at the [videos we have made to demonstrate Ricgraph](docs/ricgraph_example_use_videos.md).\n* Read more about [Ricgraph details](docs/ricgraph_details.md),\n  such as example graphs, person identifiers and the *person-root* node.\n* You might want to [compare Ricgraph to other systems](docs/ricgraph_comparison.md).\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9132862967021197,
      "result": {
        "original_header": "Read this in case you would like to extend Ricgraph",
        "type": "Text_excerpt",
        "value": "* Start writing scripts, see [Ricgraph script writing](docs/ricgraph_script_writing.md).\n* Of course, there is [future work to do](docs/ricgraph_future_work.md). Please let me know\n  if you'd like to help.\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UtrechtUniversity/ricgraph/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UtrechtUniversity/ricgraph/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "UtrechtUniversity/ricgraph"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ricgraph - Research in context graph"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://w3id.org/research-technology-readiness-levels/Level6LatePrototype.svg"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/docs/images/journalist-use-case.jpg"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/docs/images/librarian-use-case.jpg"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/docs/images/researcher-use-case.jpg"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/docs/images/one-person-with-research-outputs.jpg"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/docs/images/symbols.jpg"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/docs/images/colors-vertical.jpg"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/docs/images/several-persons-with-research-outputs.jpg"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/docs/images/identifiers-and-outputs.jpg"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "## Install and configure Ricgraph\n\nThis page describes how to install Ricgraph for a single user on Linux.\nIf you would like to use Ricgraph in a multi-user environment\non Linux, you will need to install Ricgraph differently.\nPlease read [Ricgraph as a server on Linux](ricgraph_as_server.md).\nIn case you have no idea what would be the best for your situation, please \ninstall Ricgraph for a single user on Linux, as described on this page.\n[Continue reading here if you would like to install Ricgraph on \nWindows](#ricgraph-on-windows) (not recommended).\n\nOn this page you can find:\n* [Ricgraph Makefile](#ricgraph-makefile)\n* [Installation instructions for a single user](#installation-instructions-for-a-single-user)\n* [Requirements](#requirements)\n* [Steps to take](#steps-to-take)\n* [Install Neo4j Desktop](#install-neo4j-desktop)\n* [Install Bloom configuration](#install-bloom-configuration)\n* [Download Ricgraph](#download-ricgraph)\n* [Use a Python virtual environment and install Python requirements](#use-a-python-virtual-environment-and-install-python-requirements)\n* [Ricgraph initialization file](#ricgraph-initialization-file)\n* [Using Ricgraph](#using-ricgraph)\n* [Dumping and restoring the Ricgraph database](#dumping-and-restoring-the-ricgraph-database)\n* [Ricgraph on Windows](#ricgraph-on-windows)\n \n[Return to main README.md file](../README.md).\n\n### Ricgraph Makefile\nA Ricgraph installation involves a number of steps.\nRicgraph uses a *Makefile* to make installation of (parts of) Ricgraph easier.\nSuch a Makefile automates a number of these steps. \nA Makefile command is executed by typing:\n```\nmake [target]\n```\n\nTo use the Ricgraph Makefile, first go to your home directory on Linux and \nthen download it, by typing:\n```\ncd\nwget https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/Makefile\n```\n\nIn the example above, the *[target]* specifies what has to be done. \nAssuming that you are in your home directory, you can \nexecute one of these commands to find the possible targets:\n```\nmake\nmake help\nmake all\n```\nMost often, you do not need to install the `make` command, but if you get a\n\"command not found\" error message, you need to install it using your Linux \npackage manager.\n\nIf you read the documentation below or on page\n[Ricgraph as a server on Linux](ricgaph_as_server.md),\nyou will notice that some sections start with mentioning a Makefile command. \nThat means, that if you execute that command, the steps in that section will\nbe done automatically.\nSometimes, you will\nhave to do some post-install steps, e.g. because you have to choose a password for the\ngraph database. \n\n\n### Installation instructions for a single user\n\nRicgraph can use two [graph database \nbackends](https://en.wikipedia.org/wiki/Graph_database):\n[Neo4j](https://neo4j.com) and [Memgraph](https://memgraph.com). \n\n#### Neo4j \nNeo4j has several products:\n\n* [Neo4j Desktop](https://neo4j.com/download-center/#desktop);\n* [Neo4j Bloom graph visualization tool](https://neo4j.com/product/bloom),\n  included with Neo4j Desktop\n  (according to Neo4j:\n  \"A beautiful and expressive data visualization tool to quickly explore and freely interact with\n  Neo4j\u2019s graph data platform with no coding required\");\n* [Neo4j Community Edition](https://neo4j.com/download-center/#community), allows\n  to explore the graph using\n  [Cypher queries](https://en.wikipedia.org/wiki/Cypher_(query_language)) only.\n\n#### Memgraph\n[Memgraph](https://memgraph.com) is an in memory graph database\nand therefore faster than Neo4j. However,\nit has not been tested extensively with Ricgraph yet.\nRead [Install and start Memgraph](ricgraph_as_server.md#install-and-start-memgraph).\n\n### Requirements\nThe easiest method for using Ricgraph is by using a Linux virtual machine (VM) such as\nyou can create using \n[VirtualBox](https://www.virtualbox.org). A VM of size 25GB with 4GB memory will work.\nOf course, this depends on the (size of the) sources you plan to harvest and the\ncapabilities of your computer. The more, the better. The author uses a VM of 35GB with\n10GB memory and 3 vCPUs on an 11th gen Intel i7 mobile processor. \n\nRicgraph has been\ndeveloped with Python 3.11. For some features you need at least Python 3.9.\nE.g., if you have Ubuntu 20.04, you can install Python 3.11 as follows:\n* Login as user *root*.\n* Type the following commands:\n  ```\n  add-apt-repository ppa:deadsnakes/ppa\n  apt install python3.11\n  ```\n* Exit from user *root*.\n\n### Steps to take\n\n1. Install your graph database backend (choose one of these):\n   * [Install Neo4j Desktop](#install-neo4j-desktop) (recommended, since it includes Bloom).\n     Optional: [Install the Bloom configuration](#install-bloom-configuration).\n   * [Install and start Neo4j Community \n     Edition](ricgraph_as_server.md#install-and-start-neo4j-community-edition).\n   * [Install and start Memgraph](ricgraph_as_server.md#install-and-start-memgraph).\n1. [Download Ricgraph](#download-ricgraph).\n1. [Use a Python virtual environment and install Python \n   requirements](#use-a-python-virtual-environment-and-install-python-requirements).\n1. Create and update the [Ricgraph initialization file](#Ricgraph-initialization-file). This is also the\n   place where you specify which graph database backend you use.\n1. Start \n   - harvesting data, see [Ricgraph harvest scripts](ricgraph_harvest_scripts.md);\n   - writing scripts, see [Ricgraph script writing](ricgraph_script_writing.md).\n1. [Execute queries and visualize the results](ricgraph_query_visualize.md).\n\nOther things you might want to do, if you use Neo4j:\n* [Create a Neo4j Desktop database dump of Ricgraph](#create-a-neo4j-desktop-database-dump-of-ricgraph).\n* [Restore a Neo4j Desktop database dump of Ricgraph in Neo4j Desktop](#restore-a-neo4j-desktop-database-dump-of-ricgraph-in-neo4j-desktop).\n* [Restore a Neo4j Desktop database dump of Ricgraph in Neo4j Community \n  Edition](#restore-a-neo4j-desktop-database-dump-of-ricgraph-in-neo4j-community-edition).\n\n### Install Neo4j Desktop\n\nTo install, you can either use the [Ricgraph Makefile](#ricgraph-makefile) and execute\ncommand `make install_neo4j_desktop`, or follow the steps below.\n\n1. Install Neo4j Desktop Edition (it is free). \n   To do this, go to the \n   [Neo4j Deployment Center](https://neo4j.com/deployment-center). \n   Go to section \"Neo4j Desktop\". Choose the latest version of Neo4j Desktop.\n   Download the Linux version. It is an [AppImage](https://en.wikipedia.org/wiki/AppImage),\n   so it can be installed and used without root permissions. You will be asked to fill in a form before\n   you can download. In the following screen you will be given a \"Neo4j Desktop Activation Key\". Save it.\n1. The downloaded file is called something\n   like *neo4j-desktop-X.Y.Z-x86_64.AppImage*, where *X.Y.Z* is a version number.\n   Make it executable using \"chmod 755 \\[filename\\]\". \n\n#### Post-install steps Neo4j Desktop\n1. Start Neo4j Desktop by clicking on the downloaded file. \n1. Accept the license. \n1. Enter your activation key in the right part of the screen.\n   Click \"Activate\".\n   If you do not have a key, fill in the left part of the screen.\n   Click \"Register with Email\".\n   Wait awhile.\n1. Choose whether you would like to participate in anonymous reporting.\n1. You may be offered updates for Neo4j Desktop components, please update.\n1. Move your mouse to \"Example Project\" in the left column.\n   A red trash can icon appears. Click it to remove the Example\n   Project database \"Movie DBMS\". Confirm. Then wait awhile.\n1. The text \"No projects found\" will appear. Create a project by clicking the button \"+ New Project\".\n1. The text \"Project\" appears with the text \"Add a DBMS to get started\". Click on the \"+ Add\" button\n   next to it and select \"Local DBMS\". Leave the name as it is (\"Graph DBMS\") and fill in a password. \n   Click \"Create\".\n   Also, insert the password in field *graphdb_password* in\n   the [Ricgraph initialization file](#Ricgraph-initialization-file), see below.\n1. Exit Neo4j Desktop using the \"File\" menu and select \"Quit\". If your database was active\n   a message similar to \"Your DBMS [name] is running, are you sure you want to quit\" appears,\n   choose \"Stop DBMS, then quit\".\n1. Ready.\n\nNow we need to find the port number which Neo4j Desktop is using:\n\n1. [Start Neo4j Desktop](ricgraph_query_visualize.md#start-neo4j-desktop). Start the Graph DBMS.\n1. Click on the words \"Graph DBMS\". At the right (or below, \n   depending on the width of the Neo4j Desktop window) a new screen appears.\n   Look at the tab \"Details\". Note the port number next to \"Bolt port\" (the default\n   value is 7687).\n   Insert this port number in field *graphdb_port* in\n   the [Ricgraph initialization file](#Ricgraph-initialization-file), see below.\n1. Ready.\n\n### Install Bloom configuration\n\nThis is only necessary if you plan to use Bloom. If you don't know, skip this step for now,\nyou can come back to it later.\n\n1. [Start Neo4j Desktop](ricgraph_query_visualize.md#start-neo4j-desktop).\n1. Click on the icon <img src=\"images/neo4j1.jpg\" height=\"20\">\n   on the left side of Neo4j Desktop.\n1. Click on \"Neo4j Bloom\". A new window appears.\n1. In this window, click on the icon <img src=\"images/neo4j2.jpg\" height=\"20\">\n   at the top left. A Bloom \"Perspective\" slides out\n   (Neo4j has an\n   [extensive description how to\n   use it](https://neo4j.com/docs/bloom-user-guide/current/bloom-visual-tour/perspective-drawer)).\n1. Click on \"neo4j > Untitled Perspective 1\".\n1. A new window appears.\n   Right of the words \"Untitled Perspective 1\" there are three vertical dots. Click on it.\n   Click on \"Delete\". The perspective \"Untitled Perspective 1\" is removed.\n1. In the same window, right of the word \"Perspectives\" click on the word \"Import\".\n   A file open window appears. Go to directory\n   [neo4j_config](../neo4j_config) that is part of Ricgraph and\n   select file *ricgraph_bloom_config.json*. Click \"Open\".\n   The perspective \"ricgraph_bloom_config\" is loaded.\n1. Click on the text \"ricgraph_bloom_config\".\n1. Note that the text \"neo4j > Untitled Perspective 1\"\n   has been changed in \"neo4j > ricgraph_bloom_config\".\n1. A few centimeters below \"neo4j > ricgraph_bloom_config\", just below the text \"Add category\",\n   click on the oval \"RicgraphNode\". At the right, a new window will appear.\n1. In this window, below the word \"Labels\", check if an oval box with the text \"RicgraphNode\" is\n   shown. If not, click on \"Add labels\", click on \"RicgraphNode\".\n1. Click on the icon <img src=\"images/neo4j2.jpg\" height=\"20\">\n   to go back to the main screen of Bloom.\n1. Click on the cog icon below <img src=\"images/neo4j2.jpg\" height=\"20\">, you might want\n   to set \"Use classic search\" to \"on\".\n1. Ready.\n\n### Download Ricgraph\n\nTo you use the [Ricgraph Makefile](#ricgraph-makefile),\nthis will be done automatically while creating a Python virtual environment\n(see the following section).\n\nYou can choose two types of downloads for Ricgraph:\n\n* The latest released version. Go to the\n  [Release page of Ricgraph](https://github.com/UtrechtUniversity/ricgraph/releases),\n  choose the most recent version, download either the *zip* or *tar.gz* version.\n* The \"cutting edge\" version. Go to the\n  [GitHub page of Ricgraph](https://github.com/UtrechtUniversity/ricgraph/),\n  click the green button \"Code\", choose tab \"Local\", choose \"Download zip\".\n\n### Use a Python virtual environment and install Python requirements\n\nTo do this, you can either use the [Ricgraph Makefile](#ricgraph-makefile) and execute\ncommand `make install_ricgraph_as_singleuser`, or follow the steps below.\n\nTo be able to use Ricgraph, you will need a Python virtual environment.\nVirtual environments are a kind of lightweight Python environments,\neach with their own independent set of Python packages installed\nin their site directories. A virtual environment is created on top of\nan existing Python installation.\nThere are two ways of doing this:\n* Using Python's venv module;\n* Using a Python Integrated development environment (IDE).\n\n#### Using Python's venv module\n* Using Python's venv module.\n  Read [Create a Python virtual environment and install Ricgraph in\n  it](ricgraph_as_server.md#create-a-python-virtual-environment-and-install-ricgraph-in-it).\n  This documentation has been written for a multi-user installation of Ricgraph.\n  To use it for a single users install (as you are doing since you are on this page):\n  * Suppose you are a user with login _alice_.\n  * Suppose your home directory is _/home/alice_ (check this by typing ``cd`` followed\n    by ``pwd``).\n  * For every occurrence of _/opt_ in\n    [Create a Python virtual environment and install Ricgraph in\n    it](ricgraph_as_server.md#create-a-python-virtual-environment-and-install-ricgraph-in-it),\n    read _/home/alice_, and ignore any references to \"login as user _root_\" and ``chown``.\n  * Follow the other instructions as written. \n\n#### Using a Python Integrated development environment (IDE)\n* Using a Python\n  [Integrated development\n  environment (IDE)](https://en.wikipedia.org/wiki/Integrated_development_environment),\n  such as [PyCharm](https://www.jetbrains.com/pycharm).\n  An IDE will automatically generate a virtual environment, and any time you\n  use the IDE, it will \"transfer\" you to that virtual environment.\n  It will also help to execute and debug your scripts.\n  * If PyCharm does not automatically generate a virtual environment, you\n    need to go to File --> Settings --> Project: [your project name] --> \n    Python Interpreter, and check if\n    there is a valid interpreter in the right column next to\n    \"Python Interpreter\". If not, add one, using \"Add Interpreter\",\n    and choose for example \"Add Local Interpreter\". A venv will be generated.\n  * Next, ``unzip`` or ``tar xf`` the downloaded file for Ricgraph (see previous section).\n  * Install the Python requirements.\n    Depending on the Python IDE, single or double-click on\n    file *requirements.txt*. Probably, a button or text appears\n    that asks you to install requirements. Click on it.\n  \n    If this does not work, type in the IDE (PyCharm) Terminal:\n    ```\n    pip3.11 install -r requirements.txt\n    ```\n    You may want to change *3.11* in *pip3.11* for the Python version you use.\n\n#### Notable dependencies used in Ricgraph:\n* [PyAlex](https://github.com/J535D165/pyalex).\n  PyAlex is a Python library for [OpenAlex](https://openalex.org/).\n  OpenAlex is an index of hundreds of millions of interconnected scholarly papers, authors,\n  institutions, and more. OpenAlex offers a robust, open, and free [REST API](https://docs.openalex.org/)\n  to extract, aggregate, or search scholarly data.\n  PyAlex is a lightweight and thin Python interface to this API.\n\n### Ricgraph initialization file\n\nRicgraph requires an initialization file. A sample file is included as *ricgraph.ini-sample*.\nYou need to copy this file to *ricgraph.ini* and modify it\nto include settings for your graph database backend, and\nAPI keys and/or email addresses for other systems you plan to use.\n\n#### Settings for graph database backend\nRicgraph has a *[GraphDB]* section where you have to specify the graph database\nbackend that you will be using. First, you will need to set \nthe parameter *graphdb* to the graph database backend name (you can\nchoose between *neo4j* and *memgraph*). Further down that section, you will have\nto fill in six parameters for hostname, port number, username, etc. The comments\nin the initialization file explain how to do that.\n\n#### Extending Ricgraph with new properties in the nodes\nOptionally, you can extend Ricgraph by adding new\n[properties of nodes](ricgraph_details.md#Properties-of-nodes-in-Ricgraph).\nBefore you can do this, [download Ricgraph](#download-ricgraph).\n\n#### RICGRAPH_NODEADD_MODE\nThere is a parameter *RICGRAPH_NODEADD_MODE* in the initialization file \nwhich influences how nodes are added to Ricgraph. Suppose we harvest a source system\nand that results in the following table:\n\n| FULL_NAME | ORCID               |\n|-----------|---------------------|\n| Name-1    | 0000-0001-1111-1111 |\n| Name-2    | 0000-0001-1111-2222 |\n| Name-3    | 0000-0001-1111-2222 |\n| Name-4    | 0000-0001-1111-3333 |\n\n*Name-2* and *Name-3* have the same ORCID. This may be correct, e.g. if *Name-2* is a name variant\nof *Name-3*, e.g. *John Doe* vs *J. Doe*, but it also may not be correct, e.g. if \n*Name-2* is *John* and *Name-3* is *Peter* (possibly caused by a typing mistake in a\nsource system). There is no way for Ricgraph to know which of these two options it is.\n\nRICGRAPH_NODEADD_MODE can be either *strict* or *lenient*:\n* *strict* (default setting): only add nodes to Ricgraph which conform to the model\n  described in the [Implementation details](ricgraph_details.md). \n  In the example above, *ORCID* *0000-0001-1111-2222* will not be inserted.\n* *lenient*: add every node.\n  In the example above, *ORCID* *0000-0001-1111-2222* will be inserted.\n\nThis will have the following consequences: \n* *strict*: since *ORCID* *0000-0001-1111-2222* \n  will not be inserted, a research output from a person with\n  that *ORCID* may not be inserted in Ricgraph. Or the research output will be inserted,\n  but it might not be linked to the person with this *ORCID*.\n* *lenient*: as has been described [Implementation details](ricgraph_details.md), *person-root*\n  \"represents\" a person. Person identifiers (such as *ORCID*) \n  and research outputs are connected to the\n  *person-root* node of a person. \n  That means that the *person-root* node is connected to everything a person has contributed to. \n \n  In the example above, *ORCID* *0000-0001-1111-2222* \n  is inserted. That means that the *person-root*s of the two persons \n  *Name-2* or *Name-3* are \"merged\" and\n  that all research outputs of *Name-2* and *Name-3* will be connected to one *person-root* node.\n  After this has been done, there is no way to know which research output belongs to\n  *Name-2* or *Name-3*. \n \n  As said, that is fine if *Name-2* and *Name-3* are name variants,\n  but not fine if they are different names.\n  (Side note: if you want to capture spelling variants, you may want to use a fuzzy string match library\n  such as [TheFuzz](https://github.com/seatgeek/thefuzz).)\n\n*Lenient* is advisable if the sources you harvest from do not contain errors. However, the author\nof Ricgraph has noticed that this does not occur often, therefore the default is *strict*.\n\n### Using Ricgraph\nBefore you can do anything with Ricgraph, you need to harvest sources,\nsee [Ricgraph harvest scripts](ricgraph_harvest_scripts.md).\nAfter you have harvested sources, you can execute queries and visualize the results,\nsee [Query and visualize Ricgraph](ricgraph_query_visualize.md).\n\n\n### Dumping and restoring the Ricgraph database\nDepending on your situation (whether you use Neo4j Desktop or\nNeo4j Community Edition), this section lists the methods for\ndumping and restoring the Ricgraph database:\n* [Create a Neo4j Desktop database dump of Ricgraph](#create-a-neo4j-desktop-database-dump-of-ricgraph)\n* [Create a Neo4j Community Edition database dump of Ricgraph](#create-a-neo4j-community-edition-database-dump-of-ricgraph)\n* [Restore a Neo4j Desktop database dump of Ricgraph in Neo4j Desktop](#restore-a-neo4j-desktop-database-dump-of-ricgraph-in-neo4j-desktop)\n* [Restore a Neo4j Desktop database dump of Ricgraph in Neo4j Community Edition](#restore-a-neo4j-desktop-database-dump-of-ricgraph-in-neo4j-community-edition)\n* [Restore a Neo4j Community Edition database dump of Ricgraph in Neo4j Community Edition](#restore-a-neo4j-community-edition-database-dump-of-ricgraph-in-neo4j-community-edition)\n\n#### Create a Neo4j Desktop database dump of Ricgraph\nTo create a Neo4j Desktop database dump of Ricgraph, follow these steps:\n1. Start Neo4j Desktop if it is not running, or\n   stop the graph database if it is running.\n1. Hoover over the name of your graph database (probably \"Graph DBMS\"),\n   and click on the three horizontal dots at the right.\n1. Select \"Dump\".\n1. Your graph database will be dumped. This may take a while. When it\n   is ready, a message appears.\n1. Ready.\n\n#### Create a Neo4j Community Edition database dump of Ricgraph\nTo do this, you can either use the [Ricgraph Makefile](#ricgraph-makefile) and execute\ncommand `make dump_graphdb_neo4j_community`, or follow the steps below.\n\nTo create a Neo4j Community Edition database dump of Ricgraph, follow these steps:\n1. Login as user *root*.\n1. Stop Neo4j Community Edition:\n   ```\n   systemctl stop neo4j.service\n   ```\n1. To be able to restore a Neo4j database dump you need to set several permissions\n   on */etc/neo4j*:\n   ```\n   chmod 640 /etc/neo4j/*\n   chmod 750 /etc/neo4j\n   ```\n1. Do the database dump:\n   ```\n   neo4j-admin database dump --expand-commands system --to-path=[path to database dump directory]\n   neo4j-admin database dump --expand-commands neo4j --to-path=[path to database dump directory]\n   ```\n1. Start Neo4j Community Edition:\n   ```\n   systemctl start neo4j.service\n   ```\n1. Check the log for any errors, use one of:\n   ```\n   systemctl -l status neo4j.service\n   journalctl -u neo4j.service\n   ```\n1. Exit from user *root*.\n \n\n#### Restore a Neo4j Desktop database dump of Ricgraph in Neo4j Desktop\nTo restore a \n[Neo4j Desktop database dump of Ricgraph](#create-a-neo4j-desktop-database-dump-of-ricgraph) \nin Neo4j Desktop, follow these steps:\n1. Start Neo4j Desktop if it is not running, or \n   stop the graph database if it is running.\n1. Click on the button \"Add\" on the right side of \"Project\" and select \"File\".\n1. Select the file \"neo4j.dump\" from a previous Neo4j Desktop database dump.\n   This file will be added to the \"File\" section a little down the \"Project\" window.\n1. Hoover over this file and click on the three horizontal dots at the right.\n1. Select \"Create new DBMS from dump\".\n1. Give it a name, e.g. \"Graph DBMS from import file\".\n1. When asked, enter the password you have specified in \n   the [Ricgraph initialization file](#ricgraph-initialization-file)\n   (this saves you from entering a new password in that file).\n1. A new local graph database is being created. This may take a while.\n1. Hoover over the newly created graph database and click \"Start\" to run it.\n1. Once it is active, [install the Bloom configuration](#install-bloom-configuration).\n1. Now you are ready to explore the data \n   using [Bloom](ricgraph_query_visualize.md#how-to-use-bloom)\n   or [Ricgraph Explorer](ricgraph_explorer.md).\n\n#### Restore a Neo4j Desktop database dump of Ricgraph in Neo4j Community Edition\nTo restore a\n[Neo4j Desktop database dump of Ricgraph](#create-a-neo4j-desktop-database-dump-of-ricgraph)\nin Neo4j Community Edition, follow these steps:\n1. Login as user *root*.\n1. Stop Neo4j Community Edition:\n   ```\n   systemctl stop neo4j.service\n   ```\n1. To be able to restore a Neo4j database dump you need to set several permissions\n   on */etc/neo4j*:\n   ```\n   chmod 640 /etc/neo4j/*\n   chmod 750 /etc/neo4j\n   ```\n1. Save the old database:\n   ```\n   cd /var/lib/neo4j\n   mv data/ data-old\n   ```\n1. Go back to your working directory and restore the database dump:\n   ```\n   cd\n   neo4j-admin database load --expand-commands neo4j --from-path=[path to database dump directory] --overwrite-destination=true\n   ```\n   For *path to database dump directory*, specify the path, not the path and the name of the\n   database dump file (this name is *neo4j.dump*, it will be inferred automatically\n   by the *neo4j-admin* command).\n1. Set the correct permissions on */var/lib/neo4j/data*:\n   ```\n   cd /var/lib/neo4j\n   chown -R neo4j:neo4j data\n   ```\n1. Start Neo4j Community Edition:\n   ```\n   systemctl start neo4j.service\n   ```\n1. Check the log for any errors, use one of:\n   ```\n   systemctl -l status neo4j.service\n   journalctl -u neo4j.service\n   ```\n1. In your web browser, go to \n   [http://localhost:7474/browser](http://localhost:7474/browser).\n1. Neo4j will ask you to login, use username *neo4j* and password *neo4j*.\n1. Neo4j will ask you to change your password, \n   for the new password, enter the password you have specified in\n   the [Ricgraph initialization file](#ricgraph-initialization-file)\n   (this saves you from entering a new password in that file).\n1. Restart Ricgraph Explorer if you use \n   [Ricgraph in a multi-user environment](ricgraph_as_server.md):\n   ```\n   systemctl restart ricgraph_explorer_gunicorn.service\n   ```\n1. Check the log for any errors, use one of:\n   ```\n   systemctl -l status ricgraph_explorer_gunicorn.service\n   journalctl -u ricgraph_explorer_gunicorn.service\n   ```\n1. Done. If all works well you might want to remove your old database:\n   ```\n   cd /var/lib/neo4j\n   rm -r data-old\n   ```\n1. Exit from user *root*.\n\n\n#### Restore a Neo4j Community Edition database dump of Ricgraph in Neo4j Community Edition\nTo do this, you can either use the [Ricgraph Makefile](#ricgraph-makefile) and execute\ncommand `make restore_graphdb_neo4j_community`, or follow the steps below.\n\nTo restore a\n[Neo4j Community Edition database dump of Ricgraph](#create-a-neo4j-community-edition-database-dump-of-ricgraph)\nin Neo4j Community Edition, follow these steps:\n1. Login as user *root*.\n1. Stop Neo4j Community Edition:\n   ```\n   systemctl stop neo4j.service\n   ```\n1. To be able to restore a Neo4j database dump you need to set several permissions\n   on */etc/neo4j*:\n   ```\n   chmod 640 /etc/neo4j/*\n   chmod 750 /etc/neo4j\n   ```\n1. Save the old database:\n   ```\n   cd /var/lib\n   mv neo4j/ neo4j-old\n   mkdir /var/lib/neo4j\n   ```\n1. Go back to your working directory and restore the database dump:\n   ```\n   cd\n   neo4j-admin database load --expand-commands system --from-path=[path to database dump directory] --overwrite-destination=true\n   neo4j-admin database load --expand-commands neo4j --from-path=[path to database dump directory] --overwrite-destination=true\n   ```\n   For *path to database dump directory*, specify the path, not the path and the name of the\n   database dump file, it will be inferred automatically\n   by the *neo4j-admin* command.\n1. Set the correct permissions on */var/lib/neo4j/data*:\n   ```\n   cd /var/lib\n   chown -R neo4j:neo4j neo4j\n   ```\n1. Start Neo4j Community Edition:\n   ```\n   systemctl start neo4j.service\n   ```\n1. Check the log for any errors, use one of:\n   ```\n   systemctl -l status neo4j.service\n   journalctl -u neo4j.service\n   ```\n1. Restart Ricgraph Explorer if you use\n   [Ricgraph in a multi-user environment](ricgraph_as_server.md):\n   ```\n   systemctl restart ricgraph_explorer_gunicorn.service\n   ```\n1. Check the log for any errors, use one of:\n   ```\n   systemctl -l status ricgraph_explorer_gunicorn.service\n   journalctl -u ricgraph_explorer_gunicorn.service\n   ```\n1. Done. If all works well you might want to remove your old database:\n   ```\n   cd /var/lib\n   rm -r neo4j-old\n   ```\n1. Exit from user *root*.\n\n\n### Ricgraph on Windows\nIf you would like to install Ricgraph on Windows, you are very probably the first\nperson to do so, as far as known. The creator of Ricgraph has no experience\nin developing software on Windows. So please let me know which steps you have\ntaken, so I can add them to this documentation. If you are a Windows user,\nI would recommend to create a Linux virtual machine using e.g.\n[VirtualBox](https://www.virtualbox.org), and install Ricgraph in that \nvirtual machine as described above.\n\n\n### Return to main README.md file\n\n[Return to main README.md file](../README.md). \n\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/docs/ricgraph_install_configure.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Steps to take if you would like to install Ricgraph and harvest data",
        "parent_header": [
          "Ricgraph - Research in context graph",
          "Next steps"
        ],
        "type": "Text_excerpt",
        "value": "* [Install and configure Ricgraph](docs/ricgraph_install_configure.md).\n* Start harvesting data, see [Ricgraph harvest scripts](docs/ricgraph_harvest_scripts.md),\n  e.g. by doing a harvest for Utrecht University data sets and\n  software. \n  You will observe that the information from two sources is neatly combined into one graph.\n* Unfortunately, there is a bug, see [known bugs](docs/ricgraph_known_bugs.md).\n  This bug may occur\n  if you start a harvest script, and as first step in the script you want to empty Ricgraph.\n  In that case, a Python error might occur while emptying Ricgraph. Follow the link\n  to read more and find out how to repair that.\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.999999246038243,
      "result": {
        "original_header": "Ricgraph website",
        "type": "Text_excerpt",
        "value": "Ricgraph has a main Ricgraph website on www.ricgraph.eu. \nAlternative sites are www.ricgraph.nl and www.ricgraph.com.\nThe sources for this website are on GitHub in repository\nhttps://github.com/UtrechtUniversity/ricgraph-website.\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "data-enrichment, data-harvesting, enrichment, graph, graph-database, harvest, harvest-data, harvester, knowledge-graph, linked-data, metadata, research-in-context-graph, ricgraph, ricgraph-explorer, ricgraph-rest-api, utrecht-university, visualization"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 Rik D.T. Janssen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/docs/images/ricgraph_logo.jpg"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ricgraph"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "UtrechtUniversity"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 561962,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 35528,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 17248,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 15881,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2024-09-10T12:00:59Z",
        "date_published": "2024-09-10T12:14:28Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nStructural changes:\r\n- Ricgraph now has a [Makefile](https://github.com/UtrechtUniversity/ricgraph/blob/main/docs/ricgraph_install_configure.md#ricgraph-makefile). A Ricgraph installation involves a number of steps. This Makefile makes installation of (parts of) Ricgraph easier, since it automates a number of these steps. \r\n- Now, you can also use the Nginx webserver for Ricgraph. It was already possible to use the Apache webserver.\r\n\r\nDocumentation:\r\n- Added Ricgraph presentations: among other things, a general Ricgraph presentation and a presentation about Enriching Pure data (both with DOIs).\r\n- Added Ricgraph newsletters.\r\n- Various clarifications.\r\n\r\nUpgrading:\r\n- If you upgrade from Ricgraph v2.3, you do not need to re-install or reharvest.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v2.4",
        "name": "2.4 - Ricgraph",
        "release_id": 174320492,
        "tag": "v2.4",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/174320492",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/174320492",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2024-06-10T07:46:49Z",
        "date_published": "2024-06-10T07:59:51Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nStructural changes:\r\n- Ricgraph now has a REST API. You can use the Ricgraph REST API to get data from Ricgraph, or to execute predefined queries in Ricgraph and Ricgraph Explorer. The advantage of a REST API is that your code is not dependent on any Ricgraph code. Ricgraph Explorer has a button that shows the documentation and allow you to try out REST API calls. [Read more about this REST API](https://github.com/UtrechtUniversity/ricgraph/blob/main/docs/ricgraph_restapi.md).\r\n- Ricgraph now uses a different type of index if you use Neo4j as graph database backend. This results in a much faster harvesting process and much faster queries.\r\n- Ricgraph has a main Ricgraph website on www.ricgraph.eu. Alternative sites are www.ricgraph.nl and www.ricgraph.com. The code and the final published website are in a separate GitHub repository [Website for Ricgraph - Research in context graph](https://github.com/UtrechtUniversity/ricgraph-website).\r\n- Ricgraph uses a new WSGI/ASGI webserver gunicorn. This is required for the REST API.\r\n\r\nRicgraph Explorer:\r\n- Some pages now show histograms, e.g. of the types of research results to which a person has contributed, or the skills in a (sub-)organization.\r\n- It is possible to adjust the maximum number of results from a query, and the maximum number of rows in a table.\r\n\r\nRicgraph:\r\n- Changes to use the Neo4j elementId() function call instead of deprecated id() in neo4j. However, for memgraph, elementId() does not exist and id() should be used.\r\n\r\nHarvest scripts:\r\n- The harvest scripts for Pure and OpenAlex now harvest (as default) the years 2021 - 2024, this used to be 2020 - 2023.\r\n- OpenAlex has defined new research result types. These have been added to the harvest script for OpenAlex.\r\n\r\nDocumentation:\r\n- Documentation for the REST API, including installation instructions.\r\n- Various clarifications.\r\n\r\nUpgrading:\r\n- If you upgrade from any Ricgraph version, you will need to [re-install Ricgraph](https://github.com/UtrechtUniversity/ricgraph/blob/main/docs/ricgraph_install_configure.md), re-use your previous Ricgraph initialization file, and reharvest your sources. This is due to the many changes. It is advisable to remove all of your existing files and directories, except for ricgraph.ini, before you re-install Ricgraph.\r\n- If you don't use at least Python 3.9, you will need to upgrade to at least this Python version.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v2.3",
        "name": "2.3 - Ricgraph",
        "release_id": 159615704,
        "tag": "v2.3",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/159615704",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/159615704",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2024-05-01T06:19:57Z",
        "date_published": "2024-05-01T06:27:14Z",
        "description": "This release is the same as [Ricgraph v2.1](https://github.com/UtrechtUniversity/ricgraph/releases/tag/v2.1), except for these minor changes:\r\n- Some mentions have been added.\r\n- CITATION.cff is now correctly formatted (as was not the case in v2.1, which confused some metadata harvesters).\r\n\r\nPlease read the [Release notes of Ricgraph v2.1](https://github.com/UtrechtUniversity/ricgraph/releases/tag/v2.1) to read what you have to do when upgrading Ricgraph.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v2.2",
        "name": "2.2 - Ricgraph",
        "release_id": 153628501,
        "tag": "v2.2",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/153628501",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/153628501",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2024-04-24T07:04:50Z",
        "date_published": "2024-04-24T07:24:26Z",
        "description": "A journal article has been published about Ricgraph. Please read it to get a gentle introduction in Ricgraph. Rik D.T. Janssen (2024). Ricgraph: A flexible and extensible graph to explore research in context from various systems. *SoftwareX*, 26(101736). https://doi.org/10.1016/j.softx.2024.101736.\r\n\r\nThe following improvements have been made to Ricgraph.\r\n\r\nStructural change:\r\n- As an alternative to Neo4j, you can also use [Memgraph](https://memgraph.com/). Memgraph is an in memory graph database. You can use Memgraph by modifying some settings in the [Ricgraph initialization file](https://github.com/UtrechtUniversity/ricgraph/blob/main/docs/ricgraph_install_configure.md#ricgraph-initialization-file). Memgraph with Ricgraph has not been tested extensively, but first tests seem to indicate that Memgraph is much faster than Neo4j, especially for harvesting.\r\n\r\nRicgraph Explorer:\r\n- Improved the speed of finding persons that share research result types with a certain person.\r\n\r\nRicgraph:\r\n- Added a function to get datestamps and timestamps to monitor clock time progress. \r\n- Added counters for the number of accesses to the graph database backend.\r\n\r\nHarvest scripts:\r\n- Every harvest script now prints datestamps and timestamps to monitor clock time progress. They also have counters for the number of accesses to the graph database backend. Both can be used to get an idea about the performance of the graph database backend.\r\n\r\nDocumentation:\r\n- Added documentation how to use Memgraph.\r\n\r\nUpgrading:\r\n- If you upgrade from Ricgraph v2.0, you do not need to re-install or reharvest.\r\n- If you upgrade from any Ricgraph version earlier than v2.0, you will need to [re-install Ricgraph](https://github.com/UtrechtUniversity/ricgraph/blob/main/docs/ricgraph_install_configure.md), re-create your [Ricgraph initialization file](https://github.com/UtrechtUniversity/ricgraph/blob/main/docs/ricgraph_install_configure.md#ricgraph-initialization-file), and reharvest your sources. This is due to the many changes.\r\n",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v2.1",
        "name": "2.1 - Ricgraph",
        "release_id": 152547063,
        "tag": "v2.1",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/152547063",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/152547063",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2024-04-10T08:00:50Z",
        "date_published": "2024-04-10T08:21:34Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nStructural change:\r\n- Previously, Ricgraph used the Python module _py2neo_ to connect with the graph database backend Neo4j. This module is end-of-life. Now, Ricgraph uses the Python module _neo4j_. This required many changes, including explicit Cypher calls in the code. This results in a faster Ricgraph, and it may be possible to use other graph database backends that use the same Python module (such as Memgraph or Avantgraph).\r\n\r\nRicgraph Explorer:\r\n- Added a function that finds with which (sub-)organizations a person collaborates.\r\n- Modifications to make Ricgraph Explorer run in a multi-user environment. This includes an Apache config file, and changes so that Ricgraph Explorer can be run as a Linux service, or using WSGI.\r\n\r\nRicgraph:\r\n- Cleanup and optimization of code.\r\n- Added a script to count the number of organizations that contributed to a category, so that you will be able to see which (sub-)organizations collaborate.\r\n- Modifications to make Ricgraph run in a multi-user environment.\r\n- A call to get_personroot_node() or get_all_personroot_nodes() now returns person-root nodes of any type of node.\r\n- Previously, if a new node had a FULL_NAME that was already in Ricgraph, the new node was joined with the node already present. It appears that in case you harvest multiple source systems, this may not be a good idea: a person named _J. Doe_ from source system 1 may be someone else than person _J. Doe_ from source system 2. Thus, this is not done any more, unless you set RICGRAPH_NODEADD_MODE to something else than 'strict'.\r\n- Modified initialization file by renaming a section, and adding and renaming graph database backend parameters.\r\n- Removed function get_edges().\r\n\r\nHarvest scripts:\r\n- Added _University Medical Center Utrecht_ to the list of nodes to rename in the batch harvest script _batch_harvest.py_.\r\n\r\nDocumentation:\r\n- Added the reference publication: Rik D.T. Janssen, Ricgraph: A Flexible and Extensible Graph to Explore Research in Context from Various Systems. January 2024. Submitted to SoftwareX. https://doi.org/10.2139/ssrn.4712466.\r\n- Added use cases as in the reference publication.\r\n- Added [documentation for Ricgraph Explorer](https://github.com/UtrechtUniversity/ricgraph/blob/main/docs/ricgraph_explorer.md).\r\n- Added documentation how to run Ricgraph and Ricgraph Explorer in a multi-user environment. Please read [Ricgraph as a server on Linux](https://github.com/UtrechtUniversity/ricgraph/blob/main/docs/ricgraph_as_server.md).\r\n- Added a Ricgraph presentation and a table where Ricgraph has been used.\r\n- Added an explation how to dump data in Neo4j Desktop and use it in Neo4j Community Edition.\r\n- Reorganized the documentation structure.\r\n- Updated badges in README.md file.\r\n- And many other improvements and clarifications to the documentation.\r\n\r\nGitHub:\r\n- The default branch name of Ricgraph in GitHub has been renamed from _master_ to _main_.\r\n\r\nUpgrading:\r\n- If you upgrade from any Ricgraph version, you will need to [re-install Ricgraph](https://github.com/UtrechtUniversity/ricgraph/blob/main/docs/ricgraph_install_configure.md), re-create your [Ricgraph initialization file](https://github.com/UtrechtUniversity/ricgraph/blob/main/docs/ricgraph_install_configure.md#ricgraph-initialization-file), and reharvest your sources. This is due to the many changes.\r\n",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v2.0",
        "name": "2.0 - Ricgraph",
        "release_id": 150529905,
        "tag": "v2.0",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/150529905",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/150529905",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2024-01-25T13:05:17Z",
        "date_published": "2024-01-25T13:20:21Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nRicgraph Explorer:\r\n- The option to get more information about persons or their results in an organization is much faster.\r\n- The option to find persons that share research output types with another person is faster.\r\n- Removed the option to find overlap in source systems for an organization.\r\n- Added a transparant favicon.\r\n\r\nIf you upgrade from Ricgraph v1.13, you do not need to reharvest your sources. If you upgrade from Ricgraph v1.11 or earlier, you do need to reharvest your sources.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.14",
        "name": "1.14 - Ricgraph",
        "release_id": 138512968,
        "tag": "v1.14",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.14",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/138512968",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/138512968",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.14"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2024-01-04T13:38:43Z",
        "date_published": "2024-01-04T13:51:15Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nRicgraph Explorer:\r\n- Full rewrite of the code, to make the structure easier to understand and the code easier to extend.\r\n- User experience improvements, such as a new flow through the application, buttons with predefined search queries, and dropdown lists for various input fields.\r\n- Added a cache for nodes.\r\n- Statistics such as the names of the harvested systems, number of nodes and edges, and use of the node cache.\r\n- Speed improvements.\r\n\r\nRicgraph:\r\n- Minor changes related to the rewrite of Ricgraph Explorer.\r\n\r\nIf you upgrade from Ricgraph v1.12, you do not need to reharvest your sources. If you upgrade from Ricgraph v1.11 or earlier, you do need to reharvest your sources.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.13",
        "name": "1.13 - Ricgraph",
        "release_id": 135827447,
        "tag": "v1.13",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.13",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/135827447",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/135827447",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.13"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-12-19T09:27:50Z",
        "date_published": "2023-12-19T09:52:39Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nRicgraph Explorer:\r\n- User experience improvements.\r\n- Speed improvements\r\n\r\nRicgraph:\r\n- The _FULL_NAME_ of nodes is cached in the _comment_ field of its _person-root_ node.\r\n- Limit the number of organization nodes to return in filterorganization() for improvement of speed.\r\n- Changed the object identifier of nodes from _RCGNode_ to _RicgraphNode_.\r\n\r\nHarvest scripts:\r\n- In case a person is part of multiple (child) organizations (such as university, faculty, department, unit), this person will be connected to all of these (child) organizations.\r\n- Pure harvesting: more author names will be added to Ricgraph: the _not active_ persons, the _external persons_ and the _author collaborations_. \r\n- Pure harvesting: projects without identifiers will be harvested.\r\n- Pure harvesting: projects are connected to all of their parent organizations.\r\n\r\nDocumentation:\r\n- Added Ricgraph abstract, presentation and video at Pure International Conference 2023 in Dubrovik, Croatia.\r\n- Added several badges in _README.md_.\r\n- Added metadata for the [Clariah tools website](https://tools.clariah.nl), and for other sites that obtain their metadata from the Clariah tools website.\r\n\r\nIf you upgrade from Ricgraph v1.11 or earlier, you need to reharvest your sources.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.12",
        "name": "1.12 - Ricgraph",
        "release_id": 134441585,
        "tag": "v1.12",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.12",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/134441585",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/134441585",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-11-08T15:26:31Z",
        "date_published": "2023-11-08T15:49:34Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nRicgraph explorer:\r\n- Now you can find information about persons or their results in a (child) organization (unit, department, faculty, university). For example, you can find out what data sets or software are produced in your faculty. Or the skills of all persons in your department. Of course this is only possible in case you have harvested them. \r\n- Also, you can find out with whom a person shares research output types. For example, you can find out with whom someone shares software or data sets.\r\n- You can get tables showing how you can enrich a source system based on other systems you have harvested. For example, suppose you have harvested both Pure and OpenAlex, using this feature you can find out which publications in OpenAlex are _not_ in Pure. You might want to add those to Pure.\r\n- The search page has been restructured and improved.\r\n- All pages use the URL parameter/value mechanism (i.e. similar to hostname/webpage/?parameter1=value1&parameter2=value2).\r\n\r\nRicgraph:\r\n- The functions get_all_neighbor_nodes() and get_all_neighbor_nodes_person() now have an optional parameter limiting the number of neighbor nodes to return. This is used for a speedup of Ricgraph explorer.\r\n\r\nIf you upgrade from Ricgraph v1.10, you do not need to reharvest your sources.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.11",
        "name": "1.11 - Ricgraph",
        "release_id": 128557404,
        "tag": "v1.11",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.11",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/128557404",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/128557404",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-10-27T07:17:53Z",
        "date_published": "2023-10-27T08:15:40Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nRicgraph explorer:\r\n- If you have harvested from more than one source, it may be possible that a record which you've harvested from _system 2_ (say, _ORCID 1234_ for Alice), may already be in Ricgraph because it was also present in _system 1_. This is perfectly fine behaviour. This _ORCID_ record will not be inserted twice, because it is already present. The only modification will be that _system 2_ is added to the __source_ list of the _ORCID_ record of Alice. In this new release, Ricgraph explorer has an option to create a table that shows the overlap in harvests from different source systems. You do a query in Ricgraph (e.g. show all _ORCID_ nodes), and then you choose to show a table that summarizes the number of _ORCID_ nodes which were only found in one source, and which were found in multiple sources. Another table gives a detailed overview how many nodes originate from which different source systems. Then, you can drill down by clicking on a number in one of these two tables to find the nodes corresponding to that number. In the example _ORCID_ node of Alice, the first table will tell you that there is 1 node found in multiple sources, and the second table will tell you that this node originated from _system 1_ and _system 2_ by showing a \"1\" in row and column representing these systems. Another use of this table is that you e.g. find Alices node, and then the tables will show which of the nodes connected to Alice (e.g. her journal articles or software packages) are unique to only one source system, and which nodes originate from multiple sources.\r\n\r\nRicgraph:\r\n- Now there are global research output type names defined in _ricgraph.py_, such als _journal article_ or _software_. Each harvest script has a mapping table that translates the name used in that source (e.g. _article_) to the name which is used in Ricgraph (_journal article_). The advantage of this is that there is one place where all research output type names are defined, and that there is only one way how they show up in Ricgraph.\r\n\r\nHarvest scripts:\r\n- Modifications for the mapping table for research output type names.\r\n- For organizations, now their names are used for the _value_ field, so you can search for an organization name. Previously, Ricgraph used identifiers, such as local Pure UUIDs or RORs. Although the latter might be preferred, I changed this because there do not seem to be generally used organization identifiers yet for sub organizations (for e.g. faculties or departments of a university).\r\n- Pure harvesting: suppose Alice works for University X, Faculty Y, and Department Z. Previously this hierarchy was represented in Ricgraph. Now, each of the (sub) organizations a person works for, are directly connected to the _person-root_ node of this person. In the example with Alice, the node for University X is connected to the _person-root_ node of Alice, as are the nodes for Faculty Y and Department Z. This has the advantage that you are able to select e.g. University X, and find the persons working for this university, or that you can select e.g. Faculty Y, and find the persons involved with that faculty, etc.\r\n- Pure harvesting: if a person works for multiple (sub) organizations, this person will be connected to all of these (sub) organizations. Previously a person was only connected to one (sub) organization.\r\n- The batch harvesting script _batch_harvest.py_ now has some error checking. Also, you can have this script modify your graph specific for your organization. For example, for Utrecht University, in the Pure harvest we find organization name _University: Universiteit Utrecht_, while this same organization is called _Utrecht University_ in OpenAlex. In the batch script we change the name from the former to the latter, so that records harvested from OpenAlex will be mapped to the same organization as records harvested from Pure. This ensures a more concise graph.\r\n\r\n",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.10",
        "name": "1.10 - Ricgraph",
        "release_id": 126904239,
        "tag": "v1.10",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.10",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/126904239",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/126904239",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-10-13T13:47:29Z",
        "date_published": "2023-10-13T14:01:42Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nHarvest to Ricgraph:\r\n- Harvesting of OpenAlex has been modified because OpenAlex changed some of their \"type\"s of their Works. E.g. there used to be a type \"journal-article\" but this has been renamed to \"article\".\r\n- Harvesting of photos of the Utrecht University staff pages has been made more robust.\r\n\r\nRicgraph explorer:\r\n- Modifications to implement the more robust way of harvesting photos from the Utrecht University staff pages.\r\n\r\nIf you use this release to update your version of Ricgraph, you will need to reharvest your sources. That means that you will need to empty Ricgraph. Sometimes, Python throws an error. If so, please go to [error while empying Ricgraph](https://github.com/UtrechtUniversity/ricgraph/blob/main/docs/ricgraph_known_bugs.md#error-while-emptying-ricgraph) how to repair that.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.9",
        "name": "1.9 - Ricgraph",
        "release_id": 124990536,
        "tag": "v1.9",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.9",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/124990536",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/124990536",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-10-10T10:27:55Z",
        "date_published": "2023-10-10T10:43:25Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nRicgraph explorer:\r\n- There are two methods for exploring Ricgraph:  (1) find your first node by using exact match, or (2) find your first node by using search on a field value.\r\n- There are two methods for viewing the results: (1) a _person_view_: only show relevant columns, research outputs will be presented in a tabbed format, or (2) a _details_view_: show all columns, research outputs will be presented in a table with facets.\r\n\r\nRicgraph:\r\n- Several modifications to implement the changes in Ricgraph explorer.\r\n\r\nDocumentation:\r\n- The images of the graphs have been modified. Now they show what type of object a node it is (by having a special icon  for article, data set, etc.) and from which system it was harvested (by having a specific color).\r\n",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.8",
        "name": "1.8 - Ricgraph",
        "release_id": 124401482,
        "tag": "v1.8",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/124401482",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/124401482",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-05-18T18:09:04Z",
        "date_published": "2023-05-18T18:21:08Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nRicgraph, Pure harvesting script:\r\n- The Pure harvesting script can now harvest projects from Pure, if your Pure uses them. Use the parameter \"--harvest_projects\". Read more about [Pure harvesting and the use of this parameter](https://github.com/UtrechtUniversity/ricgraph/blob/master/docs/ricgraph_harvest_scripts.md#harvest-of-pure). \r\n- Pure has two APIs, a READ and a CRUD API. Previously, you could only use the READ API. Now you can use both. Read more about [their advantages and their disadvantages](https://github.com/UtrechtUniversity/ricgraph/blob/master/docs/ricgraph_harvest_scripts.md#pure-read-and-pure-crud-api). The author would recommend to use the Pure READ API.\r\n\r\nDocumentation:\r\n- Added \"mentions\", those are places where Ricgraph is mentioned, as well as presentations about Ricgraph. Read more about these [mentions](https://github.com/UtrechtUniversity/ricgraph/blob/master/docs/ricgraph_mentions.md).",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.7",
        "name": "1.7 - Ricgraph",
        "release_id": 103498226,
        "tag": "v1.7",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/103498226",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/103498226",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-04-18T12:25:02Z",
        "date_published": "2023-04-18T12:40:21Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nRicgraph:\r\n- Added a parameter \"--organization\" to some harvest scripts, so that they can be used for harvesting data from different organizations.\r\n- Added a parameter \"--empty_ricgraph\" to the harvest scripts, to indicate whether Ricgraph should be emptied or not.\r\n- Modified the initialization file ricgraph.ini-sample. You will need to copy this file to ricgraph.ini and fill in your own (organization) values. Some keys have an \"organization abbreviation\", which can be passed to the parameter \"--organization\" of a harvest script, or which can be filled in when running a script.\r\n- Added a batch script to to run a number of harvest scripts after each other. \r\n\r\nDocumentation:\r\n- Added a comparison of Ricgraph to other systems, such as Lens, OpenAire Graph and OpenAlex.\r\n- Modified documentation to explain how to harvest data from different organizations.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.6",
        "name": "1.6 - Ricgraph",
        "release_id": 99905649,
        "tag": "v1.6",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/99905649",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/99905649",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-04-04T10:38:42Z",
        "date_published": "2023-04-04T10:47:47Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nRicgraph:\r\n- Modified the initialization file _ricgraph.ini-sample_ (to be copied to _ricgraph.ini_). Now it has parameters that contain the node properties. You will need to update your _ricgraph.ini_ file with these parameters.\r\n- Added scripts to export _person_ nodes to a csv file. These can be found in directory _export_ricgraph_examples_.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.5",
        "name": "1.5 - Ricgraph",
        "release_id": 98019364,
        "tag": "v1.5",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/98019364",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/98019364",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-03-29T08:37:47Z",
        "date_published": "2023-03-29T08:45:11Z",
        "description": "The following improvements have been made to Ricgraph.\r\n\r\nRicgraph:\r\n- Ricgraph now has new fields in a node: a field for a year and a field that holds the name(s) of the source(s) a node has been harvested from.\r\n- Videos have been added to illustrate the workings of Ricgraph and Ricgraph explorer.\r\n- The documentation has been updated.\r\n\r\nHarvesting:\r\n- Each harvest script has been modified to be able to use the new fields for year and harvesting source.\r\n",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.4",
        "name": "1.4 - Ricgraph",
        "release_id": 97285658,
        "tag": "v1.4",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/97285658",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/97285658",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-03-10T17:09:14Z",
        "date_published": "2023-03-10T17:19:20Z",
        "description": "The following improvements have been made to Ricgraph:\r\n\r\nRicgraph:\r\n- Rewrite of the function to connect two nodes.\r\n- Added function to merge two 'person-root' nodes (needs some improvement).\r\n- Added parameter RICGRAPH_NODEADD_MODE which controls how nodes are added to Ricgraph (see documentation in file docs/ricgraph_install_configure.md).\r\n- Improved documentation.\r\n- Added a Ricgraph logo.\r\n\r\nHarvesting: \r\n- Added a harvester for [Utrecht University staff pages](https://www.uu.nl/medewerkers).\r\n- Added a harvester for [OpenAlex](https://openalex.org).\r\n- Improved harvesters for Pure, Yoda-DataCite and Research Software Directory.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.3",
        "name": "1.3 - Ricgraph",
        "release_id": 95235036,
        "tag": "v1.3",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/95235036",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/95235036",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-02-15T18:28:04Z",
        "date_published": "2023-02-15T18:39:50Z",
        "description": "The following improvements have been made: \r\n- Added faceted navigation to Ricgraph explorer.\r\n- Improved user interface for Ricgraph explorer.\r\n- Added a cache in function read_node() in ricgraph.py so nodes read from the graph database are stored in that cache. That will prevent a number of search operations in the graph database, making ricgraph faster.\r\n- Improved efficiency (more speed, less memory) of Pure harvester.\r\n\r\n",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.1",
        "name": "1.1 - Ricgraph",
        "release_id": 92594857,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/92594857",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/92594857",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-02-01T13:39:22Z",
        "date_published": "2023-02-01T13:43:11Z",
        "description": "A number of improvements. The following features have been added:\r\n\r\n- Ricgraph has been extended with functions to get neighbors of nodes;\r\n- Ricgraph explorer has been extended to allow search on substrings and sorting by clicking on a table header.\r\n",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v1.0",
        "name": "1.0 - Ricgraph",
        "release_id": 90983397,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/90983397",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/90983397",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-01-24T12:03:31Z",
        "date_published": "2023-01-24T12:06:38Z",
        "description": "Ricgraph explorer is a web based explorer for Ricgraph. You can use it to search for nodes based on the node properties *name*, *category* and/or *value*. Ricgraph explorer will present a simple form where you can enter one or more of these values. As result, all objects related to your search value(s) will be returned in the form of a table. Also, if you have searched for a *person*, all of its identifiers will be returned. You can go to other nodes by clicking on a value in the *value* column. By doing this, you are traversing the graph.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v0.9",
        "name": "0.9 - Ricgraph with Ricgraph explorer added",
        "release_id": 90032085,
        "tag": "v0.9",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/90032085",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/90032085",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v0.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RikDTJanssen",
          "type": "User"
        },
        "date_created": "2023-01-11T08:00:59Z",
        "date_published": "2023-01-11T08:30:06Z",
        "description": "First release of Ricgraph - Research in context graph. For documentation see README.md.",
        "html_url": "https://github.com/UtrechtUniversity/ricgraph/releases/tag/v0.8",
        "name": "0.8 - First release",
        "release_id": 88546055,
        "tag": "v0.8",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/tarball/v0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/88546055",
        "value": "https://api.github.com/repos/UtrechtUniversity/ricgraph/releases/88546055",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/ricgraph/zipball/v0.8"
      },
      "technique": "GitHub_API"
    }
  ],
  "repository_status": [
    {
      "confidence": 1,
      "result": {
        "description": "Active \u2013 The project has reached a stable, usable state and is being actively developed.",
        "type": "Url",
        "value": "https://www.repostatus.org/#active"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:22:49",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use Ricgraph (very short)",
        "parent_header": [
          "Ricgraph - Research in context graph",
          "What is Ricgraph?"
        ],
        "type": "Text_excerpt",
        "value": "* [Install and configure Ricgraph](docs/ricgraph_install_configure.md).\n* Start harvesting data, see [Ricgraph harvest scripts](docs/ricgraph_harvest_scripts.md).\n* Use [Ricgraph Explorer](docs/ricgraph_explorer.md),\n  the exploration tool for Ricgraph. \n* Use the [Ricgraph REST API](docs/ricgraph_restapi.md),\n  the REST API for Ricgraph.\n* Optional: modify code to fit Ricgraph to your specific use case.\n\nFor more details, read the remainder of this documentation.\n  "
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "Ricgraph - Research in context graph"
        ],
        "type": "Text_excerpt",
        "value": "See the figures below for example graphs that show how Ricgraph works.\nClick a figure to enlarge.\n\n| one person with several research outputs                                  | symbols for type of object                       | colors for source system                                 |\n|---------------------------------------------------------------------------|--------------------------------------------------|----------------------------------------------------------|\n| <img src=\"docs/images/one-person-with-research-outputs.jpg\" height=\"170\"> | <img src=\"docs/images/symbols.jpg\" height=\"170\"> | <img src=\"docs/images/colors-vertical.jpg\" height=\"170\"> |\n\n\nThis figure shows one person *A* using a\n[*person-root* node, a node which \"represents\" a person](docs/ricgraph_details.md#person-root-node-in-ricgraph)\nas it is called\nin Ricgraph.\nThis person has contributed to three articles, two data sets and one software package.\nTwo articles and one data set are from\nthe [Research Information System Pure](https://www.elsevier.com/solutions/pure)\n(their color is green),\none data set is from\nthe data repository [Yoda](https://www.uu.nl/en/research/yoda)\n(in orange), \none article is from [OpenAlex](https://openalex.org) (in purple),\nand\nthe software package is from the\n[Research Software Directory](https://research-software-directory.org) (in blue).\n\n\n| several persons with several research outputs                                  | one person with several identifiers and research outputs         |\n|--------------------------------------------------------------------------------|------------------------------------------------------------------|\n| <img src=\"docs/images/several-persons-with-research-outputs.jpg\" height=\"200\"> | <img src=\"docs/images/identifiers-and-outputs.jpg\" height=\"200\"> |\n\nThe left part of this figure shows several persons having several research outputs\n(the symbols) and\nhow these are related (i.e. which person contributed to which research output).\nIt also shows from which source system these research outputs have originated\n(using different colors).\nThe right part shows one person having several identifiers and several research outputs.\nThis person has two different ORCIDs, one ISNI, one SCOPUS_AUTHOR_ID, and two FULL_NAMEs (which differ\nin spelling). These identifiers have also been obtained from different source systems, as their color indicates.\n\nMore examples can be found in [Ricgraph details](docs/ricgraph_details.md).\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Steps to take if you would like to use Ricgraph",
        "parent_header": [
          "Ricgraph - Research in context graph",
          "Next steps"
        ],
        "type": "Text_excerpt",
        "value": "* First, install Ricgraph (see above).\n* Use [Ricgraph Explorer](docs/ricgraph_explorer.md),\n  the exploration tool for Ricgraph. \n* Use the [Ricgraph REST API](docs/ricgraph_restapi.md),\n  the REST API for Ricgraph.\n* Alternatively, you might want to read\n  [Query and visualize Ricgraph](docs/ricgraph_query_visualize.md).\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/ricgraph/main/README.md",
      "technique": "header_analysis"
    }
  ]
}