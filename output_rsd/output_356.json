{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# YAML 1.2\n---\ncff-version: \"1.1.0\"\ntitle: \"NPLinker\"\nauthors:\n  -\n    given-names: Cunliang\n    family-names: Geng\n    affiliation: \"Netherlands eScience Center\"\n    orcid: \"https://orcid.org/0000-0002-1409-8358\"\n  -\n    given-names: Giulia\n    family-names: Crocioni\n    affiliation: \"Netherlands eScience Center\"\n  -\n    given-names:  Simon\n    family-names:  Rogers\n  -\n    given-names:  Andrew\n    family-names:  Ramsay\n  -\n    given-names:  Katherine\n    family-names:  Duncan\n  -\n    given-names:  Justin\n    family-names:  van\n  -\n    given-names:  Gr\u00edmur\n    family-names:  Hj\u00f6rleifsson\n  -\n    given-names:  Sylvia\n    family-names:  Soldatou\n  -\n    given-names:  Florian\n    family-names:  Huber\n  -\n    given-names:  Joe\n    family-names:  Wandy\n  -\n    given-names:  Ronan\n    family-names:  Daly\n  -\n    given-names:  Joris\n    family-names:  Louwen\n  -\n    given-names:  Marnix\n    family-names:  Medema\nversion: \"2.0.0-alpha.6\"\nrepository-code: \"https://github.com/NPLinker/nplinker\"\nkeywords:\n  - Genome\n  - Metabolome\n  - Natural Products\n  - Data Mining\nmessage: \"If you use this software, please cite it using these metadata.\"\nlicense: Apache-2.0\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at c.geng@esciencecenter.nl. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org), version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NPLinker/nplinker"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing guidelines\n\nWe welcome any kind of contribution to our software, from simple comment or question to a full fledged [pull request](https://help.github.com/articles/about-pull-requests/). Please read and follow our [Code of Conduct](CODE_OF_CONDUCT.md).\n\nA contribution can be one of the following cases:\n\n1. you have a question;\n1. you think you may have found a bug (including unexpected behavior);\n1. you want to make some kind of change to the code base (e.g. to fix a bug, to add a new feature, to update documentation);\n1. you want to make a new release of the code base.\n\nThe sections below outline the steps in each case.\n\n## You have a question\n\n1. use the search functionality [here](https://github.com/NPLinker/nplinker/issues) to see if someone already filed the same issue;\n2. if your issue search did not yield any relevant results, make a new issue;\n3. apply the \"Question\" label; apply other labels when relevant.\n\n## You think you may have found a bug\n\n1. use the search functionality [here](https://github.com/NPLinker/nplinker/issues) to see if someone already filed the same issue;\n1. if your issue search did not yield any relevant results, make a new issue, making sure to provide enough information to the rest of the community to understand the cause and context of the problem. Depending on the issue, you may want to include:\n    - the [SHA hashcode](https://help.github.com/articles/autolinked-references-and-urls/#commit-shas) of the commit that is causing your problem;\n    - some identifying information (name and version number) for dependencies you're using;\n    - information about the operating system;\n1. apply relevant labels to the newly created issue.\n\n## You want to make some kind of change to the code base\n\n1. (**important**) announce your plan to the rest of the community *before you start working*. This announcement should be in the form of a (new) issue;\n1. (**important**) wait until some kind of consensus is reached about your idea being a good idea;\n1. if needed, fork the repository to your own Github profile and create your own feature branch off of the latest master commit. While working on your feature branch, make sure to stay up to date with the master branch by pulling in changes, possibly from the 'upstream' repository (follow the instructions [here](https://help.github.com/articles/configuring-a-remote-for-a-fork/) and [here](https://help.github.com/articles/syncing-a-fork/));\n1. make sure the existing tests still work by running ``pytest``;\n1. add your own tests (if necessary);\n1. update or expand the documentation;\n1. update the `CHANGELOG.md` file with change;\n1. push your feature branch to (your fork of) the nplinker repository on GitHub;\n1. create the pull request, e.g. following the instructions [here](https://help.github.com/articles/creating-a-pull-request/).\n\nIn case you feel like you've made a valuable contribution, but you don't know how to write or run tests for it, or how to generate the documentation: don't let this discourage you from making the pull request; we can help you! Just go ahead and submit the pull request, but keep in mind that you might be asked to append additional commits to your pull request.\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "Natural Products Linker (NPLinker)"
        ],
        "type": "Text_excerpt",
        "value": "If you want to contribute to the development of nplinker, have a look at the [contribution guidelines](CONTRIBUTING.md) and [README for developers](README.dev.md).\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-10-19T18:43:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-24T23:58:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A python framework for data mining microbial natural products by integrating genomics and metabolomics data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9924734607490786,
      "result": {
        "original_header": "Natural Products Linker (NPLinker)",
        "type": "Text_excerpt",
        "value": "NPLinker is a python framework for data mining microbial natural products by integrating genomics and metabolomics data. \n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NPLinker/nplinker/tree/dev/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/NPLinker/nplinker/wiki"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NPLinker/nplinker/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/latest_api_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/latest_api_demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/nplinker_significancy_tests.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/nplinker_significancy_tests.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/nplinker_demo1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/nplinker_demo1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/nplinker_demo1-Copy1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/nplinker_demo1-Copy1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/nplinker_correlation_probabilities.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/nplinker_correlation_probabilities.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/crusemann_nplinker_iokr.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/crusemann_nplinker_iokr.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/iokr_scoring.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/iokr_scoring.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/crusemann_loading.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/crusemann_loading.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/spec_clustering_simon.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/spec_clustering_simon.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/simon_notebook.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/simon_notebook.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/metcalf_scoring.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/metcalf_scoring.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/scoring_notebooks/nplinker_correlation_expected_variance_ok.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/scoring_notebooks/nplinker_correlation_expected_variance_ok.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/scoring_notebooks/nplinker_crusemann_analysis_ok.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/scoring_notebooks/nplinker_crusemann_analysis_ok.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/scoring_notebooks/nplinker_leao_analysis_ok.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/scoring_notebooks/nplinker_leao_analysis_ok.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/scoring_notebooks/nplinker_gross_analysis_ok.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/scoring_notebooks/nplinker_gross_analysis_ok.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/scoring_notebooks/nplinker_mibig_gnps_iokr_ok.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/scoring_notebooks/nplinker_mibig_gnps_iokr_ok.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/carnegie-notebooks/high_scoring_links_for_interesting_bgcs_nplinker.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/carnegie-notebooks/high_scoring_links_for_interesting_bgcs_nplinker.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/carnegie-notebooks/metcalf_std.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/carnegie-notebooks/metcalf_std.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/carnegie-notebooks/simon_plots.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/carnegie-notebooks/simon_plots.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/carnegie-notebooks/metcalf_by_media_graph.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/carnegie-notebooks/metcalf_by_media_graph.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/carnegie-notebooks/metcalf_expected_and_variance.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/carnegie-notebooks/metcalf_expected_and_variance.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/analysis-Nocardia.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/analysis-Nocardia.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/analysis-Cyanobacteria.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/analysis-Cyanobacteria.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/analysis-Streptomyces_Salinispora.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/analysis-Streptomyces_Salinispora.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/crusemann_get_strain_mappings.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/crusemann_get_strain_mappings.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/analysis-combined.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/analysis-combined.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/class_matching_tables.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/class_matching_tables.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/NPClassScore_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/npclassscore_linking/NPClassScore_demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/rosetta_data_prep/mibig_gnps_merge.ipynb"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/notebooks/rosetta_data_prep/mibig_gnps_merge.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NPLinker/nplinker/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NPLinker/nplinker"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://sonarcloud.io/api/project_badges/measure?project=NPLinker_nplinker&amp;metric=coverage"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n???- Note \"Requirements\"\n    - Linux, MacOS or [Windows with WSL](https://learn.microsoft.com/en-us/windows/wsl/)\n    - Python version \u22653.9\n\n\nNPLinker is a python package that has both pypi packages and non-pypi packages as dependencies. It \nrequires <span style=\"color:red;\">**~4.5GB**</span> of disk space to install all the dependencies. \n\nInstall `nplinker` package as following:\n\n\n```bash title=\"Install nplinker package\"\n# Check python version (\u22653.9)\npython --version\n\n# Create a new virtual environment\npython -m venv env          # (1)!\nsource env/bin/activate     # (2)! \n\n# install nplinker package (requiring ~300MB of disk space)\npip install --pre nplinker # (3)!\n\n# install nplinker non-pypi dependencies and databases (~4GB)\ninstall-nplinker-deps\n```\n\n1. A virtual environment is ***required*** to install the the non-pypi dependencies. You can also use `conda` to create a new environment. But NPLinker is not available on conda yet.\n2. Check `pip` command and make sure it is provided by the activated virtual environment. \n3. NPLinker v2 is still under development and released as [pre-release](https://pypi.org/project/nplinker/#history). To install the pre-release, you need the `--pre` option. \n\n## Install from source code\n\nYou can also install NPLinker from source code:\n\n```bash title=\"Install from latest source code\"\npip install git+https://github.com/nplinker/nplinker@dev  # (1)!\ninstall-nplinker-deps\n```\n\n1. The `@dev` is the branch name. You can replace it with the branch name, commit or tag.\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/docs/install.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Natural Products Linker (NPLinker)",
          "Setup and usage"
        ],
        "type": "Text_excerpt",
        "value": "NPLinker is a python package, using both pypi packages and non-pypi packages as dependencies. It \nrequires <span style=\"color:red;\">**~4.5GB**</span> of disk space to install all the dependencies. \n\n```shell\n# Check python version (requiring \u22653.9)\npython --version\n\n# Create a new virtual environment\npython -m venv env\nsource env/bin/activate\n\n# install from nplinker releases (requiring ~300MB of disk space)\npip install --pre nplinker\n\n# or install the latest from source code\npip install git+https://github.com/nplinker/nplinker@dev \n\n# install nplinker non-pypi dependencies and databases (~4GB)\ninstall-nplinker-deps\n```\nA virtual environment is *required* to install the the non-pypi dependencies. You can also use `conda`\nto manage python environments.\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Testing",
        "parent_header": [
          "Natural Products Linker (NPLinker)",
          "Setup and usage"
        ],
        "type": "Text_excerpt",
        "value": "To run the tests, you need to clone this repo and install the development dependencies:\n\n```shell\n# Create a new virtual environment\npython -m venv env\nsource env/bin/activate\n\n# Clone the repository and install the development dependencies\ngit clone https://github.com/NPLinker/nplinker.git\ncd nplinker\npip install -e \".[dev]\"\ninstall-nplinker-deps\n```\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Unit tests",
        "parent_header": [
          "Natural Products Linker (NPLinker)",
          "Setup and usage",
          "Testing"
        ],
        "type": "Text_excerpt",
        "value": "To run the unit tests, you can use the following command:\n\n```shell\npytest\n```\nPytest will use all available CPU cores to run the unit tests in parallel.\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Integration tests",
        "parent_header": [
          "Natural Products Linker (NPLinker)",
          "Setup and usage",
          "Testing"
        ],
        "type": "Text_excerpt",
        "value": "To run the integration tests, you can use the following command:\n\n```shell\npytest -n1 tests/integration\n```\nThe `-n1` is to use one CPU core to run the tests. Change it to `-n2` if you want to use two CPU cores to run in parallel.\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NPLinker/nplinker/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "data-harmonization, data-integration, genomics, metabolomics, multi-omics-integration"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://sonarcloud.io/api/project_badges/measure?project=NPLinker_nplinker&amp;metric=alert_status"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nplinker"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "NPLinker"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 93321861,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 657508,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7435,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2616,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Mustache",
        "size": 536,
        "type": "Programming_language",
        "value": "Mustache"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-09-17T12:24:01Z",
        "date_published": "2024-09-17T12:24:04Z",
        "description": "\n[Full Changelog](https://github.com/NPLinker/nplinker/compare/v2.0.0-alpha.5...v2.0.0-alpha.6)\n\n**Merged pull requests:**\n\n- Allow bigscape run for local mode [\\#277](https://github.com/NPLinker/nplinker/pull/277) ([CunliangGeng](https://github.com/CunliangGeng))\n- Add table display for link graph [\\#276](https://github.com/NPLinker/nplinker/pull/276) ([CunliangGeng](https://github.com/CunliangGeng))\n- Handle two quantification table folders of GNPS feature-based workflow  [\\#275](https://github.com/NPLinker/nplinker/pull/275) ([CunliangGeng](https://github.com/CunliangGeng))\n- Verify the support of WSL [\\#274](https://github.com/NPLinker/nplinker/pull/274) ([CunliangGeng](https://github.com/CunliangGeng))\n\n",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v2.0.0-alpha.6",
        "name": "v2.0.0-alpha.6",
        "release_id": 175441177,
        "tag": "v2.0.0-alpha.6",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v2.0.0-alpha.6",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/175441177",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/175441177",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v2.0.0-alpha.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-08-22T14:28:22Z",
        "date_published": "2024-08-22T14:28:23Z",
        "description": "\n[Full Changelog](https://github.com/NPLinker/nplinker/compare/v2.0.0-alpha.4...v2.0.0-alpha.5)\n\n**Merged pull requests:**\n\n- add names of bigscape classes [\\#273](https://github.com/NPLinker/nplinker/pull/273) ([CunliangGeng](https://github.com/CunliangGeng))\n\n",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v2.0.0-alpha.5",
        "name": "v2.0.0-alpha.5",
        "release_id": 171491091,
        "tag": "v2.0.0-alpha.5",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v2.0.0-alpha.5",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/171491091",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/171491091",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v2.0.0-alpha.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-07-29T12:06:41Z",
        "date_published": "2024-07-29T12:06:43Z",
        "description": "\n[Full Changelog](https://github.com/NPLinker/nplinker/compare/v2.0.0-alpha.3...v2.0.0-alpha.4)\n\n**Implemented enhancements:**\n\n- Select subset of the data [\\#265](https://github.com/NPLinker/nplinker/issues/265)\n\n**Closed issues:**\n\n- Fix code scanning alert - Token-Permissions [\\#268](https://github.com/NPLinker/nplinker/issues/268)\n- support bigscape v2 [\\#216](https://github.com/NPLinker/nplinker/issues/216)\n- Abstraction of run\\_bigscape function [\\#115](https://github.com/NPLinker/nplinker/issues/115)\n\n**Merged pull requests:**\n\n- update doc for bigscape [\\#270](https://github.com/NPLinker/nplinker/pull/270) ([CunliangGeng](https://github.com/CunliangGeng))\n- add filter method to LinkGraph [\\#269](https://github.com/NPLinker/nplinker/pull/269) ([CunliangGeng](https://github.com/CunliangGeng))\n- Add OSSF Scorecard action and badge  [\\#267](https://github.com/NPLinker/nplinker/pull/267) ([CunliangGeng](https://github.com/CunliangGeng))\n- improve docstrings [\\#266](https://github.com/NPLinker/nplinker/pull/266) ([CunliangGeng](https://github.com/CunliangGeng))\n- Run bigscape v2 [\\#251](https://github.com/NPLinker/nplinker/pull/251) ([adraismawur](https://github.com/adraismawur))\n\n",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v2.0.0-alpha.4",
        "name": "v2.0.0-alpha.4",
        "release_id": 167637577,
        "tag": "v2.0.0-alpha.4",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v2.0.0-alpha.4",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/167637577",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/167637577",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v2.0.0-alpha.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-07-11T12:47:11Z",
        "date_published": "2024-07-11T12:47:13Z",
        "description": "\n[Full Changelog](https://github.com/NPLinker/nplinker/compare/v2.0.0-alpha.2...v2.0.0-alpha.3)\n\n**Implemented enhancements:**\n\n- Data size warnings / checks when installing and using nplinker package [\\#237](https://github.com/NPLinker/nplinker/issues/237)\n\n**Closed issues:**\n\n- Podp: not all genome IDs are in antismashDB [\\#242](https://github.com/NPLinker/nplinker/issues/242)\n- refactoring scoring \\(tracker issue\\) [\\#205](https://github.com/NPLinker/nplinker/issues/205)\n- ensure that IDs are unique [\\#146](https://github.com/NPLinker/nplinker/issues/146)\n- refactor `__eq__` and `__hash__` methods [\\#136](https://github.com/NPLinker/nplinker/issues/136)\n- Missing mibig BGC [\\#86](https://github.com/NPLinker/nplinker/issues/86)\n\n**Merged pull requests:**\n\n- fix tabular file header detection [\\#264](https://github.com/NPLinker/nplinker/pull/264) ([CunliangGeng](https://github.com/CunliangGeng))\n- simplify error check in unit tests [\\#263](https://github.com/NPLinker/nplinker/pull/263) ([CunliangGeng](https://github.com/CunliangGeng))\n- add warning for failed antismash downloads [\\#262](https://github.com/NPLinker/nplinker/pull/262) ([CunliangGeng](https://github.com/CunliangGeng))\n- check disk space before downloading [\\#261](https://github.com/NPLinker/nplinker/pull/261) ([CunliangGeng](https://github.com/CunliangGeng))\n\n",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v2.0.0-alpha.3",
        "name": "v2.0.0-alpha.3",
        "release_id": 164991979,
        "tag": "v2.0.0-alpha.3",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v2.0.0-alpha.3",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/164991979",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/164991979",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v2.0.0-alpha.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-06-20T13:07:52Z",
        "date_published": "2024-06-20T13:12:32Z",
        "description": "[Full Changelog](https://github.com/NPLinker/nplinker/compare/v2.0.0-alpha.1...v2.0.0-alpha.2)\r\n\r\n**Closed issues:**\r\n\r\n- improvement on docs [\\#232](https://github.com/NPLinker/nplinker/issues/232)\r\n- writing tutorials and docs for preparing data [\\#204](https://github.com/NPLinker/nplinker/issues/204)\r\n\r\n**Merged pull requests:**\r\n\r\n- update docs [\\#260](https://github.com/NPLinker/nplinker/pull/260) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- improving type hints and usage of abc [\\#259](https://github.com/NPLinker/nplinker/pull/259) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- add pickling [\\#258](https://github.com/NPLinker/nplinker/pull/258) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- fix mypy and ruff errors [\\#257](https://github.com/NPLinker/nplinker/pull/257) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- refactor NPLinker class [\\#256](https://github.com/NPLinker/nplinker/pull/256) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- rename `molfam` to `mf` to uniform the abbreviation for MolecularFamily [\\#255](https://github.com/NPLinker/nplinker/pull/255) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- refactor MetcalfScoring methods [\\#254](https://github.com/NPLinker/nplinker/pull/254) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- use uniformed attribute name `id`  [\\#253](https://github.com/NPLinker/nplinker/pull/253) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- Add LinkGraph to replace ObjectLink and LinkCollection [\\#252](https://github.com/NPLinker/nplinker/pull/252) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- merge DataLinks `get_common_strains` to ObjectLink [\\#250](https://github.com/NPLinker/nplinker/pull/250) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- merge DataLinks to MetcalfScoring class [\\#249](https://github.com/NPLinker/nplinker/pull/249) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- merge LinkFinder to MetcalfScoring class [\\#248](https://github.com/NPLinker/nplinker/pull/248) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- add abstract base class for scoring methods [\\#247](https://github.com/NPLinker/nplinker/pull/247) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- Specify config file explicitly for initializing NPLinker [\\#246](https://github.com/NPLinker/nplinker/pull/246) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- fix empty caplog [\\#245](https://github.com/NPLinker/nplinker/pull/245) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- update docs and readme [\\#244](https://github.com/NPLinker/nplinker/pull/244) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- refactor logging control [\\#243](https://github.com/NPLinker/nplinker/pull/243) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- add default output path [\\#241](https://github.com/NPLinker/nplinker/pull/241) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- rename globals.py to defaults.py [\\#240](https://github.com/NPLinker/nplinker/pull/240) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- Fix locations of attributes docstrings [\\#239](https://github.com/NPLinker/nplinker/pull/239) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- check format and typing only on changed files [\\#238](https://github.com/NPLinker/nplinker/pull/238) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- remove static typings from Returns in docstrings [\\#236](https://github.com/NPLinker/nplinker/pull/236) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- set ruff to not check docstrings of test files [\\#235](https://github.com/NPLinker/nplinker/pull/235) ([CunliangGeng](https://github.com/CunliangGeng))\r\n- Support Bigscape v2 data [\\#234](https://github.com/NPLinker/nplinker/pull/234) ([adraismawur](https://github.com/adraismawur))\r\n\r\n",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v2.0.0-alpha.2",
        "name": "v2.0.0-alpha.2",
        "release_id": 161478735,
        "tag": "v2.0.0-alpha.2",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v2.0.0-alpha.2",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/161478735",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/161478735",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v2.0.0-alpha.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-03-25T16:45:16Z",
        "date_published": "2024-03-25T16:45:17Z",
        "description": "\n[Full Changelog](https://github.com/NPLinker/nplinker/compare/v1.3.2...v2.0.0-alpha.1)\n\n**Fixed bugs:**\n\n- Fix failing tests [\\#96](https://github.com/NPLinker/nplinker/issues/96)\n\n**Closed issues:**\n\n- Fix dev setup issues [\\#222](https://github.com/NPLinker/nplinker/issues/222)\n- Running NPLinker tutorial [\\#213](https://github.com/NPLinker/nplinker/issues/213)\n- Exception: Failed to find \\*ANY\\* strains, missing strain\\_mappings.csv? [\\#170](https://github.com/NPLinker/nplinker/issues/170)\n- Add schema validation [\\#165](https://github.com/NPLinker/nplinker/issues/165)\n- Refactor initialisation of project root and data folders \\[Track issue\\] [\\#163](https://github.com/NPLinker/nplinker/issues/163)\n- http 404 error from `test_nplinker_local.py` [\\#156](https://github.com/NPLinker/nplinker/issues/156)\n- implement the function to generate strain mappings file [\\#154](https://github.com/NPLinker/nplinker/issues/154)\n- implement the function to generate `refseq id \u2194 BGC id` mapping file [\\#153](https://github.com/NPLinker/nplinker/issues/153)\n- change csv to json for strain mappings file [\\#152](https://github.com/NPLinker/nplinker/issues/152)\n- change csv to json for genome status file [\\#151](https://github.com/NPLinker/nplinker/issues/151)\n- generate strain mappings file for PODP data [\\#150](https://github.com/NPLinker/nplinker/issues/150)\n- how is `strain_mappings.csv` generated? [\\#148](https://github.com/NPLinker/nplinker/issues/148)\n- Strain generation, loading and mapping [\\#147](https://github.com/NPLinker/nplinker/issues/147)\n- Refactor `DatasetLoader` class  [\\#145](https://github.com/NPLinker/nplinker/issues/145)\n- Use UUID for singleton molecular family? [\\#144](https://github.com/NPLinker/nplinker/issues/144)\n- KeyError: 'cluster' Extract MIBIG data [\\#140](https://github.com/NPLinker/nplinker/issues/140)\n- Use the refactored antismash downloader in `PODPDownloader` class [\\#137](https://github.com/NPLinker/nplinker/issues/137)\n- remove `_strain_dict_index` from `StrainCollection` class [\\#134](https://github.com/NPLinker/nplinker/issues/134)\n- Rename `Downloader` class to `PODPDownloader` [\\#133](https://github.com/NPLinker/nplinker/issues/133)\n- Exception: Failed to find \\*ANY\\* strains, missing strain\\_mappings.csv? [\\#130](https://github.com/NPLinker/nplinker/issues/130)\n- error when loading local data [\\#129](https://github.com/NPLinker/nplinker/issues/129)\n- nplinker library download [\\#128](https://github.com/NPLinker/nplinker/issues/128)\n- Hardware Requirements: [\\#124](https://github.com/NPLinker/nplinker/issues/124)\n- replace load\\_gcfs function [\\#122](https://github.com/NPLinker/nplinker/issues/122)\n- Refactor `Downloader` class to have a specific PoDP downloader [\\#121](https://github.com/NPLinker/nplinker/issues/121)\n- PODP mode and local data mode [\\#117](https://github.com/NPLinker/nplinker/issues/117)\n- Create StrainMappingLoader [\\#116](https://github.com/NPLinker/nplinker/issues/116)\n- Refactor GCF loading process [\\#114](https://github.com/NPLinker/nplinker/issues/114)\n- Change `strains` in `StrainCollection` to be a `set` instead of `list` [\\#113](https://github.com/NPLinker/nplinker/issues/113)\n- Implement comparison operator for `StrainCollection` class [\\#110](https://github.com/NPLinker/nplinker/issues/110)\n- Include `strains` again in objects loaded from Metabolomics [\\#109](https://github.com/NPLinker/nplinker/issues/109)\n- check if this function is still needed or forward to the proper implementation [\\#108](https://github.com/NPLinker/nplinker/issues/108)\n- Implement GNPS loading functionality on `DatasetLoader` layer [\\#107](https://github.com/NPLinker/nplinker/issues/107)\n- Rename `MibigBGC` to `BGC` in MibigBGCLoader [\\#106](https://github.com/NPLinker/nplinker/issues/106)\n- Remove strain assignment from BGC loaders? [\\#104](https://github.com/NPLinker/nplinker/issues/104)\n- Use unique and fixed GCF identifier in scoring [\\#103](https://github.com/NPLinker/nplinker/issues/103)\n- Move test files to subfolders [\\#99](https://github.com/NPLinker/nplinker/issues/99)\n- Create `antismash_downloader` module [\\#98](https://github.com/NPLinker/nplinker/issues/98)\n- Fix instructions for zsh shell [\\#95](https://github.com/NPLinker/nplinker/issues/95)\n- MiBIG v3.x support [\\#94](https://github.com/NPLinker/nplinker/issues/94)\n- Implement removing the strain also from self.\\_lookup indices. \\[Bug\\] [\\#90](https://github.com/NPLinker/nplinker/issues/90)\n- Improve GNPS format detection [\\#89](https://github.com/NPLinker/nplinker/issues/89)\n- PoDP RefSeq accession is used as antiSMASH accession [\\#76](https://github.com/NPLinker/nplinker/issues/76)\n- Documentation on readthedocs.io [\\#74](https://github.com/NPLinker/nplinker/issues/74)\n\n**Merged pull requests:**\n\n- move dependencies to pyproject.toml file [\\#233](https://github.com/NPLinker/nplinker/pull/233) ([CunliangGeng](https://github.com/CunliangGeng))\n- Add user tutorials  [\\#231](https://github.com/NPLinker/nplinker/pull/231) ([CunliangGeng](https://github.com/CunliangGeng))\n- update dev env settings for vscode [\\#230](https://github.com/NPLinker/nplinker/pull/230) ([CunliangGeng](https://github.com/CunliangGeng))\n- update readme files [\\#228](https://github.com/NPLinker/nplinker/pull/228) ([CunliangGeng](https://github.com/CunliangGeng))\n- enable github actions for PRs on all branches [\\#227](https://github.com/NPLinker/nplinker/pull/227) ([CunliangGeng](https://github.com/CunliangGeng))\n- update dependencies [\\#226](https://github.com/NPLinker/nplinker/pull/226) ([CunliangGeng](https://github.com/CunliangGeng))\n- remove unused mkdocs settings [\\#225](https://github.com/NPLinker/nplinker/pull/225) ([CunliangGeng](https://github.com/CunliangGeng))\n- Fix github actions for large file storage [\\#224](https://github.com/NPLinker/nplinker/pull/224) ([CunliangGeng](https://github.com/CunliangGeng))\n- Fix dev setup [\\#223](https://github.com/NPLinker/nplinker/pull/223) ([adraismawur](https://github.com/adraismawur))\n- Add API documentation [\\#221](https://github.com/NPLinker/nplinker/pull/221) ([CunliangGeng](https://github.com/CunliangGeng))\n- Restructure codebase [\\#220](https://github.com/NPLinker/nplinker/pull/220) ([CunliangGeng](https://github.com/CunliangGeng))\n- setup docs with Mkdocs [\\#218](https://github.com/NPLinker/nplinker/pull/218) ([CunliangGeng](https://github.com/CunliangGeng))\n- fix docstrings [\\#217](https://github.com/NPLinker/nplinker/pull/217) ([CunliangGeng](https://github.com/CunliangGeng))\n- add class DatasetArranger [\\#215](https://github.com/NPLinker/nplinker/pull/215) ([CunliangGeng](https://github.com/CunliangGeng))\n- use git large file for large zip files [\\#214](https://github.com/NPLinker/nplinker/pull/214) ([CunliangGeng](https://github.com/CunliangGeng))\n- Update strain mappings generator [\\#212](https://github.com/NPLinker/nplinker/pull/212) ([CunliangGeng](https://github.com/CunliangGeng))\n- Update global variables [\\#211](https://github.com/NPLinker/nplinker/pull/211) ([CunliangGeng](https://github.com/CunliangGeng))\n- Update mibig downloader [\\#210](https://github.com/NPLinker/nplinker/pull/210) ([CunliangGeng](https://github.com/CunliangGeng))\n- Update config template and validations [\\#209](https://github.com/NPLinker/nplinker/pull/209) ([CunliangGeng](https://github.com/CunliangGeng))\n- Update utils [\\#208](https://github.com/NPLinker/nplinker/pull/208) ([CunliangGeng](https://github.com/CunliangGeng))\n- Redesign the template of nplinker config file [\\#206](https://github.com/NPLinker/nplinker/pull/206) ([CunliangGeng](https://github.com/CunliangGeng))\n- Refactor config loader [\\#203](https://github.com/NPLinker/nplinker/pull/203) ([CunliangGeng](https://github.com/CunliangGeng))\n- refactor initiation of paths to metabolomics files [\\#202](https://github.com/NPLinker/nplinker/pull/202) ([CunliangGeng](https://github.com/CunliangGeng))\n- update logics of loading mibig data [\\#201](https://github.com/NPLinker/nplinker/pull/201) ([CunliangGeng](https://github.com/CunliangGeng))\n- remove filtering of common strains during loading [\\#200](https://github.com/NPLinker/nplinker/pull/200) ([CunliangGeng](https://github.com/CunliangGeng))\n- remove loading of optional data [\\#199](https://github.com/NPLinker/nplinker/pull/199) ([CunliangGeng](https://github.com/CunliangGeng))\n- deprecate the method `_load_class_info` [\\#198](https://github.com/NPLinker/nplinker/pull/198) ([CunliangGeng](https://github.com/CunliangGeng))\n- Update loading of genomics data [\\#197](https://github.com/NPLinker/nplinker/pull/197) ([CunliangGeng](https://github.com/CunliangGeng))\n- Update logics of loading metabolomics data [\\#196](https://github.com/NPLinker/nplinker/pull/196) ([CunliangGeng](https://github.com/CunliangGeng))\n- remove unused `mgf.py` and its test file [\\#194](https://github.com/NPLinker/nplinker/pull/194) ([CunliangGeng](https://github.com/CunliangGeng))\n- refactor `Spectrum` class [\\#193](https://github.com/NPLinker/nplinker/pull/193) ([CunliangGeng](https://github.com/CunliangGeng))\n- Remove class `SingletonFamily` and MF attribute `id` [\\#192](https://github.com/NPLinker/nplinker/pull/192) ([CunliangGeng](https://github.com/CunliangGeng))\n- Enable filtering of singleton molecular families [\\#191](https://github.com/NPLinker/nplinker/pull/191) ([CunliangGeng](https://github.com/CunliangGeng))\n- enable parallel testing using pytest-xdist [\\#190](https://github.com/NPLinker/nplinker/pull/190) ([CunliangGeng](https://github.com/CunliangGeng))\n- refactor class GCF [\\#189](https://github.com/NPLinker/nplinker/pull/189) ([CunliangGeng](https://github.com/CunliangGeng))\n- refactor class `MolecularFamily` [\\#188](https://github.com/NPLinker/nplinker/pull/188) ([CunliangGeng](https://github.com/CunliangGeng))\n- remove deprecated functions of loading metabolomics data [\\#187](https://github.com/NPLinker/nplinker/pull/187) ([CunliangGeng](https://github.com/CunliangGeng))\n- rename `genomics.py` to `utils.py` [\\#186](https://github.com/NPLinker/nplinker/pull/186) ([CunliangGeng](https://github.com/CunliangGeng))\n- update the process of loading genomics data [\\#185](https://github.com/NPLinker/nplinker/pull/185) ([CunliangGeng](https://github.com/CunliangGeng))\n- remove deprecated functions of loading genomics data [\\#184](https://github.com/NPLinker/nplinker/pull/184) ([CunliangGeng](https://github.com/CunliangGeng))\n- rename `strains.py` to `strain.py` [\\#183](https://github.com/NPLinker/nplinker/pull/183) ([CunliangGeng](https://github.com/CunliangGeng))\n- return list for `get_bgcs` methods of BGC loaders [\\#182](https://github.com/NPLinker/nplinker/pull/182) ([CunliangGeng](https://github.com/CunliangGeng))\n- Enable GCF loader to filter singleton GCFs [\\#181](https://github.com/NPLinker/nplinker/pull/181) ([CunliangGeng](https://github.com/CunliangGeng))\n- refactor filtering of user specified strains [\\#178](https://github.com/NPLinker/nplinker/pull/178) ([CunliangGeng](https://github.com/CunliangGeng))\n- Update ruff rules to ignore unused imports in `__init__.py` files [\\#177](https://github.com/NPLinker/nplinker/pull/177) ([CunliangGeng](https://github.com/CunliangGeng))\n- change linter and formatter to ruff [\\#176](https://github.com/NPLinker/nplinker/pull/176) ([CunliangGeng](https://github.com/CunliangGeng))\n- Add or update `__init__.py` [\\#174](https://github.com/NPLinker/nplinker/pull/174) ([CunliangGeng](https://github.com/CunliangGeng))\n- Add magic method `__add__` [\\#173](https://github.com/NPLinker/nplinker/pull/173) ([CunliangGeng](https://github.com/CunliangGeng))\n- Fix download bugs [\\#172](https://github.com/NPLinker/nplinker/pull/172) ([CunliangGeng](https://github.com/CunliangGeng))\n- allow GCF loader to filter mibig-only GCF objects [\\#171](https://github.com/NPLinker/nplinker/pull/171) ([CunliangGeng](https://github.com/CunliangGeng))\n- Refactor gnps classes [\\#169](https://github.com/NPLinker/nplinker/pull/169) ([CunliangGeng](https://github.com/CunliangGeng))\n- Refactor loading genomics [\\#168](https://github.com/NPLinker/nplinker/pull/168) ([CunliangGeng](https://github.com/CunliangGeng))\n- Add schema validation for json data [\\#167](https://github.com/NPLinker/nplinker/pull/167) ([CunliangGeng](https://github.com/CunliangGeng))\n-  Create functions to extract/get/generate strain mappings [\\#166](https://github.com/NPLinker/nplinker/pull/166) ([CunliangGeng](https://github.com/CunliangGeng))\n- preparations for issue 154  [\\#164](https://github.com/NPLinker/nplinker/pull/164) ([CunliangGeng](https://github.com/CunliangGeng))\n- change class method to static method [\\#161](https://github.com/NPLinker/nplinker/pull/161) ([CunliangGeng](https://github.com/CunliangGeng))\n- Handle 404 NOT FOUND error for `download_and_extract_antismash_data` [\\#160](https://github.com/NPLinker/nplinker/pull/160) ([gcroci2](https://github.com/gcroci2))\n- Handle unavailable GNPS service [\\#159](https://github.com/NPLinker/nplinker/pull/159) ([CunliangGeng](https://github.com/CunliangGeng))\n- Issue152 replace csv with json for strain mappings file [\\#158](https://github.com/NPLinker/nplinker/pull/158) ([CunliangGeng](https://github.com/CunliangGeng))\n- Issue151 use json for genome status file [\\#157](https://github.com/NPLinker/nplinker/pull/157) ([CunliangGeng](https://github.com/CunliangGeng))\n- 153 bgc mappings generation [\\#155](https://github.com/NPLinker/nplinker/pull/155) ([CunliangGeng](https://github.com/CunliangGeng))\n- clean up loader and downloader [\\#149](https://github.com/NPLinker/nplinker/pull/149) ([CunliangGeng](https://github.com/CunliangGeng))\n- refactor: move non-download functionalities out of `PODPDownloader` - `_run_bigscape` [\\#143](https://github.com/NPLinker/nplinker/pull/143) ([gcroci2](https://github.com/gcroci2))\n- Use unique string IDs [\\#142](https://github.com/NPLinker/nplinker/pull/142) ([CunliangGeng](https://github.com/CunliangGeng))\n- fix indentation bug in autodocsting [\\#141](https://github.com/NPLinker/nplinker/pull/141) ([CunliangGeng](https://github.com/CunliangGeng))\n- Refactor `__eq__` and `__hash__` methods [\\#139](https://github.com/NPLinker/nplinker/pull/139) ([CunliangGeng](https://github.com/CunliangGeng))\n- refactor: use refactored antismash downloader module in `PODPDownloader` class [\\#138](https://github.com/NPLinker/nplinker/pull/138) ([gcroci2](https://github.com/gcroci2))\n- Refactor StrainCollection class [\\#135](https://github.com/NPLinker/nplinker/pull/135) ([CunliangGeng](https://github.com/CunliangGeng))\n- Rename `Downloader` class to `POPDownloader` [\\#132](https://github.com/NPLinker/nplinker/pull/132) ([gcroci2](https://github.com/gcroci2))\n- Refactor Strain class [\\#131](https://github.com/NPLinker/nplinker/pull/131) ([CunliangGeng](https://github.com/CunliangGeng))\n- refactor: create antismash downloader module and move there inherent code [\\#127](https://github.com/NPLinker/nplinker/pull/127) ([gcroci2](https://github.com/gcroci2))\n- Add bgc-genome mapping to BGC loaders [\\#126](https://github.com/NPLinker/nplinker/pull/126) ([CunliangGeng](https://github.com/CunliangGeng))\n- Change `GCF.strains` back to attribute [\\#125](https://github.com/NPLinker/nplinker/pull/125) ([CunliangGeng](https://github.com/CunliangGeng))\n- add comments for loading process of strain mapping [\\#123](https://github.com/NPLinker/nplinker/pull/123) ([CunliangGeng](https://github.com/CunliangGeng))\n- refactor GCF loading process [\\#120](https://github.com/NPLinker/nplinker/pull/120) ([CunliangGeng](https://github.com/CunliangGeng))\n- Improved test coverage for loader [\\#118](https://github.com/NPLinker/nplinker/pull/118) ([hechth](https://github.com/hechth))\n- rename MibigBGC to BGC in docstrings [\\#112](https://github.com/NPLinker/nplinker/pull/112) ([CunliangGeng](https://github.com/CunliangGeng))\n- Implement comparison operator for `StrainCollection` class [\\#111](https://github.com/NPLinker/nplinker/pull/111) ([hechth](https://github.com/hechth))\n- Fix local test error [\\#105](https://github.com/NPLinker/nplinker/pull/105) ([CunliangGeng](https://github.com/CunliangGeng))\n- Refactor GCF class [\\#102](https://github.com/NPLinker/nplinker/pull/102) ([CunliangGeng](https://github.com/CunliangGeng))\n- Refactor BGC data model [\\#101](https://github.com/NPLinker/nplinker/pull/101) ([CunliangGeng](https://github.com/CunliangGeng))\n- Move test files to subfolders and update pytest's conftest.py [\\#100](https://github.com/NPLinker/nplinker/pull/100) ([CunliangGeng](https://github.com/CunliangGeng))\n- docs: add quotes in package installation for zsh shell [\\#97](https://github.com/NPLinker/nplinker/pull/97) ([gcroci2](https://github.com/gcroci2))\n- Refactored GNPS downloading and file extraction code [\\#93](https://github.com/NPLinker/nplinker/pull/93) ([hechth](https://github.com/hechth))\n- Refactor BGC data loader [\\#92](https://github.com/NPLinker/nplinker/pull/92) ([CunliangGeng](https://github.com/CunliangGeng))\n- Initial refactoring of Metabolomics data loading [\\#91](https://github.com/NPLinker/nplinker/pull/91) ([hechth](https://github.com/hechth))\n- static typing [\\#88](https://github.com/NPLinker/nplinker/pull/88) ([CunliangGeng](https://github.com/CunliangGeng))\n- Refactor mibig related code [\\#87](https://github.com/NPLinker/nplinker/pull/87) ([CunliangGeng](https://github.com/CunliangGeng))\n- Add download extract utils [\\#85](https://github.com/NPLinker/nplinker/pull/85) ([CunliangGeng](https://github.com/CunliangGeng))\n- Refactor AA prediction [\\#84](https://github.com/NPLinker/nplinker/pull/84) ([CunliangGeng](https://github.com/CunliangGeng))\n- Check metcalf and IOKR scoring [\\#83](https://github.com/NPLinker/nplinker/pull/83) ([CunliangGeng](https://github.com/CunliangGeng))\n- add dev branch to github actions [\\#82](https://github.com/NPLinker/nplinker/pull/82) ([CunliangGeng](https://github.com/CunliangGeng))\n- add DATA\\_DIR for sharing test data dir [\\#81](https://github.com/NPLinker/nplinker/pull/81) ([CunliangGeng](https://github.com/CunliangGeng))\n- Initial refactoring on scoring methods [\\#80](https://github.com/NPLinker/nplinker/pull/80) ([hechth](https://github.com/hechth))\n- Implemented some tests for the metabolomics side [\\#79](https://github.com/NPLinker/nplinker/pull/79) ([hechth](https://github.com/hechth))\n- Refactored `genomics.py` and `metabolomics.py` by moving classes into individual files [\\#78](https://github.com/NPLinker/nplinker/pull/78) ([hechth](https://github.com/hechth))\n- Refine github actions [\\#77](https://github.com/NPLinker/nplinker/pull/77) ([CunliangGeng](https://github.com/CunliangGeng))\n\n",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v2.0.0-alpha.1",
        "name": "v2.0.0-alpha.1",
        "release_id": 148256886,
        "tag": "v2.0.0-alpha.1",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v2.0.0-alpha.1",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/148256886",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/148256886",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v2.0.0-alpha.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-08-12T15:04:06Z",
        "date_published": "2022-08-12T15:22:38Z",
        "description": "## [v1.3.2](https://github.com/NPLinker/nplinker/tree/v1.3.2) (2022-08-12)\r\n\r\n[Full Changelog](https://github.com/NPLinker/nplinker/compare/v1.3.1...v1.3.2)\r\n\r\n**Updates:**\r\n- Updated badges in README.md\r\n- Updated github actions about build, release and publishing \r\n- Updated installation script to use forked code of bigscape to avoid multiprocessing errors on Mac",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v1.3.2",
        "name": "v1.3.2",
        "release_id": 74305943,
        "tag": "v1.3.2",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v1.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/74305943",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/74305943",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v1.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CunliangGeng",
          "type": "User"
        },
        "date_created": "2022-08-05T16:10:07Z",
        "date_published": "2022-08-05T16:14:25Z",
        "description": "## [v1.3.1](https://github.com/NPLinker/nplinker/tree/v1.3.1) (2022-08-05)\r\n\r\n[Full Changelog](https://github.com/NPLinker/nplinker/compare/v1.3.0...v1.3.1)\r\n\r\n**Closed issues:**\r\n\r\n- Important: Stop committing until restructuring is done  [\\#73](https://github.com/NPLinker/nplinker/issues/73)\r\n- Explore tutorials/modules are relevant to develop the dashboard [\\#68](https://github.com/NPLinker/nplinker/issues/68)\r\n\r\n**Merged pull requests:**\r\n\r\n- Refine install script and upgrade python syntax [\\#75](https://github.com/NPLinker/nplinker/pull/75) ([CunliangGeng](https://github.com/CunliangGeng))",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v1.3.1",
        "name": "v1.3.1",
        "release_id": 73770546,
        "tag": "v1.3.1",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/73770546",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/73770546",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v1.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CunliangGeng",
          "type": "User"
        },
        "date_created": "2022-07-21T14:53:56Z",
        "date_published": "2022-07-21T14:58:33Z",
        "description": "## [v1.3.0](https://github.com/NPLinker/nplinker/tree/v1.3.0) (2022-07-21)\r\n\r\n[Full Changelog](https://github.com/NPLinker/nplinker/compare/v1.2.0...v1.3.0)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Packaging [\\#15](https://github.com/NPLinker/nplinker/issues/15)\r\n\r\n**Closed issues:**\r\n\r\n- **Restructure repo with python template from eScience Center**  [\\#71](https://github.com/NPLinker/nplinker/issues/71)\r\n- Create independent repo for webapp? [\\#72](https://github.com/NPLinker/nplinker/issues/72)\r\n- Update wiki page [\\#64](https://github.com/NPLinker/nplinker/issues/64)\r\n- something goes wrong in the step for \"MetcalfScoring.setup preprocessing dataset\" [\\#57](https://github.com/NPLinker/nplinker/issues/57)\r\n- Parsing strains in GNPS FBMN output needs to be more flexible [\\#50](https://github.com/NPLinker/nplinker/issues/50)\r\n- Rosetta Score issue [\\#39](https://github.com/NPLinker/nplinker/issues/39)\r\n- Loading FBMN-GNPS and Bigscape output data into NPLinker error. [\\#35](https://github.com/NPLinker/nplinker/issues/35)\r\n- Remove requirements.txt file [\\#6](https://github.com/NPLinker/nplinker/issues/6)\r\n- Matching compound names from GNPS to MiBIG [\\#3](https://github.com/NPLinker/nplinker/issues/3)\r\n\r\n**Merged pull requests:**\r\n\r\n- Bump numpy from 1.21.0 to 1.22.0 [\\#70](https://github.com/NPLinker/nplinker/pull/70) ([dependabot[bot]](https://github.com/apps/dependabot))\r\n- NpclassScore expand notebooks [\\#69](https://github.com/NPLinker/nplinker/pull/69) ([louwenjjr](https://github.com/louwenjjr))",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v1.3.0",
        "name": "v1.3.0",
        "release_id": 72537351,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/72537351",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/72537351",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andrewramsay",
          "type": "User"
        },
        "date_created": "2022-06-07T17:27:19Z",
        "date_published": "2022-06-07T17:28:07Z",
        "description": "v1.2.0 \r\n\r\n`docker pull andrewramsay/nplinker:v1.2.0`",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v1.2.0",
        "name": "Version 1.2.0",
        "release_id": 68864649,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/68864649",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/68864649",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andrewramsay",
          "type": "User"
        },
        "date_created": "2021-11-26T17:13:42Z",
        "date_published": "2021-11-26T17:17:17Z",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v1.1.3",
        "name": "Version 1.1.3",
        "release_id": 54147643,
        "tag": "v1.1.3",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v1.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/54147643",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/54147643",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v1.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andrewramsay",
          "type": "User"
        },
        "date_created": "2021-09-23T15:36:50Z",
        "date_published": "2021-09-23T15:39:17Z",
        "description": "v1.1.2",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v1.1.2",
        "name": "Version 1.1.2",
        "release_id": 50145530,
        "tag": "v1.1.2",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/50145530",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/50145530",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andrewramsay",
          "type": "User"
        },
        "date_created": "2021-09-13T14:30:58Z",
        "date_published": "2021-09-13T14:31:23Z",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v1.1.1",
        "name": "Version 1.1.1",
        "release_id": 49461607,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/49461607",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/49461607",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andrewramsay",
          "type": "User"
        },
        "date_created": "2021-09-04T16:29:23Z",
        "date_published": "2021-09-04T16:30:25Z",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v1.1",
        "name": "v1.1",
        "release_id": 49013256,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/49013256",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/49013256",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sdrogers",
          "type": "User"
        },
        "date_created": "2021-03-19T10:14:05Z",
        "date_published": "2021-04-12T08:10:09Z",
        "description": "Initial release of NPLinker.",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v1.0",
        "name": "v1.0",
        "release_id": 41262972,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/41262972",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/41262972",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sdrogers",
          "type": "User"
        },
        "date_created": "2020-12-11T10:56:41Z",
        "date_published": "2021-04-12T11:13:26Z",
        "description": "Code release for NPLinker paper PLoS Computational Biology paper",
        "html_url": "https://github.com/NPLinker/nplinker/releases/tag/v.0.1",
        "name": "NPLinker paper release",
        "release_id": 41272101,
        "tag": "v.0.1",
        "tarball_url": "https://api.github.com/repos/NPLinker/nplinker/tarball/v.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/NPLinker/nplinker/releases/41272101",
        "value": "https://api.github.com/repos/NPLinker/nplinker/releases/41272101",
        "zipball_url": "https://api.github.com/repos/NPLinker/nplinker/zipball/v.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirement",
        "parent_header": [
          "Natural Products Linker (NPLinker)",
          "Setup and usage"
        ],
        "type": "Text_excerpt",
        "value": "- Linux, MacOS or [Windows with WSL](https://learn.microsoft.com/en-us/windows/wsl/)\n- Python version \u22653.9\n\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:59:41",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Testing",
        "parent_header": [
          "Natural Products Linker (NPLinker)",
          "Setup and usage"
        ],
        "type": "Text_excerpt",
        "value": "To run the tests, you need to clone this repo and install the development dependencies:\n\n```shell\n# Create a new virtual environment\npython -m venv env\nsource env/bin/activate\n\n# Clone the repository and install the development dependencies\ngit clone https://github.com/NPLinker/nplinker.git\ncd nplinker\npip install -e \".[dev]\"\ninstall-nplinker-deps\n```\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Unit tests",
        "parent_header": [
          "Natural Products Linker (NPLinker)",
          "Setup and usage",
          "Testing"
        ],
        "type": "Text_excerpt",
        "value": "To run the unit tests, you can use the following command:\n\n```shell\npytest\n```\nPytest will use all available CPU cores to run the unit tests in parallel.\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Integration tests",
        "parent_header": [
          "Natural Products Linker (NPLinker)",
          "Setup and usage",
          "Testing"
        ],
        "type": "Text_excerpt",
        "value": "To run the integration tests, you can use the following command:\n\n```shell\npytest -n1 tests/integration\n```\nThe `-n1` is to use one CPU core to run the tests. Change it to `-n2` if you want to use two CPU cores to run in parallel.\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Natural Products Linker (NPLinker)",
          "Setup and usage"
        ],
        "type": "Text_excerpt",
        "value": "See the [documentation](https://nplinker.github.io/nplinker) for more information about how to use NPLinker.\n"
      },
      "source": "https://raw.githubusercontent.com/NPLinker/nplinker/dev/README.md",
      "technique": "header_analysis"
    }
  ]
}