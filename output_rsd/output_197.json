{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reuse and acknowledgement",
        "type": "Text_excerpt",
        "value": "We are actively developing the code at the moment, so it may be subject to\nchange. We aim for backward compatability from v3.0.0 onward. We encourage anyone who is interested in re-using the code to get in\ntouch on the discussion pages. We may be able to help and you may be able to help us getting rid off bugs.\n\nIf you use the code for a publication, please cite it using the [DOI of the\nappropriate release](https://doi.org/10.5281/zenodo.7010594) and the\nfollowing paper:\n[Contrasting roles of interception and transpiration in the\nhydrological cycle - Part 2: Moisture\nrecycling](https://doi.org/10.5194/esd-5-471-2014)\n"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: WAM2layers\nmessage: >-\n  Please use the citation information if you used the\n  WAM2layers code in your (academic) work.\ntype: software\nauthors:\n  - given-names: Ruud J\n    family-names: van der Ent\n    affiliation: Delft University of Technology\n    orcid: 'https://orcid.org/0000-0001-5450-4333'\n  - given-names: Imme Bo\n    family-names: Benedict\n    affiliation: Wageningen University\n    orcid: 'https://orcid.org/0000-0002-1946-6332'\n  - given-names: Chris\n    family-names: Weijenborg\n    affiliation: Wageningen University\n    orcid: 'https://orcid.org/0000-0003-1663-2806'\n  - given-names: Bart\n    family-names: Schilperoort\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0003-4487-9822'\n  - given-names: Yang\n    family-names: Liu\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0002-1966-8460'\n  - given-names: Elizabeth\n    family-names: Barnes\n    affiliation: Colorado State University\n    orcid: 'https://orcid.org/0000-0001-7471-9980'\n  - given-names: Tolga\n    family-names: C\u00f6mert\n  - given-names: Niek\n    family-names: van de Koppel\n  - given-names: Liang\n    family-names: Guo\n    orcid: 'https://orcid.org/0000-0002-6004-3884'\n  - given-names: Vincent\n    family-names: de Feiter\n    orcid: 'https://orcid.org/0009-0006-6363-7932'\n  - given-names: Peter\n    family-names: Kalverla\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0002-5025-7862'\nrepository-code: 'https://github.com/WAM2layers/WAM2layers'\nabstract: >-\n  WAM2layers is an atmospheric moisture-tracking\n  model that can be used to determine where\n  precipitation originally evaporated (backtracking),\n  or where evaporated moisture eventually ends up\n  (forward tracking).\nkeywords:\n  - moisture tracking\n  - hydrological cycle\n  - meteorology\n  - python\n  - moisture recycling\n  - atmospheric rivers\nlicense: Apache-2.0\nversion: v3.0.0\ndate-released: '2023-04-05'\nidentifiers:\n  - description: Latest version of software\n    type: doi\n    value: \"10.5281/zenodo.7010594\"\n"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WAM2layers/WAM2layers"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-03-17T13:31:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T06:59:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Atmospheric moisture tracking"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9392036397239544,
      "result": {
        "original_header": "Atmospheric moisture tracking",
        "type": "Text_excerpt",
        "value": "This repository contains the source code of the WAM2layers moisture tracking\ncode. It can be used to determine where\nprecipitation originally evaporated (backtracking), or where evaporated moisture\neventually ends up (forward tracking). \nThe animation above illustrates the concept of backtracking: you first see the water\ncontent and fluxes move forward in time (left panel). Midway through, the animation\nreverses and the moisture from the \"source region\" is tracked backward in time (right panel). \n\nThis code is currently developed by a core team:\nRuud van der Ent (Delft University of Technology)\nImme Benedict (Wageningen University)\nChris Weijenborg (Wageningen University)\nPeter Kalverla (Netherlands eScienceCenter)\nBart Schilperoort (Netherlands eScience Center) \nWe are proudly part of [open-sustainable-technology](https://github.com/protontypes/open-sustainable-technology).\n \n"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9600539616907833,
      "result": {
        "original_header": "Other versions",
        "type": "Text_excerpt",
        "value": "This is the official codebase for the WAM-2layers moisture tracking model as of\n18/03/2022, but there are still several other (older) versions around: \n"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WAM2layers/WAM2layers/tree/main/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://wam2layers.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WAM2layers/WAM2layers/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/notebooks/make_tagging_region_track.ipynb"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/notebooks/make_tagging_region_track.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/notebooks/make_tagging_region.ipynb"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/notebooks/make_tagging_region.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/notebooks/make_moving_tagging_region.ipynb"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/notebooks/make_moving_tagging_region.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WAM2layers/WAM2layers/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "WAM2layers/WAM2layers"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Atmospheric moisture tracking"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/471007521"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/assets/123247866/f5cbcf8f-a45f-4e73-b304-00956b4e2ee5"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation\n\nThis page describes how to install WAM2Layers for various use cases, from using\nthe model as is, to more advanced use cases for when you want to make changes to\nthe code. By the end of this walkthrough you should have a working installation\nof WAM2Layers and understand how you ended up there.\n\n## Requirements\n\nTo run WAM2Layers you need a computer and some kind of command line, such as the\ndefault terminal included in Mac or Linux. On Windows you can either use Ubuntu\nthrough [WSL](https://learn.microsoft.com/en-us/windows/wsl/install),\nor use Powershell (which comes with Windows) as terminal.\nIf you're using existing infrastructure such as an managed JupyterLab environment \nor a supercomputer you will also typically have access to a terminal.\n\nYou also need an existing Python environment with pip (the default installer for\nPython packages; often it comes included with Python), or conda/mamba to create\na new python environment for using wam2layers.\n\nTo check if Python and pip are available on your system, you can\nuse `which`:\n\n```sh\n# Check if python and pip are installed\nwhich python3  # On windows use 'Get-Command python' in PowerShell\nwhich pip\n```\n\nIf this returns nothing, you don't have Python/pip. In that case, we recommend\ninstalling Python with conda. Use `which conda` to see if conda available on\nyour system. If it's not,\n[here](https://docs.anaconda.com/free/miniconda/index.html) is a really nice\nwalkthrough for installing miniconda.\n\nAlternatively, you can install Python by downloading it from [python.org](https://www.python.org).\nNote that if you are using Windows, do check \"add python to PATH\" in the installer.\nWe recommend using [virtual environments](https://docs.python.org/3/library/venv.html).\n\n(pip-install)=\n## Install WAM2layers in an existing Python environment\n\nIf you do have Python and pip installed, you can install wam2layers with one of the\nfollowing commands, depending on your requirements:\n\n```\npip install wam2layers\npip install wam2layers[viz]  # includes packages required for visualization\npip install wam2layers[dev]  # include all packages needed for working on the code\npip install wam2layers=3.1.0  # install a specific version (e.g. to reproduce previous results)\n```\n\nThe available versions are listed\n[here](https://pypi.org/project/wam2layers/#history).\n\n## Install WAM2layers in a fresh conda environment\n\nIf you don't have Python/pip, you can first create a new conda environment. An\nadditional advantage is that some packages (e.g. cartopy) might not be available\nfrom PyPI on all systems.\n\nTo set up a dedicated environment for your moisture tracking experiments do:\n\n```sh\n# Create a fresh conda environment with cartopy, and activate it\nconda create --name wamenv -c conda-forge python=3.11 cartopy\nconda activate wamenv\n```\n\nNow you can install it from PyPI [as shown above](pip-install), for example:\n```sh\npip install wam2layers\n```\n\n(source-install)=\n## Install WAM2layers from source\nIn principle, the previous steps are enough to start using WAM2Layers. In our\nexperience, however, it is often useful and insightful to obtain a copy of the\nsource code and create an editable installation. This will allow you to look at\nthe source code to see what is going on inside the model. You can then also make\n(experimental) changes to the model and see how it affects the results.\n\nThe source code for WAM2Layers is hosted on GitHub. Creating a local copy\nrequires git (tip: `which git`).\n\n```sh\n# Clone the source code repository\ngit clone https://github.com/WAM2layers/WAM2layers.git\n\n# Enter the source code directory\ncd WAM2layers/\n```\n\nBeware that the code on GitHub might include recent updates that have\nnot yet been included in the latest official release. This can be an advantage,\nbut also a downside as it may be a bit more unstable.\n\nLocal code can also be installed with pip, but instead of pointing to PyPI as\nabove, point to the current working directory (denoted by `.`). Additionally,\nadd the `--editable` flag, and `[complete]` to install all optional packages.\n\n```\n# Make an editable installation of the source code in this directory (.)\npip install --editable .[complete]\n```\n\nNow, if you edit the source code of WAM2layers, the model will run with your\nupdated code.\n\nIf you want to contribute your changes, raise an issue, request new features, et\ncetera (highly encouraged!), check out the [contribution guidelines](../develop)\nchapter of the documentation.\n\n## Verify your installation\n\nTo confirm that WAM2layers is installed correctly, and to see which version is\ninstalled, you can use the following commands:\n\n```\n# See if WAM2layers is installed on your system\nwhich wam2layers\n\n# See which version of WAM2Layers is installed\nwam2layers --version\n```\n"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/docs/userguide/installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 0.988715898620724,
      "result": {
        "original_header": "Atmospheric moisture tracking",
        "type": "Text_excerpt",
        "value": "https://user-images.githubusercontent.com/17080502/233834536-a82ca96d-e303-4592-a588-472097ebe6c5.mp4 \n"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WAM2layers/WAM2layers/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "WAM2layers"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "WAM2layers"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/wam2layers/"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 170850,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 87662,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BSchilperoort",
          "type": "User"
        },
        "date_created": "2024-06-21T14:33:23Z",
        "date_published": "2024-06-21T14:36:07Z",
        "description": "WAM2layers can be used to determine where precipitation originally evaporated (backtracking), or where evaporated moisture eventually ends up (forward tracking).\r\n\r\nVersion 3.1 comes with some small changes and fixes. Most importantly, pressure level data preprocessing has been restored and can be used again. Additionally, you can now specify the layer boundary during preprocessing in the configuration file.\r\n\r\nSpecific changes since v3.0.0:\r\n#### Changed\r\n\r\n- The user guide has been restructured [#367](https://github.com/WAM2layers/WAM2layers/pull/367)\r\n- The example config has been updated [#371](https://github.com/WAM2layers/WAM2layers/pull/371)\r\n- Added config options to allow for specifying the layer boundary during preprocessing [#391](https://github.com/WAM2layers/WAM2layers/pull/391).\r\n- The preprocessing module has been restructured to allow for easier implementation of new datasets [#391](https://github.com/WAM2layers/WAM2layers/pull/391)\r\n\r\n#### Fixed\r\n\r\n- Fixed bug in treatment of periodic boundaries ([#379](https://github.com/WAM2layers/WAM2layers/pull/379)).\r\n- Pressure level (ERA5) data can be preprocessed again [#387](https://github.com/WAM2layers/WAM2layers/pull/387)\r\n",
        "html_url": "https://github.com/WAM2layers/WAM2layers/releases/tag/v3.1.0",
        "name": "v3.1.0",
        "release_id": 161685220,
        "tag": "v3.1.0",
        "tarball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/tarball/v3.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/161685220",
        "value": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/161685220",
        "zipball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/zipball/v3.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BSchilperoort",
          "type": "User"
        },
        "date_created": "2024-04-05T13:46:07Z",
        "date_published": "2024-04-05T13:57:26Z",
        "description": "WAM2layers can be used to determine where precipitation originally evaporated (backtracking), or where evaporated moisture eventually ends up (forward tracking).\r\n\r\nVersion 3.0 comes with some big changes:\r\n\r\n- The internal code has been overhauled and cleaned up.\r\n  - Calculations are now done with kg m-2 (or equivalents) instead of m-3 units.\r\n  - Large performance improvements\r\n  - Bugs in the vertical flux calculation have been fixed\r\n  - Regression tests have been added to improve reliability\r\n- User friendliness has been greatly improved:\r\n  - wam2layers is now a proper python package, installable with `pip install wam2layers` and has a command line interface.\r\n  - Documentation has been added, [hosted on readthedocs](https://wam2layers.readthedocs.io/)\r\n  - Sample data is available\r\n  - Experiments are defined using yaml configuration files\r\n  - Standard analysis scripts are included in the package\r\n- The package includes preprocessing for ERA5 input data.\r\n- Input and output data have proper metadata\r\n\r\n\r\n**_Specific changes since v3.0.0-beta.6:_**\r\n**Added**\r\n\r\n- Updated the visualization: more generic for forward and backward tracking ([#318](https://github.com/WAM2layers/WAM2layers/pull/318)).\r\n- Add difference plots to the regression tests (`test_workflow.py`). The plots are uploaded as \"artifacts\" on Github Actions for easy inspection ([#319](https://github.com/WAM2layers/WAM2layers/pull/319)).\r\n- Added an export to file method for the configuration object (`wam2layers.config.Config`) to allow for easier testing of the command line interface ([#320](https://github.com/WAM2layers/WAM2layers/pull/320)).\r\n- Added a regression test for the forward tracking workflow ([#320](https://github.com/WAM2layers/WAM2layers/pull/320)).\r\n- Added support for Python 3.12 ([#333](https://github.com/WAM2layers/WAM2layers/pull/333)).\r\n- Adopted [NEP-29](https://numpy.org/neps/nep-0029-deprecation_policy.html) as version support policy ([#333](https://github.com/WAM2layers/WAM2layers/pull/333)).\r\n- The output files now contain many attributes for easier interpretation ([#334](https://github.com/WAM2layers/WAM2layers/pull/334)).\r\n- Publishing of the package to the Python Package Index ([PyPI](https://pypi.org/)) is now automated with a Github Actions workflow ([#342](https://github.com/WAM2layers/WAM2layers/pull/342)).\r\n- You can now view the version of wam2layers by running `wam2layers --version` ([#352](https://github.com/WAM2layers/WAM2layers/pull/352)).\r\n- Added a debug flag to the CLI: `wam2layers --debug`. This will make debug level statements be printed to the terminal as well ([#354](https://github.com/WAM2layers/WAM2layers/pull/354)).\r\n\r\n**Removed**\r\n\r\n- Support for Python 3.8 has been removed. This is in line with the new policy ([following NEP-29](https://numpy.org/neps/nep-0029-deprecation_policy.html)) ([#333](https://github.com/WAM2layers/WAM2layers/pull/333)).\r\n- The CLI command to generate snapshots was removed. This was deemed to unstable for a V3 release ([#362](https://github.com/WAM2layers/WAM2layers/pull/362)).\r\n\r\n**Fixed**\r\n\r\n- Fixed a bug in the profiler's `track_stability_correction` method ([#325](https://github.com/WAM2layers/WAM2layers/pull/325)).\r\n- Log message about \"lost moisture\" no longer includes boundary losses. Instead,\r\n  there is a separate log message for \"boundary transport\"\r\n  ([#343](https://github.com/WAM2layers/WAM2layers/pull/343))\r\n- Fixed a bug in the calculation of losses and gains for backtrack, where the moisture was compared to the wrong reference state ([#355](https://github.com/WAM2layers/WAM2layers/pull/355)).\r\n- The calculated gains are now absolute fields instead of relative to the reference field ([#355](https://github.com/WAM2layers/WAM2layers/pull/355)).\r\n\r\n**Changed**\r\n- The workflow tests use a temporary directory managed by pytest and the user's operating system, to avoid the `/tmp` folder polluting the workspace ([#320](https://github.com/WAM2layers/WAM2layers/pull/320)).\r\n- The workflow tests now make extensive use of pytest's [fixtures](https://docs.pytest.org/en/8.0.x/explanation/fixtures.html), which will make future test writing easier ([#320](https://github.com/WAM2layers/WAM2layers/pull/320)).\r\n- The `kvf` parameter can now be a floating point number instead of an integer ([#320](https://github.com/WAM2layers/WAM2layers/pull/320)).\r\n- The stability correction warning will now occur only when 10% more of the grid is corrected compared to last warning, or the correction factor is 10% stronger  ([#332](https://github.com/WAM2layers/WAM2layers/pull/332)).\r\n- The output files now contain a time dimension (incl. the coordinate) ([#334](https://github.com/WAM2layers/WAM2layers/pull/334)).\r\n- The package version is now defined in `src/wam2layers/__init__.py` ([#334](https://github.com/WAM2layers/WAM2layers/pull/334)).\r\n- The command line interface for tracking has changed. Tracking experiments are now started by doing `wam2layers track config.yml`. The tracking direction is retrieved from the new configuration entry \"tracking_direction\" ([#338](https://github.com/WAM2layers/WAM2layers/pull/338)).\r\n- The configuration parameter \"target_frequency\" has been renamed to \"timestep\". Also, under the hood, it is applied in a different location, closer to the core computations. This makes it easier to see the relation between the formula \"on paper\" and the implementation in the code ([#346](https://github.com/WAM2layers/WAM2layers/pull/346)).\r\n- The tests on Github Actions now use base python, not micromamba ([#351](https://github.com/WAM2layers/WAM2layers/pull/351)).\r\n- The units with which WAM2layers calculates internally are changed from m3 to kg/m2. This saves some unit conversions, makes it easier to see the relation between the equations and the code, and makes it easier to interpret the output and intermediate states. Visualization functions no longer need to convert back to kg/m2 ([#356](https://github.com/WAM2layers/WAM2layers/pull/356)).\r\n- The preprocessed data now mostly follows the CF-1.6 convention for netCDF files ([#363](https://github.com/WAM2layers/WAM2layers/pull/363)).\r\n- The output data now follows the CF-1.6 convention for netCDF files ([#363](https://github.com/WAM2layers/WAM2layers/pull/363)).\r\n",
        "html_url": "https://github.com/WAM2layers/WAM2layers/releases/tag/v3.0.0",
        "name": "v3.0.0",
        "release_id": 149955810,
        "tag": "v3.0.0",
        "tarball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/tarball/v3.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/149955810",
        "value": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/149955810",
        "zipball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/zipball/v3.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Peter9192",
          "type": "User"
        },
        "date_created": "2023-12-22T15:51:13Z",
        "date_published": "2023-12-22T15:54:27Z",
        "description": "This release brings back forward tracking and includes some important upgrades. Also note that several issues have been discovered and addressed. See the changelog for details.",
        "html_url": "https://github.com/WAM2layers/WAM2layers/releases/tag/v3.0.0-beta.6",
        "name": "v3.0.0-beta.6",
        "release_id": 134922791,
        "tag": "v3.0.0-beta.6",
        "tarball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/tarball/v3.0.0-beta.6",
        "type": "Release",
        "url": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/134922791",
        "value": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/134922791",
        "zipball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/zipball/v3.0.0-beta.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Imme1992",
          "type": "User"
        },
        "date_created": "2023-07-21T14:15:58Z",
        "date_published": "2023-07-21T14:21:26Z",
        "html_url": "https://github.com/WAM2layers/WAM2layers/releases/tag/v3.0.0-beta.5",
        "name": "v3.0.0-beta.5",
        "release_id": 113119200,
        "tag": "v3.0.0-beta.5",
        "tarball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/tarball/v3.0.0-beta.5",
        "type": "Release",
        "url": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/113119200",
        "value": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/113119200",
        "zipball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/zipball/v3.0.0-beta.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Imme1992",
          "type": "User"
        },
        "date_created": "2023-04-21T15:30:59Z",
        "date_published": "2023-04-21T15:32:48Z",
        "html_url": "https://github.com/WAM2layers/WAM2layers/releases/tag/v3.0.0-beta.4",
        "name": "v3.0.0-beta.4",
        "release_id": 100357347,
        "tag": "v3.0.0-beta.4",
        "tarball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/tarball/v3.0.0-beta.4",
        "type": "Release",
        "url": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/100357347",
        "value": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/100357347",
        "zipball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/zipball/v3.0.0-beta.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Imme1992",
          "type": "User"
        },
        "date_created": "2022-12-02T16:09:58Z",
        "date_published": "2022-12-02T16:12:02Z",
        "description": "See changelog\r\nRelease made on 12-2-2022",
        "html_url": "https://github.com/WAM2layers/WAM2layers/releases/tag/v3.0.0-beta.3",
        "name": "v3.0.0-beta.3",
        "release_id": 84834609,
        "tag": "v3.0.0-beta.3",
        "tarball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/tarball/v3.0.0-beta.3",
        "type": "Release",
        "url": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/84834609",
        "value": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/84834609",
        "zipball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/zipball/v3.0.0-beta.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Peter9192",
          "type": "User"
        },
        "date_created": "2022-08-19T14:09:33Z",
        "date_published": "2022-08-19T14:17:06Z",
        "description": "A substantial overhaul of the code base. Working towards a stable v3.",
        "html_url": "https://github.com/WAM2layers/WAM2layers/releases/tag/v3.0.0-beta.2",
        "name": "v3.0.0-beta.2",
        "release_id": 74839770,
        "tag": "v3.0.0-beta.2",
        "tarball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/tarball/v3.0.0-beta.2",
        "type": "Release",
        "url": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/74839770",
        "value": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/74839770",
        "zipball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/zipball/v3.0.0-beta.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Peter9192",
          "type": "User"
        },
        "date_created": "2019-04-05T11:24:04Z",
        "date_published": "2022-03-18T14:29:33Z",
        "description": "This release marks the point of departure from where we'll be working on an updated version of the code (v3). It was imported from https://github.com/Imme1992/moisture_tracking_mississippi",
        "html_url": "https://github.com/WAM2layers/WAM2layers/releases/tag/v3.0.0-beta",
        "name": "Reference version of code for development of v3",
        "release_id": 62196845,
        "tag": "v3.0.0-beta",
        "tarball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/tarball/v3.0.0-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/62196845",
        "value": "https://api.github.com/repos/WAM2layers/WAM2layers/releases/62196845",
        "zipball_url": "https://api.github.com/repos/WAM2layers/WAM2layers/zipball/v3.0.0-beta"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:33:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 40
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use",
        "type": "Text_excerpt",
        "value": "See the [documentation](https://wam2layers.readthedocs.io/en/latest/) for a more detailed description.\nAre you relatively new to setting up Python environments, command line interfaces etc.? Try this [video](https://youtu.be/QudlILlZnOg)\n\nStill questions? Follow the flowchart below.\n![FlowChart GitHub](https://github.com/WAM2layers/WAM2layers/assets/123247866/f5cbcf8f-a45f-4e73-b304-00956b4e2ee5)\n\n"
      },
      "source": "https://raw.githubusercontent.com/WAM2layers/WAM2layers/main/README.md",
      "technique": "header_analysis"
    }
  ]
}