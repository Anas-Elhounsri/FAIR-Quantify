{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: GrainLearning\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\ntype: software\nauthors:\n  - given-names: Hongyang\n    family-names: Cheng\n    email: h.cheng@utwente.nl\n    affiliation: University of Twente\n    orcid: 'https://orcid.org/0000-0001-7652-8600'\n  - given-names: Luisa\n    family-names: ' Orozco'\n    email: l.orozco@esciencecenter.nl\n    orcid: 'https://orcid.org/0000-0002-9153-650X'\n    affiliation: Netherlands eScience Center\n  - given-names: Retief\n    family-names: Lubbe\n    email: r.lubbe@utwente.nl\n    affiliation: University of Twente\n  - given-names: Aron\n    family-names: Jansen\n    orcid: 'https://orcid.org/0000-0002-4764-9347'\n    affiliation: Netherlands eScience Center\n    email: a.p.jansen@esciencecenter.nl\n  - given-names: Philipp\n    family-names: Hartmann\n    email: philipp.hartmann@newcastle.edu.au\n    orcid: 'https://orcid.org/0000-0002-2524-8024'\n    affiliation: University of Newcastle\n  - given-names: Klaus\n    family-names: Thoeni\n    orcid: 'https://orcid.org/0000-0001-7351-7447'\n    affiliation: University of Newcastle\n    email: klaus.thoeni@newcastle.edu.au\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.7123965\nrepository-code: 'https://github.com/GrainLearning/grainLearning/'\nurl: 'https://grainlearning.readthedocs.io/'\nabstract: >-\n  GrainLearning is a Bayesian uncertainty quantification and\n  propagation toolbox for computer simulations of granular\n  materials. The software is primarily used to infer and\n  quantify parameter uncertainties in computational models\n  of granular materials from observation data, also known as\n  inverse analyses or data assimilation. Implemented in\n  Python, GrainLearning can be loaded into a Python\n  environment to process the simulation and observation\n  data, or alternatively, as an independent tool where\n  simulation runs are done separately, e.g., via a shell\n  script.\nkeywords:\n  - Uncertainty quantification\n  - Granular materials\n  - Machine learning\n  - Calibration\n  - Bayesian inference\nlicense: GPL-2.0"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing GrainLearning",
        "parent_header": [
          "Welcome to GrainLearning!"
        ],
        "type": "Text_excerpt",
        "value": "Please choose from the following:\n\n- [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7123965.svg)](https://doi.org/10.5281/zenodo.7123965) A DOI for\n  citing the software.\n- The software paper: Cheng et al., (2024). GrainLearning: **A Bayesian uncertainty quantification toolbox for discrete and continuum numerical models of granular materials**. *Journal of Open Source Software*, 9(97), 6338, [10.21105/joss.06338](https://doi.org/10.21105/joss.06338)\n- H. Cheng, T. Shuku, K. Thoeni, P. Tempone, S. Luding, V. Magnanimo. **An iterative Bayesian filtering framework for\n  fast and automated calibration of DEM models**. _Comput. Methods Appl. Mech. Eng.,_ 350 (2019), pp.\n  268-294, [10.1016/j.cma.2019.01.027](https://doi.org/10.1016/j.cma.2019.01.027)\n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "Welcome to GrainLearning!"
        ],
        "type": "Text_excerpt",
        "value": "This package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and\nthe [NLeSC/python-template](https://github.com/NLeSC/python-template).\n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at h.cheng@utwente.nl. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org), version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/GrainLearning/grainLearning"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing guidelines\n\nWe welcome any kind of contribution to our software, from simple comment or question to a full fledged [pull request](https://help.github.com/articles/about-pull-requests/). Please read and follow our [Code of Conduct](CODE_OF_CONDUCT.md).\n\nA contribution can be one of the following cases:\n\n1. you have a question;\n1. you think you may have found a bug (including unexpected behavior);\n1. you want to make some kind of change to the code base (e.g. to fix a bug, to add a new feature, to update documentation);\n1. you want to make a new release of the code base.\n\nThe sections below outline the steps in each case.\n\n## You have a question\n\n1. use the [search](https://github.com/GrainLearning/grainlearning/issues) functionality to see if someone already filed the same issue;\n2. if your issue search did not yield any relevant results, make a new issue;\n3. apply the \"Question\" label; apply other labels when relevant.\n\n## You think you may have found a bug\n\n1. use the [search](https://github.com/GrainLearning/grainlearning/issues) functionality to see if someone already filed the same issue;\n1. if your issue search did not yield any relevant results, make a new issue, making sure to provide enough information to the rest of the community to understand the cause and context of the problem. Depending on the issue, you may want to include:\n    - the [SHA hashcode](https://help.github.com/articles/autolinked-references-and-urls/#commit-shas) of the commit that is causing your problem;\n    - some identifying information (name and version number) for dependencies you're using;\n    - information about the operating system;\n1. apply relevant labels to the newly created issue.\n\n## You want to make some kind of change to the code base\n\n1. (**important**) announce your plan to the rest of the community *before you start working*. This announcement should be in the form of a (new) issue;\n1. (**important**) wait until some kind of consensus is reached about your idea being a good idea;\n1. if needed, fork the repository to your own Github profile and create your own feature branch off of the latest master commit. While working on your feature branch, make sure to stay up to date with the master branch by pulling in changes, possibly from the 'upstream' repository (follow the instructions [here](https://help.github.com/articles/configuring-a-remote-for-a-fork/) and [here](https://help.github.com/articles/syncing-a-fork/));\n1. make sure the existing tests still work by running ``pytest``;\n1. add your own tests (if necessary);\n1. update or expand the documentation;\n1. update the `CHANGELOG.md` file with change;\n1. push your feature branch to (your fork of) the grainlearning repository on GitHub;\n1. create the pull request, e.g. following these [instructions](https://help.github.com/articles/creating-a-pull-request/).\n\nIn case you feel like you've made a valuable contribution, but you don't know how to write or run tests for it, or how to generate the documentation: don't let this discourage you from making the pull request; we can help you! Just go ahead and submit the pull request, but keep in mind that you might be asked to append additional commits to your pull request.\n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-23T06:07:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-21T18:55:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Bayesian uncertainty quantification toolbox for discrete and continuum numerical models of granular materials, developed by various projects of the University of Twente (NL), the Netherlands eScience Center (NL), University of Newcastle (AU), and Hiroshima University (JP)."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9896689408827777,
      "result": {
        "original_header": "Welcome to GrainLearning!",
        "type": "Text_excerpt",
        "value": "Bayesian uncertainty quantification for discrete and continuum numerical models of granular materials,\ndeveloped by various projects of the University of Twente (NL), the Netherlands eScience Center (NL), University of\nNewcastle (AU), and Hiroshima University (JP).\nBrowse to the [GrainLearning documentation](https://grainlearning.readthedocs.io/en/latest/) to get started.\n \n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9485477389140258,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- Infer and update model parameters using \"time\" series (sequence) data\n  via [Sequential Monte Carlo filtering](https://en.wikipedia.org/wiki/Particle_Filter)\n- Uniform, quasi-random sampling using [low-discrepancy sequences](https://en.wikipedia.org/wiki/Halton_sequence)\n- Iterative sampling by training a\n  nonparametric [Gaussian mixture model](https://scikit-learn.org/stable/modules/generated/sklearn.mixture.BayesianGaussianMixture.html)\n- [Surrogate modeling](https://grainlearning.readthedocs.io/en/latest/rnn.html) capability for \"time\" series data \n[//]: # (- Hybrid physics-based and data-driven model evaluation strategy)\n \n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9971325497030822,
      "result": {
        "original_header": "Community",
        "type": "Text_excerpt",
        "value": "The original development of `GrainLearning` is done by [Hongyang Cheng](https://hongyangcheng.weebly.com), in collaboration\nwith [Klaus Thoeni](https://www.newcastle.edu.au/profile/klaus-thoeni)\n, [Philipp Hartmann](https://www.newcastle.edu.au/profile/philipp-hartmann),\nand [Takayuki Shuku](https://sites.google.com/view/takayukishukuswebsite/home).\nThe software is currently maintained by [Hongyang Cheng](https://hongyangcheng.weebly.com) and [Stefan Luding](https://www2.msm.ctw.utwente.nl/sluding/) with the help\nof [Luisa Orozco](https://www.esciencecenter.nl/team/dr-luisa-orozco/)\nand [Retief Lubbe](https://tusail.eu/projects/esr-12.html).\nThe GrainLearning project receives contributions from students and collaborators.\n \n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://grainlearning.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/GrainLearning/grainLearning/wiki"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/GrainLearning/grainLearning/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/tutorials/data_driven/LSTM/rnn_calibration_GL.ipynb"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/tutorials/data_driven/LSTM/rnn_calibration_GL.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/tutorials/data_driven/LSTM/predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/tutorials/data_driven/LSTM/predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/tutorials/data_driven/LSTM/train_rnn.ipynb"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/tutorials/data_driven/LSTM/train_rnn.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/GrainLearning/grainLearning/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GrainLearning/grainLearning"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Welcome to GrainLearning!"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/grainlearning/rnn/sweep/run_sweep.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.7123965"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.06338"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.7123965"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://sonarcloud.io/api/project_badges/measure?project=GrainLearning_grainLearning&amp;metric=alert_status"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/10.21105/joss.06338/status.svg"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install using poetry",
        "parent_header": [
          "Welcome to GrainLearning!",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Install poetry following [these instructions](https://python-poetry.org/docs/#installation).\n1. Clone the repository: `git clone https://github.com/GrainLearning/grainLearning.git`\n1. Go to the source code directory: `cd grainLearning`\n1. Activate the virtual environment: `poetry shell`\n1. Install GrainLearning and its dependencies: `poetry install`\n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install using pip",
        "parent_header": [
          "Welcome to GrainLearning!",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Clone the repository: `git clone https://github.com/GrainLearning/grainLearning.git`\n1. Go to the source code directory: `cd grainLearning`\n1. Activate the virtual environment: `conda create --name grainlearning python=3.11 && conda activate grainlearning`\n1. Install GrainLearning and its dependencies: `pip install .`\n\n__Developers__ please refer to [README.dev.md](README.dev.md).\n\nTo install GrainLearning including the RNN module capabilities check [grainlearning/rnn/README.md](grainlearning/rnn/README.md).\n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "For Windows users",
        "parent_header": [
          "Welcome to GrainLearning!",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "- Installation using Windows Subsystem for Linux (WSL)\n  - Enable WSL1 or WSL2 according to the\n    instructions [here](https://learn.microsoft.com/en-us/windows/wsl/install-manual)\n  - Install GrainLearning using [poetry](#install-using-poetry) or [pip](#install-using-pip)\n- Installation using anaconda (if no WSLs are available on your Windows system)\n  - Open Anaconda Prompt and install GrainLearning using [pip](#install-using-pip). This should create a virtual\n    environment, named GrainLearning.\n  - Choose that environment from your anaconda navigator: click `Environments` and select `grainlearning` from the\n    drop-down menu\n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "One command installation",
        "parent_header": [
          "Welcome to GrainLearning!",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Stable versions of GrainLearning can be installed via `pip install grainlearning`\nHowever, you still need to clone the GrainLearning repository to run the tutorials.\n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/GrainLearning/grainLearning/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bayesian-inference, low-discrepancy-sequences, mixture-models, parameter-identification, sequential-monte-carlo, uncertainty-quantification"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v2.0",
        "spdx_id": "GPL-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-2.0",
        "value": "https://api.github.com/licenses/gpl-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n                            \n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://sonarcloud.io/api/project_badges/measure?project=GrainLearning_grainLearning&amp;metric=coverage"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "grainLearning"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "GrainLearning"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1368885,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 251572,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PureBasic",
        "size": 17548,
        "type": "Programming_language",
        "value": "PureBasic"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 813,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luisaforozco",
          "type": "User"
        },
        "date_created": "2024-04-20T08:17:32Z",
        "date_published": "2024-04-20T08:20:59Z",
        "description": "## What's Changed\r\n* Visuals by @chyalexcheng in https://github.com/GrainLearning/grainLearning/pull/60\r\n* Fix test errors while importing seaborn by @Retiefasuarus in https://github.com/GrainLearning/grainLearning/pull/61\r\n* Retiefasuarus/issue55 by @Retiefasuarus in https://github.com/GrainLearning/grainLearning/pull/62\r\n* Fix selftest errors by @chyalexcheng in https://github.com/GrainLearning/grainLearning/pull/63\r\n* 57 improving callback functions by @chyalexcheng in https://github.com/GrainLearning/grainLearning/pull/66\r\n* test workflow without python 3.8 by @chyalexcheng in https://github.com/GrainLearning/grainLearning/pull/67\r\n* Correct broken links to tutorials in rnn/README by @luisaforozco in https://github.com/GrainLearning/grainLearning/pull/70\r\n* Add note to windows installation via poetry by @luisaforozco in https://github.com/GrainLearning/grainLearning/pull/74\r\n* Update readthedocs script by @luisaforozco in https://github.com/GrainLearning/grainLearning/pull/76\r\n* Bump version and amend DOI by @luisaforozco in https://github.com/GrainLearning/grainLearning/pull/77\r\n* Fix release workflow by @luisaforozco in https://github.com/GrainLearning/grainLearning/pull/78\r\n\r\n\r\n**Full Changelog**: https://github.com/GrainLearning/grainLearning/compare/v2.0.2...v2.0.3",
        "html_url": "https://github.com/GrainLearning/grainLearning/releases/tag/v2.0.3",
        "name": "GrainLearning v2.0.3",
        "release_id": 152036092,
        "tag": "v2.0.3",
        "tarball_url": "https://api.github.com/repos/GrainLearning/grainLearning/tarball/v2.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/GrainLearning/grainLearning/releases/152036092",
        "value": "https://api.github.com/repos/GrainLearning/grainLearning/releases/152036092",
        "zipball_url": "https://api.github.com/repos/GrainLearning/grainLearning/zipball/v2.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "chyalexcheng",
          "type": "User"
        },
        "date_created": "2023-09-10T09:41:01Z",
        "date_published": "2023-09-17T06:39:11Z",
        "description": "**Features**\r\n- Infer and update model parameters using \"time\" series (sequence) data via [Sequential Monte Carlo filtering](https://en.wikipedia.org/wiki/Particle_Filter)\r\n- Uniform, quasi-random sampling using [low-discrepancy sequences](https://en.wikipedia.org/wiki/Halton_sequence)\r\n- Iterative sampling by training a nonparametric [Gaussian mixture model](https://scikit-learn.org/stable/modules/generated/sklearn.mixture.BayesianGaussianMixture.html)\r\n- [Surrogate modeling](https://grainlearning.readthedocs.io/en/latest/rnn.html) capability for \"time\" series data\r\n\r\n**Tutorials**\r\n- Linear regression with the [run_sim](https://github.com/GrainLearning/grainLearning/blob/main/tutorials/simple_regression/linear_regression/python_linear_regression_solve.py#L14) callback function of the [DynamicSystem](https://github.com/GrainLearning/grainLearning/blob/main/grainlearning/dynamic_systems.py) class, in [python_linear_regression_solve.py](https://github.com/GrainLearning/grainLearning/blob/main/tutorials/simple_regression/linear_regression/python_linear_regression_solve.py)\r\n- Interact with the numerical model of your choice via [run_sim](https://github.com/GrainLearning/grainLearning/blob/main/tutorials/simple_regression/linear_regression/linear_regression_solve.py#L11) , in [linear_regression_solve.py](https://github.com/GrainLearning/grainLearning/blob/main/tutorials/simple_regression/linear_regression/linear_regression_solve.py)\r\n- Load existing DEM simulation data and run GrainLearning for one iteration, in [oedo_load_and_resample.py](https://github.com/GrainLearning/grainLearning/blob/main/tutorials/oedo_compression/oedo_load_and_resample.py)\r\n- Example of GrainLearning integration with YADE in the directory [/tutorials/physics_based/](https://github.com/GrainLearning/grainLearning/tree/main/tutorials/physics_based)\r\n- LSTM module tutorials:\r\n  - [Train your LSTM model](https://github.com/GrainLearning/grainLearning/blob/main/tutorials/rnn/train_rnn.ipynb)\r\n  - [Predict using an LSTM model ](https://github.com/GrainLearning/grainLearning/blob/main/tutorials/rnn/predict.ipynb)\r\n  - [Use an LSTM model in the calibration workflow](https://github.com/GrainLearning/grainLearning/blob/main/tutorials/rnn/rnn_calibration_GL.ipynb)",
        "html_url": "https://github.com/GrainLearning/grainLearning/releases/tag/v2.0.2",
        "name": "GrainLearning v2.0.2",
        "release_id": 121439195,
        "tag": "v2.0.2",
        "tarball_url": "https://api.github.com/repos/GrainLearning/grainLearning/tarball/v2.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/GrainLearning/grainLearning/releases/121439195",
        "value": "https://api.github.com/repos/GrainLearning/grainLearning/releases/121439195",
        "zipball_url": "https://api.github.com/repos/GrainLearning/grainLearning/zipball/v2.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "chyalexcheng",
          "type": "User"
        },
        "date_created": "2022-09-17T16:45:05Z",
        "date_published": "2022-09-29T07:40:11Z",
        "description": "Rewrite GrainLearing package",
        "html_url": "https://github.com/GrainLearning/grainLearning/releases/tag/v1.0.1",
        "name": "GL rewrite v1.0.1",
        "release_id": 78538074,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/GrainLearning/grainLearning/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/GrainLearning/grainLearning/releases/78538074",
        "value": "https://api.github.com/repos/GrainLearning/grainLearning/releases/78538074",
        "zipball_url": "https://api.github.com/repos/GrainLearning/grainLearning/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "chyalexcheng",
          "type": "User"
        },
        "date_created": "2021-09-23T05:19:17Z",
        "date_published": "2022-09-29T08:37:54Z",
        "description": "GrainLearning version 0.2 contains the legacy code in Fortran and implementation in python.\r\nThe repository also contains data published in the paper, Cheng et al. (2019) An iterative Bayesian filtering framework for fast and automated calibration of DEM models. Comput. Methods Appl. Mech. Eng., 350 (2019), pp. 268-294",
        "html_url": "https://github.com/GrainLearning/grainLearning/releases/tag/v0.2",
        "name": "GrainLearning v0.2",
        "release_id": 78544592,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/GrainLearning/grainLearning/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/GrainLearning/grainLearning/releases/78544592",
        "value": "https://api.github.com/repos/GrainLearning/grainLearning/releases/78544592",
        "zipball_url": "https://api.github.com/repos/GrainLearning/grainLearning/zipball/v0.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 22:55:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Help and Support",
        "parent_header": [
          "Welcome to GrainLearning!"
        ],
        "type": "Text_excerpt",
        "value": "For assistance with the GrainLearning software, please create an issue on the GitHub Issues page.\n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorials",
        "parent_header": [
          "Welcome to GrainLearning!"
        ],
        "type": "Text_excerpt",
        "value": "1. Linear regression with\n   the [`run_sim`](tutorials/simple_regression/linear_regression/python_linear_regression_solve.py#L14)\n   callback function of the [`BayesianCalibration`](grainlearning/bayesian_calibration.py)\n   class,\n   in [python_linear_regression_solve.py](tutorials/simple_regression/linear_regression/python_linear_regression_solve.py)\n\n2. Nonlinear, multivariate regression\n\n3. Interact with the numerical model of your choice\n   via [`run_sim`](tutorials/simple_regression/linear_regression/linear_regression_solve.py#L11)\n   ,\n   in [linear_regression_solve.py](main/tutorials/simple_regression/linear_regression/linear_regression_solve.py)\n\n4. Load existing DEM simulation data and run GrainLearning for one iteration,\n   in [oedo_load_and_resample.py](tutorials/oedo_compression/oedo_load_and_resample.py)\n\n5. Example of GrainLearning integration into YADE\n    - [Two particle collision](tutorials/physics_based/two_particle_collision)\n    - [Triaxial compression](tutorials/physics_based/triaxial_compression)\n\n6. Data-driven module tutorials:\n    - [Train your LSTM model](tutorials/data_driven/LSTM/train_rnn.ipynb)\n    - [Predict using an LSTM model](tutorials/data_driven/LSTM/predict.ipynb)\n    - [Use an LSTM model in the calibration workflow](tutorials/data_driven/LSTM/rnn_calibration_GL.ipynb)\n"
      },
      "source": "https://raw.githubusercontent.com/GrainLearning/grainLearning/main/README.md",
      "technique": "header_analysis"
    }
  ]
}