{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: anonymoUUs\nmessage: Please cite this software as follows\ntype: software\nauthors:\n  - given-names: Casper\n    family-names: Kaandorp\n    email: c.s.kaandorp@uu.nl\n    affiliation: Utrecht University\n    orcid: 'https://orcid.org/0000-0001-6326-6680'\nversion: 0.0.8\ndoi: 10.5281/zenodo.5751861 \ndate-released: 2021-12-03"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UtrechtUniversity/anonymouus"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "anonymoUUs"
        ],
        "type": "Text_excerpt",
        "value": "You can contact the Utrecht University Research Engineering team [by email](mailto:research.engineering@uu.nl).\n\nProject Link: [https://github.com/UtrechtUniversity/anonymouus](https://github.com/UtrechtUniversity/anonymouus).\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "anonymoUUs"
        ],
        "type": "Text_excerpt",
        "value": "Contributions are what make the open source community an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\nYou can contribute by:\n1. Opening an Issue\n2. Suggesting edits to the code\n3. Suggesting edits to the documentation\n4. If you are unfamiliar with GitHub, feel free to [contact](#contact) us.\n\nTo contribute to content directly:\n\n1. Fork the project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-20T10:33:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-22T10:58:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python package to replace identifiable strings in multiple files and folders at once."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9532453266635753,
      "result": {
        "original_header": "anonymoUUs",
        "type": "Text_excerpt",
        "value": "anonymoUUs is a Python package for replacing identifiable strings in multiple files and folders at once. It can be used to pseudonymise data files and therefore contributes to protecting personal data.  \nThe goal of anonymoUUs is to substitute multiple identifying strings with pseudo-IDs to avoid tracable relationships between data batches. A single data batch typically consists of multiple nested folders that contain multiple files in multiple formats. AnonymoUUs runs through the **entire** file tree, looking for keywords to replace them with the provided substitute, including in:  \n- the file contents\n- file names\n- folder names\n- zipped folders  \n**Note**: Whereas replacing personal details with non-personal details can make data less identifiable, it does not guarantee anonymous data!\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9761079361632974,
      "result": {
        "original_header": "Supported file formats",
        "type": "Text_excerpt",
        "value": "AnonymoUUs can work with multiple text-based file types, like `.txt`, `.html`, `.json` and `.csv`. UTF-8 encoding is assumed. Users have several options to provide keyword-replacement mappings and to customize the behaviour of the software, visit the [usage section](#usage) for more information.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8688503244529413,
      "result": {
        "original_header": "Validation",
        "type": "Text_excerpt",
        "value": "The validation procedure determines the performance of anonymization software. \nIt compares results of the automated anonymization with a manually labeled ground-truth. \nThe validation procedure checks whether all occurrences of personal identifiable information, \nas detected in the manually labeled ground-truth, are correctly substituted.\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UtrechtUniversity/anonymouus/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/anonymouus/examples/Untitled.ipynb"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/anonymouus/examples/Untitled.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/anonymouus/examples/Example%20-%20generate%20new%20pseudocodes%20on%20the%20fly.ipynb"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/anonymouus/examples/Example%20-%20generate%20new%20pseudocodes%20on%20the%20fly.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/anonymouus/examples/get_started.ipynb"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/anonymouus/examples/get_started.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/UtrechtUniversity/anonymouus/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "UtrechtUniversity/anonymouus"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "anonymoUUs"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/281087099"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "anonymoUUs",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "To install anonymoUUs, in your terminal run:\n\n```sh\n$ pip install anonymoUUs\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Prepare",
        "parent_header": [
          "anonymoUUs",
          "Validation"
        ],
        "type": "Text_excerpt",
        "value": "Clone this repository to run the validation. \n\nMake sure you have these data present:\n* anonymized files\n* key file\n* manually labeled ground truth \nExample data can be found in the [test_data](test_data/) in this folder\n\nCreate your manually labeled file with dedicated software like [Label Studio](https://labelstud.io/).\nIn the graphical user interface you can easily add custom labels to the sensitive information in your text files\n\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.999932576583581,
      "result": {
        "original_header": "Validate",
        "type": "Text_excerpt",
        "value": "Run from the commandline\n```\n$ cd tests\n$ python validation.py [OPTIONS]\n\nOptions:\n  --anymdir  path to folder with anonymized data\n  --gtfile  path to labeled groundtruth file (json)\n  --keyfile  path to key file (csv)\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9537300309358119,
      "result": {
        "original_header": "Validate",
        "type": "Text_excerpt",
        "value": "Run from the commandline\n```\n$ cd tests\n$ python validation.py [OPTIONS]\n\nOptions:\n  --anymdir  path to folder with anonymized data\n  --gtfile  path to labeled groundtruth file (json)\n  --keyfile  path to key file (csv)\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/UtrechtUniversity/anonymouus/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "de-identification, python, text"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) [2021] [Martine de Vos]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "anonymouus"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "UtrechtUniversity"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 41272,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 25503,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://jupyter.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MartineDeVos",
          "type": "User"
        },
        "date_created": "2021-11-23T12:55:12Z",
        "date_published": "2021-12-03T10:36:15Z",
        "description": "Package has already been published on Pypi. \r\nArchiving releases on Zenodo is required to create an DOI.\r\nA DOI enables citation of the software",
        "html_url": "https://github.com/UtrechtUniversity/anonymouus/releases/tag/0.0.8",
        "name": "first-release-zenodo",
        "release_id": 54566643,
        "tag": "0.0.8",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/anonymouus/tarball/0.0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/anonymouus/releases/54566643",
        "value": "https://api.github.com/repos/UtrechtUniversity/anonymouus/releases/54566643",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/anonymouus/zipball/0.0.8"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "anonymoUUs",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "To install and run anonymoUUs, you need:\n- an active [Python](https://www.python.org/) installation;\n- a folder containing the data to be pseudonymised;\n- a keyword-replacement mapping file.\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:24:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example workflow",
        "parent_header": [
          "anonymoUUs",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "To get started with a simple example, you can go through this [Jupyter notebook](/anonymouus/examples/try_testing.ipynb), which runs through a minimal example of anonymoUUs.\n\nPrerequisites:\n- download the testdata from the [test_data folder](/anonymouus/tests/test_data)\n- make sure you have [jupyter notebook](https://jupyter.readthedocs.io/en/latest/install/notebook-classic.html) installed\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "anonymoUUs"
        ],
        "type": "Text_excerpt",
        "value": "To run the software, you need to take the following steps:\n1. Provide the path to the [data](#1-input-data) to be substituted\n2. Provide the [keyword-replacement mapping](#2-mapping)\n3. Create and customize the [Anonymize object](#3-create-an-anonymize-object)\n4. Perform the [substitutions](#4-substitute-data)\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Input Data",
        "parent_header": [
          "anonymoUUs",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Provide the path to the folder where the data resides, for example:\n```python\nfrom pathlib import Path\ntest_data = Path('../test_data/')\n```\n\nDetails:\n- Files are opened depending on their extension. Extensions that are not recognised will be skipped. \n- Errors will be ignored.\n- The standard version of this package assumes 'UTF-8' encoding. Since reading file-contents is done with a single function, it will be easy to adjust it, for example to also read other encodings. You can do so by overloading it in an extension:\n\n```python\n# standard reading function\ndef _read_file(self, source: Path):\n    f = open(source, 'r', encoding='utf-8', errors='ignore')\n    contents = list(f)\n    f.close()\n    return contents\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Mapping",
        "parent_header": [
          "anonymoUUs",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "In order to replace words or patterns, you need a replacement-mapping. AnonymoUUs allows mappings in the form of a dictionary, a csv file or a function. \n- In all cases, the keys will be replaced by the provided values.\n- It is also possible to provide string *patterns* to replace, using regular expressions (regex) in the keys. AnonymoUUs will replace every matching pattern with the provided replacement string.\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dictionary mapping",
        "parent_header": [
          "anonymoUUs",
          "Usage",
          "2. Mapping"
        ],
        "type": "Text_excerpt",
        "value": "To use a dictionary-type mapping, simply provide the (path to the) dictionary (file) and apply the `Anonymize` function. Note that you can provide a regular expression using `re.compile('regex')` to look for string patterns.\n\n```python\nfrom anonymoUUs import Anonymize\n\n# Using a dictionary and regular expression for subject 02:\nmy_dict = {\n    'Bob': 'subject-01',\n    re.compile('ca.*?er'): 'subject-02',\n}\n\nanonymize_dict = Anonymize(my_dict)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CSV file mapping",
        "parent_header": [
          "anonymoUUs",
          "Usage",
          "2. Mapping"
        ],
        "type": "Text_excerpt",
        "value": "To use a CSV for mapping, simply provide the path to the file. AnonymoUUs converts the provided csv file into a dictionary.\n\nRequirements:\n- The csv file needs to contain column headers (any format)\n- The csv file needs to have the keys (which need to be replaced, e.g., names) in the first column and the values (the replacements, e.g., numbers) in the second column.\n- The path can be a String, Path or PosixPath. \n\nIt is possible to add a regular expression as keyword in the csv-file. Make sure they start with the prefix `r#`:\n\n| key | value |\n| ---| --- |\n| `r#ca.*?er` | `replacement string` |\n\n```python\n# Using a csv file\nkey_csv = test_data/'keys.csv'\n\nanonymize_csv = Anonymize(key_csv)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Function mapping",
        "parent_header": [
          "anonymoUUs",
          "Usage",
          "2. Mapping"
        ],
        "type": "Text_excerpt",
        "value": "If you are replacing strings with a pattern, you can also use a function to 'calculate' the replacement string. The function takes a found match and should return its replacement. The function must have at least one input argument.\n\n```python\n# Define function\ndef replace(match, **kwargs):\n    result = 'default-replacement'\n    match = int(match)\n    threshold = kwargs.get(\"threshold\", 4000)\n    if match < threshold:\n        result = 'special-replacement'\n    return result\n\n# Subsitute using the defined replace function\nanon = Anonymize(replace, pattern=r'\\d{4}', threshold=1000)\nanon.substitute(\n    '/Users/casperkaandorp/Desktop/test.json', \n    '/Users/casperkaandorp/Desktop/result-folder'\n)\n```\nNote the possibility to provide additional arguments when you initialize an Anonymize object that will be passed to the replacement function (in this example, the `threshold` is passed to the `replace` function).\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Create an Anonymize object",
        "parent_header": [
          "anonymoUUs",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "By default, the Anonymize function is case sensitive. Basic use:\n```python\nfrom anonymoUUs import Anonymize\n\nanonymize_object = Anonymize(keys)\n```\n\nPerformance is probably best when your keywords can be generalized into a single regular expression. AnonymoUUs will search these patterns and replace them instead of matching the entire dictionary/csv-file against file contents or file/folder-paths. Example:\n\n```python\nanonymize_regex = Anonymize(my_dict, pattern=r'[A-B]\\d{4}')\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Arguments",
        "parent_header": [
          "anonymoUUs",
          "Usage",
          "3. Create an Anonymize object"
        ],
        "type": "Text_excerpt",
        "value": "The regular expressions that take care of the replacements can be modified by using the `flag` parameter. It takes one or more variables [which can be found here](https://docs.python.org/3/library/re.html). Multiple variables are combined by a bitwise OR (the | operator). Example for a case-insensitive substitution:\n\n```\nanonymize_regex = Anonymize(my_dict, flags=re.IGNORECASE)\n```\n\nBy using the `use_word_boundaries` argument (defaults to False), the algorithm ignores substring matches. If 'ted' is a key in your dictionary, without `use_word_boundaries` the algorithm will replace the 'ted' part in f.i. 'created_at'. You can overcome this problem by setting `use_word_boundaries` to True. It will put the `\\b`-anchor around your regex pattern or dictionary keys. The beauty of the boundary anchors is that '@' is considered a boundary as well, and thus names in email addresses can be replaced. Example:\n\n```\nanonymize_regex = Anonymize(my_dict, use_word_boundaries=True)\n```\n\nIt is also possible to specify how to re-zip unzipped folders:\n\n```python\n# specifying a zip-format to zip unpacked archives after processing (.zip is default)\nanonymize_zip = Anonymize('/Users/casper/Desktop/keys.csv', zip_format='gztar')\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Substitute data",
        "parent_header": [
          "anonymoUUs",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The `substitute` method is the step where the specified keys will be replaced by the replacements. It will replace all occurrences of the specified words with the substutions, in all files in the provided source folder.\n\nBasic use:\n```python\nanonymize_object.substitute(source_path, target_path)\n```\n\nArguments:\n- `source_path` (required) path to the original file, folder or zip-archive to perform the substitutions on, either a string or a [Path](https://docs.python.org/3/library/pathlib.html#basic-use) object\n- `target_path` (optional): a string or [Path](https://docs.python.org/3/library/pathlib.html#basic-use) object indicating whre the results need to be written. The path will be created if it does not yet exist.\n\nIf `target_path` is provided, anonymoUUs will create a processed copy of the source into the target folder. If the source is a single file, and the file path does not contain elements that will be replaced, and the target folder is identical to the source folder, then the processed result will get a 'copy' extension to prevent overwriting.\n\nWhen `target_path` is omitted, the source will be overwritten by a processed version of it.\n\n```python\n# process the datadownload.zip file, replace all patterns and write a copy to the 'bucket' folder.\nanonymize_regex.substitute(\n    '/Users/casper/Desktop/datadownload.zip', \n    '/Users/casper/Desktop/bucket'\n)\n\n# process the 'download' folder and replace the original by its processed version\nanonymize_regex.substitute('/Users/casper/Desktop/download')\n\n# process a single file, and replace it\nanonymize_regex.substitute('/Users/casper/Desktop/my_file.json')\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Attribution and academic use",
        "parent_header": [
          "anonymoUUs"
        ],
        "type": "Text_excerpt",
        "value": "The code in this project is licensed with [MIT](LICENSE.md).\nThis software is archived at Zenodo [![DOI](https://zenodo.org/badge/281087099.svg)](https://zenodo.org/badge/latestdoi/281087099)\nPlease cite this software using the metadata in the [citation file](CITATION.cff)\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/anonymouus/main/README.md",
      "technique": "header_analysis"
    }
  ]
}