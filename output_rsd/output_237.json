{
  "application_domain": [
    {
      "confidence": 14.54,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MD-Studio/cerise"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-01T10:55:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-10-06T21:21:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A REST service for running CWL workflows on remote clusters"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8700686041676349,
      "result": {
        "original_header": "Cerise",
        "type": "Text_excerpt",
        "value": "This is a simple REST service that can run (some) CWL jobs on some remote\ncompute resource. It uses a REST API as its interface and Cerulean\nto run jobs remotely. \nThe implementation is fairly complete, and the main things needed are some\nreal-world testing, bug fixing, and polish. \n"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "Cerise"
        ],
        "type": "Text_excerpt",
        "value": "Cerise is a generic service for running CWL workflows on compute resources (i.e.\nclusters, supercomputers, and simply remote machines). It tries to offer a\nconsistent environment for workflows, so that a workflow sent to resource A will\nwork unchanged on resource B as well.\n\nTo achieve this, and to offer a bit of safety and perhaps security, Cerise does\nnot allow running arbitrary CWL command line tools. Instead, it expects the user\nto submit a workflow document that refers to predefined steps built into the\nservice.\n\nDefining these steps, and adding them to the service, is called specialising the\nservice. A specialisation of Cerise is always specific to a project (which\ndetermines which steps are available and what inputs and outputs they have), and\nto a compute resource (which determines how they are implemented). Thus, two\nworkflows sent to two different specialisations to the same project, but to\ndifferent compute resources, should give the same result (assuming the\ncalculation is deterministic!).\n\nDocumentation on how to specialise Cerise may be found in docs/specialising.rst.\nOther documentation there covers configuring the Cerise service itself (i.e.\nport numbers, logging configuration, etc.). There is also a requirements\ndocument there, a detailed description of the design, and source code\ndocumentation. You can also read the documentation online at\nhttp://cerise.readthedocs.io/en/develop/\n\n"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://cerise.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MD-Studio/cerise/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MD-Studio/cerise/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MD-Studio/cerise"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Cerise"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/docs/examples/specialisation/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/docs/examples/specialisation/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/docs/examples/specialisation/api/example/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/docs/examples/specialisation/api/example/files/add_heading.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/conf/docker-init.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/83544633"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Cerise"
        ],
        "type": "Text_excerpt",
        "value": "Cerise can be run directly on a host, or in a Docker container. A local\ninstallation is created as follows:\n\nclone the repository\n    `git clone git@github.com:MD-Studio/cerise.git`\n\nchange into the top-level directory\n    `cd cerise`\n\ninstall using\n    `pip3 install .`\n\nSteps and supporting files may then be placed in the api/ directory to\nspecialise the service. For a detailed explanation, see http://cerise.readthedocs.io/en/develop/specialising.html.\n\nTo build the Docker image, use\n    `docker build -t cerise .`\n\nand then start a container using\n    `docker run --name=cerise -p 29593:29593 cerise`\n\nNote that the docker image gets its `config.yml` from `conf/docker-config.yml` in\nthe source tree.\n\nHowever, this will run a plain, unspecialised Cerise, which is not very\nuseful, as it runs jobs locally inside the container, and it doesn't contain any\nsteps to execute. To use Cerise in Docker, you should make a new, specialised\nDocker image based on the standard Cerise image, and start that instead.\nPlease refer to http://cerise.readthedocs.io/en/develop/specialising.html for further instructions.\n\n"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contribution guide",
        "parent_header": [
          "Cerise"
        ],
        "type": "Text_excerpt",
        "value": "Cerise follows the Google Python style guide, with Sphinxdoc docstrings for module public functions. If you want to\ncontribute to the project please fork it, create a branch including your addition, and create a pull request.\n\nThe tests use relative imports and can be run directly after making\nchanges to the code. To run all tests use `make test` in the main directory.\nThis will also run the integration tests, which take several minutes to complete\nas a bunch of Docker containers is built, started, and stopped.\nWhile developing, you may want to run `make fast_test` to skip the expensive\nintegration test.\n\nBefore creating a pull request please ensure the following:\n* You have written unit tests to test your additions\n* All unit tests pass\n* The examples still work and produce the same (or better) results\n* The code is compatible with Python 3.5\n* An entry about the change or addition is created in CHANGELOG.md\n* You've added yourself as contributing author\n\nContributing authors so far:\n* Lourens Veen\n"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MD-Studio/cerise/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "* Copyright 2016 Netherlands eScience Center\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.travis-ci.org/MD-Studio/cerise.svg?branch=develop"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cerise"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "MD-Studio"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 237631,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Common Workflow Language",
        "size": 3358,
        "type": "Programming_language",
        "value": "Common Workflow Language"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2584,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2447,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 393,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2019-01-23T08:14:17Z",
        "date_published": "2019-05-28T21:25:20Z",
        "description": "Release 0.2.3",
        "html_url": "https://github.com/MD-Studio/cerise/releases/tag/0.2.3",
        "name": "0.2.3",
        "release_id": 17640683,
        "tag": "0.2.3",
        "tarball_url": "https://api.github.com/repos/MD-Studio/cerise/tarball/0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/MD-Studio/cerise/releases/17640683",
        "value": "https://api.github.com/repos/MD-Studio/cerise/releases/17640683",
        "zipball_url": "https://api.github.com/repos/MD-Studio/cerise/zipball/0.2.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Cerise"
        ],
        "type": "Text_excerpt",
        "value": " * Python 3.5 or up\n\nOn the compute resource:\n * Python 2.7 with [CWLTool](https://github.com/common-workflow-language/cwltool), or\n * Python 3 with CWLTool or CWLTiny, the built-in CWL runner, or\n * Some other CWL runner and whichever dependencies it needs\n"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:39:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example usage",
        "parent_header": [
          "Cerise"
        ],
        "type": "Text_excerpt",
        "value": "In the `examples` directory, you will find some example Python scripts that\ncreate and execute jobs on the running service.\n"
      },
      "source": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/docs/examples/specialisation/test_workflow2.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/docs/examples/specialisation/test_workflow.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MD-Studio/cerise/develop/docs/examples/specialisation/test_workflow3.cwl"
      },
      "technique": "file_exploration"
    }
  ]
}