{
  "application_domain": [
    {
      "confidence": 28.12,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9352000659867116,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# YAML 1.2\n---\nabstract: \"Laserfarm provides a FOSS wrapper to Laserchicken, supporting the use of massive LiDAR point cloud data sets for macro-ecology, from data preparation to scheduling and execution of distributed processing across a cluster of compute nodes.\"\nauthors:\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Grootes\n    given-names: \"Meiert W.\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Ku\n    given-names: Ou\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Nattino\n    given-names: Francesco\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Bogaardt\n    given-names: Laurens\n  -\n    affiliation: \"Institute for Biodiversity and Ecosystem Dynamics, University of Amsterdam\"\n    family-names: Koma\n    given-names: Zs\u00f3fia\ncff-version: \"1.0.3\"\ndate-released: 2022-09-13\ndoi: \"10.5281/zenodo.3842780\"\nkeywords:\n  - \"airborne laser scanning\"\n  - \"point cloud\"\n  - \"distributed computing\"\nlicense: \"Apache-2.0\"\nmessage: \"If you use this software, please cite it using these metadata.\"\ntitle: \"Laserfarm: Laserchicken Framework for Applications in Research in Macro-ecology\"\nversion: \"0.2.0\"\n...\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Contributor Covenant Code of Conduct\n====================================\n\nOur Pledge\n==========\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our\nproject and our community a harassment-free experience for everyone,\nregardless of age, body size, disability, ethnicity, gender identity and\nexpression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\nOur Standards\n=============\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n-   Using welcoming and inclusive language\n-   Being respectful of differing viewpoints and experiences\n-   Gracefully accepting constructive criticism\n-   Focusing on what is best for the community\n-   Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n-   The use of sexualized language or imagery and unwelcome sexual\n    attention or advances\n-   Trolling, insulting/derogatory comments, and personal or political\n    attacks\n-   Public or private harassment\n-   Publishing others\\' private information, such as a physical or\n    electronic address, without explicit permission\n-   Other conduct which could reasonably be considered inappropriate in\n    a professional setting\n\nOur Responsibilities\n====================\n\nProject maintainers are responsible for clarifying the standards of\nacceptable behavior and are expected to take appropriate and fair\ncorrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit,\nor reject comments, commits, code, wiki edits, issues, and other\ncontributions that are not aligned to this Code of Conduct, or to ban\ntemporarily or permanently any contributor for other behaviors that they\ndeem inappropriate, threatening, offensive, or harmful.\n\nScope\n=====\n\nThis Code of Conduct applies both within project spaces and in public\nspaces when an individual is representing the project or its community.\nExamples of representing a project or community include using an\nofficial project e-mail address, posting via an official social media\naccount, or acting as an appointed representative at an online or\noffline event. Representation of a project may be further defined and\nclarified by project maintainers.\n\nEnforcement\n===========\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may\nbe reported by contacting the project team at\n<team-atlas@esciencecenter.nl>. All complaints will be reviewed and\ninvestigated and will result in a response that is deemed necessary and\nappropriate to the circumstances. The project team is obligated to\nmaintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted\nseparately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in\ngood faith may face temporary or permanent repercussions as determined\nby other members of the project\\'s leadership.\n\nAttribution\n===========\n\nThis Code of Conduct is adapted from the [Contributor\nCovenant](https://www.contributor-covenant.org), version 1.4, available\nat\n<https://www.contributor-covenant.org/version/1/4/code-of-conduct.html>\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eEcoLiDAR/Laserfarm"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Contributing guidelines\n=======================\n\nWe welcome any kind of contribution to our software, from simple comment\nor question to a full fledged [pull\nrequest](https://help.github.com/articles/about-pull-requests/). Please\nread and follow our [Code of Conduct](CODE_OF_CONDUCT.md).\n\nA contribution can be one of the following cases:\n\n1.  you have a question;\n2.  you think you may have found a bug (including unexpected behavior);\n3.  you want to make some kind of change to the code base (e.g. to fix a\n    bug, to add a new feature, to update documentation).\n\nThe sections below outline the steps in each case.\n\nYou have a question\n===================\n\n1.  use the search functionality\n    [here](https://github.com/eEcoLiDAR/Laserfarm/issues) to see\n    if someone already filed the same issue;\n2.  if your issue search did not yield any relevant results, make a new\n    issue;\n3.  apply the \\\"Question\\\" label; apply other labels when relevant.\n\nYou think you may have found a bug\n==================================\n\n1.  use the search functionality\n    [here](https://github.com/eEcoLiDAR/Laserfarm/issues) to see\n    if someone already filed the same issue;\n2.  if your issue search did not yield any relevant results, make a new issue, making sure to provide enough information to the rest of the community to understand the cause and context of the problem. Depending on the issue, you may want to include:\n\n    -   the [SHA hashcode](https://help.github.com/articles/autolinked-references-and-urls/#commit-shas)\n        of the commit that is causing your problem;\n    -   some identifying information (name and version number) for\n        dependencies you\\'re using;\n    -   information about the operating system;\n\n3.  apply relevant labels to the newly created issue.\n\nYou want to make some kind of change to the code base\n=====================================================\n\n1.  (**important**) announce your plan to the rest of the community\n    *before you start working*. This announcement should be in the form\n    of a (new) issue;\n2.  (**important**) wait until some kind of consensus is reached about\n    your idea being a good idea;\n3.  if needed, fork the repository to your own Github profile and create\n    your own feature branch off of the latest master commit. While\n    working on your feature branch, make sure to stay up to date with\n    the master branch by pulling in changes, possibly from the\n    \\'upstream\\' repository (follow the instructions\n    [here](https://help.github.com/articles/configuring-a-remote-for-a-fork/)\n    and [here](https://help.github.com/articles/syncing-a-fork/));\n4.  make sure the existing tests still work by running\n    `pytest tests`;\n5.  add your own tests (if necessary);\n6.  update or expand the documentation;\n7.  [push](http://rogerdudler.github.io/git-guide/) your feature branch\n    to (your fork of) the Laserfarm repository on GitHub;\n8.  create the pull request, e.g. following the instructions\n    [here](https://help.github.com/articles/creating-a-pull-request/).\n\nIn case you feel like you\\'ve made a valuable contribution, but you\ndon\\'t know how to write or run tests for it, or how to generate the\ndocumentation: don\\'t let this discourage you from making the pull\nrequest; we can help you! Just go ahead and submit the pull request, but\nkeep in mind that you might be asked to append additional commits to\nyour pull request.\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "Laserfarm"
        ],
        "type": "Text_excerpt",
        "value": "If you want to contribute to the development of Laserfarm,\nhave a look at the  [contribution guidelines](CONTRIBUTING.md).\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-30T14:34:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-26T14:39:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Laserchicken Framework for Applications in Research in Macro-ecology"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9993501400212805,
      "result": {
        "original_header": "Laserfarm",
        "type": "Text_excerpt",
        "value": "Laserfarm (Laserchicken Framework for Applications in Research in Macro-ecology) provides a FOSS wrapper to \n[Laserchicken](https://github.com/eEcoLiDAR/laserchicken) supporting the use of massive LiDAR point cloud data sets for \nmacro-ecology, from data preparation to scheduling and execution of distributed processing across a cluster of compute \nnodes.\n \n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9964147187001448,
      "result": {
        "original_header": "Applications and Current Limitations",
        "type": "Text_excerpt",
        "value": "This package has been tested on data provided in a metric-based 2D-projected Cartesian coordinate system, i.e. the \n[Actueel Hoogtebestand Nederland](https://www.pdok.nl/introductie/-/article/actueel-hoogtebestand-nederland-ahn3-). \nWhile some of the tools of Laserfarm could be applied to data in an ellipsoidal latitude/longitude coordinate system \nas well, this has not been tested and it is generally expected to fail. \n \n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "Laserfarm"
        ],
        "type": "Text_excerpt",
        "value": "The project's full documentation can be found [here](https://laserfarm.readthedocs.io/en/latest/).\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://laserfarm.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eEcoLiDAR/Laserfarm/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/workflow.ipynb"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/workflow.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "eEcoLiDAR/Laserfarm"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Laserfarm"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.3842780"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Laserfarm"
        ],
        "type": "Text_excerpt",
        "value": "Laserfarm requires the [PDAL](https://pdal.io) and [GDAL](https://gdal.org) libraries and the PDAL Python \nbindings. These packages are most easily installed through `conda` from the `conda-forge` channel:\n```shell\nconda install pdal python-pdal gdal -c conda-forge\n```\nLaserfarm can then be downloaded and installed using `pip`:\n```shell\npip install laserfarm\n```\nor using `git` + `pip`:\n```shell\ngit clone git@github.com:eEcoLiDAR/Laserfarm.git\ncd Laserfarm\npip install .\n```\nIn order to setup a new conda environment with Laserfarm and all its dependencies, the YAML file provided can be \nemployed:\n```shell\nconda env create -f environment.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Laserfarm"
        ],
        "type": "Text_excerpt",
        "value": "Copyright (c) 2022, Netherlands eScience Center\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Laserfarm"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "eEcoLiDAR"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/laserfarm/"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 169597,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 25085,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 475,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eEcoLiDAR/Laserfarm/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2022-09-13T08:13:19Z",
        "date_published": "2022-09-13T08:24:34Z",
        "description": "Fix issues to run on Windows, drops deprecated dependency on pylas (and lazperf) and uses laspy instead. For all changes, see CHANGELOG.md.",
        "html_url": "https://github.com/eEcoLiDAR/Laserfarm/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 76975113,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/76975113",
        "value": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/76975113",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2021-11-01T16:16:06Z",
        "date_published": "2021-11-01T16:27:11Z",
        "description": "Fix issues related to running Laserfarm on a Windows system",
        "html_url": "https://github.com/eEcoLiDAR/Laserfarm/releases/tag/v0.1.5",
        "name": "v0.1.5",
        "release_id": 52460691,
        "tag": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/tarball/v0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/52460691",
        "value": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/52460691",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/zipball/v0.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2021-06-29T09:55:24Z",
        "date_published": "2021-06-29T10:01:46Z",
        "description": "Include a fix to allow token authentication to the WebDAV storage",
        "html_url": "https://github.com/eEcoLiDAR/Laserfarm/releases/tag/v0.1.4",
        "name": "v0.1.4",
        "release_id": 45411579,
        "tag": "v0.1.4",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/tarball/v0.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/45411579",
        "value": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/45411579",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/zipball/v0.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2021-04-01T07:43:20Z",
        "date_published": "2021-04-01T07:46:04Z",
        "description": "This release fixes issues with a deprecated import of the GDAL package",
        "html_url": "https://github.com/eEcoLiDAR/Laserfarm/releases/tag/v0.1.3",
        "name": "v0.1.3",
        "release_id": 40803699,
        "tag": "v0.1.3",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/tarball/v0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/40803699",
        "value": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/40803699",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/zipball/v0.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2020-11-27T09:33:38Z",
        "date_published": "2020-11-27T09:36:52Z",
        "description": "A method for setting up multiple custom features is added to the data processing pipeline.",
        "html_url": "https://github.com/eEcoLiDAR/Laserfarm/releases/tag/v0.1.2",
        "name": "v0.1.2",
        "release_id": 34495837,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/34495837",
        "value": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/34495837",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2020-06-07T18:55:00Z",
        "date_published": "2020-06-07T18:58:10Z",
        "description": "This release includes some improvement in the memory management of the dask workers (see CHANGELOG.md for details).  ",
        "html_url": "https://github.com/eEcoLiDAR/Laserfarm/releases/tag/v0.1.1",
        "name": "v0.1.1",
        "release_id": 27305213,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/27305213",
        "value": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/27305213",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2020-05-25T09:58:47Z",
        "date_published": "2020-05-25T10:02:53Z",
        "description": "This is the first release of Laserfarm: the Laserchicken Framework for Applications in Research in Macro-ecology!  The project's full documentation can be found [here](https://laserfarm.readthedocs.io/en/latest/).",
        "html_url": "https://github.com/eEcoLiDAR/Laserfarm/releases/tag/v0.1.0",
        "name": "v0.1.0",
        "release_id": 26857326,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/26857326",
        "value": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/releases/26857326",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/Laserfarm/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:55:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ]
}