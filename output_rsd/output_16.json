{
  "application_domain": [
    {
      "confidence": 30.26,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# YAML 1.2\n--- \nauthors: \n  - \n    affiliation: \"ASTRON, The Netherlands Institute for Radio Astronomy\"\n    family-names: Yatawatta\n    given-names: Sarod\n    orcid: \"https://orcid.org/0000-0001-5619-4017\"\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Diblen\n    given-names: Faruk\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Spreeuw\n    given-names: Hanno\n    orcid: \"https://orcid.org/0000-0002-5057-0322\"\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Werkhoven \n    name-particle: van\n    given-names: Ben\n\ncff-version: \"1.0.3\"\ncommit: 1e2c24b31ada7e46d65b9f8b6e98c48e4845c724 \ndate-released: 2017-11-16\ndoi: 10.5281/zenodo.1051169\nkeywords: \n  - \"Radio Astronomy\"\n  - \"Calibration\"\n  - \"GPU\"\n  - \"Spark\"\nlicense: Apache-2.0\nmessage: \"If you use this software, please cite it using these metadata.\"\nrepository-code: \"https://github.com/nlesc-dirac/sagecal\"\ntitle: sagecal \nversion: \"1.0\"\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Code of Conduct\n\n## 1. Purpose\n\nA primary goal of SAGECal is to be inclusive to the largest number of contributors, with the most varied and diverse backgrounds possible. As such, we are committed to providing a friendly, safe and welcoming environment for all, regardless of gender, sexual orientation, ability, ethnicity, socioeconomic status, and religion (or lack thereof).\n\nThis code of conduct outlines our expectations for all those who participate in our community, as well as the consequences for unacceptable behavior.\n\nWe invite all those who participate in SAGECal to help us create safe and positive experiences for everyone.\n\n## 2. Open Source Citizenship\n\nA supplemental goal of this Code of Conduct is to increase open source citizenship by encouraging participants to recognize and strengthen the relationships between our actions and their effects on our community.\n\nCommunities mirror the societies in which they exist and positive action is essential to counteract the many forms of inequality and abuses of power that exist in society.\n\nIf you see someone who is making an extra effort to ensure our community is welcoming, friendly, and encourages all participants to contribute to the fullest extent, we want to know.\n\n## 3. Expected Behavior\n\nThe following behaviors are expected and requested of all community members:\n\n*   Participate in an authentic and active way. In doing so, you contribute to the health and longevity of this community.\n*   Exercise consideration and respect in your speech and actions.\n*   Attempt collaboration before conflict.\n*   Refrain from demeaning, discriminatory, or harassing behavior and speech.\n*   Be mindful of your surroundings and of your fellow participants. Alert community leaders if you notice a dangerous situation, someone in distress, or violations of this Code of Conduct, even if they seem inconsequential.\n*   Remember that community event venues may be shared with members of the public; please be respectful to all patrons of these locations.\n\n## 4. Unacceptable Behavior\n\nThe following behaviors are considered harassment and are unacceptable within our community:\n\n*   Violence, threats of violence or violent language directed against another person.\n*   Sexist, racist, homophobic, transphobic, ableist or otherwise discriminatory jokes and language.\n*   Posting or displaying sexually explicit or violent material.\n*   Posting or threatening to post other people\u2019s personally identifying information (\"doxing\").\n*   Personal insults, particularly those related to gender, sexual orientation, race, religion, or disability.\n*   Inappropriate photography or recording.\n*   Inappropriate physical contact. You should have someone\u2019s consent before touching them.\n*   Unwelcome sexual attention. This includes, sexualized comments or jokes; inappropriate touching, groping, and unwelcomed sexual advances.\n*   Deliberate intimidation, stalking or following (online or in person).\n*   Advocating for, or encouraging, any of the above behavior.\n*   Sustained disruption of community events, including talks and presentations.\n\n## 5. Consequences of Unacceptable Behavior\n\nUnacceptable behavior from any community member, including sponsors and those with decision-making authority, will not be tolerated.\n\nAnyone asked to stop unacceptable behavior is expected to comply immediately.\n\nIf a community member engages in unacceptable behavior, the community organizers may take any action they deem appropriate, up to and including a temporary ban or permanent expulsion from the community without warning (and without refund in the case of a paid event).\n\n## 6. Reporting Guidelines\n\nIf you are subject to or witness unacceptable behavior, or have any other concerns, please notify a community organizer as soon as possible. yatawatta@astron.nl, f.diblen@esciencecenter.nl.\n\n\n\nAdditionally, community organizers are available to help community members engage with local law enforcement or to otherwise help those experiencing unacceptable behavior feel safe. In the context of in-person events, organizers will also provide escorts as desired by the person experiencing distress.\n\n## 7. Addressing Grievances\n\nIf you feel you have been falsely or unfairly accused of violating this Code of Conduct, you should notify NLeSC Dirac team with a concise description of your grievance. Your grievance will be handled in accordance with our existing governing policies.\n\n\n\n## 8. Scope\n\nWe expect all community participants (contributors, paid or otherwise; sponsors; and other guests) to abide by this Code of Conduct in all community venues\u2013online and in-person\u2013as well as in all one-on-one communications pertaining to community business.\n\nThis code of conduct and its related procedures also applies to unacceptable behavior occurring outside the scope of community activities when such behavior has the potential to adversely affect the safety and well-being of community members.\n\n## 9. Contact info\n\nyatawatta@astron.nl\nf.diblen@esciencecenter.nl\nh.spreeuw@esciencecenter.nl\n\n## 10. License and attribution\n\nThis Code of Conduct is distributed under a [Creative Commons Attribution-ShareAlike license](http://creativecommons.org/licenses/by-sa/3.0/).\n\nPortions of text derived from the [Django Code of Conduct](https://www.djangoproject.com/conduct/) and the [Geek Feminism Anti-Harassment Policy](http://geekfeminism.wikia.com/wiki/Conference_anti-harassment/Policy).\n\nRetrieved on November 22, 2016 from [http://citizencodeofconduct.org/](http://citizencodeofconduct.org/)\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nlesc-dirac/sagecal"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\nsee [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md)\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "SAGECAL"
        ],
        "type": "Text_excerpt",
        "value": "Read the [contributing guide](https://github.com/nlesc-dirac/sagecal/blob/master/CONTRIBUTING.md)\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-02T15:29:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-15T21:49:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SAGECal is a fast, memory efficient and GPU accelerated radio interferometric calibration program. It supports all source models including points, Gaussians and Shapelets. Distributed calibration using MPI and consensus optimization is enabled. Both spectral and spatial priors can be used as constraints. Tools to build/restore sky models are included."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1) Input Data",
        "parent_header": [
          "SAGECAL",
          "Step by Step Introduction:"
        ],
        "type": "Text_excerpt",
        "value": "Input to sagecal must be in CASA MS format, make sure to create a column in the MS to write output data as well. The data can be in raw or averaged form, also initial calibration using other software can be also applied.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2a) Make an image of your MS (using ExCon/casapy).",
        "parent_header": [
          "SAGECAL",
          "Step by Step Introduction:",
          "2) Sky Model:"
        ],
        "type": "Text_excerpt",
        "value": "Use Duchamp to create a mask for the image. Use buildsky to create a sky model. (see the README file on top level directory). Also create a proper cluster file.\nSpecial options to buildsky: -o 1 (NOTE: not -o 2)\n\nAlternatively, create these files by hand according to the following formats.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2b) Cluster file format:",
        "parent_header": [
          "SAGECAL",
          "Step by Step Introduction:",
          "2) Sky Model:"
        ],
        "type": "Text_excerpt",
        "value": "cluster_id chunk_size source1 source2 ...\ne.g.\n```\n\n0 1 P0C1 P0C2\n2 3 P11C2 P11C1 P13C1\n\n```\n\nNote: putting -ve values for cluster_id will not subtract them from data.\nchunk_size: find hybrid solutions during one solve run. Eg. if -t 120 is used \nto select 120 timeslots, cluster 0 will find a solution using the full 120 timeslots while cluster 2 will solve for every 120/3=40 timeslots.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2c) Sky model format:",
        "parent_header": [
          "SAGECAL",
          "Step by Step Introduction:",
          "2) Sky Model:"
        ],
        "type": "Text_excerpt",
        "value": "```\n#name h m s d m s I Q U V spectral_index RM extent_X(rad) extent_Y(rad) pos_angle(rad) freq0\n```\n\nor\n\n```\n#name h m s d m s I Q U V spectral_index1 spectral_index2 spectral_index3 RM extent_X(rad) extent_Y(rad) pos_angle(rad) freq0\n```\n\ne.g.:\n\n```\nP1C1 0 12 42.996 85 43 21.514 0.030498 0 0 0 -5.713060 0 0 0 0 115039062.0\nP5C1 1 18 5.864 85 58 39.755 0.041839 0 0 0 -6.672879 0 0 0 0 115039062.0\n#A Gaussian mjor,minor 0.1375,0.0917 deg diameter -> radius(rad), PA 43.4772 deg (-> rad)\n#Position Angle: \"West from North (counter-clockwise)\" (0 deg = North, 90 deg = West). \n#Note: PyBDSF/BBS/DP3 use \"North from East (counter-clockwise)\" (0 deg = East, 90 deg = North).\n#Flux scaling is same for both\nG0  5 34 31.75 22 00 52.86 100 0 0 0 0.00 0 0.0012  0.0008 -2.329615801 130.0e6\n#A Disk radius=0.041 deg\nD01 23 23 25.67 58 48 58 80 0 0 0 0 0 0.000715 0.000715 0 130e6\n#A Ring radius=0.031 deg\nR01 23 23 25.416 58 48 57 70 0 0 0 0 0 0.00052 0.00052 0 130e6\n#A shapelet ('S3C61MD.fits.modes' file must be in the current directory)\nS3C61MD 2 22 49.796414 86 18 55.913266 0.135 0 0 0 -6.6 0 1 1 0.0 115000000.0\n```\n\n\nNote: Comments starting with a '#' are allowed for both sky model and cluster files.\nNote: 3rd order spectral indices are also supported, use -F 1 option in sagecal.\nNote: Spectral indices use natural logarithm, ```exp(ln(I0) + p1 * ln(f/f0) + p2 * ln(f/f0)^2 + ..)``` so if you have a model with common logarithms like ```10^(log(J0) + q1*log(f/f0) + q2*log(f/f0)^2 + ..)``` then, conversion is\n\n```\nln(I0)+p1*ln(f/f0)+p2*ln(f/f0)^2+... = ln(10)*(log(J0)+q1*log(f/f0)+q2*log(f/f0))^2)+...)\n=ln(10)*(ln(J0)/ln(10)+q1*ln(f/f0)/ln(10)+q2*ln(f/f0)^2/ln(10)^2+...)\n```\nso\n```\nI0=J0\np1=q1\np2=q2/ln(10)\np3=q3/ln(10)^2\n...\n```\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4) Distributed calibration",
        "parent_header": [
          "SAGECAL",
          "Step by Step Introduction:"
        ],
        "type": "Text_excerpt",
        "value": "Use mpirun to run sagecal-mpi, (or ```sagecal-mpi_gpu``` for GPU version) for example:\n```\n mpirun  -np 11 -hostfile ./machines --map-by node --cpus-per-proc 8 \n --mca yield_when_idle 1 -mca orte_tmpdir_base /scratch/users/sarod \n /full/path/to/sagecal-mpi -f 'MS*pattern' -A 30 -P 2 -r 5 \n -s sky.txt -c cluster.txt -n 16 -t 1 -e 3 -g 2 -l 10 -m 7 -x 10 -F 1 -j 5\n```\n\nSpecific options : \n```-np 11``` : 11 processes : starts 10 workers + 1 master\n\n```./machines``` : will list the host names of the 11 (or fewer) nodes used ( 1st name is the master ) : normally the node where you invoke mpirun\n\n```-f 'MS*pattern'``` : Search MS names that match this pattern and calibrate all of them together. The total number of MS being calibrated can be higher than the actual number of slaves (multiplexing).\n\n```-A 30``` : 30 ADMM iterations.\n\n```-P 2``` : polynomial in frequency has 2 terms.\n\n```-Q``` : can change the type of polynomial used (```-Q 2``` gives Bernstein polynomials).\n\n```-r 5``` : regularization factor is 5.0. See ```-G``` option below for regularization per direction.\n\n```-G textfile```: each cluster can have a different regularization factor, instead of using ```-r``` option (and ```-u``` option) when the regularization is the same for all clusters. The text file format is as follows: each row should have the cluter_id, hybrid count (= same as in the cluster file), spectral regularization, and (optionally) spatial regularization, e.g.,\n\n```\n# cluster_id hybrid_factor spetral_reg spatial_reg\n-1 1 5.0 3.0\n2 4 1.0 2.0\n...\n```\n\nIt is also possible to only use spectral regularization, for example,\n\n```\n# cluster_id hybrid_factor spetral_reg\n-1 1 5.0\n2 4 1.0\n...\n```\n\nNote that lines starting with '#' are comments.\n\n```-N 1```: enable **stochastic** calibration (minibatches of data), combined with options ```-M```, ```-w``` and ```-u```.\n\n```-U 1```: use global solution instead of local solution for residual calculation.\n\nMPI specific options:\n\n```/scratch/users/sarod``` : this is where MPI stores temp files (default is probably ```/tmp```).\n\n```--mca*```: various options to tune the networking and scheduling.\n\nNote: the number of workers (-np option) can be lower than the number of MS calibrated. The program will divide the workload among the number of available workers.\n\n\nThe rest of the options are similar to sagecal.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5) Spatial regularization",
        "parent_header": [
          "SAGECAL",
          "Step by Step Introduction:"
        ],
        "type": "Text_excerpt",
        "value": "Spatial regularization (with distributed multi-directional calibration) enables the use of solutions along all directions in the sky as spatial regularization for calibration along each single direction. In other words, we construct a model of the systematic errors covering the full field of view (not explicitly but implicitly) and use this as an additional constraint. To turn this on, the following options are needed:\n\n```-X L2 penalty,L1 penalty,model order,FISTA iterations,update cadence``` : For example ```-X 0.01,1e-4,3,40,10``` will use 0.01 as the L2 penalty and 1e-4 as the L1 penalty for solving an elastic net regression to build a spatial model. The model will have 3x3=9 spatial basis functions. The elastic net model will be found using 40 FISTA iterations. The spatial model will be updated at every 10 ADMM iterations.\n\n```-u alpha``` : The regularization factor for the spatial constraint while solving the consensus problem. Note that by using the  ```-G``` option, you can define regularization factors for each cluster.\n\nAfter each solution, images showing the spatial model (amplitude) will be created as ```.PPM``` files.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5a) Diffuse sky models in calibration",
        "parent_header": [
          "SAGECAL",
          "Step by Step Introduction:",
          "5) Spatial regularization"
        ],
        "type": "Text_excerpt",
        "value": "When a spatial model is enabled, it is also possible to apply the spatial model onto a model of a diffuse sky background. The diffuse sky model can have any number of shapelet components. They all should belong to one cluster (say cluster *45*). With ```-D``` option, it is possible to enable the use of diffuse sky model with the spatial model, like ```-D 45,0.1```, where *0.1* is the regularization factor used while applying the spatial model. The larger this regularization is, the more strongly the spatial model will be enforced onto the diffuse sky model.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "6) Solution format",
        "parent_header": [
          "SAGECAL",
          "Step by Step Introduction:"
        ],
        "type": "Text_excerpt",
        "value": "All SAGECal solutions are stored as text files. Lines starting with '#' are comments.\nThe first non-comment line includes some general information, i.e.\nfreq(MHz) bandwidth(MHz) time_interval(min) stations clusters effective_clusters\n\nThe remaining lines contain solutions for each cluster as a single column, the first column is just a counter. \nLet's say there are K effective clusters and N directions. Then there will be K+1 columns, the first column will start from 0 and increase to 8N-1, \nwhich can be used to count the row number. It will keep repeating this, for each time interval.\nThe rows 0 to 7 belong to the solutions for the 1st station. The rows 8 to 15 for the 2nd station and so on. \nEach 8 rows of any given column represent the 8 values of a 2x2 Jones matrix. Lets say these are ```S0,S1,S2,S3,S4,S5,S6``` and ```S7```. Then the Jones matrix is ```[S0+j*S1, S4+j*S5; S2+j*S3, S6+j*S7]``` (the ';' denotes the 1st row of the 2x2 matrix).\n\nWhen a cluster has a chunk size > 1, there will be more than 1 solution per given time interval. \nSo for this cluster, there will be more than 1 column in the solution file, the exact number of columns being equal to the chunk size.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Additional Info",
        "parent_header": [
          "SAGECAL",
          "Step by Step Introduction:"
        ],
        "type": "Text_excerpt",
        "value": "See a [Tutorial](http://sagecal.sourceforge.net/tutorial/html/index.html)\nand the [LOFAR Cookbook Chapter](https://support.astron.nl/LOFARImagingCookbook/sagecal.html).\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1289316.svg)](https://doi.org/10.5281/zenodo.1289316)\n\n[![Documentation](https://codedocs.xyz/nlesc-dirac/sagecal.svg)](https://codedocs.xyz/nlesc-dirac/sagecal/)\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9433387262583246,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- Levenberg-Marquardt, (stochastic) LBFGS, Riemannian Trust Region, Nesterov's accelerated gradient descent algorithms\n- GPU acceleration using CUDA\n- Fast and accurate interferometric calibration\n- Gaussian and Student's t noise models\n- Shapelet source models\n- CASA MS data format supported\n- Distributed calibration using MPI - consensus optimization with data multiplexing\n- Tools to build sky models and restore sky models to images\n- Adaptive update of ADMM penalty (Barzilai-Borwein a.k.a. Spectral method)\n- Bandpass calibration and unprecedented RFI mitigation with stochastic LBFGS\n- Stochastic calibration for handling data at highest resolution (with federated averaging and consensus optimization)\n- Spectral and spatial regularization of calibration solutions\n- Large scale diffuse sky models via shapelet decomposition\n- Lunar frame interferometric simulation via the SPICE toolkit \nPlease read INSTALL.md for installation instructions, but 'cmake' should work in most cases. We give a brief guide to use SAGECal here but there is extensive documentation in the links at the end.\n \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Code documentation",
        "parent_header": [
          "SAGECAL"
        ],
        "type": "Text_excerpt",
        "value": "Code documentation can be found [here](https://codedocs.xyz/nlesc-dirac/sagecal).\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nlesc-dirac/sagecal/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nlesc-dirac/sagecal"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SAGECAL"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/Docker/ubuntu2004-cuda/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/Docker/ubuntu2004-cuda/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/Docker/ubuntu2004-cpu/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/Docker/ubuntu2004-cpu/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/Docker/build_images.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/scripts/CSPICE/makeall.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/scripts/CSPICE/mkprodct.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.1289316"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://codedocs.xyz/nlesc-dirac/sagecal.svg"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "di 14 mei 2024 14:27:33 CEST\n# SAGECal Installation\n\n## Cmake Build\n#### Ubuntu 22.04 (quick install), also works mostly for 20.04\n```\n sudo apt-get install -y git cmake g++ pkg-config libcfitsio-bin libcfitsio-dev libopenblas-base libopenblas-dev wcslib-dev wcslib-tools libglib2.0-dev libcasa-casa4 casacore-dev casacore-data casacore-tools gfortran libopenmpi-dev libfftw3-dev\n\n```\nRun cmake (with GPU support) for example like\n```\n mkdir build && cd build\n cmake .. -DHAVE_CUDA=ON -DNUM_GPU=1 -DCMAKE_CXX_COMPILER=g++-8 -DCMAKE_C_COMPILER=gcc-8 -DCUDA_NVCC_FLAGS='-gencode arch=compute_75,code=sm_75' -DCMAKE_CUDA_ARCHITECTURES=75 -DBLA_VENDOR=OpenBLAS\n```\nwhere *-DNUM_GPU=1* is when there is only one GPU. If you have more GPUs, increase this number to 2,3, and so on. This will produce *sagecal_gpu* and *sagecal-mpi_gpu* binary files (after running *make* of course). Architecture of the GPU is specified in the *-DCUDA_NVCC_FLAGS* option, and in newer cmake, using *-DCMAKE_CUDA_ARCHITECTURES*. It is important to select the gcc and g++ compilers to match the CUDA version, above example uses *gcc-8* and *g++-8*.\n\nCPU only version can be build as\n```\n cmake .. -DBLA_VENDOR=OpenBLAS\n```\nwhich will produce *sagecal* and *sagecal-mpi*.\n\nThe option *-DBLA_VENDOR=OpenBLAS* is to select OpenBLAS explicitly, but other BLAS  flavours can also be given. If not specified, whatever BLAS installed will be used.\n\n\nTo only build *libdirac* (shared) library, use *-DLIB_ONLY=1* option (also *-DBLA_VENDOR* to select the BLAS flavour). This library can be used with pkg-config using *lib/pkgconfig/libdirac.pc*. To build *libdirac* with GPU support, use *-DHAVE_CUDA=ON* with *-DLIB_ONLY=1* and give *-fPIC* compiler flag (for both *-DCMAKE_CXX_FLAGS* and *-DCMAKE_C_FLAGS*). With GPU support, only a static library is built because it needs to match the GPU architecture.\n\n### Vectorized math operations\nSAGECal can use ***libmvec*** vectorized math operations, both in GPU and CPU versions. In order to enable this, use compiler options *-ffast-math -lmvec -lm* for both gcc and g++. Also *-mavx*, *-mavx2* etc. can be added. Here is an example for CPU version\n\n```\ncmake ..  -DCMAKE_CXX_FLAGS='-g -O3 -Wall -ffast-math -lmvec -lm -mavx2' -DCMAKE_C_FLAGS='-g -O3 -Wall -ffast-math -lmvec -lm -mavx2' \n```\n\n\n### Linking with CSPICE\nFor lunar coordinate support, you need to first download and build CSPICE, for more information, see [linking with CSPICE](/scripts/CSPICE/README.md).\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/INSTALL.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 0.9587981124813778,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "Please read INSTALL.md for installation instructions, but 'cmake' should work in most cases. We give a brief guide to use SAGECal here but there is extensive documentation in the links at the end.\n \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "admm, calibration, consensus-optimization, cuda, gpu-acceleration, lofar, nonlinear-optimization, radio-astronomy, sagecal, ska"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v2.0",
        "spdx_id": "GPL-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-2.0",
        "value": "https://api.github.com/licenses/gpl-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://circleci.com/gh/nlesc-dirac/sagecal.svg?style=svg"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sagecal"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "nlesc-dirac"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 2432439,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 364798,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cuda",
        "size": 274868,
        "type": "Programming_language",
        "value": "Cuda"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 62973,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 55357,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 6253,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2526,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1002,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2024-05-01T07:29:46Z",
        "date_published": "2024-05-14T12:07:38Z",
        "description": "- Lunar coordinate transforms using CSPICE, enable simulation/calibration of radio telescopes on the moon\r\n- Diffuse sky models in calibration using large shapelet models\r\n- Bug fixes",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.8.3",
        "name": "v0.8.3",
        "release_id": 155676170,
        "tag": "v0.8.3",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.8.3",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/155676170",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/155676170",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.8.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2023-07-29T21:44:25Z",
        "date_published": "2023-07-31T09:20:36Z",
        "description": "- Beam update: tile beamformer, ALO element beam model, wideband beam models\r\n- GPU shared memory access improvements\r\n- Bug fixes",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.8.1",
        "name": "v0.8.1",
        "release_id": 114462487,
        "tag": "v0.8.1",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/114462487",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/114462487",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2022-12-28T13:51:35Z",
        "date_published": "2022-12-28T13:52:11Z",
        "description": "- vectorized math operations, speed up in CPU version\r\n- bug fixes",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.7.9",
        "name": "version 0.7.9",
        "release_id": 86019259,
        "tag": "v0.7.9",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.7.9",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/86019259",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/86019259",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.7.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2022-03-24T07:42:56Z",
        "date_published": "2022-03-24T07:43:25Z",
        "description": "CircleCI CI/CD support\r\nLibdirac tagged for external use",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.7.8",
        "name": "v0.7.8",
        "release_id": 62653743,
        "tag": "v0.7.8",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.7.8",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/62653743",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/62653743",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.7.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2022-02-16T07:52:47Z",
        "date_published": "2022-02-16T07:54:43Z",
        "description": "- AARTFAAC data support: LBA dipole model\r\n-  static/shared libdirac library",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.7.7",
        "name": "v0.7.7",
        "release_id": 59675812,
        "tag": "v0.7.7",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.7.7",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/59675812",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/59675812",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.7.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2021-10-03T19:16:35Z",
        "date_published": "2021-10-03T19:19:50Z",
        "description": "Enable spatial regularization in distributed, direction dependent calibration.",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.7.6",
        "name": "v0.7.6",
        "release_id": 50705181,
        "tag": "v0.7.6",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.7.6",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/50705181",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/50705181",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.7.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2021-08-11T09:32:37Z",
        "date_published": "2021-08-11T09:40:59Z",
        "description": "- LOFAR dipole beam model ",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.7.5",
        "name": "v0.7.5",
        "release_id": 47658268,
        "tag": "v0.7.5",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.7.5",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/47658268",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/47658268",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.7.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2020-12-27T00:18:22Z",
        "date_published": "2020-12-27T00:22:39Z",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.7.3",
        "name": "v0.7.3",
        "release_id": 35741791,
        "tag": "v0.7.3",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.7.3",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/35741791",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/35741791",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.7.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2020-08-23T19:54:04Z",
        "date_published": "2020-08-23T19:58:32Z",
        "description": "Bandpass calibration\r\nGlobal solution with consensus optimization\r\nMulti MS stochastic calibration",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.7.2",
        "release_id": 30030069,
        "tag": "v0.7.2",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.7.2",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/30030069",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/30030069",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.7.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2020-01-10T21:05:46Z",
        "date_published": "2020-01-10T21:12:40Z",
        "description": "Stochastic calibration with consensus optimization and federated averaging",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.7.1",
        "name": "version 0.7.1",
        "release_id": 22755205,
        "tag": "v0.7.1",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.7.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/22755205",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/22755205",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.7.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2019-11-08T12:55:04Z",
        "date_published": "2019-11-08T12:57:34Z",
        "description": "- Stochastic calibration with full GPU acceleration\r\n- Bandpass calibration using consensus ADMM in stand alone mode",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.7.0",
        "name": "version 0.7.0",
        "release_id": 21318414,
        "tag": "v0.7.0",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/21318414",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/21318414",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2019-09-12T08:23:50Z",
        "date_published": "2019-09-12T09:34:04Z",
        "description": "- Important bug fixes\r\n",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.6.2",
        "name": "version 0.6.2",
        "release_id": 19936415,
        "tag": "v0.6.2",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/19936415",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/19936415",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2019-06-06T03:10:46Z",
        "date_published": "2019-06-06T03:34:07Z",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.6.1",
        "name": "version 0.6.1",
        "release_id": 17814606,
        "tag": "v0.6.1",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/17814606",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/17814606",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "SarodYatawatta",
          "type": "User"
        },
        "date_created": "2018-06-13T08:10:13Z",
        "date_published": "2018-06-14T11:10:39Z",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.5.0",
        "name": "version 0.5.0 - sync with internal version",
        "release_id": 11479109,
        "tag": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/11479109",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/11479109",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fdiblen",
          "type": "User"
        },
        "date_created": "2018-06-13T08:10:13Z",
        "date_published": "2017-11-16T15:07:17Z",
        "html_url": "https://github.com/nlesc-dirac/sagecal/releases/tag/v0.0.1",
        "name": "Version 1.0 - obsolete",
        "release_id": 8545515,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/8545515",
        "value": "https://api.github.com/repos/nlesc-dirac/sagecal/releases/8545515",
        "zipball_url": "https://api.github.com/repos/nlesc-dirac/sagecal/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3) Run sagecal",
        "parent_header": [
          "SAGECAL",
          "Step by Step Introduction:"
        ],
        "type": "Text_excerpt",
        "value": "Optionally: Make sure your machine has (1/2 working NVIDIA GPU cards or Intel Xeon Phi MICs) to use sagecal.\nRecommended usage: (with GPUs)\n\n```\nsagecal_gpu -d my_data.MS -s my_skymodel -c my_clustering -n no.of.threads -t 60 -p my_solutions -e 3 -g 2 -l 10 -m 7 -w 1 -b 1\n```\n\nReplace ```sagecal_gpu``` with ```sagecal``` if you have a CPU only build.\n\nUse your solution interval (-t 60) so that its big enough to get a decent solution and not too big to make the parameters vary too much. (about 20 minutes per solution is reasonable).\n\nNote: It is also possible to calibrate more than one MS together. See section 4 below.\nNote: To fully use GPU acceleration use ```-E 1``` option.\n\nSimulations:\nWith ```-a 1```, only a simulation of the sky model is done.\nWith ```-a 1``` and ```-p``` 'solutions_file', simulation is done with the sky model corrupted with solutions in 'solutions_file'.\nWith ```-a 1``` and ```-p``` 'solutions_file' and ```-z``` 'ignore_file', simulation is done with the solutions in the 'solutions_file', but ignoring the cluster ids in the 'ignore_file'.\nE.g., If you need to ignore cluster ids '-1', '10', '999', create a text file :\n\n```\n-1\n10\n999\n```\n\nand use it as the 'ignore_file'.\n\nBandpass correction using **stochastic** calibration with consensus:\nUse ```-N 1``` combined with options for ```-M```,```-w``` (see also section 4 below).\n\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-dirac/sagecal/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 22:54:19",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ]
}