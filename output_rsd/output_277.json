{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# YAML 1.2\n---\nauthors:\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Verhoeven\n    given-names: Stefan\n    orcid: \"https://orcid.org/0000-0002-5821-2060\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Drost\n    given-names: Niels\n    orcid: \"https://orcid.org/0000-0001-9795-7981\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Weel\n    given-names: Berend\n    orcid: \"https://orcid.org/0000-0002-9693-9332\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Kalverla\n    given-names: Peter\n    orcid: \"https://orcid.org/0000-0002-5025-7862\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Alidoost\n    given-names: Fakhereh\n    orcid: \"https://orcid.org/0000-0001-8407-6472\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Andela\n    given-names: Bouwe\n    orcid: \"https://orcid.org/0000-0001-9005-8940\"\n\ncff-version: \"1.2.0\"\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.1462548\n    description: This the identifier used to uniquely identify the software as a concept (i.e., version-agnostic).\nlicense: Apache-2.0\nmessage: \"If you use this software, please cite it using these metadata.\"\nrepository-code: \"https://github.com/eWaterCycle/infra\"\ntitle: \"eWaterCycle infra\"\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eWaterCycle/infra"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-09-12T15:16:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-05T12:59:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Instructions for system administrators to deploy the eWaterCycle platform"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9266374112250627,
      "result": {
        "original_header": "Instructions for system administrators to deploy the eWaterCycle platform",
        "type": "Text_excerpt",
        "value": "This repo contains (codified) instructions for deploying the eWaterCycle platform. The target audience of these instructions are system administrators. For more information on the eWaterCycle platform (and how to deploy it) see the [eWaterCycle documentation](https://ewatercycle.readthedocs.io/). \nThese instructions assume you have some basic knowledge of [vagrant](https://vagrantup.com) and\n[Ansible](https://docs.ansible.com/ansible/latest/index.html).\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9134260536966105,
      "result": {
        "original_header": "Catalog item registration",
        "type": "Text_excerpt",
        "value": "This chapter is dedicated for catalog item developers. \nOn the Research cloud the [developer](https://servicedesk.surf.nl/wiki/display/WIKI/Appoint+a+CO-member+a+developer) can add an catalog item for other people to use.\nThe generic steps to do this are documented [here](https://servicedesk.surf.nl/wiki/display/WIKI/Create+your+own+catalog+items). \n- Use Ansible playbook as component script type\n  - Use `https://github.com/eWaterCycle/infra.git` as repository URL\n  - Use `research-cloud-plugin.yml` as script path\n  - Use `main` as tag\n- Component parameters, all fixed source type and non-overwitable unless otherwise stated\n  - Add `dcache_ro_token` parameter for dcache read-only token aka macaroon.\n    The token can be found in the eWaterCycle password manager.\n    This token has an expiration date, so it needs to be updated every now and then.\n  - Add `alt_home_location` parameter with value `/data/volume_2`.\n    For mount point of the storage item which should hold homes mounted.\n  - Add `rclone_cache_dir` parameter with value `/data/volume_3`.\n    For directory where rclone can store its cache.\n  - Add `rclone_max_gsize` with value `45`.\n    For maximum size of cache on `rclone_cache_dir` volume. In Gb.\n- Set documentation URL to `https://github.com/eWaterCycle/infra`\n- Do not allow every org to use this component. Data on the dcache should not be made public.\n- Select the organizations (CO) that are allowed to use the component. \n- Select the following components:\n  1. SRC-OS\n  2. SRC-CO\n  3. SRC-Nginx\n  4. SRC-External plugin\n  5. eWatercycle\n- Set documentation URL to `https://github.com/eWaterCycle/infra`\n- Add `SURF HPC Cloud` as cloud provider\n  - Set Operating Systems to Ubuntu 22.04\n  - Set Sizes to all non-gpu and non-disabled sizes\n- In parameter settings step keep all values as is except\n  - Set `co_irods` to `false` as we do not use irods\n  - Set `co_research_drive` to `false` as we do not use research drive\n- Set boot disk size to 150Gb,\n  as default size will be mostly used by the conda environment and will trigger out of space warnings.\n- Set workspace acces button behavior to `Webinterface (https:)`,\n  so clicking on `ACCESS` button will open up the eWatercycle experiment explorer web interface\n- Select the organizations (CO) that are allowed to use the catalog item. \nTo become root on a VM the user needs to be member of the `src_co_admin` group on [SRAM](https://sram.surf.nl/).\nSee [docs](https://servicedesk.surf.nl/wiki/display/WIKI/Workspace+roles%3A+Appoint+a+CO-member+a+SRC+administrator).\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9845432961079649,
      "result": {
        "original_header": "SURF Research cloud VM deployment",
        "type": "Text_excerpt",
        "value": "This chapter is dedicated for application deployers. \n1. Log into Research Cloud\n1. Create new storage item for home directories\n   - To store user files\n   - Use 50Gb size for simple experiments or bigger when required for experiment.\n   - As each storage item can only be used by a single workspace, give it a name and description so you know which workspace and storage items go together.\n1. Create new storage item for cache\n   - To store cached files from dCache by rclone\n   - Use 50GB size as size\n   - As each storage item can only be used by a single workspace, give it a name and description so you know which workspace and storage items go together.\n1. Create a new workspace\n1. Select eWaterCycle application\n1. Select collaborative organisation (CO) for example `ewatercycle-nlesc`\n1. Select size of VM (cpus/memory) based on use case\n1. Select home storage item.\n   - Order in which the storage items are select is important, make sure to select home before cache storage item.\n1. Select cache storage item\n1. Wait for machine to be running\n1. Visit URL/IP\n1. When done delete machine \n- application is allowed to be used by CO. See [Sharing catalog items](https://servicedesk.surfsara.nl/wiki/display/WIKI/Sharing+catalog+items)\n- data storage item and home dir are created for the CO \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9467816326050484,
      "result": {
        "original_header": "Fill shared data disk",
        "type": "Text_excerpt",
        "value": "This chapter is dedicated for application data preparer. \nThe [eWatercycle system setup](https://ewatercycle.readthedocs.io/en/latest/system_setup.html) requires a lot of data files.\nFor the Research cloud virtual machines we will mount a dcache bucket. \nRunnig this script will download all data files to /mnt/data and upload them to dcache.\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9148665607174907,
      "result": {
        "original_header": "Sync dcache with existing folder elsewhere",
        "type": "Text_excerpt",
        "value": "The steps above fetch the data from original sources. If you want to sync some files from\nanother location, say, Snellius, you can use rclone directly. In our experience, it works\nbetter to sync entire directories than to try and copy single files. \nYou can verify your access by running an innocent `rclone ls  dcache:parameter-sets`.\nThe command to sync directories is `rclone copy somedir dcache:parameter-sets/somedir`.\nBeware that this will overwrite any existing files, if different! \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9726074310457876,
      "result": {
        "original_header": "Mount dcache on local machine",
        "type": "Text_excerpt",
        "value": "In ESMValTool config files you can use `~/dcache/climate-data/obs6` for `rootpath:OBS6`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9190799476570017,
      "result": {
        "original_header": "Docker images",
        "type": "Text_excerpt",
        "value": "In the eWaterCycle project we make Docker images. The images are hosted on [Docker Hub](https://hub.docker.com/u/ewatercycle) . A project member can create issues here for permisison to push images to Docker Hub.\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eWaterCycle/infra/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eWaterCycle/infra/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "eWaterCycle/infra"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Instructions for system administrators to deploy the eWaterCycle platform"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eWaterCycle/infra/main/roles/labstart/files/certbot-nginx-hook.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup of eWaterCycle platform on the SURF Research cloud",
        "parent_header": [
          "Instructions for system administrators to deploy the eWaterCycle platform"
        ],
        "type": "Text_excerpt",
        "value": "The hardware environment used by the eWaterCycle platform development team is the [SURF Research Cloud](https://servicedesk.surfsara.nl/wiki/display/WIKI/Research+Cloud+Documentation). Starting a machine on the Surf Research Cloud requires that you have research budget with SURF, for more info see the website of [SURF](https://www.surf.nl/en/research-it/apply-for-access-to-compute-services). Once running, access to the machine can be shared to anyone.\n\nThe setup instructions in this repo will create an eWaterCycle application(a sort-of VM template) that when started will create a machine with:\n\n- Explorer: web visualization of available models / parameter sets combinations and a way to generate Jupyter notebooks\n- Jupyter Hub: to interactivly generate forcings and perform experiments on hydrological models using the [eWatercycle Python package](https://ewatercycle.readthedocs.io/)\n- ERA5 and ERA-Interim global climate data, which can be used to generate forcings\n- Installed models and their example parameter sets\n\nAn application on the SURF Research cloud is provisioned by running an Ansible playbook (research-cloud-plugin.yml).\n\nIn addition to the standard VM storage, additional read-only datasets are mounted at `/mnt/data` from dCache using rclone. They may contain things like:\n\n- climate data, see <https://ewatercycle.readthedocs.io/en/latest/system_setup.html#download-climate-data>\n- observation\n- parameter-sets\n- singularity-images of hydrological models wrapped in grpc4bmi servers\n\nPreviously the eWatercycle platform consisted of multiple VM on SURF HPC cloud, see [v0.1.2 release](https://github.com/eWaterCycle/infra/releases/tag/v0.1.2) for that code.\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup of eWaterCycle platform on a local test VM",
        "parent_header": [
          "Instructions for system administrators to deploy the eWaterCycle platform"
        ],
        "type": "Text_excerpt",
        "value": "Deploying a local test VM is mostly useful for developing the SURF Research Cloud applications. This vagrant setup creates a virtual machine with 8Gb memory, 4 virtual cores, and 70Gb storage. This should work on any Linux or Windows machine.\n\nTo set up an Explorer/Jupyter server on your local machine with [vagrant](https://vagrantup.com) and\n[Ansible](https://docs.ansible.com/ansible/latest/index.html)\n\nCreate config file `research-cloud-plugin.vagrant.vars` with\n\n```yaml\n---\ndcache_ro_token: <dcache macaroon with read permission>\nrclone_cache_dir: /data/volume_2\n# Directory where /home should point to\nalt_home_location: /data/volume_3\n```\n\nThe token can be found in the eWaterCycle password manager.\n\n```shell\nvagrant --version\n# Vagrant 2.4.1\nvagrant plugin install vagrant-vbguest\n# Installed the plugin 'vagrant-vbguest (0.32.0)'\nvagrant up\n```\n\nVisit site\n\n```shell\n# Get ip of server with\nvagrant ssh -c 'ifconfig eth1'\n```\n\nGo to `http://<ip of eth1>` and login with `vagrant:vagrant`.\n\nYou will get some complaints about unsecure serving, this is OK for local testing and this will not happen on Research Cloud.\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Test on Windows Subsystem for Linux 2",
        "parent_header": [
          "Instructions for system administrators to deploy the eWaterCycle platform",
          "Setup of eWaterCycle platform on a local test VM"
        ],
        "type": "Text_excerpt",
        "value": "WSL2 users should follow steps on [https://www.vagrantup.com/docs/other/wsl](https://www.vagrantup.com/docs/other/wsl).\n\nImportantly:\n\n- Work on a folder on the windows file system.\n- Export VAGRANT_WSL_WINDOWS_ACCESS_USER_HOME_PATH=\"/mnt/c/.../infra\"\n- `export PATH=\"$PATH:C:\\Program Files\\Oracle\\VirtualBox\"`\n- ` vagrant up --provider virtualbox`\n- Approve the firewall popup\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8823512998511324,
      "result": {
        "original_header": "Instructions for system administrators to deploy the eWaterCycle platform",
        "type": "Text_excerpt",
        "value": "This repo contains (codified) instructions for deploying the eWaterCycle platform. The target audience of these instructions are system administrators. For more information on the eWaterCycle platform (and how to deploy it) see the [eWaterCycle documentation](https://ewatercycle.readthedocs.io/). \nFor instructions on how to use the machine as deployed by this repo see the [User guide](USER.md). \nThese instructions assume you have some basic knowledge of [vagrant](https://vagrantup.com) and\n[Ansible](https://docs.ansible.com/ansible/latest/index.html).\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9923836465897979,
      "result": {
        "original_header": "Catalog item registration",
        "type": "Text_excerpt",
        "value": "- Use Ansible playbook as component script type\n  - Use `https://github.com/eWaterCycle/infra.git` as repository URL\n  - Use `research-cloud-plugin.yml` as script path\n  - Use `main` as tag\n- Component parameters, all fixed source type and non-overwitable unless otherwise stated\n  - Add `dcache_ro_token` parameter for dcache read-only token aka macaroon.\n    The token can be found in the eWaterCycle password manager.\n    This token has an expiration date, so it needs to be updated every now and then.\n  - Add `alt_home_location` parameter with value `/data/volume_2`.\n    For mount point of the storage item which should hold homes mounted.\n  - Add `rclone_cache_dir` parameter with value `/data/volume_3`.\n    For directory where rclone can store its cache.\n  - Add `rclone_max_gsize` with value `45`.\n    For maximum size of cache on `rclone_cache_dir` volume. In Gb.\n- Set documentation URL to `https://github.com/eWaterCycle/infra`\n- Do not allow every org to use this component. Data on the dcache should not be made public.\n- Select the organizations (CO) that are allowed to use the component. \n- Select the following components:\n  1. SRC-OS\n  2. SRC-CO\n  3. SRC-Nginx\n  4. SRC-External plugin\n  5. eWatercycle\n- Set documentation URL to `https://github.com/eWaterCycle/infra`\n- Add `SURF HPC Cloud` as cloud provider\n  - Set Operating Systems to Ubuntu 22.04\n  - Set Sizes to all non-gpu and non-disabled sizes\n- In parameter settings step keep all values as is except\n  - Set `co_irods` to `false` as we do not use irods\n  - Set `co_research_drive` to `false` as we do not use research drive\n- Set boot disk size to 150Gb,\n  as default size will be mostly used by the conda environment and will trigger out of space warnings.\n- Set workspace acces button behavior to `Webinterface (https:)`,\n  so clicking on `ACCESS` button will open up the eWatercycle experiment explorer web interface\n- Select the organizations (CO) that are allowed to use the catalog item. \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9923445034779489,
      "result": {
        "original_header": "SURF Research cloud VM deployment",
        "type": "Text_excerpt",
        "value": "See [User guide](USER.md) to see what users have to do to login or use GitHub repository.\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9398402332768113,
      "result": {
        "original_header": "Sync dcache with existing folder elsewhere",
        "type": "Text_excerpt",
        "value": "The steps above fetch the data from original sources. If you want to sync some files from\nanother location, say, Snellius, you can use rclone directly. In our experience, it works\nbetter to sync entire directories than to try and copy single files. \nYou can verify your access by running an innocent `rclone ls  dcache:parameter-sets`.\nThe command to sync directories is `rclone copy somedir dcache:parameter-sets/somedir`.\nBeware that this will overwrite any existing files, if different! \nNote: password manager can be used for exchanging macaroons.\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9998585074996821,
      "result": {
        "original_header": "Mount dcache on local machine",
        "type": "Text_excerpt",
        "value": "Create the file `~/.config/rclone/rclone.conf` and add the following content:\n```ini\n[dcache]\ntype = webdav\nurl = https://webdav.grid.surfsara.nl:2880\nvendor = other\nuser =\npass =\nbearer_token = <dcache macaroon with read permissions>\n```\nInstall [rclone](https://rclone.org/) and run following command to mount dcache at `~/dcache` directory.\n```shell\nmkdir ~/dcache\nrclone mount --read-only --cache-dir /tmp/rclone-cache --vfs-cache-max-size 30G --vfs-cache-mode full dcache:/ ~/dcache\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.807991288759728,
      "result": {
        "original_header": "Fill shared data disk",
        "type": "Text_excerpt",
        "value": "To fill the dcache bucket you can run\n```shell\nansible-playbook \\\n  -e cds_uid=1234 -e cds_api_key <cds api key> \\\n  -e dcache_rw_token=<dcache macaroon with read/write permissions>\n  shared-data-disk.yml\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8141628993318282,
      "result": {
        "original_header": "Mount dcache on local machine",
        "type": "Text_excerpt",
        "value": "Create the file `~/.config/rclone/rclone.conf` and add the following content:\n```ini\n[dcache]\ntype = webdav\nurl = https://webdav.grid.surfsara.nl:2880\nvendor = other\nuser =\npass =\nbearer_token = <dcache macaroon with read permissions>\n```\nInstall [rclone](https://rclone.org/) and run following command to mount dcache at `~/dcache` directory.\n```shell\nmkdir ~/dcache\nrclone mount --read-only --cache-dir /tmp/rclone-cache --vfs-cache-max-size 30G --vfs-cache-mode full dcache:/ ~/dcache\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eWaterCycle/infra/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ansible, ewatercycle, hydrology"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "infra"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "eWaterCycle"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jinja",
        "size": 20060,
        "type": "Programming_language",
        "value": "Jinja"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 313,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 42,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://ewatercycle.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2024-07-08T09:45:47Z",
        "date_published": "2024-09-05T10:46:11Z",
        "description": "Uses eWaterCycle Python version 2.2.0.\r\n",
        "html_url": "https://github.com/eWaterCycle/infra/releases/tag/v2.0.0",
        "name": "v2.2.0",
        "release_id": 173603685,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/infra/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/infra/releases/173603685",
        "value": "https://api.github.com/repos/eWaterCycle/infra/releases/173603685",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/infra/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2023-09-18T08:20:51Z",
        "date_published": "2023-10-17T11:56:50Z",
        "description": "Version using eWatercycle Python package 1.4.1\r\n",
        "html_url": "https://github.com/eWaterCycle/infra/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 125405423,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/infra/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/infra/releases/125405423",
        "value": "https://api.github.com/repos/eWaterCycle/infra/releases/125405423",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/infra/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2021-09-01T09:53:58Z",
        "date_published": "2021-09-01T09:57:56Z",
        "description": "First release made for [SURF ResearchCloud](https://researchclouddocs.readthedocs.io/en/latest/about.html).\r\n\r\n* Replaces multi machine ansible setup with single machine\r\n* Upgrades TerriaJS to latest version\r\n* Use mounted dCache bucket for read-only data files like singularity images, ERA5 NetCDF files and model parameter sets.\r\n* Upgrades Jupyter and friends to latest versions\r\n",
        "html_url": "https://github.com/eWaterCycle/infra/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 48804113,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/infra/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/infra/releases/48804113",
        "value": "https://api.github.com/repos/eWaterCycle/infra/releases/48804113",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/infra/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2021-04-08T10:12:32Z",
        "date_published": "2021-08-20T07:49:41Z",
        "description": "Last version for SURF HPC cloud. Switching to SURF ResearchCloud after this release.",
        "html_url": "https://github.com/eWaterCycle/infra/releases/tag/v0.1.2",
        "name": "v0.1.2",
        "release_id": 48163851,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/infra/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/infra/releases/48163851",
        "value": "https://api.github.com/repos/eWaterCycle/infra/releases/48163851",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/infra/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2018-10-04T13:55:48Z",
        "date_published": "2018-10-15T09:02:08Z",
        "description": "Terria globe visualization and Jupyter environment in `launcher/` directory.\r\n\r\n### Added\r\n\r\n* HyMUSE",
        "html_url": "https://github.com/eWaterCycle/infra/releases/tag/v0.1.1",
        "name": "v0.1.1",
        "release_id": 13421965,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/infra/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/infra/releases/13421965",
        "value": "https://api.github.com/repos/eWaterCycle/infra/releases/13421965",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/infra/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2018-09-21T08:00:25Z",
        "date_published": "2018-09-21T08:07:24Z",
        "description": "Playbook used to create MVP demo with pinned versions of our parts and Python/Node dependencies.\r\n\r\nFixes #2",
        "html_url": "https://github.com/eWaterCycle/infra/releases/tag/v0.1.0",
        "name": "v0.1.0",
        "release_id": 13019705,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/infra/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/infra/releases/13019705",
        "value": "https://api.github.com/repos/eWaterCycle/infra/releases/13019705",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/infra/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:46:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example notebooks",
        "parent_header": [
          "Instructions for system administrators to deploy the eWaterCycle platform",
          "SURF Research cloud VM deployment"
        ],
        "type": "Text_excerpt",
        "value": "To get example notebooks end users should use following URL (with `<workspace id>` with your currently running workspace)\n\n```html\nhttps://<workspace id\n  >.workspaces.live.surfresearchcloud.nl/jupyter/hub/user-redirect/git-pull?repo=https%3A%2F%2Fgithub.com%2FeWaterCycle%2Fewatercycle&urlpath=lab%2Ftree%2Fewatercycle%2Fdocs%2Fexamples%2FMarrmotM01.ipynb&branch=main</workspace\n>\n```\n\nTODO add this link to home page of server at\n\nThis link uses [nbgitpuller](https://jupyterhub.github.io/nbgitpuller/) to sync a git repo and open a notebook in it.\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/infra/main/README.md",
      "technique": "header_analysis"
    }
  ]
}