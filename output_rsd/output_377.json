{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/overture-stack/SONG"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-04-18T00:49:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-30T16:26:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Metadata management and automated validation system"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8171656491060866,
      "result": {
        "type": "Text_excerpt",
        "value": "Project containing both the SONG microservice and CLI client.\nBoth are written using JAVA 8 and Spring Boot. \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9509169696279971,
      "result": {
        "original_header": "Docker Based Developement",
        "type": "Text_excerpt",
        "value": "Several `make` targets are provided for locally deploying dependent services using docker.\nBy using this, the developer will be able to replicate a live environment for song-server and song-client.\nIt allows the user to develop locally, and test submissions, manifest creation, publishing, unpublishing and score uploads/downloads in an isolated environment. \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9919842413451183,
      "result": {
        "type": "Text_excerpt",
        "value": "The purpose of this mode is to decrease the wait time between building and testing against dependent services.\nThis mode will run a `mvn package` if the distribution files are missing and copy them into a container for them to be run.\nThis method allows for fast developement, since the `mvn package` step is handled on the **Docker host**.\nIn addition, the debug ports `5005` and `5006` are exposed for both `song-client` and `song-server`, respectively, allowing developers to debug the docker containers.\nThis mode can be enabled using the `DEMO_MODE=0` override. This is the default behaviour if the variable `DEMO_MODE` is not defined. \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8844773519705323,
      "result": {
        "original_header": "Debugging the song-client with IntelliJ",
        "type": "Text_excerpt",
        "value": "Since the JVM debug port is exposed by the `song-client` docker container, IntelliJ can **remotely debug** a running docker container.\nTo do this, a **docker image run profile** must be created with the configuration outputted by the `make intellij-song-client-config` command, which will output a basic upload command, however it can be modified to be any song-client command.\nThen, a **remote debug profile** must be created, with the following config:\n```\nHost: localhost\nPort: 5005\nUse module classpath: song-client\n```\nand in the `Before launch: Activate tool window` section, click the `+` sign, and select `Launch docker before debug`.\nThen ensure the `Docker configuration` field is set to the name of the previously created **docker image run profile** and that `Custom Options` is set to `-p 5005:5005`. In order for the debugger to bind to the debug port in time,\na delay needs to be introduced after starting the container. To do this, click the `+` sign again, and select `Launch docker before debug`, and select `Run External Tool` and a window will pop-up. Input the following:\n```\nName:      Sleep for 5 seconds\nProgram:   /usr/bin/sleep\nArguments: 5\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9695179692117782,
      "result": {
        "type": "Text_excerpt",
        "value": "The purpose of this mode is to demo the current `song-server` and `song-client` code by building it in **inside the Docker image**,\nas opposed to the **Docker host** as is done in Developement mode and then running the containers.\nThis mode will not run `mvn package` on the Docker host, but instead inside the Docker container.\nThis method is very slow, since maven will download dependencies every time a build is triggered, however creates a completely isolated environment for testing.\nThis mode can be enabled using the `DEMO_MODE=1` make variable override. For example, to start the song-server, the following command would be run: \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8883750360393146,
      "result": {
        "original_header": "Dockerhub Configuration",
        "type": "Text_excerpt",
        "value": "   `Build Caching` is set to the ON position \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8725825187998529,
      "result": {
        "type": "Text_excerpt",
        "value": "The `song-client` is a CLI tool used for communicating with a `song-server`. \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8716034018581023,
      "result": {
        "original_header": "Notes",
        "type": "Text_excerpt",
        "value": "When running with the secure profile enabled, an oauth2 server is needed. \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/overture-stack/song/wiki"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/overture-stack/song/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/overture-stack/SONG/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "overture-stack/SONG"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/dev/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/dev/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/dev/score_bootstrap/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/dev/score_bootstrap/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/dev/auth/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/dev/auth/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/db/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/db/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/create-buckets-aws/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/create-buckets-aws/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/auth/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/auth/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/storage-client/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/storage-client/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/id-db/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/id-db/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/storage-server/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/storage-server/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/base-ubuntu/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/base-ubuntu/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/base-db/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/base-db/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/id/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/id/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-python-sdk/deploy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-python-sdk/docs/start-sphinx-server.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/dev/score_bootstrap/scripts/create-buckets.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/dev/auth/init/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/auth/init/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/storage-server/scripts/create-buckets.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/tools/get_latest_song_docker_targz.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/tools/get_latest_song_docker_zip.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/tools/wait-for-postgres.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/tools/save_study.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/tools/get_latest_song_docker_tag.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docker-demo/id/scripts/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/docker/make-runner.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/docker/retry-command.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/docker/tools/generate-application-jwt.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docs/get_song_docker_tags.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/song-docs/start-sphinx-server.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://www.overture.bio/img/progress-horizontal-GA.svg"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9983225137346183,
      "result": {
        "type": "Text_excerpt",
        "value": "## Build\n```bash\n$ mvn clean package\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Command-line",
        "type": "Text_excerpt",
        "value": "The source can be built and run using maven.\n```bash\n$ git clone git@github.com:icgc-dcc/SONG.git\n$ cd SONG/song-server\n$ mvn spring-boot:run -Dspring-boot.run.profiles=dev,test\n```\nBoth the server and client when compiled and built produce uber jars which can be run easily from the command line.\n```bash\n$ java -jar song-server-0.1.1-SNAPSHOT.jar  --spring.profiles.active=dev,test\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9896433026172554,
      "result": {
        "original_header": "Docker Based Developement",
        "type": "Text_excerpt",
        "value": "Several `make` targets are provided for locally deploying dependent services using docker.\nBy using this, the developer will be able to replicate a live environment for song-server and song-client.\nIt allows the user to develop locally, and test submissions, manifest creation, publishing, unpublishing and score uploads/downloads in an isolated environment. \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9141535464005871,
      "result": {
        "original_header": "Debugging the song-client with IntelliJ",
        "type": "Text_excerpt",
        "value": "Since the JVM debug port is exposed by the `song-client` docker container, IntelliJ can **remotely debug** a running docker container.\nTo do this, a **docker image run profile** must be created with the configuration outputted by the `make intellij-song-client-config` command, which will output a basic upload command, however it can be modified to be any song-client command.\nThen, a **remote debug profile** must be created, with the following config:\n```\nHost: localhost\nPort: 5005\nUse module classpath: song-client\n```\nand in the `Before launch: Activate tool window` section, click the `+` sign, and select `Launch docker before debug`.\nThen ensure the `Docker configuration` field is set to the name of the previously created **docker image run profile** and that `Custom Options` is set to `-p 5005:5005`. In order for the debugger to bind to the debug port in time,\na delay needs to be introduced after starting the container. To do this, click the `+` sign again, and select `Launch docker before debug`, and select `Run External Tool` and a window will pop-up. Input the following:\n```\nName:      Sleep for 5 seconds\nProgram:   /usr/bin/sleep\nArguments: 5\n```\n \nand click `OK`. \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8470549651261232,
      "result": {
        "type": "Text_excerpt",
        "value": "#### Debugging the song-server with IntelliJ \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.99951615117107,
      "result": {
        "original_header": "Debugging the song-server with IntelliJ",
        "type": "Text_excerpt",
        "value": "Since the `song-server` is a server and exposes the 5006 debug port, configuration is much easier. First, start the server with `make clean start-song-server`. Then, create a **remote debug profile** in Intellij with the following configuration:\n```\nHost: localhost\nPort: 5006\nUse module classpath: song-server\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.915268736749272,
      "result": {
        "type": "Text_excerpt",
        "value": "The purpose of this mode is to demo the current `song-server` and `song-client` code by building it in **inside the Docker image**,\nas opposed to the **Docker host** as is done in Developement mode and then running the containers.\nThis mode will not run `mvn package` on the Docker host, but instead inside the Docker container.\nThis method is very slow, since maven will download dependencies every time a build is triggered, however creates a completely isolated environment for testing.\nThis mode can be enabled using the `DEMO_MODE=1` make variable override. For example, to start the song-server, the following command would be run: \nWhen running locally they can be accessed here: http://localhost:8080/swagger-ui.html \n## Dockerhub Configuration \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9079640551297702,
      "result": {
        "original_header": "Dockerhub Configuration",
        "type": "Text_excerpt",
        "value": "1. Edit build configurations by selecting the `Builds` tab at the top, then click `Build Configuration`\n2. Create a new build rule by clicking the `+` sign beside the `BUILD RULES` text\n3. Edit the configuration as follows:\n   Source Type: `branch`\n   Source: `develop`\n   Docker Tag: `develop`\n   Dockerfile Location: `Dockerfile`\n   Build Context: `/`\n   `Autobuild` is set to the ON position \n   `Build Caching` is set to the ON position \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9232683593939959,
      "result": {
        "type": "Text_excerpt",
        "value": "4. Then save the configuration \n#### Building \nSimply running `mvn clean package` will package the client into a `-dist.tar.gz` file. \n#### Configuration \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999999999963336,
      "result": {
        "original_header": "Configuration",
        "type": "Text_excerpt",
        "value": "After unarchiving the distribution, it can be configured via the `./conf/application.yml` file. Alternatively, the client can be configured through environment variables, which take presedence over the `application.yml` config.\nFor example, to run the `song-client config` command using environment variables with the same values as the `application.yml` configuration below:\n```yaml\nclient:\n  serverUrl: http://localhost:8080\n  studyId: ABC123-CA\n  programName: sing\n  debug: true\n  accessToken: myAccessToken\n```\ncould be done via:\n```bash\nCLIENT_SERVER_URL=http://localhost:8080 \\\nCLIENT_STUDY_ID=ABC123-CA \\\nCLIENT_PROGRAM_NAME=sing \\\nCLIENT_DEBUG=true \\\nCLIENT_ACCESS_TOKEN=myAccessToken \\\n./bin/sing config\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9850575145454686,
      "result": {
        "type": "Text_excerpt",
        "value": "The `song-client` can be run using the `./bin/sing` script. \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Running the client using Docker",
        "type": "Text_excerpt",
        "value": "Alternatively, the `song-client` can be run using docker. To run the dockerized client with the configurations above, the following command could be executed:\n```bash\ndocker run --rm \\\n  -e 'CLIENT_SERVER_URL=http://localhost:8080' \\\n  -e 'CLIENT_STUDY_ID=ABC123-CA' \\\n  -e 'CLIENT_PROGRAM_NAME=sing' \\\n  -e 'CLIENT_DEBUG=true' \\\n  -e 'CLIENT_ACCESS_TOKEN=myAccessToken' \\\n  overture/song-client:latest \\\n  sing config\n```\nBy default, the `song-client` is run as the root user. To run as a non-root user, add the switch `-u song` which will run the command as a predefined `song` user:\n```bash\ndocker run --rm \\\n  -u song \\\n  -e 'CLIENT_SERVER_URL=http://localhost:8080' \\\n  -e 'CLIENT_STUDY_ID=ABC123-CA' \\\n  -e 'CLIENT_PROGRAM_NAME=sing' \\\n  -e 'CLIENT_DEBUG=true' \\\n  -e 'CLIENT_ACCESS_TOKEN=myAccessToken' \\\n  overture/song-client:latest \\\n  sing config\n```\nor run it as your current user:\n```bash\ndocker run --rm \\\n  -u $(id -u):$(id -g) \\\n  -e 'CLIENT_SERVER_URL=http://localhost:8080' \\\n  -e 'CLIENT_STUDY_ID=ABC123-CA' \\\n  -e 'CLIENT_PROGRAM_NAME=sing' \\\n  -e 'CLIENT_DEBUG=true' \\\n  -e 'CLIENT_ACCESS_TOKEN=myAccessToken' \\\n  overture/song-client:latest \\\n  sing config\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999263271105776,
      "result": {
        "original_header": "Outputting data from the song-client via Docker",
        "type": "Text_excerpt",
        "value": "For example, the following command will generate a manifest file called `output-manifest.txt` in the directory `./mydir`:\n```bash\n\n# Ensure the current user owns mydir inorder to write to it from within the container\nmkdir -p ./mydir\n\ndocker run --rm \\\n  -u $(id -u):$(id -g) \\\n  -v $PWD/mydir:/data \\\n  -e 'CLIENT_SERVER_URL=http://localhost:8080' \\\n  -e 'CLIENT_STUDY_ID=ABC123-CA' \\\n  -e 'CLIENT_PROGRAM_NAME=sing' \\\n  -e 'CLIENT_DEBUG=true' \\\n  -e 'CLIENT_ACCESS_TOKEN=myAccessToken' \\\n  overture/song-client:latest \\\n  sing manifest -a someAnalysisId -d /data -f /data/output-manifest.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8111740009521102,
      "result": {
        "type": "Text_excerpt",
        "value": "#### Command-line \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.841092676147393,
      "result": {
        "original_header": "Running the client using Docker",
        "type": "Text_excerpt",
        "value": "Alternatively, the `song-client` can be run using docker. To run the dockerized client with the configurations above, the following command could be executed:\n```bash\ndocker run --rm \\\n  -e 'CLIENT_SERVER_URL=http://localhost:8080' \\\n  -e 'CLIENT_STUDY_ID=ABC123-CA' \\\n  -e 'CLIENT_PROGRAM_NAME=sing' \\\n  -e 'CLIENT_DEBUG=true' \\\n  -e 'CLIENT_ACCESS_TOKEN=myAccessToken' \\\n  overture/song-client:latest \\\n  sing config\n```\nBy default, the `song-client` is run as the root user. To run as a non-root user, add the switch `-u song` which will run the command as a predefined `song` user:\n```bash\ndocker run --rm \\\n  -u song \\\n  -e 'CLIENT_SERVER_URL=http://localhost:8080' \\\n  -e 'CLIENT_STUDY_ID=ABC123-CA' \\\n  -e 'CLIENT_PROGRAM_NAME=sing' \\\n  -e 'CLIENT_DEBUG=true' \\\n  -e 'CLIENT_ACCESS_TOKEN=myAccessToken' \\\n  overture/song-client:latest \\\n  sing config\n```\nor run it as your current user:\n```bash\ndocker run --rm \\\n  -u $(id -u):$(id -g) \\\n  -e 'CLIENT_SERVER_URL=http://localhost:8080' \\\n  -e 'CLIENT_STUDY_ID=ABC123-CA' \\\n  -e 'CLIENT_PROGRAM_NAME=sing' \\\n  -e 'CLIENT_DEBUG=true' \\\n  -e 'CLIENT_ACCESS_TOKEN=myAccessToken' \\\n  overture/song-client:latest \\\n  sing config\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9309379697667923,
      "result": {
        "original_header": "Outputting data from the song-client via Docker",
        "type": "Text_excerpt",
        "value": "For example, the following command will generate a manifest file called `output-manifest.txt` in the directory `./mydir`:\n```bash\n\n# Ensure the current user owns mydir inorder to write to it from within the container\nmkdir -p ./mydir\n\ndocker run --rm \\\n  -u $(id -u):$(id -g) \\\n  -v $PWD/mydir:/data \\\n  -e 'CLIENT_SERVER_URL=http://localhost:8080' \\\n  -e 'CLIENT_STUDY_ID=ABC123-CA' \\\n  -e 'CLIENT_PROGRAM_NAME=sing' \\\n  -e 'CLIENT_DEBUG=true' \\\n  -e 'CLIENT_ACCESS_TOKEN=myAccessToken' \\\n  overture/song-client:latest \\\n  sing manifest -a someAnalysisId -d /data -f /data/output-manifest.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8723760468018666,
      "result": {
        "original_header": "Notes",
        "type": "Text_excerpt",
        "value": "Test\n \n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/overture-stack/SONG/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hacktoberfest"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU Affero General Public License v3.0",
        "spdx_id": "AGPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/agpl-3.0",
        "value": "https://api.github.com/licenses/agpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>.\n"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SONG"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "overture-stack"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 1303449,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 124031,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 72136,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Go",
        "size": 48791,
        "type": "Programming_language",
        "value": "Go"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PLpgSQL",
        "size": 19816,
        "type": "Programming_language",
        "value": "PLpgSQL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 16257,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 10070,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 1616,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://song-docs.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/overture-stack/song/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "joneubank",
          "type": "User"
        },
        "date_created": "2021-04-08T19:31:28Z",
        "date_published": "2021-04-09T00:46:36Z",
        "description": "## Song Release Notes\r\n\r\n* __Release Version__: 4.5.1\r\n* __Release Date__:  April 8, 2021\r\n\r\n### New Features and Changes\r\n\r\n* #717 Kafka Message after Publish contains accurate publish date properties.",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/4.5.1",
        "name": "4.5.1",
        "release_id": 41156508,
        "tag": "4.5.1",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/4.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/41156508",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/41156508",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/4.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "blabadi",
          "type": "User"
        },
        "date_created": "2021-03-23T19:04:47Z",
        "date_published": "2021-03-23T20:36:53Z",
        "description": "## Song Release Notes\r\n\r\n* __Release Version__: 4.5.0\r\n* __Release Date__:  March 23, 2021\r\n\r\n### New Features and Changes\r\n\r\n* Added support for the configurable Swagger API to to run behind a reverse proxy.  This is to enable the Song API for use behind the DMS gateway provided in the [Overture DMS platform bundle](https://github.com/overture-stack/dms/releases).",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/4.5.0",
        "name": "4.5.0",
        "release_id": 40250227,
        "tag": "4.5.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/4.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/40250227",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/40250227",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/4.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "joneubank",
          "type": "User"
        },
        "date_created": "2020-11-26T21:35:34Z",
        "date_published": "2020-11-26T21:41:56Z",
        "description": "* Application Auth tie in with Ego\r\n* Created and Updated dates with Analysis and Analysis Types\r\n* State History and published/firstPublished dates for Analyses",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/4.4.0",
        "name": "4.4.0",
        "release_id": 34482701,
        "tag": "4.4.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/4.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/34482701",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/34482701",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/4.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2020-06-09T14:05:18Z",
        "date_published": "2020-07-10T13:06:46Z",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/4.2.2",
        "name": "4.2.2",
        "release_id": 28441062,
        "tag": "4.2.2",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/4.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/28441062",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/28441062",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/4.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2020-01-13T19:59:03Z",
        "date_published": "2020-01-21T23:55:00Z",
        "description": "## Summary                                                                                                                                                                                                                                                                                                                  \r\n\r\n### Breaking Changes\r\n- changed the base schema for song (for more details on the exact changes, refer to the description in PR #573)\r\n- renamed /upload endpoint to /submit\r\n- changed study to studyId in payload\r\n- removed info fields from displaying at each level when not being used in payload\r\n- renamed sample to samples in payload\r\n- renamed file to files in payload\r\n\r\n### Bug Fixes\r\n- fixed export command on song-client to write to directory \r\n\r\n### Cleanup\r\n- removed dcc-common and dcc-id dependencies\r\n\r\n### Automatic Schema Migrations\r\n- gender values automatically migrated to Male, Female, Other\r\n\r\n## Docker Images\r\nSong Client:    `docker pull overture/song-client:4.0.0`\r\nSong Server:  `docker pull overture/song-server:4.0.0`\r\n\r\n## Distributions\r\n[song-server 4.0.0 distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-server/4.0.0/song-server-4.0.0-dist.tar.gz)\r\n[song-client 4.0.0 distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-client/4.0.0/song-client-4.0.0-dist.tar.gz)\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/3.1.1...4.0.0)\r\n\r\n**Fixed bugs:**\r\n\r\n- BUG - client export not writing to directory [\\#545](https://github.com/overture-stack/SONG/issues/545)\r\n\r\n**Closed issues:**\r\n\r\n- Change base schema of song  [\\#559](https://github.com/overture-stack/SONG/issues/559)\r\n- Update Permissible values in Song to match Argo Clinical  [\\#557](https://github.com/overture-stack/SONG/issues/557)\r\n- Remove dcc-common & dcc-id dependency [\\#503](https://github.com/overture-stack/SONG/issues/503)\r\n\r\n**Merged pull requests:**\r\n\r\n- Release Candidate 4.0.0 [\\#579](https://github.com/overture-stack/SONG/pull/579) ([rtisma](https://github.com/rtisma))\r\n- Fixed client sample output [\\#578](https://github.com/overture-stack/SONG/pull/578) ([rtisma](https://github.com/rtisma))\r\n- Fix matched normal [\\#577](https://github.com/overture-stack/SONG/pull/577) ([rtisma](https://github.com/rtisma))\r\n- base-schema-migration-fix [\\#575](https://github.com/overture-stack/SONG/pull/575) ([rtisma](https://github.com/rtisma))\r\n- Remove dcc common and dcc id dependency\\#503 [\\#574](https://github.com/overture-stack/SONG/pull/574) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n- Song 559 change base schema [\\#573](https://github.com/overture-stack/SONG/pull/573) ([rtisma](https://github.com/rtisma))\r\n- Bug client export not writing to directory\\#545 [\\#572](https://github.com/overture-stack/SONG/pull/572) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n- File study submit sample rename [\\#570](https://github.com/overture-stack/SONG/pull/570) ([rtisma](https://github.com/rtisma))\r\n- Song 557 gender filetype [\\#568](https://github.com/overture-stack/SONG/pull/568) ([rtisma](https://github.com/rtisma))\r\n- Mergeback 3.1.1 snapshot [\\#567](https://github.com/overture-stack/SONG/pull/567) ([rtisma](https://github.com/rtisma))\r\n\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/4.0.0",
        "name": "4.0.0",
        "release_id": 23023358,
        "tag": "4.0.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/4.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/23023358",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/23023358",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/4.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2019-12-13T14:41:02Z",
        "date_published": "2019-12-13T16:47:32Z",
        "description": "## Summary                                                                                                                                                                                                                                                                                                                  \r\n\r\n### Bug Fixes\r\n- song-client cannot be executed from the ./bin directory\r\n\r\n## Docker Images\r\nSong Client:    `docker pull overture/song-client:3.1.1`\r\nSong Server:  `docker pull overture/song-server:3.1.1`\r\n\r\n## Distributions\r\n[song-server 3.1.1 distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-server/3.1.1/song-server-3.1.1-dist.tar.gz)\r\n[song-client 3.1.1 distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-client/3.1.1/song-client-3.1.1-dist.tar.gz)\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/3.1.0...3.1.1)\r\n\r\n**Fixed bugs:**\r\n- BUG - Update song-client docker to properly execute [\\#556](https://github.com/overture-stack/SONG/issues/556)\r\n- Fixed sing executable [\\#563](https://github.com/overture-stack/SONG/pull/563) ([rtisma](https://github.com/rtisma))\r\n\r\n**Merged pull requests:**\r\n\r\n- Bugfix: sing now computes it's parent directory correctly [\\#558](https://github.com/overture-stack/SONG/pull/558) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/3.1.1",
        "name": "3.1.1",
        "release_id": 22215696,
        "tag": "3.1.1",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/3.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/22215696",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/22215696",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/3.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2019-12-10T16:40:41Z",
        "date_published": "2019-12-13T16:17:46Z",
        "description": "## Summary                                                                                                                                                                                                                                                                                                                  \r\n### New Features\r\n- Analysis `analysisId`s are now only randomly generated by song-server\r\n- File `objectId`s are now only UUID5 hashed by song-server\r\n\r\n### Bug Fixes\r\n- Payload validation failed during java-based validation instead of jsonSchema-based validation\r\n- song-client `search -a` and `update-file` commands did not deserialized file objects properly\r\n- registerAnalysis endpoint did not block from overwriting the `analysisState` validation\r\n- `createStudy` endpoint now returns a simple json message\r\n- updating a file triggered an automatic unpublishing of the associate analysis. The was not intended and was removed.\r\n\r\n## Docker Images\r\nSong Client:    `docker pull overture/song-client:3.1.0`\r\nSong Server:  `docker pull overture/song-server:3.1.0`\r\n\r\n## Distributions\r\n[song-server 3.1.0 distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-server/3.1.0/song-server-3.1.0-dist.tar.gz)\r\n[song-client 3.1.0 distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-client/3.1.0/song-client-3.1.0-dist.tar.gz)\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/3.0.1...3.1.0)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Force song to always generate objectIds [\\#539](https://github.com/overture-stack/SONG/issues/539)\r\n- Remove the option for user supplied analysisIds [\\#494](https://github.com/overture-stack/SONG/issues/494)\r\n\r\n**Fixed bugs:**\r\n- Response code = 0 when creating a study properly [\\#394](https://github.com/overture-stack/SONG/issues/394)\r\n- Remove uneccessary non-json schema validation [\\#543](https://github.com/overture-stack/SONG/issues/543)\r\n- BUG - Submit payload deserialization issue [\\#551](https://github.com/overture-stack/SONG/issues/551)\r\n- BUG: song-client analysisSearch and fileUpdate not processing file entity properly [\\#504](https://github.com/overture-stack/SONG/issues/504)\r\n- BUG - registerAnalysis endpoint does not block analysisState field [\\#481](https://github.com/overture-stack/SONG/issues/481)\r\n- BUG - remove auto unpublish step when updating file content [\\#547](https://github.com/overture-stack/SONG/issues/547)\r\n- BUG - CreateStudy endpoint returns 200 but says error in swagger  [\\#508](https://github.com/overture-stack/SONG/issues/508)\r\n\r\n**Closed issues:**\r\n\r\n- Create Spring Properties and Configuration [\\#493](https://github.com/overture-stack/SONG/issues/493)\r\n- Add functionality to correct an analysis, as well as Tests [\\#126](https://github.com/overture-stack/SONG/issues/126)\r\n\r\n**Merged pull requests:**\r\n\r\n- Enhancement: Remove auto unpublish [\\#554](https://github.com/overture-stack/SONG/pull/554) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n- Enhancement: CreateStudy endpoint now returns a JSON object to keep S\u2026 [\\#553](https://github.com/overture-stack/SONG/pull/553) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n- Added tests [\\#552](https://github.com/overture-stack/SONG/pull/552) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n- fixed broken develop [\\#550](https://github.com/overture-stack/SONG/pull/550) ([rtisma](https://github.com/rtisma))\r\n- song-481-register-analysis-state-bug [\\#549](https://github.com/overture-stack/SONG/pull/549) ([rtisma](https://github.com/rtisma))\r\n- updated federatedIdService to locally generate objectids [\\#548](https://github.com/overture-stack/SONG/pull/548) ([rtisma](https://github.com/rtisma))\r\n\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/3.1.0",
        "name": "3.1.0",
        "release_id": 22215299,
        "tag": "3.1.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/3.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/22215299",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/22215299",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/3.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2019-11-26T21:27:10Z",
        "date_published": "2019-11-26T23:32:57Z",
        "description": "## Summary                                                                                                                                                                                                                                                                                                                  \r\n\r\n### Infra\r\n- added `bootstrap.properties` to classpath for Dockerfile command\r\n- added distribution to artifactory in Jenkinsfile\r\n\r\n## Docker Images\r\nSong Client:    `docker pull overture/song-client:3.0.1`\r\nSong Server:  `docker pull overture/song-server:3.0.1`\r\n\r\n## Distributions\r\n[song-server 3.0.1 distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-server/3.0.1/song-server-3.0.1-dist.tar.gz)\r\n[song-client 3.0.1 distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-client/3.0.1/song-client-3.0.1-dist.tar.gz)\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/3.0.0...3.0.1)\r\n\r\n**Merged pull requests:**\r\n\r\n- Release 3.0.1 [\\#540](https://github.com/overture-stack/SONG/pull/540) ([rtisma](https://github.com/rtisma))\r\n- fixed-docker-command [\\#538](https://github.com/overture-stack/SONG/pull/538) ([rtisma](https://github.com/rtisma))\r\n- Define release process for artifactory roadmap\\#148 [\\#537](https://github.com/overture-stack/SONG/pull/537) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n- Trying syntax again [\\#527](https://github.com/overture-stack/SONG/pull/527) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n- Define release process for cleints to oicr artifactory roadmap 148 [\\#526](https://github.com/overture-stack/SONG/pull/526) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/3.0.1",
        "name": "3.0.1",
        "release_id": 21784637,
        "tag": "3.0.1",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/3.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/21784637",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/21784637",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/3.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2019-11-22T21:58:33Z",
        "date_published": "2019-11-25T20:12:38Z",
        "description": "## Summary                                                                                                                                                                                                                                                                                                                  \r\n\r\n### Breaking Changes\r\n- removed analysisId field from submission payload for the `Submit` endpoint in song-server. They are now randomly generated\r\n- removed `includeAnalysisId` request parameter from `Export` endpoint in song-server\r\n- removed `-i, --include-analysis-id` from `export` command in song-client\r\n- removed `includeAnalysisId` method argument from export SDK method\r\n                                                                                                                                                                                                                                                                                                                            \r\n### Bug Fixes                                                                                                                                                                                                                                                                                                               \r\n- Fixed song-client `updateFile` and `search -a` file deserialization issues                                                                                                                                                                                                                                                \r\n                                                                                                                                                                                                                                                                                                                            \r\n### New Features\r\n- Added customizable federated ID service configuration\r\n\r\n### Infra\r\n- Improved docker infrastructure to not use docker host network and use images from Dockerhub\r\n\r\n## Docker Images\r\nSong Client:    `docker pull overture/song-client:3.0.0`\r\nSong Server:  `docker pull overture/song-server:3.0.0`\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/2.2.0...3.0.0)\r\n\r\n**Closed issues:**\r\n\r\n- Update docker infra [\\#499](https://github.com/overture-stack/SONG/issues/499)\r\n- Refactor LocalIdService [\\#489](https://github.com/overture-stack/SONG/issues/489)\r\n- Release Dynamic Song + client  [\\#485](https://github.com/overture-stack/SONG/issues/485)\r\n- Id Server Integration Specs [\\#483](https://github.com/overture-stack/SONG/issues/483)\r\n- Implement configurable ID generation [\\#471](https://github.com/overture-stack/SONG/issues/471)\r\n\r\n**Merged pull requests:**\r\n\r\n- Release Candidate version 3.0.0 \\#2 [\\#536](https://github.com/overture-stack/SONG/pull/536) ([rtisma](https://github.com/rtisma))\r\n- Release Candidate 2.3.0 [\\#534](https://github.com/overture-stack/SONG/pull/534) ([rtisma](https://github.com/rtisma))\r\n- Song 494 remove analysis ids [\\#533](https://github.com/overture-stack/SONG/pull/533) ([rtisma](https://github.com/rtisma))\r\n- Song 504 client file bug [\\#519](https://github.com/overture-stack/SONG/pull/519) ([rtisma](https://github.com/rtisma))\r\n- Song 499 improve docker infra [\\#510](https://github.com/overture-stack/SONG/pull/510) ([rtisma](https://github.com/rtisma))\r\n- Song 492 federated id service [\\#507](https://github.com/overture-stack/SONG/pull/507) ([rtisma](https://github.com/rtisma))\r\n- Feature/170 dockerized psql exec [\\#501](https://github.com/overture-stack/SONG/pull/501) ([Magnitus-](https://github.com/Magnitus-))\r\n- Song 489 localidservice [\\#500](https://github.com/overture-stack/SONG/pull/500) ([rtisma](https://github.com/rtisma))\r\n- Merge Back - Master @ 2.2.0 [\\#488](https://github.com/overture-stack/SONG/pull/488) ([rtisma](https://github.com/rtisma))\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/3.0.0",
        "name": "3.0.0",
        "release_id": 21745684,
        "tag": "3.0.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/3.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/21745684",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/21745684",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/3.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2019-10-28T20:13:09Z",
        "date_published": "2019-10-28T20:35:01Z",
        "description": "## Summary\r\n\r\n### Bug Fixes\r\n- Manifest null error\r\n\r\n### New Features\r\n- vault support for song-server\r\n\r\n### Cosmetic\r\n- updated copyright headers\r\n- updated out of date swagger docs\r\n\r\n## Docker Images\r\nSong Client:    `docker pull overture/song-client:2.2.0`\r\nSong Server:  `docker pull overture/song-server:2.2.0`\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/2.1.0...2.2.0)\r\n\r\n**Fixed bugs:**\r\n\r\n- BUG - Manifest command not working [\\#472](https://github.com/overture-stack/SONG/issues/472)\r\n\r\n**Closed issues:**\r\n\r\n- Update Copyright Information [\\#470](https://github.com/overture-stack/SONG/issues/470)\r\n- Update Swagger doc descriptions  [\\#467](https://github.com/overture-stack/SONG/issues/467)\r\n- Technical Architecture SONG  [\\#465](https://github.com/overture-stack/SONG/issues/465)\r\n\r\n**Merged pull requests:**\r\n\r\n- Song client docker [\\#486](https://github.com/overture-stack/SONG/pull/486) ([rtisma](https://github.com/rtisma))\r\n- Adds vault support to song [\\#484](https://github.com/overture-stack/SONG/pull/484) ([andricDu](https://github.com/andricDu))\r\n- Update swagger annotations [\\#479](https://github.com/overture-stack/SONG/pull/479) ([rtisma](https://github.com/rtisma))\r\n- song-472 Fixed manifest issue [\\#478](https://github.com/overture-stack/SONG/pull/478) ([rtisma](https://github.com/rtisma))\r\n- Merge Back - Master @ 2.1.0 [\\#477](https://github.com/overture-stack/SONG/pull/477) ([rtisma](https://github.com/rtisma))\r\n- Song 470 update copyright [\\#476](https://github.com/overture-stack/SONG/pull/476) ([rtisma](https://github.com/rtisma))\r\n\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/2.2.0",
        "name": "2.2.0",
        "release_id": 21034616,
        "tag": "2.2.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/2.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/21034616",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/21034616",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/2.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2019-02-13T20:18:33Z",
        "date_published": "2019-05-01T18:00:14Z",
        "description": "## Summary\r\n\r\n### Bug Fixes\r\n- Deadlock condition with score when publishing an analysis (related to overture-stack/score#140)\r\n\r\n## Downloads\r\n[Song-Client-1.4.1 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-client/1.4.1/song-client-1.4.1-dist.tar.gz)\r\n\r\n[Song-Server-1.4.1 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-server/1.4.1/song-server-1.4.1-dist.tar.gz)\r\n\r\n## Docker Compose\r\n[song-docker-1.4.1](https://github.com/overture-stack/SONG/releases/tag/song-docker-1.4.1)\r\n\r\n```bash\r\ngit clone --branch song-docker-1.4.1 https://github.com/overture-stack/SONG.git  song-docker-1.4.1\r\n```\r\n\r\n## Python SDK\r\n[overture-song=1.4.1](https://pypi.org/project/overture-song/1.4.1/)\r\n\r\n```bash\r\npip install overture-song==1.4.1\r\n```\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/song-1.4.0...song-1.4.1)\r\n\r\n**Fixed bugs:**\r\n\r\n- fix: Using new exclude-urls param for avoid deadlock [\\#391](https://github.com/overture-stack/SONG/pull/391) ([rtisma](https://github.com/rtisma))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-1.4.1",
        "release_id": 15545970,
        "tag": "song-1.4.1",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-1.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/15545970",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/15545970",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-1.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2019-02-12T19:46:02Z",
        "date_published": "2019-02-13T20:32:17Z",
        "description": "## Summary\r\n\r\n### New Features\r\n- Added support for `.tgz` file types\r\n\r\n## Data Migration from song-1.3.1\r\nSince a new value for the enum `file_type` was added, the existing databases must be updated.\r\n```sql\r\n--- Current values for the file_type enum\r\nSELECT enum_range(NULL::file_type);\r\n\r\n--- Add TGZ to the file_type enum\r\nALTER TYPE file_type ADD VALUE 'TGZ';\r\n\r\n--- Verify TGZ was added\r\nSELECT enum_range(NULL::file_type);\r\n\r\n```\r\n\r\n## Downloads\r\n[Song-Client-1.4.0 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-client/1.4.0/song-client-1.4.0-dist.tar.gz)\r\n\r\n[Song-Server-1.4.0 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-server/1.4.0/song-server-1.4.0-dist.tar.gz)\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/song-1.3.1...song-1.4.0)\r\n\r\n**Fixed bugs:**\r\n\r\n- Fix outdated links in SONG docs [\\#384](https://github.com/overture-stack/SONG/issues/384)\r\n- Internal Server Error when attempting to publish SONG payload in AWS [\\#371](https://github.com/overture-stack/SONG/issues/371)\r\n\r\n**Closed issues:**\r\n\r\n- Allow inclusion of TAR.GZ fileType in analysis object [\\#388](https://github.com/overture-stack/SONG/issues/388)\r\n- Release and deploy Song 1.3.0 [\\#376](https://github.com/overture-stack/SONG/issues/376)\r\n- fix circle-ci for song [\\#370](https://github.com/overture-stack/SONG/issues/370)\r\n- Preliminary look at converting service to OpenJDK 11 [\\#353](https://github.com/overture-stack/SONG/issues/353)\r\n\r\n**Merged pull requests:**\r\n\r\n- Adds support for .tgz filetypes as part of analysis. [\\#389](https://github.com/overture-stack/SONG/pull/389) ([andricDu](https://github.com/andricDu))\r\n- Fixed outdated links in SONG docs [\\#385](https://github.com/overture-stack/SONG/pull/385) ([b-f-chan](https://github.com/b-f-chan))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-1.4.0",
        "release_id": 15520979,
        "tag": "song-1.4.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/15520979",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/15520979",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-1.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-11-30T17:59:25Z",
        "date_published": "2018-11-30T18:12:40Z",
        "description": "upgraded song to 1.3.1",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-docker-1.3.1",
        "release_id": 14287410,
        "tag": "song-docker-1.3.1",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-docker-1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/14287410",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/14287410",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-docker-1.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-11-30T17:41:16Z",
        "date_published": "2018-11-30T17:42:52Z",
        "description": "- upgraded song to 1.3.0\r\n- upgraded id server to 5.2.0\r\n- upgraded score server to 1.5.0",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-docker-1.3.0",
        "release_id": 14286868,
        "tag": "song-docker-1.3.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-docker-1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/14286868",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/14286868",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-docker-1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-11-30T00:15:32Z",
        "date_published": "2018-11-30T18:11:58Z",
        "description": "## Summary\r\n\r\n### Bug Fixes\r\n- disabled auth for `schema` endpoint\r\n\r\n## Downloads\r\n[Song-Client-1.3.1 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-client/1.3.1/song-client-1.3.1-dist.tar.gz)\r\n\r\n[Song-Server-1.3.1 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-server/1.3.1/song-server-1.3.1-dist.tar.gz)\r\n\r\n## Docker Compose\r\n[song-docker-1.3.1](https://github.com/overture-stack/SONG/releases/tag/song-docker-1.3.1)\r\n\r\n```bash\r\ngit clone --branch song-docker-1.3.1 https://github.com/overture-stack/SONG.git  song-docker-1.3.1\r\n```\r\n\r\n## Python SDK\r\n[overture-song=1.3.1](https://pypi.org/project/overture-song/1.3.1/)\r\n\r\n```bash\r\npip install overture-song==1.3.1\r\n```\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/song-1.3.0...song-1.3.1)\r\n\r\n**Merged pull requests:**\r\n\r\n- fix: disabled auth for schema endpoint [\\#377](https://github.com/overture-stack/SONG/pull/377) ([rtisma](https://github.com/rtisma))\r\n\r\n\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-1.3.1",
        "release_id": 14287396,
        "tag": "song-1.3.1",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/14287396",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/14287396",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-1.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-11-29T16:24:03Z",
        "date_published": "2018-11-30T18:06:53Z",
        "description": "## Summary\r\n\r\n### Bug Fixes\r\n- validate saveStudy endpoint\r\n- validate that the `filename` field in the `file` section of the payload is a basename (no directories)\r\n\r\n### New Features\r\n- `/schema` endpoint to retireve schema info for analyses\r\n- absolute pathname now used in manifest outputs for the java client, go client and python sdk\r\n- `/unpublish` endpoint to unpublish analyses that are published\r\n- added `analysisStates` url parameter to the `GetAnalysisForStudy` endpoint to filter by a set of analysisStates\r\n- `study` is now a requirement in the payload. Reduces accidental uploads to the wrong study\r\n- validate the studyId url parameter of `SaveStudy` endpoint with the studyId of the payload\r\n- analysisId revoke mechanism. AnalysisIds are committed to the id server only on success\r\n\r\n### Performance\r\n- improved `GetAnalysisForStudy` performance. LIRI-JP down from 50min to 2min.\r\n\r\n### Misc\r\n- fixed vulnerbilities flagged by github\r\n- upgraded dcc-id dependency to 5.2.0\r\n\r\n### DB Migration\r\n1. Save the following sql script to a file called `song-1.3.0-migration.sql`\r\n```sql\r\nCREATE VIEW FullView AS\r\nSELECT\r\n       A.id as analysis_id,\r\n       A.study_id as study_id,\r\n       A.type as analysis_type,\r\n       A.state as analysis_state,\r\n       I_A.info as analysis_info,\r\n       F.id as file_object_id,\r\n       F.access as file_access,\r\n       F.md5 as file_md5,\r\n       F.name as file_name,\r\n       F.size as file_size,\r\n       F.type as file_type,\r\n       I_F.info as file_info,\r\n       SA.id as sample_id,\r\n       SA.type as sample_type,\r\n       SA.submitter_id as sample_submitter_id,\r\n       I_SA.info as sample_info,\r\n       SP.id as specimen_id,\r\n       SP.type as specimen_type,\r\n       SP.class as specimen_class,\r\n       SP.submitter_id as specimen_submitter_id,\r\n       I_SP.info as specimen_info,\r\n       D.id as donor_id,\r\n       D.gender as donor_gender,\r\n       D.submitter_id as donor_submitter_id,\r\n       I_D.info as donor_info,\r\n       I_SR.info as sequencingread_info,\r\n       I_VC.info as variantcall_info\r\nFROM Analysis A\r\n       left join Info I_A on I_A.id = A.id and I_A.id_type = 'Analysis'\r\n       left join File F on F.analysis_id = A.id\r\n       left join Info I_F on I_F.id = F.id and I_F.id_type = 'File'\r\n       left join SampleSet SS on SS.analysis_id = A.id\r\n       left join Sample SA on SA.id = SS.sample_id\r\n       left join Info I_SA on I_SA.id = SA.id and I_SA.id_type = 'Sample'\r\n       left join Specimen SP on SP.id = SA.specimen_id\r\n       left join Info I_SP on I_SP.id = SP.id and I_SP.id_type = 'Specimen'\r\n       left join Donor D on D.id = SP.donor_id\r\n       left join Info I_D on I_D.id = D.id and I_D.id_type  = 'Donor'\r\n       left join Info I_VC on I_VC.id = A.id and I_VC.id_type = 'VariantCall'\r\n       left join Info I_SR on I_SR.id = A.id and I_SR.id_type = 'SequencingRead';\r\n```\r\n2. Run the sql script on the existing song database\r\n```bash\r\nPGPASSWORD=<dbpasswd>  psql  -h <dbhostname>  -p <dbport>  -U <dbuser>  song < song-1.3.0-migration.sql\r\n```\r\n3. Test that the migration worked. There should be no error\r\n```bash\r\nPGPASSWORD=<dbpasswd>  psql  -h <dbhostname>  -p <dbport>  -U <dbuser>  song -c 'select * from fullview limit 5;'\r\n```\r\n## Downloads\r\n[Song-Client-1.3.0 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-client/1.3.0/song-client-1.3.0-dist.tar.gz)\r\n\r\n[Song-Server-1.3.0 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/bio/overture/song-server/1.3.0/song-server-1.3.0-dist.tar.gz)\r\n\r\n## Docker Compose\r\n[song-docker-1.3.0](https://github.com/overture-stack/SONG/releases/tag/song-docker-1.3.0)\r\n\r\n```bash\r\ngit clone --branch song-docker-1.3.0 https://github.com/overture-stack/SONG.git  song-docker-1.3.0\r\n```\r\n\r\n## Python SDK\r\n[overture-song=1.3.0](https://pypi.org/project/overture-song/1.3.0/)\r\n\r\n```bash\r\npip install overture-song==1.3.0\r\n```\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/song-1.2.0...song-1.3.0)\r\n\r\n**Implemented enhancements:**\r\n\r\n- add get-json-schema feature endpoint [\\#373](https://github.com/overture-stack/SONG/issues/373)\r\n- Update manifest command in song-go-client to match song-client [\\#349](https://github.com/overture-stack/SONG/issues/349)\r\n- Support unpublishing analysis object [\\#346](https://github.com/overture-stack/SONG/issues/346)\r\n- Optimize GetAnalysisForStudy to be faster [\\#338](https://github.com/overture-stack/SONG/issues/338)\r\n- Assign collab domain and letsencrypt cert to half-song [\\#330](https://github.com/overture-stack/SONG/issues/330)\r\n- Update dcc-repository with override flag for indexing UNPUBLISHED data [\\#317](https://github.com/overture-stack/SONG/issues/317)\r\n- Add 'study' field in SONG payload and make it required [\\#308](https://github.com/overture-stack/SONG/issues/308)\r\n- Request param in saveStudy endpoint not validated with payload [\\#300](https://github.com/overture-stack/SONG/issues/300)\r\n- Feature/song 308 add study id payload [\\#352](https://github.com/overture-stack/SONG/pull/352) ([rtisma](https://github.com/rtisma))\r\n- Feature/song 338 get analyses optimize [\\#342](https://github.com/overture-stack/SONG/pull/342) ([rtisma](https://github.com/rtisma))\r\n\r\n**Fixed bugs:**\r\n\r\n- COLLAB info id doesnt exist [\\#358](https://github.com/overture-stack/SONG/issues/358)\r\n- AWS null pointer for info field error [\\#356](https://github.com/overture-stack/SONG/issues/356)\r\n- Fix readthedocs compile error [\\#334](https://github.com/overture-stack/SONG/issues/334)\r\n- GetAnalysesForStudy endpoint should only return PUBLISHED analyses [\\#325](https://github.com/overture-stack/SONG/issues/325)\r\n- Add analysisId revoke for when save fails but id was already created [\\#321](https://github.com/overture-stack/SONG/issues/321)\r\n- Error about Info record for Donor not found [\\#318](https://github.com/overture-stack/SONG/issues/318)\r\n- Value for `fileName` field must contain file basename only [\\#311](https://github.com/overture-stack/SONG/issues/311)\r\n- Request param in saveStudy endpoint not validated with payload [\\#300](https://github.com/overture-stack/SONG/issues/300)\r\n\r\n**Closed issues:**\r\n\r\n- Export endpoint includes analysisState [\\#366](https://github.com/overture-stack/SONG/issues/366)\r\n- Add go-client building with maven [\\#363](https://github.com/overture-stack/SONG/issues/363)\r\n- Fix vulnerabilities flagged by GitHub [\\#360](https://github.com/overture-stack/SONG/issues/360)\r\n- help [\\#359](https://github.com/overture-stack/SONG/issues/359)\r\n- Create a HELM package for SONG [\\#354](https://github.com/overture-stack/SONG/issues/354)\r\n- Assist in update to XMLs in production [\\#351](https://github.com/overture-stack/SONG/issues/351)\r\n- Create SONG sandbox environments [\\#340](https://github.com/overture-stack/SONG/issues/340)\r\n- Write documentation about how to deploy an app \\(song-pdc\\) on Kubernetes [\\#336](https://github.com/overture-stack/SONG/issues/336)\r\n- Create Postgres docker image that has schema built in [\\#335](https://github.com/overture-stack/SONG/issues/335)\r\n- Create Half-Song for PDC [\\#316](https://github.com/overture-stack/SONG/issues/316)\r\n- Change group name from dcc to overture [\\#271](https://github.com/overture-stack/SONG/issues/271)\r\n- New feature requests or adjustments to existing behaviour after first experience using SONG in workflow batch processing [\\#241](https://github.com/overture-stack/SONG/issues/241)\r\n- In SONG analysis submission payload, allow user to specify access control at file level [\\#141](https://github.com/overture-stack/SONG/issues/141)\r\n\r\n**Merged pull requests:**\r\n\r\n- Feature/song 373 json schema endpoint [\\#375](https://github.com/overture-stack/SONG/pull/375) ([rtisma](https://github.com/rtisma))\r\n- chore: Updated requests to 2.20.0 due to vulnerbilities [\\#369](https://github.com/overture-stack/SONG/pull/369) ([rtisma](https://github.com/rtisma))\r\n- fix: Removed analysisState from export ouptut [\\#367](https://github.com/overture-stack/SONG/pull/367) ([rtisma](https://github.com/rtisma))\r\n- Song 321 revoke analysis [\\#364](https://github.com/overture-stack/SONG/pull/364) ([rtisma](https://github.com/rtisma))\r\n- fix: Fixed null pointer issue with info fields [\\#357](https://github.com/overture-stack/SONG/pull/357) ([rtisma](https://github.com/rtisma))\r\n- Update go manifest command [\\#355](https://github.com/overture-stack/SONG/pull/355) ([d8660091](https://github.com/d8660091))\r\n- Support unpulishing analysis object [\\#350](https://github.com/overture-stack/SONG/pull/350) ([d8660091](https://github.com/d8660091))\r\n- song-338-added batching [\\#348](https://github.com/overture-stack/SONG/pull/348) ([rtisma](https://github.com/rtisma))\r\n- Implement new song-server endpoints \\#4 [\\#345](https://github.com/overture-stack/SONG/pull/345) ([d8660091](https://github.com/d8660091))\r\n- Validate study payload to prevent mismatch study ids [\\#344](https://github.com/overture-stack/SONG/pull/344) ([d8660091](https://github.com/d8660091))\r\n- Move go client into monorepo [\\#343](https://github.com/overture-stack/SONG/pull/343) ([d8660091](https://github.com/d8660091))\r\n- Feature/song 311 file basename only [\\#333](https://github.com/overture-stack/SONG/pull/333) ([rtisma](https://github.com/rtisma))\r\n- added longer default retry for the id client [\\#332](https://github.com/overture-stack/SONG/pull/332) ([rtisma](https://github.com/rtisma))\r\n- Renaming org.icgc.dcc to bio.overture [\\#331](https://github.com/overture-stack/SONG/pull/331) ([rtisma](https://github.com/rtisma))\r\n- Added url param for getAnalyseseByStudy so can filter by analysisState [\\#328](https://github.com/overture-stack/SONG/pull/328) ([rtisma](https://github.com/rtisma))\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-1.3.0",
        "release_id": 14281486,
        "tag": "song-1.3.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/14281486",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/14281486",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-09-13T16:13:44Z",
        "date_published": "2018-09-14T14:43:26Z",
        "description": "## Summary\r\n\r\n### Bug Fixes\r\n- saving a sample with an existing specimen id\r\n\r\n### New Features\r\n- automatic database re-connection\r\n\r\n### Misc\r\n- fixed Legacy controller swagger descriptions\r\n\r\n## Downloads\r\n[Song-Client-1.2.0 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-client/1.2.0/song-client-1.2.0-dist.tar.gz)\r\n\r\n[Song-Server-1.2.0 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-server/1.2.0/song-server-1.2.0-dist.tar.gz)\r\n\r\n## Docker Compose\r\n[song-docker-1.2.0](https://github.com/overture-stack/SONG/releases/tag/song-docker-1.2.0)\r\n\r\n```bash\r\ngit clone --branch song-docker-1.2.0 https://github.com/overture-stack/SONG.git  song-docker-1.2.0\r\n```\r\n\r\n## Python SDK\r\n[overture-song=1.2.0](https://pypi.org/project/overture-song/1.2.0/)\r\n\r\n```bash\r\npip install overture-song==1.2.0\r\n```\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/song-1.1.0...song-1.2.0)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Add database reconnection to spring datasource [\\#198](https://github.com/overture-stack/SONG/issues/198)\r\n- Feature/fix legacy controller [\\#305](https://github.com/overture-stack/SONG/pull/305) ([rtisma](https://github.com/rtisma))\r\n\r\n\r\n**Fixed bugs:**\r\n\r\n- Fix corrupted metadata [\\#295](https://github.com/overture-stack/SONG/issues/295)\r\n- SONG save error involving ID that already exists [\\#290](https://github.com/overture-stack/SONG/issues/290)\r\n- Feature/song 314 fix existing specimen2 [\\#315](https://github.com/overture-stack/SONG/pull/315) ([rtisma](https://github.com/rtisma))\r\n\r\n**Merged pull requests:**\r\n\r\n- Feature/add database reconnection to spring database\\#198 [\\#312](https://github.com/overture-stack/SONG/pull/312) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n- Fix path for example. [\\#309](https://github.com/overture-stack/SONG/pull/309) ([mgariepy](https://github.com/mgariepy))\r\n- Updated readme file to include progress bar [\\#306](https://github.com/overture-stack/SONG/pull/306) ([kcullion](https://github.com/kcullion))\r\n- added better checking for generated objectIds and tests [\\#304](https://github.com/overture-stack/SONG/pull/304) ([rtisma](https://github.com/rtisma))\r\n- updated python conf.py and setup.py to use pom.xml version number in release [\\#303](https://github.com/overture-stack/SONG/pull/303) ([rtisma](https://github.com/rtisma))\r\n- updated from 1.0.3 to 1.1.0 [\\#302](https://github.com/overture-stack/SONG/pull/302) ([rtisma](https://github.com/rtisma))\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-1.2.0",
        "release_id": 12885549,
        "tag": "song-1.2.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/12885549",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/12885549",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-06-29T02:57:45Z",
        "date_published": "2018-06-29T19:00:26Z",
        "description": "## Summary\r\n\r\n### Bug Fixes\r\n- Secured SONG by preventing unauthorized modification of the database\r\n\r\n### New Features\r\n- New file update endpoint for updating file metadata even after publishing\r\n- Updated the java song-client and python sdk with file update functionality\r\n- Added stricter publishing to prevent score and song from falling out of sync, additionally checking for matching md5 and size information between song and score file (refer to overture-stack/score#80 for more information)\r\n\r\n### Misc\r\n- standardized and significantly improved SONG documentation, with explainations and tutorials from production environments to docker\r\n- created a successful PoC for protobuf integration\r\n\r\n## Downloads\r\n[Song-Client-1.1.0 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-client/1.1.0/song-client-1.1.0-dist.tar.gz)\r\n\r\n[Song-Server-1.1.0 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-server/1.1.0/song-server-1.1.0-dist.tar.gz)\r\n\r\n## Docker Compose\r\n[song-docker-1.1.0](https://github.com/overture-stack/SONG/releases/tag/song-docker-1.1.0)\r\n\r\n```bash\r\ngit clone --branch song-docker-1.1.0 https://github.com/overture-stack/SONG.git  song-docker-1.1.0\r\n```\r\n\r\n## Python SDK\r\n[overture-song=1.1.0](https://pypi.org/project/overture-song/1.1.0/)\r\n\r\n```bash\r\npip install overture-song==1.1.0\r\n```\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/song-1.0.3...song-1.1.0)\r\n\r\n**Fixed bugs:**\r\n\r\n- Unauthorized modification of database [\\#219](https://github.com/overture-stack/SONG/issues/219)\r\n\r\n**Closed issues:**\r\n\r\n- PoC on protobuf for File entity [\\#286](https://github.com/overture-stack/SONG/issues/286)\r\n- Standardize documentation [\\#222](https://github.com/overture-stack/SONG/issues/222)\r\n\r\n**Merged pull requests:**\r\n\r\n- Feature/add file update clients [\\#301](https://github.com/overture-stack/SONG/pull/301) ([rtisma](https://github.com/rtisma))\r\n- Feature/score 80 stricter publishing [\\#299](https://github.com/overture-stack/SONG/pull/299) ([rtisma](https://github.com/rtisma))\r\n- Feature/score 80 add file update endpoint [\\#298](https://github.com/overture-stack/SONG/pull/298) ([rtisma](https://github.com/rtisma))\r\n- updated song-docs landing page to be introduction [\\#297](https://github.com/overture-stack/SONG/pull/297) ([rtisma](https://github.com/rtisma))\r\n- removed incorrect hyerlinking and accidently added pages [\\#296](https://github.com/overture-stack/SONG/pull/296) ([rtisma](https://github.com/rtisma))\r\n- Feature/song 222 song documentation [\\#293](https://github.com/overture-stack/SONG/pull/293) ([rtisma](https://github.com/rtisma))\r\n- Added Readthedocs badge to readme [\\#291](https://github.com/overture-stack/SONG/pull/291) ([Fgerthoffert](https://github.com/Fgerthoffert))\r\n- Feature/song 219 unauthorized modification [\\#289](https://github.com/overture-stack/SONG/pull/289) ([rtisma](https://github.com/rtisma))\r\n- updated song-docker to 1.0.3 [\\#287](https://github.com/overture-stack/SONG/pull/287) ([rtisma](https://github.com/rtisma))\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-1.1.0",
        "release_id": 11704171,
        "tag": "song-1.1.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/11704171",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/11704171",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-05-29T15:02:00Z",
        "date_published": "2018-05-29T15:02:53Z",
        "description": "Updated db, song-server and song-client to song-1.0.3",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-docker-1.0.3",
        "release_id": 11221996,
        "tag": "song-docker-1.0.3",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-docker-1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/11221996",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/11221996",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-docker-1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-05-29T14:17:58Z",
        "date_published": "2018-05-29T14:33:35Z",
        "description": "## Summary\r\n\r\n### Bug Fixes\r\n- Implemented the correct SONG endpoint that is called by the SCORE client when mounting files from Collaboratory\r\n- Added md5 and analysisId contraints at the upload validation step (via JsonSchema) instead of the database level\r\n\r\n### Misc\r\n- removed unused tumor_sample_submitter_id\r\n\r\n## Downloads\r\n[Song-Client-1.0.3 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-client/1.0.3/song-client-1.0.3-dist.tar.gz)\r\n\r\n[Song-Server-1.0.3 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-server/1.0.3/song-server-1.0.3-dist.tar.gz)\r\n\r\n## Docker Compose\r\n[song-docker-1.0.3](https://github.com/overture-stack/SONG/releases/tag/song-docker-1.0.3)\r\n\r\n```bash\r\ngit clone --branch song-docker-1.0.3 https://github.com/overture-stack/SONG.git  song-docker-1.0.3\r\n```\r\n\r\n## Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/song-docker-1.0.2...song-1.0.3)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Add error handling for publishing DNE analysisId, and files not uploaded [\\#94](https://github.com/overture-stack/SONG/issues/94)\r\n\r\n**Fixed bugs:**\r\n\r\n- Unimplemented LegacyEntity endpoint for score mount command [\\#269](https://github.com/overture-stack/SONG/issues/269)\r\n- Analysis ID over 36 char fails to upload with 500 error [\\#204](https://github.com/overture-stack/SONG/issues/204)\r\n- Fix song-server existence check authorization missing bearer  [\\#128](https://github.com/overture-stack/SONG/issues/128)\r\n\r\n**Closed issues:**\r\n\r\n- Remove tumor\\_sample\\_submitter\\_id from VariantCall schema [\\#230](https://github.com/overture-stack/SONG/issues/230)\r\n\r\n**Merged pull requests:**\r\n\r\n- Feature/song 269 score mount endpoint [\\#285](https://github.com/overture-stack/SONG/pull/285) ([rtisma](https://github.com/rtisma))\r\n- feat: Updated json schemas for md5 and analysisId [\\#284](https://github.com/overture-stack/SONG/pull/284) ([rtisma](https://github.com/rtisma))\r\n- refactor: Removed tumor\\_sample\\_submitter\\_id from VariantCall table [\\#283](https://github.com/overture-stack/SONG/pull/283) ([rtisma](https://github.com/rtisma))\r\n- test: Added test for publishing non-existent id [\\#282](https://github.com/overture-stack/SONG/pull/282) ([rtisma](https://github.com/rtisma))\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-1.0.3",
        "release_id": 11221383,
        "tag": "song-1.0.3",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/11221383",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/11221383",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-05-15T19:34:21Z",
        "date_published": "2018-05-15T19:36:58Z",
        "description": "- updated song-server, song-client and db schema to [song-1.0.2](https://github.com/overture-stack/SONG/releases/tag/song-1.0.2)\r\n- updated minio to RELEASE.2018-05-11T00-29-24Z\r\n- update score to [1.1.1](https://github.com/overture-stack/score/releases/tag/1.1.1)",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-docker-1.0.2",
        "release_id": 11013764,
        "tag": "song-docker-1.0.2",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-docker-1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/11013764",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/11013764",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-docker-1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-05-11T15:17:08Z",
        "date_published": "2018-05-15T19:51:39Z",
        "description": "# Summary:\r\n\r\n## Bug Fixes:\r\n- reverted `jsonb` type to `json` for `Info` table\r\n\r\n---\r\n# Downloads\r\n[Song-Client-1.0.2 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-client/1.0.2/song-client-1.0.2-dist.tar.gz)\r\n\r\n[Song-Server-1.0.2 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-server/1.0.2/song-server-1.0.2-dist.tar.gz)\r\n\r\n---\r\n\r\n# Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/song-1.0.1...song-1.0.2)\r\n\r\n## Merged pull requests:\r\n\r\n- fix\\(Revert\\): changed back to json type instead of jsonb [\\#275](https://github.com/overture-stack/SONG/pull/275) ([rtisma](https://github.com/rtisma))\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-1.0.2",
        "release_id": 11014012,
        "tag": "song-1.0.2",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/11014012",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/11014012",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-05-10T18:58:56Z",
        "date_published": "2018-05-15T19:46:47Z",
        "description": "# Summary\r\n\r\n## Bug Fixes:\r\n- fixed endpoint security for the export service\r\n\r\n---\r\n## Downloads\r\n[Song-Client-1.0.1 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-client/1.0.1/song-client-1.0.1-dist.tar.gz)\r\n\r\n[Song-Server-1.0.1 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-server/1.0.1/song-server-1.0.1-dist.tar.gz)\r\n\r\n---\r\n# Details\r\n[Full Changelog](https://github.com/overture-stack/song/compare/song-1.0.0...song-1.0.1)\r\n\r\n**Merged pull requests:**\r\n\r\n- fix\\(Security\\): secured export endpoint [\\#274](https://github.com/overture-stack/SONG/pull/274) ([rtisma](https://github.com/rtisma))\r\n- updated python sdk to 1.0.0 [\\#273](https://github.com/overture-stack/SONG/pull/273) ([rtisma](https://github.com/rtisma))\r\n\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-1.0.1",
        "release_id": 11013876,
        "tag": "song-1.0.1",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/11013876",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/11013876",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-05-09T14:00:29Z",
        "date_published": "2018-05-11T14:12:59Z",
        "description": "[Full Changelog](https://github.com/overture-stack/song/compare/song-0.3.9...song-1.0.0)\r\n\r\n# Summary\r\n\r\n### Bug Fixes:\r\n* Info fields for some entities are not created\r\n* Some entities do not implement Equals, HashCode and ToString properly\r\n* Python-SDK StudyClient errors when trying to read a study\r\n* Incorrect setting order for Study organization and description\r\n* Incorrect message context for Analysis errors\r\n* Python-SDK Dataclasses 0.4\r\n\r\n### New Features/Enhancements:\r\n* Export service to generate payloads for SONG data, used for mirroring SONG instances\r\n* Improved error handling\r\n* Doubled the amount of tests, with significantly increased coverage\r\n* Improved Swagger UI descriptions\r\n* Improved song-docker documentation (README.md)\r\n\r\n### Transitioning from 0.x.x to 1.0.0\r\nThe following schema definitions must be added to the production database\r\n```sql\r\nDROP VIEW IF EXISTS BusinessKeyView;\r\nCREATE VIEW BusinessKeyView AS\r\n  SELECT\r\n    S.id as study_id,\r\n    SP.id AS specimen_id,\r\n    SP.submitter_id AS specimen_submitter_id,\r\n    SA.id AS sample_id,\r\n    SA.submitter_id AS sample_submitter_id\r\n  FROM Study S\r\n    INNER JOIN Donor D ON S.id = D.study_id\r\n    INNER JOIN Specimen SP ON D.id = SP.donor_id\r\n    INNER JOIN Sample SA ON SP.id = SA.specimen_id;\r\n\r\nDROP VIEW IF EXISTS InfoView;\r\nCREATE VIEW InfoView AS\r\n  SELECT\r\n    A.id as analysis_id,\r\n    I_STUDY.info as study_info,\r\n    I_DONOR.info as donor_info,\r\n    I_SP.info as specimen_info,\r\n    I_SA.info as sample_info,\r\n    I_A.info as analysis_info,\r\n    I_F.info as file_info\r\n    FROM Study S\r\n      INNER JOIN Info I_STUDY ON I_STUDY.id = S.id and I_STUDY.id_type = 'Study'\r\n      INNER JOIN Donor D ON S.id = D.study_id\r\n      INNER JOIN Info I_DONOR ON I_DONOR.id = D.id and I_DONOR.id_type = 'Donor'\r\n      INNER JOIN Specimen SP ON D.id = SP.donor_id\r\n      INNER JOIN Info I_SP ON I_SP.id = SP.id and I_SP.id_type = 'Specimen'\r\n      INNER JOIN Sample SA ON SP.id = SA.specimen_id\r\n      INNER JOIN Info I_SA ON I_SA.id = SA.id and I_SA.id_type = 'Sample'\r\n      INNER JOIN SampleSet SS on SA.id = SS.sample_id\r\n      INNER JOIN Analysis A on  SS.analysis_id = A.id\r\n      INNER JOIN Info I_A ON I_A.id = A.id and I_A.id_type = 'Analysis'\r\n      INNER JOIN File F on  A.id = F.analysis_id\r\n      INNER JOIN Info I_F ON I_F.id = F.id and I_F.id_type = 'File';\r\n\r\nDROP VIEW IF EXISTS IdView;\r\nCREATE VIEW IdView AS\r\n  SELECT DISTINCT\r\n    A.id as analysis_id,\r\n    A.type as analysis_type,\r\n    A.state as analysis_state,\r\n    A.study_id as study_id,\r\n    D.id as donor_id,\r\n    SP.id as specimen_id,\r\n    SA.id as sample_id,\r\n    F.id as object_id\r\n  FROM Donor D\r\n    INNER JOIN Specimen SP on D.id = SP.donor_id\r\n    INNER JOIN Sample as SA on SP.id = SA.specimen_id\r\n    INNER JOIN SampleSet as SAS on SA.id = SAS.sample_id\r\n    INNER JOIN File as F on SAS.analysis_id = F.analysis_id\r\n    INNER JOIN Analysis as A on SAS.analysis_id = A.id;\r\n\r\n```\r\n\r\n### Misc:\r\n* Removed song-importer since JDBI is no longer being used\r\n* Replaced JDBI with Hibernate\r\n\r\n---\r\n# Downloads\r\n[Song-Client-1.0.0 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-client/1.0.0/song-client-1.0.0-dist.tar.gz)\r\n\r\n[Song-Server-1.0.0 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-server/1.0.0/song-server-1.0.0-dist.tar.gz)\r\n\r\n[Song-Python-SDK-1.0.0 PyPi Distribution](https://pypi.python.org/pypi/overture-song/1.0.0)\r\n\r\n---\r\n\r\n# Details\r\n\r\n### Implemented enhancements:\r\n\r\n- Replace JBDI with Hibernate [\\#258](https://github.com/overture-stack/SONG/issues/258)\r\n- EGO/SONG Support - Tag new JWT based strategy [\\#239](https://github.com/overture-stack/SONG/issues/239)\r\n- EGO/SONG Support - Create JWT Strategy [\\#238](https://github.com/overture-stack/SONG/issues/238)\r\n- Add DB logging configuration [\\#216](https://github.com/overture-stack/SONG/issues/216)\r\n- Update Docker README [\\#202](https://github.com/overture-stack/SONG/issues/202)\r\n- Add Certs and TLS to song-aws server [\\#192](https://github.com/overture-stack/SONG/issues/192)\r\n- Improve error handling for all endpoints [\\#168](https://github.com/overture-stack/SONG/issues/168)\r\n- \\[SONG-PYTHON-SDK\\] Release song python sdk 0.3.9 [\\#163](https://github.com/overture-stack/SONG/issues/163)\r\n- Song on amazon [\\#160](https://github.com/overture-stack/SONG/issues/160)\r\n- Add documentation to song-python-sdk [\\#148](https://github.com/overture-stack/SONG/issues/148)\r\n- \\[SONG-SERVER\\] update Swagger with aliased names [\\#102](https://github.com/overture-stack/SONG/issues/102)\r\n- Pom cleanup [\\#242](https://github.com/overture-stack/SONG/pull/242) ([rtisma](https://github.com/rtisma))\r\n- song-191-update-dataclases [\\#212](https://github.com/overture-stack/SONG/pull/212) ([rtisma](https://github.com/rtisma))\r\n- Feature/song 148 sdk instructions [\\#206](https://github.com/overture-stack/SONG/pull/206) ([rtisma](https://github.com/rtisma))\r\n- Feature/song 148 python sdk documentation [\\#203](https://github.com/overture-stack/SONG/pull/203) ([rtisma](https://github.com/rtisma))\r\n- Feature/song 196 aws importer2 [\\#201](https://github.com/overture-stack/SONG/pull/201) ([rtisma](https://github.com/rtisma))\r\n- Feature/read me update docker [\\#200](https://github.com/overture-stack/SONG/pull/200) ([rtisma](https://github.com/rtisma))\r\n\r\n\r\n### Fixed bugs:\r\n\r\n- Specimen and Donor info fields not created after payload upload [\\#244](https://github.com/overture-stack/SONG/issues/244)\r\n- Missing index files from song.collab for FI206869 [\\#199](https://github.com/overture-stack/SONG/issues/199)\r\n- Update to dataclasses 0.4 [\\#191](https://github.com/overture-stack/SONG/issues/191)\r\n- StudyClient does not work [\\#188](https://github.com/overture-stack/SONG/issues/188)\r\n- Modelling of Normal Submitted Sample ID is incorrect [\\#183](https://github.com/overture-stack/SONG/issues/183)\r\n- Publish command not working [\\#182](https://github.com/overture-stack/SONG/issues/182)\r\n- Specimen and Donor is not required for a Sample in VariantCall JsonSchema [\\#173](https://github.com/overture-stack/SONG/issues/173)\r\n- \\[SONG-SERVER\\] Connection pool closes when subsequent infoSearch requests are made [\\#169](https://github.com/overture-stack/SONG/issues/169)\r\n- \\[SONG-SERVER\\] Duplicate Random Unique AnalysisId created when payload does not contain submittedAnalysisId [\\#167](https://github.com/overture-stack/SONG/issues/167)\r\n- Fix Postgres cache lookup issue [\\#125](https://github.com/overture-stack/SONG/issues/125)\r\n- Feature/song 183 incorrect normal submitted sample [\\#208](https://github.com/overture-stack/SONG/pull/208) ([rtisma](https://github.com/rtisma))\r\n\r\n### Closed issues:\r\n\r\n- Generate payloads for DKFZ [\\#255](https://github.com/overture-stack/SONG/issues/255)\r\n- EGO/SONG Support - Unit Tests for Existing and New Security [\\#237](https://github.com/overture-stack/SONG/issues/237)\r\n- Add publish test using WireMock [\\#231](https://github.com/overture-stack/SONG/issues/231)\r\n- Build Circle-CI for Song [\\#223](https://github.com/overture-stack/SONG/issues/223)\r\n- Collect .meta files for DKFZ [\\#221](https://github.com/overture-stack/SONG/issues/221)\r\n- Database dump for DKFZ [\\#196](https://github.com/overture-stack/SONG/issues/196)\r\n- Prepare second batch of metadata for DKFZ PCAWG data objects [\\#166](https://github.com/overture-stack/SONG/issues/166)\r\n\r\n### Merged pull requests:\r\n\r\n- Feature/song 258 replace jdbi with hibernate [\\#270](https://github.com/overture-stack/SONG/pull/270) ([rtisma](https://github.com/rtisma))\r\n- refactor: Removed includeOtherIds feature. [\\#268](https://github.com/overture-stack/SONG/pull/268) ([rtisma](https://github.com/rtisma))\r\n- Feature/random cleanup [\\#267](https://github.com/overture-stack/SONG/pull/267) ([rtisma](https://github.com/rtisma))\r\n- Feature/song 188 study client fix [\\#265](https://github.com/overture-stack/SONG/pull/265) ([rtisma](https://github.com/rtisma))\r\n- fix: Fixed export client and typos [\\#264](https://github.com/overture-stack/SONG/pull/264) ([rtisma](https://github.com/rtisma))\r\n- Feature/song 255 dkfz payloads \\#2 [\\#262](https://github.com/overture-stack/SONG/pull/262) ([rtisma](https://github.com/rtisma))\r\n- ExportService [\\#261](https://github.com/overture-stack/SONG/pull/261) ([rtisma](https://github.com/rtisma))\r\n- Add Circle Ci build job [\\#248](https://github.com/overture-stack/SONG/pull/248) ([jonathanganesh](https://github.com/jonathanganesh))\r\n- Feature/song 244 missing info payload fix [\\#246](https://github.com/overture-stack/SONG/pull/246) ([rtisma](https://github.com/rtisma))\r\n- Feature/song 231 publish test wiremock [\\#233](https://github.com/overture-stack/SONG/pull/233) ([rtisma](https://github.com/rtisma))\r\n- Feature/song 182 sdk publish command fix [\\#218](https://github.com/overture-stack/SONG/pull/218) ([rtisma](https://github.com/rtisma))\r\n- song-173-json-schema-update [\\#217](https://github.com/overture-stack/SONG/pull/217) ([rtisma](https://github.com/rtisma))\r\n- song-168-fix-read-status-codes [\\#215](https://github.com/overture-stack/SONG/pull/215) ([rtisma](https://github.com/rtisma))\r\n- Feature/song 183 refactored filtering [\\#211](https://github.com/overture-stack/SONG/pull/211) ([rtisma](https://github.com/rtisma))\r\n- updated versions to 0.3.9 [\\#187](https://github.com/overture-stack/SONG/pull/187) ([rtisma](https://github.com/rtisma))\r\n\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-1.0.0",
        "release_id": 10927000,
        "tag": "song-1.0.0",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/10927000",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/10927000",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-02-07T20:22:31Z",
        "date_published": "2018-02-08T13:54:25Z",
        "description": "# New\r\n1. **Song Python SDK 0.3.9 Release** (Issue #133, #149, #153, #154 and PR #152)\r\n    - Available on PyPi (refer to Downloads sections below)\r\n    - Compatible with song-server 0.3.9\r\n    - Created ReadTheDocs with tutorials and an sdk reference: https://song-docs.readthedocs.io/en/develop/index.html\r\n \r\n# Enhancements\r\n1. **Issue #165 and #102**: [SONG-SERVER] Updated swagger documentation (PR #177)\r\n    - Enabled authorization only for endpoints doing PUT, POST or DELETE operations\r\n    - added basic api info\r\n    - added api-docs redirect to swagger-ui.html\r\n\r\n# Bug Fixes\r\n1. **Issue #167**:  [SONG-SERVER] Duplicate random AnalysisId created when payload does not contain submittedAnalysisId (PR #179)\r\n2. **Issue #169**: [SONG-SERVER] Connection pool closes when subsequent infoSearch requests are made (PR #180)\r\n\r\n# Breaking Changes\r\n1. **PR #177**: getStudy no longer returns a list of studies, but a single study if it exists, or null if it does not\r\n\r\n# Downloads\r\n[Song-Client-0.3.9 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-client/0.3.9/song-client-0.3.9-dist.tar.gz)\r\n\r\n[Song-Server-0.3.9 Distribution](https://artifacts.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/song-server/0.3.9/song-server-0.3.9-dist.tar.gz)\r\n\r\n[Song-Python-SDK-0.3.9 PyPi Distribution](https://pypi.python.org/pypi/overture-song/0.3.9)\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-0.3.9",
        "release_id": 9591819,
        "tag": "song-0.3.9",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-0.3.9",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/9591819",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/9591819",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-0.3.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-01-19T21:10:27Z",
        "date_published": "2018-01-23T20:43:00Z",
        "description": "## [song-0.3.8](https://github.com/overture-stack/song/tree/song-0.3.8) (2018-01-19)\r\n[Full Changelog](https://github.com/overture-stack/song/compare/song-0.3.7...song-0.3.8)\r\n\r\n**Implemented enhancements:**\r\n\r\n- SONG - Update to support manifest ID downloads [\\#139](https://github.com/overture-stack/SONG/issues/139)\r\n\r\n**Fixed bugs:**\r\n\r\n- FI9995 not searchable in song-client [\\#129](https://github.com/overture-stack/SONG/issues/129)\r\n\r\n**Closed issues:**\r\n\r\n- Support multiple studies in SONG configuration [\\#140](https://github.com/overture-stack/SONG/issues/140)\r\n- 6 - Rethink CLI client [\\#137](https://github.com/overture-stack/SONG/issues/137)\r\n- 2 - Python Song SDK [\\#133](https://github.com/overture-stack/SONG/issues/133)\r\n- Update JsonSchemas and Postrgres Schemas for optional fields [\\#127](https://github.com/overture-stack/SONG/issues/127)\r\n- Multiple save error [\\#124](https://github.com/overture-stack/SONG/issues/124)\r\n\r\n**Merged pull requests:**\r\n\r\n- fixed failing tests due to more than expected entries in test\\_db [\\#156](https://github.com/overture-stack/SONG/pull/156) ([rtisma](https://github.com/rtisma))\r\n- fixed bug  and added test [\\#155](https://github.com/overture-stack/SONG/pull/155) ([rtisma](https://github.com/rtisma))\r\n- Feature/add entity endpoint [\\#143](https://github.com/overture-stack/SONG/pull/143) ([rtisma](https://github.com/rtisma))\r\n- fixed-duplicate-info-id-bug [\\#131](https://github.com/overture-stack/SONG/pull/131) ([rtisma](https://github.com/rtisma))\r\n- Feature/db index optimize [\\#130](https://github.com/overture-stack/SONG/pull/130) ([rtisma](https://github.com/rtisma))\r\n- Feature/docker update example [\\#119](https://github.com/overture-stack/SONG/pull/119) ([rtisma](https://github.com/rtisma))\r\n- updated docker with song-0.3.7 and id-5.1.4 [\\#118](https://github.com/overture-stack/SONG/pull/118) ([rtisma](https://github.com/rtisma))\r\n- updated since analysisSubmitterId no longer exists [\\#117](https://github.com/overture-stack/SONG/pull/117) ([rtisma](https://github.com/rtisma))\r\n\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-0.3.8",
        "release_id": 9356155,
        "tag": "song-0.3.8",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-0.3.8",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/9356155",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/9356155",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-0.3.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rtisma",
          "type": "User"
        },
        "date_created": "2018-01-18T17:54:58Z",
        "date_published": "2018-05-09T18:09:08Z",
        "description": "## [song-0.3.7](https://github.com/overture-stack/song/tree/song-0.3.7) (2017-12-04)\r\n[Full Changelog](https://github.com/overture-stack/song/compare/song-0.3.1...song-0.3.7)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Change server error logs to be actual stacktrace [\\#95](https://github.com/overture-stack/SONG/issues/95)\r\n\r\n**Merged pull requests:**\r\n\r\n- Feature/dcc 5752 optional schema2 [\\#116](https://github.com/overture-stack/SONG/pull/116) ([rtisma](https://github.com/rtisma))\r\n- Bugfix: Swapped parameters of call to idService, as per ticket. [\\#115](https://github.com/overture-stack/SONG/pull/115) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n- Feature/dcc 5749 song study id configuration and payload usage [\\#114](https://github.com/overture-stack/SONG/pull/114) ([KevinFHartmann](https://github.com/KevinFHartmann))\r\n- Feature/update dcc id 5.1.4 [\\#113](https://github.com/overture-stack/SONG/pull/113) ([rtisma](https://github.com/rtisma))\r\n- updated release versions [\\#112](https://github.com/overture-stack/SONG/pull/112) ([rtisma](https://github.com/rtisma))\r\n- feature/dcc-5726-disable-entity-endpoints [\\#111](https://github.com/overture-stack/SONG/pull/111) ([rtisma](https://github.com/rtisma))\r\n- updated to dcc-id release version 5.1.3 [\\#110](https://github.com/overture-stack/SONG/pull/110) ([rtisma](https://github.com/rtisma))\r\n- Feature/file id bug [\\#109](https://github.com/overture-stack/SONG/pull/109) ([rtisma](https://github.com/rtisma))\r\n- Feature/update object storage [\\#108](https://github.com/overture-stack/SONG/pull/108) ([rtisma](https://github.com/rtisma))\r\n- Feature/dcc 5738 customizable scope prefix [\\#107](https://github.com/overture-stack/SONG/pull/107) ([rtisma](https://github.com/rtisma))\r\n- detect-missing-study-id [\\#106](https://github.com/overture-stack/SONG/pull/106) ([rtisma](https://github.com/rtisma))\r\n- Minor code cleanup. Death to mutating loops. [\\#100](https://github.com/overture-stack/SONG/pull/100) ([andricDu](https://github.com/andricDu))\r\n- Kafka Support [\\#93](https://github.com/overture-stack/SONG/pull/93) ([andricDu](https://github.com/andricDu))\r\n- Docker for Song - Configuration1 [\\#92](https://github.com/overture-stack/SONG/pull/92) ([rtisma](https://github.com/rtisma))\r\n- fixed swagger issue [\\#91](https://github.com/overture-stack/SONG/pull/91) ([rtisma](https://github.com/rtisma))\r\n- updated validation delay for prod to be fast by default and slow for \u2026 [\\#90](https://github.com/overture-stack/SONG/pull/90) ([rtisma](https://github.com/rtisma))\r\n- dcc-5707-multiple-save-error [\\#89](https://github.com/overture-stack/SONG/pull/89) ([rtisma](https://github.com/rtisma))\r\n- dcc-5688-info-object [\\#88](https://github.com/overture-stack/SONG/pull/88) ([rtisma](https://github.com/rtisma))\r\n- added-tabs-to-manifest.txt [\\#87](https://github.com/overture-stack/SONG/pull/87) ([rtisma](https://github.com/rtisma))\r\n- updated client dist package [\\#86](https://github.com/overture-stack/SONG/pull/86) ([rtisma](https://github.com/rtisma))\r\n- removed analysisAccess, added fileAccess [\\#85](https://github.com/overture-stack/SONG/pull/85) ([rtisma](https://github.com/rtisma))\r\n- Feature/add access analysis [\\#84](https://github.com/overture-stack/SONG/pull/84) ([rtisma](https://github.com/rtisma))\r\n",
        "html_url": "https://github.com/overture-stack/SONG/releases/tag/song-0.3.7",
        "release_id": 10927156,
        "tag": "song-0.3.7",
        "tarball_url": "https://api.github.com/repos/overture-stack/SONG/tarball/song-0.3.7",
        "type": "Release",
        "url": "https://api.github.com/repos/overture-stack/SONG/releases/10927156",
        "value": "https://api.github.com/repos/overture-stack/SONG/releases/10927156",
        "zipball_url": "https://api.github.com/repos/overture-stack/SONG/zipball/song-0.3.7"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:04:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}