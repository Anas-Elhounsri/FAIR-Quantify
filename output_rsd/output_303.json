{
  "application_domain": [
    {
      "confidence": 68.54,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"Wood\"\n  given-names: \"Thomas\"\n  orcid: \"https://orcid.org/0000-0001-8962-8571\"\n- family-names: \"McElroy\"\n  given-names: \"Eoin\"\n  orcid: \"https://orcid.org/0000-0001-5466-8522\"\n- family-names: \"Moltrecht\"\n  given-names: \"Bettina\"\n  orcid: \"https://orcid.org/0000-0002-1838-428X\"\n- family-names: \"Scopel Hoffmann\"\n  given-names: \"Mauricio\"\n  orcid: \"https://orcid.org/0000-0003-4232-3169\"\n- family-names: \"Ploubidis\"\n  given-names: \"George\"\n  orcid: \"https://orcid.org/0000-0002-8198-5790\"\ntitle: \"Harmony\"\nversion: 1.0.0\ndoi: DOI 10.17605/OSF.IO/BCT6K\ndate-released: 2023-07-22\nurl: \"https://harmonydata.ac.uk\"\n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udcdc How do I cite Harmony?",
        "parent_header": [
          "The Harmony Project"
        ],
        "type": "Text_excerpt",
        "value": "McElroy, E., Moltrecht, B., Ploubidis, G.B., Scopel Hoffman, M., Wood, T.A., Harmony [Computer software], Version 1.0, accessed at https://harmonydata.ac.uk/app. Ulster University (2023)\n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/harmonydata/harmony"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Who to contact?",
        "parent_header": [
          "The Harmony Project"
        ],
        "type": "Text_excerpt",
        "value": "You can contact Harmony team at https://harmonydata.ac.uk/, or Thomas Wood at https://fastdatascience.com/.\n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contribute to Harmony\n\nThanks for your interest in contributing to Harmony. This page will give you a quick overview of how things are organized and most importantly, how to get involved.\n\nSee also https://harmonydata.ac.uk/contributing-to-harmony/ for more information.\n\n## Contribute to the Harmony open source NLP project\n\nAre you a scientist, researcher, data wrangler, or language maestro? Harmony needs YOU! We're always looking for talented individuals to join our team.\n\n* **Contribute to our open-source code:** Whether you're a seasoned developer or a curious newbie, your contributions are valued.\n* **Join the conversation:** Share your ideas, suggestions, and feedback on our forum and social media channels.\n\n\n\n\n## Getting started\n\nParticipating in an open source project can be very rewarding. Read more about it [here](/how-can-i-contribute-to-an-open-source-project/)!\n\nPlease familiarise yourself with Git. You can [fork Harmony](https://github.com/harmonydata/harmony/fork) and [make a pull request](https://github.com/harmonydata/harmony/pulls) any time! We're glad to have your contribution.\n\n## Issues and bug reports\n\nFirst, [do a quick search](https://github.com/issues?q=+is%3Aissue+user%3Aharmonydata) to see if the issue has already been reported. If so, it's often better to just leave a comment on an existing issue, rather than creating a new one. Old issues also often include helpful tips and solutions to common problems. You should also check the [troubleshooting guide](https://harmonydata.ac.uk/troubleshooting-harmony/) to see if your problem is already listed there.\n\nIf you're looking for help with your code, consider posting a question on the [GitHub Discussions board](https://github.com/orgs/harmonydata/discussions). Please\nunderstand that we won't be able to provide individual support via email. We\nalso believe that help is much more valuable if it's **shared publicly**,\nso that more people can benefit from it.\n\n## Make your first contribution\n\nThere are lots of ways you can contribute to Harmony! You can work on code, improve the API, or add code examples.\n\n* Write code\n* Improve unit tests or integration tests\n* Add new functionality to Harmony\n* Improve Harmony's documentation\n* Add integrations to other LLMs or LLM providers such as OpenAI, IBM, or similar\n* Add integrations from your website to Harmony\n* Publicise Harmony in web forums such as Reddit, HuggingFace forum, Quora, or similar\n* Create example notebooks, such as Jupyter Notebook, RStudio, or Google Colab\n* Investigate [bugs and issues in Harmony](https://github.com/harmonydata/harmony/issues)\n* Review and comment on [pull requests](https://github.com/harmonydata/harmony/pulls)\n* [Cite Harmony](/frequently-asked-questions/#how-do-i-cite-harmony) in your blogs, papers, and articles\n* Talk about Harmony on social media. Don't forget to tag us on Twitter [@harmony_data](https://twitter.com/harmony_data), Instagram [@harmonydata](https://www.instagram.com/harmonydata/), Facebook [@harmonydata](https://www.facebook.com/harmonydata), LinkedIn [@Harmony](https://www.linkedin.com/company/harmonydata), and YouTube [@harmonydata](https://www.youtube.com/channel/UCraLlfBr0jXwap41oQ763OQ)!\n* Starring and [forking](https://github.com/harmonydata/harmony/fork) Harmony on Github!\n\n## Raising issues and the issue tracker\n\nThe issue list is [in the Github repository](https://github.com/harmonydata/harmony/issues). You can view the open issues, pick one to fix, or raise your own issue. Even if you're not a coder, feel free to raise an issue.\n\n* Issues for the core Python library are here: [https://github.com/harmonydata/harmony/issues](https://github.com/harmonydata/harmony/issues)\n* Issues for the API are here: [https://github.com/harmonydata/harmonyapi/issues](https://github.com/harmonydata/harmonyapi/issues)\n* Issues for the front end are here: [https://github.com/harmonydata/app/issues](https://github.com/harmonydata/app/issues)\n* Issues for the R port are here: [https://github.com/harmonydata/harmony_r/issues](https://github.com/harmonydata/harmony_r/issues)\n\n## Coding Harmony\n\nHarmony is mostly coded in Python. We use [Pycharm IDE](https://www.jetbrains.com/pycharm/) by JetBrains. Please ensure you are familiar with Python, [HuggingFace](https://huggingface.co/), and [FastAPI](https://fastapi.tiangolo.com/), or Javascript and [React](https://react.dev/) if you want to work on the front end.\n\nPlease make sure all code you commit is linted using the [Pycharm default linter](https://www.reddit.com/r/pycharm/comments/mm77el/what_is_the_default_linter_in_pycharm/). If you use a different one (such as VS Code's linter, or pylint), this will make the code history hard to follow, so please be consistent.\n\n## Unit tests and code stability\n\nHarmony uses the [pytest](http://doc.pytest.org/) framework for testing. For more info on this, see the [pytest documentation](http://docs.pytest.org/en/latest/contents.html). To be interpreted and run, all test files and test functions need to be prefixed with `test_`.\n\nThe Harmony Python library [https://github.com/harmonydata/harmony](https://github.com/harmonydata/harmony) is the core Harmony functionality. Most of the logic is in this repo. This repo has unit tests which run automatically on commits to main.\n\nHowever, the Harmony API repo [https://github.com/harmonydata/harmonyapi](https://github.com/harmonydata/harmonyapi) uses the Harmony Python library as a submodule. When you update the Python library, please run the [unit tests and integration tests in the API repo](https://github.com/harmonydata/harmonyapi/tree/main/tests) to check nothing is broken - including the Selenium tests which test the browser app end to end. You will need to [install Selenium](https://selenium-python.readthedocs.io/) to run the tests.\n\nSince the API repo includes the Python library as a submodule, when you update the Python library, you will need to update the submodule (in the `harmonyapi` repo, `cd` into the submodule folder and do `git pull`, then `cd` out and do `git add`, commit and push). We recommend you [familiarise yourself with Git submodules](https://git-scm.com/book/en/v2/Git-Tools-Submodules).\n\nFinally, the app repo [https://github.com/harmonydata/app](https://github.com/harmonydata/app) is the React front end. Please check you can run this repo locally also before you start contributing. To point the front end repo to a local copy of your API repo, please change the file [.env](https://github.com/harmonydata/app/blob/master/.env) to point to `http://localhost:8000`.\n\n## Pull requests\n\nIf you'd like to contribute to this project, you can contact us at https://harmonydata.ac.uk/ or [make a pull request](https://github.com/harmonydata/harmony/pulls) on our Github repository. You can also raise an issue."
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing to Harmony",
        "parent_header": [
          "The Harmony Project"
        ],
        "type": "Text_excerpt",
        "value": "If you'd like to contribute to this project, you can contact us at https://harmonydata.ac.uk/ or make a pull request on our [Github repository](https://github.com/harmonydata/harmonyapi). You can also [raise an issue](https://github.com/harmonydata/harmony/issues). \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-10T21:27:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-06T19:58:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The Harmony Python library: a research tool for psychologists to harmonise data and questionnaire items. Open source."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9982470504685472,
      "result": {
        "original_header": "What does Harmony do?",
        "type": "Text_excerpt",
        "value": "* Psychologists and social scientists often have to match items in different questionnaires, such as \"I often feel anxious\" and \"Feeling nervous, anxious or afraid\". \n* This is called **harmonisation**.\n* Harmonisation is a time consuming and subjective process.\n* Going through long PDFs of questionnaires and putting the questions into Excel is no fun.\n* Enter [Harmony](https://harmonydata.ac.uk/app), a tool that uses [natural language processing](naturallanguageprocessing.com) and generative AI models to help researchers harmonise questionnaire items, even in different languages.\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9753870181047775,
      "result": {
        "original_header": "The Harmony Project",
        "type": "Text_excerpt",
        "value": "Harmony is a tool using AI which allows you to compare items from questionnaires and identify similar content. You can try Harmony at https://harmonydata.ac.uk/app and you can read our blog at https://harmonydata.ac.uk/blog/.\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9479474017975447,
      "result": {
        "original_header": "Optional environment variables",
        "type": "Text_excerpt",
        "value": "As an alternative to downloading models, you can set environment variables so that Harmony calls spaCy on a remote server. This is only necessary if you are making a server deployment of Harmony. \n* `HARMONY_SPACY_PATH` - determines where model files are stored. Defaults to `HOME DIRECTORY/harmony`\n* `HARMONY_DATA_PATH` - determines where data files are stored. Defaults to `HOME DIRECTORY/harmony`\n* `HARMONY_NO_PARSING` - set to 1 to import a lightweight variant of Harmony which doesn't support PDF parsing.\n* `HARMONY_NO_MATCHING` - set to 1 to import a lightweight variant of Harmony which doesn't support matching.\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9956283653581514,
      "result": {
        "original_header": "Matching instruments",
        "type": "Text_excerpt",
        "value": "* `all_questions` is a list of the questions passed to Harmony, in order.\n* `similarity` is the similarity matrix returned by Harmony.\n* `query_similarity` is the degree of similarity of each item to an optional query passed as argument to `match_instruments`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9200031561320413,
      "result": {
        "original_header": "Using OpenAI or other LLMs for vectorisation",
        "type": "Text_excerpt",
        "value": "Any word vector representation can be used by Harmony. The below example works for OpenAI's [text-embedding-ada-002](https://openai.com/blog/new-and-improved-embedding-model) model as of July 2023, provided you have create a paid OpenAI account. However, since LLMs are progressing rapidly, we have chosen not to integrate Harmony directly into the OpenAI client libraries, but instead allow you to pass Harmony any vectorisation function of your choice.\n```\nimport numpy as np\nfrom harmony import match_instruments_with_function, example_instruments\nfrom openai import OpenAI\n\nclient = OpenAI()\nmodel_name = \"text-embedding-ada-002\"\ndef convert_texts_to_vector(texts):\n    vectors = client.embeddings.create(input = texts, model=model_name).data\n    return np.asarray([vectors[i].embedding for i in range(len(vectors))])\ninstruments = example_instruments[\"CES_D English\"], example_instruments[\"GAD-7 Portuguese\"]\nall_questions, similarity, query_similarity, new_vectors_dict = match_instruments_with_function(instruments, None, convert_texts_to_vector)\n```\n \n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8745035695295226,
      "result": {
        "original_header": "\ud83e\uddea Automated tests",
        "type": "Text_excerpt",
        "value": "Test code is in **tests/** folder using [unittest](https://docs.python.org/3/library/unittest.html). \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9588805547960453,
      "result": {
        "original_header": "\u2699\ufe0fContinuous integration/deployment to PyPI",
        "type": "Text_excerpt",
        "value": "This package is based on the template https://pypi.org/project/example-pypi-package/ \nThis package \n- uses GitHub Actions for both testing and publishing\n- is tested when pushing `master` or `main` branch, and is published when create a release\n- includes test files in the source distribution\n- uses **setup.cfg** for [version single-sourcing](https://packaging.python.org/guides/single-sourcing-package-version/) (setuptools 46.4.0+)\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9875028633287986,
      "result": {
        "original_header": "\u200e\ud83d\ude03\ud83d\udc81 Who worked on Harmony?",
        "type": "Text_excerpt",
        "value": "Harmony is a collaboration project between [Ulster University](https://ulster.ac.uk/), [University College London](https://ucl.ac.uk/), the [Universidade Federal de Santa Maria](https://www.ufsm.br/), and [Fast Data Science](http://fastdatascience.com/).  Harmony is funded by [Wellcome](https://wellcome.org/) as part of the [Wellcome Data Prize in Mental Health](https://wellcome.org/grant-funding/schemes/wellcome-mental-health-data-prize). \nThe core team at Harmony is made up of: \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/harmonydata/harmony/wiki"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/harmonydata/harmony/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/harmonydata/harmony/main/update.ipynb"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/update.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/harmonydata/harmony/main/Harmony_example_walkthrough.ipynb"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/Harmony_example_walkthrough.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/harmonydata/harmony/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "harmonydata/harmony"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Harmony Python library"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/harmonydata/brand/main/Logo/PNG/%D0%BB%D0%BE%D0%B3%D0%BE%20%D1%84%D1%83%D0%BB-05.png"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com//harmonydata/.github/main/profile/linkedin.svg"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com//harmonydata/.github/main/profile/x.svg"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com//harmonydata/.github/main/profile/instagram.svg"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com//harmonydata/.github/main/profile/fb.svg"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com//harmonydata/.github/main/profile/yt.svg"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/harmonydata/.github/main/profile/installation_video.jpg"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udda5 Installation instructions (video)",
        "parent_header": [
          "The Harmony Project"
        ],
        "type": "Text_excerpt",
        "value": "[![Installing Harmony](https://raw.githubusercontent.com/harmonydata/.github/main/profile/installation_video.jpg)](https://www.youtube.com/watch?v=enWh0-4I0Sg \"Installing Harmony\")\n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udda5 Installing Harmony Python package",
        "parent_header": [
          "The Harmony Project"
        ],
        "type": "Text_excerpt",
        "value": "You can install from [PyPI](https://pypi.org/project/harmonydata/).\n\n```\npip install harmonydata\n```\n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9889513252313484,
      "result": {
        "original_header": "Harmony Python library",
        "type": "Text_excerpt",
        "value": "You can also join [our Discord server](https://discord.gg/harmonydata)! If you found Harmony helpful, you can [leave us a review](https://g.page/r/CaRWc2ViO653EBM/review)!\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9663764501978894,
      "result": {
        "original_header": "\ud83d\uddb1 Looking to try Harmony in the browser?",
        "type": "Text_excerpt",
        "value": "Visit: https://harmonydata.ac.uk/app/ \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999875513,
      "result": {
        "original_header": "\u2705 You need Tika if you want to extract instruments from PDFs",
        "type": "Text_excerpt",
        "value": "Download and install Java if you don't have it already. Download and install Apache Tika and run it on your computer https://tika.apache.org/download.html\n```\njava -jar tika-server-standard-2.3.0.jar\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9860306454227337,
      "result": {
        "original_header": "Loading all models",
        "type": "Text_excerpt",
        "value": "Harmony uses spaCy to help with text extraction from PDFs. spaCy models can be downloaded with the following command in Python:\n```\nimport harmony\nharmony.download_models()\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8035305892773861,
      "result": {
        "original_header": "Loading instruments from PDFs",
        "type": "Text_excerpt",
        "value": "If you have a local file, you can load it into a list of `Instrument` instances:\n```\nfrom harmony import load_instruments_from_local_file\ninstruments = load_instruments_from_local_file(\"gad-7.pdf\")\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9599407710806933,
      "result": {
        "original_header": "\u21d7\u21d7 Using a different vectorisation function",
        "type": "Text_excerpt",
        "value": "Harmony defaults to `sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2` ([HuggingFace link](https://huggingface.co/sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2)). However you can use other sentence transformers from HuggingFace by setting the environment `HARMONY_SENTENCE_TRANSFORMER_PATH` before importing Harmony:\n```\nexport HARMONY_SENTENCE_TRANSFORMER_PATH=sentence-transformers/distiluse-base-multilingual-cased-v2\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9811797297006618,
      "result": {
        "original_header": "Looking for the Harmony API?",
        "type": "Text_excerpt",
        "value": "Visit: https://github.com/harmonydata/harmonyapi \n* \ud83d\udcf0 The code for training the PDF extraction is here: https://github.com/harmonydata/pdf-questionnaire-extraction\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8899194774478221,
      "result": {
        "original_header": "Docker images",
        "type": "Text_excerpt",
        "value": "* https://hub.docker.com/repository/docker/harmonydata/harmonyapi - just the Harmony API\n* https://hub.docker.com/repository/docker/harmonydata/harmonylocal - Harmony API and React front end\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999989971723179,
      "result": {
        "original_header": "\ud83e\uddea Automated tests",
        "type": "Text_excerpt",
        "value": "The testing tool `tox` is used in the automation with GitHub Actions CI/CD. **Since the PDF extraction also needs Java and Tika installed, you cannot run the unit tests without first installing Java and Tika. See above for instructions.**\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9512189869734983,
      "result": {
        "original_header": "\u2699\ufe0fContinuous integration/deployment to PyPI",
        "type": "Text_excerpt",
        "value": "This package is based on the template https://pypi.org/project/example-pypi-package/ \nThis package \n- uses GitHub Actions for both testing and publishing\n- is tested when pushing `master` or `main` branch, and is published when create a release\n- includes test files in the source distribution\n- uses **setup.cfg** for [version single-sourcing](https://packaging.python.org/guides/single-sourcing-package-version/) (setuptools 46.4.0+)\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999791811,
      "result": {
        "original_header": "\u2699\ufe0fRe-releasing the package manually",
        "type": "Text_excerpt",
        "value": "The code to re-release Harmony on PyPI is as follows:\n```\nsource activate py311\npip install twine\nrm -rf dist\npython setup.py sdist\ntwine upload dist/*\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/harmonydata/harmony/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "anxiety, data-harmonisation, data-harmonization, data-science, depression, embedding, embeddings, foss, harmonisation, harmonization, harmony, mental-health-catalogue, natural-language-processing, nlp, open-source, psychology, python, research, research-project, social-sciences"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 Ulster University. Information at: https://harmonydata.ac.uk (maintainer: Thomas Wood, https://fastdatascience.com/harmony-wellcome-data-prize/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udcdc License",
        "parent_header": [
          "The Harmony Project"
        ],
        "type": "Text_excerpt",
        "value": "MIT License. Copyright (c) 2023 Ulster University (https://www.ulster.ac.uk)\n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://static.pepy.tech/personalized-badge/harmonydata?period=total&amp;units=international_system&amp;left_color=grey&amp;right_color=orange&amp;left_text=pip%20downloads"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "harmony"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "harmonydata"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 288055,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 227268,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "woodthom2",
          "type": "User"
        },
        "date_created": "2024-08-27T06:47:37Z",
        "date_published": "2024-08-27T06:52:32Z",
        "description": "Add `match_instruments` functionality so that Harmony web API will now return matching items from catalogues such as UKLLC, Mental Health Catalogue\r\nUpdated PDF extraction to use Scikit-Learn instead of spaCy\r\nUpgraded to Pydantic V2 (thanks to @op-cls)\r\nAdd integration function `create_instrument_from_list` so that user can import to web UI from Python (documentation here: https://harmonydata.ac.uk/integrating-with-harmony/ ) : \r\n\r\n```\r\nfrom harmony import create_instrument_from_list, import_instrument_into_harmony_web\r\n\r\ninstrument = load_instrument_from_list([\"Do you currently smoke or have you ever smoked?\", \"[Do you currently use] nicotine replacement therapy?\"])\r\nweb_url = import_instrument_into_harmony_web(instrument)\r\n\r\nprint (web_url)\r\n```",
        "html_url": "https://github.com/harmonydata/harmony/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 172074707,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/harmonydata/harmony/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/harmonydata/harmony/releases/172074707",
        "value": "https://api.github.com/repos/harmonydata/harmony/releases/172074707",
        "zipball_url": "https://api.github.com/repos/harmonydata/harmony/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "woodthom2",
          "type": "User"
        },
        "date_created": "2024-03-14T11:18:38Z",
        "date_published": "2024-03-14T11:32:38Z",
        "description": "Return topic strengths (harmonydata/app#13)\r\nReturn Python package version from API harmonydata/harmonyapi#3 harmonydata/app#12",
        "html_url": "https://github.com/harmonydata/harmony/releases/tag/v0.5.2",
        "name": "v0.5.2",
        "release_id": 146554205,
        "tag": "v0.5.2",
        "tarball_url": "https://api.github.com/repos/harmonydata/harmony/tarball/v0.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/harmonydata/harmony/releases/146554205",
        "value": "https://api.github.com/repos/harmonydata/harmony/releases/146554205",
        "zipball_url": "https://api.github.com/repos/harmonydata/harmony/zipball/v0.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "woodthom2",
          "type": "User"
        },
        "date_created": "2024-01-16T10:51:54Z",
        "date_published": "2024-01-16T11:00:38Z",
        "description": "Refactoring of code (PR from Eve Cheng)\r\nAdding unit tests\r\nMinor bugfixes",
        "html_url": "https://github.com/harmonydata/harmony/releases/tag/v0.5.1",
        "name": "v0.5.1",
        "release_id": 137199012,
        "tag": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/harmonydata/harmony/tarball/v0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/harmonydata/harmony/releases/137199012",
        "value": "https://api.github.com/repos/harmonydata/harmony/releases/137199012",
        "zipball_url": "https://api.github.com/repos/harmonydata/harmony/zipball/v0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "woodthom2",
          "type": "User"
        },
        "date_created": "2023-07-12T20:41:18Z",
        "date_published": "2023-07-12T20:41:48Z",
        "description": "Added caching",
        "html_url": "https://github.com/harmonydata/harmony/releases/tag/v0.5.0",
        "name": "v0.5.0",
        "release_id": 112017824,
        "tag": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/harmonydata/harmony/tarball/v0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/harmonydata/harmony/releases/112017824",
        "value": "https://api.github.com/repos/harmonydata/harmony/releases/112017824",
        "zipball_url": "https://api.github.com/repos/harmonydata/harmony/zipball/v0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "woodthom2",
          "type": "User"
        },
        "date_created": "2023-07-08T15:34:33Z",
        "date_published": "2023-07-11T12:02:51Z",
        "html_url": "https://github.com/harmonydata/harmony/releases/tag/v0.4.0",
        "name": "v0.4.0",
        "release_id": 111780632,
        "tag": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/harmonydata/harmony/tarball/v0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/harmonydata/harmony/releases/111780632",
        "value": "https://api.github.com/repos/harmonydata/harmony/releases/111780632",
        "zipball_url": "https://api.github.com/repos/harmonydata/harmony/zipball/v0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "woodthom2",
          "type": "User"
        },
        "date_created": "2023-07-08T15:34:33Z",
        "date_published": "2023-07-11T12:00:13Z",
        "html_url": "https://github.com/harmonydata/harmony/releases/tag/v0.3.0-alpha",
        "name": "v0.3.0-alpha",
        "release_id": 111780293,
        "tag": "v0.3.0-alpha",
        "tarball_url": "https://api.github.com/repos/harmonydata/harmony/tarball/v0.3.0-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/harmonydata/harmony/releases/111780293",
        "value": "https://api.github.com/repos/harmonydata/harmony/releases/111780293",
        "zipball_url": "https://api.github.com/repos/harmonydata/harmony/zipball/v0.3.0-alpha"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "woodthom2",
          "type": "User"
        },
        "date_created": "2023-06-10T22:06:14Z",
        "date_published": "2023-06-10T22:06:46Z",
        "html_url": "https://github.com/harmonydata/harmony/releases/tag/v0.2.0-alpha",
        "name": "Test release to Pypi (2)",
        "release_id": 108119760,
        "tag": "v0.2.0-alpha",
        "tarball_url": "https://api.github.com/repos/harmonydata/harmony/tarball/v0.2.0-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/harmonydata/harmony/releases/108119760",
        "value": "https://api.github.com/repos/harmonydata/harmony/releases/108119760",
        "zipball_url": "https://api.github.com/repos/harmonydata/harmony/zipball/v0.2.0-alpha"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "woodthom2",
          "type": "User"
        },
        "date_created": "2023-06-10T22:02:53Z",
        "date_published": "2023-06-10T22:04:40Z",
        "html_url": "https://github.com/harmonydata/harmony/releases/tag/v0.1.0-beta",
        "name": "Test release to Pypi",
        "release_id": 108119703,
        "tag": "v0.1.0-beta",
        "tarball_url": "https://api.github.com/repos/harmonydata/harmony/tarball/v0.1.0-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/harmonydata/harmony/releases/108119703",
        "value": "https://api.github.com/repos/harmonydata/harmony/releases/108119703",
        "zipball_url": "https://api.github.com/repos/harmonydata/harmony/zipball/v0.1.0-beta"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "The Harmony Project"
        ],
        "type": "Text_excerpt",
        "value": "You need a Windows, Linux or Mac system with\n\n* Python 3.8 or above\n* the requirements in [requirements.txt](./requirements.txt)\n* Java (if you want to extract items from PDFs)\n* [Apache Tika](https://tika.apache.org/download.html) (if you want to extract items from PDFs)\n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udcbb Do you want to run Harmony in your browser locally?",
        "parent_header": [
          "The Harmony Project"
        ],
        "type": "Text_excerpt",
        "value": "Download and install Docker:\n\n* https://docs.docker.com/desktop/install/mac-install/\n* https://docs.docker.com/desktop/install/windows-install/\n* https://docs.docker.com/desktop/install/linux-install/\n\nOpen a Terminal and run\n\n```\ndocker run -p 8000:8000 -p 3000:3000 harmonydata/harmonylocal\n```\n\nThen go to http://localhost:3000 in your browser.\n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:50:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start with the code",
        "type": "Text_excerpt",
        "value": "[Read our guide to contributing to Harmony here](https://harmonydata.ac.uk/contributing-to-harmony/) or read [CONTRIBUTING.md](./CONTRIBUTING.md).\n\nYou can run the walkthrough Python notebook in [Google Colab](https://colab.research.google.com/github/harmonydata/harmony/blob/main/Harmony_example_walkthrough.ipynb) with a single click: <a href=\"https://colab.research.google.com/github/harmonydata/harmony/blob/main/Harmony_example_walkthrough.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>\n\nYou can also download an R markdown notebook to run in R Studio: <a href=\"https://harmonydata.ac.uk/harmony_r_example.nb.html\" target=\"_parent\"><img src=\"https://img.shields.io/badge/RStudio-4285F4\" alt=\"Open In R Studio\"/></a>\n\nYou can run the walkthrough R notebook in Google Colab with a single click: <a href=\"https://colab.research.google.com/github/harmonydata/experiments/blob/main/Harmony_R_example.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Matching example instruments",
        "parent_header": [
          "The Harmony Project"
        ],
        "type": "Text_excerpt",
        "value": "```\ninstruments = harmony.example_instruments[\"CES_D English\"], harmony.example_instruments[\"GAD-7 Portuguese\"]\nquestions, similarity, query_similarity, new_vectors_dict = harmony.match_instruments(instruments)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83e\uddea Use tox locally",
        "parent_header": [
          "The Harmony Project",
          "Developing Harmony"
        ],
        "type": "Text_excerpt",
        "value": "Install tox and run it:\n\n```\npip install tox\ntox\n```\n\nIn our configuration, tox runs a check of source distribution using [check-manifest](https://pypi.org/project/check-manifest/) (which requires your repo to be git-initialized (`git init`) and added (`git add .`) at least), setuptools's check, and unit tests using pytest. You don't need to install check-manifest and pytest though, tox will install them in a separate environment.\n\nThe automated tests are run against several Python versions, but on your machine, you might be using only one version of Python, if that is Python 3.9, then run:\n\n```\ntox -e py39\n```\n\nThanks to GitHub Actions' automated process, you don't need to generate distribution files locally. \n"
      },
      "source": "https://raw.githubusercontent.com/harmonydata/harmony/main/README.md",
      "technique": "header_analysis"
    }
  ]
}