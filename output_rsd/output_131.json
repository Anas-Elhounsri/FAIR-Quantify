{
  "application_domain": [
    {
      "confidence": 35.51,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/entangled/entangled.py"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "Entangled"
        ],
        "type": "Text_excerpt",
        "value": "If you have an idea for improving Entangled, please file an issue before creating a pull request. Code in this repository is formatted using `black` and type checked using `mypy`.\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-17T22:20:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-30T12:46:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python port of Entangled"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9793437444912559,
      "result": {
        "original_header": "Entangled",
        "type": "Text_excerpt",
        "value": "Entangled is a solution for Literate Programming, a technique in which the programmer writes a human narrative first, then implementing the program in code blocks.\nLiterate programming was introduced by Donald Knuth in 1984 and has since then found several surges in popularity. One thing holding back the popularity of literate programming is the lack of maintainability under increasing program complexity. Entangled solves this issue by offering a two-way synchronisation mechanism. You can edit and debug your code as normal in your favourite IDE or text editor. Entangled will make sure that your Markdown files stay up-to-date with your code and vice-versa. Because Entangled works with Markdown, you can use it with most static document generators. To summarise, you keep using: \n- your favourite **editor**: Entangled runs as a daemon in the background, keeping your text files synchronised.\n- your favourite **programming language**: Entangled is agnostic to programming languages.\n- your favourite **document generator**: Entangled is configurable to any dialect of Markdown. \nWe\u2019re trying to increase the visibility of Entangled. If you like Entangled, please consider adding this badge [![Entangled badge](https://img.shields.io/badge/entangled-Use%20the%20source!-%2300aeff)](https://entangled.github.io/) to the appropriate location in your project:\n```markdown\n[![Entangled badge](https://img.shields.io/badge/entangled-Use%20the%20source!-%2300aeff)](https://entangled.github.io/)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8243045851092818,
      "result": {
        "original_header": "Working with Git",
        "type": "Text_excerpt",
        "value": "When using Entangled in conjunction with Git, there are a few tricks that you may want to know about.\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.86783471738527,
      "result": {
        "original_header": "Restoring files when both Markdown and code have changed",
        "type": "Text_excerpt",
        "value": "When you edited both Markdown and code without the daemon running, you may need to do some tricks to get back into a consistent state.\n```shell\ngit add .\ngit commit -m 'fixed everything'   # save everything you did\nentangled tangle --force           # overwrites some changes you made\ngit restore src/brilliant_code.c   # retrieve from latest commit\nentangled stitch                   # apply changes back to markdown\ngit add .\ngit commit --amend                 # amend your commit to perfection\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9868393356993859,
      "result": {
        "original_header": "Entangled conflicts after merging branches",
        "type": "Text_excerpt",
        "value": "Entangled can get confused when you merge, and there is a conflict on `.entangled/filedb.json`. This file keeps track of which files are sources for Entangled and which ones are generated by Entangled. That way, Entangled will never overwrite files it isn't supposed to, and the other way around, when you rename a target, the old one gets removed. It is very hard to merge this file though. When you need to, you can regenerate this file using:\n```shell\nentangled tangle -r\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8912284081627403,
      "result": {
        "original_header": "Hooks",
        "type": "Text_excerpt",
        "value": "Entangled has a system of *hooks*: these add actions to the tangling process: \n- `build` trigger actions in a generated `Makefile`\n- `brei` trigger actions (or tasks) using [Brei](https://entangled.github.io/brei), which is automatically installed along with Entangled. This is now prefered over the `build` hook.\n- `quarto_attributes` add attributes to the code block in Quatro style with `#|` comments at the top of the code block.\n- `shebang` takes the first line if it starts with `#!` and puts it at the top of the file.\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9140724493821628,
      "result": {
        "original_header": "`build` hook",
        "type": "Text_excerpt",
        "value": "You can enable this hook in `entangled.toml`:\n```toml\nversion = \"2.0\"\nwatch_list = [\"docs/**/*.md\"]\nhooks = [\"build\"]\n```\n \nThen in your Markdown, you may enter code tagged with the `.build` tag. \nThis code will be saved into a Python script in the `.entangled/build` directory, or if you specify the `file=` attribute some other location. Second, a `Makefile` is generated in `.entangled/build`, that can be invoked as,\n```shell\nmake -f .entangled/build/Makefile\n```\nYou may configure how code from different languages is evaluated in `entangled.toml`. For example, to add Gnuplot support, and also make Julia code run through `DaemonMode.jl`, you may do the following:\n```toml\n[hook.build.runners]\nGnuplot = \"gnuplot {script}\"\nJulia = \"julia --project=. --startup-file=no -e 'using DaemonMode; runargs()' {script}\"\n```\n \nOnce you have the code in place to generate figures and markdown tables, you can use the syntax at your disposal to include those into your Markdown. In this example that would be \nIn the case of tables or other rich content, Standard Markdown (or CommonMark) has no syntax for including other Markdown files, so you'll have to check with your own document generator how to do that. In MkDocs, you could use `mkdocs-macro-plugin`, Pandoc has `pandoc-include`, etc. \nYou can also specify intermediate data generation like so: \nThe snippet for generating the data is given as a dependency for that data; to generate the figure, both `result.csv` and the code snippet are dependencies.\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9632126054142068,
      "result": {
        "original_header": "`quarto_attributes` hook",
        "type": "Text_excerpt",
        "value": "Sometimes using the `build` hook (or the `brei` hook, see below), leads to long header lines. It is then better to specify attributes in a header section of your code. The Quarto project came up with a syntax, having the header be indicated by a comment with a vertical bar, e.g. `#|` or `//|` etc. The `quarto_attributes` hook reads those attributes and adds them to the properties of the code block. \nThe `id` attribute is reserved for the code's identifier (normally indicated with `#`) and the `classes` attribute can be used to indicate a list of classes in addition to the language class already given.\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9349081172540217,
      "result": {
        "original_header": "Brei",
        "type": "Text_excerpt",
        "value": "Entangled has a small build engine (similar to GNU Make) embedded, called Brei. You may give it a list of tasks (specified in TOML) that may depend on one another. Brei will run these when dependencies are newer than the target. Execution is lazy and in parallel. Brei supports: \nBrei is available as a separate package, see [the Brei documentation](https://entangled.github.io/brei).\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8874802778649012,
      "result": {
        "original_header": "The `brei` hook",
        "type": "Text_excerpt",
        "value": "The following example uses both `brei` and `quatro_attributes` hooks. To add a Brei task, tag a code block with the `.task` class. \n~~~markdown\nFirst we generate some data.\n``` {.python #some-functions}\n# define some functions\n```\nNow we show what that data would look like:\n``` {.python .task}\n#| description: Generate data\n#| creates: data/data.npy\n\n<<some-functions>>\n\n# generate and save data\n```\nThen we plot in another task.\n``` {.python .task}\n#| description: Plot data\n#| creates: docs/fig/plot.svg\n#| requires: data/data.npy\n#| collect: figures\n\n# load data and plot\n```\n~~~\nThe `collect` attribute tells the Brei hook to add the `docs/fig/plot.svg` target to the `figures` collection. All figures can then be rendered as follows, having in `entangled.toml`\n```toml\nversion = \"2.0\"\nwatch_list = [\"docs/**/*.md\"]\nhooks = [\"quatro_attributes\", \"brei\"]\n\n[brei]\ninclude = [\".entangled/tasks.json\"]\n```\nAnd run\n```bash\nentangled brei figures\n```\n \nYou can use `${variable}` syntax inside Brei tasks just as you would in a stand-alone Brei script.\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9940866707057486,
      "result": {
        "original_header": "History",
        "type": "Text_excerpt",
        "value": "This is a rewrite of Entangled in Python. Older versions were written in Haskell. The rewrite in Python was motivated by ease of installation, larger community and quite frankly, a fit of mental derangement.\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/entangled/entangled.py/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/entangled/entangled.py/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/entangled/entangled.py/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "entangled/entangled.py"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Entangled"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/entangled/entangled.py/main/fig/plot.svg"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/entangled/entangled.py/main/fig/triangle.svg"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9882245809486273,
      "result": {
        "original_header": "Working with Git",
        "type": "Text_excerpt",
        "value": "When using Entangled in conjunction with Git, there are a few tricks that you may want to know about.\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Restoring files when both Markdown and code have changed",
        "type": "Text_excerpt",
        "value": "When you edited both Markdown and code without the daemon running, you may need to do some tricks to get back into a consistent state.\n```shell\ngit add .\ngit commit -m 'fixed everything'   # save everything you did\nentangled tangle --force           # overwrites some changes you made\ngit restore src/brilliant_code.c   # retrieve from latest commit\nentangled stitch                   # apply changes back to markdown\ngit add .\ngit commit --amend                 # amend your commit to perfection\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997620111392123,
      "result": {
        "original_header": "`build` hook",
        "type": "Text_excerpt",
        "value": "You can enable this hook in `entangled.toml`:\n```toml\nversion = \"2.0\"\nwatch_list = [\"docs/**/*.md\"]\nhooks = [\"build\"]\n```\n \nThen in your Markdown, you may enter code tagged with the `.build` tag. \nThis code will be saved into a Python script in the `.entangled/build` directory, or if you specify the `file=` attribute some other location. Second, a `Makefile` is generated in `.entangled/build`, that can be invoked as,\n```shell\nmake -f .entangled/build/Makefile\n```\nYou may configure how code from different languages is evaluated in `entangled.toml`. For example, to add Gnuplot support, and also make Julia code run through `DaemonMode.jl`, you may do the following:\n```toml\n[hook.build.runners]\nGnuplot = \"gnuplot {script}\"\nJulia = \"julia --project=. --startup-file=no -e 'using DaemonMode; runargs()' {script}\"\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8875409867579218,
      "result": {
        "original_header": "`quarto_attributes` hook",
        "type": "Text_excerpt",
        "value": "~~~markdown\n```python\n#| id: hello\nprint(\"Hello, World!\")\n```\n```python\n#| file: test.py\nif __name__ == \"__main__\":\n    <<hello>>\n```\n~~~\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9369810119954985,
      "result": {
        "original_header": "Brei",
        "type": "Text_excerpt",
        "value": "- Running tasks by passing a script to any configured interpreter, e.g. Bash, Python, Lua etc.\n- Redirecting `stdout` or `stdin` to or from files.\n- Defining so called \"phony\" targets.\n- Define `template` for programmable reuse.\n- `include` other Brei files, even ones that need to be generated by another `task`.\n- Variable substitution, including writing `stdout` to variables. \nBrei is available as a separate package, see [the Brei documentation](https://entangled.github.io/brei).\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9153802451947131,
      "result": {
        "original_header": "The `brei` hook",
        "type": "Text_excerpt",
        "value": "The following example uses both `brei` and `quatro_attributes` hooks. To add a Brei task, tag a code block with the `.task` class. \nYou can use `${variable}` syntax inside Brei tasks just as you would in a stand-alone Brei script.\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9592245199438407,
      "result": {
        "original_header": "`build` hook",
        "type": "Text_excerpt",
        "value": "~~~markdown\n``` {.python .build target=docs/fig/plot.svg}\nfrom matplotlib import pyplot as plt\nimport numpy as np\n\nx = np.linspace(-np.pi, np.pi, 100)\ny = np.sin(x)\nplt.plot(x, y)\nplt.savefig(\"docs/fig/plot.svg\")\n```\n~~~ \n~~~markdown\n``` {.python .build target=\"data/result.csv\"}\nimport numpy as np\nimport pandas as pd\n\nresult = np.random.normal(0.0, 1.0, (100, 2))\ndf = pd.DataFrame(result, columns=[\"x\", \"y\"])\ndf.to_csv(\"data/result.csv\")\n```\n``` {.python .build target=\"fig/plot.svg\" deps=\"data/result.csv\"}\nimport pandas as pd\n\ndf = pd.read_csv(\"data/result.csv\")\nplot = df.plot()\nplot.savefig(\"fig/plot.svg\")\n```\n~~~\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9254701323224597,
      "result": {
        "original_header": "`quarto_attributes` hook",
        "type": "Text_excerpt",
        "value": "~~~markdown\n``` {.python .task}\n#| description: Draw a triangle\n#| creates: docs/fig/triangle.svg\n#| collect: figures\nfrom matplotlib import pyplot as plt\nplt.plot([[-1, -0.5], [1, -0.5], [0, 1], [-1, -0.5]])\nplt.savefig(\"docs/fig/triangle.svg\")\n``` \n~~~markdown\n```python\n#| id: hello\nprint(\"Hello, World!\")\n```\n```python\n#| file: test.py\nif __name__ == \"__main__\":\n    <<hello>>\n```\n~~~\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8357985969540481,
      "result": {
        "original_header": "The `brei` hook",
        "type": "Text_excerpt",
        "value": "~~~markdown\nFirst we generate some data.\n``` {.python #some-functions}\n# define some functions\n```\nNow we show what that data would look like:\n``` {.python .task}\n#| description: Generate data\n#| creates: data/data.npy\n\n<<some-functions>>\n\n# generate and save data\n```\nThen we plot in another task.\n``` {.python .task}\n#| description: Plot data\n#| creates: docs/fig/plot.svg\n#| requires: data/data.npy\n#| collect: figures\n\n# load data and plot\n```\n~~~\nThe `collect` attribute tells the Brei hook to add the `docs/fig/plot.svg` target to the `figures` collection. All figures can then be rendered as follows, having in `entangled.toml`\n```toml\nversion = \"2.0\"\nwatch_list = [\"docs/**/*.md\"]\nhooks = [\"quatro_attributes\", \"brei\"]\n\n[brei]\ninclude = [\".entangled/tasks.json\"]\n```\nAnd run\n```bash\nentangled brei figures\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/entangled/entangled.py/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Entangled"
        ],
        "type": "Text_excerpt",
        "value": "Copyright 2023 Netherlands eScience Center, written by Johan Hidding, licensed under the Apache 2 license, see LICENSE.\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "entangled.py"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "entangled"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 118910,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 886,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 176,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jinja",
        "size": 162,
        "type": "Programming_language",
        "value": "Jinja"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-09-30T10:40:53Z",
        "date_published": "2024-09-30T10:45:12Z",
        "description": "Disables behaviour where files get removed from the DB when they're not found on the file system. This created more trouble than its worth.",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.1.9",
        "name": "Entangled 2.1.9",
        "release_id": 177566147,
        "tag": "v2.1.9",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.1.9",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/177566147",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/177566147",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.1.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-09-27T17:48:49Z",
        "date_published": "2024-09-27T18:00:43Z",
        "description": "Adds a new flag to `entangled tangle`, being `-r/--reset-db`. Running with `-r` will rebuild the file database in case it got corrupted.",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.1.8",
        "name": "Entangled 2.1.8",
        "release_id": 177347815,
        "tag": "v2.1.8",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/177347815",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/177347815",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-09-17T07:29:20Z",
        "date_published": "2024-09-17T07:30:40Z",
        "description": "- bug fix for previous release",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.1.7",
        "name": "Entangled 2.1.7",
        "release_id": 175384532,
        "tag": "v2.1.7",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/175384532",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/175384532",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-09-17T07:21:52Z",
        "date_published": "2024-09-17T07:25:06Z",
        "description": "- Allow Yaml lists in task definitions. The following now works:\r\n\r\n~~~markdown\r\n```python\r\n#| file: test.py\r\n#| classes: [\"task\"]\r\n#| creates:\r\n#|    - hello.txt\r\n\r\nprint(\"Hello\", file=open(\"hello.txt\", \"w\"))\r\n```\r\n~~~",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.1.6",
        "name": "Entangled 2.1.6",
        "release_id": 175383380,
        "tag": "v2.1.6",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/175383380",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/175383380",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-09-16T14:34:57Z",
        "date_published": "2024-09-16T14:37:54Z",
        "description": "- when using the `quarto_attributes` hook, the `classes` attribute will be interpreted as listing classes that would normally be entered through `{.lang #codeid .class1 .class2 attr=value}` syntax.",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.1.5",
        "name": "Entangled 2.1.5",
        "release_id": 175257780,
        "tag": "v2.1.5",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/175257780",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/175257780",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-09-11T11:01:23Z",
        "date_published": "2024-09-11T11:02:23Z",
        "description": "- Ensure trailing newline on writing output files",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.1.4",
        "name": "Entangled 2.1.4",
        "release_id": 174524645,
        "tag": "v2.1.4",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/174524645",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/174524645",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-08-12T12:57:30Z",
        "date_published": "2024-08-12T12:59:24Z",
        "description": "- improve bugfix in previous release: stabilize output to filedb.json.",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.1.3",
        "name": "Entangled 2.1.3",
        "release_id": 169772522,
        "tag": "v2.1.3",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/169772522",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/169772522",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-08-12T12:47:19Z",
        "date_published": "2024-08-12T12:49:26Z",
        "description": "Saves file database with sorting keys enabled, to reduce noise in git.",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.1.2",
        "name": "Entangled 2.1.2",
        "release_id": 169770428,
        "tag": "v2.1.2",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/169770428",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/169770428",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-07-23T07:38:45Z",
        "date_published": "2024-07-23T07:39:49Z",
        "description": "Bug fix in quarto_attributes hook.",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.1.1",
        "name": "Entangled 2.1.1",
        "release_id": 166647158,
        "tag": "v2.1.1",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/166647158",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/166647158",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-07-18T14:49:52Z",
        "date_published": "2024-07-18T15:04:24Z",
        "description": "## Features\r\n- `quarto_attributes` can now be used to set `id` and `file`. This means Entangled can now work with standard Github markdown, as well as Typst. See the README for instructions.\r\n\r\n## Breaking changes\r\n- Shebang `#!` parsing is now part of a hook. This hook is enabled by default, however if you've enabled other hooks, add `\"shebang\"` to the `hooks` entry in `entangled.toml` to enable.\r\n- Hook API has changed.\r\n",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.1.0",
        "name": "Entangled 2.1.0",
        "release_id": 166074428,
        "tag": "v2.1.0",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/166074428",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/166074428",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-07-09T11:19:54Z",
        "date_published": "2024-07-09T11:23:58Z",
        "description": "- Fix issue for explicitly assigning a code block id to a block that also has a file target. The following should now work:\r\n\r\n~~~markdown\r\n``` {.rust file=src/main.rs #main}\r\n// this is the main file\r\n```\r\n\r\n``` {.rust #main}\r\nfn main() {\r\n  println!(\"Hello, World!\");\r\n}\r\n```\r\n~~~\r\n",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.5",
        "name": "Entangled 2.0.5",
        "release_id": 164592020,
        "tag": "v2.0.5",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/164592020",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/164592020",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-07-09T07:04:14Z",
        "date_published": "2024-07-09T07:07:12Z",
        "description": "Fixes an issue with the `entangled watch` daemon crashing on rapid file system changes",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.4",
        "name": "Entangled 2.0.4",
        "release_id": 164550273,
        "tag": "v2.0.4",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/164550273",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/164550273",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2024-05-15T14:25:33Z",
        "date_published": "2024-05-15T14:29:01Z",
        "description": "## Changes\r\n\r\nBy @dantefromhell \r\n- Add `nix` language to default languages\r\n- Show ignore list in status\r\n- Document ignore list in README\r\n\r\nBy @jhidding \r\n- Upgrade `copier` dependency\r\n",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.3",
        "name": "Entangled 2.0.3",
        "release_id": 155897208,
        "tag": "v2.0.3",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/155897208",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/155897208",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2023-11-18T22:41:25Z",
        "date_published": "2023-11-18T22:43:40Z",
        "description": "## About Entangled\r\n\r\nWith Entangled you write code and documentation together in Markdown files. Code is tangled from the Markdown into source files that work as normal and changes are synchronized between both. Entangled let's you create computational notebooks in any programming language, and keeps your code maintainable in any text editor.\r\n\r\n## Features in 2.0\r\n\r\n- Start new projects with `entangled new`\r\n- Build artifacts with `entangled brei`\r\n\r\n### Fixes in 2.0.1-2\r\n- Fix windows compatibility\r\n- Enable [external plugins](https://packaging.python.org/en/latest/guides/creating-and-discovering-plugins/) under `entangled.hooks`\r\n- Fix stupid import error",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.2",
        "name": "Entangled 2.0.2",
        "release_id": 130160961,
        "tag": "v2.0.2",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/130160961",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/130160961",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2023-11-13T12:21:46Z",
        "date_published": "2023-11-13T12:23:22Z",
        "description": "## About Entangled\r\n\r\nWith Entangled you write code and documentation together in Markdown files. Code is tangled from the Markdown into source files that work as normal and changes are synchronized between both. Entangled let's you create computational notebooks in any programming language, and keeps your code maintainable in any text editor.\r\n\r\n## Features in 2.0\r\n\r\n- Start new projects with `entangled new`\r\n- Build artifacts with `entangled brei`\r\n\r\n### Fixes in 2.0.1\r\n- Fix windows compatibility\r\n- Enable [external plugins](https://packaging.python.org/en/latest/guides/creating-and-discovering-plugins/) under `entangled.hooks`",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.1",
        "name": "Entangled 2.0.1",
        "release_id": 129143070,
        "tag": "v2.0.1",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/129143070",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/129143070",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2023-11-08T19:52:44Z",
        "date_published": "2023-11-09T00:21:02Z",
        "description": "## About Entangled\r\n\r\nWith Entangled you write code and documentation together in Markdown files. Code is tangled from the Markdown into source files that work as normal and changes are synchronized between both. Entangled let's you create computational notebooks in any programming language, and keeps your code maintainable in any text editor.\r\n\r\n## Features in 2.0\r\n\r\n- Start new projects with `entangled new`\r\n- Build artifacts with `entangled brei`\r\n",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.0",
        "name": "Entangled 2.0",
        "release_id": 128633440,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/128633440",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/128633440",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2023-10-13T10:44:57Z",
        "date_published": "2023-10-13T10:48:07Z",
        "description": "## Changes\r\n\r\n- Support shebang lines: lines at the top of a code-block that start with '#!' are pushed towards the top.\r\n- ",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.0b6",
        "name": "Entangled 2.0.0-beta-6",
        "release_id": 124964540,
        "tag": "v2.0.0b6",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.0b6",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/124964540",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/124964540",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.0b6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2023-10-07T09:22:43Z",
        "date_published": "2023-10-07T09:37:51Z",
        "description": "## Release notes\r\n- makes `rich` a non-optional dependency\r\n- fixes filedb between Windows/Linux",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.0b5",
        "name": "Entangled 2.0.0-beta-5",
        "release_id": 124137583,
        "tag": "v2.0.0b5",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.0b5",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/124137583",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/124137583",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.0b5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2023-09-27T11:06:49Z",
        "date_published": "2023-09-27T11:32:16Z",
        "description": "## Build hook\r\nThe `build` hook has changed. It's no longer a hook on codeblocks in the `make` language. Rather, you may tag any code block with a `.build` class and a pre-configured make action is included to run that code block. Target and dependencies are specified as attributes of the code block.",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.0b4",
        "name": "Entangled 2.0.0-beta-4",
        "release_id": 122764853,
        "tag": "v2.0.0b4",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.0b4",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/122764853",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/122764853",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.0b4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2023-06-04T21:41:40Z",
        "date_published": "2023-06-04T21:45:35Z",
        "description": "This second beta release comes with better error messages, greater test coverage, and fixes the poetry configuration, so that `pip install entangled-cli[rich]` works.",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.0b2",
        "name": "Entangled 2.0.0-beta-2",
        "release_id": 107216562,
        "tag": "v2.0.0b2",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.0b2",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/107216562",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/107216562",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.0b2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2023-05-24T06:27:12Z",
        "date_published": "2023-05-24T06:31:15Z",
        "description": "# Entangled 2.0\u03b2\r\n\r\nFirst $\\beta$ release! Things seem stable enough for every day use.",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.0b1",
        "name": "Entangled 2.0.0-beta-1",
        "release_id": 104054104,
        "tag": "v2.0.0b1",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.0b1",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/104054104",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/104054104",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.0b1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2023-05-20T20:17:18Z",
        "date_published": "2023-05-20T22:45:03Z",
        "description": "* fixes tangling of codeblocks that are indented in markdown\r\n\r\n**Full Changelog**: https://github.com/entangled/entangled.py/compare/v2.0.0a2...v2.0.0a3",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.0a3",
        "name": "Entangled.py 2.0.0-alpha-3",
        "release_id": 103707349,
        "tag": "v2.0.0a3",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.0a3",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/103707349",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/103707349",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.0a3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jhidding",
          "type": "User"
        },
        "date_created": "2023-05-19T23:35:33Z",
        "date_published": "2023-05-19T23:38:50Z",
        "description": "- Lots of bug fixes\r\n- Reading config from `entangled.toml`\r\n- Integrated support for Make to build artifacts",
        "html_url": "https://github.com/entangled/entangled.py/releases/tag/v2.0.0a2",
        "name": "Entangled.py 2.0.0-alpha-2",
        "release_id": 103671762,
        "tag": "v2.0.0a2",
        "tarball_url": "https://api.github.com/repos/entangled/entangled.py/tarball/v2.0.0a2",
        "type": "Release",
        "url": "https://api.github.com/repos/entangled/entangled.py/releases/103671762",
        "value": "https://api.github.com/repos/entangled/entangled.py/releases/103671762",
        "zipball_url": "https://api.github.com/repos/entangled/entangled.py/zipball/v2.0.0a2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:20:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support for Document Generators",
        "parent_header": [
          "Entangled"
        ],
        "type": "Text_excerpt",
        "value": "Entangled has been used successfully with the following document generators. Note that some of these examples were built using older versions of Entangled, but they should work just the same.\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pandoc",
        "parent_header": [
          "Entangled",
          "Support for Document Generators"
        ],
        "type": "Text_excerpt",
        "value": "[Pandoc](https://pandoc.org/) is a very versatile tool for converting documents in any format. It specifically has very wide support for different forms of Markdown syntax out in the wild, including a filter system that lets you extend the workings of Pandoc. Those filters can be written in any language through an API, for instance Python filters can be written using `panflute`, but there is also native support for Lua.\n\nTo work with Entangled style literate documents, there is a set of [Pandoc filters](https://github.com/entangled/filters) available. The major downside of Pandoc, is that it offers no help in making your output HTML look beautiful. One option is to use the [Bootstrap template](https://github.com/entangled/bootstrap), but you may wan't to try out others as well, or design your own. These days a lot can be done with a single well designed CSS file.\n\n- :heavy_plus_sign: dynamic\n- :heavy_plus_sign: supports most Markdown syntax out of the box\n- :heavy_plus_sign: excellent for science: citation, numbered figures, tables and equations\n- :heavy_plus_sign: support for LaTeX\n- :heavy_minus_sign: harder to setup\n- :heavy_minus_sign: takes work to make look good\n\nExample: [Hello World in C++](https://entangled.github.io/examples/hello-world.html)\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MkDocs",
        "parent_header": [
          "Entangled",
          "Support for Document Generators"
        ],
        "type": "Text_excerpt",
        "value": "[MkDocs](https://www.mkdocs.org/) is specifically taylored towards converting Markdown into good looking, easy to navigate HTML, especially when used in combination with the [`mkdocs-material`](https://squidfunk.github.io/mkdocs-material/) theme. To use Entangled style code blocks with MkDocs, you'll need to install the [`mkdocs-entangled-plugin`](https://github.com/entangled/mkdocs-plugin) as well.\n\n- :heavy_plus_sign: specifically designed for Markdown to HTML, i.e. software documentation\n- :heavy_plus_sign: pretty output, out of the box\n- :heavy_plus_sign: easy to install\n- :heavy_minus_sign: not intended for scientific use: numbering and referencing equations, figures and tables is hard to setup\n- :heavy_minus_sign: documentation is on par with most Python projects: Ok for most things, but really hard if you want specifics\n\nExample: TBD\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Typst",
        "parent_header": [
          "Entangled",
          "Support for Document Generators"
        ],
        "type": "Text_excerpt",
        "value": "[Typst](https://typst.app/) has a syntax that is similar to Markdown when it comes to code blocks. Set the code block markers in `entangled.toml` like so:\n\n```toml\nversion=\"2.0\"\nwatch_list=[\"*.typ\"]\nhooks=[\"quarto_attributes\"]\n\n[markers]\nopen=\"^(?P<indent>\\\\s*)```(?P<properties>.*)$\"\nclose=\"^(?P<indent>\\\\s*)```\\\\s*$\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documenter.jl",
        "parent_header": [
          "Entangled",
          "Support for Document Generators"
        ],
        "type": "Text_excerpt",
        "value": "[Documenter.jl]() is the standard tool to write Julia documention in. It has internal support for evaluating code block contents.\n\nExample: [Intro to code generation in Julia](https://jhidding.github.io/MacroExercises.jl/dev/)\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "PDoc",
        "parent_header": [
          "Entangled",
          "Support for Document Generators"
        ],
        "type": "Text_excerpt",
        "value": "[PDoc]() is a tool for documenting smaller Python projects. It grabs all documentation from the doc-strings in your Python library and generates a page from that. To have it include its own literate source, I had to use some very ugly hacks.\n\nExample: [check-deps, a Universal dependency checker in Python](https://jhidding.github.io/check-deps/checkdeps.html)\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docsify",
        "parent_header": [
          "Entangled",
          "Support for Document Generators"
        ],
        "type": "Text_excerpt",
        "value": "[Docsify](https://docsify.js.org/#/) serves the markdown files and does the conversion to HTML in a Javascript library (in browser).\n\nExample: [Guide to C++ on the web through WASM](https://nlesc-jcer.github.io/cpp2wasm/#/)\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get started",
        "parent_header": [
          "Entangled"
        ],
        "type": "Text_excerpt",
        "value": "To install Entangled, all you need is a Python (version &ge;3.11) installation. If you use [`poetry`](https://python-poetry.org), and you start a new project,\n\n```\npoetry init \npoetry add entangled-cli\n```\n\nThe `poetry init` command will create a `pyproject.toml` file and a virtual environment to install Python dependencies in. To activate the virtual environment, run `poetry shell` inside the project directory.\n\nOr, if you prefer plain old `pip`,\n\n```\npip install entangled-cli\n```\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use",
        "parent_header": [
          "Entangled"
        ],
        "type": "Text_excerpt",
        "value": "Run the `entangled watch` daemon in the root of your project folder. By default all Markdown files are monitored for fenced code blocks like so:\n\n~~~markdown\n``` {.rust #hello file=\"src/world.rs\"}\n...\n```\n~~~\n\nThe syntax of code block properties is the same as CSS properties: `#hello` gives the block the `hello` identifier, `.rust` adds the `rust` class and the `file` attribute is set to `src/world.rs` (quotes are optional). For Entangled to know how to tangle this block, you need to specify a language and a target file. However, now comes the cool stuff. We can split our code in meaningful components by cross-refrences.\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Hello World in C++",
        "parent_header": [
          "Entangled",
          "Use"
        ],
        "type": "Text_excerpt",
        "value": "The combined code-blocks in this example compose a compilable source code for \"Hello World\". For didactic reasons we don't always give the listing of an entire source file in one go. In stead, we use a system of references known as *noweb* (after Ramsey 1994).\n\nInside source fragments you may encounter a line with `<<...>>` marks like,\n\n~~~markdown\n``` {.cpp file=hello_world.cc}\n#include <cstdlib>\n#include <iostream>\n\n<<example-main-function>>\n```\n~~~\n\nwhich is then elsewhere specified. Order doesn't matter,\n\n~~~markdown\n``` {.cpp #hello-world}\nstd::cout << \"Hello, World!\" << std::endl;\n```\n~~~\n\nSo we can reference the `<<hello-world>>` code block later on.\n\n~~~markdown\n``` {.cpp #example-main-function}\nint main(int argc, char **argv)\n{\n    <<hello-world>>\n}\n```\n~~~\n\nA definition can be appended with more code as follows (in this case, order does matter!):\n\n~~~markdown\n``` {.cpp #hello-world}\nreturn EXIT_SUCCESS;\n```\n~~~\n\nThese blocks of code can be *tangled* into source files.\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuring",
        "parent_header": [
          "Entangled",
          "Use"
        ],
        "type": "Text_excerpt",
        "value": "Entangled is configured by putting a `entangled.toml` in the root of your project.\n\n```toml\n# required: the minimum version of Entangled\nversion = \"2.0\"            \n\n# default watch_list is [\"**/*.md\"]\nwatch_list = [\"docs/**/*.md\"]\n\n# default ignore_list is [\"**/README.md\"]\nignore_list = [\"docs/**/examples.md\"]\n```\n\nYou may add languages as follows:\n\n```toml\n[[languages]]\nname = \"Java\"\nidentifiers = [\"java\"]\ncomment = { open = \"//\" }\n\n# Some languages have comments that are not terminated by\n# newlines, like XML or CSS.\n[[languages]]\nname = \"XML\"\nidentifiers = [\"xml\", \"html\", \"svg\"]\ncomment = { open = \"\" }\n```\n\nThe `identifiers` are the tags that you may use in your code block header to identify the language. Using the above config, you should be able to write:\n\n~~~markdown\n``` {.html file=index.html}\n<!DOCTYPE html>\n<html lang=\"en\">\n    <<header>>\n    <<body>>\n</html>\n```\n\nAnd so on...\n~~~\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Reading from `pyproject.toml`",
        "parent_header": [
          "Entangled",
          "Use",
          "Configuring"
        ],
        "type": "Text_excerpt",
        "value": "If you have a `pyproject.toml` file, either because you use `poetry` to set up Entangled or because you're actually developing a Python project, you may want to put the configuration in `pyproject.toml` instead. Add a `tool.entangled` table like so:\n\n```toml\n[tool.entangled]\nversion = \"2.0\"\nwatch_list = [\"docs/**/*.md\"]\n```\n\nTo add languages in your `pyproject.toml`, add `tool.entangled.languages` sections.\nBe aware that these should be lists, not tables, so you will need to use double brackets, like so:\n\n```toml\n[[tool.entangled.languages]]\nname = \"Java\"\nidentifiers = [\"java\"]\ncomment = { open = \"//\" }\n```\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "Entangled",
          "Brei"
        ],
        "type": "Text_excerpt",
        "value": "To write out \"Hello, World!\" to a file `msg.txt`, we may do the following,\n\n```toml\n[[task]]\nstdout = \"secret.txt\"\nlanguage = \"Python\"\nscript = \"\"\"\nprint(\"Uryyb, Jbeyq!\")\n\"\"\"\n```\n\nTo have this message decoded define a pattern,\n\n```toml\n[pattern.rot13]\nstdout = \"{stdout}\"\nstdin = \"{stdin}\"\nlanguage = \"Bash\"\nscript = \"\"\"\ntr a-zA-Z n-za-mN-ZA-M\n\"\"\"\n\n[[call]]\npattern = \"rot13\"\n  [call.args]\n  stdin = \"secret.txt\"\n  stdout = \"msg.txt\"\n```\n\nTo define a phony target \"all\",\n\n```toml\n[[task]]\nname = \"all\"\nrequires = [\"msg.txt\"]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/entangled/entangled.py/main/README.md",
      "technique": "header_analysis"
    }
  ]
}