{
  "application_domain": [
    {
      "confidence": 34.72,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8565813618680524,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: MOTrainer\nmessage: >-\n  Distributed Measurement Operator Trainer for Data\n  Assimilation Applications\ntype: software\nauthors:\n  - given-names: Ou\n    family-names: Ku\n    email: o.ku@esciencecenter.nl\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0002-5373-5209'\n  - given-names: Fakhereh (Sarah)\n    family-names: Alidoost\n    orcid: 'https://orcid.org/0000-0001-8407-6472'\n    affiliation: Netherlands eScience Center\n  - given-names: Xu\n    family-names: Shan\n    orcid: 'https://orcid.org/0000-0002-0569-4326'\n    affiliation: Delft University of Technology\n  - given-names: Pranav\n    family-names: Chandramouli\n    orcid: 'https://orcid.org/0000-0002-7896-2969'\n    affiliation: Netherlands eScience Center\n  - given-names: Georgievska\n    family-names: Sonja\n    orcid: 'https://orcid.org/0000-0002-8094-4532'\n    affiliation: Netherlands eScience Center\n  - given-names: Meiert\n    family-names: Grootes\n    orcid: 'https://orcid.org/0000-0002-5733-4795'\n    affiliation: Netherlands eScience Center\n  - given-names: Susan\n    family-names: Steele-Dunne\n    orcid: 'https://orcid.org/0000-0002-8644-3077'\n    affiliation: Delft University of Technology\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.7540442\nrepository-code: 'https://github.com/VegeWaterDynamics/motrainer'\nurl: 'https://vegewaterdynamics.github.io/motrainer/'\nabstract: >-\n  Measurement Operator Trainer is a Python package training\n  measurement operators (MO) for data assimilations\n  purposes. It is specifically designed for the applications\n  where one needs to split large spatio-temporal data into\n  independent partitions, and then train separate ML models\n  for each partition.\nkeywords:\n  - Measurement Operator\n  - Data Assimilation\n  - Machine Learning\n  - Kalman Filter\nlicense: Apache-2.0\n"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "MOTrainer: Measurement Operator Trainer"
        ],
        "type": "Text_excerpt",
        "value": "\r\nThis package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and the [NLeSC/python-template](https://github.com/NLeSC/python-template)."
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Code of Conduct\n\nThis code of conduct is adapted from the \n[Git Code of Conduct](https://github.com/git/git/blob/master/CODE_OF_CONDUCT.md).\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nProject maintainers are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nProject maintainers have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when\nan individual is representing the project or its community. Examples of representing\na project or community include using an official project e-mail address, posting via\nan official social media account, or acting as an appointed representative at an\nonline or offline event. Representation of a project may be further defined and\nclarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at team-atlas@esciencecenter.nl.\n\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll Project maintainers are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Attribution\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4, \navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/docs/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VegeWaterDynamics/motrainer"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n# MOTrainer Contributing Guidelines\n\n\nWe welcome any kind of contribution to our software, from simple comment \nor question to a full fledged [pull request](https://help.github.com/articles/about-pull-requests/). \nPlease read and follow our [Code of Conduct](./CODE_OF_CONDUCT.md).\n\nA contribution can be one of the following cases:\n\n- you have a question;\n- you think you may have found a bug (including unexpected behavior);\n- you want to make some kind of change to the code base (e.g. to fix a bug, to add a new feature, to update documentation).\n\nThe sections below outline the steps in each case.\n\n## You have a question\n\n-  use the search functionality [here](https://github.com/VegeWaterDynamics/motrainer/issues)\nto see if someone already filed the same issue;\n-  if your issue search did not yield any relevant results, make a new issue;\n-  apply the \"question\" label; apply other labels when relevant.\n\n## You think you may have found a bug\n\n- use the search functionality [here](https://github.com/VegeWaterDynamics/motrainer/issues) to see if someone already filed the same issue;\n- if your issue search did not yield any relevant results, make a new issue, making sure to provide enough information to the rest of the community to understand the cause and context of the problem. Depending on the issue, you may want to include:\n    - the [SHA hashcode](https://help.github.com/articles/autolinked-references-and-urls/#commit-shas>) of the commit that is causing your problem;\n    - some identifying information (name and version number) for dependencies you're using;\n    - information about the operating system;\n- apply relevant labels to the newly created issue.\n\n## You want to make some kind of change to the code base\n\n- (**important**) announce your plan to the rest of the community *before you start working*. This announcement should be in the form of a (new) issue;\n- (**important**) wait until some kind of consensus is reached about your idea being a good idea;\n- if needed, fork the repository to your own Github profile and create your own feature branch off of the latest master commit. While working on your feature branch, make sure to stay up to date with the master branch by pulling in changes, possibly from the 'upstream' repository (follow the instructions [here](https://help.github.com/articles/configuring-a-remote-for-a-fork/) and [here](https://help.github.com/articles/syncing-a-fork/));\n- make sure the existing tests still work. First, install the development dependencies as `pip install .[dev]`, and then run `pytest tests`;\n- add your own tests (if necessary);\n- update or expand the documentation. Make sure the documentation is built successfully: first, install documentation dependencies as `pip install .[docs]` and then run `mkdocs build`.\n- make sure the linting tests pass by running `ruff` in the project root directory: `ruff check .`;\n- [push](http://rogerdudler.github.io/git-guide/) your feature branch to (your fork of) the MOTrainer repository on GitHub;\n- create the pull request, e.g. following the instructions [here](https://help.github.com/articles/creating-a-pull-request/).\n\nIn case you feel like you've made a valuable contribution, but you don't know how to write or run tests for it, or how to generate the documentation: don't let this discourage you from making the pull request; we can help you! Just go ahead and submit the pull request, but keep in mind that you might be asked to append additional commits to your pull request."
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/docs/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing to MOTrainer",
        "parent_header": [
          "MOTrainer: Measurement Operator Trainer"
        ],
        "type": "Text_excerpt",
        "value": "\r\nWe welcome any kind of contribution to our software. Please refer to the [Contributing Guidelines](https://vegewaterdynamics.github.io/motrainer/CONTRIBUTING/) or [Contributing.md](./docs/CONTRIBUTING.md).\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-09-30T07:36:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-03T08:45:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Distributed Measurement Operator Trainer for Data Assimilation Applications"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.994378480026337,
      "result": {
        "original_header": "MOTrainer: Measurement Operator Trainer",
        "type": "Text_excerpt",
        "value": "\r\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7540442.svg)](https://doi.org/10.5281/zenodo.7540442)\r\n[![PyPI](https://img.shields.io/pypi/v/motrainer.svg?colorB=blue)](https://pypi.python.org/project/motrainer/)\r\n[![Build](https://github.com/VegeWaterDynamics/motrainer/actions/workflows/build.yml/badge.svg)](https://github.com/VegeWaterDynamics/motrainer/actions/workflows/build.yml)\r\n[![Ruff](https://github.com/VegeWaterDynamics/motrainer/actions/workflows/lint.yml/badge.svg)](https://github.com/VegeWaterDynamics/motrainer/actions/workflows/lint.yml)\r\n[![DOI](https://joss.theoj.org/papers/10.21105/joss.06591/status.svg)](https://doi.org/10.21105/joss.06591)\r\n\r\nMeasurement Operator Trainer is a Python package training measurement operators (MO) for data assimilations purposes. It is specifically designed for the applications where one needs to split large spatio-temporal data into independent partitions, and then train separate ML models for each partition.\r\n\r\nPlease refer to the [MOtrainer documentation](https://vegewaterdynamics.github.io/motrainer/) for more details.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VegeWaterDynamics/motrainer/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VegeWaterDynamics/motrainer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/docs/notebooks/example_read_from_one_df.ipynb"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/docs/notebooks/example_read_from_one_df.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/docs/notebooks/example_daskml.ipynb"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/docs/notebooks/example_daskml.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/docs/notebooks/example_dnn.ipynb"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/docs/notebooks/example_dnn.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/docs/notebooks/example_read_from_multiple_df.ipynb"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/docs/notebooks/example_read_from_multiple_df.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/exploration/modelstore_example/example2_modelstore.ipynb"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/exploration/modelstore_example/example2_modelstore.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/exploration/modelstore_example/example1_modelstore.ipynb"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/exploration/modelstore_example/example1_modelstore.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VegeWaterDynamics/motrainer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VegeWaterDynamics/motrainer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MOTrainer: Measurement Operator Trainer"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/example/slurm_examples/submit.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.7540442"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.06591"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/10.21105/joss.06591/status.svg"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "MOTrainer: Measurement Operator Trainer"
        ],
        "type": "Text_excerpt",
        "value": "\r\nPython version `>=3.10` is required to install MOTrainer.\r\n\r\nMOTrainer can be installed from PyPI:\r\n\r\n```sh\r\npip install motrainer\r\n```\r\n\r\nWe suggest using [`mamba`](https://mamba.readthedocs.io/en/latest/installation/mamba-installation.html#fresh-install-recommended) to create an isolated environment for the installation to avoid conflicts.\r\n\r\nFor more details and trouble shooting of the installation process, please refer to the [installation guide](https://vegewaterdynamics.github.io/motrainer/setup/) for more details.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VegeWaterDynamics/motrainer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "data-assimilation, distributed-computing, kalman-filter, machine-learning"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "MOTrainer: Measurement Operator Trainer"
        ],
        "type": "Text_excerpt",
        "value": "\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.\r\n\r\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "motrainer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "VegeWaterDynamics"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/motrainer/"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 86438,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 51036,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 11980,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1918,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://mamba.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/VegeWaterDynamics/motrainer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rogerkuou",
          "type": "User"
        },
        "date_created": "2024-08-20T12:49:40Z",
        "date_published": "2024-08-20T12:50:16Z",
        "description": "**Full Changelog**: https://github.com/VegeWaterDynamics/motrainer/compare/v0.1.6...v0.1.7",
        "html_url": "https://github.com/VegeWaterDynamics/motrainer/releases/tag/v0.1.7",
        "name": "v0.1.7",
        "release_id": 171063092,
        "tag": "v0.1.7",
        "tarball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/tarball/v0.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/171063092",
        "value": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/171063092",
        "zipball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/zipball/v0.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rogerkuou",
          "type": "User"
        },
        "date_created": "2024-08-20T12:01:13Z",
        "date_published": "2024-08-20T12:01:53Z",
        "description": "## What's Changed\r\n* 130 changes to paper by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/131\r\n\r\n\r\n**Full Changelog**: https://github.com/VegeWaterDynamics/motrainer/compare/v0.1.5...v0.1.6",
        "html_url": "https://github.com/VegeWaterDynamics/motrainer/releases/tag/v0.1.6",
        "name": "v0.1.6",
        "release_id": 171053568,
        "tag": "v0.1.6",
        "tarball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/tarball/v0.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/171053568",
        "value": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/171053568",
        "zipball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/zipball/v0.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rogerkuou",
          "type": "User"
        },
        "date_created": "2024-08-01T08:25:51Z",
        "date_published": "2024-08-01T08:27:07Z",
        "description": "## What's Changed\r\n* 119 joss example data generator by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/121\r\n* 118 joss installation instruction by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/122\r\n* 120 community guidelines by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/125\r\n* uniform the variable names in the documentation by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/129\r\n* Conditional modification of TensorFlow system environment by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/128\r\n\r\n\r\n**Full Changelog**: https://github.com/VegeWaterDynamics/motrainer/compare/v0.1.3...v0.1.5",
        "html_url": "https://github.com/VegeWaterDynamics/motrainer/releases/tag/v0.1.5",
        "name": "v0.1.5",
        "release_id": 168188400,
        "tag": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/tarball/v0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/168188400",
        "value": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/168188400",
        "zipball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/zipball/v0.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rogerkuou",
          "type": "User"
        },
        "date_created": "2024-08-01T08:11:16Z",
        "date_published": "2024-08-01T08:19:11Z",
        "description": "## What's Changed\r\n* 119 joss example data generator by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/121\r\n* 118 joss installation instruction by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/122\r\n* 120 community guidelines by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/125\r\n* uniform the variable names in the documentation by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/129\r\n* Conditional modification of TensorFlow system environment by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/128\r\n\r\n\r\n**Full Changelog**: https://github.com/VegeWaterDynamics/motrainer/compare/v0.1.3...v0.1.4",
        "html_url": "https://github.com/VegeWaterDynamics/motrainer/releases/tag/v0.1.4",
        "name": "v0.1.4",
        "release_id": 168187169,
        "tag": "v0.1.4",
        "tarball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/tarball/v0.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/168187169",
        "value": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/168187169",
        "zipball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/zipball/v0.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rogerkuou",
          "type": "User"
        },
        "date_created": "2024-02-12T16:31:25Z",
        "date_published": "2024-02-12T16:41:02Z",
        "description": "## What's Changed\r\n* add pypi badge by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/115\r\n* Joss paper by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/114\r\n* Update lint by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/116\r\n* change version number by @rogerkuou in https://github.com/VegeWaterDynamics/motrainer/pull/117\r\n\r\n\r\n**Full Changelog**: https://github.com/VegeWaterDynamics/motrainer/compare/v0.1.2...v0.1.3",
        "html_url": "https://github.com/VegeWaterDynamics/motrainer/releases/tag/v0.1.3",
        "name": "v0.1.3",
        "release_id": 141650021,
        "tag": "v0.1.3",
        "tarball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/tarball/v0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/141650021",
        "value": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/141650021",
        "zipball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/zipball/v0.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rogerkuou",
          "type": "User"
        },
        "date_created": "2024-01-11T13:27:51Z",
        "date_published": "2024-01-11T13:29:35Z",
        "description": "Added:\r\n- API documentation for major components.",
        "html_url": "https://github.com/VegeWaterDynamics/motrainer/releases/tag/v0.1.2",
        "name": "v0.1.2",
        "release_id": 136663243,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/136663243",
        "value": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/136663243",
        "zipball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rogerkuou",
          "type": "User"
        },
        "date_created": "2024-01-03T15:56:32Z",
        "date_published": "2023-12-21T10:14:35Z",
        "description": "[0.1.1] - 2024-01-10\r\n-----\r\n\r\nAdded:\r\n- Added model exportation examples to documentation.",
        "html_url": "https://github.com/VegeWaterDynamics/motrainer/releases/tag/v0.1.1",
        "name": "v0.1.1",
        "release_id": 134750196,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/134750196",
        "value": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/134750196",
        "zipball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rogerkuou",
          "type": "User"
        },
        "date_created": "2023-01-16T10:01:19Z",
        "date_published": "2023-01-16T10:11:31Z",
        "description": "Initial implementation of motrainer\r\n\r\nAdded\r\n-----\r\n\r\n- DNN training example implemented with Tensorflow;\r\n- Jackknife Cross Validation method\r\n- SLURM example for parallel training per grid;\r\n- Tests and docs",
        "html_url": "https://github.com/VegeWaterDynamics/motrainer/releases/tag/2023.01",
        "name": "Beta release",
        "release_id": 89106500,
        "tag": "2023.01",
        "tarball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/tarball/2023.01",
        "type": "Release",
        "url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/89106500",
        "value": "https://api.github.com/repos/VegeWaterDynamics/motrainer/releases/89106500",
        "zipball_url": "https://api.github.com/repos/VegeWaterDynamics/motrainer/zipball/2023.01"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:21:49",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}