{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# YAML 1.2\n---\nabstract: \"Laserchicken is a toolkit for handling point clouds created using airborne laser scanning (ALS). Find neighboring points in your point cloud and describe them as feature values. Read our user manual and our (very modest) tutorial.\"\nauthors:\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Meijer\n    given-names: Christiaan\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Goncalves\n    given-names: Romulo\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Renaud\n    given-names: Nico\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Andela\n    given-names: Bouwe\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Dzigan\n    given-names: Yifat\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Diblen\n    given-names: Faruk\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Ranguelova\n    given-names: Elena\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Oord\n    given-names: Gijs\n    name-particle: \"van den\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Grootes\n    given-names: \"Meiert W.\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Nattino\n    given-names: Francesco\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Ku\n    given-names: Ou\n  -\n    affiliation: \"Institute for Biodiversity and Ecosystem Dynamics, University of Amsterdam\"\n    family-names: Koma\n    given-names: Zs\u00f3fia\ncff-version: \"1.0.3\"\ndate-released: 2023-07-05\ndoi: \"10.5281/zenodo.1219422\"\nkeywords:\n  - \"airborne laser scanning\"\n  - \"machine learning\"\n  - \"point cloud\"\n  - \"digital terrain map\"\nlicense: \"Apache-2.0\"\nmessage: \"If you use this software, please cite it using these metadata.\"\ntitle: \"Laserchicken: toolkit for ALS point clouds\"\nversion: \"0.6.1\"\n...\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eEcoLiDAR/laserchicken"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\n## Pull Request Submission Guidelines\n\nBefore you submit your pull request consider the following guidelines: \n* Please communicate with us up front about any new feature you would like to add, to avoid disappointment later. You can do this by creating an [issue](https://github.com/eEcoLiDAR/eEcoLiDAR/issues)\n* Fork the repository to your own github account if you don't have write access\n* Clone the repository on your local machine\n* Make your changes in a new git branch:  \n`git checkout -b my-fix-branch master`\n* Install the development environment:  \n`python setup.py develop`\n* Make your changes and add tests demonstrating that you fixed the bug or covering the new feature you added\n* Order your imports:  \n`isort -w 120 your_changed_file.py`\n* Format your code according the the project standard:  \n`yapf -i your_changed_file.py`\n* Check that your code is clean and fix any issues:  \n`prospector your_changed_file.py`\n* Run tests and make sure they pass:  \n`python setup.py test`\n* Commit your changes and upload:\n  ```\n  git add changed_file_1.py changed_file_2.py\n  git commit -m 'Your commit message'\n  git push\n  ```\n* Create a [pull request](https://github.com/eEcoLiDAR/eEcoLiDAR/pulls)\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-06-28T08:51:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-20T02:51:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.91786844557596,
      "result": {
        "type": "Text_excerpt",
        "value": "Please cite the software if you are using it in your scientific publication. \n\nToolkit for handling point clouds created using airborne laser scanning (ALS). Find neighboring points in your point cloud and describe them as feature values. Read our  and our (very modest) . \n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://laserchicken.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eEcoLiDAR/laserchicken/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "eEcoLiDAR/laserchicken"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Installation"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/95649056"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Prerequisites:\n- Python 3.7 or higher\n- pip\n```\npip install laserchicken\n```\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Necessary steps for making a new release",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "* Check citation.cff using general DOI for all version (option: create file via 'cffinit')\n* Create .zenodo.json file from CITATION.cff (using cffconvert)  \n```cffconvert --validate```  \n```cffconvert --ignore-suspect-keys --outputformat zenodo --outfile .zenodo.json```\n* Set new version number in laserchicken/_version.txt\n* Check that documentation uses the correct version\n* Edit Changelog (based on commits in https://github.com/eecolidar/laserchicken/compare/v0.3.2...master)\n* Test if package can be installed with pip (`pip install .`)\n* Create Github release\n* Upload to pypi (now implemented via GitHub Actions):  \n```python setup.py sdist bdist_wheel```  \n```python -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*```  \n(or ```python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*``` to test first)\n* Check doi on zenodo\n\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Feature testing",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "All features were tested for the following general conditions:\n- Output consistent point clouds and don't crash with artificial data, real data, all zero data (x, y or z), data without points, data with very low number of neighbors (0, 1, 2)\n- Input should not be changed by the feature extractor\n\nThe specific features were tested as follows.\n\n*Echo ratio*\n\nA test was written with artificial data to check the correctness of the calculation with manually calculated ratio. Also tested on real data to make sure it doesn't crash, without checking for correctness. We could add a test for correctness with real data but we would need both that data and a verified ground truth.\n\n*Eigenvalues*\n\nOnly sanity tests (l1>l2>l3) on real data and corner cases but no actual test for correctness. The code is very simple though and mainly calls numpy.linalg.eig.\n\n*Height statistics (max_z','min_z','mean_z','median_z','std_z','var_z','coeff_var_z','skew_z','kurto_z)*\n\nTested on real data for correctness. It is however unclear where the ground truths come from. Code is mainly calling numpy methods that do all the work already. Only calculations in our code are:\n\n```\nrange_z = max_z - min_z\ncoeff_var_z = np.std(z) / np.mean(z)\n```\n   \nI don't know about any packages that could provide an out of the box coefficient of variance. This is probably because the calculation is so simple.\n\n*Pulse penetration ratio*\n\nTested for correctness using artificial data against manually calculated values. No comparison was made with other implementations.\n\n*Sigma_z*\n\nTested for correctness using artificial data against manually calculated values. No comparison was made with other implementations.\n\n*Percentiles*\n\nTested for correctness using a simple case with artificial data against manually calculated values.\n\n*point_density*\n\nTested for correctness on artificial data.\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/laserchicken_logo.png"
      },
      "source": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "laserchicken"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "eEcoLiDAR"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 264788,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 21282,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eEcoLiDAR/laserchicken/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2023-07-05T12:15:36Z",
        "date_published": "2023-07-05T12:27:46Z",
        "description": "See [CHANGELOG](https://github.com/eEcoLiDAR/laserchicken/blob/v0.6.1/CHANGELOG.md)",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/v0.6.1",
        "name": "v0.6.1",
        "release_id": 111106139,
        "tag": "v0.6.1",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/v0.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/111106139",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/111106139",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/v0.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2022-09-05T12:50:41Z",
        "date_published": "2022-09-05T13:23:39Z",
        "description": "see [CHANGELOG](./CHANGELOG.md)",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/v0.6.0",
        "name": "v0.6.0",
        "release_id": 76290642,
        "tag": "v0.6.0",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/v0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/76290642",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/76290642",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/v0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2022-05-20T10:11:24Z",
        "date_published": "2022-05-20T10:21:44Z",
        "description": "LAS/LAZ files are now read/written using laspy instead of the (deprecated) plyas package - for all fixes check CHAGELOG.md",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/v0.5.0",
        "name": "v0.5.0",
        "release_id": 67365053,
        "tag": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/v0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/67365053",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/67365053",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/v0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2020-09-17T23:32:04Z",
        "date_published": "2020-09-17T23:41:49Z",
        "description": "This release includes:\r\n* an improvement in the performance of spatial filtering;\r\n* some changes in how multipolygons are dealt with in spatial filtering;\r\n* a bug fix in the `copy_point_cloud` function.\r\n",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/v0.4.2",
        "name": "v0.4.2",
        "release_id": 31502351,
        "tag": "v0.4.2",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/v0.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/31502351",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/31502351",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/v0.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2020-05-20T18:43:25Z",
        "date_published": "2020-05-20T18:49:45Z",
        "description": "This release introduces two minor improvements to the filter module and fixes a bug in the log-parsing in the PLY reader. ",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/v0.4.1",
        "name": "v0.4.1",
        "release_id": 26729642,
        "tag": "v0.4.1",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/v0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/26729642",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/26729642",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/v0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fnattino",
          "type": "User"
        },
        "date_created": "2020-05-13T14:44:52Z",
        "date_published": "2020-05-13T15:03:37Z",
        "description": "This releases introduces several improvements and functionalities, among which:\r\n - a simplified structure for the computed neighborhood list;\r\n - additional IO tools, which make laserchicken able to read and write LAZ and binary PLY files;\r\n - utility functions to merge point clouds, update point-cloud features and classify points on the basis of polygons.\r\n\r\nSome refactoring has also been performed to improve the code organization. For the complete list of changes, have a look at the [CHANGELOG](https://github.com/eEcoLiDAR/laserchicken/blob/master/CHANGELOG.md) \r\n ",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/v0.4.0",
        "name": "v0.4.0",
        "release_id": 26472091,
        "tag": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/v0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/26472091",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/26472091",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/v0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cwmeijer",
          "type": "User"
        },
        "date_created": "2019-12-12T13:19:14Z",
        "date_published": "2019-12-12T13:26:10Z",
        "description": "This release introduces feature extractors that work on the intensity attribute of points. Many feature extractors have been restructured and are now parameterized meaning that they can do their computation on an arbitrary input attribute. Because of this restructuring, and for consistency purposes, many features have been renamed. See the CHANGELOG for a list of these.",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/v0.3.2",
        "name": "v0.3.2",
        "release_id": 22177818,
        "tag": "v0.3.2",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/v0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/22177818",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/22177818",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/v0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cwmeijer",
          "type": "User"
        },
        "date_created": "2019-10-15T07:35:54Z",
        "date_published": "2019-10-15T07:36:31Z",
        "description": "This release has much-improved documentation, added feature extractors with the support of parameterized feature extractors and miscellaneous bugfixes.",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/v0.3.1",
        "name": "v0.3.1",
        "release_id": 20700927,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/20700927",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/20700927",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cwmeijer",
          "type": "User"
        },
        "date_created": "2019-02-27T14:57:49Z",
        "date_published": "2019-02-27T15:04:11Z",
        "description": "Normalization functionality and faster feature calculations.",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/v0.3.0",
        "name": "v0.3.0",
        "release_id": 15808908,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/15808908",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/15808908",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cwmeijer",
          "type": "User"
        },
        "date_created": "2018-07-31T10:59:59Z",
        "date_published": "2018-07-31T11:01:55Z",
        "description": "New cell and cube (or voxel) volumes added. Available volumes types are now:\r\n- Infinite cylinder\r\n- Sphere\r\n- Cell\r\n- Cube\r\n\r\nRead me now comes with description of test procedure for all features.",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/0.2.0",
        "name": "v0.2.0",
        "release_id": 12181490,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/12181490",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/12181490",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cwmeijer",
          "type": "User"
        },
        "date_created": "2018-07-10T12:01:02Z",
        "date_published": "2018-07-10T12:19:42Z",
        "description": "Added tests and many bug fixes. \r\nThese are mostly fixes for corner cases in feature extractors. For instance some feature extractor used to crash when they were processing a point cloud with zero points. This has been solved for every feature extractor.",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/0.1.1",
        "name": "laserchicken v0.1.1",
        "release_id": 11855408,
        "tag": "0.1.1",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/11855408",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/11855408",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cwmeijer",
          "type": "User"
        },
        "date_created": "2018-04-17T08:48:31Z",
        "date_published": "2018-04-17T08:51:53Z",
        "description": "Toolkit for handling point clouds created using airborne laser scanning (ALS). Find neighboring points in your point cloud and describe them as feature values. Included features:\r\n\r\n    point_density\r\n    echo_ratio\r\n    eigenv_1\r\n    eigenv_2\r\n    eigenv_3\r\n    z_entropy\r\n    max_z\r\n    min_z\r\n    mean_z\r\n    median_z\r\n    std_z\r\n    var_z\r\n    range\r\n    coeff_var_z\r\n    skew_z\r\n    kurto_z\r\n    normal_vector_1\r\n    normal_vector_2\r\n    normal_vector_3\r\n    slope\r\n    perc_10\r\n    perc_20\r\n    perc_30\r\n    perc_40\r\n    perc_50\r\n    perc_60\r\n    perc_70\r\n    perc_80\r\n    perc_90\r\n    perc_100\r\n    pulse_penetration_ratio\r\n    density_absolute_mean\r\n    sigma_z\r\n",
        "html_url": "https://github.com/eEcoLiDAR/laserchicken/releases/tag/0.1.0",
        "name": "laserchicken v0.1.0",
        "release_id": 10579158,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/10579158",
        "value": "https://api.github.com/repos/eEcoLiDAR/laserchicken/releases/10579158",
        "zipball_url": "https://api.github.com/repos/eEcoLiDAR/laserchicken/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:02:12",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ]
}