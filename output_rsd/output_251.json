{
  "application_domain": [
    {
      "confidence": 28.32,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8827304894235134,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: cudawrappers\nmessage: If you use this software, please cite it using the metadata from this file.\ntype: software\nauthors:\n  - given-names: John W.\n    family-names: Romein\n    email: romein@astron.nl\n    orcid: 'https://orcid.org/0000-0002-1915-5067'\n    affiliation: ASTRON\n  - given-names: Bram\n    family-names: Veenboer\n    affiliation: ASTRON\n    email: veenboer@astron.nl\n    orcid: 'https://orcid.org/0000-0001-9607-1142'\n  - given-names: Steven\n    name-particle: van der\n    family-names: Vlugt\n    affiliation: ASTRON\n    email: vlugt@astron.nl\n    orcid: 'https://orcid.org/0000-0001-6834-4860'\n  - given-names: Mattia\n    family-names: Mancini\n    affiliation: ASTRON\n    email: mancini@astron.nl\n    orcid: 'https://orcid.org/0000-0002-3861-9234'\n  - given-names: Bouwe\n    family-names: Andela\n    email: b.andela@esciencecenter.nl\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0001-9005-8940'\n  - given-names: Leon\n    family-names: Oostrum\n    email: l.oostrum@esciencecenter.nl\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0001-8724-8372'\n  - given-names: Hanno\n    family-names: Spreeuw\n    email: h.spreeuw@esciencecenter.nl\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0002-5057-0322'\n  - given-names: Laura\n    family-names: Ootes\n    email: l.ootes@esciencecenter.nl\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0002-2800-8309'\n  - given-names: Ben\n    name-particle: van\n    family-names: Werkhoven\n    email: b.vanwerkhoven@esciencecenter.nl\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0002-7508-3272'\n  - given-names: Alessio\n    family-names: Sclocco\n    email: a.sclocco@esciencecenter.nl\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0003-3278-0518'\n  - given-names: Faruk\n    family-names: Diblen\n    email: f.diblen@esciencecenter.nl\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0002-0989-929X'\n  - given-names: Jurriaan H.\n    family-names: Spaaks\n    email: j.spaaks@esciencecenter.nl\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0002-7064-4069'\n  - given-names: Abel\n    family-names: Soares Siqueira\n    email: abel.siqueira@esciencecenter.nl\n    affiliation: Netherlands eScience Center\n    orcid: 'https://orcid.org/0000-0003-4451-281X'\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.6076447\n    description: The concept doi for all versions of the software.\nrepository-code: 'https://github.com/nlesc-recruit/cudawrappers'\nabstract: C++ Wrappers for the CUDA Driver API.\nkeywords:\n  - CUDA\n  - HIP\n  - C++\n  - GPU\n  - accelerators\nlicense: Apache-2.0\ndate-released: 2022-03-08\nversion: \"0.8.0\"\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nromein@astron.nl.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nlesc-recruit/cudawrappers"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing guidelines\n\nWe welcome any kind of contribution to our software, from simple comment or question to a full fledged [pull request](https://help.github.com/articles/about-pull-requests/). Please read and follow our [Code of Conduct](CODE_OF_CONDUCT.md).\n\nA contribution can be one of the following cases:\n\n1. you have a question;\n1. you think you may have found a bug (including unexpected behavior);\n1. you want to make some kind of change to the code base (e.g. to fix a bug, to add a new feature, to update documentation);\n1. you want to make a new release of the code base.\n\nThe sections below outline the steps in each case.\n\n## You have a question\n\n1. use the search functionality [here](https://github.com/nlesc-recruit/cudawrappers/issues) to see if someone already filed the same issue;\n2. if your issue search did not yield any relevant results, make a new issue.\n\n## You think you may have found a bug\n\n1. use the search functionality [here](https://github.com/nlesc-recruit/cudawrappers/issues) to see if someone already filed the same issue;\n1. if your issue search did not yield any relevant results, make a new issue, making sure to provide enough information to the rest of the community to understand the cause and context of the problem. Depending on the issue, you may want to include:\n    - the version number that is causing your problem;\n    - some identifying information (name and version number) for dependencies you're using;\n    - information about the operating system.\n\n## You want to make some kind of change to the code base\n\n1. (**important**) announce your plan to the rest of the community *before you start working*. This announcement should be in the form of a (new) issue;\n1. (**important**) wait until some kind of consensus is reached about your idea being a good idea;\n1. if needed, fork the repository to your own Github profile and create your own feature branch off of the latest main commit. While working on your feature branch, make sure to stay up to date with the main branch by pulling in changes, possibly from the 'upstream' repository (follow the instructions [here](https://help.github.com/articles/configuring-a-remote-for-a-fork/) and [here](https://help.github.com/articles/syncing-a-fork/));\n1. make sure the existing tests still work;\n1. if your changes are taking a long time to implement, make a draft pull request with your ongoing work;\n1. add your own tests (if necessary);\n1. update or expand the documentation;\n1. update the `CHANGELOG.md` file with change;\n1. push your feature branch to (your fork of) the https://github.com/nlesc-recruit/cudawrappers repository on GitHub;\n1. create the pull request, e.g. following the instructions [here](https://help.github.com/articles/creating-a-pull-request/).\n\nIn case you feel like you've made a valuable contribution, but you don't know how to write or run tests for it, or how to generate the documentation: don't let this discourage you from making the pull request; we can help you! Just go ahead and submit the pull request, but keep in mind that you might be asked to append additional commits to your pull request.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "cudawrappers"
        ],
        "type": "Text_excerpt",
        "value": "See [CONTRIBUTING.md](https://github.com/nlesc-recruit/cudawrappers/blob/main/CONTRIBUTING.md) for a guide on how to contribute.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-05T12:42:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-24T13:58:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "C++ wrapper for the Nvidia C libraries (e.g. CUDA driver, nvrtc, cuFFT etc.)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9081656939196239,
      "result": {
        "original_header": "cudawrappers",
        "type": "Text_excerpt",
        "value": "This library is a C++ wrapper for the Nvidia C libraries (e.g. CUDA driver, nvrtc, cuFFT etc.). The main purposes are: \n1. _easier resource management_, leading to _lower risk of programming errors_;\n2. _better fault handling_ (through exceptions);\n3. _more compact user code_. \nThis library also supports AMD GPUs through the HIP: C++ Heterogeneous-Compute\nInterface for Portability. \nOriginally, the API enforced RAII to even further reduce the risk of faulty code, but enforcing RAII and compatibility with (unmanaged) objects obtained outside this API are mutually exclusive.\n \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9915071679964749,
      "result": {
        "original_header": "Used by",
        "type": "Text_excerpt",
        "value": "This section aims to provide an overview of projects that use this repo's library (or something very similar), e.g. through git submodules or by including copies of this library in their source tree: \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9945670019851386,
      "result": {
        "original_header": "Alternatives",
        "type": "Text_excerpt",
        "value": "This section provides an overview of similar tools in this space, and how they are different.\n \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9980672928014995,
      "result": {
        "original_header": "<a href=\"https://github.com/eyalroz/cuda-api-wrappers\">cuda-api-wrappers</a>",
        "type": "Text_excerpt",
        "value": "The project is planning to support more of the Driver API (for fine-grained control of CUDA devices) and NVRTC API (for runtime compilation of kernels); there is a release candidate ([`v0.5.0-rc1`](https://github.com/eyalroz/cuda-api-wrappers/tree/v0.5.0-rc1)). It doesn't provide support for cuFFT and cuBLAS though.\n \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8776074752672139,
      "result": {
        "original_header": "<a href=\"https://github.com/halmd-org/cuda-wrapper\">cuda-wrapper</a>",
        "type": "Text_excerpt",
        "value": "- Aims to provide a C++ wrapper for the CUDA Driver and Runtime APIs\n \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8084426941809181,
      "result": {
        "original_header": "<a href=\"https://github.com/apardyl/cudaplusplus\">CudaPlusPlus</a>",
        "type": "Text_excerpt",
        "value": "- Aims to provide a C++ wrapper for the CUDA Driver API\n- Project appears inactive\n \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Developer documentation",
        "parent_header": [
          "cudawrappers"
        ],
        "type": "Text_excerpt",
        "value": "See [README.dev.md](https://github.com/nlesc-recruit/cudawrappers/blob/main/README.dev.md) for documentation on setting up your development environment.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://cudawrappers.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nlesc-recruit/cudawrappers/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nlesc-recruit/cudawrappers/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nlesc-recruit/cudawrappers"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cudawrappers"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/424944643"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9902313811473621,
      "result": {
        "original_header": "cudawrappers",
        "type": "Text_excerpt",
        "value": "This library is a C++ wrapper for the Nvidia C libraries (e.g. CUDA driver, nvrtc, cuFFT etc.). The main purposes are: \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999521226297,
      "result": {
        "original_header": "Used by",
        "type": "Text_excerpt",
        "value": "1. https://git.astron.nl/RD/dedisp/\n1. https://git.astron.nl/RD/idg\n1. https://git.astron.nl/RD/tensor-core-correlator\n \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8677758333451081,
      "result": {
        "original_header": "<a href=\"https://github.com/apardyl/cudaplusplus\">CudaPlusPlus</a>",
        "type": "Text_excerpt",
        "value": "- Aims to provide a C++ wrapper for the CUDA Driver API\n- Project appears inactive\n \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nlesc-recruit/cudawrappers/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "accelerator, amd, cpp, cuda, driver-api, gpu, gpu-computing, hip, library, nvidia, rocm"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n      \n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cudawrappers"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "nlesc-recruit"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 99710,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 13998,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 8478,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cuda",
        "size": 171,
        "type": "Programming_language",
        "value": "Cuda"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "csbnw",
          "type": "User"
        },
        "date_created": "2024-07-05T15:00:15Z",
        "date_published": "2024-07-05T15:07:09Z",
        "description": "## What's Changed\r\n* Added cu::Function::occupancyMaxActiveBlocksPerMultiprocessor by @john-romein in https://github.com/nlesc-recruit/cudawrappers/pull/260\r\n* Let target_embed_source inline local header files by @csbnw , @matmanc and @loostrum in https://github.com/nlesc-recruit/cudawrappers/pull/263, https://github.com/nlesc-recruit/cudawrappers/pull/264, https://github.com/nlesc-recruit/cudawrappers/pull/265, https://github.com/nlesc-recruit/cudawrappers/pull/266, https://github.com/nlesc-recruit/cudawrappers/pull/267, https://github.com/nlesc-recruit/cudawrappers/pull/286, https://github.com/nlesc-recruit/cudawrappers/pull/287, https://github.com/nlesc-recruit/cudawrappers/pull/269, https://github.com/nlesc-recruit/cudawrappers/pull/270, https://github.com/nlesc-recruit/cudawrappers/pull/275, https://github.com/nlesc-recruit/cudawrappers/pull/276 and https://github.com/nlesc-recruit/cudawrappers/pull/277\r\n* Add inlined headers as dependencies in target_embed_source by @loostrum in https://github.com/nlesc-recruit/cudawrappers/pull/279\r\n* Add cu::Device::getUUID and initial nvml wrapper by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/268\r\n* Add nvrtc::findIncludePath by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/272 and https://github.com/nlesc-recruit/cudawrappers/pull/273\r\n* Fix typo in inline_local_includes macro by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/278\r\n* Add nvml::Device::getClock by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/285\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**Full Changelog**: https://github.com/nlesc-recruit/cudawrappers/compare/0.7.0...0.8.0",
        "html_url": "https://github.com/nlesc-recruit/cudawrappers/releases/tag/0.8.0",
        "name": "0.8.0",
        "release_id": 164178643,
        "tag": "0.8.0",
        "tarball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/tarball/0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/164178643",
        "value": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/164178643",
        "zipball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/zipball/0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "csbnw",
          "type": "User"
        },
        "date_created": "2024-03-08T12:59:08Z",
        "date_published": "2024-03-08T13:01:42Z",
        "description": "## What's Changed\r\n* Aartfaac fixes by @john-romein in https://github.com/nlesc-recruit/cudawrappers/pull/236\r\n* Update cudawrappers to support COBALT by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/240\r\n* Remove <T> for Wrapper constructors by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/241\r\n* Added new functions needed by the DPDK correlator. by @john-romein in https://github.com/nlesc-recruit/cudawrappers/pull/237\r\n* Support size = 0 for DeviceMemory constructor by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/246\r\n* Fix host memory by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/247\r\n* Use int for return type of CU_POINTER_ATTRIBUTE_IS_MANAGED query by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/250\r\n* Initialize size in Stream::memAllocAsync by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/251\r\n* Added Function::setAttribute() by @john-romein in https://github.com/nlesc-recruit/cudawrappers/pull/252\r\n* Add markdown link checker action by @laurasootes in https://github.com/nlesc-recruit/cudawrappers/pull/249\r\n* The users should know that no libraries will be built. by @HannoSpreeuw in https://github.com/nlesc-recruit/cudawrappers/pull/255\r\n* Cosmetic cleanup of CHANGELOG.md by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/256\r\n\r\n## New Contributors\r\n* @john-romein made their first contribution in https://github.com/nlesc-recruit/cudawrappers/pull/236\r\n* @HannoSpreeuw made their first contribution in https://github.com/nlesc-recruit/cudawrappers/pull/255\r\n\r\n**Full Changelog**: https://github.com/nlesc-recruit/cudawrappers/compare/0.6.0...0.7.0",
        "html_url": "https://github.com/nlesc-recruit/cudawrappers/releases/tag/0.7.0",
        "name": "0.7.0",
        "release_id": 145470579,
        "tag": "0.7.0",
        "tarball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/tarball/0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/145470579",
        "value": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/145470579",
        "zipball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/zipball/0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "csbnw",
          "type": "User"
        },
        "date_created": "2023-10-06T11:37:24Z",
        "date_published": "2023-10-06T11:41:54Z",
        "description": "## What's Changed\r\n* Update version to 0.5.0 by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/222\r\n* Fix kernel embedding by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/223\r\n* Make cudawrappers header-only by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/220\r\n* Update links to example repositories by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/224\r\n* Remove mention of no longer existing examples from README.md by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/229\r\n* Fix variable not quoted can cause errors in other CMakefiles.txt by @matmanc in https://github.com/nlesc-recruit/cudawrappers/pull/231\r\n* Update fair-software badge by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/230\r\n* Move asynchronous zero by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/226\r\n* Pass cu:: objects wherever appropriate by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/232\r\n* Refactor cmake files by @matmanc in https://github.com/nlesc-recruit/cudawrappers/pull/233\r\n* Patch target_embed_source for multiarch by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/234\r\n* Release 0.6.0 by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/235\r\n\r\n\r\n**Full Changelog**: https://github.com/nlesc-recruit/cudawrappers/compare/0.5.0...0.6.0",
        "html_url": "https://github.com/nlesc-recruit/cudawrappers/releases/tag/0.6.0",
        "name": "0.6.0",
        "release_id": 124025093,
        "tag": "0.6.0",
        "tarball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/tarball/0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/124025093",
        "value": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/124025093",
        "zipball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/zipball/0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "csbnw",
          "type": "User"
        },
        "date_created": "2023-09-25T11:52:59Z",
        "date_published": "2023-09-25T11:54:41Z",
        "description": "## What's Changed\r\n* Temporarily disable clang-tidy by @loostrum in https://github.com/nlesc-recruit/cudawrappers/pull/195\r\n* Add cufft library by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/151\r\n* Suggestion: improve CI runtime by @loostrum in https://github.com/nlesc-recruit/cudawrappers/pull/199\r\n* Update howfairis-github-action to 0.2.1 by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/205\r\n* Update CMake for unit tests by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/206\r\n* Add registered memory by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/209\r\n* Make vector add a test by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/208\r\n* Remove deprecated Context::getDevice by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/204\r\n* Fix __half division by float by @matmanc in https://github.com/nlesc-recruit/cudawrappers/pull/210\r\n* Add github workflow to build the code by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/213\r\n* Add lib prefix to shared libraries by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/212\r\n* Add managed memory by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/211\r\n* Update developer documentation on running linters by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/214\r\n* Update array equality check by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/216\r\n* Move tests to correct program by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/217\r\n* Add functions to asynchronously allocate and free device memory by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/218\r\n\r\n## New Contributors\r\n* @matmanc made their first contribution in https://github.com/nlesc-recruit/cudawrappers/pull/210\r\n\r\n**Full Changelog**: https://github.com/nlesc-recruit/cudawrappers/compare/0.4.0...0.5.0",
        "html_url": "https://github.com/nlesc-recruit/cudawrappers/releases/tag/0.5.0",
        "name": "0.5.0",
        "release_id": 122434499,
        "tag": "0.5.0",
        "tarball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/tarball/0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/122434499",
        "value": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/122434499",
        "zipball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/zipball/0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "csbnw",
          "type": "User"
        },
        "date_created": "2023-06-23T14:42:18Z",
        "date_published": "2023-06-23T14:42:36Z",
        "description": "## What's Changed\r\n* Fix CMake find_package by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/150\r\n* Run formatters on pre-commit.ci by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/153\r\n* Change windows line endings to unix by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/156\r\n* Fix documentation build by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/157\r\n* Improve support for linting by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/155\r\n* Improve error message if file with cuda code does not exist by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/159\r\n* Use CTest for testing and embed CUDA code in compiled module in example by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/161\r\n* Minor changes needed for integration into DP3 by @csbnw in https://github.com/nlesc-recruit/cudawrappers/pull/168\r\n* Add development environment by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/154\r\n* Address linter issues in cu and nvrtc libraries by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/158\r\n* Add nvtx library by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/152\r\n* Improve includes by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/170\r\n* Add link to RSD through badge by @loostrum in https://github.com/nlesc-recruit/cudawrappers/pull/179\r\n* Move nvtx.hpp header file to cudawrappers directory by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/181\r\n* pre-commit CI and linter updates by @loostrum in https://github.com/nlesc-recruit/cudawrappers/pull/176\r\n* Remove source class by @loostrum in https://github.com/nlesc-recruit/cudawrappers/pull/180\r\n* Add new authors by @loostrum in https://github.com/nlesc-recruit/cudawrappers/pull/183\r\n* 24 delete commented out code2 by @laurasootes in https://github.com/nlesc-recruit/cudawrappers/pull/188\r\n* Add bump2version by @loostrum in https://github.com/nlesc-recruit/cudawrappers/pull/185\r\n* Add a unit test and a framework for creating unit tests by @bouweandela in https://github.com/nlesc-recruit/cudawrappers/pull/169\r\n\r\n## New Contributors\r\n* @bouweandela made their first contribution in https://github.com/nlesc-recruit/cudawrappers/pull/150\r\n* @pre-commit-ci made their first contribution in https://github.com/nlesc-recruit/cudawrappers/pull/160\r\n* @csbnw made their first contribution in https://github.com/nlesc-recruit/cudawrappers/pull/168\r\n* @loostrum made their first contribution in https://github.com/nlesc-recruit/cudawrappers/pull/179\r\n* @laurasootes made their first contribution in https://github.com/nlesc-recruit/cudawrappers/pull/188\r\n\r\n**Full Changelog**: https://github.com/nlesc-recruit/cudawrappers/compare/0.3.0...0.4.0",
        "html_url": "https://github.com/nlesc-recruit/cudawrappers/releases/tag/0.4.0",
        "name": "0.4.0",
        "release_id": 109703283,
        "tag": "0.4.0",
        "tarball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/tarball/0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/109703283",
        "value": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/109703283",
        "zipball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/zipball/0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fdiblen",
          "type": "User"
        },
        "date_created": "2022-03-08T14:28:20Z",
        "date_published": "2022-03-08T14:36:47Z",
        "description": "## What's Changed\r\n* now controlling order of issue types via numbering in the filenames by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/112\r\n* Moved usage examples to their own repos by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/111\r\n* Update CITATION.cff with @svlugt's info by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/128\r\n* Update clang-tidy configuration and lint only src/ and include/ files by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/117\r\n* Add make command to PR template by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/120\r\n* Update @csbnw's info in CITATION.cff by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/132\r\n* Add build documentation to README.dev.md by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/113\r\n* Add linting workflow by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/115\r\n* generate the API documentation by @fdiblen in https://github.com/nlesc-recruit/cudawrappers/pull/122\r\n* Fix missing linters cppcheck and flawfinder by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/125\r\n* Add a build script for vector_add by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/123\r\n* add readthedocs badge by @fdiblen in https://github.com/nlesc-recruit/cudawrappers/pull/137\r\n* Add build steps to README.md by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/140\r\n* Codacy fixes by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/136\r\n\r\n\r\n**Full Changelog**: https://github.com/nlesc-recruit/cudawrappers/compare/0.2.0...0.3.0",
        "html_url": "https://github.com/nlesc-recruit/cudawrappers/releases/tag/0.3.0",
        "name": "0.3.0",
        "release_id": 61280849,
        "tag": "0.3.0",
        "tarball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/tarball/0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/61280849",
        "value": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/61280849",
        "zipball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/zipball/0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fdiblen",
          "type": "User"
        },
        "date_created": "2022-03-02T16:10:59Z",
        "date_published": "2022-03-02T16:14:54Z",
        "description": "## What's Changed\r\n* Create PULL_REQUEST_TEMPLATE.md by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/46\r\n* restructure file tree by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/43\r\n* Create CITATION.cff by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/48\r\n* Update CHANGELOG by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/42\r\n* Create skeleton for README.dev.md by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/51\r\n* fix CMake build by @fdiblen in https://github.com/nlesc-recruit/cudawrappers/pull/52\r\n* Add Code of Conduct by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/44\r\n* Add CHANGELOG reminder to pull request template by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/58\r\n* Add contributing guide by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/47\r\n* removed cufft and cublas files (they are still in release 0.1.0 if we need them) by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/61\r\n* Add badges by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/64\r\n* Added cffconvert workflow to validate CITATION.cff by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/60\r\n* added bram and steven to cff by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/62\r\n* added a bit of a skeleton for describing the other tools in this space by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/66\r\n* Update README.md by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/73\r\n* Added more specific conditions to workflow trigger by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/74\r\n* Update README.md by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/75\r\n* Update issue templates by @fdiblen in https://github.com/nlesc-recruit/cudawrappers/pull/69\r\n* added 'used by' repo examples by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/78\r\n* Update gitignore by @fdiblen in https://github.com/nlesc-recruit/cudawrappers/pull/80\r\n* Remove license section from README by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/83\r\n* Added updated statement of purpose by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/84\r\n* Use John Romein's e-mail in Code of Conduct by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/88\r\n* Add linters by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/59\r\n* Adding pre-commit hooks by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/87\r\n* Add documentation about formatters and linters to README.dev.md by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/77\r\n* Run the formatters by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/91\r\n* Change CUDA-wrappers to cudawrappers in many files by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/100\r\n* Update PR template with commands to build and run format and lint by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/101\r\n* Add software and hardware requirements by @fdiblen in https://github.com/nlesc-recruit/cudawrappers/pull/102\r\n* Create Codacy configuration file by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/98\r\n* Updated documentation about how to install the linters/formatters by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/105\r\n* Added note about semver scope of CHANGELOG by @jspaaks in https://github.com/nlesc-recruit/cudawrappers/pull/107\r\n* Update CHANGELOG in preparation of release 0.2.0 by @abelsiqueira in https://github.com/nlesc-recruit/cudawrappers/pull/106\r\n\r\n\r\n**Full Changelog**: https://github.com/nlesc-recruit/cudawrappers/compare/0.1...0.2.0",
        "html_url": "https://github.com/nlesc-recruit/cudawrappers/releases/tag/0.2.0",
        "name": "0.2.0",
        "release_id": 60813904,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/60813904",
        "value": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/60813904",
        "zipball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fdiblen",
          "type": "User"
        },
        "date_created": "2022-02-04T12:52:39Z",
        "date_published": "2022-02-14T12:27:05Z",
        "html_url": "https://github.com/nlesc-recruit/cudawrappers/releases/tag/0.1.0",
        "name": "0.1.0",
        "release_id": 59505009,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/59505009",
        "value": "https://api.github.com/repos/nlesc-recruit/cudawrappers/releases/59505009",
        "zipball_url": "https://api.github.com/repos/nlesc-recruit/cudawrappers/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "cudawrappers"
        ],
        "type": "Text_excerpt",
        "value": "| Software    | Minimum version |\n| ----------- | ----------- |\n| CUDA        | 10.0 or later |\n| ROCM        | 6.1.0 or later |\n| CMake       | 3.17 or later |\n| gcc         | 9.3 or later  |\n| OS          | Linux distro (amd64) |\n\n| Hardware    | Type |\n| ----------- | ----------- |\n| NVIDIA GPU  |\n[Pascal](https://www.nvidia.com/en-in/geforce/products/10series/architecture/)\nor newer|\n| AMD GPU     | RDNA2 or newer, CDNA2 or newer |\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:42:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "cudawrappers"
        ],
        "type": "Text_excerpt",
        "value": "We use CMake in this project, so you can clone and build this library with the following steps:\n\n```shell\ngit clone https://github.com/nlesc-recruit/cudawrappers\ncd cudawrappers\ncmake -S . -B build\nmake -C build\n```\n\nThis command will create a `build` directory. Cudawrappers is header only, so no library objects are being built.\nFor more details on the building requirements and on testing, check the [developer documentation](README.dev.md).\n\nTo install to `~/.local`, use\n```shell\ngit clone https://github.com/nlesc-recruit/cudawrappers\ncd cudawrappers\ncmake -DCMAKE_INSTALL_PREFIX=$HOME/.local -S . -B build\nmake -C build\nmake -C build install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage (HIP)",
        "parent_header": [
          "cudawrappers"
        ],
        "type": "Text_excerpt",
        "value": "To enable HIP, make sure to build cudawrappers with\n`-DCUDAWRAPPERS_BACKEND=HIP`, or when using `FetchContent`, use\n`set(CUDAWRAPPERS_BACKEND \"HIP\")`.  In your project's `CMakeLists.txt`, add\n`enable_language(HIP)`. Furthermore, every target that includes a cudawrappers\nheader file needs to be 'hipified', to this end, add\n`set_source_files_properties(source.cpp PROPERTIES LANGUAGE HIP)` for every\nrelevant `source.cpp` file. Some CUDA specific features may not be available or\nnot work on non-NVIDIA GPUs, in those cases use `#ifdef(__HIP__)` guards to\npatch your code wherever this is needed.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage examples",
        "parent_header": [
          "cudawrappers",
          "Usage (HIP)"
        ],
        "type": "Text_excerpt",
        "value": "You can include the cudawrappers library in your own projects in various ways. We have created a few repositories with example setups to get you started:\n\n1. [cudawrappers-usage-example-git-submodules](https://github.com/nlesc-recruit/cudawrappers-usage-example-git-submodules) Example project that uses the cudawrappers library as a dependency by using git submodules on its source tree.\n1. [cudawrappers-usage-example-locally-installed](https://github.com/nlesc-recruit/cudawrappers-usage-example-locally-installed) Example project that uses the cudawrappers library as a dependency by having it locally installed.\n1. [cudawrappers-usage-example-cmake-pull](https://github.com/nlesc-recruit/cudawrappers-usage-example-cmake-pull) Example project that uses the cudawrappers library as a dependency by having cmake pull it in from github.\n"
      },
      "source": "https://raw.githubusercontent.com/nlesc-recruit/cudawrappers/main/README.md",
      "technique": "header_analysis"
    }
  ]
}