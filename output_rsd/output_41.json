{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "<img src=\"src/gsa-logo.png\" width=\"128\" style=\"float:left;\">Global Sensitivity Analysis Reporting"
        ],
        "type": "Text_excerpt",
        "value": "[1] Hough, B., Fu, C. and Paliwal, S. (2016). savvy: visualize high dimensionality sensitivity analysis data. Updated with full sensitivity analysis from ligpy model. (v2.0). Zenodo. https://doi.org/10.5281/zenodo.53099  \n[2] Herman, J. and Usher, W. (2017) SALib: An open-source Python library for sensitivity analysis. Journal of Open Source Software, 2(9). doi:10.21105/joss.00097\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite our paper",
        "parent_header": [
          "<img src=\"src/gsa-logo.png\" width=\"128\" style=\"float:left;\">Global Sensitivity Analysis Reporting"
        ],
        "type": "Text_excerpt",
        "value": "Use the following bibtex to cite our paper when you use GSAreport.\n\n```\n@ARTICLE{9903639,  \n    author={Stein, Niki van and Raponi, Elena and Sadeghi, Zahra and Bouman, Niek and Van Ham, Roeland C. H. J. and B\u00e4ck, Thomas},  \n    journal={IEEE Access},   \n    title={A Comparison of Global Sensitivity Analysis Methods for Explainable AI With an Application in Genomic Prediction},   \n    year={2022},  \n    volume={10},  \n    number={},  \n    pages={103364-103381},  \n    doi={10.1109/ACCESS.2022.3210175}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Stein, Niki van and Raponi, Elena and Sadeghi, Zahra and Bouman, Niek and Van Ham, Roeland C. H. J. and B\u00e4ck, Thomas",
        "doi": "10.1109/ACCESS.2022.3210175",
        "format": "bibtex",
        "title": "A Comparison of Global Sensitivity Analysis Methods for Explainable AI With an Application in Genomic Prediction",
        "type": "Text_excerpt",
        "value": "@article{9903639,\n    doi = {10.1109/ACCESS.2022.3210175},\n    pages = {103364-103381},\n    number = {},\n    volume = {10},\n    year = {2022},\n    title = {A Comparison of Global Sensitivity Analysis Methods for Explainable AI With an Application in Genomic Prediction},\n    journal = {IEEE Access},\n    author = {Stein, Niki van and Raponi, Elena and Sadeghi, Zahra and Bouman, Niek and Van Ham, Roeland C. H. J. and B\u00e4ck, Thomas},\n}"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nikivanstein/GSAreport"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Contributing\n----------------------------------\n\n:+1::tada: First off, thanks for taking the time to contribute! :tada::+1:\n\n1. File an issue to notify the maintainers about what you're working on.\n2. Fork the repo, develop and test your code changes, add docs.\n3. Make sure that your commit messages clearly describe the changes.\n4. Send a pull request.\n\nFile an Issue\n----------------------------------\n\nUse the issue tracker to start the discussion. It is possible that someone\nelse is already working on your idea, your approach is not quite right, or that\nthe functionality exists already. The ticket you file in the issue tracker will\nbe used to hash that all out.\n\nStyle Guides\n-------------------\n1. Write in UTF-8 in Python 3\n2. User modular architecture to group similar functions, classes, etc. \n3. Always use 4 spaces for indentation (don't use tabs)\n4. Try to limit line length to 80 characters\n5. Class names should always be capitalized\n6. Function names should always be lowercase\n7. Look at the existing style and adhere accordingly\n\nFork the Repository\n-------------------\n\nBe sure to add the relevant tests before making the pull request. Docs will be\nupdated automatically when we merge to `master`, but you should also build\nthe docs yourself and make sure they're readable.\n\nMake the Pull Request\n---------------------\n\nOnce you have made all your changes, tests, and updated the documentation,\nmake a pull request to move everything back into the main branch of the\n`repository`. Be sure to reference the original issue in the pull request.\nExpect some back-and-forth with regards to style and compliance of these\nrules.\n\n## Building binaries (for developers)\nIf you want to build the executables yourself you can use the following commands. We use pyinstaller to package the executables.\nMake sure you have pyinstaller installed using `pip install pyinstaller`.\n\nOn your operating system, build the exe once you have the python source code up and running:\n\n```zsh\npyinstaller --distpath dist/darwin/ GSAreport.spec\n```\n\nWe provide binaries for Linux and Mac-OS in the releases section.\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/docs/sources/contributing.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-07T08:09:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-22T22:13:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Global Sensitivity reporting for Explainable AI"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9868939160656357,
      "result": {
        "original_header": "<img src=\"src/gsa-logo.png\" width=\"128\" style=\"float:left;\">Global Sensitivity Analysis Reporting",
        "type": "Text_excerpt",
        "value": "\nGSAreport is an application to easily generate reports that describe the global sensitivities of your input parameters as best as possible. You can use the reporting application to inspect which features are important for a given real world function / simulator or model. Using the dockerized application you can generate a report with just one line of code and no additional dependencies (except for Docker of course). \nGlobal Sensitivity Analysis is one of the tools to better understand your machine learning models or get an understanding in real-world processes.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9971705622816164,
      "result": {
        "original_header": "What is Sensitivity Analysis?",
        "type": "Text_excerpt",
        "value": "Sensitivity Analysis is a great way of getting a better understanding of how machine learning models work (Explainable AI), what parameters are of importance in real-world applications and processes and what interactions parameters have with other parameters.  \n**GSAreport** makes it easy to run a wide set of SA techniques and generates a nice and visually attractive report to inspect the results of these techniques. By using Docker no additional software needs to be installed and no coding experience is required. \n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9032560318038312,
      "result": {
        "original_header": "Building binaries (for developers)",
        "type": "Text_excerpt",
        "value": "We provide binaries for Linux and Mac-OS in the releases section. \nTo generate a new version of the documentation run `mike deploy --push --update-aliases 1.3.0 latest`\n \n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading and setting up the source code",
        "parent_header": [
          "<img src=\"src/gsa-logo.png\" width=\"128\" style=\"float:left;\">Global Sensitivity Analysis Reporting",
          "What is Sensitivity Analysis?"
        ],
        "type": "Text_excerpt",
        "value": "1. Install graph-tool (https://graph-tool.skewed.de/)\n2. Install python 3.7+\n3. Install node (v14+)\n4. Clone the repository with git or download the zip\n5. Install all python requirements (`pip install -r src/requirements.txt`)\n6. Run `python src/GSAreport.py -h`\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Basvanstein/GSAreport/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/paper%20experiments/interactive.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/paper%20experiments/interactive.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/paper%20experiments/table.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/paper%20experiments/table.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nikivanstein/GSAreport/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nikivanstein/GSAreport"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Global Sensitivity Analysis Reporting"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/445445786"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.04721"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/10.21105/joss.04721/status.svg"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://nikivanstein.github.io/GSAreport/1.0.1/example.png"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n### Using Docker (Recommended)\nThe easiest way to use the GSAreport application is directly using docker. This way you do not need to install any third party software.\n\n1. Install docker (https://docs.docker.com/get-docker/)\n2. Run the image `ghcr.io/nikivanstein/gsareport:main` as container with a volume for your data and for the output generated.\n\nExample to show help text:  \n\n```zsh\ndocker run -v \"$(pwd)\"/output:/output -v \"$(pwd)\"/data:/data ghcr.io/nikivanstein/gsareport:main -h\n```\n\n### Using executables\nIf you cannot or do not want to install Docker, you can also use the pre-compiled executables from the Releases section.\nThe executables do not contain graph-tool support and will not generate a sobol network plot, all other functionality is included. \n\nYou can use the executables from the command line with the same console parameters as explained in the Quick start section.\n\n!!! important \"Graph tool support\"\n    Note that when using the precompiled executables the Sobol network plots are not included in the reports. \n    The executables do not have support for the graph-tool package. \n\n### Using python source\nYou can also use the package by installing the dependencies to your own system.\n\n1. Install graph-tool (https://graph-tool.skewed.de/)\n2. Install python 3.7+\n3. Install node (v14+)\n4. Clone the repository with git or download the zip\n5. Install all python requirements (`pip install -r src/requirements.txt`)\n6. Run `python src/GSAreport.py -h`"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/docs/sources/installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading and setting up the source code",
        "parent_header": [
          "<img src=\"src/gsa-logo.png\" width=\"128\" style=\"float:left;\">Global Sensitivity Analysis Reporting",
          "What is Sensitivity Analysis?"
        ],
        "type": "Text_excerpt",
        "value": "1. Install graph-tool (https://graph-tool.skewed.de/)\n2. Install python 3.7+\n3. Install node (v14+)\n4. Clone the repository with git or download the zip\n5. Install all python requirements (`pip install -r src/requirements.txt`)\n6. Run `python src/GSAreport.py -h`\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Testing the Installation",
        "parent_header": [
          "<img src=\"src/gsa-logo.png\" width=\"128\" style=\"float:left;\">Global Sensitivity Analysis Reporting"
        ],
        "type": "Text_excerpt",
        "value": "Run \n\n```zsh\ncd src\npython -m pytest\n```\n\nTo execute the automated tests to verify the installation.\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.999995889905568,
      "result": {
        "original_header": "What is Sensitivity Analysis?",
        "type": "Text_excerpt",
        "value": "\n<figure>\n<p><img alt=\"Report example\" src=\"https://nikivanstein.github.io/GSAreport/1.0.1/example.png\">\n  </p>\n<figcaption>For a full example report see<a href=\"https://nikivanstein.github.io/GSAreport/example-report/example.html\">here</a>.</figcaption>\n</figure>\n \n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.985513350734714,
      "result": {
        "original_header": "Building binaries (for developers)",
        "type": "Text_excerpt",
        "value": "Make sure you have pyinstaller installed using `pip install pyinstaller`. \nOn your operating system, build the exe once you have the python source code up and running:\n```zsh\npyinstaller --distpath dist/darwin/ GSAreport.spec\n```\n \nWe provide binaries for Linux and Mac-OS in the releases section. \nTo generate a new version of the documentation run `mike deploy --push --update-aliases 1.3.0 latest`\n \n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nikivanstein/GSAreport/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "explainable-ai, machine-learning, python, sensitivity-analysis"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Bas van Stein\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/src/gsa-logo.png"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GSAreport"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "nikivanstein"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 321904,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 273658,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 43988,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 31803,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nikivanstein",
          "type": "User"
        },
        "date_created": "2024-05-14T19:48:52Z",
        "date_published": "2024-05-14T19:51:02Z",
        "description": "Fixes several bugs in the Docker image.\r\n\r\n## What's Changed\r\n* Feature/tests by @nikivanstein in https://github.com/nikivanstein/GSAreport/pull/19\r\n* Updated documentation for pwd by @nikivanstein in https://github.com/nikivanstein/GSAreport/pull/21\r\n* Updated readme and requirements by @nikivanstein in https://github.com/nikivanstein/GSAreport/pull/23\r\n* New dockerfile by @nikivanstein in https://github.com/nikivanstein/GSAreport/pull/25\r\n* Fix for unbalanced samples and permission denied error by @nikivanstein in https://github.com/nikivanstein/GSAreport/pull/29\r\n\r\n\r\n**Full Changelog**: https://github.com/nikivanstein/GSAreport/compare/v1.0.1...v1.3.0",
        "html_url": "https://github.com/nikivanstein/GSAreport/releases/tag/v1.3.0",
        "name": "v1.3.0 Bug fix release",
        "release_id": 155763110,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/nikivanstein/GSAreport/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nikivanstein/GSAreport/releases/155763110",
        "value": "https://api.github.com/repos/nikivanstein/GSAreport/releases/155763110",
        "zipball_url": "https://api.github.com/repos/nikivanstein/GSAreport/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nikivanstein",
          "type": "User"
        },
        "date_created": "2022-10-12T13:38:58Z",
        "date_published": "2022-10-12T19:41:04Z",
        "description": "Release with all feedback from the JOSS reviewers included.\r\n\r\n- additional unit tests\r\n- restructured documentation\r\n- better readme",
        "html_url": "https://github.com/nikivanstein/GSAreport/releases/tag/v1.0.1-joss-release",
        "name": "GSAreport: Easy to Use Global Sensitivity Reporting",
        "release_id": 79684209,
        "tag": "v1.0.1-joss-release",
        "tarball_url": "https://api.github.com/repos/nikivanstein/GSAreport/tarball/v1.0.1-joss-release",
        "type": "Release",
        "url": "https://api.github.com/repos/nikivanstein/GSAreport/releases/79684209",
        "value": "https://api.github.com/repos/nikivanstein/GSAreport/releases/79684209",
        "zipball_url": "https://api.github.com/repos/nikivanstein/GSAreport/zipball/v1.0.1-joss-release"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nikivanstein",
          "type": "User"
        },
        "date_created": "2022-09-27T13:16:42Z",
        "date_published": "2022-09-28T17:15:26Z",
        "description": "In this release we added support for python 3.10 by updating the dependencies.\r\n\r\n## What's Changed\r\n* Feature/actions by @Basvanstein in https://github.com/Basvanstein/GSAreport/pull/8\r\n* Updated docs with new docker image by @Basvanstein in https://github.com/Basvanstein/GSAreport/pull/9\r\n* Update installation.md by @Basvanstein in https://github.com/Basvanstein/GSAreport/pull/10\r\n* Update README.md by @Basvanstein in https://github.com/Basvanstein/GSAreport/pull/12\r\n* Upgrade pip in dockerfile by @Basvanstein in https://github.com/Basvanstein/GSAreport/pull/17\r\n\r\n\r\n**Full Changelog**: https://github.com/Basvanstein/GSAreport/compare/v1.0.0...v1.0.1",
        "html_url": "https://github.com/nikivanstein/GSAreport/releases/tag/v1.0.1",
        "name": "Python 3.10 release",
        "release_id": 78481739,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/nikivanstein/GSAreport/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nikivanstein/GSAreport/releases/78481739",
        "value": "https://api.github.com/repos/nikivanstein/GSAreport/releases/78481739",
        "zipball_url": "https://api.github.com/repos/nikivanstein/GSAreport/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nikivanstein",
          "type": "User"
        },
        "date_created": "2022-06-17T08:48:37Z",
        "date_published": "2022-06-24T07:42:58Z",
        "description": "First general release of the GSA report application. The application includes many GSA methods and depending on the number of dimensions and sample size of the given problem choices the appropriate methods to perform sensitivity analysis.\r\n",
        "html_url": "https://github.com/nikivanstein/GSAreport/releases/tag/v1.0.0",
        "name": "v1.0.0 General release",
        "release_id": 70463207,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/nikivanstein/GSAreport/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nikivanstein/GSAreport/releases/70463207",
        "value": "https://api.github.com/repos/nikivanstein/GSAreport/releases/70463207",
        "zipball_url": "https://api.github.com/repos/nikivanstein/GSAreport/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nikivanstein",
          "type": "User"
        },
        "date_created": "2022-05-09T12:29:32Z",
        "date_published": "2022-05-09T12:34:05Z",
        "description": "First beta-release (v0.9) of the GSAreport application.  Download the zip file for your architecture and unpack to find the executable.",
        "html_url": "https://github.com/nikivanstein/GSAreport/releases/tag/v0.9",
        "name": "v0.9-beta",
        "release_id": 66363784,
        "tag": "v0.9",
        "tarball_url": "https://api.github.com/repos/nikivanstein/GSAreport/tarball/v0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/nikivanstein/GSAreport/releases/66363784",
        "value": "https://api.github.com/repos/nikivanstein/GSAreport/releases/66363784",
        "zipball_url": "https://api.github.com/repos/nikivanstein/GSAreport/zipball/v0.9"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 22:59:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use",
        "parent_header": [
          "<img src=\"src/gsa-logo.png\" width=\"128\" style=\"float:left;\">Global Sensitivity Analysis Reporting"
        ],
        "type": "Text_excerpt",
        "value": "Generate a global sensitivity analysis report for a given data set or function with the simple Docker / python or executable command options.\n\nTo start, you always need to provide the program with a `problem` definition. This definition can be supplied as json file, see also `data/problem.json` for an example. The problem definition contains the dimensionality of your problem (number of input variables) `num_vars`, the `names` of these variables (X0 to X4 in the example), and the `bounds` of each variables as a list of tuples (lower bound, upper bound).\n    \n```python\n#Example problem definition in python (you can store this dict using json.dump to a json file)\ndim = 5\nproblem = {\n    'num_vars': dim,\n    'names': ['X'+str(x) for x in range(dim)],\n    'bounds': [[-5.0, 5.0]] * dim\n}\n```\n\nOnce you have the problem definition (specify it with `-p path/to/problem.json`) you can directly load an existing data set containing input and output files for analysis by passing the path to the directory (with `-d <path>`) in which these files are stored. The application searches for the following csv files:\n\n- x.csv, y.csv  #optional, in case you use an existing design of experiments\n- x_sobol.csv, y_sobol.csv\n- x_morris.csv, y_morris.csv\n- x_lhs.csv, y_lhs.csv\n\nSample csv files can be found in the `/data/` directory of this repository. Sample files can also be generated with the `--demo` parameter.\n\nWhen you have your own design of experiments you can store these in x and y.csv (space delimited). The Sobol, Morris and LHS (Latin Hypercube Sampling) files can be used when you have samples and results from a specific sampling technique which can be used for different Sensitivity analysis algorithms. The GSA report application can generate the `x_` version of these files (the input). Using the input files you can then evaluate the data points and store the target values `y` in the csv file with the same name convention. If you only provide an x.csv and y.csv file, a machine learning algorithm will be used to interpolate the remaining samples to generate the appropriate design of experiments required for the sensitivity analysis.\n\nA python example to read the `x_*.csv` files  and produce the correspondig `y_*.csv` files using your own objective function is provided in the next section.\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/GSAreport/main/README.md",
      "technique": "header_analysis"
    }
  ]
}