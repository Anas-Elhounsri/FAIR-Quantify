{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"Starreveld\"\n  given-names: \"Justin\"\n  affiliation: \"University of Amsterdam\"\n  orcid: \"https://orcid.org/0009-0001-6538-9278\"\n- family-names: \"Jin\"\n  given-names: \"Guanyu\"\n  affiliation: \"University of Amsterdam\"\n- family-names: \"den Hertog\"\n  given-names: \"Dick\"\n  affiliation: \"University of Amsterdam\"\n- family-names: \"Laeven\"\n  given-names: \"Roger JA\"\n  affiliation: \"University of Amsterdam\"\ntitle: \"ROBIST: Robust Optimization by Iterative Scenario Sampling and Statistical Testing\"\nversion: 2023.11.0\ndoi: 10.5281/zenodo.10143595\ndate-released: 2023-11-03\nurl: \"https://github.com/JustinStarreveld/ROBIST\"\nlicense: MIT\n"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "ROBIST: Robust Optimization by Iterative Scenario Sampling and Statistical Testing"
        ],
        "type": "Text_excerpt",
        "value": "Was our software useful to you? You can cite us using:\n\n```\n@misc{ROBIST,\n  doi = {10.5281/zenodo.10143595},\n  year = {2023},\n  author = {Justin Starreveld, Guanyu Jin, Dick den Hertog and Roger JA Laeven},\n  title = {ROBIST: Robust Optimization by Iterative Scenario Sampling and Statistical Testing},\n  url = {https://github.com/JustinStarreveld/ROBIST}\n}\n```\n\n[license]:              \t\thttps://opensource.org/license/mit/\n[license-badge]:        \t\thttps://img.shields.io/badge/license-MIT-blue\n[Zenodo-url]:           \t\thttps://doi.org/10.5281/zenodo.10143595\n[Zenodo-badge]: \t\t\t\thttps://zenodo.org/badge/494070848.svg\n[preprint-paper]:          \t\thttps://optimization-online.org/?p=24671\n"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Justin Starreveld, Guanyu Jin, Dick den Hertog and Roger JA Laeven",
        "doi": "10.5281/zenodo.10143595",
        "format": "bibtex",
        "title": "ROBIST: Robust Optimization by Iterative Scenario Sampling and Statistical Testing",
        "type": "Text_excerpt",
        "url": "https://github.com/JustinStarreveld/ROBIST",
        "value": "@misc{ROBIST,\n    url = {https://github.com/JustinStarreveld/ROBIST},\n    title = {ROBIST: Robust Optimization by Iterative Scenario Sampling and Statistical Testing},\n    author = {Justin Starreveld, Guanyu Jin, Dick den Hertog and Roger JA Laeven},\n    year = {2023},\n    doi = {10.5281/zenodo.10143595},\n}"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JustinStarreveld/ROBIST"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact Information",
        "parent_header": [
          "ROBIST: Robust Optimization by Iterative Scenario Sampling and Statistical Testing"
        ],
        "type": "Text_excerpt",
        "value": "Our code is not flawless. In case you have any questions or suggestions, please reach us at j.s.starreveld@uva.nl. \n"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-19T12:53:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-18T08:05:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Simple, yet effective, data-driven algorithm for optimization under parametric uncertainty"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9962222594803032,
      "result": {
        "original_header": "ROBIST: Robust Optimization by Iterative Scenario Sampling and Statistical Testing",
        "type": "Text_excerpt",
        "value": "This repository provides the code for applying _ROBIST_, a simple, yet effective, data-driven algorithm for optimization under parametric uncertainty. \nThe methodology and numerical experiments are described in detail in an accompanying paper, available online [here](https://optimization-online.org/?p=24671). \nThe method was developed by Justin Starreveld, Guanyu Jin, Dick den Hertog and Roger Laeven.\n \n"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9304771746218775,
      "result": {
        "original_header": "Code",
        "type": "Text_excerpt",
        "value": "The code is written in `Python`, version 3.10.9. The dependency packages are listed in `pyproject.toml`. The ROBIST algorithm is implemented in `src/robist/robist.py`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.971009398302219,
      "result": {
        "original_header": "Numerical Experiments",
        "type": "Text_excerpt",
        "value": "1) Toy Problem (abbreviated as tp). \nWe compare ROBIST with the methods of Calafiore & Campi (2005) and Yan\u0131koglu & den Hertog (2013) in  [`examples/tp_experiments.py`](https://github.com/JustinStarreveld/ROBIST/blob/main/examples/tp_experiments.py).  \n2) Altered Toy Problem (abbreviated as tp2).\nWe analyze the performance of ROBIST in more detail in [`examples/tp2_analysis.py`](https://github.com/JustinStarreveld/ROBIST/blob/main/examples/tp2_analysis.py), [`examples/tp2_extra_experiments_1.py`](https://github.com/JustinStarreveld/ROBIST/blob/main/examples/tp2_extra_experiments_1.py) and [`examples/tp2_extra_experiments_2.py`](https://github.com/JustinStarreveld/ROBIST/blob/main/examples/tp2_extra_experiments_2.py). \n3) Linear CCP Problem (abbreviated as jiang2022).\nWe compare ROBIST with the SAA-based methods of Ahmed et al. (2017) and Jiang and Xie (2022) in [`examples/jiang2022_experiments.py`](https://github.com/JustinStarreveld/ROBIST/blob/main/examples/jiang2022_experiments.py). \n4) Weighted Distribution Problem (abbreviated as wdp). \nWe compare ROBIST with the scenario optimization methods of Calafiore & Campi (2005), Car\u00e9 et al. (2014), Calafiore (2016) and Garatti et al. (2022) in [`examples/wdp_experiments.py`](https://github.com/JustinStarreveld/ROBIST/blob/main/examples/wdp_experiments.py). \n5) Portfolio Management Problem (abbreviated as pm). \nWe compare ROBIST with the data-driven robust optimization approach proposed by Bertsimas et al. (2018) and the scenario optimization approach of Calafiore (2013) in [`examples/pm_experiments.py`](https://github.com/JustinStarreveld/ROBIST/blob/main/examples/pm_experiments.py). \n6) Two-Stage Lot-Sizing Problem (abbreviated as ls). \nWe compare ROBIST with the method of Vayanos et al. (2012) in [`examples/ls_experiments.py`](https://github.com/JustinStarreveld/ROBIST/blob/main/examples/ls_experiments.py). \nFor more information on these experiments and the results we refer to [preprint-paper].\n \n"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JustinStarreveld/ROBIST/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JustinStarreveld/ROBIST/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JustinStarreveld/ROBIST"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ROBIST: Robust Optimization by Iterative Scenario Sampling and Statistical Testing"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JustinStarreveld/ROBIST/raw/main/docs/illustrative_figures/Illustrate_data_split_N=300.png"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JustinStarreveld/ROBIST/raw/main/docs/illustrative_figures/Illustrate_wConstraint_iter=0_N=100_alpha=0.01.png"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/docs/illustrative_figures/Illustrate_wConstraint_iter=1_N=100_alpha=0.01.png"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JustinStarreveld/ROBIST/raw/main/docs/illustrative_figures/TradeOffCurves_N=300_alpha=0.01_epsilon=0.1_iMax=100.png"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ROBIST: Robust Optimization by Iterative Scenario Sampling and Statistical Testing"
        ],
        "type": "Text_excerpt",
        "value": "The recommended way to install `robist` in your (virtual) environment is with\nPython's `pip`:\n```\npip install robist\n```\nTo be able to run the numerical experiments, make sure to clone the repository and install with the examples-requirements:\n```\ngit clone https://github.com/JustinStarreveld/ROBIST.git\ncd robist\npip install \".[examples]\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JustinStarreveld/ROBIST/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "algorithm, data-driven, robust-optimization"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ROBIST"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "JustinStarreveld"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 35891,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JustinStarreveld",
          "type": "User"
        },
        "date_created": "2024-09-17T15:29:50Z",
        "date_published": "2024-09-17T15:32:22Z",
        "description": "Updated code for revision of paper.",
        "html_url": "https://github.com/JustinStarreveld/ROBIST/releases/tag/v2024.09.17",
        "name": "v2024.09.0",
        "release_id": 175489149,
        "tag": "v2024.09.17",
        "tarball_url": "https://api.github.com/repos/JustinStarreveld/ROBIST/tarball/v2024.09.17",
        "type": "Release",
        "url": "https://api.github.com/repos/JustinStarreveld/ROBIST/releases/175489149",
        "value": "https://api.github.com/repos/JustinStarreveld/ROBIST/releases/175489149",
        "zipball_url": "https://api.github.com/repos/JustinStarreveld/ROBIST/zipball/v2024.09.17"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JustinStarreveld",
          "type": "User"
        },
        "date_created": "2024-02-16T09:27:36Z",
        "date_published": "2024-02-16T09:30:05Z",
        "description": "Updated PyPI release",
        "html_url": "https://github.com/JustinStarreveld/ROBIST/releases/tag/v2024.02.1",
        "name": "v2024.02.1",
        "release_id": 142293952,
        "tag": "v2024.02.1",
        "tarball_url": "https://api.github.com/repos/JustinStarreveld/ROBIST/tarball/v2024.02.1",
        "type": "Release",
        "url": "https://api.github.com/repos/JustinStarreveld/ROBIST/releases/142293952",
        "value": "https://api.github.com/repos/JustinStarreveld/ROBIST/releases/142293952",
        "zipball_url": "https://api.github.com/repos/JustinStarreveld/ROBIST/zipball/v2024.02.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JustinStarreveld",
          "type": "User"
        },
        "date_created": "2024-02-07T13:36:27Z",
        "date_published": "2024-02-07T13:39:28Z",
        "description": "First PyPI release",
        "html_url": "https://github.com/JustinStarreveld/ROBIST/releases/tag/v2024.02.0",
        "name": "v2024.02.0",
        "release_id": 140328137,
        "tag": "v2024.02.0",
        "tarball_url": "https://api.github.com/repos/JustinStarreveld/ROBIST/tarball/v2024.02.0",
        "type": "Release",
        "url": "https://api.github.com/repos/JustinStarreveld/ROBIST/releases/140328137",
        "value": "https://api.github.com/repos/JustinStarreveld/ROBIST/releases/140328137",
        "zipball_url": "https://api.github.com/repos/JustinStarreveld/ROBIST/zipball/v2024.02.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JustinStarreveld",
          "type": "User"
        },
        "date_created": "2023-11-02T15:43:01Z",
        "date_published": "2023-11-16T14:18:47Z",
        "description": "Code used to generate results and figures used in preprint of paper: https://optimization-online.org/?p=24671",
        "html_url": "https://github.com/JustinStarreveld/ROBIST/releases/tag/v2023.11.0",
        "name": "v2023.11.0",
        "release_id": 129749503,
        "tag": "v2023.11.0",
        "tarball_url": "https://api.github.com/repos/JustinStarreveld/ROBIST/tarball/v2023.11.0",
        "type": "Release",
        "url": "https://api.github.com/repos/JustinStarreveld/ROBIST/releases/129749503",
        "value": "https://api.github.com/repos/JustinStarreveld/ROBIST/releases/129749503",
        "zipball_url": "https://api.github.com/repos/JustinStarreveld/ROBIST/zipball/v2023.11.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:11:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Illustrative Example",
        "parent_header": [
          "ROBIST: Robust Optimization by Iterative Scenario Sampling and Statistical Testing"
        ],
        "type": "Text_excerpt",
        "value": "We demonstrate ROBIST using the illustrative example as described in Section 2.2 of the paper.  \n\nHere we apply the algorithm to the following toy problem from Yan\u0131koglu & den Hertog (2013):\n\n$$\n\\begin{align\\*}\n    \\max_{x_1,x_2 \\leq 1}~&x_1 + x_2 \\\\\n    \\text{s.t.}~&z_1x_1+ z_2x_2 \\leq 1,\n\\end{align\\*}\n$$\n\nwhere $z_1$ and $z_2$ are uncertain parameters, both uniformly distributed with support $[-1,1]$.\n\nSuppose we have access to a data set of $N=300$ realizations of $(\\tilde{z}_1, \\tilde{z}_2)$ and would like the solution to be feasible with probability of at least 90%. \nWe illustrate the application of ROBIST for this toy problem using the following figures. \n\nFirst, we randomly split the data set into three equal-sized sets $\\mathcal{D}^{train}\\_{N_1}$, $\\mathcal{D}^{\\text{valid}}\\_{N_2}$ and $\\mathcal{D}^{\\text{test}}\\_{N_3}$, each containing $100$ scenarios.\n\n![Data](https://github.com/JustinStarreveld/ROBIST/raw/main/docs/illustrative_figures/Illustrate_data_split_N=300.png)\n\nWe initialize the algorithm by optimizing for the expected/nominal scenario, i.e., $\\bar{\\mathbf{z}} = (z_1, z_2) = (0,0)$. This provides an initial solution: $\\mathbf{x}\\_{0} = (x_1, x_2) = (1,1)$ with an objective value of 2.\nThe next step is to use the training data $\\mathcal{D}^{\\text{train}}\\_{N_1}$ to evaluate the robustness of $\\mathbf{x}\\_{0}$. This evaluation is illustrated in the following figure.\n\n  ![At iteration 0](https://github.com/JustinStarreveld/ROBIST/raw/main/docs/illustrative_figures/Illustrate_wConstraint_iter=0_N=100_alpha=0.01.png)\n  \nWe find that $\\mathbf{x}\\_{0}$ does not meet the desired level of robustness, thus the algorithm will randomly pick one of the 13 currently violated scenarios (indicated by red stars) and add the scenario to our set of sampled scenarios to be optimized over.\nSuppose scenario $\\hat{\\mathbf{z}}^{11} = (0.96, 0.60)$ is chosen and we retrieve solution: $\\mathbf{x}\\_{1} = (0.4,1)$ with an objective value of 1.4.\nAgain, we can evaluate the robustness of our newly generated solution $\\mathbf{x}\\_{1}$ using the scenarios in $\\mathcal{D}^{\\text{train}}\\_{N_1}$. This is depicted in the figure below.\n  \n  ![At iteration 1](https://github.com/JustinStarreveld/ROBIST/blob/main/docs/illustrative_figures/Illustrate_wConstraint_iter=1_N=100_alpha=0.01.png)\n  \nWe find that $\\mathbf{x}\\_{1}$ exceeds our desired level of robustness, thus the algorithm will remove a randomly picked scenario from our set of sampled scenarios in the following iteration. \nThe algorithm continues adding or removing scenarios and evaluating the resulting solutions on $\\mathcal{D}^{\\text{train}}\\_{N_1}$ in this manner until either the time limit or iteration limit is reached. \n\nOnce the stopping criteria is reached, we use the validation data $\\mathcal{D}^{\\text{valid}}\\_{N_2}$ to properly evaluate each solution $\\mathbf{x}\\_{i}$ and obtain valid \"feasibility certificates\". \nThese evaluations can then be used to construct a trade-off curve and aid in choosing a final solution (the orange line in the figure below depicts such a trade-off curve, where each orange square\nrepresents a non-dominated solution with respect to the validation data). Recall that we would like our solution to be feasible with probability $\\geq 90\\%$, thus we select the solution with the highest \nobjective value while requiring that the proxy certificate derived from the validation data is greater than or equal to 0.90. Finally, we utilize $\\mathcal{D}^{\\text{test}}\\_{N_3}$ to provide\na valid feasibility certificate for this solution. In this example, the algorithm returns a solution with objective value 1.37 and feasibility certificate 0.93.  \n  \n  ![Trade-off curve](https://github.com/JustinStarreveld/ROBIST/raw/main/docs/illustrative_figures/TradeOffCurves_N=300_alpha=0.01_epsilon=0.1_iMax=100.png)\n  \nThe script used to create the figures in this illustrative example is [`examples/tp_illustrative_plots.py`](https://github.com/JustinStarreveld/ROBIST/blob/main/examples/tp_illustrative_plots.py).\n"
      },
      "source": "https://raw.githubusercontent.com/JustinStarreveld/ROBIST/main/README.md",
      "technique": "header_analysis"
    }
  ]
}