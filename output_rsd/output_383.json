{
  "application_domain": [
    {
      "confidence": 22.16,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UtrechtUniversity/patent-breakthrough"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "Patent breakthrough"
        ],
        "type": "Text_excerpt",
        "value": "Benjamin Cornejo Costas - b.j.cornejocostas@uu.nl\n\nProject Link: [https://github.com/UtrechtUniversity/patent-breakthrough](https://github.com/UtrechtUniversity/patent-breakthrough)\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "Patent breakthrough"
        ],
        "type": "Text_excerpt",
        "value": "Contributions are what make the open source community an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\nTo contribute:\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-13T14:53:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-21T22:26:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Package for the RE Patent Breakthrough project"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9923317933385152,
      "result": {
        "original_header": "Patent breakthrough",
        "type": "Text_excerpt",
        "value": "\nThe code in this repository is used to identify breakthrough innovations in historical patents from the [USPTO](https://www.uspto.gov/).\nThe `docembedding` Python package contains a variety of methods for creating document embeddings. We have optimized and tested these methods for their ability to predict similarity between patents. This was done by maximizing the cosine similarity between patents that are classified into the same technology class, and minimizing cosine similarity between patents that fall into different technology classes. These methods with optimized parameters are then used to create document embeddings. From these embeddings, novelty scores are created using cosine similarities between the focal patent and patents in the previous n years and subsequent n years.\n \n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UtrechtUniversity/patent-breakthrough/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/UtrechtUniversity/patent-breakthrough/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/walkthrough.ipynb"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/walkthrough.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/hyperopt/hyperopt-countvec.ipynb"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/hyperopt/hyperopt-countvec.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/hyperopt/hyperopt-tfidf.ipynb"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/hyperopt/hyperopt-tfidf.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/hyperopt/hyperopt-bert.ipynb"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/hyperopt/hyperopt-bert.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/hyperopt/hyperopt-bpemp.ipynb"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/hyperopt/hyperopt-bpemp.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/hyperopt/hyperopt-doc2vec.ipynb"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/examples/hyperopt/hyperopt-doc2vec.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/UtrechtUniversity/patent-breakthrough/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "UtrechtUniversity/patent-breakthrough"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Patent breakthrough"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/doi/10.5281/zenodo.10370227"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Patent breakthrough",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "To run the project, ensure to install the docembedder package that is part of this project.\n\n```sh\npip install docembedder\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Preparation",
        "parent_header": [
          "Patent breakthrough",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "First you need to make sure that you have the data prepared. There should be a directory with *.xz files, which should have the year, so 1923.xz, 1924.xz, 1925.xz, etc. If this is not the case and you have only the raw .txt files, then you have to compress your data:\n\n```python\nfrom docembedder.preprocessor.parser import compress_raw\ncompress_raw(some_file_name, \"year.csv\", some_output_dir)\n```\n\nHere, \"year.csv\" should be a file that that contains the patent ids and the year in which they were issued.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/UtrechtUniversity/patent-breakthrough/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Utrecht University\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Patent breakthrough",
          "About the Project"
        ],
        "type": "Text_excerpt",
        "value": "The code in this project is released under [MIT license](LICENSE).\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "patent-breakthrough"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "UtrechtUniversity"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 170047,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "qubixes",
          "type": "User"
        },
        "date_created": "2023-12-13T09:10:28Z",
        "date_published": "2023-12-13T09:22:27Z",
        "description": "This is the initial release of the docembedder package. It should be mostly feature complete.",
        "html_url": "https://github.com/UtrechtUniversity/patent-breakthrough/releases/tag/v0.1.0",
        "name": "Release 0.1.0",
        "release_id": 133709073,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/UtrechtUniversity/patent-breakthrough/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/UtrechtUniversity/patent-breakthrough/releases/133709073",
        "value": "https://api.github.com/repos/UtrechtUniversity/patent-breakthrough/releases/133709073",
        "zipball_url": "https://api.github.com/repos/UtrechtUniversity/patent-breakthrough/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "Patent breakthrough",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "To install and run this project you need to have the following prerequisites installed.\n\n```\n- Python [>=3.8, <3.11]\n- jupyterlab (or any other program to run jupyter notebooks)\n```\nTo install jupyterlab:\n```\npip install jupyterlab\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:05:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "Patent breakthrough"
        ],
        "type": "Text_excerpt",
        "value": "Clone this repository to your working station to obtain example notebooks and python scripts:\n\n```\ngit clone https://github.com/UtrechtUniversity/patent-breakthrough.git\n```\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Built with",
        "parent_header": [
          "Patent breakthrough",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "These packages are automatically installed in the step above:\n\n- [scikit-learn](https://scikit-learn.org/)\n- [gensim](https://pypi.org/project/gensim/)\n- [sbert](https://www.sbert.net/)\n- [bpemb](https://bpemb.h-its.org/)\n\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Hyper parameter optimization",
        "parent_header": [
          "Patent breakthrough",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "There are procedures to optimize the preprocessor and ML models with respect to predicting CPC classifications. This is not a necessary step to compute the novelties and impacts, and has already been done for patents 1838-1951. For more information on how to optimize the models, see the [documentation](docs/hyperparameter.md).\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Preprocessing",
        "parent_header": [
          "Patent breakthrough",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To improve the quality of the patents, and process/remove the start sections and such, it is necessary to preprocess these raw files. This is done using the `Preprocessor` and `OldPreprocessor` classes, for example:\n\n```python\nfrom docembedder.preprocessor import Preprocessor, OldPreprocessor\n\nprep = Preprocessor()\nold_prep = OldPreprocessor()\ndocuments = prep.preprocess_file(\"1928.xz\")\n```\n\nNormally however, we do not need to do preprocessing as a seperate step. We can compute the embeddings directly, which is explained in the next section.\n\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Embedding models",
        "parent_header": [
          "Patent breakthrough",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "There are 5 different embedding models implemented to compute the embeddings:\n\n```python\nfrom docembedder.models import CountVecEmbedder, D2VEmbedder, BPembEmbedder\nfrom docembedder.models import TfidfEmbedder, BERTEmbedder\nmodel = BERTEmbedder()\nmodel.fit(documents)\nembeddings = model.transform(documents)\n```\n\nThese models can have different parameters for training, see the section on hyper parameter models. The result can be either sparse or dense matrices. The functions and methods in this package work with either in the same way.\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5. Computing embeddings",
        "parent_header": [
          "Patent breakthrough",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The prepared data can be analysed to compute the embeddings for each of the patents using the `run_models` function. This function has the capability to run in parallel, in case you have more than one core on your CPU for examples.\n\nBefore we can run, we have to tell docembedder the parameters of the run, which is done through the `SimulationSpecification` class:\n\n```python\nfrom docembedder.utils import SimulationSpecification\nsim_spec = SimulationSpecification(\n    year_start=1838,  # Starting year for computing the embeddings.\n    year_end=1951, # Last year for computing the embeddings.\n    window_size=21,  # Size of the window to compute the embeddings for.\n    window_shift=1,  # How many years between subsequent windows.\n    debug_max_patents=100  # For a trial run we sample the patents instead, remove for final run.\n)\n```\n\nAn example to create a file with the embeddings is:\n\n```python\nfrom docembedder.utils import run_models\nrun_models({\"bert\": BERTEmbedder()}, model, sim_spec, output_fp, cpc_fp)\n```\n\nThe output file is then a HDF5 file, which stores the embeddings for all patents in all windows.\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "6. Computing novelty and impact",
        "parent_header": [
          "Patent breakthrough",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To compute the novelty and impact we're using the `Analysis` class:\n```python\nfrom docembedder.analysis import DocAnalysis\nwith DataModel(output_fp, read_only=False) as data\n    analysis = DocAnalysis(data)\n    results = analysis.compute_impact_novelty(\"1920-1940\", \"bert\")\n```\n\nThe result is a dictionary that contains the novelties and impacts for each of the patents in that window (in this case 1920-1940).\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Attribution and academic use",
        "parent_header": [
          "Patent breakthrough",
          "About the Project"
        ],
        "type": "Text_excerpt",
        "value": "Manuscript in preparation\n"
      },
      "source": "https://raw.githubusercontent.com/UtrechtUniversity/patent-breakthrough/main/README.md",
      "technique": "header_analysis"
    }
  ]
}