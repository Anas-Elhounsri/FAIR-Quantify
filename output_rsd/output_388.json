{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\n\nauthors:\n- family-names: \"Lichtenberg\"\n  given-names: \"Tim\"\n  orcid: \"https://orcid.org/0000-0002-3286-7683\"\n\n- family-names: \"Nicholls\"\n  given-names: \"Harrison\"\n  orcid: \"https://orcid.org/0000-0002-8368-4641\"\n\n- family-names: \"Soucasse\"\n  given-names: \"Laurent\"\n  orcid: \"https://orcid.org/0000-0002-5422-8794\"\n\n- given-names: \"Stef\"\n  family-names: \"Smeets\"\n  affiliation: \"Netherlands eScience Center\"\n  orcid: \"https://orcid.org/0000-0001-5107-3531\"\n\n- family-names: \"Sastre\"\n  given-names: \"Mariana\"\n  orcid: \"https://orcid.org/0000-0000-0000-0000\"\n\n- family-names: \"Postolec\"\n  given-names: \"Emma\"\n  orcid: \"https://orcid.org/0000-0000-0000-0000\"\n\n- family-names: \"Bower\"\n  given-names: \"Dan\"\n  orcid: \"https://orcid.org/0000-0002-0673-4860\"\n\ntitle: \"PROTEUS\"\nversion: 24.07.25\ndoi: 10.xx/xx.xx\ndate-released: 2024-07-19\nurl: \"https://github.com/FormingWorlds/PROTEUS\"\n"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\ncontact@formingworlds.space.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FormingWorlds/PROTEUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing guidelines\n\n## Development\n\n*PROTEUS* targets Python 3.10 or newer.\n\nClone the repository into the `proteus` directory:\n\n```console\ngit clone https://github.com/FormingWorlds/PROTEUS proteus\n```\n\nInstall using `virtualenv`:\n\n```console\ncd proteus\npython3 -m venv .venv\nsource .venv/bin/activate\npython3 -m pip install -e .[develop]\n```\n\nAlternatively, install using Conda:\n\n```console\ncd proteus\nconda create -n proteus python=3.12\nconda activate proteus\npip install -e .[develop]\n```\n\n### Linting\n\nLinting is a term for static code analysis to flag programming errors,\nbugs, stylistic errors and [suspicious constructs](https://en.wikipedia.org/wiki/Lint_(software)).\nPROTEUS uses [`ruff`](https://astral.sh/ruff) for linting.\nThe linting [rules](https://docs.astral.sh/ruff/rules/) are defined in [`pyproject.toml`](https://github.com/FormingWorlds/PROTEUS/blob/main/pyproject.toml).\n\nThis check are run automatically via a Github Action: [codestyle](https://github.com/FormingWorlds/PROTEUS/blob/main/.github/workflows/codestyle.yaml).\n\nYou can `ruff` on locally using one of these commands:\n\n```console\nruff check start_proteus.py  # single file\nruff check src/proteus       # directory\nruff check .                 # everything\n```\n\nIf you prepend `--fix`, it can also fix some issues for you:\n\n```console\nruff check . --fix\n```\n\nYou can also use [pre-commit](https://pre-commit.com/#usage) to automatically run `ruff` on every commit, e.g.:\n\n```console\npre-commit install\n```\n\n### Running tests\n\nPROTEUS uses [pytest](https://docs.pytest.org/en/latest/) to run the tests.\n\nThe tests are run automatically via a Github Action: [tests](https://github.com/FormingWorlds/PROTEUS/blob/main/.github/workflows/tests.yaml).\n\nYou can run the tests for yourself using:\n\n```console\npytest\n```\n\nTo check coverage:\n\n```console\ncoverage run -m pytest\ncoverage report  # to output to terminal\ncoverage html    # to generate html report\n```\n\n### Building the documentation\n\nThe documentation is written in [markdown](https://www.markdownguide.org/basic-syntax/), and uses [mkdocs](https://www.mkdocs.org/) to generate the pages.\n\nTo build the documentation for yourself:\n\n```console\npip install -e .[docs]\nmkdocs serve\n```\n\nYou can find the documentation source in the [docs](https://github.com/FormingWorlds/PROTEUS/tree/main/docs) directory.\nIf you are adding new pages, make sure to update the listing in the [`mkdocs.yml`](https://github.com/FormingWorlds/PROTEUS/blob/main/mkdocs.yml) under the `nav` entry.\n\nThe documentation is hosted on [readthedocs](https://readthedocs.io/projects/fwl-proteus).\n\n### Making a release\n\nThe versioning scheme we use is [CalVer](https://calver.org/).\n\n0. Update requirements files:\n\n```console\npython tools/requirements_txt.py\npip-compile -o requirements_full.txt pyproject.toml\n```\n\n1. Bump the version (`release`/`patch`) as needed\n\n```console\nbump-my-version bump release\n# 24.08.12\n```\n\n2. Commit and push your changes.\n\n3. Make a new [release](https://github.com/FormingWorlds/PROTEUS/releases). Make sure to set the tag to the specified version, e.g. `24.08.12`.\n\n4. The [upload to pypi](https://pypi.org/project/fwl-proteus) is triggered when a release is published and handled by [this workflow](https://github.com/FormingWorlds/PROTEUS/actions/workflows/publish.yaml).\n"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributors",
        "parent_header": [
          "PROTEUS Framework for Planetary Evolution"
        ],
        "type": "Text_excerpt",
        "value": "| Name  | Email address |\n| -     | -             |\nTim Lichtenberg         | tim.lichtenberg[at]rug.nl |\nHarrison Nicholls       | harrison.nicholls[at]physics.ox.ac.uk |\nLaurent Soucasse        | l.soucasse[at]esciencecenter.nl |\nStef Smeets             | s.smeets[at]esciencecenter.nl |\nDan J. Bower            | dbower[at]ethz.ch |\nMariana V. Sastre       | m.c.villamil.sastre[at]rug.nl |\nEmma Postolec           | e.n.postolec[at]rug.nl |\nMark Hammond            | mark.hammond[at]physics.ox.ac.uk |\nPatrick Sanan           | patrick.sanan[at]gmail.com |\nRaymond Pierrehumbert   | raymond.pierrehumbert[at]physics.ox.ac.uk |\nRyan Boukrouche         | ryan.boukrouche[at]astro.su.se |\nShang-Min Tsai          | shangmin.tsai[at]ucr.edu |\nHamish Innes            | hamish.innes[at]fu-berlin.de |\n"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-05T17:27:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T10:21:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Coupled atmosphere-interior framework to simulate the temporal evolution of rocky planets."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9912688805712162,
      "result": {
        "original_header": "PROTEUS Framework for Planetary Evolution",
        "type": "Text_excerpt",
        "value": "**PROTEUS** is a Python framework that simulates the coupled evolution\nof the atmospheres and interiors of rocky planets.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FormingWorlds/PROTEUS/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FormingWorlds/PROTEUS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/tools/notebooks/Check_steadystate_progress.ipynb"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/tools/notebooks/Check_steadystate_progress.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/tools/notebooks/PlotNetCDFs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/tools/notebooks/PlotNetCDFs.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FormingWorlds/PROTEUS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FormingWorlds/PROTEUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PROTEUS Framework for Planetary Evolution"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/tools/get_petsc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/tools/get_spider.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/tools/run_proteus.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/tools/get_socrates.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/tools/make_example.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gist.githubusercontent.com/stefsmeets/b4ee7dab92e20644bcb3a5ad09f71165/raw/covbadge.svg"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/docs/images/PROTEUS_black.png#gh-dark-mode-only"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation\n\nThese instructions will guide you through the typical installation\nprocess. The setup is written for MacOS and Linux. Depending on your\nsystem settings and installed libraries your procedure may differ. If\none or more of the steps below do not work for you we encourage you to\nfirst check the `troubleshooting`{.interpreted-text role=\"doc\"} page. If\nthat does not help you further, please contact the developers (see\n`contact`{.interpreted-text role=\"doc\"}).\n\n## System configuration (MacOS)\n\n1.  Open the terminal to install the developer tools\n\n```console\nxcode-select --install\n```\n\n2.  Install `FORTRAN NetCDF` library via the most appropriate method for\n    you\n\n```console\nbrew install netcdf\nbrew install netcdf-fortran\n```\n\nOr\n\n```console\nsudo port install netcdf-fortran +gcc8\n```\n\n## System configuration (Linux)\n\n1. Install `FORTRAN NetCDF` via your package manager (e.g\\...)\n\n```console\nsudo apt install libnetcdff-dev\n```\n\n## Python environment\n\nYou will need to setup Python (>=3.10) on your system. This can be done via brew on MacOS, or with your package manager on Linux. Alternatively, you can use [miniforge](https://github.com/conda-forge/miniforge) or [pyenv](https://github.com/pyenv/pyenv).\n\n## Download the framework\n\n1. Setup environment variables\n\n    The environment variable `FWL_DATA` points to the folder where input data are stored.\n    This variable must always be set, so it is best to add this line to your shell rc file.\n\n    ```console\n    export FWL_DATA=/your/local/path/\n    ```\n\n2. Download PROTEUS base\n\n    ```console\n    git clone git@github.com:FormingWorlds/PROTEUS.git\n    ```\n\n3. Get dependencies\n\n    ```console\n    cd PROTEUS\n    git submodule update --init --recursive\n    ```\n\n4. Create a virtual environment\n\n    ```console\n    python -m venv .venv\n    source .venv/bin/activate\n    ```\n\n5. Setup radiative transfer code (**SOCRATES**)\n\n    The code can be setup in `./socrates/` using the following script.\n\n    ```console\n    source get_socrates.sh\n    ```\n\n6. **Optional** developer installation steps\n\n    Follow the steps in this section if you want to create editable installations of these submodules.\n    Otherwise, go to the next step section.\n\n    - MORS stellar evolution model\n\n        ```console\n        git clone git@github.com:FormingWorlds/MORS\n        pip install -e MORS/.\n        ```\n\n    - JANUS atmosphere model\n\n        ```console\n        git clone git@github.com:FormingWorlds/JANUS\n        pip install -e JANUS/.\n        ```\n\n    - CALLIOPE outgassing model\n\n        ```console\n        git clone git@github.com:FormingWorlds/CALLIOPE\n        pip install -e CALLIOPE/.\n        ```\n\n7. Setup numerical computing library (**PETSc**)\n\n    ```console\n    ./tools/get_petsc.sh\n    ```\n\n8. Setup PROTEUS coupled framework\n\n    1. Get the remaining Python dependencies\n\n        ```console\n        pip install -e .\n        ```\n\n    2. Configure environment variables\n\n        - The variable `RAD_DIR` must point to the SOCRATES installation path. It is best to add this to your shell rc file.\n\n        - Setup other variables\n\n            ```console\n            source PROTEUS.env\n            ```\n            This file can also be added to your shell rc file.\n\n9. Setup interior evolution model (**SPIDER**)\n\n    ```console\n    ./tools/get_spider.sh\n    ```\n\n10. Done! \ud83d\ude80\n    Any remaining dependencies will be downloaded when the model is first run.\n\n## Optional modules\n\n### Radiative-convective atmosphere model (**AGNI**)\n\nInstallation steps can be found at the [AGNI wiki](https://nichollsh.github.io/AGNI/dev/setup/).\nThey are also reproduced below.\n\n1. Setup Julia\n\n    ```console\n    curl -fsSL https://install.julialang.org | sh\n    ```\n\n2. Clone the model\n\n    ```console\n    git clone git@github.com:nichollsh/AGNI.git\n    cd AGNI\n    ```\n\n3. Build AGNI\n\n    ```console\n    julia -e 'using Pkg; Pkg.activate(\".\"); Pkg.build()'\n    ```\n\n4. Go back to the PROTEUS directory\n\n    ```console\n    cd ../\n    ```\n\nConsult the AGNI wiki if you encouter issues.\n\n### Chemical kinetics atmosphere model (**VULCAN**)\n\n1. Clone the model\n\n    ```console\n    git clone git@github.com:exoclime/VULCAN.git\n    cd VULCAN\n    ```\n\n2. Compile the FastChem extension\n\n    ```console\n    cd fastchem_vulcan\n    ```\n\n    On MacOS you will need to edit `make.globaloptions` to reflect  a GNU-compatible `g++` executable, not the Apple one (see\n     [Troubleshooting](./troubleshooting.md) if the next step results in an error.\n\n    ```console\n    make\n    cd ../../\n    ```\n3. Install Python dependencies\n\n    ```console\n    pip install sympy\n    ```\n"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/docs/installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation instructions",
        "parent_header": [
          "PROTEUS Framework for Planetary Evolution"
        ],
        "type": "Text_excerpt",
        "value": "See the [installation guide](https://fwl-proteus.readthedocs.io/en/latest/installation/) for steps and troubleshooting advice.\n"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9929051425993101,
      "result": {
        "original_header": "Repository structure",
        "type": "Text_excerpt",
        "value": "| Object                | Description                                               |\n| -                     | -                                                         |\n| `start_proteus.py`    | Main PROTEUS Python script                                |\n| `README.md`           | Overview file                                             |\n| `pyproject.toml`\t    | Project configuration file                                |\n| `CODE_OF_CONDUCT.md`\t| Project code of conduct                                   |\n| `LICENSE.txt`         | Project license                                           |\n| `src/proteus`         | Source code for PROTEUS                                   |\n| `SPIDER/`             | Submodule SPIDER                                          |\n| `output/`             | Output folder with subfolders for each model run          |\n| `input/`              | Input folder (e.g. stellar spectra, example configs)      |\n| `docs/`\t\t\t    | Documentation source files                                |\n| `examples/`           | Example cases that the model should be able to reproduce  |\n \n"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9307099843718982,
      "result": {
        "original_header": "Repository structure",
        "type": "Text_excerpt",
        "value": "| Object                | Description                                               |\n| -                     | -                                                         |\n| `start_proteus.py`    | Main PROTEUS Python script                                |\n| `README.md`           | Overview file                                             |\n| `pyproject.toml`\t    | Project configuration file                                |\n| `CODE_OF_CONDUCT.md`\t| Project code of conduct                                   |\n| `LICENSE.txt`         | Project license                                           |\n| `src/proteus`         | Source code for PROTEUS                                   |\n| `SPIDER/`             | Submodule SPIDER                                          |\n| `output/`             | Output folder with subfolders for each model run          |\n| `input/`              | Input folder (e.g. stellar spectra, example configs)      |\n| `docs/`\t\t\t    | Documentation source files                                |\n| `examples/`           | Example cases that the model should be able to reproduce  |\n \n"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FormingWorlds/PROTEUS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "astronomy, astrophysics, atmosphere, exoplanets, geochemistry, geophysics, mantle, simulation-framework"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/docs/images/PROTEUS_white.png#gh-light-mode-only"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PROTEUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "FormingWorlds"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 759153,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 319252,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Julia",
        "size": 15793,
        "type": "Programming_language",
        "value": "Julia"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5739,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://fwl-proteus.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nichollsh",
          "type": "User"
        },
        "date_created": "2024-07-25T15:36:03Z",
        "date_published": "2024-07-25T15:41:00Z",
        "description": "## What's Changed\r\n* Sulfur outgassing by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/102\r\n* Stellar modelling updates by @lsoucasse in https://github.com/FormingWorlds/PROTEUS/pull/108\r\n* Integrate JANUS package by @lsoucasse in https://github.com/FormingWorlds/PROTEUS/pull/109\r\n* Detangling input/output variables by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/111\r\n* Simulation can be resumed by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/112\r\n* Calculates some observational quantities by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/114\r\n* A dummy escape module by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/115\r\n* Documentation updates\r\n* Other minor changes\r\n\r\n## New Contributors\r\n* @lsoucasse made their first contribution in https://github.com/FormingWorlds/PROTEUS/pull/108\r\n\r\n**Full Changelog**: https://github.com/FormingWorlds/PROTEUS/compare/v24.05.29...v24.07.25",
        "html_url": "https://github.com/FormingWorlds/PROTEUS/releases/tag/v24.07.25",
        "name": "Version 24.07.25",
        "release_id": 167162618,
        "tag": "v24.07.25",
        "tarball_url": "https://api.github.com/repos/FormingWorlds/PROTEUS/tarball/v24.07.25",
        "type": "Release",
        "url": "https://api.github.com/repos/FormingWorlds/PROTEUS/releases/167162618",
        "value": "https://api.github.com/repos/FormingWorlds/PROTEUS/releases/167162618",
        "zipball_url": "https://api.github.com/repos/FormingWorlds/PROTEUS/zipball/v24.07.25"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nichollsh",
          "type": "User"
        },
        "date_created": "2024-05-29T13:49:45Z",
        "date_published": "2024-05-30T09:21:25Z",
        "description": "## What's Changed\r\n* Updates to AGNI interface by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/88\r\n* Updates to default case and removed duplicate code by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/89\r\n* Rewrite SolveVolatiles outgassing script and other minor changes by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/98\r\n\r\n\r\n**Full Changelog**: https://github.com/FormingWorlds/PROTEUS/compare/v24.04.04...v24.05.29",
        "html_url": "https://github.com/FormingWorlds/PROTEUS/releases/tag/v24.05.29",
        "name": "Version 24.05.29",
        "release_id": 158136570,
        "tag": "v24.05.29",
        "tarball_url": "https://api.github.com/repos/FormingWorlds/PROTEUS/tarball/v24.05.29",
        "type": "Release",
        "url": "https://api.github.com/repos/FormingWorlds/PROTEUS/releases/158136570",
        "value": "https://api.github.com/repos/FormingWorlds/PROTEUS/releases/158136570",
        "zipball_url": "https://api.github.com/repos/FormingWorlds/PROTEUS/zipball/v24.05.29"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nichollsh",
          "type": "User"
        },
        "date_created": "2024-04-04T12:54:24Z",
        "date_published": "2024-04-04T13:03:54Z",
        "description": "## Summary\r\n- **Stability improvements**. The model now uses a more robust time-stepping scheme, which should mean that it does not take unphysically large steps that lead to submodules becoming decoupled. There are also other safety-checks, such as re-running SPIDER steps if the attempted step size and tolerances were inappropriate. New convergence criteria have been implemented for steady-state cases which do not solidify before reaching global radiative equilibrium.\r\n- **Documentation updates**. The ReadTheDocs files are now more coherent, with tables for outlining the parameters and fixes to the installation instructions. The submodule AEOLUS has been renamed to JANUS, to avoid confusion with other codes.\r\n- **Model output**. Plots have been improved and tidied, and are now generally faster to create. The model now outputs its stdout to a log file as well as to the terminal. The GridPROTEUS tool now uses queueing and multiprocessing, such that PROTEUS can now be easily run many times in parallel across a parameter space.\r\n- **Clouds**. The model now includes clouds, through JANUS, although they haven't been extensively tested and are disabled by default.\r\n\r\n\r\n##  Merged pull requests\r\n* Update my e-mail address by @djbower in https://github.com/FormingWorlds/PROTEUS/pull/58\r\n* Significant model stability improvements, plotting updates, and other changes by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/67\r\n* Support for JANUS, logging, GridProteus, and stability improvements by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/78\r\n* Clouds and minor fixes by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/79\r\n* Plot updates. Import optimisations. Config updates. by @nichollsh in https://github.com/FormingWorlds/PROTEUS/pull/85\r\n\r\n\r\n**Full Changelog**: https://github.com/FormingWorlds/PROTEUS/compare/v23.11.15...v24.04.04",
        "html_url": "https://github.com/FormingWorlds/PROTEUS/releases/tag/v24.04.04",
        "name": "Version 24.04.04",
        "release_id": 149768351,
        "tag": "v24.04.04",
        "tarball_url": "https://api.github.com/repos/FormingWorlds/PROTEUS/tarball/v24.04.04",
        "type": "Release",
        "url": "https://api.github.com/repos/FormingWorlds/PROTEUS/releases/149768351",
        "value": "https://api.github.com/repos/FormingWorlds/PROTEUS/releases/149768351",
        "zipball_url": "https://api.github.com/repos/FormingWorlds/PROTEUS/zipball/v24.04.04"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nichollsh",
          "type": "User"
        },
        "date_created": "2023-11-15T14:46:35Z",
        "date_published": "2023-11-15T15:31:06Z",
        "description": "This is the first release since Lichtenberg et al., 2021. Significant changes have been made to the model since then, so I will not make a direct comparison here.\r\n\r\nThe model is able to simulate the evolution of a magma ocean planet from a completely molten state to solidification. It accounts for energy transport through the interior (convection, conduction, settling, phase change), surface (conduction), and atmosphere (radiation, convection). The composition of the atmosphere is set by melt-vapour equilibrium with the magma ocean, requiring mass balance between equilibrium chemistry and solubility in the melt. Downwelling SW radiation from the star is calculated from stellar evolution tracks, and using time-resolved spectra. The model supports several volatiles at runtime, but includes tools for post-processing simulation results with robust photochemical kinetics. Output data are automatically plotted. The model's modular nature allows the submodules (e.g. AEOLUS) to be swapped for alternatives, such as AGNI.\r\n\r\nThis release has been able demonstrate that an Earth-like case with a pure-steam atmosphere cools within a few Myr, while Venus maintains a partially molten state thanks to a strong greenhouse effect. Highly irradiated planets (e.g. TRAPPIST-1b) are shown to maintain an almost entirely molten state as long as they maintain their atmospheres.\r\n\r\nSubmodules have been validated separately. This release does not include submodules explicitly, so they will need to be downloaded according to the documentation.",
        "html_url": "https://github.com/FormingWorlds/PROTEUS/releases/tag/v23.11.15",
        "name": "Version 23.11.15",
        "release_id": 129568753,
        "tag": "v23.11.15",
        "tarball_url": "https://api.github.com/repos/FormingWorlds/PROTEUS/tarball/v23.11.15",
        "type": "Release",
        "url": "https://api.github.com/repos/FormingWorlds/PROTEUS/releases/129568753",
        "value": "https://api.github.com/repos/FormingWorlds/PROTEUS/releases/129568753",
        "zipball_url": "https://api.github.com/repos/FormingWorlds/PROTEUS/zipball/v23.11.15"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "timlichtenberg",
          "type": "User"
        },
        "date_created": "2020-09-30T14:50:01Z",
        "date_published": "2021-05-27T10:12:57Z",
        "description": "Submodule versions from Lichtenberg et al. (2021, JGRP).",
        "html_url": "https://github.com/FormingWorlds/PROTEUS/releases/tag/v0.1.0",
        "name": "Module arrangement from Lichtenberg+ 2021 JGRP",
        "release_id": 43687387,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/FormingWorlds/PROTEUS/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/FormingWorlds/PROTEUS/releases/43687387",
        "value": "https://api.github.com/repos/FormingWorlds/PROTEUS/releases/43687387",
        "zipball_url": "https://api.github.com/repos/FormingWorlds/PROTEUS/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run instructions",
        "parent_header": [
          "PROTEUS Framework for Planetary Evolution"
        ],
        "type": "Text_excerpt",
        "value": "Only attempt to run PROTEUS after you have followed all of the installation instructions.\nSee the [usage guide](https://fwl-proteus.readthedocs.io/en/latest/usage/) for more information.\n"
      },
      "source": "https://raw.githubusercontent.com/FormingWorlds/PROTEUS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:06:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ]
}