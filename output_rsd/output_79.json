{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nikivanstein/doe2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Contributing\n----------------------------------\n\n:+1::tada: First off, thanks for taking the time to contribute! :tada::+1:\n\n1. File an issue to notify the maintainers about what you're working on.\n2. Fork the repo, develop and test your code changes, add docs.\n3. Make sure that your commit messages clearly describe the changes.\n4. Send a pull request.\n\nFile an Issue\n----------------------------------\n\nUse the issue tracker to start the discussion. It is possible that someone\nelse is already working on your idea, your approach is not quite right, or that\nthe functionality exists already. The ticket you file in the issue tracker will\nbe used to hash that all out.\n\nStyle Guides\n-------------------\n1. Write in UTF-8 in Python 3\n2. User modular architecture to group similar functions, classes, etc. \n3. Always use 4 spaces for indentation (don't use tabs)\n4. Try to limit line length to 80 characters\n5. Class names should always be capitalized\n6. Function names should always be lowercase\n7. Look at the existing style and adhere accordingly\n\nFork the Repository\n-------------------\n\nBe sure to add the relevant tests before making the pull request. Docs will be\nupdated automatically when we merge to `master`, but you should also build\nthe docs yourself and make sure they're readable.\n\nMake the Pull Request\n---------------------\n\nOnce you have made all your changes, tests, and updated the documentation,\nmake a pull request to move everything back into the main branch of the\n`repository`. Be sure to reference the original issue in the pull request.\nExpect some back-and-forth with regards to style and compliance of these\nrules.\n\n## Building binaries (for developers)\nIf you want to build the executables yourself you can use the following commands. We use pyinstaller to package the executables.\nMake sure you have pyinstaller installed using `pip install pyinstaller`.\n\nOn your operating system, build the exe once you have the python source code up and running:\n\n```zsh\npyinstaller --distpath dist/darwin/ GSAreport.spec\n```\n\nWe provide binaries for Linux and Mac-OS in the releases section.\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/docs/sources/contributing.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-28T19:17:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-23T07:20:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9505462575125305,
      "result": {
        "original_header": "<img src=\"docs/logo.png\" width=\"128\" style=\"float:left;\">DoE2Vec",
        "type": "Text_excerpt",
        "value": "\nDoE2Vec is a self-supervised approach to learn exploratory landscape analysis features from design of experiments.\nThe model can be used for downstream meta-learning tasks such as learninig which optimizer works best on a given optimization landscape.\nOr to classify optimization landscapes in function groups. \nThe approach uses randomly generated functions and can also be used to find a \"cheap\" reference function given a DOE.\nThe model uses Sobol sequences as the default sampling method. A custom sampling method can also be used.\nBoth the samples and the landscape should be scaled between 0 and 1. \n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9051194342001742,
      "result": {
        "original_header": "Load a model from the HuggingFace Hub",
        "type": "Text_excerpt",
        "value": "Available models can be viewed here: https://huggingface.co/BasStein\nA model name is build up like BasStein/doe2vec-d2-m8-ls16-VAE-kl0.001  \nWhere d is the number of dimensions, 8 the number (2^8) of samples, 16 the latent size, VAE the model type (variational autoencoder) and 0.001 the KL loss weight. \n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Basvanstein/doe2vec/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nikivanstein/doe2vec/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nikivanstein/doe2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DoE2Vec"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n### Installing using pip\n\nDoE2Vec is a python package that you can easily install via pip.\n\n1. Install python 3.7+\n3. `pip3 install doe2vec`\n\n\n## Installation for development\n\nTo further help develop the DOE2vec package you can clone this repository and install all requirements\n\n1. Clone the git repo\n2. install requirements `pip3 install -f requirements.txt`"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/docs/sources/installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install package via pip",
        "parent_header": [
          "<img src=\"docs/logo.png\" width=\"128\" style=\"float:left;\">DoE2Vec"
        ],
        "type": "Text_excerpt",
        "value": "```zsh\n`pip install doe2vec`\n```\n\nAfterwards you can use the package via:\n\n```python\nfrom doe2vec import doe_model\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to Setup your Environment for Development",
        "parent_header": [
          "<img src=\"docs/logo.png\" width=\"128\" style=\"float:left;\">DoE2Vec"
        ],
        "type": "Text_excerpt",
        "value": "- `python3.8 -m venv env` \n- `source ./env/bin/activate`\n- `pip install -r requirements.txt`\n\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Generate the Data Set",
        "parent_header": [
          "<img src=\"docs/logo.png\" width=\"128\" style=\"float:left;\">DoE2Vec"
        ],
        "type": "Text_excerpt",
        "value": "To generate the artificial function dataset for a given dimensionality and sample size\nrun the following code\n\n```python\nfrom doe2vec inport doe_model\n\nobj = doe_model(d, m, n=50000, latent_dim=latent_dim)\nif not obj.load():\n    obj.generateData()\n    obj.compile()\n    obj.fit(100)\n    obj.save()\n```\n\nWhere `d` is the number of dimensions, `m` the number of samples (2^`m`) per DOE, `n` the number of functions generated and `latent_dim` the size of the output encoding vector.\n\nOnce a data set and encoder has been trained it can be loaded with the `load()` function.\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8195983418675612,
      "result": {
        "original_header": "Load a model from the HuggingFace Hub",
        "type": "Text_excerpt",
        "value": "Example code of loading a huggingface model\n```python\nobj = doe_model(\n            2,\n            8,\n            n= 50000,\n            latent_dim=16,\n            kl_weight=0.001,\n            use_mlflow=False,\n            model_type=\"VAE\"\n        )\nobj.load_from_huggingface()\n#test the model\nobj.plot_label_clusters_bbob()\n```\n \n \n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nikivanstein/doe2vec/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Bas van Stein\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/docs/logo.png"
      },
      "source": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "doe2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "nikivanstein"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 153846,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 9657,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 22,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Basvanstein/doe2vec/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nikivanstein",
          "type": "User"
        },
        "date_created": "2022-09-02T10:06:32Z",
        "date_published": "2023-03-31T07:57:44Z",
        "html_url": "https://github.com/nikivanstein/doe2vec/releases/tag/v1.0.0",
        "name": "v1.0.0 GECCO release",
        "release_id": 97597211,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/nikivanstein/doe2vec/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nikivanstein/doe2vec/releases/97597211",
        "value": "https://api.github.com/repos/nikivanstein/doe2vec/releases/97597211",
        "zipball_url": "https://api.github.com/repos/nikivanstein/doe2vec/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nikivanstein",
          "type": "User"
        },
        "date_created": "2022-09-02T10:06:32Z",
        "date_published": "2022-09-02T10:40:27Z",
        "html_url": "https://github.com/nikivanstein/doe2vec/releases/tag/v0.8.0",
        "name": "General public release",
        "release_id": 76135476,
        "tag": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/nikivanstein/doe2vec/tarball/v0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nikivanstein/doe2vec/releases/76135476",
        "value": "https://api.github.com/repos/nikivanstein/doe2vec/releases/76135476",
        "zipball_url": "https://api.github.com/repos/nikivanstein/doe2vec/zipball/v0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nikivanstein",
          "type": "User"
        },
        "date_created": "2022-09-02T10:02:48Z",
        "date_published": "2022-09-02T10:04:12Z",
        "description": "First public release of the doe2vec package.",
        "html_url": "https://github.com/nikivanstein/doe2vec/releases/tag/v0.8.0-beta",
        "name": "Beta release",
        "release_id": 76132685,
        "tag": "v0.8.0-beta",
        "tarball_url": "https://api.github.com/repos/nikivanstein/doe2vec/tarball/v0.8.0-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/nikivanstein/doe2vec/releases/76132685",
        "value": "https://api.github.com/repos/nikivanstein/doe2vec/releases/76132685",
        "zipball_url": "https://api.github.com/repos/nikivanstein/doe2vec/zipball/v0.8.0-beta"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:07:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}