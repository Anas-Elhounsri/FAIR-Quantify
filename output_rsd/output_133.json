{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# YAML 1.2\n---\nauthors:\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Verhoeven\n    given-names: Stefan\n    orcid: \"https://orcid.org/0000-0002-5821-2060\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Drost\n    given-names: Niels\n    orcid: \"https://orcid.org/0000-0001-9795-7981\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Weel\n    given-names: Berend\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Smeets\n    given-names: Stef\n    orcid: \"https://orcid.org/0000-0002-5413-9038\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Kalverla\n    given-names: Peter\n    orcid: \"https://orcid.org/0000-0002-5025-7862\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Alidoost\n    given-names: Fakhereh\n    orcid: \"https://orcid.org/0000-0001-8407-6472\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Vreede\n    given-names: Barbara\n    orcid: \"https://orcid.org/0000-0002-5023-4601\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Schilperoort\n    given-names: Bart\n    orcid: \"https://orcid.org/0000-0003-4487-9822\"\n  -\n    affiliation: \"Delft University of Technology\"\n    family-names: Hut\n    given-names: Rolf\n    orcid: \"https://orcid.org/0000-0002-5697-5697\"\n  -\n    affiliation: \"Delft University of Technology\"\n    family-names: Aerts\n    given-names: Jerom\n    orcid: \"https://orcid.org/0000-0003-0157-4818\"\n  -\n    affiliation: \"Delft University of Technology\"\n    family-names: Haasnoot\n    given-names: David\n    orcid: \"https://orcid.org/0009-0002-4838-8350\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: van Werkhoven\n    given-names: Ben\n    orcid: \"https://orcid.org/0000-0002-7508-3272\"\n    email: \"b.vanwerkhoven@esciencecenter.nl\"\n  -\n    affiliation: \"Delft University of Technology\"\n    family-names: van de Giesen\n    given-names: Nick\n    orcid: \"https://orcid.org/0000-0002-7200-3353\"\ncff-version: \"1.2.0\"\nkeywords:\n  - hydrology\n  - bmi\nlicense: \"Apache-2.0\"\nmessage: \"If you use this software, please cite it using these metadata.\"\nrepository-code: \"https://github.com/eWaterCycle/ewatercycle\"\ntitle: eWaterCycle Python package\nidentifiers:\n  - description: Latest version of software\n    type: doi\n    value: \"10.5281/zenodo.5119389\"\n...\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our\nproject and our community a harassment-free experience for everyone,\nregardless of age, body size, disability, ethnicity, gender identity and\nexpression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n- Using welcoming and inclusive language\n- Being respectful of differing viewpoints and experiences\n- Gracefully accepting constructive criticism\n- Focusing on what is best for the community\n- Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery and unwelcome sexual\n    attention or advances\n- Trolling, insulting/derogatory comments, and personal or political\n    attacks\n- Public or private harassment\n- Publishing others\\' private information, such as a physical or\n    electronic address, without explicit permission\n- Other conduct which could reasonably be considered inappropriate in\n    a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of\nacceptable behavior and are expected to take appropriate and fair\ncorrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit,\nor reject comments, commits, code, wiki edits, issues, and other\ncontributions that are not aligned to this Code of Conduct, or to ban\ntemporarily or permanently any contributor for other behaviors that they\ndeem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public\nspaces when an individual is representing the project or its community.\nExamples of representing a project or community include using an\nofficial project e-mail address, posting via an official social media\naccount, or acting as an appointed representative at an online or\noffline event. Representation of a project may be further defined and\nclarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may\nbe reported by contacting the project team at\n<s.verhoeven@esciencecenter.nl>. All complaints will be reviewed and\ninvestigated and will result in a response that is deemed necessary and\nappropriate to the circumstances. The project team is obligated to\nmaintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted\nseparately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in\ngood faith may face temporary or permanent repercussions as determined\nby other members of the project\\'s leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor\nCovenant](https://www.contributor-covenant.org), version 1.4, available\nat\n<https://www.contributor-covenant.org/version/1/4/code-of-conduct.html>\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eWaterCycle/ewatercycle"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing guidelines\n\nWe welcome any kind of contributions to our software, from simple\ncomment or question to a full fledged [pull\nrequest](https://help.github.com/articles/about-pull-requests/). Please\nread and follow our [Code of Conduct](CODE_OF_CONDUCT.md).\n\nA contribution can be one of the following cases:\n\n1. you have a question;\n2. you think you may have found a bug (including unexpected behavior);\n3. you want to make some kind of change to the code base (e.g. to fix a\n    bug, to add a new feature, to update documentation).\n4. you want to make a release\n\nThe sections below outline the steps in each case.\n\n## You have a question\n\n1. use the search functionality\n    [here](https://github.com/eWaterCycle/ewatercycle/issues) to see if\n    someone already filed the same issue;\n2. if your issue search did not yield any relevant results, make a new\n    issue;\n3. apply the \\\"Question\\\" label; apply other labels when relevant.\n\n## You think you may have found a bug\n\n1. use the search functionality\n    [here](https://github.com/eWaterCycle/ewatercycle/issues) to see if\n    someone already filed the same issue;\n2. if your issue search did not yield any relevant results, make a new\n    issue, making sure to provide enough information to the rest of the\n    community to understand the cause and context of the problem.\n    Depending on the issue, you may want to include: - the [SHA\n    hashcode](https://help.github.com/articles/autolinked-references-and-urls/#commit-shas)\n    of the commit that is causing your problem; - some identifying\n    information (name and version number) for dependencies you\\'re\n    using; - information about the operating system;\n3. apply relevant labels to the newly created issue.\n\n## You want to make some kind of change to the code base\n\n1. (**important**) announce your plan to the rest of the community\n    *before you start working*. This announcement should be in the form\n    of a (new) issue;\n1. (**important**) wait until some kind of consensus is reached about\n    your idea being a good idea;\n1. if needed, fork the repository to your own Github profile and create\n    your own feature branch off of the latest main commit. While working\n    on your feature branch, make sure to stay up to date with the main\n    branch by pulling in changes, possibly from the \\'upstream\\'\n    repository (follow the instructions\n    [here](https://help.github.com/articles/configuring-a-remote-for-a-fork/)\n    and [here](https://help.github.com/articles/syncing-a-fork/));\n1. If you are using [Visual Studio Code](https://code.visualstudio.com), some extensions will be recommended and you are offered to run inside a [DevContainer](https://containers.dev) in which the dependencies are already installed;\n1. install package main and dev dependencies in a conda environment with\n    `conda-lock install -n ewatercycle` and activate it with `conda activate ewatercycle`;\n1. install the package in editable mode with\n    `pip3 install -e .`;\n1. make sure pre commit hook is installed by running `pre-commit install`, causes linting and formatting to be applied during commit;\n1. make sure types are correct by running ``mypy``.\n1. make sure the existing tests still work by running `pytest`;\n1. make sure the existing documentation can still by generated without\n    warnings by running `cd docs && make html`. [Pandoc](https://pandoc.org/) is required to generate docs, it can be installed with ``conda install -c conda-forge pandoc`` ;\n1. add your own tests (if necessary);\n1. update or expand the documentation; Please add [Google Style Python\n    docstrings](https://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings).\n1. [push](http://rogerdudler.github.io/git-guide/) your feature branch\n    to (your fork of) the ewatercycle repository on GitHub;\n1. create the pull request, e.g. following the instructions\n    [here](https://help.github.com/articles/creating-a-pull-request/).\n\nIn case you feel like you\\'ve made a valuable contribution, but you\ndon\\'t know how to write or run tests for it, or how to generate the\ndocumentation: don\\'t let this discourage you from making the pull\nrequest; we can help you! Just go ahead and submit the pull request, but\nkeep in mind that you might be asked to append additional commits to\nyour pull request.\n\n## You want to make a release\n\nThis section is for maintainers of the package.\n\n1. Checkout ``HEAD`` of ``main`` branch with ``git checkout main`` and ``git pull``.\n1. Determine what new version (major, minor or patch) to use. Package uses `semantic versioning <https://semver.org>`_.\n1. Because main branch is protected, you need to create a new branch with ``git checkout -b release-<version>``.\n1. If dependencies have changed then create a new [conda lock](https://conda.github.io/conda-lock/) file with ``conda-lock lock -f pyproject.toml``.\n1. Set new version in ``pyproject.toml`` file in project section.\n1. Update CHANGELOG.md with changes between current and new version. (Don't forget to also update the links at the bottom of the file)\n1. Make sure pre-commit hooks are green for all files by running ``pre-commit run --all-files``.\n1. Make sure types are correct by running ``mypy``.\n1. Make sure all tests passed by running ``pytest``.\n1. Commit & push changes to GitHub.\n1. Create a pull request, review it, wait for actions to be green and merge the pull request.\n1. Wait for [GitHub\n    actions](https://github.com/eWaterCycle/ewatercycle/actions?query=branch%3Amain+)\n    on main branch to be completed and green.\n1. Create a [GitHub release](https://github.com/eWaterCycle/ewatercycle/releases/new)\n\n    - Use version as title and tag version.\n    - As description use intro text from README.md (to give context to\n        Zenodo record) and changes from CHANGELOG.md\n\n1. Verify\n\n    1. Has [new Zenodo\n        record](https://zenodo.org/search?page=1&size=20&q=ewatercycle)\n        been created?\n    1. Has [stable\n        ReadTheDocs](https://ewatercycle.readthedocs.io/en/stable/) been\n        updated?\n    1. Has the [Github publish action](https://github.com/eWaterCycle/ewatercycle/actions/workflows/python-publish.yml)\n        successfully uploaded the archives to [PyPI](https://pypi.org/project/ewatercycle/)?\n    1. Can new version be installed with pip using\n        `pip3 install ewatercycle==<new version>`?\n\n1. Celebrate\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "ewatercycle"
        ],
        "type": "Text_excerpt",
        "value": "If you want to contribute to the development of ewatercycle package,\nhave a look at the [contribution guidelines](CONTRIBUTING.md).\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-08-29T15:47:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-17T09:25:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python package for running hydrological models"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9815726006719552,
      "result": {
        "original_header": "ewatercycle",
        "type": "Text_excerpt",
        "value": "- Uses container for running models in an isolated and portable way\n    with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\n- Generates rain and sunshine required for the model using\n    [ESMValTool](https://www.esmvaltool.org/)\n- Supports observation data from [GRDC or\n    USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\n- Exposes [simple\n    interface](https://ewatercycle.readthedocs.io/en/latest/user_guide.html)\n    to quickly get up and running\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://ewatercycle.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eWaterCycle/ewatercycle/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/docs/user_guide/03_models_obs_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/docs/user_guide/03_models_obs_analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/docs/user_guide/01_parameter_sets.ipynb"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/docs/user_guide/01_parameter_sets.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/docs/user_guide/00_intro.ipynb"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/docs/user_guide/00_intro.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/docs/user_guide/02_forcing.ipynb"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/docs/user_guide/02_forcing.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "eWaterCycle/ewatercycle"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ewatercycle"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/.devcontainer/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/.devcontainer/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "ewatercycle"
        ],
        "type": "Text_excerpt",
        "value": "The ewatercycle package needs some geospatial non-python packages to\ngenerate forcing data. It is preferred to create a Conda environment to\ninstall those dependencies:\n\n```shell\ncurl -o conda-lock.yml https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/conda-lock.yml\nconda install mamba conda-lock -n base -c conda-forge -y\nconda-lock install --no-dev -n ewatercycle\nconda activate ewatercycle\n```\n\nThe ewatercycle package is installed with\n\n```shell\npip install ewatercycle\n```\n\nThe ewatercycle package ships without any models. Models are packaged in [plugins](https://ewatercycle.readthedocs.io/en/latest/plugins.html). To install all endorsed plugins use\n\n```shell\npip install ewatercycle-hype ewatercycle-lisflood ewatercycle-marrmot ewatercycle-pcrglobwb ewatercycle-wflow ewatercycle-leakybucket\n```\n\nBesides installing software you will need to create a configuration\nfile, download several data sets and get container images. See the\n[system setup\nchapter](https://ewatercycle.readthedocs.org/en/latest/system_setup.html)\nfor instructions.\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.912355949468615,
      "result": {
        "original_header": "ewatercycle",
        "type": "Text_excerpt",
        "value": "A Python package for running hydrological models. \nThe eWaterCycle package makes it easier to use hydrological models\nwithout having intimate knowledge about how to install and run the\nmodels. \n- Uses container for running models in an isolated and portable way\n    with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\n- Generates rain and sunshine required for the model using\n    [ESMValTool](https://www.esmvaltool.org/)\n- Supports observation data from [GRDC or\n    USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\n- Exposes [simple\n    interface](https://ewatercycle.readthedocs.io/en/latest/user_guide.html)\n    to quickly get up and running\n \n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "ewatercycle"
        ],
        "type": "Text_excerpt",
        "value": "Copyright (c) 2018 - 2024, Netherlands eScience Center & Delft University of\nTechnology\n\nApache Software License 2.0\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eWaterCycle/ewatercycle/raw/main/docs/examples/logo.png"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ewatercycle"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "eWaterCycle"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/ewatercycle/"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 279276,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 863,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BSchilperoort",
          "type": "User"
        },
        "date_created": "2024-09-17T09:25:50Z",
        "date_published": "2024-09-17T09:31:07Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models without having intimate knowledge about how to install and run the models.\r\n\r\n- Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n- Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n- Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n- Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/user_guide.html) to quickly get up and running\r\n\r\n## Fixed\r\n\r\n- all required shapefile files (`.shp`, `.shx`, `.dbf`, `.prj`) are now copied to the new directory when saving a forcing object ([#430](https://github.com/eWaterCycle/ewatercycle/issues/430)).",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/v2.3.1",
        "name": "2.3.1",
        "release_id": 175411053,
        "tag": "v2.3.1",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/v2.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/175411053",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/175411053",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/v2.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2024-08-29T12:47:00Z",
        "date_published": "2024-08-29T12:49:00Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models without having intimate knowledge about how to install and run the models.\r\n\r\nUses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\nGenerates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\nSupports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/user_guide/03_models_obs_analysis.html#Observations)\r\nExposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/user_guide/03_models_obs_analysis.html) to quickly get up and running\r\n\r\n## Changed\r\n\r\n- Use [conda-lock](https://conda.github.io/conda-lock/) to install reproducible conda dependencies. Instead of loosely pinned environment.yml ([#357](https://github.com/eWaterCycle/ewatercycle/issues/357))\r\n- ESMValTool is no longer a Python dependency, but a conda dependency ([#442](https://github.com/eWaterCycle/ewatercycle/pull/442))\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/2.3.0",
        "name": "2.3.0",
        "release_id": 172554757,
        "tag": "2.3.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/2.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/172554757",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/172554757",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/2.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2024-07-08T09:39:49Z",
        "date_published": "2024-07-08T09:45:12Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models without having intimate knowledge about how to install and run the models.\r\n\r\nUses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\nGenerates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\nSupports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/user_guide/03_models_obs_analysis.html#Observations)\r\nExposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/user_guide/03_models_obs_analysis.html) to quickly get up and running\r\n\r\n### Added\r\n- `ewatercycle.esmvaltool.search.search_esgf` can now be used to find climate model ensembles on ESGF that have the required input variables for generating forcing data ([#422](https://github.com/eWaterCycle/ewatercycle/pull/422)).\r\n- `ewatercycle.observation.caravan.get_caravan_data()` ([#432](https://github.com/eWaterCycle/ewatercycle/issues/432))\r\n\r\n### Fixed\r\n\r\n- `get_usgs_data()` throws error ([#414](https://github.com/eWaterCycle/ewatercycle/issues/414))\r\n- `get_usgs_data()` and `get_grdc_data()` both return xarray.Dataset ([#253](https://github.com/eWaterCycle/ewatercycle/issues/253))\r\n\r\n### Removed\r\n\r\n- Caching mechanism from `get_usgs_data()` ([#240](https://github.com/eWaterCycle/ewatercycle/issues/240))\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/2.2.0",
        "name": "2.2.0",
        "release_id": 164372704,
        "tag": "2.2.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/2.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/164372704",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/164372704",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/2.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BSchilperoort",
          "type": "User"
        },
        "date_created": "2024-06-03T08:00:05Z",
        "date_published": "2024-06-03T08:03:29Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models without having intimate knowledge about how to install and run the models.\r\n\r\n- Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n- Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n- Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/user_guide/03_models_obs_analysis.html#Observations)\r\n- Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/user_guide/03_models_obs_analysis.html) to quickly get up and running\r\n\r\n### Added\r\n- `input_var_names` property to the eWaterCycle model class, to accompany the existing `output_var_names` property ([#403](https://github.com/eWaterCycle/ewatercycle/pull/403)).\r\n- `var_units` method to the eWaterCycle model class, to mirror PyMT ([#403](https://github.com/eWaterCycle/ewatercycle/pull/403)).\r\n- A note on the time units that eWaterCycle expects models to provide to the documentation ([#403](https://github.com/eWaterCycle/ewatercycle/pull/403)).\r\n- CaravanForcing, which allows for the retrieval of single basins from the [Caravan](https://zenodo.org/records/7944025) dataset, rather than downloading the whole dataset ([#407](https://github.com/eWaterCycle/ewatercycle/pull/407)).\r\n\r\n### Changed\r\n- If a model plugin raises an exception during the loading of the model entry points, a more clear exception is raised which guides the users on how to solve the error ([#404](https://github.com/eWaterCycle/ewatercycle/pull/404)).\r\n- Updated the model documentation to link to the eWaterCycleModel API docs, and to make it a bit more clear that it is build on top of BMI ([#403](https://github.com/eWaterCycle/ewatercycle/pull/403)).\r\n- Dask has been explicitly added to the ewatercycle package dependencies. The package already depended on it through ESMValTool ([#410](https://github.com/eWaterCycle/ewatercycle/pull/410)).\r\n\r\n### Fixed\r\n- An issue related to the `.to_xarray()` method of the generic forcing classes. This method should now be more robust ([#410](https://github.com/eWaterCycle/ewatercycle/pull/410)).\r\n- An issue related to saving netCDF files generated by caravan forcing. Only copies relevant attributes to the seperate files generated. ([#416](https://github.com/eWaterCycle/ewatercycle/pull/416))\r\n\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/2.1.1",
        "name": "2.1.1",
        "release_id": 158559167,
        "tag": "2.1.1",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/2.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/158559167",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/158559167",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/2.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BSchilperoort",
          "type": "User"
        },
        "date_created": "2024-03-25T12:43:42Z",
        "date_published": "2024-03-25T12:47:32Z",
        "description": "This release comes with some changes to the (generic) generation of forcing data. It is now easier to define your own forcing generator. MakkinkForcings (distributed & lumped) have been added which allow for forcing generation with potential evaporation (from both ERA5 and CMIP datasets).\r\n\r\n**Added**\r\n\r\n- Added new forcing classes ([#393](https://github.com/eWaterCycle/ewatercycle/pull/393)):\r\n  - LumpedUserForcing, DistributedUserForcing - have the variable names as an argument, as well as an optional post-processor that can derive addition variables from the downloaded data.\r\n  - LumpedMakkinkForcing, DistributedMakkinkForcing - based on the UserForcing: selects the required variables and computes the Makkink potential evaporation.\r\n- The available models are now stored in `ewatercycle.models.sources`, just like the different forcing sources ([#393](https://github.com/eWaterCycle/ewatercycle/pull/393)).\r\n\r\n**Changed**\r\n\r\n- Internal changes to DefaultForcing: variables are no longer attributes of the class, but are stored under a \"filenames\" (dict) attribute ([#393](https://github.com/eWaterCycle/ewatercycle/pull/393)).\r\n- Updated the documentation to reflect the changes in the forcing generation ([#393](https://github.com/eWaterCycle/ewatercycle/pull/393)).\r\n- Shapefiles used for generating forcing are now always copied to the output folder, to allow determination of the area to convert mm water depth to m^3 of discharge. ([#393](https://github.com/eWaterCycle/ewatercycle/pull/393)).\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/2.1.0",
        "name": "2.1.0",
        "release_id": 148211794,
        "tag": "2.1.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/148211794",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/148211794",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2023-10-10T08:12:52Z",
        "date_published": "2023-10-10T08:14:20Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n- Uses container for running models in an isolated and portable way\r\n    with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n- Generates rain and sunshine required for the model using\r\n    [ESMValTool](https://www.esmvaltool.org/)\r\n- Supports observation data from [GRDC or\r\n    USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n- Exposes [simple\r\n    interface](https://ewatercycle.readthedocs.io/en/latest/user_guide.html)\r\n    to quickly get up and running\r\n\r\n### Breaking changes\r\n\r\nThe eWatercycle package no longer contains models and their forcing and/or example parameter sets. Instead, models are now plugins that can be installed separately. See https://ewatercycle.readthedocs.io/en/latest/plugins.html for a list of endorsed plugins.\r\n\r\n### Added\r\n\r\n- Apptainer support ([#290](https://github.com/eWaterCycle/ewatercycle/issues/290))\r\n- Forcing ((#365)[https://github.com/eWaterCycle/ewatercycle/pull/365]):\r\n  - GenericDistributedForcing class\r\n  - GenericLumpedForcing class\r\n  - Generate from not just ERA5 or ERA-Interim dataset, but any ESMvalTool supported dataset\r\n- Testing helpers for plugins ((#365)[https://github.com/eWaterCycle/ewatercycle/pull/365])\r\n\r\n### Changed\r\n\r\n- Upgraded BMI version from 0.2 to 2.0 ([#339](https://github.com/eWaterCycle/ewatercycle/pull/339))\r\n    - Model container images using BMI v0.2 are supported see [grpc4bmi docs](https://grpc4bmi.readthedocs.io/en/latest/server/python.html#legacy-version).\r\n- ewatercycle config, forcings and parameter sets now use Pydantic for validation instead of Matplotlib inspired validation. ([#332](https://github.com/eWaterCycle/ewatercycle/issues/332), [#334](https://github.com/eWaterCycle/ewatercycle/pull/334), [#346](https://github.com/eWaterCycle/ewatercycle/pull/346))\r\n- Functions of a model inside a container that return the same result each call are cached with [MemoizedBmi](https://grpc4bmi.readthedocs.io/en/latest/api/grpc4bmi.bmi_memoized.html#grpc4bmi.bmi_memoized.MemoizedBmi) ([#339](https://github.com/eWaterCycle/ewatercycle/pull/339))\r\n- Moved CaseConfig to src/utils.py\r\n- forcing.load_foreign has been superceded by using sources.model(...)\r\n- Forcing ((#365)[https://github.com/eWaterCycle/ewatercycle/pull/365]):\r\n  - Instead of modifying an existing recipe now builds a ESMValTool recipe from scratch using a fluent interface\r\n  - DefaultForcing has overridable class methods for each step of the forcing generation process (build_recipe, run_recipe, recipe_output_to_forcing_arguments).\r\n- eWaterCycleModel.parameters property type is ItemsView instead of dict.\r\n- Rewrote adding models documentation to use the new plugin system ([#383](https://github.com/eWaterCycle/ewatercycle/pull/383)\r\n\r\n### Deprecated\r\n\r\n- Singularity support ([#290](https://github.com/eWaterCycle/ewatercycle/issues/290))\r\n\r\n### Removed\r\n\r\n- Models live in their own repository as a eWatercycle plugin. ([#371](https://github.com/eWaterCycle/ewatercycle/issues/371))\r\n- Removed parametersetdb module. XmlConfig moved to lisflood plugin. YamlConfig & IniConfig have been removed.\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/2.0.0",
        "name": "2.0.0",
        "release_id": 124380160,
        "tag": "2.0.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/124380160",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/124380160",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2023-10-06T07:58:52Z",
        "date_published": "2023-10-06T08:00:02Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n### Breaking changes\r\n\r\nThe eWatercycle package no longer contains models and their forcing and/or example parameter sets. Instead, models are now plugins that can be installed separately. See https://ewatercycle.readthedocs.io/en/latest/plugins.html for a list of endorsed plugins.\r\n\r\n### Added\r\n\r\n- Apptainer support ([#290](https://github.com/eWaterCycle/ewatercycle/issues/290))\r\n- Forcing ((#365)[https://github.com/eWaterCycle/ewatercycle/pull/365]):\r\n  - GenericDistributedForcing class\r\n  - GenericLumpedForcing class\r\n  - Generate from not just ERA5 or ERA-Interim dataset, but any ESMvalTool supported dataset\r\n- Testing helpers for plugins ((#365)[https://github.com/eWaterCycle/ewatercycle/pull/365])\r\n\r\n### Changed\r\n\r\n- Upgraded BMI version from 0.2 to 2.0 ([#339](https://github.com/eWaterCycle/ewatercycle/pull/339))\r\n    - Model container images using BMI v0.2 are supported see [grpc4bmi docs](https://grpc4bmi.readthedocs.io/en/latest/server/python.html#legacy-version).\r\n- ewatercycle config, forcings and parameter sets now use Pydantic for validation instead of Matplotlib inspired validation. ([#332](https://github.com/eWaterCycle/ewatercycle/issues/332), [#334](https://github.com/eWaterCycle/ewatercycle/pull/334), [#346](https://github.com/eWaterCycle/ewatercycle/pull/346))\r\n- Functions of a model inside a container that return the same result each call are cached with [MemoizedBmi](https://grpc4bmi.readthedocs.io/en/latest/api/grpc4bmi.bmi_memoized.html#grpc4bmi.bmi_memoized.MemoizedBmi) ([#339](https://github.com/eWaterCycle/ewatercycle/pull/339))\r\n- Moved CaseConfig to src/utils.py\r\n- forcing.load_foreign has been superceded by using sources.model(...)\r\n- Forcing ((#365)[https://github.com/eWaterCycle/ewatercycle/pull/365]):\r\n  - Instead of modifying an existing recipe now builds a ESMValTool recipe from scratch using a fluent interface\r\n  - DefaultForcing has overridable class methods for each step of the forcing generation process (build_recipe, run_recipe, recipe_output_to_forcing_arguments).\r\n- eWaterCycleModel.parameters property type is ItemsView instead of dict.\r\n\r\n### Deprecated\r\n\r\n- Singularity support ([#290](https://github.com/eWaterCycle/ewatercycle/issues/290))\r\n\r\n### Removed\r\n\r\n- Models live in their own repository as a eWatercycle plugin. ([#371](https://github.com/eWaterCycle/ewatercycle/issues/371))\r\n- Removed parametersetdb module. XmlConfig moved to lisflood plugin. YamlConfig & IniConfig have been removed.",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/2.0.0b2",
        "name": "2.0.0b2",
        "release_id": 123993120,
        "tag": "2.0.0b2",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/2.0.0b2",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/123993120",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/123993120",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/2.0.0b2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2023-10-05T08:01:48Z",
        "date_published": "2023-10-06T07:53:02Z",
        "description": "# Oops forgot to select branch for release. Do not use this release!\r\n\r\nThe eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n### Breaking changes\r\n\r\nThe eWatercycle package no longer contains models and their forcing and/or example parameter sets. Instead, models are now plugins that can be installed separately. See https://ewatercycle.readthedocs.io/en/latest/plugins.html for a list of endorsed plugins.\r\n\r\n### Added\r\n\r\n- Apptainer support ([#290](https://github.com/eWaterCycle/ewatercycle/issues/290))\r\n- Forcing ((#365)[https://github.com/eWaterCycle/ewatercycle/pull/365]):\r\n  - GenericDistributedForcing class\r\n  - GenericLumpedForcing class\r\n  - Generate from not just ERA5 or ERA-Interim dataset, but any ESMvalTool supported dataset\r\n- Testing helpers for plugins ((#365)[https://github.com/eWaterCycle/ewatercycle/pull/365])\r\n\r\n### Changed\r\n\r\n- Upgraded BMI version from 0.2 to 2.0 ([#339](https://github.com/eWaterCycle/ewatercycle/pull/339))\r\n    - Model container images using BMI v0.2 are supported see [grpc4bmi docs](https://grpc4bmi.readthedocs.io/en/latest/server/python.html#legacy-version).\r\n- ewatercycle config, forcings and parameter sets now use Pydantic for validation instead of Matplotlib inspired validation. ([#332](https://github.com/eWaterCycle/ewatercycle/issues/332), [#334](https://github.com/eWaterCycle/ewatercycle/pull/334), [#346](https://github.com/eWaterCycle/ewatercycle/pull/346))\r\n- Functions of a model inside a container that return the same result each call are cached with [MemoizedBmi](https://grpc4bmi.readthedocs.io/en/latest/api/grpc4bmi.bmi_memoized.html#grpc4bmi.bmi_memoized.MemoizedBmi) ([#339](https://github.com/eWaterCycle/ewatercycle/pull/339))\r\n- Moved CaseConfig to src/utils.py\r\n- forcing.load_foreign has been superceded by using sources.model(...)\r\n- Forcing ((#365)[https://github.com/eWaterCycle/ewatercycle/pull/365]):\r\n  - Instead of modifying an existing recipe now builds a ESMValTool recipe from scratch using a fluent interface\r\n  - DefaultForcing has overridable class methods for each step of the forcing generation process (build_recipe, run_recipe, recipe_output_to_forcing_arguments).\r\n- eWaterCycleModel.parameters property type is ItemsView instead of dict.\r\n\r\n### Deprecated\r\n\r\n- Singularity support ([#290](https://github.com/eWaterCycle/ewatercycle/issues/290))\r\n\r\n### Removed\r\n\r\n- Models live in their own repository as a eWatercycle plugin. ([#371](https://github.com/eWaterCycle/ewatercycle/issues/371))\r\n- Removed parametersetdb module. XmlConfig moved to lisflood plugin. YamlConfig & IniConfig have been removed.",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/2.0.0b1",
        "name": "2.0.0b1",
        "release_id": 123992438,
        "tag": "2.0.0b1",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/2.0.0b1",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/123992438",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/123992438",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/2.0.0b1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BSchilperoort",
          "type": "User"
        },
        "date_created": "2022-12-20T13:20:45Z",
        "date_published": "2022-12-20T13:22:57Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n### Fixed\r\n\r\n- PEP 484 prohibits implicit Optional ([#325](https://github.com/eWaterCycle/ewatercycle/pull/325))\r\n- Update of ESMValCore breaks recipes tests ([#325](https://github.com/eWaterCycle/ewatercycle/issues/325))\r\n- Pre-commit hook for flake8 from GitHub instead of GitLab ([#325](https://github.com/eWaterCycle/ewatercycle/pull/325))\r\n- Update of ESMValCore breaks Marrmot forcing generation ([#322](https://github.com/eWaterCycle/ewatercycle/pull/322))\r\n- Forcing generation for Wflow has been fixed ([#321](https://github.com/eWaterCycle/ewatercycle/pull/321))\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/1.4.1",
        "name": "1.4.1",
        "release_id": 86650936,
        "tag": "1.4.1",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/1.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/86650936",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/86650936",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/1.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2022-06-20T09:45:26Z",
        "date_published": "2022-06-20T10:13:14Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n### Added\r\n\r\n- delay argument to `ewatercycle.models.Marrmot*.setup()_ ([#303](https://github.com/eWaterCycle/ewatercycle/issues/303))\r\n- Hype forcing generation and model [#308](https://github.com/eWaterCycle/ewatercycle/pull/308)\r\n\r\n### Removed\r\n\r\n- Python 3.7 support\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/1.4.0",
        "name": "1.4.0",
        "release_id": 69832729,
        "tag": "1.4.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/69832729",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/69832729",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/1.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2022-04-20T08:35:52Z",
        "date_published": "2022-04-20T08:46:08Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n### Added\r\n\r\n- Directory argument to `ewatercycle.forcing.generate()` ([#145](https://github.com/eWaterCycle/ewatercycle/issues/145))\r\n\r\n### Changed\r\n\r\n- Improved performance of forcing generation of LISFLOOD model ([#301](https://github.com/eWaterCycle/ewatercycle/pull/301))",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/1.3.0",
        "name": "1.3.0",
        "release_id": 64820079,
        "tag": "1.3.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/64820079",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/64820079",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2022-03-28T09:48:51Z",
        "date_published": "2022-03-28T10:00:07Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n### Added\r\n\r\n- Evaporation Pre-Processor for the LISFLOOD (Lisvap) to forcing ([#282](https://github.com/eWaterCycle/ewatercycle/issues/282))\r\n- Set number of bars in hydrograph ([#298](https://github.com/eWaterCycle/ewatercycle/pull/298))\r\n\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/1.2.0",
        "name": "1.2.0",
        "release_id": 62906923,
        "tag": "1.2.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/62906923",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/62906923",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2022-01-14T09:33:29Z",
        "date_published": "2022-01-14T09:43:16Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n### Added\r\n\r\n- 2020.1.3 version of wflow model ([#270](https://github.com/eWaterCycle/ewatercycle/issues/270))\r\n\r\n### Changed\r\n\r\n- Replace Cartesius section in system setup docs with Snellius ([#273](https://github.com/eWaterCycle/ewatercycle/issues/273))\r\n\r\n### Fixed\r\n\r\n- Test suite fails with fresh conda env ([#275](https://github.com/eWaterCycle/ewatercycle/issues/275))\r\n- incompatible numpy typings ([#285](https://github.com/eWaterCycle/ewatercycle/issues/285))\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/1.1.4",
        "name": "1.1.4",
        "release_id": 57101019,
        "tag": "1.1.4",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/1.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/57101019",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/57101019",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/1.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2021-10-18T07:12:23Z",
        "date_published": "2021-10-18T07:23:17Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n### Added\r\n\r\n- 2020.1.2 version of wflow model ([#268](https://github.com/eWaterCycle/ewatercycle/pull/268))\r\n- Document how to add a new version of a model ([#266](https://github.com/eWaterCycle/ewatercycle/pull/266))\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/1.1.3",
        "name": "1.1.3",
        "release_id": 51517451,
        "tag": "1.1.3",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/1.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/51517451",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/51517451",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/1.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2021-09-30T10:33:26Z",
        "date_published": "2021-09-30T10:36:12Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n### Added\r\n\r\n- Type information according to [PEP-0561](https://www.python.org/dev/peps/pep-0561/)\r\n- Pre-commit hooks and black formatting ([#111](https://github.com/eWaterCycle/ewatercycle/issues/111))\r\n\r\n### Changed\r\n\r\n- Timeout for model setup set to 5 minutes ([#244](https://github.com/eWaterCycle/ewatercycle/issues/244))\r\n- Use mamba for installation instructions ([#136](https://github.com/eWaterCycle/ewatercycle/issues/136))\r\n- Use [version 1.2.0](https://github.com/citation-file-format/citation-file-format/releases/tag/1.2.0) of CITATION.cff format\r\n- Moved package to src/ ([#228](https://github.com/eWaterCycle/ewatercycle/issues/228))\r\n\r\n### Fixed\r\n\r\n- Name particle in CITATION.cff ([#204](https://github.com/eWaterCycle/ewatercycle/issues/204))\r\n- Build Sphinx locally with config file ([#169](https://github.com/eWaterCycle/ewatercycle/issues/169))\r\n- Type errors in notebooks ([#262](https://github.com/eWaterCycle/ewatercycle/issues/262))\r\n- Lisflood.finalize() ([#257](https://github.com/eWaterCycle/ewatercycle/issues/257))\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/1.1.2",
        "name": "1.1.2",
        "release_id": 50539504,
        "tag": "1.1.2",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/50539504",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/50539504",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2021-08-10T09:29:55Z",
        "date_published": "2021-08-10T09:31:42Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n### Fixed\r\n\r\n- Zenodo DOI\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/1.1.1",
        "name": "1.1.1",
        "release_id": 47591105,
        "tag": "1.1.1",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/47591105",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/47591105",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sverhoeven",
          "type": "User"
        },
        "date_created": "2021-08-10T09:04:35Z",
        "date_published": "2021-08-10T09:06:50Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n### Added\r\n\r\n- Column name argument to `get_grdc_data()` ([#190](https://github.com/eWaterCycle/ewatercycle/issues/190))\r\n- Copy to clipboard button to documentation ([#216](https://github.com/eWaterCycle/ewatercycle/issues/216))\r\n\r\n### Changed\r\n\r\n- Compatible with ESMValTool 2.3 . Older versions (<2.3) of ESMValTool are no longer supported. ([#219](https://github.com/eWaterCycle/ewatercycle/issues/219))\r\n- README, CONTRIBUTING, CHANGELOG reformated from RestructedText to Markdown ([#199](https://github.com/eWaterCycle/ewatercycle/issues/199))\r\n\r\n### Fixed\r\n\r\n- ParameterSet can be outside CFG['parametersets_dir'] ([#217](https://github.com/eWaterCycle/ewatercycle/issues/217))\r\n- Link to nbviewer ([#202](https://github.com/eWaterCycle/ewatercycle/issues/202))\r\n- Pinned esmpy as temporary workaround for single CPU affinity ([#234](https://github.com/eWaterCycle/ewatercycle/issues/234))\r\n\r\n### Removed\r\n\r\n- Unused esmvaltool_config field in CFG ([#152](https://github.com/eWaterCycle/ewatercycle/issues/152))\r\n",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/1.1.0",
        "name": "1.1.0",
        "release_id": 47589704,
        "tag": "1.1.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/47589704",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/47589704",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Peter9192",
          "type": "User"
        },
        "date_created": "2021-07-21T13:40:35Z",
        "date_published": "2021-07-21T13:47:29Z",
        "description": "The eWaterCycle package makes it easier to use hydrological models\r\nwithout having intimate knowledge about how to install and run the\r\nmodels.\r\n\r\n-   Uses container for running models in an isolated and portable way with [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Generates rain and sunshine required for the model using [ESMValTool](https://www.esmvaltool.org/)\r\n-   Supports observation data from [GRDC or USGS](https://ewatercycle.readthedocs.io/en/latest/observations.html)\r\n-   Exposes [simple interface](https://ewatercycle.readthedocs.io/en/latest/examples/ewatercycle_api_notebook.html) to quickly get up and running\r\n\r\n## Added\r\n\r\n-   Documentation\r\n    -   Example notebooks\r\n    -   Setup guide ([\\#120](https://github.com/eWaterCycle/ewatercycle/issues/120))\r\n    -   HPC cluster guide\r\n-   Forcing generation using [ESMValTool](https://www.esmvaltool.org/) ([\\#28](https://github.com/eWaterCycle/ewatercycle/issues/28), [\\#87](https://github.com/eWaterCycle/ewatercycle/issues/87))\r\n-   Available parameter sets ([\\#118](https://github.com/eWaterCycle/ewatercycle/issues/118))\r\n-   [PyMT](https://pymt.readthedocs.io/) inspired interface for following models\r\n    -   LISFLOOD\r\n    -   MARRMoT M01 and M14\r\n    -   PCR-GLOBWB\r\n    -   wflow\r\n-   Model methods to get and set values based on spatial coordinates ([\\#53](https://github.com/eWaterCycle/ewatercycle/issues/53), [\\#140](https://github.com/eWaterCycle/ewatercycle/issues/140))\r\n-   Model method to get value as a xarray dataset ([\\#36](https://github.com/eWaterCycle/ewatercycle/issues/36))\r\n-   Containerized models using [grpc4bmi](https://github.com/eWaterCycle/grpc4bmi)\r\n-   Configuration files for system setup\r\n-   Hydrograph plotting ([\\#54](https://github.com/eWaterCycle/ewatercycle/issues/54))\r\n-   Typings\r\n-   iso8601 time format ([\\#90](https://github.com/eWaterCycle/ewatercycle/issues/90))\r\n\r\n## Changed\r\n\r\n-   GRDC returns Pandas dataframe and metadata dict instead of xarray dataset ([\\#109](https://github.com/eWaterCycle/ewatercycle/issues/109))",
        "html_url": "https://github.com/eWaterCycle/ewatercycle/releases/tag/1.0.0",
        "name": "1.0.0",
        "release_id": 46540934,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/46540934",
        "value": "https://api.github.com/repos/eWaterCycle/ewatercycle/releases/46540934",
        "zipball_url": "https://api.github.com/repos/eWaterCycle/ewatercycle/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:20:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 33
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "ewatercycle"
        ],
        "type": "Text_excerpt",
        "value": "Example using the [Marrmot M14\n(TOPMODEL)](https://github.com/wknoben/MARRMoT/blob/master/MARRMoT/Models/Model%20files/m_14_topmodel_7p_2s.m)\nhydrological model on Rhine catchment to generate forcing, run it\nand produce a hydrograph.\n\n<details>\n\n<summary>\nIn condensed code:\n\n```python\nforcing = ewatercycle.forcing.sources['MarrmotForcing'].generate(...)\nmodel = ewatercycle.models.sources['MarrmotM14'](forcing)\nmodel.setup(...)\nmodel.initialize()\nwhile (model.time < model.end_time):\n    model.update()\n    value = model.get_value_as_xarray('flux_out_Q')\nmodel.finalize()\newatercycle.analysis.hydrograph(...)\n```\n\n(Click to see real code)\n</summary>\nIn real code:\n\n```python\nimport ewatercycle.analysis\nimport ewatercycle.forcing\nimport ewatercycle.models\nimport ewatercycle.observation.grdc\nfrom ewatercycle.testing.fixtures import rhine_shape\nimport shapefile\nimport xarray as xr\n\nforcing = ewatercycle.forcing.sources['MarrmotForcing'].generate(\n    dataset='ERA5',\n    start_time='2010-01-01T00:00:00Z',\n    end_time='2010-12-31T00:00:00Z',\n    shape=rhine_shape()\n)\n\nmodel = ewatercycle.models.sources['MarrmotM14'](version='2020.11', forcing=forcing)\n\ncfg_file, cfg_dir = model.setup(\n    threshold_flow_generation_evap_change=0.1,\n)\n\nmodel.initialize(cfg_file)\n\n# flux_out_Q unit conversion factor from mm/day to m3/s\nsf = shapefile.Reader(rhine_shape())\narea = sf.record(0)['SUB_AREA'] * 1e6 # from shapefile in m2\nconversion_mmday2m3s = 1 / (1000 * 24 * 60 * 60)\nconversion = conversion_mmday2m3s * area\n\nsimulated_discharge = []\nwhile (model.time < model.end_time):\n    model.update()\n    simulated_discharge.append(\n        model.get_value_as_xarray('flux_out_Q')\n    )\n\nobservations_ds = ewatercycle.observation.grdc.get_grdc_data(\n    station_id=6335020,  # Rees, Germany\n    start_time=model.start_time_as_isostr,\n    end_time=model.end_time_as_isostr,\n    column='observation',\n)\n\n# Combine the simulated discharge with the observations\nsim_da = xr.concat(simulated_discharge, dim='time') * conversion\nsim_da.name = 'simulated'\ndischarge = xr.merge([sim_da, observations_ds[\"observation\"]]).to_dataframe()\ndischarge = discharge[[\"observation\", \"simulated\"]].dropna()\n\newatercycle.analysis.hydrograph(discharge, reference='observation')\n\nmodel.finalize()\n```\n\n</details>\n\nMore examples can be found in the plugins listed in the\n[documentation](https://ewatercycle.readthedocs.io/en/latest/plugins.html).\n"
      },
      "source": "https://raw.githubusercontent.com/eWaterCycle/ewatercycle/main/README.md",
      "technique": "header_analysis"
    }
  ]
}