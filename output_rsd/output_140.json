{
  "application_domain": [
    {
      "confidence": 61.04,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KBNLresearch/ochre"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-10-19T12:30:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-17T18:46:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Toolbox for OCR post-correction"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9809300350025092,
      "result": {
        "original_header": "Ochre",
        "type": "Text_excerpt",
        "value": "Ochre is a toolbox for OCR post-correction. **Please note that this software is experimental and very much a work in progress!** \n* Overview of OCR post-correction data sets\n* Preprocess data sets\n* Train character-based language models/LSTMs for OCR post-correction\n* Do the post-correction\n* Assess the performance of OCR post-correction\n* Analyze OCR errors \nOchre contains ready-to-use data processing workflows (based on [CWL](http://www.commonwl.org/)). The software also allows you to create your own (OCR post-correction related) workflows. Examples of how to create these can be found in the [notebooks directory](https://github.com/KBNLresearch/ochre/tree/master/notebooks) (to be able to use those, make sure you have [Jupyter Notebooks](http://jupyter.readthedocs.io/en/latest/install.html) installed). This directory also contains notebooks that show how results can be analyzed and visualized.\n \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8486264760199732,
      "result": {
        "original_header": "Preprocessing",
        "type": "Text_excerpt",
        "value": "To create data in these formats, CWL workflows are available.\nFirst run a preprocess workflow to create the `gs` and `ocr` directories containing the expected files.\nNext run an align workflow to create the `align` directory. \n* `align-dir-pack.cwl` to align all files in the `gs` and `ocr` directories\n* `align-test-files-pack.cwl` to align the test files in a data division \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9809583777790519,
      "result": {
        "original_header": "OCR post-correction",
        "type": "Text_excerpt",
        "value": "* Explain merging of predictions\n \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8963416860911028,
      "result": {
        "original_header": "Performance",
        "type": "Text_excerpt",
        "value": "To calculate performance of the OCR (post-correction), the external tool\n[ocrevalUAtion](https://github.com/impactcentre/ocrevalUAtion) is used. More\ninformation about this tool can be found on the\n[website](https://sites.google.com/site/textdigitisation/) and\n[wiki](https://github.com/impactcentre/ocrevalUAtion/wiki). \nBoth of these workflows are stand-alone (packed). The corresponding Jupyter notebook is [ocr-evaluation-workflow.ipynb](https://github.com/KBNLresearch/ochre/blob/master/notebooks/ocr-evaluation-workflow.ipynb). \nTo use the ocrevalUAtion tool in your workflows, you have to add it to the `WorkflowGenerator's` steps\nlibrary:\n```\nwf.load(step_file='https://raw.githubusercontent.com/nlppln/ocrevaluation-docker/master/ocrevaluation.cwl')\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8911924158174029,
      "result": {
        "original_header": "OCR quality measure",
        "type": "Text_excerpt",
        "value": "Jupyter notebook\n* better (more balanced) training data is needed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9093948965408688,
      "result": {
        "original_header": "Ideas",
        "type": "Text_excerpt",
        "value": "* Visualization of probabilities for each character (do the ocr mistakes have lower\n  probability?) (probability=color)\n \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://jupyter.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://nlppln.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/impactcentre/ocrevalUAtion/wiki"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KBNLresearch/ochre/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/character_counts.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/character_counts.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/remove-title-page.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/remove-title-page.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/tei2txt.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/tei2txt.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/word-mapping-workflow.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/word-mapping-workflow.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/vudnc-preprocess-workflow.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/vudnc-preprocess-workflow.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/Compare-performance-of-pred.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/Compare-performance-of-pred.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/lowercase-directory-workflow.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/lowercase-directory-workflow.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/icdar2017-save-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/icdar2017-save-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/ICDAR2017_shared_task_workflows.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/ICDAR2017_shared_task_workflows.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb-ocr-nematus-generate-character-based-data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb-ocr-nematus-generate-character-based-data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/post_correction_workflows.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/post_correction_workflows.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb_xml_to_text_%28unaligned%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb_xml_to_text_%28unaligned%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/sac-preprocess-workflow.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/sac-preprocess-workflow.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/align-workflow.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/align-workflow.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb-ocr_align_based_on_text_blocks.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb-ocr_align_based_on_text_blocks.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb-ocr_stratified_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb-ocr_stratified_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/ocr-evaluation-workflow.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/ocr-evaluation-workflow.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/improve-keras-datagen.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/improve-keras-datagen.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/Explore%20sequence%20alignments.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/Explore%20sequence%20alignments.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb_xml_match_textblocks.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb_xml_match_textblocks.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb_xml_to_aligned.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb_xml_to_aligned.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/try-lstm.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/try-lstm.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/Generate%20LSTM%20input%20data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/Generate%20LSTM%20input%20data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/2017-baseline-nn.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/2017-baseline-nn.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/nematus_translate_to_text.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/nematus_translate_to_text.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb_tss_preprocess.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/kb_tss_preprocess.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/fuzzy-string-matching.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/fuzzy-string-matching.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/preprocess-dbnl_ocr.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/preprocess-dbnl_ocr.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/icdar2017-ngrams.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/icdar2017-ngrams.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/dbnl_remove_notes.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/dbnl_remove_notes.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/icdar2019POCR-to-texts.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/notebooks/icdar2019POCR-to-texts.ipynb",
      "technique": "file_exploration"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "OCR error analysis",
        "parent_header": [
          "Ochre"
        ],
        "type": "Text_excerpt",
        "value": "Different types of OCR errors exist, e.g., structural vs. random mistakes. OCR\npost-correction methods may be suitable for fixing different types of errors.\nTherefore, it is useful to gain insight into what types of OCR errors occur.\nWe chose to approach this problem on the word level. In order to be able to\ncompare OCR errors on the word level, words in the OCR text and gold standard\ntext need to be mapped. CWL workflows are available to do this. To create word\nmappings for the test files of a dataset, use:\n\n```\ncwltool  /path/to/ochre/cwl/word-mapping-test-files.cwl --data_div /path/to/datadivision --gs_dir /path/to/directory/containing/the/gold/standard/texts --ocr_dir /path/to/directory/containing/the/ocr/texts/ --wm_name name-of-the-output-file.csv\n```\n\nTo create word mappings for two directories of files, do:\n\n```\ncwltool  /path/to/ochre/cwl/word-mapping-wf.cwl --gs_dir /path/to/directory/containing/the/gold/standard/texts/ --ocr_dir /path/to/directory/containing/the/ocr/texts/ --wm_name name-of-the-output-file.csv\n```\n\n(These workflows can be regenerated using the notebook [word-mapping-workflow.ipynb](https://github.com/KBNLresearch/ochre/blob/master/notebooks/word-mapping-workflow.ipynb).)\n\nThe result is a csv-file containing mapped words. The first column contains\na word id, the second column the gold standard text and the third column contains\nthe OCR text of the word:\n```\n,gs,ocr\n0,Hello,Hcllo\n1,World,World\n2,!,.\n```\nThis csv file can be used to analyze the errors. See `notebooks/categorize errors based on word mappings.ipynb` for an example.\n\nWe use heuristics to categorize the following types of errors (`ochre/ocrerrors.py`):\n\n* TODO: add error types\n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KBNLresearch/ochre/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KBNLresearch/ochre"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ochre"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/nematus.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/nematusA8P3.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/transformer.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/nematusA8P2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/job.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/nematus_translate.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Data sets",
        "parent_header": [
          "Ochre"
        ],
        "type": "Text_excerpt",
        "value": "* [VU DNC corpus](http://tst-centrale.org/nl/tst-materialen/corpora/vu-dnc-corpus-detail)\n  - Language: nl\n  - Format: FoLiA\n  - ~3340 newspaper articles, different genres, 5 newspapers, 1950/1951\n  - Gold standard is noisy\n* [ICDAR 2017 shared task on OCR post correction](https://sites.google.com/view/icdar2017-postcorrectionocr/dataset)\n  - Language: en and fr\n  - Format: txt (more info on the website)\n  - Periodicals and monographs\n* [Digitzed yearbooks of the Swiss Alpine Club (19th century)](https://files.ifi.uzh.ch/cl/OCR19thSAC/)\n  - Paper: http://www.zora.uzh.ch/124786/\n  - Languages: de and fr\n* [Sydney Morning Herald 1842-1954 (Overproof)](http://overproof.projectcomputing.com/datasets/)\n  - Paper: http://dl.acm.org/citation.cfm?id=2595200\n  - Languages: en\n* byu synthetic ocr data\n  - Paper: http://scholarsarchive.byu.edu/cgi/viewcontent.cgi?article=2664&context=facpub\n  - Not (yet) available\n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Ochre"
        ],
        "type": "Text_excerpt",
        "value": "```\ngit clone git@github.com:KBNLresearch/ochre.git\ncd ochre\npip install -r requirements.txt\npython setup.py develop\n```\n* Using the CWL workflows requires (the development version of) [nlppln](https://github.com/nlppln/nlppln) and its requirements ([see installation guidelines](http://nlppln.readthedocs.io/en/latest/installation.html)).\n* To run a CWL workflow type: `cwltool|cwl-runner path/to/workflow.cwl <inputs>` (if you run the command without inputs, the tool will tell you about what inputs are required and how to specify them). For more information on running CWL workflows, have a look at the [nlppln documentation](http://nlppln.readthedocs.io/en/latest/). This is especially relevant for Windows users.\n* Please note that some of the CWL workflows contain absolute paths, if you want to use them on your own machine, regenerate them using the associated Jupyter Notebooks.\n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9936926971015154,
      "result": {
        "original_header": "Preprocessing",
        "type": "Text_excerpt",
        "value": "Corresponding files in these directories should have the same name (or at least the same prefix), for example:\n```\n\u251c\u2500\u2500 gs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 2.txt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 3.txt\n\u251c\u2500\u2500 ocr\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 2.txt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 3.txt\n\u2514\u2500\u2500 aligned\n    \u251c\u2500\u2500 1.json\n    \u251c\u2500\u2500 2.json\n    \u2514\u2500\u2500 3.json\n``` \n* VU DNC corpus: `vudnc-preprocess-pack.cwl` (can be run as stand-alone; associated notebook [vudnc-preprocess-workflow.ipynb](https://github.com/KBNLresearch/ochre/blob/master/notebooks/vudnc-preprocess-workflow.ipynb))\n* ICDAR 2017 shared task on OCR post correction: `icdar2017st-extract-data-all.cwl` (cannot be run as stand-alone;\n  regenerate with notebook [ICDAR2017_shared_task_workflows.ipynb](https://github.com/KBNLresearch/ochre/blob/master/notebooks/ICDAR2017_shared_task_workflows.ipynb)) \nThese workflows can be run as stand-alone; associated notebook [align-workflow.ipynb](notebooks/align-workflow.ipynb).\n \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9170414326628178,
      "result": {
        "original_header": "Training networks for OCR post-correction",
        "type": "Text_excerpt",
        "value": "First, you need to divide the data into a train, validation and test set:\n```\npython -m ochre.create_data_division /path/to/aligned\n```\nThe result of this command is a json file containing lists of file names, for example:\n```\n{\n    \"train\": [\"1.json\", \"2.json\", \"3.json\", \"4.json\", \"5.json\", ...],\n    \"test\": [\"6.json\", ...],\n    \"val\": [\"7.json\", ...]\n}\n```\n \n* Script: `lstm_synched.py`\n \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9822334629669238,
      "result": {
        "original_header": "OCR post-correction",
        "type": "Text_excerpt",
        "value": "(these CWL workflows can be run as stand-alone; associated notebook [post_correction_workflows.ipynb](https://github.com/KBNLresearch/ochre/blob/master/notebooks/post_correction_workflows.ipynb)) \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9246826823926779,
      "result": {
        "original_header": "Performance",
        "type": "Text_excerpt",
        "value": "To use the ocrevalUAtion tool in your workflows, you have to add it to the `WorkflowGenerator's` steps\nlibrary:\n```\nwf.load(step_file='https://raw.githubusercontent.com/nlppln/ocrevaluation-docker/master/ocrevaluation.cwl')\n``` \n* TODO: explain how to calculate performance with ignore case (or use lowercase-directory.cwl)\n \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8353890252822128,
      "result": {
        "original_header": "Preprocessing",
        "type": "Text_excerpt",
        "value": "Corresponding files in these directories should have the same name (or at least the same prefix), for example:\n```\n\u251c\u2500\u2500 gs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 2.txt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 3.txt\n\u251c\u2500\u2500 ocr\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 2.txt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 3.txt\n\u2514\u2500\u2500 aligned\n    \u251c\u2500\u2500 1.json\n    \u251c\u2500\u2500 2.json\n    \u2514\u2500\u2500 3.json\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9217348457186003,
      "result": {
        "original_header": "Training networks for OCR post-correction",
        "type": "Text_excerpt",
        "value": "First, you need to divide the data into a train, validation and test set:\n```\npython -m ochre.create_data_division /path/to/aligned\n```\nThe result of this command is a json file containing lists of file names, for example:\n```\n{\n    \"train\": [\"1.json\", \"2.json\", \"3.json\", \"4.json\", \"5.json\", ...],\n    \"test\": [\"6.json\", ...],\n    \"val\": [\"7.json\", ...]\n}\n```\n \n* Script: `lstm_synched.py`\n \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.841577895215512,
      "result": {
        "original_header": "OCR post-correction",
        "type": "Text_excerpt",
        "value": "If you trained a model, you can use it to correct OCR text using the `lstm_synced_correct_ocr` command:\n```\npython -m ochre.lstm_synced_correct_ocr /path/to/keras/model/file /path/to/text/file/containing/the/characters/in/the/training/data /path/to/ocr/text/file\n```\nor\nBASH2*\n \nTo generate corrected text for the test files of a dataset, do:\n```\ncwltool /path/to/ochre/cwl/post_correct_test_files.cwl --charset /path/to/text/file/containing/the/characters/in/the/training/data --model /path/to/keras/model/file --datadivision /path/to/data/division --in_dir /path/to/directory/with/ocr/text/files\n```\nTo run it for a directory of text files, use:\n```\ncwltool /path/to/ochre/cwl/post_correct_dir.cwl --charset /path/to/text/file/containing/the/characters/in/the/training/data --model /path/to/keras/model/file --in_dir /path/to/directory/with/ocr/text/files\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8051987780679261,
      "result": {
        "original_header": "Performance",
        "type": "Text_excerpt",
        "value": "The second calculates performance for all files in the test set:\n```\ncwltool /path/to/ochre/cwl/ocrevaluation-performance-test-files-wf-pack.cwl --datadivision /path/to/datadivision.json --gt /path/to/dir/containing/the/gold/standard/ --ocr /path/to/dir/containing/ocr/texts/ [--out_name name-of-output-file.csv]\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KBNLresearch/ochre/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Ochre"
        ],
        "type": "Text_excerpt",
        "value": "Copyright (c) 2017-2018, Koninklijke Bibliotheek, Netherlands eScience Center\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ochre"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "KBNLresearch"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Common Workflow Language",
        "size": 261268,
        "type": "Programming_language",
        "value": "Common Workflow Language"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 239603,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 99155,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 5474,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4368,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:22:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 122
      },
      "technique": "GitHub_API"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/sac-extract.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/align-texts-wf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/onmt-tokenize-text.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/lowercase-directory.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/kb-tss-preprocess-single-dir.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/word-mapping-test-files-wf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/sac-preprocess.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/ocrevaluation-performance-test-files-wf-pack.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/icdar2017st-extract-data.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/word-mapping-dir.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/kb-tss-preprocess-all.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/post-correct-test-files.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/align-test-files-pack.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/vudnc-preprocess-pack.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/ocrevaluation-performance-wf-pack.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/align-dir-pack.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/ocrevaluation-performance-wf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/post-correct-dir.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/icdar2017st-extract-data-all.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KBNLresearch/ochre/master/ochre/cwl/word-mapping-wf.cwl"
      },
      "technique": "file_exploration"
    }
  ]
}