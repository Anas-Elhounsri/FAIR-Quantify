{
  "application_domain": [
    {
      "confidence": 22.36,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# YAML 1.2\n---\ncff-version: 1.2.0\n\ntitle: \"MUSCLE3: The Multiscale Coupling Library and Environment\"\ndoi: \"10.5281/zenodo.3258864\"\nrepository-code: \"https://github.com/multiscale/muscle3\"\n\nmessage: \"If you use MUSCLE3, please cite it using these metadata.\"\nauthors:\n  -\n    family-names: Veen\n    given-names: Lourens\n    orcid: \"https://orcid.org/0000-0002-6311-1168\"\n  -\n    family-names: Sebregts\n    given-names: Maarten\n\nkeywords:\n  - multiscale\n  - coupling\n  - MUSCLE\n\nlicense: \"Apache-2.0\"\n\nreferences:\n  - type: conference-paper\n    doi: \"10.1007/978-3-030-50433-5_33\"\n    authors:\n      - family-names: Veen\n        given-names: Lourens E.\n      - family-names: Hoekstra\n        given-names: Alfons G.\n    title: Easing Multiscale Model Design and Coupling with MUSCLE 3\n    year: 2020\n\n    collection-title: Lecture Notes in Computer Science\n    volume: 12142\n    volume-title: Computational Science -- ICCS 2020\n    editors:\n      - family-names: Krzhizhanovskaya\n        given-names: Valeria V.\n      - family-names: Z\u00e1vodszky\n        given-names: G\u00e1bor\n      - family-names: Lees\n        given-names: Michael H.\n      - family-names: Dongarra\n        given-names: Jack J.\n      - family-names: Sloot\n        given-names: Peter M. A.\n      - family-names: Brissos\n        given-names: S\u00e8rgio\n      - family-names: Teixeira\n        given-names: Jo\u00e3o\n    start: 425\n    end: 438\n    publisher:\n      name: Springer International Publishing\n      city: Cham\n...\n"
      },
      "source": "https://raw.githubusercontent.com/multiscale/muscle3/develop/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/multiscale/muscle3"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "type": "Text_excerpt",
        "value": "We welcome contributions to MUSCLE3! For small additions or fixes, please\nsubmit a pull request, and we'll review your changes and apply them. If you\nwant to add larger features, please make an issue and describe what you want to\ndo, so that we can coordinate and avoid double work. For more details, see the\n`documentation on contributing`_.\n\nThe MUSCLE3 community fosters a welcoming atmosphere, and participation is open\nto everyone. In order to ensure that it stays that way, we have a\n`code of conduct`_, and we will enforce it if necessary. Please treat your\nfellow human beings with respect.\n\n\n.. _`the MUSCLE3 documentation`: https://muscle3.readthedocs.io\n.. _`documentation on contributing`: http://muscle3.readthedocs.io/en/latest/contributing.html\n.. _`code of conduct`: https://github.com/multiscale/muscle3/blob/develop/CODE_OF_CONDUCT.md\n"
      },
      "source": "https://raw.githubusercontent.com/multiscale/muscle3/develop/README.rst",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-02-25T21:07:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-02T16:11:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The third major version of the MUltiScale Coupling Library and Environment"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8130191046104251,
      "result": {
        "original_header": "Collaboration",
        "type": "Text_excerpt",
        "value": "For academic collaboration, please contact `prof. Alfons Hoekstra (UvA CSL) <https://www.uva.nl/profiel/h/o/a.g.hoekstra/a.g.hoekstra.html>`_\nand/or `Lourens Veen (NLeSC) <https://www.esciencecenter.nl/team/lourens-veen-msc/>`_. \n"
      },
      "source": "https://raw.githubusercontent.com/multiscale/muscle3/develop/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9894854248056992,
      "result": {
        "original_header": "Legal",
        "type": "Text_excerpt",
        "value": "MUSCLE3 is Copyright 2018-2022 University of Amsterdam and Netherlands eScience\nCenter, Copyright 2022-2023 The ITER Organisation, and Copyright 2023-2024 Netherlands\neScience Center. It is licensed under the Apache License 2.0. \n"
      },
      "source": "https://raw.githubusercontent.com/multiscale/muscle3/develop/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9855712383743136,
      "result": {
        "type": "Text_excerpt",
        "value": "MUSCLE3 is the third incarnation of the MUSCLE Multiscale Coupling Library and\nEnvironment. With MUSCLE3, you can connect multiple simulation models together into\na multiscale simulation. \n"
      },
      "source": "https://raw.githubusercontent.com/multiscale/muscle3/develop/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://muscle3.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/multiscale/muscle3/develop/README.rst",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://muscle3.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/multiscale/muscle3/develop/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/multiscale/muscle3/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/multiscale/muscle3/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "multiscale/muscle3"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Collaboration"
      },
      "source": "https://raw.githubusercontent.com/multiscale/muscle3/develop/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9979002325385864,
      "result": {
        "original_header": "Collaboration",
        "type": "Text_excerpt",
        "value": "For academic collaboration, please contact `prof. Alfons Hoekstra (UvA CSL) <https://www.uva.nl/profiel/h/o/a.g.hoekstra/a.g.hoekstra.html>`_\nand/or `Lourens Veen (NLeSC) <https://www.esciencecenter.nl/team/lourens-veen-msc/>`_. \nCommercial support for MUSCLE3 is provided by\n`Ignition Computing <https://www.ignitioncomputing.com>`_. \n"
      },
      "source": "https://raw.githubusercontent.com/multiscale/muscle3/develop/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9637911136089047,
      "result": {
        "type": "Text_excerpt",
        "value": ".. image:: https://github.com/multiscale/muscle3/raw/develop/docs/source/muscle3_logo_readme.png\n    :alt: MUSCLE3 \n.. image:: https://readthedocs.org/projects/muscle3/badge/?version=develop\n    :target: https://muscle3.readthedocs.io/en/develop/?badge=develop\n    :alt: Documentation Build Status \n.. image:: https://github.com/multiscale/muscle3/actions/workflows/ci.yaml/badge.svg?branch=develop\n    :target: https://github.com/multiscale/muscle3/actions\n    :alt: Build Status \n.. image:: https://zenodo.org/badge/122876985.svg\n   :target: https://zenodo.org/badge/latestdoi/122876985 \nBrowse to `the MUSCLE3 documentation`_ to get started. \n"
      },
      "source": "https://raw.githubusercontent.com/multiscale/muscle3/develop/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/multiscale/muscle3/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/multiscale/muscle3/develop/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "muscle3"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "multiscale"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Fortran",
        "size": 1590139,
        "type": "Programming_language",
        "value": "Fortran"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1020949,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 794301,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 55612,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 190,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/multiscale/muscle3/develop/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2024-08-01T12:03:55Z",
        "date_published": "2024-08-01T12:06:34Z",
        "description": "# MUSCLE3 0.7.2\r\n\r\nMUSCLE3 is the third incarnation of the Multiscale Coupling Library and Environment, and the successor to MUSCLE 2. Its purpose is to make creating coupled multiscale simulations easy, and to then enable efficient Uncertainty Quantification of such models using advanced semi-intrusive algorithms.\r\n\r\nMUSCLE3 uses the Multiscale Modelling and Simulation Language (MMSL) to describe the structure of a multiscale model. MMSL can be expressed in the form of a diagram (gMMSL; not yet implemented) or as a YAML file (yMMSL; this is convenient both for people and for software). The MMSL lets one describe which components (submodels, scale bridges, data converters, UQ components, etc.) a multiscale model consist of, how many instances of each we need, and how they are wired together.\r\n\r\nMUSCLE3 is intended to scale from your laptop to the exascale. At the low end, it supports a non-distributed but parallel mode in which an entire multiscale simulation, including all component implementations and the MMSL configuration, is in a single (short) Python file. Next is a distributed mode where the manager and component instances run on multiple nodes in a cluster, and communicate directly with one another. Beyond that, additional components and optimisations are envisioned that would allow scaling to huge machines or combinations of multiple machines. Our goal is to make the transitions between these modes as smooth as possible, so that extra compute power can be added gradually, as needed.\r\n\r\n## Added\r\n\r\n- Support for Python 3.12\r\n- Support for NumPy 2 (already working, constraint removed)\r\n\r\n## Improved\r\n\r\n- Fixed `SHUTDOWN_WAIT` profiling event for Python components\r\n- Report successful completion on successful completion (instead of an error)\r\n- Fixed crash on SLURM clusters with hyperthreading\r\n- Use psutil instead of netifaces, which is no longer maintained\r\n- Internal improvements and refactoring to support upcoming fixes and features\r\n\r\n## Removed\r\n\r\n- Support for Python 3.7\r\n- Warnings about ruamel.yaml, via ymmsl/YAtiML update",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.7.2",
        "name": "Release 0.7.2",
        "release_id": 168230495,
        "tag": "0.7.2",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.7.2",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/168230495",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/168230495",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.7.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2023-10-01T16:51:06Z",
        "date_published": "2023-10-01T16:54:31Z",
        "description": "# MUSCLE3 0.7.1\r\n\r\nMUSCLE3 is the third incarnation of the Multiscale Coupling Library and Environment, and the successor to MUSCLE 2. Its purpose is to make creating coupled multiscale simulations easy, and to then enable efficient Uncertainty Quantification of such models using advanced semi-intrusive algorithms.\r\n\r\nMUSCLE3 uses the Multiscale Modelling and Simulation Language (MMSL) to describe the structure of a multiscale model. MMSL can be expressed in the form of a diagram (gMMSL; not yet implemented) or as a YAML file (yMMSL; this is convenient both for people and for software). The MMSL lets one describe which components (submodels, scale bridges, data converters, UQ components, etc.) a multiscale model consist of, how many instances of each we need, and how they are wired together.\r\n\r\nMUSCLE3 is intended to scale from your laptop to the exascale. At the low end, it supports a non-distributed but parallel mode in which an entire multiscale simulation, including all component implementations and the MMSL configuration, is in a single (short) Python file. Next is a distributed mode where the manager and component instances run on multiple nodes in a cluster, and communicate directly with one another. Beyond that, additional components and optimisations are envisioned that would allow scaling to huge machines or combinations of multiple machines. Our goal is to make the transitions between these modes as smooth as possible, so that extra compute power can be added gradually, as needed.\r\n\r\n\r\n\r\n## Added\r\n\r\n* Support for Python 3.11 (working already, now official)\r\n* Enabled type checking support for the libmuscle Python API\r\n\r\n## Improved\r\n\r\n* Easier crash debugging due to improved root cause detection\r\n* Fixed crash in profiling timeline plot\r\n* Better performance of timeline plot\r\n* Better visual quality of timeline plot\r\n* Improved profiling of shutdown process\r\n* Fixed crash in profiler for large simulations\r\n* Fixed several (harmless) compiler warnings\r\n* Small documentation rendering improvements\r\n\r\n\r\n## Thanks\r\n\r\n* David for reporting many of these and submitting a fix too!",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.7.1",
        "name": "Release 0.7.1",
        "release_id": 123256197,
        "tag": "0.7.1",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.7.1",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/123256197",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/123256197",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.7.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2023-06-22T21:20:04Z",
        "date_published": "2023-06-22T21:27:42Z",
        "description": "# MUSCLE3 0.7.0\r\n\r\nMUSCLE3 is the third incarnation of the Multiscale Coupling Library and Environment, and the successor to MUSCLE 2. Its purpose is to make creating coupled multiscale simulations easy, and to then enable efficient Uncertainty Quantification of such models using advanced semi-intrusive algorithms.\r\n\r\nMUSCLE3 uses the Multiscale Modelling and Simulation Language (MMSL) to describe the structure of a multiscale model. MMSL can be expressed in the form of a diagram (gMMSL; not yet implemented) or as a YAML file (yMMSL; this is convenient both for people and for software). The MMSL lets one describe which components (submodels, scale bridges, data converters, UQ components, etc.) a multiscale model consist of, how many instances of each we need, and how they are wired together.\r\n\r\nMUSCLE3 is intended to scale from your laptop to the exascale. At the low end, it supports a non-distributed but parallel mode in which an entire multiscale simulation, including all component implementations and the MMSL configuration, is in a single (short) Python file. Next is a distributed mode where the manager and component instances run on multiple nodes in a cluster, and communicate directly with one another. Beyond that, additional components and optimisations are envisioned that would allow scaling to huge machines or combinations of multiple machines. Our goal is to make the transitions between these modes as smooth as possible, so that extra compute power can be added gradually, as needed.\r\n\r\n## Added\r\n\r\n* Checkpointing is now supported in C++ and Fortran as well\r\n* Added built-in profiling feature\r\n* New object-oriented Fortran API (existing API also still available)\r\n* New Instance.list_settings() function\r\n* Build support for macOS with CLang and G++/GFortran\r\n* Build support for Cray machines and compilers\r\n\r\n## Improved\r\n\r\n* Compiling with MPI and linking without or vice versa is now impossible\r\n* Fixed MessagePack build failure on old OSes\r\n* Fixed resource allocation for instance sets\r\n* Planner now detects F_INIT -> O_F loops and gives an error\r\n* Manager correctly handles instances that never register\r\n* Last lines of log now printer to screen on error for smoother problem solving\r\n* Various small fixes and improvements\r\n\r\n## Backwards Incompatible changes\r\n\r\n* `Instance.reuse_instance` no longer accepts `apply_overlay` argument. Use `InstanceFlags.DONT_APPLY_OVERLAY` when creating the instance instead.\r\n* `LIBMUSCLE_Instance_create` signature has changed, this might lead to errors like:\r\n\r\n   ```\r\n       30 |     instance = LIBMUSCLE_Instance_create(ports, MPI_COMM_WORLD, root_rank)\r\n          |               1\r\n    Error: Type mismatch in argument \u2018flags\u2019 at (1); passed INTEGER(4) to TYPE(libmuscle_instanceflags)\r\n    ```\r\n  You may provide an explicit `InstanceFlags()` argument, or use named arguments:\r\n\r\n   ```\r\n   instance = LIBMUSCLE_Instance_create(ports, LIBMUSCLE_InstanceFlags(), MPI_COMM_WORLD, root_rank)\r\n   instance = LIBMUSCLE_Instance_create(ports, communicator=MPI_COMM_WORLD, root=root_rank)\r\n   ```\r\n* ``DataConstRef`` items can no longer be added to a ``Data`` containing a list or dict. The newly added ``DataConstRef::list`` and ``DataConstRef::dict`` should be used instead.\r\n\r\n## Thanks                                                                                  \r\n\r\n* Maarten at Ignition Computing for implementing much of the above\r\n* Peter for debugging the MessagePack build issue\r\n* Peter, Jon and Gavin for ARCHER2 access and support\r\n* Koen for testing macOS build support\r\n* Everyone who reported issues and contributed feature ideas!",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.7.0",
        "name": "Release 0.7.0",
        "release_id": 109616469,
        "tag": "0.7.0",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/109616469",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/109616469",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2023-01-17T22:12:01Z",
        "date_published": "2023-01-17T22:15:54Z",
        "description": "# MUSCLE3 0.6.0\r\n\r\nMUSCLE3 is the third incarnation of the Multiscale Coupling Library and Environment, and the successor to MUSCLE 2. Its purpose is to make creating coupled multiscale simulations easy, and to then enable efficient Uncertainty Quantification of such models using advanced semi-intrusive algorithms.\r\n\r\nMUSCLE3 uses the Multiscale Modelling and Simulation Language (MMSL) to describe the structure of a multiscale model. MMSL can be expressed in the form of a diagram (gMMSL; not yet implemented) or as a YAML file (yMMSL; this is convenient both for people and for software). The MMSL lets one describe which components (submodels, scale bridges, data converters, UQ components, etc.) a multiscale model consist of, how many instances of each we need, and how they are wired together.\r\n\r\nMUSCLE3 is intended to scale from your laptop to the exascale. At the low end, it supports a non-distributed but parallel mode in which an entire multiscale simulation, including all component implementations and the MMSL configuration, is in a single (short) Python file. Next is a distributed mode where the manager and component instances run on multiple nodes in a cluster, and communicate directly with one another. Beyond that, additional components and optimisations are envisioned that would allow scaling to huge machines or combinations of multiple machines. Our goal is to make the transitions between these modes as smooth as possible, so that extra compute power can be added gradually, as needed.\r\n\r\n## Added\r\n* Connecting multiple conduits to outgoing ports\r\n* Checkpointing (preview, not fully reliable and open to change)\r\n* Clang support\r\n* Intel\u00ae compiler support\r\n* Error in case different versions of MUSCLE3 are used\r\n\r\n## Improved\r\n* TCP latency (performance)\r\n* More helpful messages for configuration errors\r\n* Small documentation improvements\r\n\r\n## Removed\r\n* Python 3.6 support\r\n\r\n## Thanks\r\n* Maarten at Ignition Computing for implementing most of the above              \r\n* The ITER Organisation for funding most of this work",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.6.0",
        "name": "Release 0.6.0",
        "release_id": 89316949,
        "tag": "0.6.0",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/89316949",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/89316949",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2022-07-15T14:59:04Z",
        "date_published": "2022-07-15T15:04:05Z",
        "description": "# MUSCLE3 0.5.0\r\n\r\nMUSCLE3 is the third incarnation of the Multiscale Coupling Library and Environment, and the successor to MUSCLE 2. Its purpose is to make creating coupled multiscale simulations easy, and to then enable efficient Uncertainty Quantification of such models using advanced semi-intrusive algorithms.\r\n\r\nMUSCLE3 uses the Multiscale Modelling and Simulation Language (MMSL) to describe the structure of a multiscale model. MMSL can be expressed in the form of a diagram (gMMSL; not yet implemented) or as a YAML file (yMMSL; this is convenient both for people and for software). The MMSL lets one describe which components (submodels, scale bridges, data converters, UQ components, etc.) a multiscale model consist of, how many instances of each we need, and how they are wired together.\r\n\r\nMUSCLE3 is intended to scale from your laptop to the exascale. At the low end, it supports a non-distributed but parallel mode in which an entire multiscale simulation, including all component implementations and the MMSL configuration, is in a single (short) Python file. Next is a distributed mode where the manager and component instances are started on multiple nodes in a cluster, and communicate directly with one another. Beyond that, additional components and optimisations are envisioned that would allow scaling to huge machines or combinations of multiple machines. Our goal is to make the transitions between these modes as smooth as possible, so that extra compute power can be added gradually, as needed.\r\n\r\n## Added\r\n* MUSCLE3 now starts submodels and other components (using QCG-PilotJob)\r\n* Automatic resource management for components on HPC\r\n\r\n## Improved\r\n* Build and installation process now even easier\r\n* Improved error messages and reliability\r\n* Cleaner and more informative logging output\r\n* TCP performance and scalability improvements\r\n\r\n## Fixed\r\n* Various issues when building and running on HPC clusters\r\n* Many small fixes\r\n\r\n## Removed\r\n* Python 3.5 support\r\n* Removed gRPC for faster and more reliable builds\r\n* Pipe-based networking, as it had no benefits and some issues\r\n\r\n## Thanks\r\n* Stefan, Merijn and Maarten for reporting issues\r\n* Piotr and Bartek for creating and supporting QCG-PilotJob\r\n",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.5.0",
        "name": "Release 0.5.0",
        "release_id": 72101449,
        "tag": "0.5.0",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/72101449",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/72101449",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2021-01-15T06:55:43Z",
        "date_published": "2021-01-15T07:02:50Z",
        "description": "# MUSCLE 3\r\n\r\nMUSCLE 3 is the third incarnation of the Multiscale Coupling Library and Environment.\r\n\r\nWith MUSCLE 3, you can connect multiple simulation models together into a multiscale simulation. Simulation models can be as simple as a single Python file, or as complex as a combination of multiple separate simulation codes written in C++ or Fortran, and running on an HPC machine.\r\n\r\nPlease refer to the [MUSCLE 3 documentation](https://muscle3.readthedocs.io/) to get started.\r\n\r\n# Release 0.4.0\r\n\r\n## Incompatible changes\r\n* `compute_elements` are now called `components` in .ymmsl files\r\n\r\n## Improved\r\n* Use latest OpenSSL library when installing it automatically\r\n\r\n## Fixed\r\n* Handling of non-contiguous and F-order numpy arrays\r\n* C++ memory usage for large dicts/lists now more reasonable\r\n* Improved shutdown when Python submodel crashes\r\n* Logging warning message\r\n\r\n",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.4.0",
        "name": "Release 0.4.0",
        "release_id": 36432020,
        "tag": "0.4.0",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/36432020",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/36432020",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2020-09-23T20:00:06Z",
        "date_published": "2020-09-23T20:03:29Z",
        "description": "# Improved\r\n- Accessing settings from C++ now more flexible\r\n- Python produces more detailed logs to aid in debugging\r\n- Improved pkg-config set-up\r\n- Improved build system output to help find problems\r\n- Documentation on logging in Python\r\n- Protobuf dependency build now more compatible\r\n# Fixed\r\n- C++ list/dict building functions\r\n- C++ use-after-free when receiving grids\r\n# Thanks\r\n- Pavel for testing and reporting issues\r\n- Dongwei for testing and reporting issue",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.3.2",
        "name": "Release 0.3.2",
        "release_id": 31722958,
        "tag": "0.3.2",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/31722958",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/31722958",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2020-04-24T10:01:30Z",
        "date_published": "2020-04-24T10:08:19Z",
        "description": "# Added\r\n- Support for sending and receiving multidimensional grids/arrays\r\n- Support for Python 3.8\r\n# Improved\r\n- Python 3.5.1 support\r\n- Build compatibility on more operating systems\r\n# Thanks\r\n- Olivier for testing, reporting and fixing build issues\r\n- Pavel for testing and reporting build issues\r\n- Hamid for testing and reporting build issues\r\n- Ben for testing and reporting build issues",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.3.1",
        "name": "Release 0.3.1",
        "release_id": 25844221,
        "tag": "0.3.1",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/25844221",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/25844221",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2020-03-13T10:16:32Z",
        "date_published": "2020-03-13T10:18:58Z",
        "description": "# Incompatible changes\r\n- Data::key() now returns std::string instead of DataConstRef.\r\n- Data::value() now return Data rather than DataConstRef\r\n# Added\r\n- Support for Fortran, including MPI\r\n# Improved\r\n- Fixes to examples\r\n- Small documentation improvements\r\n- Improved compatibility with other packages using gRPC\r\n# Thanks\r\n- Pavel for reporting documentation/examples issues\r\n- Derek for testing on Eagle\r\n- Dongwei for reporting the gRPC issue",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.3.0",
        "name": "Release 0.3.0",
        "release_id": 24497080,
        "tag": "0.3.0",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/24497080",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/24497080",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2019-10-24T10:24:45Z",
        "date_published": "2019-10-24T10:27:25Z",
        "description": "# Added\r\n- Support for C++\r\n- Support for MPI in C++\r\n# Improved\r\n- Cluster/HPC networking\r\n# Incompatible Changes\r\n- Fatal logic errors now throw instead of exiting, so that you have a chance to shut down the model cleanly before exiting.\r\n- Instance.exit_error() was replaced by Instance.error_shutdown(), which no longer exits the process, it just shuts down the Instance.\r\n- Central MUSCLE 3-managed settings are called settings everywhere now, not parameters. As a result, the API has changed in several places.",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.2.0",
        "name": "Release 0.2.0",
        "release_id": 20943348,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/20943348",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/20943348",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2019-06-28T16:12:20Z",
        "date_published": "2019-06-28T16:13:51Z",
        "description": "# 0.1.0\r\nInitial release of MUSCLE 3.\r\n\r\n## Added\r\n* Coupling different submodel instances\r\n* Spatial and temporal scale separation and overlap\r\n* Settings management\r\n* Combining features\r\n* Python support\r\n* Initial distributed execution capability",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.1.0",
        "name": "Release 0.1.0",
        "release_id": 18298506,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/18298506",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/18298506",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "LourensVeen",
          "type": "User"
        },
        "date_created": "2019-06-27T19:49:18Z",
        "date_published": "2019-06-27T19:53:35Z",
        "description": "# 0.1.0\r\n\r\nInitial release of MUSCLE 3.\r\n\r\n## Added\r\n* Coupling different submodel instances\r\n* Spatial and temporal scale separation and overlap\r\n* Settings management\r\n* Combining features\r\n* Python support\r\n* Initial distributed execution capability",
        "html_url": "https://github.com/multiscale/muscle3/releases/tag/0.1.0-rc.1",
        "name": "Release 0.1.0-rc.1",
        "release_id": 18277381,
        "tag": "0.1.0-rc.1",
        "tarball_url": "https://api.github.com/repos/multiscale/muscle3/tarball/0.1.0-rc.1",
        "type": "Release",
        "url": "https://api.github.com/repos/multiscale/muscle3/releases/18277381",
        "value": "https://api.github.com/repos/multiscale/muscle3/releases/18277381",
        "zipball_url": "https://api.github.com/repos/multiscale/muscle3/zipball/0.1.0-rc.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:10:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 25
      },
      "technique": "GitHub_API"
    }
  ]
}