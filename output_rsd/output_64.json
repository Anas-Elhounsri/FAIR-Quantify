{
  "application_domain": [
    {
      "confidence": 0.9406197091255761,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "--- \nabstract: \"Many applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines. Unfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously. Xenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\"\nauthors: \n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Maassen\n    given-names: Jason\n    orcid: \"https://orcid.org/0000-0002-8172-4865\"\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Verhoeven\n    given-names: Stefan\n    orcid: \"https://orcid.org/0000-0002-5821-2060\"\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Borgdorff\n    given-names: Joris\n    orcid: \"https://orcid.org/0000-0001-7911-9490\"\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Spaaks\n    given-names: \"Jurriaan H.\"\n    orcid: \"https://orcid.org/0000-0002-7064-4069\"\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Drost\n    given-names: Niels\n    orcid: \"https://orcid.org/0000-0001-9795-7981\"\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Meijer\n    given-names: Christiaan\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Ploeg\n    given-names: Atze\n    name-particle: \"van der\"\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Boer\n    given-names: \"Piter T.\"\n    name-particle: de\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Nieuwpoort\n    given-names: Rob\n    name-particle: van\n    orcid: \"https://orcid.org/0000-0002-2947-9444\"\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Werkhoven\n    given-names: Ben\n    name-particle: van\n    orcid: \"https://orcid.org/0000-0002-7508-3272\"\n  - \n    affiliation: \"Netherlands eScience Center\"\n    family-names: Kuzniar\n    given-names: Arnold\n    orcid: \"https://orcid.org/0000-0003-1711-7961\"\ncff-version: \"1.0.3\"\ndate-released: 2020-03-20\ndoi: \"10.5281/zenodo.597993\"\nkeywords: \n  - Java\n  - batch-job\n  - middleware\n  - library\n  - FTP\n  - S3\n  - SFTP\n  - WebDAV\n  - HDFS\n  - SGE\n  - SLURM\n  - SSH\n  - Torque\n  - \"distributed computing\"\nlicense: Apache-2.0\nmessage: \"If you use this software, please cite it using these metadata.\"\nrepository-code: \"https://github.com/xenon-middleware/xenon\"\ntitle: Xenon\nversion: \"3.2.0\"\n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [xenon@esciencecenter.nl](mailto:xenon@esciencecenter.nl). All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xenon-middleware/xenon"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing guidelines\n\nWe welcome any kind of contribution to our software, from simple comment or question to a full fledged [pull request](https://help.github.com/articles/about-pull-requests/).\n\nA contribution can be one of the following cases:\n\n1. you have a question;\n1. you think you may have found a bug (including unexpected behavior);\n1. you want to make some kind of change to the code base (e.g. to fix a bug, to add a new feature, to update documentation).\n\nThe sections below outline the steps in each case.\n\n## You have a question\n\n1. use the search functionality [here](https://github.com/NLeSC/Xenon/issues) to see if someone already filed the same issue;\n1. if your issue search did not yield any relevant results, make a new issue;\n1. apply the \"Question\" label; apply other labels when relevant.\n\n## You think you may have found a bug\n\n1. use the search functionality [here](https://github.com/NLeSC/Xenon/issues) to see if someone already filed the same issue;\n1. if your issue search did not yield any relevant results, make a new issue, making sure to provide enough information to the rest of the community to understand the cause and context of the problem. Depending on the issue, you may want to include:\n    - the [SHA hashcode](https://help.github.com/articles/autolinked-references-and-urls/#commit-shas) of the commit that is causing your problem;\n    - some identifying information (name and version number) for dependencies you're using;\n    - information about the operating system;\n1. apply relevant labels to the newly created issue.\n\n## You want to make some kind of change to the code base\n\n1. (**important**) announce your plan to the rest of the community _before you start working_. This announcement should be in the form of a (new) issue;\n1. (**important**) wait until some kind of concensus is reached about your idea being a good idea;\n1. if needed, fork the repository to your own Github profile and create your own feature branch off of the latest master commit. While working on your feature branch, make sure to stay up to date with the master branch by pulling in changes, possibly from the 'upstream' repository (follow the instructions [here](https://help.github.com/articles/configuring-a-remote-for-a-fork/) and [here](https://help.github.com/articles/syncing-a-fork/));\n1. make sure the existing unit tests still work by running ``./gradlew test``;\n1. make sure that the existing integration tests still work by running ``./gradlew check``; and ``./src/fixedClientEnvironmentTest/resources/run-fixed-client-environment-test.sh``;\n1. add your own unit tests and integration tests (if necessary);\n1. update or expand the documentation;\n1. [push](http://rogerdudler.github.io/git-guide/) your feature branch to (your fork of) the Xenon repository on GitHub;\n1. create the pull request, e.g. following the instructions [here](https://help.github.com/articles/creating-a-pull-request/).\n\nIn case you feel like you've made a valuable contribution, but you don't know how to write or run tests for it, or how to generate the documentation: don't let this discourage you from making the pull request; we can help you! Just go ahead and submit the pull request, but keep in mind that you might be asked to append additional commits to your pull request (have a look at some of our old pull requests to see how this works, for example [#294](https://github.com/NLeSC/Xenon/pull/294)).\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-04-05T08:24:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-30T11:29:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A middleware abstraction library that provides a simple programming interface to various compute and storage resources."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9805064710350855,
      "result": {
        "original_header": "How does Xenon work?",
        "type": "Text_excerpt",
        "value": "Xenon is an abstraction layer that sits between your application and the (usually remote)\nresource it uses. Xenon is written in Java, but is also accessible from other\nlanguages (e.g. Python) through its gRPC interface and via the command line. \n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9171516765436355,
      "result": {
        "original_header": "Legal",
        "type": "Text_excerpt",
        "value": "The Xenon library is copyrighted by the Netherlands eScience Center and released\nunder the Apache License, Version 2.0. A copy of the license may be obtained\nfrom [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0). \n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xenon-middleware/xenon/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "Xenon"
        ],
        "type": "Text_excerpt",
        "value": "Xenon's JavaDoc is available online at <http://xenon-middleware.github.io/xenon/>.\n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation for maintainers",
        "parent_header": [
          "Xenon"
        ],
        "type": "Text_excerpt",
        "value": "For developers of Xenon itself \n\n* see [RELEASE.md](RELEASE.md) how to perform a release.\n* see [ADAPTOR_DEVELOPMENT.md](ADAPTOR_DEVELOPMENT.md) how to write a new adaptor.\n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://xenonrse2017.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/xenon-middleware/xenon/wiki"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xenon-middleware/xenon/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "What problem does Xenon solve?",
        "parent_header": [
          "Xenon"
        ],
        "type": "Text_excerpt",
        "value": "Many applications use remote storage and compute resources. To do so, they need\nto include code to interact with the scheduling systems and file transfer\nprotocols used on those remote machines.\n\nUnfortunately, many different scheduler systems and file transfer protocols\nexist, often with completely different programming interfaces. This makes it\nhard for applications to switch to a different system or support multiple\nremote systems simultaneously.\n\nXenon solves this problem by providing a single programming interface to many\ndifferent types of remote resources, allowing applications to switch without\nchanging a single line of code.\n\n![Xenon abstraction](https://raw.githubusercontent.com/xenon-middleware/xenon/master/docs/images/readme-xenon-abstraction.svg.png \"Xenon abstraction\")\n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Submitting a job",
        "parent_header": [
          "Xenon",
          "Simple examples"
        ],
        "type": "Text_excerpt",
        "value": "The following code performs a wordcount of a file residing on a remote machine: \n\n```java \nimport nl.esciencecenter.xenon.credentials.PasswordCredential;\nimport nl.esciencecenter.xenon.schedulers.JobDescription;\nimport nl.esciencecenter.xenon.schedulers.JobStatus;\nimport nl.esciencecenter.xenon.schedulers.Scheduler;\n\npublic class SlurmSubmitWordCountJob {\n\n    public static void main(String[] args) throws Exception {\n\n        // Assume the remote system is actually just a Docker container (e.g.\n        // https://hub.docker.com/r/xenonmiddleware/slurm/), accessible to user 'xenon' via\n        // port 10022 on localhost, using password 'javagat'\n        String location = \"localhost:10022\";\n        String username = \"xenon\";\n        char[] password = \"javagat\".toCharArray();\n        PasswordCredential credential = new PasswordCredential(username, password);\n\n        // create the SLURM scheduler representation\n        Scheduler scheduler = Scheduler.create(\"slurm\", location, credential);\n\n        JobDescription description = new JobDescription();\n        description.setExecutable(\"/usr/bin/wc\");\n        description.setArguments(\"-l\", \"/etc/passwd\");\n        description.setStdout(\"/tmp/wc.stdout.txt\");\n\n        // submit the job\n        String jobId = scheduler.submitBatchJob(description);\n\n        long WAIT_INDEFINITELY = 0;\n        JobStatus jobStatus = scheduler.waitUntilDone(jobId, WAIT_INDEFINITELY);\n\n        // print any exceptions\n        Exception jobException = jobStatus.getException();\n        if (jobException != null)  {\n          throw jobException;\n        }\n\n    }\n}\n```\n\nThe output of the job will be written to ``/tmp/wc.stdout.txt`` file in the ``xenonmiddleware/slurm`` Docker container.\n\nFor more examples, see the tutorial at [Read The Docs](http://xenonrse2017.readthedocs.io/).\n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xenon-middleware/xenon"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Xenon"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/runAllChecks.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.597993"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/docs/images/readme-xenon-abstraction.svg.png"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/docs/images/readme-xenon-api.svg.png"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Overview of the Xenon ecosystem of tools",
        "type": "Text_excerpt",
        "value": "| component | repository |\n|---|---|\n| Xenon library | https://github.com/xenon-middleware/Xenon |\n| Xenon cloud adaptors like s3 | https://github.com/xenon-middleware/xenon-adaptors-cloud |\n| Xenon grid adaptors like gridftp| https://github.com/xenon-middleware/xenon-adaptors-grid |\n| Xenon hadoop adaptors like hdfs | https://github.com/xenon-middleware/xenon-adaptors-hadoop |\n| gRPC extension for Xenon | https://github.com/xenon-middleware/xenon-grpc |\n| command line interface to Xenon | https://github.com/xenon-middleware/xenon-cli |\n| Python API for Xenon | https://github.com/xenon-middleware/pyxenon |\n| Docker images | https://github.com/xenon-middleware/xenon-docker-images |\n \n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.914133102754923,
      "result": {
        "original_header": "Supported middleware",
        "type": "Text_excerpt",
        "value": "See the [roadmap](/ROADMAP.md) for the planned extensions.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9594959876762654,
      "result": {
        "original_header": "Legal",
        "type": "Text_excerpt",
        "value": "The Xenon library is copyrighted by the Netherlands eScience Center and released\nunder the Apache License, Version 2.0. A copy of the license may be obtained\nfrom [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0). \n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8100407927388534,
      "result": {
        "original_header": "Supported middleware",
        "type": "Text_excerpt",
        "value": "- ``file`` (local file manipulation)\n- ``ftp``\n- ``sftp``\n- ``webdav``\n- ``s3``\n- ``hdfs`` \n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "batch-job, java, library, middleware"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://sonarcloud.io/api/project_badges/measure?project=xenon-middleware_xenon&amp;metric=alert_status"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xenon"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "xenon-middleware"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 1603245,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3999,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 762,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2020-03-20T12:48:56Z",
        "date_published": "2020-03-20T13:53:14Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v3.0.4:\r\n-----------------------------------\r\n\r\n- improved error state returned by getJobStatusses to show the difference between no job and connection loss.\r\n- added support for slurm 19\r\n- added heartbeat in the SSH adaptor quickly detect lost connections.\r\n- moved to version 2.4.0 of SSHD \r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/3.1.0",
        "name": "This is release 3.1.0 of Xenon.",
        "release_id": 24710634,
        "tag": "3.1.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/3.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/24710634",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/24710634",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/3.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2019-09-10T18:49:07Z",
        "date_published": "2019-09-10T20:12:19Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v3.0.3:\r\n-----------------------------------\r\n\r\n- fixed bug in FTP adaptor when listing the root directory\r\n- fixed bug in SFTP adaptor when listing the root directory",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/3.0.4",
        "name": "This is release 3.0.4 of Xenon.",
        "release_id": 19893043,
        "tag": "3.0.4",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/3.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/19893043",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/19893043",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/3.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2019-09-09T15:10:25Z",
        "date_published": "2019-09-09T15:34:57Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v3.0.2:\r\n-----------------------------------\r\n\r\n- fixed the FTP adaptor which lost bytes due to being in ASCII mode \r\n- fixed the numbering in this changelog\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/3.0.3",
        "name": "This is release 3.0.3 of Xenon.",
        "release_id": 19855282,
        "tag": "3.0.3",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/3.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/19855282",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/19855282",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/3.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2019-09-09T11:10:06Z",
        "date_published": "2019-09-09T11:12:42Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v3.0.1:\r\n-----------------------------------\r\n\r\n- updated jaxb dependencies to prevent illegal access warning from JVM\r\n- removed leftover debug print in webdav \r\n\r\n\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/3.0.2",
        "name": "This is release 3.0.2 of Xenon.",
        "release_id": 19847463,
        "tag": "3.0.2",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/3.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/19847463",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/19847463",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/3.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2019-07-31T14:16:04Z",
        "date_published": "2019-07-31T14:54:40Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v3.0.0:\r\n-----------------------------------\r\n\r\n- fixed minute delay on shutdown when SSH adaptor was used (discussed as part of #654).\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/3.0.1",
        "name": "This is release 3.0.1 of Xenon.",
        "release_id": 18988583,
        "tag": "3.0.1",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/3.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/18988583",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/18988583",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/3.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2019-06-13T09:21:49Z",
        "date_published": "2019-06-13T09:28:25Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v2.6.2:\r\n-----------------------------------\r\n\r\n- Moved adaptors with large dependencies (such as S3 and HDFS) into separate libraries, resulting in a much smaller \"core\" distribution.\r\n- Changed JobDescription to a tasks+cores model, instead of nodes+processes+thread (#625).   \r\n- Remove the JOB_OPTIONS hack from JobDescription (#629 and #628)\r\n- Added support for memory requirements and job name in JobDescription (#562 and #609)\r\n- Added an adaptor for the at scheduler (#381)\r\n- Dropped offline support (#649)\r\n- Require Java 11 or greater (#647)\r\n- Many smaller bugfixes and updates of dependencies. \r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/3.0.0",
        "name": "This is release 3.0.0 of Xenon.",
        "release_id": 17965416,
        "tag": "3.0.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/3.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/17965416",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/17965416",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/3.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2018-06-11T15:45:39Z",
        "date_published": "2018-06-11T19:01:20Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v2.6.1:\r\n-----------------------------------\r\n- added support for temp space in JobDescription. \r\n- added support stdout, stderr and stdin to Torque.\r\n- fixed several unit tests that failed on OSX\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/2.6.2",
        "name": "This is release 2.6.2 of Xenon.",
        "release_id": 11423411,
        "tag": "2.6.2",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/2.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/11423411",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/11423411",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/2.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2018-03-16T11:31:44Z",
        "date_published": "2018-03-16T11:33:22Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v2.6.0:\r\n-----------------------------------\r\n\r\n- fixed hashCode and equals of JobDescription\r\n\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/2.6.1",
        "name": "This is release 2.6.1 of Xenon.",
        "release_id": 10120819,
        "tag": "2.6.1",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/2.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/10120819",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/10120819",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/2.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2018-03-08T17:00:56Z",
        "date_published": "2018-03-08T17:02:25Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v2.5.0:\r\n-----------------------------------\r\n\r\n- added support for scheduler specific arguments to JobDescription\r\n- fixed specification of runtime limit in gridengine adaptor \r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/2.6.0",
        "name": "This is release 2.6.0 of Xenon.",
        "release_id": 10002127,
        "tag": "2.6.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/2.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/10002127",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/10002127",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/2.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2018-03-03T08:55:12Z",
        "date_published": "2018-03-03T08:57:14Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v2.4.1:\r\n-----------------------------------\r\n\r\n- added equals to KeytabCredential (#615)\r\n- added getSupportedCrenentials to AdaptorDescription (#595)\r\n- clarified description of JobState.getState (#596)\r\n\r\n\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/2.5.0",
        "name": "This is release 2.5.0 of Xenon.",
        "release_id": 9922575,
        "tag": "2.5.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/2.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/9922575",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/9922575",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/2.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2018-02-27T12:23:30Z",
        "date_published": "2018-02-27T12:26:18Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v2.4.0:\r\n-----------------------------------\r\n\r\n- fixed JobDescription equals, hashCode and toString (#612)\r\n- fixed slurm adaptors status retrieval of finished jobs (#613)\r\n- fixed slurm adaptors parsing of scontrol output on pre 17 slurm versions\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/2.4.1",
        "name": "This is release 2.4.1 of Xenon.",
        "release_id": 9852239,
        "tag": "2.4.1",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/2.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/9852239",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/9852239",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/2.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2018-02-23T08:07:53Z",
        "date_published": "2018-02-23T08:10:51Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v2.3.0:\r\n-----------------------------------\r\n\r\n- added name to job description and job status (#609)\r\n- added max memory to job description (#562)\r\n- added threads per process to job description\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/2.4.0",
        "name": "This is release 2.4.0 of Xenon.",
        "release_id": 9802347,
        "tag": "2.4.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/2.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/9802347",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/9802347",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/2.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2018-01-30T14:12:49Z",
        "date_published": "2018-01-30T14:13:58Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v2.2.0:\r\n-----------------------------------\r\n\r\n- added an HDFS filesystem adaptor\r\n- fixed bug in GridEngineSchedulers for complex configurations of number of slots per node\r\n- various code cleanups, etc.\r\n\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/2.3.0",
        "name": "This is release 2.3.0 of Xenon.",
        "release_id": 9448709,
        "tag": "2.3.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/2.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/9448709",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/9448709",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/2.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2017-11-06T10:32:01Z",
        "date_published": "2017-11-06T10:58:54Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v2.1.0:\r\n-----------------------------------\r\n\r\n- extended CredentialMap to retrieve all keys \r\n- removed logback config from jar \r\n- fixed bug in handling workdir of Local and TorqueSchedulers\r\n- many small bugfixes, additional tests, etc.\r\n\r\n\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/2.2.0",
        "name": "This is release 2.2.0 of Xenon.",
        "release_id": 8396827,
        "tag": "2.2.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/2.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/8396827",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/8396827",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/2.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2017-11-01T13:29:16Z",
        "date_published": "2017-11-01T13:59:10Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v2.0.0:\r\n-----------------------------------\r\n\r\n- added getCredential to Scheduler and FileSystem \r\n- fixed a bug in equals of CredentialMap\r\n- added proper check of supported credential types in adaptors \r\n- many small bugfixes, additional tests, etc.\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/2.1.0",
        "name": "This is release 2.1.0 of Xenon.",
        "release_id": 8342639,
        "tag": "2.1.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/8342639",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/8342639",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2017-10-25T15:49:47Z",
        "date_published": "2017-10-25T15:50:39Z",
        "description": "# What problem does Xenon solve?\r\n\r\nMany applications use remote storage and compute resources. To do so, they need to include code to interact with the scheduling systems and file transfer protocols used on those remote machines.\r\n\r\nUnfortunately, many different scheduler systems and file transfer protocols exist, often with completely different programming interfaces. This makes it hard for applications to switch to a different system or support multiple remote systems simultaneously.\r\n\r\nXenon solves this problem by providing a single programming interface to many different types of remote resources, allowing applications to switch without changing a single line of code.\r\n\r\nNotable changes compared to v1.2.3:\r\n-----------------------------------\r\n\r\n- complete overhaul of public API, which should increase ease-of-use significantly. \r\n- complete overhaul of integration test framework, which should improve performance and make it easier to test against different versions of the same middleware.\r\n- complete overhaul of implementation, which should make implementing adaptors much more straightforward.\r\n- replaced Jsch with Apache SSHD in the SSH and SFTP adaptors\r\n- replaced Apache Jackrabbit with Sardine in the Webdav adaptor. \r\n- added an S3 filesystem adaptor. \r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/2.0.0",
        "name": "This is release 2.0.0 of Xenon.",
        "release_id": 8257354,
        "tag": "2.0.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/8257354",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/8257354",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2017-08-04T13:14:38Z",
        "date_published": "2017-08-04T14:04:18Z",
        "description": "This is the first release candidate of Xenon 2.0.0\r\n\r\nNotable changes compared to v1.2.3:\r\n\r\n- complete overhaul of public API, which should increase ease-of-use significantly.\r\n- complete overhaul of integration test framework, which should improve performance and make it easier to test against different versions of the same middleware.\r\n- complete overhaul of implementation, which should make implementing adaptors much more straightforward.\r\n- replaced Jsch with Apache SSHD in the SSH and SFTP adaptors\r\n- replaced Apache Jackrabbit with Sardine in the Webdav adaptor.\r\n\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/2.0.0-rc2",
        "name": "This is release candidate 2 of Xenon 2.0.0.",
        "release_id": 7285593,
        "tag": "2.0.0-rc2",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/2.0.0-rc2",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/7285593",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/7285593",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/2.0.0-rc2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2017-05-12T10:37:48Z",
        "date_published": "2017-07-17T09:57:29Z",
        "description": "This is the final regular 1.x release before switching to the 2.0 branch. \r\n\r\nNo further development will be done on 1.x (although we may release additional bug-fix releases).\r\n\r\nBugfixes:\r\n\r\n    fixed various issues flagged by sonarqube\r\n\r\nWhat's missing:\r\n\r\nThe GridFTP adaptor is not considered stable yet. It is not part of this release.\r\n\r\nThere is no adaptor writing documentation at the moment, nor is the Javadoc complete for the internals methods of the adaptor implementations.\r\n\r\nIt should be made easier to inspect at runtime which adaptors are available and what properties they support.\r\n\r\nWe can always use more adaptors, e.g, for S3, SWIFT, HDFS, YARN, Azure-Batch, Amazon-Batch etc. Many of these are in progress for 2.0.",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/1.2.3",
        "name": "This is release 1.2.3 of Xenon.",
        "release_id": 7061562,
        "tag": "1.2.3",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/1.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/7061562",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/7061562",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/1.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2017-05-08T12:17:16Z",
        "date_published": "2017-05-08T12:36:09Z",
        "description": "This is release 1.2.2 of Xenon.\r\n\r\nBugfixes:\r\n - fixed bug in the copy engine that would ignore a copy if source and destination had exactly the same path (even on different machines).\r\n - added timeout overflow detection in Jobs.waitUntilDone and Jobs.waitUntilRunning.\r\n\r\nOther changes:\r\n- we have a new logo!\r\n- added SonarQube code for quality analysis and coverage\r\n\r\nWhat's missing:\r\n\r\nThe GridFTP adaptor is not considered stable yet. It is not part of this release.\r\n\r\nThere is no adaptor writing documentation at the moment, nor is the Javadoc complete for the internals methods of the adaptor implementations.\r\n\r\nIt should be made easier to inspect at runtime which adaptors are available and what properties they support.\r\n\r\nWe can always use more adaptors, e.g, for S3, SWIFT, HDFS, YARN, Azure-Batch, Amazon-Batch etc. These are planned for 1.3 or later.\r\n\r\nWe can always use more interfaces, e.g. for clouds. This is planned for 2.0.\r\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/1.2.2",
        "name": "Xenon 1.2.2",
        "release_id": 6310664,
        "tag": "1.2.2",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/6310664",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/6310664",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/1.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2017-02-28T16:02:08Z",
        "date_published": "2017-02-28T16:05:15Z",
        "description": "## Xenon 1.2.1\n\nThis is release 1.2.1 of Xenon. \n\n## Bugfixes:\n- fixed nasty inconsistency in adaptor implementations of waiting for jobs to start or finish.\n\n## What's missing:\n\nThe GridFTP adaptor is not considered stable yet. It is not part of this release.\n\nThere is no adaptor writing documentation at the moment, nor is the Javadoc complete for the internals methods of the adaptor implementations.\n\nIt should be made easier to inspect at runtime which adaptors are available and what properties they support.\n\nWe can always use more adaptors, e.g, for S3, SWIFT, HDFS, YARN, Azure-Batch, Amazon-Batch etc. These are planned for 1.3 or later.\n\nWe can always use more interfaces, e.g. for clouds. This is planned for 2.0.\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/1.2.1",
        "name": "Xenon 1.2.1",
        "release_id": 5596034,
        "tag": "1.2.1",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/5596034",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/5596034",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2017-02-23T13:26:30Z",
        "date_published": "2017-02-23T14:16:01Z",
        "description": "## Xenon 1.2.0\n\nThis is release 1.2.0 of Xenon. \n\n## Notable changes compared to v1.1.0:\n- added support for WebDAV file access.\n- added OSX testing in Travis\n- added support for Slurm version 15.08.6\n- many additional tests\n\n## Bugfixes:\n- fixed several bugs related to Windows local file system semantics\n- many small bugfixes \n\n## What's missing:\n\nThe GridFTP adaptor is not considered stable yet. It is not part of this release.\n\nThere is no adaptor writing documentation at the moment, nor is the Javadoc complete for the internals methods of the adaptor implementations.\n\nIt should be made easier to inspect at runtime which adaptors are available and what properties they support.\n\nWe can always use more adaptors, e.g, for S3, SWIFT, HDFS, YARN, Azure-Batch, etc. These are planned for 1.3 or later.\n\nWe can always use more interfaces, e.g. for clouds. This is planned for 2.0.\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/1.2.0",
        "name": "Xenon 1.2.0",
        "release_id": 5549057,
        "tag": "1.2.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/5549057",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/5549057",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2015-12-16T17:55:34Z",
        "date_published": "2015-12-16T17:56:08Z",
        "description": "## Xenon 1.1.0\n\nThis is release 1.1.0 of Xenon. \n\n## Notable changes compared to v1.0.0:\n- added support for FTP file access.\n- added support for Torque resource manager.\n- added support for Slurm versions 2.6.0, 14.03.0 and 14.11.9-Bull.1.0.\n- added option to specify resources in sge adaptor.\n- added support for SSH agent and agent proxies\n- added a -lot- of unit and integration tests\n- javadoc is java 8 compliant.\n- the adaptor documentation is now part of the javadoc.\n- Xenon releases are now available in jCenter.\n- switched from ant to gradle based build system, this is reflected in the directory structure \n- split unit and integration tests\n- added docker support for integration tests\n- now using travis-ci for continous integration \n- now using PMD and codacy for code quality\n- now using codecov for unit and integration test coverage\n- moved examples and tutorial to a separate repository https://github.com/NLeSC/Xenon-examples\n\n## Bugfixes:\n\nMany bugfixes in adaptors and tests.\n\n## What's missing:\n\nThe GridFTP and WebDAV adaptors are not considered stable yet. They are not part of this release.\n\nThere is no adaptor writing documentation at the moment, nor is the Javadoc complete for the internals methods of the adaptor implementations.\n\nWe can always use more adaptors.\n\nWe can always use more interfaces, e.g. for bandwidth-on-demand or clouds.\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/1.1.0",
        "name": "Xenon 1.1.0",
        "release_id": 2299414,
        "tag": "1.1.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/2299414",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/2299414",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2014-01-09T12:39:41Z",
        "date_published": "2014-01-09T12:58:06Z",
        "description": "## Xenon 1.1.0-beta.1\n\nThis is a beta release of version 1.1.0 of Xenon. \n\n## Notable changes compared to v1.0.0:\n- added GridFTP adaptor (unstable).\n- added support for Slurm 2.6.\n- added option to specify resources in sge adaptor.\n\n## Bugfixes:\n- Fixed bug in caching of SFTP connections.\n- Fixed retrieval of local FileSystems on Windows machines. \n\n## What's missing:\n\nThere is no adaptor writing documentation at the moment, nor is the Javadoc complete for the internals methods of the adaptor implementations.\n\nThe SSH adaptor does not support SSH agent or SSH agent forwarding yet.\n\nWe can always use more adaptors, e.g, for FTP, CIFS, etc.\n\nWe can always use more interfaces, e.g. for bandwidth-on-demand or clouds.\n\nThe GridFTP adaptor is not considered stable yet. Third-party copying is still missing, and it the \ndocumentation is still missing. \n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/v1.1.0-beta.1",
        "name": "First beta release of Xenon 1.1.0 ",
        "release_id": 142552,
        "tag": "v1.1.0-beta.1",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/v1.1.0-beta.1",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/142552",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/142552",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/v1.1.0-beta.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2013-09-24T15:08:10Z",
        "date_published": "2013-09-24T20:21:45Z",
        "description": "## Xenon 1.0.0\n\nThis is the first stable release of Xenon, version 1.0.0. \n\n## What's there:\n\nThe Xenon programming interface is stable and completely documented. User documentation, examples, and Javadoc are available for the public API of Xenon. \n\nThis version of Xenon contains adaptors for local, SSH, Grid Engine and Slurm that should be fully functional.\n\nThe library has been tested extensively under Linux, Windows 7 and OSX. \n\n## What's missing:\n\nThere is no adaptor writing documentation at the moment, nor is the Javadoc complete for the internals methods of the adaptor implementations.\n\nThe SSH adaptor does not support SSH agent or SSH agent forwarding yet.\n\nWe can always use more adaptors, e.g, for FTP, CIFS, GridFTP, etc. \n\nWe can always use more interfaces, e.g. for bandwidth-on-demand or clouds.\n\n## Whatever happened to Octopus ?\n\nXenon was previously called Octopus. We changed its name to fit into the NLeSC naming scheme, which has an _elements_ theme.\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/v1.0.0",
        "name": "The first stable release of Xenon",
        "release_id": 33155,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/33155",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/33155",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jmaassen",
          "type": "User"
        },
        "date_created": "2013-07-04T15:40:57Z",
        "date_published": "2013-07-04T15:45:37Z",
        "description": "## Octopus 0.9-beta\n\nIt is the first public release of Octopus. This release is intended to \nallow others to experiment with Octopus and provide feedback. \n\n## What's there:\n\nThe Octopus programming interface should be mostly done. Very little \nchanges are expected for the final 1.0 release. \n\nOctopus currently contains three adaptors, _local_, _ssh_ and _gridengine_. \nThese adaptor should be mostly functional. See below for what's missing. \n\nThe user documentation is 90% done (but will undoubtedly contain lots of typos).\n\nThe library has been tested quite extensively under linux.\n\n## What's missing: \n\nOctopus has not been tested **at all** under Windows or OSX.\n\n_ssh adaptor_ does not support environment variables.\n\n_gridengine_ does not support parallel jobs yet (just single core jobs). \n\nAdaptors may not provide adaptor specific information yet.\n\nThere is no adaptor writing documentation at the moment. \n\nThere is no adaptor specific documentation at the moment. \n\nMore adaptors, more interfaces!\n",
        "html_url": "https://github.com/xenon-middleware/xenon/releases/tag/v0.9-beta",
        "name": "First public release of Octopus",
        "release_id": 3924,
        "tag": "v0.9-beta",
        "tarball_url": "https://api.github.com/repos/xenon-middleware/xenon/tarball/v0.9-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/xenon-middleware/xenon/releases/3924",
        "value": "https://api.github.com/repos/xenon-middleware/xenon/releases/3924",
        "zipball_url": "https://api.github.com/repos/xenon-middleware/xenon/zipball/v0.9-beta"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Adding Xenon as a dependency to your project",
        "parent_header": [
          "Xenon"
        ],
        "type": "Text_excerpt",
        "value": "Follow the instructions from [bintray.com](https://bintray.com/nlesc/xenon/xenon) to include Xenon as a \ndependency for Gradle, Maven, SBT, or Leiningen projects, e.g. Gradle:\n\n```gradle\n\tallprojects {\n\t\trepositories {\n\t\t\t...\n\t\t\tjcenter()\n\t\t}\n\t}\n```\n\nand \n\n```gradle\n\tdependencies {\n\t        compile group: 'nl.esciencecenter.xenon', name: 'xenon', version: '3.2.0'\n\t}\n\n```\n\nThis will give the core adaptors to get cloud, grid and hadoop adaptors add the following dependencies:\n```gradle\n    compile group: 'nl.esciencecenter.xenon.adaptors', name: 'xenon-adaptors-cloud', version: '3.0.2'\n    compile group: 'nl.esciencecenter.xenon.adaptors', name: 'xenon-adaptors-grid', version: '3.0.0'\n    compile group: 'nl.esciencecenter.xenon.adaptors', name: 'xenon-adaptors-hadoop', version: '3.0.0'\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:04:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 33
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Simple examples",
        "parent_header": [
          "Xenon"
        ],
        "type": "Text_excerpt",
        "value": "Here are some examples of basic operations you can perform with Xenon: \n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Copying a file from a local filesystem to a remote filesystem",
        "parent_header": [
          "Xenon",
          "Simple examples"
        ],
        "type": "Text_excerpt",
        "value": "```java\nimport nl.esciencecenter.xenon.XenonException;\nimport nl.esciencecenter.xenon.credentials.PasswordCredential;\nimport nl.esciencecenter.xenon.filesystems.CopyMode;\nimport nl.esciencecenter.xenon.filesystems.CopyStatus;\nimport nl.esciencecenter.xenon.filesystems.FileSystem;\nimport nl.esciencecenter.xenon.filesystems.Path;\n\npublic class CopyFileLocalToSftpAbsolutePaths {\n\n    public static void main(String[] args) throws Exception {\n\n        // Use the file system adaptors to create file system representations; the remote file system\n        // requires credentials, so we need to create those too.\n        //\n        // Assume the remote system is actually just a Docker container (e.g.\n        // https://hub.docker.com/r/xenonmiddleware/ssh/), accessible via\n        // port 10022 on localhost\n        String location = \"localhost:10022\";\n        String username = \"xenon\";\n        char[] password = \"javagat\".toCharArray();\n        PasswordCredential credential = new PasswordCredential(username, password);\n        FileSystem localFileSystem = FileSystem.create(\"file\");\n        FileSystem remoteFileSystem = FileSystem.create(\"sftp\", location, credential);\n\n        // create Paths for the source and destination files, using absolute paths\n        Path sourceFile = new Path(\"/etc/passwd\");\n        Path destFile = new Path(\"/tmp/password\");\n\n        // create the destination file only if the destination path doesn't exist yet\n        CopyMode mode = CopyMode.CREATE;\n        boolean recursive = false;\n\n        // perform the copy and wait 1000 ms for the successful or otherwise\n        // completion of the operation\n        String copyId = localFileSystem.copy(sourceFile, remoteFileSystem, destFile, mode, recursive);\n        long timeoutMilliSecs = 1000;\n        CopyStatus copyStatus = localFileSystem.waitUntilDone(copyId, timeoutMilliSecs);\n\n        // throw any exceptions\n        XenonException copyException = copyStatus.getException();\n        if (copyException != null) {\n          throw copyException;\n        }\n    }\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xenon-middleware/xenon/master/README.md",
      "technique": "header_analysis"
    }
  ]
}