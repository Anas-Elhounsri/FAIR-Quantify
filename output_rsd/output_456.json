{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References and Acknowledgements",
        "parent_header": [
          "Variational Quantum Linear Solver Prototype"
        ],
        "type": "Text_excerpt",
        "value": "* [1] Variational Quantum Linear Solver, Carlos Bravo-Prieto, Ryan LaRose, M. Cerezo, Yigit Subasi, Lukasz Cincio, Patrick J. Coles, arXiv.1909.05820, 2020\n* [2] VQLS Tutorial: https://github.com/qiskit-community/qiskit-textbook/blob/main/content/ch-paper-implementations/vqls.ipynb\n\n----------------------------------------------------------------------------------------------------\n"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 0.8092907786359381,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References and Acknowledgements",
        "parent_header": [
          "Variational Quantum Linear Solver Prototype"
        ],
        "type": "Text_excerpt",
        "value": "* [1] Variational Quantum Linear Solver, Carlos Bravo-Prieto, Ryan LaRose, M. Cerezo, Yigit Subasi, Lukasz Cincio, Patrick J. Coles, arXiv.1909.05820, 2020\n* [2] VQLS Tutorial: https://github.com/qiskit-community/qiskit-textbook/blob/main/content/ch-paper-implementations/vqls.ipynb\n\n----------------------------------------------------------------------------------------------------\n"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "<!-- Copyright Contributors to the Qiskit project. -->\n\n# Code of Conduct\nAll members of this project agree to adhere to the Qiskit Code of Conduct listed at [https://github.com/Qiskit/qiskit/blob/master/CODE_OF_CONDUCT.md](https://github.com/Qiskit/qiskit/blob/master/CODE_OF_CONDUCT.md)\n\n----\n\nLicense: [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/),\nCopyright Contributors to Qiskit.\n"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/QuantumApplicationLab/vqls-prototype"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\n**We appreciate all kinds of help, so thank you!**\n\n## Contributing to Quantum Prototype Template\n\nSpecific details for contributing to this project are outlined below.\n\n### Reporting Bugs and Requesting Features\n\nUsers are encouraged to use GitHub Issues for reporting issues and requesting features.\n\n### Ask/Answer Questions and Discuss Quantum Prototype Template\n\nUsers are encouraged to use GitHub Discussions for engaging with researchers, developers, and other users regarding this quantum prototype and the provided examples.\n\n### Project Code Style\n\nCode in this repository should conform to PEP8 standards. Style/lint checks are run to validate this. Line length must be limited to no more than 88 characters.\n\n### Pull Request Checklist\n\nWhen submitting a pull request and you feel it is ready for review,\nplease ensure that:\n\n1. The code follows the _code style_ of this project and successfully\n   passes the _unit tests_. This prototype uses [Pylint](https://www.pylint.org) and\n   [PEP8](https://www.python.org/dev/peps/pep-0008) style guidelines.\n\n   You can run\n   ```shell script\n   tox -elint\n   ```\n   from the root of the repository clone for lint conformance checks.\n"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-07T17:15:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-14T12:39:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Variational Quantum Linear Solver Prototype for Qiskit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9886026945334613,
      "result": {
        "original_header": "Variational Quantum Linear Solver Prototype",
        "type": "Text_excerpt",
        "value": "This repository contains a prototype implementation of the variational quantum linear solver [1,2] that allows to solve linear systems, $A\\times x = b$, using variational circuits.  \n"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/QuantumApplicationLab/vqls-prototype/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/QuantumApplicationLab/vqls-prototype/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/tutorials/vqls.ipynb"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/tutorials/vqls.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/tutorials/vqls_runtime.ipynb"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/tutorials/vqls_runtime.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/how_tos/04_how_to_control_options.ipynb"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/how_tos/04_how_to_control_options.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/how_tos/02_how_to_use_circuits.ipynb"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/how_tos/02_how_to_use_circuits.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/how_tos/03_how_to_use_runtime.ipynb"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/how_tos/03_how_to_use_runtime.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/how_tos/01_how_to_solve_linear_system.ipynb"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/docs/how_tos/01_how_to_solve_linear_system.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/QuantumApplicationLab/vqls-prototype/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "QuantumApplicationLab/vqls-prototype"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Variational Quantum Linear Solver Prototype"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/./docs/sol.gif"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# VQLS Prototype Installation Guide\n\nThis document should walk you throgh the installation of the vqls prototpe\n\n## Setting up Python Environment\n\nCreate a new conda environement. The code has been tested with different python version and should work for version 3.8 onward.\n\n```\nconda create -n vqls python==3.9\nconda activate vqls\n``` \n\n## Installing Depencencies\n\nThe dependencies needed are all included in the `requirements.txt`. Therefore you do not need to install anything prior to the protoype \n\n## Installing Quantum Prototype Software\n\nClone the repository and pip install it.\n\n```\ngit clone https://github.com/QuantumApplicationLab/vqls-prototype\ncd vqls-prototype\npip install .\n```\n\n\n## Testing the Installation\n\nYou can test your installation by executing the tests\n\n```\ncd  tests\npytest\n```\n"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/INSTALL.md",
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/QuantumApplicationLab/vqls-prototype/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Variational Quantum Linear Solver Prototype",
          "References and Acknowledgements"
        ],
        "type": "Text_excerpt",
        "value": "[Apache License 2.0](LICENSE.txt)\n"
      },
      "source": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vqls-prototype"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "QuantumApplicationLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 199383,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QuantumApplicationLab/vqls-prototype/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "NicoRenaud",
          "type": "User"
        },
        "date_created": "2023-11-03T08:42:03Z",
        "date_published": "2023-11-03T09:14:26Z",
        "description": "This release add a lot of functionalities to the VQLS prototype:\r\n\r\n- Sparse input matrices can be Pauli decomposed in sub exponential time\r\n- Pairs of Pauli matrices can be contracted to limit the number of circuits that must be ran\r\n- Measurement optimization can further reduce the number of contracted Pauli pair circuits that needs to be measures\r\n- The Hadamard tests have been optimized to streamline execution of IBMQ\r\n- Overlap tests are fully supported\r\n- Quantum state tomography boosted solvers can be used to reduce noise \r\n",
        "html_url": "https://github.com/QuantumApplicationLab/vqls-prototype/releases/tag/0.2.0",
        "name": "v0.2.0",
        "release_id": 127828882,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/QuantumApplicationLab/vqls-prototype/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/QuantumApplicationLab/vqls-prototype/releases/127828882",
        "value": "https://api.github.com/repos/QuantumApplicationLab/vqls-prototype/releases/127828882",
        "zipball_url": "https://api.github.com/repos/QuantumApplicationLab/vqls-prototype/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:17:13",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ]
}