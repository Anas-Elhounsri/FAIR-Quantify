{
  "application_domain": [
    {
      "confidence": 28.0,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# YAML 1.2\n---\ncff-version: \"1.1.0\"\ntitle: \"nanomesh\"\nabstract: Create 2d and 3d meshes from experimental imaging data.\nauthors:\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Renaud\n    given-names: Nicolas\n    orcid: \"0000-0001-9589-2694\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Smeets\n    given-names: Stef\n    orcid: \"0000-0002-5413-9038\"\n  -\n    affiliation: \"University of Twente\"\n    family-names: \"Corbijn van Willenswaard\"\n    given-names: \"Lars J.\"\n    orcid: \"0000-0001-6554-1527\"\nversion: \"0.9.1\"\nrepository-code: \"https://github.com/hpgem/nanomesh\"\nidentifiers:\nkeywords:\n  - \"image-analysis\"\n  - \"finite-element-analysis\"\n  - \"materials-science\"\n  - \"mesh-generation\"\n  - \"microscopy\"\nmessage: \"If you use this software, please cite it using these metadata.\"\nlicense: \"Apache-2.0\"\n"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our\nproject and our community a harassment-free experience for everyone,\nregardless of age, body size, disability, ethnicity, gender identity and\nexpression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n-   Using welcoming and inclusive language\n-   Being respectful of differing viewpoints and experiences\n-   Gracefully accepting constructive criticism\n-   Focusing on what is best for the community\n-   Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n-   The use of sexualized language or imagery and unwelcome sexual\n    attention or advances\n-   Trolling, insulting/derogatory comments, and personal or political\n    attacks\n-   Public or private harassment\n-   Publishing others\\' private information, such as a physical or\n    electronic address, without explicit permission\n-   Other conduct which could reasonably be considered inappropriate in\n    a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of\nacceptable behavior and are expected to take appropriate and fair\ncorrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit,\nor reject comments, commits, code, wiki edits, issues, and other\ncontributions that are not aligned to this Code of Conduct, or to ban\ntemporarily or permanently any contributor for other behaviors that they\ndeem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public\nspaces when an individual is representing the project or its community.\nExamples of representing a project or community include using an\nofficial project e-mail address, posting via an official social media\naccount, or acting as an appointed representative at an online or\noffline event. Representation of a project may be further defined and\nclarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may\nbe reported by contacting the project team at\n<n.renaud@esciencecenter.nl>. All complaints will be reviewed and\ninvestigated and will result in a response that is deemed necessary and\nappropriate to the circumstances. The project team is obligated to\nmaintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted\nseparately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in\ngood faith may face temporary or permanent repercussions as determined\nby other members of the project\\'s leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor\nCovenant](https://www.contributor-covenant.org), version 1.4, available\nat\n<https://www.contributor-covenant.org/version/1/4/code-of-conduct.html>\n"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hpgem/nanomesh"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing guidelines\n\nWelcome! *Nanomesh* is an open-source project that aims to streamline segmenting image data and generating 2D or 3D meshes. If you're trying *Nanomesh* with your data, your experience, questions, bugs you encountered, and suggestions for improvement are important to the success of the project.\n\nWe have a [Code of Conduct](CODE_OF_CONDUCT.md), please follow it in all your interactions with the project.\n\n## Submitting changes\n\nWhen contributing to this repository, please first discuss the change you wish to make via an issue with the owners of this repository before making a change.\n\nContributions can come in the form of:\n\n- Bug fixes\n- New features\n- Improvement of existing code\n- Updates to the documentation\n- ... ?\n\nWe use the usual GitHub pull-request flow. For more info see [GitHub's own documentation](https://help.github.com/articles/using-pull-requests/).\n\nTypically this means:\n\n1. [Forking](https://docs.github.com/articles/about-forks) the repository and/or make a [new branch](https://docs.github.com/articles/about-branches)\n2. Making your changes\n3. Make sure that the tests pass and add your own\n4. Update the documentation is updated for new features\n5. Pushing the code back to Github\n6. [Create a new Pull Request](https://help.github.com/articles/creating-a-pull-request/)\n\nOne of the code owners will review your code and request changes if needed. Once your changes have been approved, your contributions will become part of *duqtools*. \ud83c\udf89\n\n## Development\n\nCheck out the [development notes](https://nanomesh.readthedocs.io/en/latest/development.html) to help get started with development.\n"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-09T20:43:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-21T18:14:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python workflow tool for generating meshes from 2D and 3D image data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9966427607537643,
      "result": {
        "original_header": "Nanomesh",
        "type": "Text_excerpt",
        "value": "Nanomesh is a Python workflow tool for generating meshes from 2D and 3D image data. It has an easy-to-use API that can help process and segment image data, generate quality meshes (triangle / tetrahedra), and write the data to many mesh formats. Nanomesh also contains tools to inspect the meshes, visualize them, and generate cell quality metrics. \n- Easy-to-use Python API\n- Segment and mesh 2D or 3D image data\n- Mesh visualization\n- Calculate and plot cell metrics\n- Export to many mesh formats \n"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9086091819998218,
      "result": {
        "original_header": "Development",
        "type": "Text_excerpt",
        "value": "Check out our [Contributing Guidelines](CONTRIBUTING.md#Getting-started-with-develoment) to get started with development.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://nanomesh.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hpgem/nanomesh/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_select_a_region_of_interest_using_ffts.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_select_a_region_of_interest_using_ffts.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_process_a_large_data_file.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_process_a_large_data_file.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_segment_image_data_using_local_thresholds.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_segment_image_data_using_local_thresholds.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_select_a_region_of_interest_from_an_image.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_select_a_region_of_interest_from_an_image.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_generate_a_triangle_mesh_from_a_2d_nanopore_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_generate_a_triangle_mesh_from_a_2d_nanopore_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_generate_a_tetrahedral_mesh_from_3d_nanopores_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_generate_a_tetrahedral_mesh_from_3d_nanopores_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_calculate_cell_quality_metrics.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_calculate_cell_quality_metrics.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_examine_nanopore_properties_using_regionprops.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/nanopores/how_to_examine_nanopore_properties_using_regionprops.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/other/hello_world.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/other/hello_world.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/other/make_banner.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/other/make_banner.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/finite_elements/how_to_poisson_with_getfem.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/finite_elements/how_to_poisson_with_getfem.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/finite_elements/how_to_use_with_sfepy_horse.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/finite_elements/how_to_use_with_sfepy_horse.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/finite_elements/how_to_poisson_with_scikit-fem.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/finite_elements/how_to_poisson_with_scikit-fem.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_pad_a_3d_mesh.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_pad_a_3d_mesh.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_pad_a_2d_mesh.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_pad_a_2d_mesh.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_generate_a_tetrahedral_mesh_from_3d_cells_image.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_generate_a_tetrahedral_mesh_from_3d_cells_image.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_customize_regions_in_2d_mesh.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_customize_regions_in_2d_mesh.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_crop_meshes.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_crop_meshes.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_do_3d_multi-domain_meshing_using_simulated_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_do_3d_multi-domain_meshing_using_simulated_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_generate_a_triangle_mesh_from_a_2d_image.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/examples/how_to_generate_a_triangle_mesh_from_a_2d_image.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hpgem/nanomesh/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hpgem/nanomesh"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Nanomesh"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/test_notebooks.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/311460276"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/10.21105/joss.04654/status.svg"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/./notebooks/other/banner.png"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/docs/_static/meshing_dash.png"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/docs/_static/metrics_dash.png"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/other/hello_world_files/hello_world_5_1.png"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/other/hello_world_files/hello_world_9_1.png"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/notebooks/other/hello_world_files/hello_world_11_1.png"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Nanomesh"
        ],
        "type": "Text_excerpt",
        "value": "One of the goals for Nanomesh is that it is easy to install.\nThis means that all dependencies are available from [PyPi](https://pypi.org).\n\nIf you use conda, it is advised to create a new environment:\n\n```\nconda create -n nanomesh python=3.9\nconda activate nanomesh\n```\n\nInstall nanomesh:\n\n```\npip install nanomesh\n```\n\nFor the full installation instructions, see the [installation guidelines](https://nanomesh.readthedocs.io/en/latest/install.html).\n"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9978495109321535,
      "result": {
        "original_header": "Nanomesh",
        "type": "Text_excerpt",
        "value": "Documentation: https://nanomesh.readthedocs.io/en/latest/ \n"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hpgem/nanomesh/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "finite-element-methods, image-processing, meshing, microscopy, python"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nanomesh"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "hpgem"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/nanomesh/"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 51239575,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 220256,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1047,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PowerShell",
        "size": 1040,
        "type": "Programming_language",
        "value": "PowerShell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stefsmeets",
          "type": "User"
        },
        "date_created": "2022-10-07T12:34:08Z",
        "date_published": "2022-10-07T12:35:35Z",
        "description": "Minor release updating documentation and conda dependencies.\r\n\r\n## What's Changed\r\n* Add tetgen dependency from conda by @stefsmeets in https://github.com/hpgem/nanomesh/pull/287\r\n* Update contributing guidelines by @stefsmeets in https://github.com/hpgem/nanomesh/pull/288\r\n\r\n**Full Changelog**: https://github.com/hpgem/nanomesh/compare/0.9.0...0.9.1",
        "html_url": "https://github.com/hpgem/nanomesh/releases/tag/0.9.1",
        "name": "0.9.1",
        "release_id": 79266524,
        "tag": "0.9.1",
        "tarball_url": "https://api.github.com/repos/hpgem/nanomesh/tarball/0.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/hpgem/nanomesh/releases/79266524",
        "value": "https://api.github.com/repos/hpgem/nanomesh/releases/79266524",
        "zipball_url": "https://api.github.com/repos/hpgem/nanomesh/zipball/0.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stefsmeets",
          "type": "User"
        },
        "date_created": "2022-06-07T09:47:50Z",
        "date_published": "2022-06-07T09:49:11Z",
        "description": "## What's Changed\r\n* Streamline and finetune dashboards by @stefsmeets in https://github.com/hpgem/nanomesh/pull/276\r\n* Move dashboards to own repo by @stefsmeets in https://github.com/hpgem/nanomesh/pull/279\r\n* Update dependencies by @github-actions in https://github.com/hpgem/nanomesh/pull/284\r\n* Update pre-commit hooks by @github-actions in https://github.com/hpgem/nanomesh/pull/283\r\n* Add missing documentation by @stefsmeets in https://github.com/hpgem/nanomesh/pull/285\r\n\r\n\r\n**Full Changelog**: https://github.com/hpgem/nanomesh/compare/0.8.1...0.9.0",
        "html_url": "https://github.com/hpgem/nanomesh/releases/tag/0.9.0",
        "name": "0.9.0",
        "release_id": 68805655,
        "tag": "0.9.0",
        "tarball_url": "https://api.github.com/repos/hpgem/nanomesh/tarball/0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hpgem/nanomesh/releases/68805655",
        "value": "https://api.github.com/repos/hpgem/nanomesh/releases/68805655",
        "zipball_url": "https://api.github.com/repos/hpgem/nanomesh/zipball/0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stefsmeets",
          "type": "User"
        },
        "date_created": "2022-05-02T12:51:54Z",
        "date_published": "2022-05-02T12:54:19Z",
        "description": "## What's Changed\r\n* Add missing sample files for data submodule to distribution by @stefsmeets in https://github.com/hpgem/nanomesh/pull/278\r\n\r\n**Full Changelog**: https://github.com/hpgem/nanomesh/compare/0.8.0...0.8.1",
        "html_url": "https://github.com/hpgem/nanomesh/releases/tag/0.8.1",
        "name": "0.8.1",
        "release_id": 65807236,
        "tag": "0.8.1",
        "tarball_url": "https://api.github.com/repos/hpgem/nanomesh/tarball/0.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/hpgem/nanomesh/releases/65807236",
        "value": "https://api.github.com/repos/hpgem/nanomesh/releases/65807236",
        "zipball_url": "https://api.github.com/repos/hpgem/nanomesh/zipball/0.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stefsmeets",
          "type": "User"
        },
        "date_created": "2022-04-29T14:21:36Z",
        "date_published": "2022-04-29T14:31:50Z",
        "description": "## Highlights\r\n\r\n- Dashboards! For meshing! It's a work in progress, check it out [here](https://github.com/hpgem/nanomesh/tree/master/dash).\r\n\r\n## What's Changed\r\n* Update documentation by @stefsmeets in https://github.com/hpgem/nanomesh/pull/271\r\n* Add function to plot set of points to plotting submodule by @stefsmeets in https://github.com/hpgem/nanomesh/pull/272\r\n* Remove thin polygons with area = 0 causing the program to hang by @stefsmeets in https://github.com/hpgem/nanomesh/pull/273\r\n* Add dashboards for generating meshes and mesh metrics by @stefsmeets in https://github.com/hpgem/nanomesh/pull/274\r\n\r\n\r\n**Full Changelog**: https://github.com/hpgem/nanomesh/compare/0.7.0...0.8.0",
        "html_url": "https://github.com/hpgem/nanomesh/releases/tag/0.8.0",
        "name": "0.8.0",
        "release_id": 65686708,
        "tag": "0.8.0",
        "tarball_url": "https://api.github.com/repos/hpgem/nanomesh/tarball/0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hpgem/nanomesh/releases/65686708",
        "value": "https://api.github.com/repos/hpgem/nanomesh/releases/65686708",
        "zipball_url": "https://api.github.com/repos/hpgem/nanomesh/zipball/0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stefsmeets",
          "type": "User"
        },
        "date_created": "2022-04-07T07:15:31Z",
        "date_published": "2022-04-07T08:04:46Z",
        "description": "## Highlights\r\n\r\n- Simplified [api](https://nanomesh.readthedocs.io/en/latest/api.html)\r\n- Improved label specification [for plots](https://nanomesh.readthedocs.io/en/latest/nanomesh/plotting.html)\r\n- New examples demonstrating interface with [finite element libraries](https://nanomesh.readthedocs.io/en/latest/examples/index.html#finite-elements)\r\n- New method to [crop meshes](https://nanomesh.readthedocs.io/en/latest/examples/nanopores_how_to_crop_meshes.html?highlight=crop)\r\n\r\n## What's Changed\r\n* Simplify api by @stefsmeets in https://github.com/hpgem/nanomesh/pull/250\r\n* Use jupytext to store source code for notebooks by @stefsmeets in https://github.com/hpgem/nanomesh/pull/251\r\n* Update documentation by @stefsmeets in https://github.com/hpgem/nanomesh/pull/252\r\n* Add example to readme.md and update documentation by @stefsmeets in https://github.com/hpgem/nanomesh/pull/253\r\n* Add flowchart with class hierarchy by @stefsmeets in https://github.com/hpgem/nanomesh/pull/254\r\n* Update dependencies by @github-actions in https://github.com/hpgem/nanomesh/pull/256\r\n* Update pre-commit hooks by @github-actions in https://github.com/hpgem/nanomesh/pull/255\r\n* Demonstrate Nanomesh workflow in combination with Sfepy by @stefsmeets in https://github.com/hpgem/nanomesh/pull/259\r\n* Refactor triangulate by @stefsmeets in https://github.com/hpgem/nanomesh/pull/260\r\n* Add method to remove points that do not belong to any cells by @stefsmeets in https://github.com/hpgem/nanomesh/pull/263\r\n* Demonstrate Nanomesh workflow in combination with scikit-fem by @stefsmeets in https://github.com/hpgem/nanomesh/pull/262\r\n* Add notebook with getfem example by @stefsmeets in https://github.com/hpgem/nanomesh/pull/264\r\n* Improve label specification in mesh plots by @stefsmeets in https://github.com/hpgem/nanomesh/pull/265\r\n* Reduce size of large data volumes used for testing by @stefsmeets in https://github.com/hpgem/nanomesh/pull/266\r\n* Add method to crop meshes by @stefsmeets in https://github.com/hpgem/nanomesh/pull/267\r\n* Update pre-commit hooks by @github-actions in https://github.com/hpgem/nanomesh/pull/268\r\n* Update dependencies by @github-actions in https://github.com/hpgem/nanomesh/pull/269\r\n\r\n\r\n**Full Changelog**: https://github.com/hpgem/nanomesh/compare/0.6.0...0.7.0",
        "html_url": "https://github.com/hpgem/nanomesh/releases/tag/0.7.0",
        "name": "0.7.0",
        "release_id": 63832329,
        "tag": "0.7.0",
        "tarball_url": "https://api.github.com/repos/hpgem/nanomesh/tarball/0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hpgem/nanomesh/releases/63832329",
        "value": "https://api.github.com/repos/hpgem/nanomesh/releases/63832329",
        "zipball_url": "https://api.github.com/repos/hpgem/nanomesh/zipball/0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stefsmeets",
          "type": "User"
        },
        "date_created": "2022-03-01T16:35:42Z",
        "date_published": "2022-03-03T12:35:58Z",
        "description": "## Highlights\r\n\r\n* Revised documentation with a broader range of examples\r\n* Better handling of labels and region markers\r\n* More consistent mesh / meshing API\r\n\r\n## What's Changed\r\n* Return `MeshContainer` from `tetrahedralize` by @stefsmeets in https://github.com/hpgem/nanomesh/pull/166\r\n* Label padding with strings for 3D meshes by @stefsmeets in https://github.com/hpgem/nanomesh/pull/187\r\n* Update canonical representation for common objects by @stefsmeets in https://github.com/hpgem/nanomesh/pull/188\r\n* Refactor tests by @stefsmeets in https://github.com/hpgem/nanomesh/pull/190\r\n* Move `simple_triangulate` to own submodule by @stefsmeets in https://github.com/hpgem/nanomesh/pull/193\r\n* Add constraint attribute to region marker by @stefsmeets in https://github.com/hpgem/nanomesh/pull/192\r\n* Label boundaries in 2D plot separately by @stefsmeets in https://github.com/hpgem/nanomesh/pull/191\r\n* Support python 3.9 by @stefsmeets in https://github.com/hpgem/nanomesh/pull/63\r\n* Update dependencies by @github-actions in https://github.com/hpgem/nanomesh/pull/207\r\n* Update pre-commit hooks by @github-actions in https://github.com/hpgem/nanomesh/pull/206\r\n* Revert readthedocs version to 3.8 by @stefsmeets in https://github.com/hpgem/nanomesh/pull/208\r\n* Implement segment markers to track internal boundaries by @stefsmeets in https://github.com/hpgem/nanomesh/pull/204\r\n* Add options for plotting labels on 2D mesh plots by @stefsmeets in https://github.com/hpgem/nanomesh/pull/211\r\n* Fix bug in legend deduplication by @stefsmeets in https://github.com/hpgem/nanomesh/pull/212\r\n* Clean up plotting API by @stefsmeets in https://github.com/hpgem/nanomesh/pull/213\r\n* Update dependencies by @github-actions in https://github.com/hpgem/nanomesh/pull/215\r\n* Fix color cycle for 2D triangle plots by @stefsmeets in https://github.com/hpgem/nanomesh/pull/217\r\n* Improve labeling for 3D regions by @stefsmeets in https://github.com/hpgem/nanomesh/pull/218\r\n* Add options to show/hide labels and customize colors in mesh plot by @stefsmeets in https://github.com/hpgem/nanomesh/pull/219\r\n* Refactor 2D mesh plotting functions by @stefsmeets in https://github.com/hpgem/nanomesh/pull/220\r\n* Refactor code and clean up API by @stefsmeets in https://github.com/hpgem/nanomesh/pull/223\r\n* Add option to hide region marker in plot by @stefsmeets in https://github.com/hpgem/nanomesh/pull/229\r\n* Fix issues with documentation by @stefsmeets in https://github.com/hpgem/nanomesh/pull/226\r\n* Add decorator/metaclass to re-use docstrings by @stefsmeets in https://github.com/hpgem/nanomesh/pull/234\r\n* Rename function and update documentation for plotting by @stefsmeets in https://github.com/hpgem/nanomesh/pull/236\r\n* Add Hello world example to documentation by @stefsmeets in https://github.com/hpgem/nanomesh/pull/237\r\n* Use sample data from skimage and revise notebooks by @stefsmeets in https://github.com/hpgem/nanomesh/pull/238\r\n* Rename base types by @stefsmeets in https://github.com/hpgem/nanomesh/pull/240\r\n* Add class to manipulate list of region markers by @stefsmeets in https://github.com/hpgem/nanomesh/pull/243\r\n* Improve compatibility with GMSH by using 1-based indexing for region markers by @stefsmeets in https://github.com/hpgem/nanomesh/pull/244\r\n* Update CITATION.cff by @stefsmeets in https://github.com/hpgem/nanomesh/pull/242\r\n* Use `__init_subclass__` to create registry for derived classes by @stefsmeets in https://github.com/hpgem/nanomesh/pull/245\r\n\r\n\r\n**Full Changelog**: https://github.com/hpgem/nanomesh/compare/0.5.0...0.6.0",
        "html_url": "https://github.com/hpgem/nanomesh/releases/tag/0.6.0",
        "name": "0.6.0",
        "release_id": 60883602,
        "tag": "0.6.0",
        "tarball_url": "https://api.github.com/repos/hpgem/nanomesh/tarball/0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hpgem/nanomesh/releases/60883602",
        "value": "https://api.github.com/repos/hpgem/nanomesh/releases/60883602",
        "zipball_url": "https://api.github.com/repos/hpgem/nanomesh/zipball/0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stefsmeets",
          "type": "User"
        },
        "date_created": "2022-01-20T14:29:38Z",
        "date_published": "2022-01-20T14:33:49Z",
        "description": "## What's Changed\r\n* Implement field names for `Mesh` types by @stefsmeets in https://github.com/hpgem/nanomesh/pull/183\r\n* Move 2D padding to `Mesher2D` from `TriangleMesh` by @stefsmeets in https://github.com/hpgem/nanomesh/pull/179\r\n* Update dependencies and remove `open3d`/`trimesh` interface functions by @stefsmeets in https://github.com/hpgem/nanomesh/pull/159\r\n* Add workflow to update dependencies by @stefsmeets in https://github.com/hpgem/nanomesh/pull/160\r\n* Fix workflow for updating dependencies by @stefsmeets in https://github.com/hpgem/nanomesh/pull/163\r\n* Consolidate testing workflows by @stefsmeets in https://github.com/hpgem/nanomesh/pull/165\r\n* Update dependencies by @github-actions in https://github.com/hpgem/nanomesh/pull/167\r\n* Fix syntax error (removed api) by @stefsmeets in https://github.com/hpgem/nanomesh/pull/168\r\n* Fix broken tests by @stefsmeets in https://github.com/hpgem/nanomesh/pull/169\r\n* Refactor `generate_contours` in `Mesher2D` by @stefsmeets in https://github.com/hpgem/nanomesh/pull/171\r\n* Add `__init__.py` to nanomash.mpl by @Laar in https://github.com/hpgem/nanomesh/pull/172\r\n* Fix `KeyError` when retrieving labels by @stefsmeets in https://github.com/hpgem/nanomesh/pull/174\r\n* Derive default label correctly with any cell data input by @stefsmeets in https://github.com/hpgem/nanomesh/pull/177\r\n* Fix deprecated API usage by @stefsmeets in https://github.com/hpgem/nanomesh/pull/182\r\n\r\n## New Contributors\r\n* @github-actions made their first contribution in https://github.com/hpgem/nanomesh/pull/167\r\n\r\n**Full Changelog**: https://github.com/hpgem/nanomesh/compare/0.4.0...0.5.0",
        "html_url": "https://github.com/hpgem/nanomesh/releases/tag/0.5.0",
        "name": "0.5.0",
        "release_id": 57580908,
        "tag": "0.5.0",
        "tarball_url": "https://api.github.com/repos/hpgem/nanomesh/tarball/0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hpgem/nanomesh/releases/57580908",
        "value": "https://api.github.com/repos/hpgem/nanomesh/releases/57580908",
        "zipball_url": "https://api.github.com/repos/hpgem/nanomesh/zipball/0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stefsmeets",
          "type": "User"
        },
        "date_created": "2021-12-07T12:38:56Z",
        "date_published": "2021-12-07T12:41:42Z",
        "description": "## What's Changed\r\n* Fixes the command to run tetgen by @Laar in https://github.com/hpgem/nanomesh/pull/142\r\n* Make tetgen available on github actions by @stefsmeets in https://github.com/hpgem/nanomesh/pull/143\r\n* Update installation instructions\r\n* Add new MeshContainer class by @stefsmeets in https://github.com/hpgem/nanomesh/pull/147\r\n* Label sets of faces (2D) by @stefsmeets in https://github.com/hpgem/nanomesh/pull/145\r\n* Revise read/write methods on MeshContainer by @stefsmeets in https://github.com/hpgem/nanomesh/pull/151\r\n* Optimize workflow for local thresholding by @stefsmeets in https://github.com/hpgem/nanomesh/pull/152\r\n* Implement RegionMarker dataclass to track region markers by @stefsmeets in https://github.com/hpgem/nanomesh/pull/155\r\n* Remove nbstripout and update hooks by @stefsmeets in https://github.com/hpgem/nanomesh/pull/157\r\n* Bump version to 0.4.0 by @stefsmeets in https://github.com/hpgem/nanomesh/pull/154\r\n\r\n\r\n**Full Changelog**: https://github.com/hpgem/nanomesh/compare/0.3.0...0.4.0",
        "html_url": "https://github.com/hpgem/nanomesh/releases/tag/0.4.0",
        "name": "0.4.0",
        "release_id": 54789738,
        "tag": "0.4.0",
        "tarball_url": "https://api.github.com/repos/hpgem/nanomesh/tarball/0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hpgem/nanomesh/releases/54789738",
        "value": "https://api.github.com/repos/hpgem/nanomesh/releases/54789738",
        "zipball_url": "https://api.github.com/repos/hpgem/nanomesh/zipball/0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stefsmeets",
          "type": "User"
        },
        "date_created": "2021-11-11T12:56:25Z",
        "date_published": "2021-11-11T12:59:30Z",
        "description": "## What's Changed\r\n* Rename vertices to points, faces to cells by @stefsmeets in https://github.com/hpgem/nanomesh/pull/126\r\n* Split off generator code by @stefsmeets in https://github.com/hpgem/nanomesh/pull/127,\r\n  generator code now lives here: https://github.com/hpgem/generators\r\n* Remove dependency on pygalmesh by @stefsmeets in https://github.com/hpgem/nanomesh/pull/128\r\n* Set up action for publishing to pypi by @stefsmeets in https://github.com/hpgem/nanomesh/pull/104\r\n* Fix corner contour closure by @Laar in https://github.com/hpgem/nanomesh/pull/132\r\n* Bugfix: prevent multiple points from being created  by @stefsmeets in https://github.com/hpgem/nanomesh/pull/133\r\n* Add function to pad 3d mesh by @stefsmeets in https://github.com/hpgem/nanomesh/pull/134\r\n* Update documentation / installation instructions by @stefsmeets in https://github.com/hpgem/nanomesh/pull/139\r\n* Refactor meshing code by @stefsmeets in https://github.com/hpgem/nanomesh/pull/140\r\n\r\n\r\n**Full Changelog**: https://github.com/hpgem/nanomesh/compare/0.2.0...0.3.0",
        "html_url": "https://github.com/hpgem/nanomesh/releases/tag/0.3.0",
        "name": "0.3.0",
        "release_id": 53166026,
        "tag": "0.3.0",
        "tarball_url": "https://api.github.com/repos/hpgem/nanomesh/tarball/0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hpgem/nanomesh/releases/53166026",
        "value": "https://api.github.com/repos/hpgem/nanomesh/releases/53166026",
        "zipball_url": "https://api.github.com/repos/hpgem/nanomesh/zipball/0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stefsmeets",
          "type": "User"
        },
        "date_created": "2021-10-12T12:33:45Z",
        "date_published": "2021-10-12T12:35:48Z",
        "description": "## Recent additions: \r\n\r\n- Use static renderer for mesh output on readthedocs (#121)\r\n- Fix API inconsistencies (#114)\r\n- Fix labels in `TetraMesh.show_submesh()`, and document usage in [notebook](https://nanomesh.readthedocs.io/en/latest/examples/How%20to%20generate%20a%20tetrahedral%20mesh%20from%20a%203D%20image.html#Mesh-evaluation) (#112)\r\n- Implement multi-domain meshing for 3D data using `tetgen`, see [example notebook](https://nanomesh.readthedocs.io/en/latest/examples/How%20to%20generate%20a%20tetrahedral%20mesh%20from%20a%203D%20image.html) (#105, #107, #108)\r\n- Add function to pad 2D mesh and example [notebook](https://nanomesh.readthedocs.io/en/latest/examples/How%20to%20pad%20a%202D%20mesh.html) (#103)\r\n- Update documentation for [minimum_bounding_rectangle()](https://nanomesh.readthedocs.io/en/latest/nanomesh.roi2d.html?highlight=minimum_bounding_rectangle#nanomesh.roi2d.minimum_bounding_rectangle) (#102)\r\n- Add [notebook demonstrating regionprops](https://nanomesh.readthedocs.io/en/latest/examples/How%20to%20examine%20nanopore%20properties%20using%20regionprops.html) to examine pore properties from 2D image (#101)\r\n- Add [banner](https://github.com/hpgem/nanomesh/tree/master/notebooks/banner) for project in the [readme](https://github.com/hpgem/nanomesh/blob/master/README.md) (#96)\r\n- Implement aligned region of interest selection using FFTs (#94)\r\n- Set up [bump2version](https://github.com/c4urself/bump2version) to version bump with a single command (#95)",
        "html_url": "https://github.com/hpgem/nanomesh/releases/tag/0.2.0",
        "name": "0.2.0",
        "release_id": 50799759,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/hpgem/nanomesh/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hpgem/nanomesh/releases/50799759",
        "value": "https://api.github.com/repos/hpgem/nanomesh/releases/50799759",
        "zipball_url": "https://api.github.com/repos/hpgem/nanomesh/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:58:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 31
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Show me an example!",
        "parent_header": [
          "Nanomesh"
        ],
        "type": "Text_excerpt",
        "value": "This example shows the workflow for generating a mesh from segmented data, and demonstrates a few of the features of Nanomesh. It uses a synthetic binary image with several rounded blob-like objects generated by [skimage](https://scikit-image.org/).\n\n```pycon\n>>> from skimage.data import binary_blobs\n>>> from nanomesh import Image\n>>>\n>>> blobs = binary_blobs(length=100, volume_fraction=0.25, seed=2102)\n>>> plane = Image(blobs)\n>>>\n>>> print(plane)\nPlane(shape=(100, 100), range=(False,True), dtype=bool)\n```\n\n[`Image`](https://nanomesh.readthedocs.io/en/latest/api.image_data.html#nanomesh.Image) is essentially a container for a [`numpy`](https://numpy.org/) array with some methods for image segmentation and visualization.\n\n```pycon\n>>> plane.show()\n<AxesSubplot:xlabel='x', ylabel='y'>\n```\n\n<img src=\"notebooks/other/hello_world_files/hello_world_5_1.png\" alt=\"drawing\" width=\"50%\"/>\n\nGenerating a mesh from image data is simple in Nanomesh using [`Plane.generate_mesh()`](https://nanomesh.readthedocs.io/en/latest/api.meshing.html#nanomesh.plane2mesh). The options `opts` are passed to the triangulation function ([`nanomesh.triangulate`](https://nanomesh.readthedocs.io/en/latest/api.helpers.html#nanomesh.triangulate)). In this example, we use `q30` to generate a quality mesh with minimum angles of 30\u00b0, and `a50` to limit the triangle size to 50 pixels.\n\nThe returned `mesh` is a [`MeshContainer`](https://nanomesh.readthedocs.io/en/latest/api.mesh_data.html#nanomesh.MeshContainer) that contains the generated triangles and line segments.\n\n```pycon\n>>> mesh = plane.generate_mesh(opts='q30a10')\n>>> mesh\n<MeshContainer>\n  Number of points: 932\n  Number of cells:\n    triangle: 1754\n    line: 2685\n  Point data: physical\n  Cell data: physical\n  Field data: feature, background\n```\n\nIn the next cell, we plot the triangles.\n\n```pycon\n>>> mesh.plot('triangle')\n<AxesSubplot:title={'center':'triangle mesh'}>\n```\n\n<img src=\"notebooks/other/hello_world_files/hello_world_9_1.png\" alt=\"drawing\" width=\"50%\"/>\n\nWith the [metrics submodule](https://nanomesh.readthedocs.io/en/latest/api.metrics.html), Nanomesh can also calculate cell quality metrics and show them as a [colored triangle](https://nanomesh.readthedocs.io/en/latest/api.metrics.html#nanomesh.metrics.plot2d) or [histogram plot](https://nanomesh.readthedocs.io/en/latest/api.metrics.html#nanomesh.metrics.histogram).\n\n```pycon\n>>> from nanomesh import metrics\n>>> triangle_mesh = mesh.get('triangle')\n>>> metrics.histogram(triangle_mesh, metric='radius_ratio')\n<AxesSubplot:title={'center':'Histogram of radius ratio'}, xlabel='Radius ratio', ylabel='frequency'>\n```\n\n<img src=\"notebooks/other/hello_world_files/hello_world_11_1.png\" alt=\"drawing\" width=\"50%\"/>\n\nNanomesh uses [meshio](https://github.com/nschloe/meshio) to write data to most meshing formats.\n\n```pycon\n>>> mesh.write('mesh.vtk')\nWarning: VTK requires 3D points, but 2D points given. Appending 0 third component.\n```\n\nThat's it! There is a lot more that Nanomesh can do, check out [the examples](https://nanomesh.readthedocs.io/en/latest/examples/index.html) for an overview.\n"
      },
      "source": "https://raw.githubusercontent.com/hpgem/nanomesh/main/README.md",
      "technique": "header_analysis"
    }
  ]
}