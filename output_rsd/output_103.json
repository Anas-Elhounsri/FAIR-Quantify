{
  "application_domain": [
    {
      "confidence": 37.48,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8135744498397134,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: >-\n  LUE scientific database and environmental modelling\n  framework\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\ntype: software\nauthors:\n  - given-names: Kor\n    family-names: de Jong\n    orcid: 'https://orcid.org/0000-0002-8650-9961'\n    affiliation: Utrecht University\n  - given-names: Oliver\n    family-names: Schmitz\n    orcid: 'https://orcid.org/0000-0002-0493-851X'\n    affiliation: Utrecht University\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.5535685\nrepository-code: 'https://github.com/computationalgeography/lue'\nurl: 'https://lue.computationalgeography.org/'\nlicense: MIT\n"
      },
      "source": "https://raw.githubusercontent.com/computationalgeography/lue/master/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/computationalgeography/lue"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\nThere are various ways to contribute to the development of LUE. Please visit the [Contributing\npage](https://lue.computationalgeography.org/doc/contribute) in the LUE documentation, which contains\ninformation about all of these.\n"
      },
      "source": "https://raw.githubusercontent.com/computationalgeography/lue/master/.github/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-06-22T12:52:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-30T05:56:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LUE Scientific Database and Environmental Modelling Framework"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9912473606626897,
      "result": {
        "original_header": "LUE",
        "type": "Text_excerpt",
        "value": "LUE scientific database and environmental modelling framework \nLUE is software for storing and manipulating large amounts of information\nfor large amounts of objects. This information can optionally have a\nreference in time and space. For example, LUE can represent collections of\nwandering animals and their properties, some of which are changing through\ntime, or the elevation of the surface of one or multiple areas. The software\nis useful, and currently mainly used, in the context of environmental\nmodelling of biological and physical systems, represented by agents and\nfields, but we make sure that the software is as generic as possible,\nallowing it to be useful in other contexts as well. \nCurrently, LUE contains two main parts: *LUE data model* and *LUE\nframework*. LUE data model is an implementation of the LUE physical data\nmodel, which allows users to perform I/O to the \"LUE Scientific Database\".\nIt allows for the storage of large amounts of objects and their location\nin time and space, and their properties. \nLUE framework is a collection of data types and algorithms that can be\ncombined to translate large amounts of information. It allows computations\nto be performed on hardware ranging from laptops to compute clusters,\nwithout the user having to know about high-performance computing and\nthe related technology. \n"
      },
      "source": "https://raw.githubusercontent.com/computationalgeography/lue/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/computationalgeography/lue/wiki"
      },
      "source": "https://raw.githubusercontent.com/computationalgeography/lue/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/computationalgeography/lue/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/computationalgeography/lue/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "computationalgeography/lue"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LUE"
      },
      "source": "https://raw.githubusercontent.com/computationalgeography/lue/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/source/framework/algorithm/benchmark/focal_mean_benchmark.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/source/framework/case_study/wildfire/postprocess_results.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/source/framework/case_study/wildfire/lue_wildfire-gransasso.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/source/framework/case_study/wildfire/lue_wildfire-snowdon.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/source/framework/case_study/wildfire/lue_wildfire-eejit.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/source/framework/case_study/airpolution/benchmark/benchmark.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/source/framework/case_study/airpolution/benchmark/eejit.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/source/framework/case_study/land_use/lue_change_land_use.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/environment/conda/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/environment/script/generate_tags.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/environment/script/verify_conda_package.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/environment/script/lue_to_svg.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://www.mypy-lang.org/static/mypy_badge.svg"
      },
      "source": "https://raw.githubusercontent.com/computationalgeography/lue/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "LUE"
        ],
        "type": "Text_excerpt",
        "value": "[![Anaconda-Server Badge](https://anaconda.org/conda-forge/lue/badges/version.svg)](https://anaconda.org/conda-forge/lue)\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/lue/badges/platforms.svg)](https://anaconda.org/conda-forge/lue)\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/lue/badges/downloads.svg)](https://anaconda.org/conda-forge/lue)\n\nThe easiest way to install LUE is using Conda:\n\n```bash\nconda install -c conda-forge lue\n```\n\nMore information about how to install LUE can be found in the [LUE\ndocumentation](https://lue.computationalgeography.org/doc).\n"
      },
      "source": "https://raw.githubusercontent.com/computationalgeography/lue/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9663764501978894,
      "result": {
        "original_header": "LUE",
        "type": "Text_excerpt",
        "value": "- [Homepage](https://lue.computationalgeography.org)\n    - [Documentation](https://lue.computationalgeography.org/doc)\n    - [Publications](https://lue.computationalgeography.org/publication)\n- [R&D team](https://www.computationalgeography.org)\n- [![Chat with us on Matrix](https://img.shields.io/badge/chat-on%20Matrix-%230098D4)](https://matrix.to/#/#lue:matrix.org)\n  (users)\n- [![Chat with us on Matrix](https://img.shields.io/badge/chat-on%20Matrix-%230098D4)](https://matrix.to/#/#lue-dev:matrix.org)\n  (developers) \n"
      },
      "source": "https://raw.githubusercontent.com/computationalgeography/lue/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/computationalgeography/lue/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "amt, asynchronous-tasks, cartographic-modelling, computational-geography, distributed-computing, environmental-modelling, hpc, lue, parallel-computing, scientific-database"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Third-party licenses\n\nLUE uses the following third-party libraries. The specific set depends on the targets built (see [](#install-source)):\n\n- [Boost](https://www.boost.org/)\n- [GDAL](https://gdal.org/)\n- [GLFW](https://www.glfw.org/)\n- [HDF5](https://www.hdfgroup.org/solutions/hdf5/)\n- [HPX](https://hpx.stellar-group.org/)\n- [ImGui](https://github.com/ocornut/imgui)\n- [NumPy](https://numpy.org/)\n- [Pybind11](https://pybind11.readthedocs.io/en/stable/)\n- [Vulkan](https://www.vulkan.org/)\n- [docopt](https://github.com/docopt/docopt)\n- [fmt](https://fmt.dev/latest/index.html)\n- [nlohmann-json3-dev](https://github.com/nlohmann/json)\n\nThe licenses for these libraries can be found in the\n[license](https://github.com/computationalgeography/lue/tree/master/license) directory of the LUE source\nrepository.\n"
      },
      "source": "https://raw.githubusercontent.com/computationalgeography/lue/master/document/doc/about/license.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lue"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "computationalgeography"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 5848208,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 559041,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 231885,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 53739,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 13708,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 11824,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 7594,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 867,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 521,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/computationalgeography/lue/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kordejong",
          "type": "User"
        },
        "date_created": "2024-08-23T14:13:34Z",
        "date_published": "2024-08-27T07:30:49Z",
        "description": "## What's Changed\r\n* Bump jinja2 from 3.1.2 to 3.1.3 in /environment/configuration by @dependabot in https://github.com/computationalgeography/lue/pull/605\r\n* Gh608 by @OliverSchmitz in https://github.com/computationalgeography/lue/pull/631\r\n* Use FindPython instead of FindPython3 by @kordejong in https://github.com/computationalgeography/lue/pull/634\r\n* Create contribution guideline by @kordejong in https://github.com/computationalgeography/lue/pull/635\r\n* Fix all warnings generated in C/I builds by @kordejong in https://github.com/computationalgeography/lue/pull/640\r\n* Support fetching docopt.cpp ourselves by @kordejong in https://github.com/computationalgeography/lue/pull/642\r\n* Bump jinja2 from 3.1.3 to 3.1.4 in /environment/configuration by @dependabot in https://github.com/computationalgeography/lue/pull/643\r\n* Port to HPX 1.10.0 by @kordejong in https://github.com/computationalgeography/lue/pull/649\r\n* Add .editorconfig to repository by @kordejong in https://github.com/computationalgeography/lue/pull/651\r\n* Partition shape is not parsed correctly in `lue_calculate` by @kordejong in https://github.com/computationalgeography/lue/pull/652\r\n* Bug report template added by @OliverSchmitz in https://github.com/computationalgeography/lue/pull/654\r\n* Add `clump` by @kordejong in https://github.com/computationalgeography/lue/pull/653\r\n* Fix failing C/I build: conda: macos-14 / arm-64 by @kordejong in https://github.com/computationalgeography/lue/pull/658\r\n* Add global sum by @kordejong in https://github.com/computationalgeography/lue/pull/660\r\n* Keep .py extension on Python command scripts on Windows by @kordejong in https://github.com/computationalgeography/lue/pull/665\r\n* Add support for negate by @kordejong in https://github.com/computationalgeography/lue/pull/671\r\n* Issue 644 - License by @saeb-faraji-gargari in https://github.com/computationalgeography/lue/pull/666\r\n* Use JupyterBook for documenting all non-API stuff by @kordejong in https://github.com/computationalgeography/lue/pull/674\r\n* Fix documentation issues by @kordejong in https://github.com/computationalgeography/lue/pull/676\r\n* Add support for numpy 2.0 by @kordejong in https://github.com/computationalgeography/lue/pull/678\r\n* Document how to add a new local operation by @kordejong in https://github.com/computationalgeography/lue/pull/684\r\n* Port to GCC-14 by @kordejong in https://github.com/computationalgeography/lue/pull/689\r\n* Improve documentation by @kordejong in https://github.com/computationalgeography/lue/pull/691\r\n* Improve documentation by @kordejong in https://github.com/computationalgeography/lue/pull/693\r\n* Verify arrays have the same shape and shape in partitions by @kordejong in https://github.com/computationalgeography/lue/pull/694\r\n* `lue.pcraster`'s `ycoordinate` outputs wrong values by @kordejong in https://github.com/computationalgeography/lue/pull/697\r\n* Get rid if iwyu stuff by @kordejong in https://github.com/computationalgeography/lue/pull/699\r\n* Improve documentation by @kordejong in https://github.com/computationalgeography/lue/pull/700\r\n* Add support for negative inflow to `kinematic_wave` by @kordejong in https://github.com/computationalgeography/lue/pull/702\r\n* Harmonize public C++ and Python APIs by @kordejong in https://github.com/computationalgeography/lue/pull/706\r\n* Add pre-commit hooks for checking markdown formatting and spelling / prose errors by @kordejong in https://github.com/computationalgeography/lue/pull/708\r\n* Add overloads for `add` / `+` accepting `future<Element>` by @kordejong in https://github.com/computationalgeography/lue/pull/709\r\n* Replace overload accepting future with overload accepting scalarReplace all overloads accepting a `future<Element>` with overloads accepting a `Scalar<Element>` by @kordejong in https://github.com/computationalgeography/lue/pull/711\r\n* Overload all unary local operation algorithms accepting Element values with versions that accept `Scalar<Element>` by @kordejong in https://github.com/computationalgeography/lue/pull/713\r\n\r\n## New Contributors\r\n* @dependabot made their first contribution in https://github.com/computationalgeography/lue/pull/605\r\n\r\n**Full Changelog**: https://github.com/computationalgeography/lue/compare/0.3.7...0.3.8",
        "html_url": "https://github.com/computationalgeography/lue/releases/tag/0.3.8",
        "name": "0.3.8",
        "release_id": 172081210,
        "tag": "0.3.8",
        "tarball_url": "https://api.github.com/repos/computationalgeography/lue/tarball/0.3.8",
        "type": "Release",
        "url": "https://api.github.com/repos/computationalgeography/lue/releases/172081210",
        "value": "https://api.github.com/repos/computationalgeography/lue/releases/172081210",
        "zipball_url": "https://api.github.com/repos/computationalgeography/lue/zipball/0.3.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kordejong",
          "type": "User"
        },
        "date_created": "2023-05-25T15:46:35Z",
        "date_published": "2023-05-25T20:38:38Z",
        "description": "https://lue.computationalgeography.org/doc/release/index.html",
        "html_url": "https://github.com/computationalgeography/lue/releases/tag/0.3.7",
        "name": "Lots of small behind the scene improvements",
        "release_id": 104317817,
        "tag": "0.3.7",
        "tarball_url": "https://api.github.com/repos/computationalgeography/lue/tarball/0.3.7",
        "type": "Release",
        "url": "https://api.github.com/repos/computationalgeography/lue/releases/104317817",
        "value": "https://api.github.com/repos/computationalgeography/lue/releases/104317817",
        "zipball_url": "https://api.github.com/repos/computationalgeography/lue/zipball/0.3.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kordejong",
          "type": "User"
        },
        "date_created": "2023-02-22T14:18:45Z",
        "date_published": "2023-02-22T18:08:03Z",
        "description": "https://lue.computationalgeography.org/doc/release/index.html",
        "html_url": "https://github.com/computationalgeography/lue/releases/tag/0.3.6",
        "name": "New batch of operations",
        "release_id": 93333969,
        "tag": "0.3.6",
        "tarball_url": "https://api.github.com/repos/computationalgeography/lue/tarball/0.3.6",
        "type": "Release",
        "url": "https://api.github.com/repos/computationalgeography/lue/releases/93333969",
        "value": "https://api.github.com/repos/computationalgeography/lue/releases/93333969",
        "zipball_url": "https://api.github.com/repos/computationalgeography/lue/zipball/0.3.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kordejong",
          "type": "User"
        },
        "date_created": "2022-11-02T14:03:35Z",
        "date_published": "2022-11-03T07:39:36Z",
        "description": "- Added LUE equivalents of all focal operations present in PCRaster\r\n- LUE Conda package now makes use of new HPX Conda package",
        "html_url": "https://github.com/computationalgeography/lue/releases/tag/0.3.5",
        "name": "Add another batch of operations",
        "release_id": 81917644,
        "tag": "0.3.5",
        "tarball_url": "https://api.github.com/repos/computationalgeography/lue/tarball/0.3.5",
        "type": "Release",
        "url": "https://api.github.com/repos/computationalgeography/lue/releases/81917644",
        "value": "https://api.github.com/repos/computationalgeography/lue/releases/81917644",
        "zipball_url": "https://api.github.com/repos/computationalgeography/lue/zipball/0.3.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kordejong",
          "type": "User"
        },
        "date_created": "2022-10-05T09:37:13Z",
        "date_published": "2022-10-06T11:06:22Z",
        "description": "First release for executing demo of framework.",
        "html_url": "https://github.com/computationalgeography/lue/releases/tag/0.3.4",
        "name": "Add from_gdal / to_gdal",
        "release_id": 79150535,
        "tag": "0.3.4",
        "tarball_url": "https://api.github.com/repos/computationalgeography/lue/tarball/0.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/computationalgeography/lue/releases/79150535",
        "value": "https://api.github.com/repos/computationalgeography/lue/releases/79150535",
        "zipball_url": "https://api.github.com/repos/computationalgeography/lue/zipball/0.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kordejong",
          "type": "User"
        },
        "date_created": "2022-09-20T09:44:15Z",
        "date_published": "2022-09-20T12:11:58Z",
        "description": "Creating Conda packages for 0.3.2 didn't work, hopefully this one does.",
        "html_url": "https://github.com/computationalgeography/lue/releases/tag/0.3.3",
        "name": "First release of a LUE Conda package including the modelling framework.",
        "release_id": 77649788,
        "tag": "0.3.3",
        "tarball_url": "https://api.github.com/repos/computationalgeography/lue/tarball/0.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/computationalgeography/lue/releases/77649788",
        "value": "https://api.github.com/repos/computationalgeography/lue/releases/77649788",
        "zipball_url": "https://api.github.com/repos/computationalgeography/lue/zipball/0.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kordejong",
          "type": "User"
        },
        "date_created": "2022-09-15T06:37:46Z",
        "date_published": "2022-09-15T06:42:18Z",
        "description": "First release of a LUE Conda package including the modelling framework.",
        "html_url": "https://github.com/computationalgeography/lue/releases/tag/0.3.2",
        "name": "0.3.2",
        "release_id": 77254273,
        "tag": "0.3.2",
        "tarball_url": "https://api.github.com/repos/computationalgeography/lue/tarball/0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/computationalgeography/lue/releases/77254273",
        "value": "https://api.github.com/repos/computationalgeography/lue/releases/77254273",
        "zipball_url": "https://api.github.com/repos/computationalgeography/lue/zipball/0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kordejong",
          "type": "User"
        },
        "date_created": "2021-10-18T11:08:34Z",
        "date_published": "2021-10-18T11:12:49Z",
        "description": "This release adds support for building LUE using/on AppleClang/macOS and Clang/Linux.",
        "html_url": "https://github.com/computationalgeography/lue/releases/tag/0.3.1",
        "name": "Port to AppleClang/macOS and Clang/Linux",
        "release_id": 51531391,
        "tag": "0.3.1",
        "tarball_url": "https://api.github.com/repos/computationalgeography/lue/tarball/0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/computationalgeography/lue/releases/51531391",
        "value": "https://api.github.com/repos/computationalgeography/lue/releases/51531391",
        "zipball_url": "https://api.github.com/repos/computationalgeography/lue/zipball/0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kordejong",
          "type": "User"
        },
        "date_created": "2021-09-29T08:11:54Z",
        "date_published": "2021-09-29T10:11:28Z",
        "description": "This release contains many improvements compared to 0.2.0. The main addition is addition of a set of flow accumulation algorithms to the LUE framework.",
        "html_url": "https://github.com/computationalgeography/lue/releases/tag/0.3.0",
        "name": "LUE 0.3.0: Scientific database and environmental modelling framework",
        "release_id": 50452004,
        "tag": "0.3.0",
        "tarball_url": "https://api.github.com/repos/computationalgeography/lue/tarball/0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/computationalgeography/lue/releases/50452004",
        "value": "https://api.github.com/repos/computationalgeography/lue/releases/50452004",
        "zipball_url": "https://api.github.com/repos/computationalgeography/lue/zipball/0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kordejong",
          "type": "User"
        },
        "date_created": "2020-08-24T11:46:21Z",
        "date_published": "2020-08-24T11:52:51Z",
        "html_url": "https://github.com/computationalgeography/lue/releases/tag/0.2.0",
        "name": "LUE 0.2.0: Scientific database and environmental modelling framework",
        "release_id": 30049189,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/computationalgeography/lue/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/computationalgeography/lue/releases/30049189",
        "value": "https://api.github.com/repos/computationalgeography/lue/releases/30049189",
        "zipball_url": "https://api.github.com/repos/computationalgeography/lue/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:13:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ]
}