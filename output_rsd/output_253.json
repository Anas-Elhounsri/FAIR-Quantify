{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "To cite the Common Workflow Language standard in a publication, please use:\n\nAmstutz, Peter; Crusoe, Michael R; Tijani\u0107, Neboj\u0161a; Chapman, Brad;\nChilton, John; Heuer, Michael; Kartashov, Andrey; Kern, John; Leehr, Dan;\nM\u00e9nager, Herv\u00e9; Nedeljkovich, Maya; Scales, Matt; Soiland-Reyes, Stian;\nStojanovic, Luka (2016): Common Workflow Language, v1.0. Specification,\nCommon Workflow Language working group. https://w3id.org/cwl/v1.0/\nhttps://doi.org/10.6084/m9.figshare.3115156.v2\n\n@data{cwl,\n  doi = {10.6084/m9.figshare.3115156.v2},\n  url = {https://doi.org/10.6084/m9.figshare.3115156.v2},\n  author = {Peter Amstutz; Michael R. Crusoe; Neboj\u0161a Tijani\u0107; Brad Chapman;\nJohn Chilton; Michael Heuer; Andrey Kartashov; John Kern; Dan Leehr;\nHerv\u00e9 M\u00e9nager; Maya Nedeljkovich; Matt Scales; Stian Soiland-Reyes;\nLuka Stojanovic\n },\n  publisher = {Figshare},\n  institution = {Common Workflow Language working group},\n  title = {Common Workflow Language, v1.0},\n  year = {2016}\n}\n\n# Are you editing this file?\n# Synchronize any changes made with\n# README.md\n# and\n# https://github.com/common-workflow-language/user_guide/blob/gh-pages/CITATION\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/cwltool/schemas/CITATION",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "CWL Code of Conduct\n===================\n\nThe CWL Project is dedicated to providing a harassment-free experience for\neveryone. We do not tolerate harassment of participants in any form.\n\nThis code of conduct applies to all CWL Project spaces both online and off: the\nGoogle Group, the Gitter chat room, the Google Hangouts chats, and any other\nCWL spaces. Anyone who violates this code of conduct may be sanctioned or\nexpelled from these spaces at the discretion of the CWL Leadership Team.\n\nSome CWL Project spaces may have additional rules in place, which will be\nmade clearly available to participants. Participants are responsible for\nknowing and abiding by these rules.\n\nHarassment includes, but is not limited to:\n\n - Offensive comments related to gender, gender identity and expression, sexual\norientation, disability, mental illness, neuro(a)typicality, physical\nappearance, body size, age, race, or religion.\n - Unwelcome comments regarding a person\u2019s lifestyle choices and practices,\nincluding those related to food, health, parenting, drugs, and employment.\n - Deliberate misgendering or use of [dead](https://www.quora.com/What-is-deadnaming/answer/Nancy-C-Walker)\nor rejected names.\n - Gratuitous or off-topic sexual images or behaviour  in spaces where they\u2019re not\nappropriate.\n - Physical contact and simulated physical contact (eg, textual descriptions like\n\u201c\\*hug\\*\u201d or \u201c\\*backrub\\*\u201d) without consent or after a request to stop.\n - Threats of violence.\n - Incitement of violence towards any individual, including encouraging a person\nto commit suicide or to engage in self-harm.\n - Deliberate intimidation.\n - Stalking or following.\n - Harassing photography or recording, including logging online activity for\nharassment purposes.\n - Sustained disruption of discussion.\n - Unwelcome sexual attention.\n - Pattern of inappropriate social contact, such as requesting/assuming\ninappropriate levels of intimacy with others\n - Continued one-on-one communication after requests to cease.\n - Deliberate \u201couting\u201d of any aspect of a person\u2019s identity without their consent\nexcept as necessary to protect vulnerable people from intentional abuse.\n - Publication of non-harassing private communication.\n\nThe CWL Project prioritizes marginalized people\u2019s safety over privileged\npeople\u2019s comfort. The CWL Leadeship Team will not act on complaints regarding:\n\n - \u2018Reverse\u2019 -isms, including \u2018reverse racism,\u2019 \u2018reverse sexism,\u2019 and \u2018cisphobia\u2019\n - Reasonable communication of boundaries, such as \u201cleave me alone,\u201d \u201cgo away,\u201d or\n\u201cI\u2019m not discussing this with you.\u201d\n - Communicating in a [tone](http://geekfeminism.wikia.com/wiki/Tone_argument)\nyou don\u2019t find congenial\n\nReporting\n---------\n\nIf you are being harassed by a member of the CWL Project, notice that someone\nelse is being harassed, or have any other concerns, please contact the CWL\nLeadership Team at leadership@commonwl.org. If person who is harassing\nyou is on the team, they will recuse themselves from handling your incident. We\nwill respond as promptly as we can.\n\nThis code of conduct applies to CWL Project spaces, but if you are being\nharassed by a member of CWL Project outside our spaces, we still want to\nknow about it. We will take all good-faith reports of harassment by CWL Project\nmembers, especially the CWL Leadership Team, seriously. This includes harassment\noutside our spaces and harassment that took place at any point in time. The\nabuse team reserves the right to exclude people from the CWL Project based on\ntheir past behavior, including behavior outside CWL Project spaces and\nbehavior towards people who are not in the CWL Project.\n\nIn order to protect volunteers from abuse and burnout, we reserve the right to\nreject any report we believe to have been made in bad faith. Reports intended\nto silence legitimate criticism may be deleted without response.\n\nWe will respect confidentiality requests for the purpose of protecting victims\nof abuse. At our discretion, we may publicly name a person about whom we\u2019ve\nreceived harassment complaints, or privately warn third parties about them, if\nwe believe that doing so will increase the safety of CWL Project members or\nthe general public. We will not name harassment victims without their\naffirmative consent.\n\nConsequences\n------------\n\nParticipants asked to stop any harassing behavior are expected to comply\nimmediately.\n\nIf a participant engages in harassing behavior, the CWL Leadership Team may\ntake any action they deem appropriate, up to and including expulsion from all\nCWL Project spaces and identification of the participant as a harasser to other\nCWL Project members or the general public.\n\nThis anti-harassment policy is based on the [example policy from the Geek\nFeminism wiki](http://geekfeminism.wikia.com/wiki/Community_anti-harassment/Policy),\ncreated by the Geek Feminism community.\n\nCWL Leadership Team\n-------------------\n\nAs a stop gap measure until a more formal governance structure is adopted, the\nfollowing individuals make up the leadership of the CWL Project: Peter Amstutz,\nJohn Chilton, Michael R. Crusoe, and Neboj\u0161a Tijani\u0107.\n\nTo report an issue with anyone on the team you can escalate to Ward Vandewege\n (Curoverse) ward@curoverse.com, Anton Nekrutenko (Galaxy)\nanton AT bx DOT psu DOT edu, C. Titus Brown (UC Davis) ctbrown@ucdavis.edu, or\nBrandi Davis-Dusenbery (Seven Bridges Genomics) brandi@sbgenomics.com.\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/common-workflow-language/cwltool"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Style guide:\n- PEP-8 (as implemented by the `black` code formatting tool)\n- Python 3.8+ compatible code\n- PEP-484 type hints\n\nThe development is done using `git`, we encourage you to get familiar with it.\nHere's a rough guide (improvements are welcome!) \nTo get the code and start working on the changes you can start a console and:\n- Clone the cwltool: `git clone https://github.com/common-workflow-language/cwltool.git`\n- Switch to cwltool directory: `cd cwltool`\n\nIt is suggested that you run `git config blame.ignoreRevsFile .git-blame-ignore-revs`\nto filter out mass-formatting commits from `git blame`.\n\nIn order to contribute to the development of `cwltool`, the source code needs to\npass the test before your changes are accepted. There are a couple ways to test\nthe code with your changes: let `tox` manage installation and test running in\nvirtual environments, or do it manually (preferably in a virtual environment):\n- Install `tox` preferably using the OS' package manager, otherwise it can be\n  installed with `pip install --user -U tox`\n- Make your changes to the code and add tests for new cool things you're adding!\n- Run the tests with the command `tox`, it's recommended to use some parameters\n  as tox will try to run all the checks in all available python interpreters.\n- The important tests to run are \"unit tests\" and \"type tests\". \n  To run these two in Python 3.7 (for example), we can tell tox to run only those\n  tests by running: `tox -e py37-mypy`. (the `mypy` tox target also runs the\n  unit tests; to just run the type checker use `make mypy` as shown below)\n- Run `tox -l` to see all available tests and runtimes\n\nFor the more traditional workflow:\n- Create a virtual environment: `python3 -m venv cwltool`\n  (if you have multiple version of Python installed, then you can replace `python3`\n  in this command with the version you want to use, `python3.10` for example)\n- To begin using the virtual environment, it needs to be activated: `source venv/bin/activate`\n- To check if you have the virtual environment set up: `which python`\n  and it should point to python executable in your virtualenv\n- Install the latest versions of `pip` and `wheel` with `pip install --upgrade pip wheel`\n- Install cwltool in development mode, along with development tools:\n  `make install-dep dev`\n- Check the `cwltool` version which might be different from the version installed in\n  general on your system: `cwltool --version`\n- Make your changes to the code and add tests for new cool things you're adding!\n- Run the unit-tests to see : `make test`\n- After you're done working on `cwltool`, you can deactivate the virtual\n  environment: `deactivate`\n\nBefore you commit your code (or at least before you push to GitHub) it is\nrecommended to run `make cleanup`\n(which is a shortcut for `make sort_imports format flake8 diff_pydocstyle_report`)\nto fix common issues and point out any remaining code formatting issues\nthat cannot be fixed automatically.\n\nWhen tests are passing, you can create git commits in a new branch and push to\nGitHub to make a pull request on `cwltool` repo\n\nUseful `make` commands:\nThe `make` commands below can help you to install the dependencies, format and test your code\n\n- `make help` to show the list of commands that can be used with the make function\n- `make install-dep` will install the dependencies needed by `cwltool`\n- `make format` will clean up your code according to the accepted python standard\n- `make test` will perform the tests of `cwltool` (can take a while to run all tests)\n- `make sort_imports` will clean up and sort your import statements\n- `make remove_unused_imports` will remove any unneeded `import` statements\n- `make flake8` will catch format issues that `make format` cannot fix automatically\n- `make diff_pydocstyle_report` check Python docstring style for changed files only\n- `make diff-cover` to run the tests and point out which lines of code that have been\n   changed as compared to the `main` branch are missing test coverage. This is also calculated\n   automatically after all the automatic tests run when you open a Pull Request on GitHub;\n   running it locally can help you confirm that any changes or additions\n   to the tests are sufficient before pushing to GitHub.\n- `make cleanup` is a shortcut for `make sort_imports format flake8 diff_pydocstyle_report`\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-10-07T13:03:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T10:32:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Common Workflow Language reference implementation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.930510844393617,
      "result": {
        "type": "Text_excerpt",
        "value": "``cwltool``: The reference implementation of the Common Workflow Language standards\n############################################################################################# \nThis is the reference implementation of the `Common Workflow Language open\nstandards <https://www.commonwl.org/>`_.  It is intended to be feature complete\nand provide comprehensive validation of CWL\nfiles as well as provide other tools related to working with CWL. \n``cwltool`` is written and tested for\n`Python <https://www.python.org/>`_ ``3.x {x = 6, 8, 9, 10, 11}`` \nThe reference implementation consists of two packages.  The ``cwltool`` package\nis the primary Python module containing the reference implementation in the\n``cwltool`` module and console executable by the same name. \nThe ``cwlref-runner`` package is optional and provides an additional entry point\nunder the alias ``cwl-runner``, which is the implementation-agnostic name for the\ndefault CWL interpreter installed on a host. \n``cwltool`` is provided by the CWL project, `a member project of Software Freedom Conservancy <https://sfconservancy.org/news/2018/apr/11/cwl-new-member-project/>`_\nand our `many contributors <https://github.com/common-workflow-language/cwltool/graphs/contributors>`_. \n.. contents:: Table of Contents \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.987698159852036,
      "result": {
        "original_header": "`cwltool` packages",
        "type": "Text_excerpt",
        "value": "All of the above methods of installing ``cwltool`` use packages that might contain bugs already fixed in newer versions or be missing desired features.\nIf the packaged version of ``cwltool`` available to you is too old, then we recommend installing using ``pip`` and ``venv`` \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8961542722998747,
      "result": {
        "original_header": "Using Singularity",
        "type": "Text_excerpt",
        "value": "``cwltool`` can also use `Singularity <https://github.com/hpcng/singularity/releases/>`_ version 2.6.1\nor later as a Docker container runtime.\n``cwltool`` with Singularity will run software containers specified in\n``DockerRequirement`` and therefore works with Docker images only, native\nSingularity images are not supported. To use Singularity as the Docker container\nruntime, provide ``--singularity`` command line option to ``cwltool``.\nWith Singularity, ``cwltool`` can pass all CWL v1.0 conformance tests, except\nthose involving Docker container ENTRYPOINTs. \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9933604007967735,
      "result": {
        "original_header": "Combining parts of a workflow into a single document",
        "type": "Text_excerpt",
        "value": "Use ``--pack`` to combine a workflow made up of multiple files into a\nsingle compound document.  This operation takes all the CWL files\nreferenced by a workflow and builds a new CWL document with all\nProcess objects (CommandLineTool and Workflow) in a list in the\n``$graph`` field.  Cross references (such as ``run:`` and ``source:``\nfields) are updated to internal references within the new packed\ndocument.  The top-level workflow is named ``#main``. \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.992928095675685,
      "result": {
        "original_header": "Environment Variables in cwltool",
        "type": "Text_excerpt",
        "value": "This reference implementation supports several ways of setting\nenvironment variables for tools, in addition to the standard\n``EnvVarRequirement``. The sequence of steps applied to create the\nenvironment is: \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9212556045352014,
      "result": {
        "original_header": "Leveraging SoftwareRequirements (Beta)",
        "type": "Text_excerpt",
        "value": "CWL tools may be decorated with ``SoftwareRequirement`` hints that cwltool\nmay in turn use to resolve to packages in various package managers or\ndependency management systems such as `Environment Modules\n<http://modules.sourceforge.net/>`__. \nInstalling cwltool in this fashion enables several new command line options.\nThe most general of these options is ``--beta-dependency-resolvers-configuration``.\nThis option allows one to specify a dependency resolver's configuration file.\nThis file may be specified as either XML or YAML and very simply describes various\nplugins to enable to \"resolve\" ``SoftwareRequirement`` dependencies. \nNow imagine deploying cwltool on a cluster with Software Modules installed\nand that a ``seqtk`` module is available at version ``r93``. This means cluster\nusers likely won't have the binary ``seqtk`` on their ``PATH`` by default, but after\nsourcing this module with the command ``modulecmd sh load seqtk/r93`` ``seqtk`` is\navailable on the ``PATH``. A simple dependency resolvers configuration file, called\n``dependency-resolvers-conf.yml`` for instance, that would enable cwltool to source\nthe correct module environment before executing the above tool would simply be: \nThe outer list indicates that one plugin is being enabled, the plugin parameters are\ndefined as a dictionary for this one list item. There is only one required parameter\nfor the plugin above, this is ``type`` and defines the plugin type. This parameter\nis required for all plugins. The available plugins and the parameters\navailable for each are documented (incompletely) `here\n<https://docs.galaxyproject.org/en/latest/admin/dependency_resolvers.html>`__.\nUnfortunately, this documentation is in the context of Galaxy tool\n``requirement`` s instead of CWL ``SoftwareRequirement`` s, but the concepts map fairly directly. \nThis example demonstrates both that cwltool can leverage\nexisting software installations and also handle workflows with dependencies\non different versions of the same software and libraries. However the above\nexample does require an existing module setup so it is impossible to test this example\n\"out of the box\" with cwltool. For a more isolated test that demonstrates all\nthe same concepts - the resolver plugin type ``galaxy_packages`` can be used. \n\"Galaxy packages\" are a lighter-weight alternative to Environment Modules that are\nreally just defined by a way to lay out directories into packages and versions\nto find little scripts that are sourced to modify the environment. They have\nbeen used for years in Galaxy community to adapt Galaxy tools to cluster\nenvironments but require neither knowledge of Galaxy nor any special tools to\nsetup. These should work just fine for CWL tools. \nThe cwltool source code repository's test directory is setup with a very simple\ndirectory that defines a set of \"Galaxy  packages\" (but really just defines one\npackage named ``random-lines``). The directory layout is simply:: \nIf the ``galaxy_packages`` plugin is enabled and pointed at the\n``tests/test_deps_env`` directory in cwltool's root and a ``SoftwareRequirement``\nsuch as the following is encountered. \nIt is possible that the ``SoftwareRequirement`` s in a given CWL tool will not\nmatch the module names for a given cluster. Such requirements can be re-mapped\nto specific deployed packages or versions using another file specified using\nthe resolver plugin parameter `mapping_files`. We will\ndemonstrate this using `galaxy_packages,` but the concepts apply equally well\nto Environment Modules or Conda packages (described below), for instance. \nThis is saying if cwltool encounters a requirement of ``randomLines`` at version\n``1.0.0-rc1`` in a tool, to rewrite to our specific plugin as ``random-lines`` at\nversion ``1.0``. cwltool has such a test tool called ``random_lines_mapping.cwl``\nthat contains such a source ``SoftwareRequirement``. To try out this example with\nmapping, execute the following command from the cwltool root directory:: \nThe previous examples demonstrated leveraging existing infrastructure to\nprovide requirements for CWL tools. If instead a real package manager is used\ncwltool has the opportunity to install requirements as needed. While initial\nsupport for Homebrew/Linuxbrew plugins is available, the most developed such\nplugin is for the `Conda <https://conda.io/docs/#>`__ package manager. Conda has the nice properties\nof allowing multiple versions of a package to be installed simultaneously,\nnot requiring evaluated permissions to install Conda itself or packages using\nConda, and being cross-platform. For these reasons, cwltool may run as a normal\nuser, install its own Conda environment and manage multiple versions of Conda packages\non Linux and Mac OS X. \nThe CWL specification allows URIs to be attached to ``SoftwareRequirement`` s\nthat allow disambiguation of package names. If the mapping files described above\nallow deployers to adapt tools to their infrastructure, this mechanism allows\ntools to adapt their requirements to multiple package managers. To demonstrate\nthis within the context of the seqtk, we can simply break the package name we\nuse and then specify a specific Conda package as follows: \nThe plugin framework for managing the resolution of these software requirements\nas maintained as part of `galaxy-tool-util <https://github.com/galaxyproject/galaxy/tree/dev/packages/tool_util>`__ - a small,\nportable subset of the Galaxy project. More information on configuration and implementation can be found\nat the following links: \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.908678259726848,
      "result": {
        "original_header": "Enabling Fast Parser (experimental)",
        "type": "Text_excerpt",
        "value": "For very large workflows, `cwltool` can spend a lot of time in\ninitialization, before the first step runs.  There is an experimental\nflag ``--fast-parser`` which can dramatically reduce the\ninitialization overhead, however as of this writing it has several limitations: \n- Error reporting in general is worse than the standard parser, you will want to use it with workflows that you know are already correct. \n- It does not check for dangling links (these will become runtime errors instead of loading errors) \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9278811585049264,
      "result": {
        "original_header": "CWL Tool Control Flow",
        "type": "Text_excerpt",
        "value": "Technical outline of how cwltool works internally, for maintainers.\n \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8854889502655171,
      "result": {
        "original_header": "Extension points",
        "type": "Text_excerpt",
        "value": "  An implementation of the top-level workflow execution loop should\n  synchronously run a process object to completion and return the\n  output object. \n  Construct a Fetcher object with the supplied cache and HTTP session. \nIn addition, when providing custom subclasses of Process objects, you can override the following methods: \n  Create and return a job runner object (this implements concrete execution of a command line tool). \n  Create and return a workflow step object.\n \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://cwltool.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/common-workflow-language/cwltool/wiki"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/common-workflow-language/cwltool/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": ". Iterate on the `job()` method of the Process object to get back runnable jobs.",
        "type": "Text_excerpt",
        "value": "   #. ``job()`` is a generator method (uses the Python iterator protocol)\n   #. Each time the ``job()`` method is invoked in an iteration, it returns one\n      of: a runnable item (an object with a ``run()`` method), ``None`` (indicating\n      there is currently no work ready to run) or end of iteration (indicating\n      the process is complete.)\n   #. Invoke the runnable item by calling ``run()``.  This runs the tool and gets output.\n   #. An output callback reports the output of a process.\n   #. ``job()`` may be iterated over multiple times.  It will yield all the work\n      that is currently ready to run and then yield None.\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": ". `Workflow` objects create a corresponding `WorkflowJob` and `WorkflowJobStep` objects to hold the workflow state for the duration of the job invocation.",
        "type": "Text_excerpt",
        "value": "   #. The WorkflowJob iterates over each WorkflowJobStep and determines if the\n      inputs the step are ready.\n   #. When a step is ready, it constructs an input object for that step and\n      iterates on the ``job()`` method of the workflow job step.\n   #. Each runnable item is yielded back up to top-level run loop\n   #. When a step job completes and receives an output callback, the\n      job outputs are assigned to the output of the workflow step.\n   #. When all steps are complete, the intermediate files are moved to a final\n      workflow output, intermediate directories are deleted, and the workflow's output callback is called.\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": ". `CommandLineTool` job() objects yield a single runnable object.",
        "type": "Text_excerpt",
        "value": "   #. The CommandLineTool ``job()`` method calls ``make_job_runner()`` to create a\n      ``CommandLineJob`` object\n   #. The job method configures the CommandLineJob object by setting public\n      attributes\n   #. The job method iterates over file and directories inputs to the\n      CommandLineTool and creates a \"path map\".\n   #. Files are mapped from their \"resolved\" location to a \"target\" path where\n      they will appear at tool invocation (for example, a location inside a\n      Docker container.)  The target paths are used on the command line.\n   #. Files are staged to targets paths using either Docker volume binds (when\n      using containers) or symlinks (if not).  This staging step enables files\n      to be logically rearranged or renamed independent of their source layout.\n   #. The ``run()`` method of CommandLineJob executes the command line tool or\n      Docker container, waits for it to complete, collects output, and makes\n      the output callback.\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 230
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "common-workflow-language/cwltool"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/release-test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/build-cwltool-docker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/cwltool-in-docker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/conformance-test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/cwl-docker.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9825239502210811,
      "result": {
        "type": "Text_excerpt",
        "value": "|Linux Status| |Coverage Status| |Docs Status| \nPyPI: |PyPI Version| |PyPI Downloads Month| |Total PyPI Downloads| \nConda: |Conda Version| |Conda Installs| \nDebian: |Debian Testing package| |Debian Stable package| \nQuay.io (Docker): |Quay.io Container| \n.. |Linux Status| image:: https://github.com/common-workflow-language/cwltool/actions/workflows/ci-tests.yml/badge.svg?branch=main\n   :target: https://github.com/common-workflow-language/cwltool/actions/workflows/ci-tests.yml \n.. |Debian Stable package| image:: https://badges.debian.net/badges/debian/stable/cwltool/version.svg\n   :target: https://packages.debian.org/stable/cwltool \n.. |Debian Testing package| image:: https://badges.debian.net/badges/debian/testing/cwltool/version.svg\n   :target: https://packages.debian.org/testing/cwltool \n.. |PyPI Version| image:: https://badge.fury.io/py/cwltool.svg\n   :target: https://badge.fury.io/py/cwltool \n.. |PyPI Downloads Month| image:: https://pepy.tech/badge/cwltool/month\n   :target: https://pepy.tech/project/cwltool \n.. |Total PyPI Downloads| image:: https://static.pepy.tech/personalized-badge/cwltool?period=total&units=international_system&left_color=black&right_color=orange&left_text=Total%20PyPI%20Downloads\n   :target: https://pepy.tech/project/cwltool \n.. |Conda Version| image:: https://anaconda.org/conda-forge/cwltool/badges/version.svg\n   :target: https://anaconda.org/conda-forge/cwltool \n.. |Conda Installs| image:: https://anaconda.org/conda-forge/cwltool/badges/downloads.svg\n   :target: https://anaconda.org/conda-forge/cwltool \n.. |Quay.io Container| image:: https://quay.io/repository/commonwl/cwltool/status\n   :target: https://quay.io/repository/commonwl/cwltool \n.. |Docs Status| image:: https://readthedocs.org/projects/cwltool/badge/?version=latest\n   :target: https://cwltool.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status \n``cwltool`` is written and tested for\n`Python <https://www.python.org/>`_ ``3.x {x = 6, 8, 9, 10, 11}`` \n*******\nInstall\n*******\n \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9887958509014159,
      "result": {
        "original_header": "`cwltool` packages",
        "type": "Text_excerpt",
        "value": "Your operating system may offer cwltool directly. For `Debian <https://tracker.debian.org/pkg/cwltool>`_, `Ubuntu <https://launchpad.net/ubuntu/+source/cwltool>`_,\nand similar Linux distribution try \n.. code:: bash \n   sudo apt-get install cwltool \nIf you encounter an error, first try to update package information by using \n   sudo apt-get update \nIf you are running macOS X or other UNIXes and you want to use packages prepared by the conda-forge project, then\nplease follow the install instructions for `conda-forge <https://conda-forge.org/#about>`_ (if you haven't already) and then \n   conda install -c conda-forge cwltool \nAll of the above methods of installing ``cwltool`` use packages that might contain bugs already fixed in newer versions or be missing desired features.\nIf the packaged version of ``cwltool`` available to you is too old, then we recommend installing using ``pip`` and ``venv`` \n   python3 -m venv env      # Create a virtual environment named 'env' in the current directory\n   source env/bin/activate  # Activate environment before installing `cwltool` \nThen install the latest ``cwlref-runner`` package from PyPi (which will install the latest ``cwltool`` package as\nwell) \n  pip install cwlref-runner \nIf installing alongside another CWL implementation (like ``toil-cwl-runner`` or ``arvados-cwl-runner``) then instead run \n  pip install cwltool\n \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999983807495383,
      "result": {
        "original_header": "MS Windows users",
        "type": "Text_excerpt",
        "value": "1. `Install Windows Subsystem for Linux 2 and Docker Desktop <https://docs.docker.com/docker-for-windows/wsl/#prerequisites>`_. \n2. `Install Debian from the Microsoft Store <https://www.microsoft.com/en-us/p/debian/9msvkqc78pk6>`_.\n3. Set Debian as your default WSL 2 distro: ``wsl --set-default debian``.\n4. Return to the Docker Desktop, choose ``Settings`` \u2192 ``Resources`` \u2192 ``WSL Integration`` and under \"Enable integration with additional distros\" select \"Debian\",\n5. Reboot if you have not yet already.\n6. Launch Debian and follow the Linux instructions above (``apt-get install cwltool`` or use the ``venv`` method) \nNetwork problems from within WSL2? Try `these instructions <https://github.com/microsoft/WSL/issues/4731#issuecomment-702176954>`_ followed by ``wsl --shutdown``.\n \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999078519128287,
      "result": {
        "original_header": "`cwltool` development version",
        "type": "Text_excerpt",
        "value": "Or you can skip the direct ``pip`` commands above and install the latest development version of ``cwltool``: \n  git clone https://github.com/common-workflow-language/cwltool.git # clone (copy) the cwltool git repository\n  cd cwltool           # Change to source directory that git clone just downloaded\n  pip install .[deps]  # Installs ``cwltool`` from source\n  cwltool --version    # Check if the installation works correctly \nRemember, if co-installing multiple CWL implementations, then you need to\nmaintain which implementation ``cwl-runner`` points to via a symbolic file\nsystem link or `another facility <https://wiki.debian.org/DebianAlternatives>`_.\n \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9757634710119402,
      "result": {
        "original_header": "Recommended Software",
        "type": "Text_excerpt",
        "value": "We strongly suggested to have the following installed: \n  * `Podman <https://podman.io/getting-started/installation>`_\n  * `Docker <https://docs.docker.com/engine/install/>`_\n  * Singularity/Apptainer: See `Using Singularity`_\n  * udocker: See `Using uDocker`_ \n* `node.js <https://nodejs.org/en/download/>`_ for evaluating CWL Expressions quickly\n  (required for `udocker` users, optional but recommended for the other container engines). \nWithout these, some examples in the CWL tutorials at http://www.commonwl.org/user_guide/ may not work. \n***********************\nRun on the command line\n*********************** \nOr if you have multiple CWL implementations installed and you want to override\nthe default cwl-runner then use:: \nYou can set cwltool options in the environment with ``CWLTOOL_OPTIONS``,\nthese will be inserted at the beginning of the command line:: \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9941411291834178,
      "result": {
        "original_header": "Using uDocker",
        "type": "Text_excerpt",
        "value": "Some shared computing environments don't support Docker software containers for technical or policy reasons.\nAs a workaround, the CWL reference runner supports using the `udocker <https://github.com/indigo-dc/udocker>`_\nprogram on Linux using ``--udocker``. \nudocker installation: https://indigo-dc.github.io/udocker/installation_manual.html \n  cwltool --udocker https://github.com/common-workflow-language/common-workflow-language/raw/main/v1.0/v1.0/test-cwl-out2.cwl https://github.com/common-workflow-language/common-workflow-language/raw/main/v1.0/v1.0/empty.json \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9499633028970416,
      "result": {
        "original_header": "Using Singularity",
        "type": "Text_excerpt",
        "value": "``cwltool`` can also use `Singularity <https://github.com/hpcng/singularity/releases/>`_ version 2.6.1\nor later as a Docker container runtime.\n``cwltool`` with Singularity will run software containers specified in\n``DockerRequirement`` and therefore works with Docker images only, native\nSingularity images are not supported. To use Singularity as the Docker container\nruntime, provide ``--singularity`` command line option to ``cwltool``.\nWith Singularity, ``cwltool`` can pass all CWL v1.0 conformance tests, except\nthose involving Docker container ENTRYPOINTs. \n  cwltool --singularity https://github.com/common-workflow-language/common-workflow-language/raw/main/v1.0/v1.0/cat3-tool-mediumcut.cwl https://github.com/common-workflow-language/common-workflow-language/raw/main/v1.0/v1.0/cat-job.json\n \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9743873501227478,
      "result": {
        "original_header": "Environment Variables in cwltool",
        "type": "Text_excerpt",
        "value": "0. If the ``--preserve-entire-environment`` flag is present, then begin with the current\n   environment, else begin with an empty environment. \n1. Add any variables specified by ``--preserve-environment`` option(s). \n2. Set ``TMPDIR`` and ``HOME`` per `the CWL v1.0+ CommandLineTool specification <https://www.commonwl.org/v1.0/CommandLineTool.html#Runtime_environment>`_. \n4. Apply any manipulations required by any ``cwltool:MPIRequirement`` extensions. \n5. Substitute any secrets required by ``Secrets`` extension. \n6. Modify the environment in response to ``SoftwareRequirement`` (see below). \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9828367270169479,
      "result": {
        "original_header": "Leveraging SoftwareRequirements (Beta)",
        "type": "Text_excerpt",
        "value": "CWL tools may be decorated with ``SoftwareRequirement`` hints that cwltool\nmay in turn use to resolve to packages in various package managers or\ndependency management systems such as `Environment Modules\n<http://modules.sourceforge.net/>`__. \nUtilizing ``SoftwareRequirement`` hints using cwltool requires an optional\ndependency, for this reason be sure to use specify the ``deps`` modifier when\ninstalling cwltool. For instance:: \n  $ pip install 'cwltool[deps]' \nInstalling cwltool in this fashion enables several new command line options.\nThe most general of these options is ``--beta-dependency-resolvers-configuration``.\nThis option allows one to specify a dependency resolver's configuration file.\nThis file may be specified as either XML or YAML and very simply describes various\nplugins to enable to \"resolve\" ``SoftwareRequirement`` dependencies. \nUsing these hints will allow cwltool to modify the environment in\nwhich your tool runs, for example by loading one or more Environment\nModules. The environment is constructed as above, then the environment\nmay modified by the selected tool resolver.  This currently means that\nyou cannot override any environment variables set by the selected tool\nresolver. Note that the environment given to the configured dependency\nresolver has the variable `_CWLTOOL` set to `1` to allow introspection. \n  SoftwareRequirement:\n    packages:\n    - package: seqtk\n      version:\n      - r93 \nNow imagine deploying cwltool on a cluster with Software Modules installed\nand that a ``seqtk`` module is available at version ``r93``. This means cluster\nusers likely won't have the binary ``seqtk`` on their ``PATH`` by default, but after\nsourcing this module with the command ``modulecmd sh load seqtk/r93`` ``seqtk`` is\navailable on the ``PATH``. A simple dependency resolvers configuration file, called\n``dependency-resolvers-conf.yml`` for instance, that would enable cwltool to source\nthe correct module environment before executing the above tool would simply be: \n  - type: modules \nThe outer list indicates that one plugin is being enabled, the plugin parameters are\ndefined as a dictionary for this one list item. There is only one required parameter\nfor the plugin above, this is ``type`` and defines the plugin type. This parameter\nis required for all plugins. The available plugins and the parameters\navailable for each are documented (incompletely) `here\n<https://docs.galaxyproject.org/en/latest/admin/dependency_resolvers.html>`__.\nUnfortunately, this documentation is in the context of Galaxy tool\n``requirement`` s instead of CWL ``SoftwareRequirement`` s, but the concepts map fairly directly. \n  cwltool --beta-dependency-resolvers-configuration /path/to/dependency-resolvers-conf.yml \\\n      tests/seqtk_seq.cwl \\\n      tests/seqtk_seq_job.json \n\"Galaxy packages\" are a lighter-weight alternative to Environment Modules that are\nreally just defined by a way to lay out directories into packages and versions\nto find little scripts that are sourced to modify the environment. They have\nbeen used for years in Galaxy community to adapt Galaxy tools to cluster\nenvironments but require neither knowledge of Galaxy nor any special tools to\nsetup. These should work just fine for CWL tools. \nThe cwltool source code repository's test directory is setup with a very simple\ndirectory that defines a set of \"Galaxy  packages\" (but really just defines one\npackage named ``random-lines``). The directory layout is simply:: \n  hints:\n    SoftwareRequirement:\n      packages:\n      - package: 'random-lines'\n        version:\n        - '1.0' \nThen cwltool will simply find that ``env.sh`` file and source it before executing\nthe corresponding tool. That ``env.sh`` script is only responsible for modifying\nthe job's ``PATH`` to add the required binaries. \nThis is a full example that works since resolving \"Galaxy packages\" has no\nexternal requirements. Try it out by executing the following command from cwltool's\nroot directory:: \n  cwltool --beta-dependency-resolvers-configuration tests/test_deps_env_resolvers_conf.yml \\\n      tests/random_lines.cwl \\\n      tests/random_lines_job.json \nIt is possible that the ``SoftwareRequirement`` s in a given CWL tool will not\nmatch the module names for a given cluster. Such requirements can be re-mapped\nto specific deployed packages or versions using another file specified using\nthe resolver plugin parameter `mapping_files`. We will\ndemonstrate this using `galaxy_packages,` but the concepts apply equally well\nto Environment Modules or Conda packages (described below), for instance. \n  - from:\n      name: randomLines\n      version: 1.0.0-rc1\n    to:\n      name: random-lines\n      version: '1.0' \nThis is saying if cwltool encounters a requirement of ``randomLines`` at version\n``1.0.0-rc1`` in a tool, to rewrite to our specific plugin as ``random-lines`` at\nversion ``1.0``. cwltool has such a test tool called ``random_lines_mapping.cwl``\nthat contains such a source ``SoftwareRequirement``. To try out this example with\nmapping, execute the following command from the cwltool root directory:: \n  cwltool --beta-dependency-resolvers-configuration tests/test_deps_env_resolvers_conf_rewrite.yml \\\n      tests/random_lines_mapping.cwl \\\n      tests/random_lines_job.json \nThe previous examples demonstrated leveraging existing infrastructure to\nprovide requirements for CWL tools. If instead a real package manager is used\ncwltool has the opportunity to install requirements as needed. While initial\nsupport for Homebrew/Linuxbrew plugins is available, the most developed such\nplugin is for the `Conda <https://conda.io/docs/#>`__ package manager. Conda has the nice properties\nof allowing multiple versions of a package to be installed simultaneously,\nnot requiring evaluated permissions to install Conda itself or packages using\nConda, and being cross-platform. For these reasons, cwltool may run as a normal\nuser, install its own Conda environment and manage multiple versions of Conda packages\non Linux and Mac OS X. \nThe Conda plugin can be endlessly configured, but a sensible set of defaults\nthat has proven a powerful stack for dependency management within the Galaxy tool\ndevelopment ecosystem can be enabled by simply passing cwltool the\n``--beta-conda-dependencies`` flag. \nWith this, we can use the seqtk example above without Docker or any externally managed services - cwltool should install everything it needs\nand create an environment for the tool. Try it out with the following command:: \n  cwltool --beta-conda-dependencies tests/seqtk_seq.cwl tests/seqtk_seq_job.json \nThe CWL specification allows URIs to be attached to ``SoftwareRequirement`` s\nthat allow disambiguation of package names. If the mapping files described above\nallow deployers to adapt tools to their infrastructure, this mechanism allows\ntools to adapt their requirements to multiple package managers. To demonstrate\nthis within the context of the seqtk, we can simply break the package name we\nuse and then specify a specific Conda package as follows: \n  hints:\n    SoftwareRequirement:\n      packages:\n      - package: seqtk_seq\n        version:\n        - '1.2'\n        specs:\n        - https://anaconda.org/bioconda/seqtk\n        - https://packages.debian.org/sid/seqtk \nThe example can be executed using the command:: \n  cwltool --beta-conda-dependencies tests/seqtk_seq_wrong_name.cwl tests/seqtk_seq_job.json \nThe plugin framework for managing the resolution of these software requirements\nas maintained as part of `galaxy-tool-util <https://github.com/galaxyproject/galaxy/tree/dev/packages/tool_util>`__ - a small,\nportable subset of the Galaxy project. More information on configuration and implementation can be found\nat the following links: \n- `Dependency Resolvers in Galaxy <https://docs.galaxyproject.org/en/latest/admin/dependency_resolvers.html>`__\n- `Conda for [Galaxy] Tool Dependencies <https://docs.galaxyproject.org/en/latest/admin/conda_faq.html>`__\n- `Mapping Files - Implementation <https://github.com/galaxyproject/galaxy/commit/495802d229967771df5b64a2f79b88a0eaf00edb>`__\n- `Specifications - Implementation <https://github.com/galaxyproject/galaxy/commit/81d71d2e740ee07754785306e4448f8425f890bc>`__\n- `Initial cwltool Integration Pull Request <https://github.com/common-workflow-language/cwltool/pull/214>`__\n \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9448109297088978,
      "result": {
        "original_header": "Enabling Fast Parser (experimental)",
        "type": "Text_excerpt",
        "value": "- Error reporting in general is worse than the standard parser, you will want to use it with workflows that you know are already correct. \n- Several other cases fail, as documented in https://github.com/common-workflow-language/cwltool/pull/1720 \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8818055659441705,
      "result": {
        "original_header": "Import as a module",
        "type": "Text_excerpt",
        "value": ".. code:: python \nto your script. \nThe easiest way to use cwltool to run a tool or workflow from Python is to use a Factory \n  echo = fac.make(\"echo.cwl\")\n  result = echo(inp=\"foo\") \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8367196088929445,
      "result": {
        "original_header": "Extension points",
        "type": "Text_excerpt",
        "value": "The following functions can be set in LoadingContext to override or\naugment the listed behaviors. \nThe following functions can be set in RuntimeContext to override or\naugment the listed behaviors. \n    make_workflow_step(toolpath_object, pos, loadingContext, parentworkflowProv)\n      (Dict[Text, Any], int, LoadingContext, Optional[ProvenanceProfile]) -> WorkflowStep \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8677982509526866,
      "result": {
        "original_header": "Using Singularity",
        "type": "Text_excerpt",
        "value": "Example \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8686264079177998,
      "result": {
        "original_header": "Visualizing a CWL document",
        "type": "Text_excerpt",
        "value": "The ``--print-dot`` option will print a file suitable for Graphviz ``dot`` program.  Here is a bash onliner to generate a Scalable Vector Graphic (SVG) file: \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8666875561152134,
      "result": {
        "original_header": "Modeling a CWL document as RDF",
        "type": "Text_excerpt",
        "value": "  cwltool --print-rdf --rdf-serializer=turtle mywf.cwl \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8238285691565018,
      "result": {
        "original_header": "Leveraging SoftwareRequirements (Beta)",
        "type": "Text_excerpt",
        "value": "  tests/test_deps_env/\n    random-lines/\n      1.0/\n        env.sh \n  cwltool --beta-dependency-resolvers-configuration tests/test_deps_env_resolvers_conf.yml \\\n      tests/random_lines.cwl \\\n      tests/random_lines_job.json \n  - type: galaxy_packages\n    base_path: ./tests/test_deps_env \n  - type: galaxy_packages\n    base_path: ./tests/test_deps_env\n    mapping_files: ./tests/test_deps_mapping.yml \n  cwltool --beta-dependency-resolvers-configuration tests/test_deps_env_resolvers_conf_rewrite.yml \\\n      tests/random_lines_mapping.cwl \\\n      tests/random_lines_job.json \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9067314017992678,
      "result": {
        "original_header": "Import as a module",
        "type": "Text_excerpt",
        "value": "  import cwltool \n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "common-workflow-language, commonwl, containers, cwl, science, sciworkflows, workflows"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cwltool"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "common-workflow-language"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1119985,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Common Workflow Language",
        "size": 273215,
        "type": "Programming_language",
        "value": "Common Workflow Language"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 12047,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 7319,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1366,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 1240,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Tcl",
        "size": 523,
        "type": "Programming_language",
        "value": "Tcl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2024-09-09T16:49:51Z",
        "date_published": "2024-09-09T17:40:54Z",
        "description": "## What's Changed\r\n* cwl v1.3.0-dev1 native loop support by @GlassOfWhiskey in https://github.com/common-workflow-language/cwltool/pull/1779\r\n* Start running the draft CWL v1.3.0 conformance tests by @mr-c in https://github.com/common-workflow-language/cwltool/pull/2022\r\n* Conformance testing, skip a bad cwltest release by @mr-c in https://github.com/common-workflow-language/cwltool/pull/2017\r\n* Added new loop test by @LanderOtto in https://github.com/common-workflow-language/cwltool/pull/2006\r\n* removing duplicate \"reference\" by @danielskatz in https://github.com/common-workflow-language/cwltool/pull/2030\r\n* Support array of integers and floats as command argument parameters by @tom-tan in https://github.com/common-workflow-language/cwltool/pull/2037\r\n* Explicitly support Python 3.13; add to CI matrix by @mr-c in https://github.com/common-workflow-language/cwltool/pul\r\n* fix `loadContents` for `File[]` by @fmigneault in https://github.com/common-workflow-language/cwltool/pull/2036\r\n\r\n### Deps\r\n* Requires schema-salad >=8.7 for MapSchema validation by @tetron in https://github.com/common-workflow-language/cwltool/pull/2024\r\n* skip pydot 3.x+ for now by @mr-c in https://github.com/common-workflow-language/cwltool/pull/2020\r\n* Update pytest requirement from <8.3,>=6.2 to >=6.2,<8.4 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/2025\r\n* Bump mypy from 1.10.1 to 1.11.1 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/2028\r\n* Bump mypy from 1.11.1 to 1.11.2 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/2035\r\n* Update black requirement from ~=24.4 to ~=24.8 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/2029\r\n* Update flake8-bugbear requirement from <24.3 to <24.9 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/2032\r\nl/2040\r\n\r\n\r\n\r\n## New Contributors\r\n* @danielskatz made their first contribution in https://github.com/common-workflow-language/cwltool/pull/2030\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20240708091337...3.1.20240909164951",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20240909164951",
        "name": "3.1.20240909164951",
        "release_id": 174180395,
        "tag": "3.1.20240909164951",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20240909164951",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/174180395",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/174180395",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20240909164951"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2024-07-08T09:13:37Z",
        "date_published": "2024-07-08T09:50:51Z",
        "description": "## What's Changed\r\n* Support Podman version 5.x which autodeletes the cidfiles by @mr-c in https://github.com/common-workflow-language/cwltool/pull/2016\r\n* Use uv compatible syntax in test-requirements.txt by @hauntsaninja in https://github.com/common-workflow-language/cwltool/pull/2012\r\n* Add docstrings to functions in `ro.py` by @AGoetzee in https://github.com/common-workflow-language/cwltool/pull/2002\r\n\r\n### Deps\r\n* Update black requirement from ~=24.3 to ~=24.4 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1992\r\n* Bump docker/build-push-action from 5 to 6 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/2008\r\n* Update galaxy-util requirement from <24.1 to <24.2 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/2015\r\n* Bump mypy from 1.10.0 to 1.10.1 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/2009\r\n* Update galaxy-tool-util requirement from !=23.0.1,!=23.0.2,!=23.0.3,!=23.0.4,!=23.0.5,<24.1,>=22.1.2 to !=23.0.1,!=23.0.2,!=23.0.3,!=23.0.4,!=23.0.5,>=24.1.1,<24.2 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/2014\r\n\r\n## New Contributors\r\n* @AGoetzee made their first contribution in https://github.com/common-workflow-language/cwltool/pull/2002\r\n* @hauntsaninja made their first contribution in https://github.com/common-workflow-language/cwltool/pull/2012\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20240508115724...3.1.20240708091337",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20240708091337",
        "name": "3.1.20240708091337",
        "release_id": 164373610,
        "tag": "3.1.20240708091337",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20240708091337",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/164373610",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/164373610",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20240708091337"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2024-05-08T11:57:24Z",
        "date_published": "2024-05-16T12:43:23Z",
        "description": "## What's Changed\r\n* Replace .decode method with str(bytes, \"utf-8\") by @tetron in https://github.com/common-workflow-language/cwltool/pull/1998\r\n* Update paths for the CWL v1.2 conformance tests now that 1.2.1 has been released. by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1993\r\n* build now uses the module name by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1997\r\n* Update pytest requirement from <8.2,>=6.2 to >=6.2,<8.3 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1996\r\n* patch dockerFile build by @misterbrandonwalker in https://github.com/common-workflow-language/cwltool/pull/1979\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20240404144621...3.1.20240508115724",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20240508115724",
        "name": "3.1.20240508115724",
        "release_id": 156069850,
        "tag": "3.1.20240508115724",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20240508115724",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/156069850",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/156069850",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20240508115724"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2024-04-04T14:46:21Z",
        "date_published": "2024-04-10T13:24:08Z",
        "description": "## What's Changed\r\n* add the --shm-size parameter at runtime by @lihl2014 in https://github.com/common-workflow-language/cwltool/pull/1972\r\n* Append \"cwltool\" to HTTP User-Agent string by @svonworl in https://github.com/common-workflow-language/cwltool/pull/1977\r\n* biocontainers test is flaky, automatically retry it. by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1983\r\n* setuptools: silence package discovery warnings by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1981\r\n* pytest: use the worksteal scheduler and run on all logical cores, not just physical. by @mr-c in https://github.com/common-\r\nworkflow-language/cwltool/pull/1984\r\n* podman nor singularity/apptainer support is experimental by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1991\r\n\r\n### Deps\r\n* Bump actions/cache from 3 to 4 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1968\r\n* Update black requirement from ~=23.12 to ~=24.1 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1970\r\n* Update pytest requirement from <7.5,>=6.2 to >=6.2,<8.1 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1971\r\n* Update pytest requirement from <8.1,>=6.2 to >=6.2,<8.2 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1980\r\n* Update flake8-bugbear requirement from <23.13 to <24.2 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1966\r\n* Update flake8-bugbear requirement from <24.2 to <24.3 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1975\r\n* Bump codecov/codecov-action from 3 to 4 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1973\r\n* Update galaxy-tool-util requirement from !=23.0.1,!=23.0.2,!=23.0.3,!=23.0.4,!=23.0.5,<23.2,>=22.1.2 to >=22.1.2,!=23.0.1,!=23.0.2,!=23.0.3,!=23.0.4,!=23.0.5,<23.3 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1978\r\n* Update black requirement from ~=24.1 to ~=24.2 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1976\r\n* Bump mypy from 1.8.0 to 1.9.0 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1982\r\n* Galaxy-* 24.0.0 by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1990\r\n* Update black requirement from ~=24.2 to ~=24.3 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1985\r\n\r\n## New Contributors\r\n* @lihl2014 made their first contribution in https://github.com/common-workflow-language/cwltool/pull/1972\r\n* @svonworl made their first contribution in https://github.com/common-workflow-language/cwltool/pull/1977\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20240112164112...3.1.20240404144621",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20240404144621",
        "name": "3.1.20240404144621",
        "release_id": 150579816,
        "tag": "3.1.20240404144621",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20240404144621",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/150579816",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/150579816",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20240404144621"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2024-01-12T16:41:12Z",
        "date_published": "2024-01-15T14:35:42Z",
        "description": "## What's Changed\r\n\r\n* Fix fast container job hangs by @kuanyili in https://github.com/common-workflow-language/cwltool/pull/1962\r\n* Permit calling cwltool.main with preparsed args only even with provenance by @davidjsherman in https://github.com/common-workflow-language/cwltool/pull/1964\r\n* rename singularity image by @misterbrandonwalker in https://github.com/common-workflow-language/cwltool/pull/1956\r\n* remove galaxy-tool-util from build dependency by @jfennick in https://github.com/common-workflow-language/cwltool/pull/1955\r\n* Added new test on loop by @LanderOtto in https://github.com/common-workflow-language/cwltool/pull/1965\r\n\r\n### Deps\r\n* Bump actions/setup-python from 4 to 5 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1952\r\n* Update black requirement from ~=23.11 to ~=23.12 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1957\r\n* Bump github/codeql-action from 2 to 3 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1958\r\n* Bump actions/upload-artifact from 3 to 4 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1959\r\n* Bump mypy from 1.7.1 to 1.8.0 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1960\r\n\r\n## New Contributors\r\n* @kuanyili made their first contribution in https://github.com/common-workflow-language/cwltool/pull/1962\r\n* @LanderOtto made their first contribution in https://github.com/common-workflow-language/cwltool/pull/1965\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20231207110929...3.1.20240112164112",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20240112164112",
        "name": "3.1.20240112164112",
        "release_id": 137075619,
        "tag": "3.1.20240112164112",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20240112164112",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/137075619",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/137075619",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20240112164112"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-12-07T11:09:29Z",
        "date_published": "2023-12-07T11:17:58Z",
        "description": "## What's Changed\r\n* setup.py was missing spython install dependency by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1953\r\n* conformance tests: do so with the mypc compiled version of cwltool by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1951\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20231206180100...3.1.20231207110929",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20231207110929",
        "name": "3.1.20231207110929",
        "release_id": 133002854,
        "tag": "3.1.20231207110929",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20231207110929",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/133002854",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/133002854",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20231207110929"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-12-06T18:01:00Z",
        "date_published": "2023-12-06T18:33:11Z",
        "description": "## What's Changed\r\n* `--no-warnings` for even quieter output (errors only) by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1885\r\n* pathmapper: don't use temporary lists by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1949\r\n  * a `toil-cwl-runner` user with many inputs of large \"measurement set\" directories had reported many hours to process `stage_files` and now [reports that this PR reduces that to several minutes](https://matrix.to/#/!sSMDDqTXkxpNofyjTR:gitter.im/$uD3IBa1uCvZy7bi9abforEYrRw2DALXFxbGaAifTY5o?via=gitter.im&via=matrix.org)!\r\n* run the CWL v1.2.1 conformance tests by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1942\r\n* add support for `dockerFile` with `--singularity` by @misterbrandonwalker in https://github.com/common-workflow-language/cwltool/pull/1938\r\n* fix compute_checksums during cache check for input File with literal default by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1776\r\n* make running the conformance test more flexible by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1911\r\n\r\n## Misc\r\n* remove last usage of pkg_resources by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1945\r\n* Drop \"Atomic\" types in favor of recursive typedefs by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1943\r\n\r\n## Deps\r\n* Bump mypy from 1.6.1 to 1.7.1 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1940\r\n* Bump sphinx-rtd-theme from 1.3.0 to 2.0.0 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1948\r\n* Update flake8-bugbear requirement from <23.10 to <23.12 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1947\r\n* Update flake8-bugbear requirement from <23.12 to <23.13 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1950\r\n\r\n## New Contributors\r\n* @misterbrandonwalker made their first contribution in https://github.com/common-workflow-language/cwltool/pull/1938\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20231114134824...3.1.20231206180100",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20231206180100",
        "name": "3.1.20231206180100",
        "release_id": 132899048,
        "tag": "3.1.20231206180100",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20231206180100",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/132899048",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/132899048",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20231206180100"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-11-14T13:48:24Z",
        "date_published": "2023-11-14T14:07:49Z",
        "description": "## What's Changed\r\n* gh-actions: need newer setuptools to run setuptools_scm by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1932\r\n* Update ruamel-yaml requirement from <0.18,>=0.16.0 to >=0.16.0,<0.19 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1934\r\n* software dependencies: allow newer versions of galaxy-tool-util by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1936\r\n* skip cwl-utils 0.30 by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1941\r\n* Update black requirement from ~=23.10 to ~=23.11 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1939\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20231020140205...3.1.20231114134824",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20231114134824",
        "name": "3.1.20231114134824",
        "release_id": 129358175,
        "tag": "3.1.20231114134824",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20231114134824",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/129358175",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/129358175",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20231114134824"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-10-20T14:02:05Z",
        "date_published": "2023-10-20T14:23:28Z",
        "description": "## What's Changed\r\n* fix the pickling error for IO objects by @ndonyapour in https://github.com/common-workflow-language/cwltool/pull/1929\r\n* gh-actions: record version before building container to publish to quay.io by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1931\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20231020113452...3.1.20231020140205",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20231020140205",
        "name": "3.1.20231020140205",
        "release_id": 126000839,
        "tag": "3.1.20231020140205",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20231020140205",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/126000839",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/126000839",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20231020140205"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-10-20T11:34:52Z",
        "date_published": "2023-10-20T12:30:51Z",
        "description": "## What's Changed\r\n* temporarily downgrade galaxy-tool-util to workaround issue with newer conda by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1930\r\n\r\n### Deps\r\n* Bump mypy from 1.6.0 to 1.6.1 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1927\r\n* Update black requirement from ~=23.9 to ~=23.10 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1926\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20231016170136...3.1.20231020113452",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20231020113452",
        "name": "3.1.20231020113452",
        "release_id": 125979326,
        "tag": "3.1.20231020113452",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20231020113452",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/125979326",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/125979326",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20231020113452"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-10-16T17:01:36Z",
        "date_published": "2023-10-16T17:49:52Z",
        "description": "## What's Changed\r\n\r\n* No longer supporting Python 3.7 by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1901\r\n* guard `import fcntl` for windows by @jfennick in https://github.com/common-workflow-language/cwltool/pull/1914\r\n* extend validation to the inputs of the top level proces by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1915\r\n* silence spurious warning when validating some documents with \"cwltool\" extensions by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1921\r\n* job loading: allow inputs named \"id\" by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1923\r\n\r\n## Deps\r\n* Update galaxy-tool-util requirement from <23,>=22.1.2 to >=22.1.2,<24 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1859\r\n* Update black requirement from ~=23.7 to ~=23.9 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1902\r\n* Update flake8-bugbear requirement from <23.8 to <23.10 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1909\r\n* Bump docker/build-push-action from 4 to 5 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1904\r\n* Bump docker/setup-buildx-action from 2 to 3 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1905\r\n* Bump docker/setup-qemu-action from 2 to 3 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1906\r\n* Bump docker/login-action from 2 to 3 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1907\r\n* Bump mypy from 1.3.0 to 1.6.0 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1862\r\n* Remove packaging requirement by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1917\r\n* Update black requirement from ~=22.0 to ~=23.9 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1918\r\n* default to testing with Python 3.12 by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1919\r\n\r\n## Misc\r\n* switch to setuptools_scm by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1920\r\n* release: fix target name by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1924\r\n* release: set version via SCM variable by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1925\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230906142556...3.1.20231016170136",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20231016170136",
        "name": "3.1.20231016170136",
        "release_id": 125277045,
        "tag": "3.1.20231016170136",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20231016170136",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/125277045",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/125277045",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20231016170136"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-09-06T14:25:56Z",
        "date_published": "2023-09-06T15:18:08Z",
        "description": "## What's Changed\r\n\r\nDropped Python 3.6 support, brought back Python 3.7 support for this release only\r\nPython 3.12 is now supported\r\n\r\n* Fixed race condition which happens when a job runs \"too fast\", by @jmfernandez in https://github.com/common-workflow-language/cwltool/pull/1890\r\n* Propery locate podman images by @jmfernandez in https://github.com/common-workflow-language/cwltool/pull/1891\r\n* add cudaDeviceCount flag to the request requirements by @ndonyapour in https://github.com/common-workflow-language/cwltool/pull/1895\r\n* use nonlocal mem_tn variable by @jfennick in https://github.com/common-workflow-language/cwltool/pull/1896\r\n* start testing with Python 3.12 by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1882\r\n* py version support policy, RHEL: only track full support releases by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1881\r\n* Cope with narrower terminal by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1893\r\n* release testing tweaks by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1900\r\n* add back in Python 3.7 for one last release by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1898\r\n\r\n\r\n## Deps\r\n* Update rdflib requirement from <6.4,>=4.2.2 to >=4.2.2,<7.1 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1880\r\n* Bump sphinx-rtd-theme from 1.2.2 to 1.3.0 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1892\r\n* bump minimum required schema_salad version to reflect reality. by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1894\r\n* Bump actions/checkout from 3 to 4 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1897\r\n\r\n\r\n## New Contributors\r\n* @ndonyapour made their first contribution in https://github.com/common-workflow-language/cwltool/pull/1895\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230719185429...3.1.20230906142556",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230906142556",
        "name": "3.1.20230906142556",
        "release_id": 120141220,
        "tag": "3.1.20230906142556",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230906142556",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/120141220",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/120141220",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230906142556"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-07-19T18:54:29Z",
        "date_published": "2023-07-27T08:42:44Z",
        "description": "## What's Changed\r\n\r\nPython 3.7 is no longer a supported version of Python (though it still likely works).\r\n\r\n* Update Python version support document; drop Python 3.7 (EOL) by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1872\r\n\r\n### Fixes\r\n* required outputs with secondaryFiles fix for containers by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1870\r\n* enable pickling of cwltool.workflow.Workflow by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1878\r\n\r\n### Misc\r\n* requirements.txt; remove spaces to enable re-use in other contexts by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1867\r\n* confirm that enhanced TypeDSL from schema-salad 1.3 doesn't change CWL v1.2 by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1868\r\n* Update flake8-bugbear requirement from <23.7 to <23.8 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1877\r\n* Update black requirement from ~=23.3 to ~=23.7 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1876\r\n\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230624081518...3.1.20230719185429",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230719185429",
        "name": "3.1.20230719185429",
        "release_id": 113788944,
        "tag": "3.1.20230719185429",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230719185429",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/113788944",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/113788944",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230719185429"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-06-24T08:15:18Z",
        "date_published": "2023-06-26T09:15:51Z",
        "description": "## What's Changed\r\n* pass through QEMU_LD_PREFIX by default by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1849\r\n* dockerfile: pin graphviz to before 8.x by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1863\r\n\r\n### Misc\r\n* Remove deprecated use of Pathlib.Path as a context-mananger by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1854\r\n* gh-actions: keep running even if codecov upload fails by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1857\r\n\r\n### Deps\r\n* Update ruamel-yaml requirement from <0.17.28,>=0.16.0 to >=0.16.0,<0.17.32 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1852\r\n* Update flake8-bugbear requirement from <23.6 to <23.7 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1856\r\n* Bump sphinx-rtd-theme from 1.2.1 to 1.2.2 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1858\r\n* Update pytest requirement from <7.4,>=6.2 to >=6.2,<7.5 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1864\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230601100705...3.1.20230624081518",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230624081518",
        "name": "3.1.20230624081518",
        "release_id": 109877094,
        "tag": "3.1.20230624081518",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230624081518",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/109877094",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/109877094",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230624081518"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-06-01T10:07:05Z",
        "date_published": "2023-06-01T10:21:34Z",
        "description": "## What's Changed\r\n* Ensure that files with identical basenames get staged to unique paths by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1853\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230527103121...3.1.20230601100705",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230601100705",
        "name": "3.1.20230601100705",
        "release_id": 105657429,
        "tag": "3.1.20230601100705",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230601100705",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/105657429",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/105657429",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230601100705"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-05-27T10:31:21Z",
        "date_published": "2023-05-27T10:52:08Z",
        "description": "## What's Changed\r\n* synchronize setup.py & requirements.txt by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1848\r\n(fixes missing dependency on `importlib_resources` and `importlib_metadata`; also drop dependency on the `bagit` library library which is only used in the tests)\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230526180938...3.1.20230527103121",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230527103121",
        "name": "3.1.20230527103121",
        "release_id": 104524228,
        "tag": "3.1.20230527103121",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230527103121",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/104524228",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/104524228",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230527103121"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-05-26T18:09:38Z",
        "date_published": "2023-05-26T19:05:26Z",
        "description": "## What's Changed\r\n* CWLProv snapshots: capture the workflow even if the cwl:tool trick in the input object is used by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1847\r\n\r\n* Refactoring provenance.py as provenance submodule by @RenskeW in https://github.com/common-workflow-language/cwltool/pull/1775\r\n* use importlib instead of the deprecated pkg_resources by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1844\r\n* Bump sphinx-rtd-theme from 1.2.0 to 1.2.1 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1845\r\n* Update ruamel-yaml requirement from <0.17.27,>=0.16.0 to >=0.16.0,<0.17.28 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1846\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230513155734...3.1.20230526180938",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230526180938",
        "name": "3.1.20230526180938",
        "release_id": 104448208,
        "tag": "3.1.20230526180938",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230526180938",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/104448208",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/104448208",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230526180938"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-05-13T15:57:34Z",
        "date_published": "2023-05-13T16:45:34Z",
        "description": "## What's Changed\r\n* Update ruamel-yaml requirement from <0.17.22,>=0.16.0 to >=0.16.0,<0.17.27 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1838\r\n* --leave-tmpdir includes the input staging directories by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1674 https://github.com/common-workflow-language/cwltool/pull/1840\r\n* Bump mypy from 1.2.0 to 1.3.0 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1839\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230425144158...3.1.20230513155734",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230513155734",
        "name": "3.1.20230513155734",
        "release_id": 102875534,
        "tag": "3.1.20230513155734",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230513155734",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/102875534",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/102875534",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230513155734"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-04-25T14:41:58Z",
        "date_published": "2023-05-09T13:33:48Z",
        "description": "## What's Changed\r\n* Bump mypy from 1.1.1 to 1.2.0 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1825\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230425122939...3.1.20230425144158",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230425144158",
        "name": "3.1.20230425144158",
        "release_id": 102345394,
        "tag": "3.1.20230425144158",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230425144158",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/102345394",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/102345394",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230425144158"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-04-24T21:13:14Z",
        "date_published": "2023-04-25T11:26:14Z",
        "description": "## What's Changed\r\n* always print floats on the command line with decimal notation by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1832\r\n* Better error message when parsing hints in the upgrader by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1830\r\n\r\n### Misc\r\n\r\n* synchronize reqs. by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1823\r\n* Update black requirement from ~=23.1 to ~=23.3 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1824\r\n* Update pytest requirement from <7.3,>=6.2 to >=6.2,<7.4 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1826\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230325110543...3.1.20230424211314",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230424211314",
        "name": "3.1.20230424211314",
        "release_id": 100794933,
        "tag": "3.1.20230424211314",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230424211314",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/100794933",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/100794933",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230424211314"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-03-25T11:05:43Z",
        "date_published": "2023-03-25T11:34:13Z",
        "description": "## What's Changed\r\n* Bump mypy from 1.0.1 to 1.1.1 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1817\r\n* Executor clears any saved result when execute is called. by @tetron in https://github.com/common-workflow-language/cwltool/pull/1813\r\n* CWL exprs in ResourceRequirement fields can return floats in CWL v1.2+ by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1818\r\n* Update rdflib requirement from <6.3,>=4.2.2 to >=4.2.2,<6.4 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1820\r\n* guard `import pwd` for windows by @jfennick in https://github.com/common-workflow-language/cwltool/pull/1822\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230302145532...3.1.20230325110543",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230325110543",
        "name": "3.1.20230325110543",
        "release_id": 96899604,
        "tag": "3.1.20230325110543",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230325110543",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/96899604",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/96899604",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230325110543"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-03-02T14:55:32Z",
        "date_published": "2023-03-02T15:39:37Z",
        "description": "## What's Changed\r\n* Raise error is socket is **not** available by @BrunoGrandePhD in https://github.com/common-workflow-language/cwltool/pull/1809\r\n* mypyc: enable subclassing and/or pickling of popular classes by @mr-c in https://github.com/common-workflow-language/cwltoo/pull/1814\r\n\r\n### Misc\r\n* ga: cleanups from actionlint by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1805\r\n* ga: colorful output by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1807\r\n* Bump mypy from 1.0.0 to 1.0.1 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1810\r\n* Bump actions/cache from 2 to 3 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1812\r\n\r\n## New Contributors\r\n* @BrunoGrandePhD made their first contribution in https://github.com/common-workflow-language/cwltool/pull/1809\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230213100550...3.1.20230302145532",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230302145532",
        "name": "3.1.20230302145532",
        "release_id": 94257169,
        "tag": "3.1.20230302145532",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230302145532",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/94257169",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/94257169",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230302145532"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-02-13T10:05:50Z",
        "date_published": "2023-02-13T10:34:37Z",
        "description": "## What's Changed\r\n* include cwltool-conftest.py in the distributions by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1804\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230209161050...3.1.20230213100550",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230213100550",
        "name": "3.1.20230213100550",
        "release_id": 92196819,
        "tag": "3.1.20230213100550",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230213100550",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/92196819",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/92196819",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230213100550"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-02-09T16:10:50Z",
        "date_published": "2023-02-09T16:52:08Z",
        "description": "## What's Changed\r\n* CWLProv: add directory basename to the provenance metadata by @simleo in https://github.com/common-workflow-language/cwltool/pull/1798\r\n* Bump mypy from 0.991 to 1.0.0 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1801\r\n* Bump sphinx-rtd-theme from 1.1.1 to 1.2.0 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1802\r\n* Clean tests; no mess left over by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1803\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230201130431...3.1.20230209161050",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230209161050",
        "name": "3.1.20230209161050",
        "release_id": 91917955,
        "tag": "3.1.20230209161050",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230209161050",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/91917955",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/91917955",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230209161050"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-02-01T22:43:20Z",
        "date_published": "2023-02-02T00:08:28Z",
        "description": "## What's Changed\r\n* better pass --skip-schemas by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1795\r\n\r\n### Misc\r\n* git blame: ignore mass-reformatting by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1792\r\n* Bump docker/build-push-action from 3 to 4 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1793\r\n* readthedocs: install graphviz by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1794\r\n* Update black requirement from ~=22.0 to ~=23.1 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1796\r\n* bump minimum setuptools version by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1797\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20230127121939...3.1.20230201130431",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230201130431",
        "name": "3.1.20230201130431",
        "release_id": 91053113,
        "tag": "3.1.20230201130431",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230201130431",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/91053113",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/91053113",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230201130431"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2023-01-27T12:19:39Z",
        "date_published": "2023-01-27T12:36:50Z",
        "description": "## What's Changed\r\n* Keep track of which files have already been parsed by @tetron in https://github.com/common-workflow-language/cwltool/pull/1786\r\n* Move sys.exit by @jfennick in https://github.com/common-workflow-language/cwltool/pull/1772\r\n* --write-summary to redirect final JSON output by @jfennick in https://github.com/common-workflow-language/cwltool/pull/1773\r\n\r\n### misc\r\n* Update README and other documentation cleanup by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1778\r\n* Dockerfile: Security upgrade python from 3.10-alpine to 3.11-alpine by @snyk-bot in https://github.com/common-workflow-language/cwltool/pull/1781\r\n* conformance testing: switch to pytest + cwltest by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1783\r\n* [doc] Add autolabels so intersphinx can link to anchors like index#install by @kinow in https://github.com/common-workflow-language/cwltool/pull/1787\r\n* flake8 cleanup by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1791\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20221201130942...3.1.20230127121939",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20230127121939",
        "name": "3.1.20230127121939",
        "release_id": 90414718,
        "tag": "3.1.20230127121939",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20230127121939",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/90414718",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/90414718",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20230127121939"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2022-12-01T13:09:42Z",
        "date_published": "2022-12-02T12:08:23Z",
        "description": "## What's Changed\r\n* support podman even when not installed as \"docker\" alias by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1769\r\n\r\nThanks to @sdruskat for championing the `podman` issue!\r\n\r\n* trim mypy.ini by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1762\r\n* Bump mypy from 0.990 to 0.991 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1763\r\n* upload to codecov using the token by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1764\r\n* GA quay.io deploy: cache container layers by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1768\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20221109155812...3.1.20221201130942",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20221201130942",
        "name": "3.1.20221201130942",
        "release_id": 84808725,
        "tag": "3.1.20221201130942",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20221201130942",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/84808725",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/84808725",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20221201130942"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2022-11-09T15:58:12Z",
        "date_published": "2022-11-09T20:00:41Z",
        "description": "## What's Changed\r\n* udocker: use --nobanner as well by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1761\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20221108205138...3.1.20221109155812",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20221109155812",
        "name": "3.1.20221109155812",
        "release_id": 82598849,
        "tag": "3.1.20221109155812",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20221109155812",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/82598849",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/82598849",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20221109155812"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2022-11-08T20:51:38Z",
        "date_published": "2022-11-08T22:06:24Z",
        "description": "## What's Changed\r\n* Fix '--make-template' for union types by @tom-tan in https://github.com/common-workflow-language/cwltool/pull/1760\r\n\r\n### misc\r\n* upgrade udocker test to v1.3.5 by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1756\r\n* Update pytest requirement from <7.2,>=6.2 to >=6.2,<7.3 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1757\r\n* Bump mypy from 0.982 to 0.990 by @dependabot in https://github.com/common-workflow-language/cwltool/pull/1759\r\n\r\n\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20221018083734...3.1.20221108205138",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20221108205138",
        "name": "3.1.20221108205138",
        "release_id": 82445661,
        "tag": "3.1.20221108205138",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20221108205138",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/82445661",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/82445661",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20221108205138"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mr-c",
          "type": "User"
        },
        "date_created": "2022-10-18T08:37:34Z",
        "date_published": "2022-10-18T14:13:53Z",
        "description": "## What's Changed\r\n* link to loops docs by @mr-c in https://github.com/common-workflow-language/cwltool/pull/1749\r\n* allow mypy process type to be used as by interpreted subclasses by @fmigneault in https://github.com/common-workflow-language/cwltool/pull/1746\r\n\r\n## New Contributors\r\n* @fmigneault made their first contribution in https://github.com/common-workflow-language/cwltool/pull/1746\r\n\r\n**Full Changelog**: https://github.com/common-workflow-language/cwltool/compare/3.1.20221008225030...3.1.20221018083734",
        "html_url": "https://github.com/common-workflow-language/cwltool/releases/tag/3.1.20221018083734",
        "name": "3.1.20221018083734",
        "release_id": 80215692,
        "tag": "3.1.20221018083734",
        "tarball_url": "https://api.github.com/repos/common-workflow-language/cwltool/tarball/3.1.20221018083734",
        "type": "Release",
        "url": "https://api.github.com/repos/common-workflow-language/cwltool/releases/80215692",
        "value": "https://api.github.com/repos/common-workflow-language/cwltool/releases/80215692",
        "zipball_url": "https://api.github.com/repos/common-workflow-language/cwltool/zipball/3.1.20221018083734"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Overriding workflow requirements at load time",
        "type": "Text_excerpt",
        "value": "=============================================\n\nSometimes a workflow needs additional requirements to run in a particular\nenvironment or with a particular dataset.  To avoid the need to modify the\nunderlying workflow, cwltool supports requirement \"overrides\".\n\nThe format of the \"overrides\" object is a mapping of item identifier (workflow,\nworkflow step, or command line tool) to the process requirements that should be applied.\n\n.. code:: yaml\n\n  cwltool:overrides:\n    echo.cwl:\n      requirements:\n        EnvVarRequirement:\n          envDef:\n            MESSAGE: override_value\n\nOverrides can be specified either on the command line, or as part of the job\ninput document.  Workflow steps are identified using the name of the workflow\nfile followed by the step name as a document fragment identifier \"#id\".\nOverride identifiers are relative to the top-level workflow document.\n\n.. code:: bash\n\n  cwltool --overrides overrides.yml my-tool.cwl my-job.yml\n\n.. code:: yaml\n\n  input_parameter1: value1\n  input_parameter2: value2\n  cwltool:overrides:\n    workflow.cwl#step1:\n      requirements:\n        EnvVarRequirement:\n          envDef:\n            MESSAGE: override_value\n\n.. code:: bash\n\n  cwltool my-tool.cwl my-job-with-overrides.yml\n\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running a tool or workflow from remote or local locations",
        "type": "Text_excerpt",
        "value": "=========================================================\n\n``cwltool`` can run tool and workflow descriptions on both local and remote\nsystems via its support for HTTP[S] URLs.\n\nInput job files and Workflow steps (via the `run` directive) can reference CWL\ndocuments using absolute or relative local filesystem paths. If a relative path\nis referenced and that document isn't found in the current directory, then the\nfollowing locations will be searched:\nhttp://www.commonwl.org/v1.0/CommandLineTool.html#Discovering_CWL_documents_on_a_local_filesystem\n\nYou can also use `cwldep <https://github.com/common-workflow-language/cwldep>`_\nto manage dependencies on external tools and workflows.\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running only part of a workflow",
        "type": "Text_excerpt",
        "value": "===============================\n\nYou can run a partial workflow with the ``--target`` (``-t``) option.  This\ntakes the name of an output parameter, workflow step, or input\nparameter in the top-level workflow.  You may provide multiple\ntargets.\n\n.. code:: bash\n\n  cwltool --target step3 my-wf.cwl\n\nIf a target is an output parameter, it will only run only the steps\nthat contribute to that output.  If a target is a workflow step, it\nwill run the workflow starting from that step.  If a target is an\ninput parameter, it will only run the steps connected to\nthat input.\n\nUse ``--print-targets`` to get a listing of the targets of a workflow.\nTo see which steps will run, use ``--print-subgraph`` with\n``--target`` to get a printout of the workflow subgraph for the\nselected targets.\n\n.. code:: bash\n\n  cwltool --print-targets my-wf.cwl\n\n  cwltool --target step3 --print-subgraph my-wf.cwl > my-wf-starting-from-step3.cwl\n\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running MPI-based tools that need to be launched",
        "type": "Text_excerpt",
        "value": "================================================\n\nCwltool supports an extension to the CWL spec\n``http://commonwl.org/cwltool#MPIRequirement``. When the tool\ndefinition has this in its ``requirements``/``hints`` section, and\ncwltool has been run with ``--enable-ext``, then the tool's command\nline will be extended with the commands needed to launch it with\n``mpirun`` or similar. You can specify the number of processes to\nstart as either a literal integer or an expression (that will result\nin an integer). For example::\n\n  #!/usr/bin/env cwl-runner\n  cwlVersion: v1.1\n  class: CommandLineTool\n  $namespaces:\n    cwltool: \"http://commonwl.org/cwltool#\"\n  requirements:\n    cwltool:MPIRequirement:\n      processes: $(inputs.nproc)\n  inputs:\n    nproc:\n      type: int\n\nInteraction with containers: the MPIRequirement currently prepends its\ncommands to the front of the command line that is constructed. If you\nwish to run a containerized application in parallel, for simple use\ncases, this does work with Singularity, depending upon the platform\nsetup. However, this combination should be considered \"alpha\" -- please\ndo report any issues you have! This does not work with Docker at the\nmoment. (More precisely, you get `n` copies of the same single process\nimage run at the same time that cannot communicate with each other.)\n\nThe host-specific parameters are configured in a simple YAML file\n(specified with the ``--mpi-config-file`` flag). The allowed keys are\ngiven in the following table; all are optional.\n\n+----------------+------------------+----------+------------------------------+\n| Key            | Type             | Default  | Description                  |\n+================+==================+==========+==============================+\n| runner         | str              | \"mpirun\" | The primary command to use.  |\n+----------------+------------------+----------+------------------------------+\n| nproc_flag     | str              | \"-n\"     | Flag to set number of        |\n|                |                  |          | processes to start.          |\n+----------------+------------------+----------+------------------------------+\n| default_nproc  | int              | 1        | Default number of processes. |\n+----------------+------------------+----------+------------------------------+\n| extra_flags    | List[str]        | []       | A list of any other flags to |\n|                |                  |          | be added to the runner's     |\n|                |                  |          | command line before          |\n|                |                  |          | the ``baseCommand``.         |\n+----------------+------------------+----------+------------------------------+\n| env_pass       | List[str]        | []       | A list of environment        |\n|                |                  |          | variables that should be     |\n|                |                  |          | passed from the host         |\n|                |                  |          | environment through to the   |\n|                |                  |          | tool (e.g., giving the       |\n|                |                  |          | node list as set by your     |\n|                |                  |          | scheduler).                  |\n+----------------+------------------+----------+------------------------------+\n| env_pass_regex | List[str]        | []       | A list of python regular     |\n|                |                  |          | expressions that will be     |\n|                |                  |          | matched against the host's   |\n|                |                  |          | environment. Those that match|\n|                |                  |          | will be passed through.      |\n+----------------+------------------+----------+------------------------------+\n| env_set        | Mapping[str,str] | {}       | A dictionary whose keys are  |\n|                |                  |          | the environment variables set|\n|                |                  |          | and the values being the     |\n|                |                  |          | values.                      |\n+----------------+------------------+----------+------------------------------+\n\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running tests locally",
        "type": "Text_excerpt",
        "value": "=====================\n\n-  Running basic tests ``(/tests)``:\n\nTo run the basic tests after installing `cwltool` execute the following:\n\n.. code:: bash\n\n  pip install -rtest-requirements.txt\n  pytest   ## N.B. This requires node.js or docker to be available\n\nTo run various tests in all supported Python environments, we use `tox <https://github.com/common-workflow-language/cwltool/tree/main/tox.ini>`_. To run the test suite in all supported Python environments\nfirst clone the complete code repository (see the ``git clone`` instructions above) and then run\nthe following in the terminal:\n``pip install \"tox<4\"; tox -p``\n\nList of all environment can be seen using:\n``tox --listenvs``\nand running a specific test env using:\n``tox -e <env name>``\nand additionally run a specific test using this format:\n``tox -e py310-unit -- -v tests/test_examples.py::test_scandeps``\n\n-  Running the entire suite of CWL conformance tests:\n\nThe GitHub repository for the CWL specifications contains a script that tests a CWL\nimplementation against a wide array of valid CWL files using the `cwltest <https://github.com/common-workflow-language/cwltest>`_\nprogram\n\nInstructions for running these tests can be found in the Common Workflow Language Specification repository at https://github.com/common-workflow-language/common-workflow-language/blob/main/CONFORMANCE_TESTS.md .\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:42:56",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 333
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use with boot2docker on macOS",
        "type": "Text_excerpt",
        "value": "=============================\nboot2docker runs Docker inside a virtual machine, and it only mounts ``Users``\non it. The default behavior of CWL is to create temporary directories under e.g.\n``/Var`` which is not accessible to Docker containers.\n\nTo run CWL successfully with boot2docker you need to set the ``--tmpdir-prefix``\nand ``--tmp-outdir-prefix`` to somewhere under ``/Users``::\n\n    $ cwl-runner --tmp-outdir-prefix=/Users/username/project --tmpdir-prefix=/Users/username/project wc-tool.cwl wc-job.json\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use with GA4GH Tool Registry API",
        "type": "Text_excerpt",
        "value": "================================\n\nCwltool can launch tools directly from `GA4GH Tool Registry API`_ endpoints.\n\nBy default, cwltool searches https://dockstore.org/ .  Use ``--add-tool-registry`` to add other registries to the search path.\n\nFor example ::\n\n  cwltool quay.io/collaboratory/dockstore-tool-bamstats:develop test.json\n\nand (defaults to latest when a version is not specified) ::\n\n  cwltool quay.io/collaboratory/dockstore-tool-bamstats test.json\n\nFor this example, grab the test.json (and input file) from https://github.com/CancerCollaboratory/dockstore-tool-bamstats ::\n\n  wget https://dockstore.org/api/api/ga4gh/v2/tools/quay.io%2Fbriandoconnor%2Fdockstore-tool-bamstats/versions/develop/PLAIN-CWL/descriptor/test.json\n  wget https://github.com/CancerCollaboratory/dockstore-tool-bamstats/raw/develop/rna.SRR948778.bam\n\n\n.. _`GA4GH Tool Registry API`: https://github.com/ga4gh/tool-registry-schemas\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": ". Use CWL `load_tool()` to load document.",
        "type": "Text_excerpt",
        "value": "   #. Fetches the document from file or URL\n   #. Applies preprocessing (syntax/identifier expansion and normalization)\n   #. Validates the document based on cwlVersion\n   #. If necessary, updates the document to the latest spec\n   #. Constructs a Process object using ``make_tool()``` callback.  This yields a\n      CommandLineTool, Workflow, or ExpressionTool.  For workflows, this\n      recursively constructs each workflow step.\n   #. To construct custom types for CommandLineTool, Workflow, or\n      ExpressionTool, provide a custom ``make_tool()``\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": ". Iterate on the `job()` method of the Process object to get back runnable jobs.",
        "type": "Text_excerpt",
        "value": "   #. ``job()`` is a generator method (uses the Python iterator protocol)\n   #. Each time the ``job()`` method is invoked in an iteration, it returns one\n      of: a runnable item (an object with a ``run()`` method), ``None`` (indicating\n      there is currently no work ready to run) or end of iteration (indicating\n      the process is complete.)\n   #. Invoke the runnable item by calling ``run()``.  This runs the tool and gets output.\n   #. An output callback reports the output of a process.\n   #. ``job()`` may be iterated over multiple times.  It will yield all the work\n      that is currently ready to run and then yield None.\n"
      },
      "source": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/README.rst",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/cwltool/schemas/v1.2.0-dev2/cwl-runner.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/cwltool/schemas/v1.1.0-dev1/cwl-runner.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/cwltool/schemas/v1.3.0-dev1/cwl-runner.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/cwltool/schemas/v1.2.0-dev1/cwl-runner.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/cwltool/schemas/v1.2.0-dev5/cwl-runner.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/cwltool/schemas/v1.1/cwl-runner.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/cwltool/schemas/v1.2.0-dev3/cwl-runner.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/common-workflow-language/cwltool/main/cwltool/schemas/v1.2.0-dev4/cwl-runner.cwl"
      },
      "technique": "file_exploration"
    }
  ]
}