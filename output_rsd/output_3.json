{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "The ASTRA Toolbox"
        ],
        "type": "Text_excerpt",
        "value": "If you use the ASTRA Toolbox for your research, we would appreciate it if you would refer to the following papers:\n\nW. van Aarle, W. J. Palenstijn, J. Cant, E. Janssens, F. Bleichrodt, A. Dabravolski, J. De Beenhouwer, K. J. Batenburg, and J. Sijbers, \u201cFast and Flexible X-ray Tomography Using the ASTRA Toolbox\u201d, Optics Express, 24(22), 25129-25147, (2016), https://dx.doi.org/10.1364/OE.24.025129\n\nW. van Aarle, W. J. Palenstijn, J. De Beenhouwer, T. Altantzis, S. Bals, K. J. Batenburg, and J. Sijbers, \u201cThe ASTRA Toolbox: A platform for advanced algorithm development in electron tomography\u201d, Ultramicroscopy, 157, 35\u201347, (2015), https://dx.doi.org/10.1016/j.ultramic.2015.05.002\n\n\nAdditionally, if you use parallel beam GPU code, we would appreciate it if you would refer to the following paper:\n\nW. J. Palenstijn, K J. Batenburg, and J. Sijbers, \"Performance improvements for iterative electron tomography reconstruction using graphics processing units (GPUs)\", Journal of Structural Biology, vol. 176, issue 2, pp. 250-253, 2011, https://dx.doi.org/10.1016/j.jsb.2011.07.017\n\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at \nastra@astra-toolbox.com. All complaints will be reviewed and investigated\npromptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/.github/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/astra-toolbox/astra-toolbox"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "The ASTRA Toolbox"
        ],
        "type": "Text_excerpt",
        "value": "email: astra@astra-toolbox.com\nwebsite: https://www.astra-toolbox.com/\n\nCopyright: 2010-2024, imec Vision Lab, University of Antwerp\n           2014-2024, CWI, Amsterdam\n           https://visielab.uantwerpen.be/ and https://www.cwi.nl/\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "## Contributing to ASTRA Toolbox\n\n### Questions and discussions\nIf you have general questions about using the toolbox, feel free to open a [new discussion](https://github.com/astra-toolbox/astra-toolbox/discussions) on GitHub. We also suggest checking the available [documentation](https://astra-toolbox.com/docs/index.html) and [examples](https://github.com/astra-toolbox/astra-toolbox/tree/master/samples), as well as the existing [discussions](https://github.com/astra-toolbox/astra-toolbox/discussions) and [issues](https://github.com/astra-toolbox/astra-toolbox/issues) to get more information beforehand.\n\n### Bugs and feature requests\nIf you find a bug in the code or would like to suggest adding a new feature to the toolbox, please confirm that it hasn't already been reported/suggested in the [GitHub repository](https://github.com/astra-toolbox/astra-toolbox/issues) and open  a new issue following the suggested guidelines.\n\n### Contributions to the code\nWe welcome contributions to the development of the toolbox and its [documentation](https://github.com/astra-toolbox/astra-toolbox.github.io), which can be submitted as [pull requests](https://github.com/astra-toolbox/astra-toolbox/pulls) on GitHub. The guidelines on building the development version of the toolbox can be found in the [documentation](https://astra-toolbox.com/docs/install.html). If you want to add a new feature or do a significant refactoring of the code, please first open a [new issue](https://github.com/astra-toolbox/astra-toolbox/issues) to coordinate how it fits into the scope and roadmap of the toolbox. \n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/.github/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-12-12T11:12:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-30T14:55:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ASTRA Tomography Toolbox"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9342758148376636,
      "result": {
        "original_header": "The ASTRA Toolbox",
        "type": "Text_excerpt",
        "value": "The ASTRA Toolbox is a MATLAB and Python toolbox of high-performance GPU primitives for 2D and 3D tomography. \nWe support 2D parallel and fan beam geometries, and 3D parallel and cone beam.  All of them have highly flexible source/detector positioning. \nA large number of 2D and 3D algorithms are available, including FBP, SIRT, SART, CGLS. \nThe basic forward and backward projection operations are GPU-accelerated, and directly callable from MATLAB and Python to enable building new algorithms. \n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation / samples",
        "parent_header": [
          "The ASTRA Toolbox"
        ],
        "type": "Text_excerpt",
        "value": "See the MATLAB and Python code samples in the `samples/` directory and on https://www.astra-toolbox.com/.\n\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/astra-toolbox/astra-toolbox/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 206
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "astra-toolbox/astra-toolbox"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The ASTRA Toolbox"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/conda/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/conda/release.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/conda/astra-toolbox/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/conda/libastra/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/pypi/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/pypi/release.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/containers/podman/setup_manylinux.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/containers/podman/setup_debian12.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/containers/podman/util.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/containers/podman/setup_debian9.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/containers/podman/setup_debian11.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/build/linux/autogen.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows/Linux, using conda for Python packages",
        "parent_header": [
          "The ASTRA Toolbox",
          "Installation instructions"
        ],
        "type": "Text_excerpt",
        "value": "Requirements: [conda](https://conda.io/) Python environment, with 64 bit Python 3.9-3.12.\n\nWe provide packages for the ASTRA Toolbox in the `astra-toolbox` channel for the\nconda package manager. We depend on CUDA packages available from the `nvidia`\nchannel. To install ASTRA into the current conda environement, run:\n\n```\nconda install -c astra-toolbox -c nvidia astra-toolbox\n```\n\nWe also provide development packages between releases occasionally:\n\n```\nconda install -c astra-toolbox/label/dev -c nvidia astra-toolbox\n```\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows, binary",
        "parent_header": [
          "The ASTRA Toolbox",
          "Installation instructions"
        ],
        "type": "Text_excerpt",
        "value": "Add the mex and tools subdirectories to your MATLAB path, or install the Python\nwheel using pip. We require the Microsoft Visual Studio 2017 redistributable\npackage. If this is not already installed on your system, it is included as\nvc_redist.x64.exe in the ASTRA zip file.\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "For MATLAB",
        "parent_header": [
          "The ASTRA Toolbox",
          "Installation instructions",
          "Linux, from source"
        ],
        "type": "Text_excerpt",
        "value": "Requirements: g++ (7 or higher), CUDA (11.0 or higher), MATLAB (R2012a or higher)\n\n```\ncd build/linux\n./autogen.sh   # when building a git version\n./configure --with-cuda=/usr/local/cuda \\\n            --with-matlab=/usr/local/MATLAB/R2012a \\\n            --prefix=$HOME/astra \\\n            --with-install-type=module\nmake\nmake install\n```\nAdd $HOME/astra/matlab and its subdirectories (tools, mex) to your MATLAB path.\n\nIf you want to build the Octave interface instead of the MATLAB interface,\nspecify `--enable-octave` instead of `--with-matlab=...`. The Octave files\nwill be installed into $HOME/astra/octave . On some Linux distributions\nbuilding the Astra Octave interface will require the Octave development package\nto be installed (e.g., liboctave-dev on Ubuntu).\n\n\nNB: Each MATLAB version only supports a specific range of g++ versions.\nDespite this, if you have a newer g++ and if you get errors related to missing\nGLIBCXX_3.4.xx symbols, it is often possible to work around this requirement\nby deleting the version of libstdc++ supplied by MATLAB in\nMATLAB_PATH/bin/glnx86 or MATLAB_PATH/bin/glnxa64 (at your own risk),\nor setting `LD_PRELOAD=/usr/lib64/libstdc++.so.6` (or similar) when starting\nMATLAB.\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "For Python",
        "parent_header": [
          "The ASTRA Toolbox",
          "Installation instructions",
          "Linux, from source"
        ],
        "type": "Text_excerpt",
        "value": "Requirements: g++ (7 or higher), CUDA (11.0 or higher), Python (3.x), Cython, six, scipy\n\n```\ncd build/linux\n./autogen.sh   # when building a git version\n./configure --with-cuda=/usr/local/cuda \\\n            --with-python \\\n            --with-install-type=module\nmake\nmake install\n```\n\nThis will install Astra into your current Python environment.\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "As a C++ library",
        "parent_header": [
          "The ASTRA Toolbox",
          "Installation instructions",
          "Linux, from source"
        ],
        "type": "Text_excerpt",
        "value": "Requirements: g++ (7 or higher), CUDA (11.0 or higher)\n\n```\ncd build/linux\n./autogen.sh   # when building a git version\n./configure --with-cuda=/usr/local/cuda\nmake\nmake install-dev\n```\n\nThis will install the Astra library and C++ headers.\n\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "macOS, from source",
        "parent_header": [
          "The ASTRA Toolbox",
          "Installation instructions"
        ],
        "type": "Text_excerpt",
        "value": "Use the Homebrew package manager to install boost, libtool, autoconf, automake.\n\n```\ncd build/linux\n./autogen.sh\nCPPFLAGS=\"-I/usr/local/include\" NVCCFLAGS=\"-I/usr/local/include\" ./configure \\\n  --with-cuda=/usr/local/cuda \\\n  --with-matlab=/Applications/MATLAB_R2016b.app \\\n  --prefix=$HOME/astra \\\n  --with-install-type=module\nmake\nmake install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows, from source using Visual Studio 2017",
        "parent_header": [
          "The ASTRA Toolbox",
          "Installation instructions"
        ],
        "type": "Text_excerpt",
        "value": "Requirements: Visual Studio 2017 (full or community), boost (recent),\n              CUDA (11.0 or higher), MATLAB (R2012a or higher)\n              and/or WinPython 3.x.\n\nUsing the Visual Studio IDE:\n\nSet the environment variable MATLAB_ROOT to your MATLAB install location.\nCopy boost headers to lib\\include\\boost, and boost libraries to lib\\x64.\nOpen build\\msvc\\astra_vc14.sln in Visual Studio.\nSelect the appropriate solution configuration (typically Release_CUDA|x64).\nBuild the solution.\nInstall by copying AstraCuda64.dll and all .mexw64 files from\n  build\\msvc\\bin\\x64\\Release_CUDA and the entire matlab/tools directory to a directory\n  to be added to your MATLAB path.\n\n\nUsing .bat scripts in build\\msvc:\n\nEdit build_env.bat and set up the correct directories.\nRun build_setup.bat to automatically copy the boost headers and libraries.\nFor MATLAB: Run build_matlab.bat. The .dll and .mexw64 files will be in bin\\x64\\Release_Cuda.\nFor Python 3.12: Run build_python312.bat. Astra will be directly installed into site-packages.\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Testing your installation",
        "parent_header": [
          "The ASTRA Toolbox"
        ],
        "type": "Text_excerpt",
        "value": "To perform a (very) basic test of your ASTRA installation in Python, you can\nrun the following Python command.\n\n```\nimport astra\nastra.test()\n```\n\nTo test your ASTRA installation in MATLAB, the equivalent command is:\n\n```\nastra_test\n```\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "COPYING"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/python/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "The ASTRA Toolbox"
        ],
        "type": "Text_excerpt",
        "value": "The ASTRA Toolbox is open source under the GPLv3 license.\n"
      },
      "source": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "astra-toolbox"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "astra-toolbox"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1658350,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cuda",
        "size": 333873,
        "type": "Programming_language",
        "value": "Cuda"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 275647,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 168516,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 106903,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 98148,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 19156,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 17657,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 15277,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 4252,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PowerShell",
        "size": 3382,
        "type": "Programming_language",
        "value": "PowerShell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.txt"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/astra-toolbox/astra-toolbox/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "askorikov",
          "type": "User"
        },
        "date_created": "2024-07-10T08:47:32Z",
        "date_published": "2024-07-12T12:43:59Z",
        "description": "## Release highlights\r\n\r\n* Add support for Python 3.12, CUDA 12.5, and Numpy 2.0\r\n* ASTRA conda packages for CUDA 11.6 and above now depend on Nvidia's CUDA packages instead of on the monolithic cudatoolkit package. This improves compatibility of our conda packages with PyTorch and reduces the installation size.\r\n* Speed up FDK, especially when using multiple GPUs.\r\n* Improve error reporting.\r\n* Add Shepp-Logan phantom generator.\r\n* Update the build infrastructure and instructions.\r\n\r\n**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/compare/v2.1.0...v2.2.0",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v2.2.0",
        "name": "v2.2.0",
        "release_id": 165150084,
        "tag": "v2.2.0",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v2.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/165150084",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/165150084",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v2.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wjp",
          "type": "User"
        },
        "date_created": "2022-02-01T08:28:01Z",
        "date_published": "2022-02-02T09:27:43Z",
        "description": "## Release highlights\r\n  * fix potential hang in CUDA FFT, and speed it up (for FBP_CUDA and FDK_CUDA)\r\n  * fix GPULink with rows not padded to multiple of 32 pixels\r\n  * fix output value scaling for short-scan FDK\r\n  * improve CUDA error logging\r\n  * fix compatibility issues with the conda-forge and nvidia conda channels\r\n\r\n## Included pull requests\r\n* DOC: Update __version__ param in python module by @carterbox in https://github.com/astra-toolbox/astra-toolbox/pull/306\r\n* Implemented _adjoint of OpTomo by equating it to _transpose by @RendersJens in https://github.com/astra-toolbox/astra-toolbox/pull/281\r\n\r\n**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/compare/v2.0.0...v2.1.0",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v2.1.0",
        "name": "v2.1.0",
        "release_id": 58497291,
        "tag": "v2.1.0",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/58497291",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/58497291",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wjp",
          "type": "User"
        },
        "date_created": "2021-10-27T08:04:52Z",
        "date_published": "2021-11-11T12:02:14Z",
        "description": "ASTRA v2.0 officially wraps up all the consistency and compatibility improvements from the development releases over the past few years.\r\n\r\n## Release highlights\r\n  * fix inconsistent scaling of output value depending on detector pixel size. See the 2020-01-17 news entry on our [news page](https://astra-toolbox.com/news.html) for more details\r\n  * add experimental interfaces to FP3D, BP3D, FDK to make ASTRA calls by 3rd party toolboxes more efficient and flexible\r\n  * improve compatibility with modern Python, CUDA, Linux and Windows versions\r\n\r\n## Included pull requests\r\n* Add 2D `parallel_vec` geometry and remove ExtraDetectorOffset. by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/69\r\n* Custom filter support for CPU FBP by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/160\r\n* Add support for checking features at run-time by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/170\r\n* Read filter config for FBP from cfg.options by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/180\r\n* Add basic implementation of par2d CPU Distance Driven projector by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/183\r\n* Use recent version of conda during linux conda-build by @ahendriksen in https://github.com/astra-toolbox/astra-toolbox/pull/213\r\n* Use conda compiler toolchain for conda builds by @ahendriksen in https://github.com/astra-toolbox/astra-toolbox/pull/214\r\n* Fix memory leak in CUDA 2D par_fp by @fsherry in https://github.com/astra-toolbox/astra-toolbox/pull/256\r\n\r\n**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/compare/v1.8.3...v2.0.0",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v2.0.0",
        "name": "v2.0.0",
        "release_id": 53161658,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/53161658",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/53161658",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "askorikov",
          "type": "User"
        },
        "date_created": "2019-07-08T21:38:10Z",
        "date_published": "2023-07-18T08:53:46Z",
        "description": "## Release highlights\r\n  * add 2D parallel_vec geometry. The old ExtraDetectorOffset option has been removed. Please use parallel_vec to achieve this effect now\r\n  * fix inconsistent rotation direction in CPU fan beam code\r\n  * fix scaling of output values for FDK and fan beam FBP in some geometries\r\n\r\n## Included pull requests\r\n* Add 2D `parallel_vec` geometry and remove ExtraDetectorOffset. by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/69\r\n* Custom filter support for CPU FBP by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/160\r\n* Add support for checking features at run-time by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/170\r\n* Read filter config for FBP from cfg.options by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/180\r\n* Add basic implementation of par2d CPU Distance Driven projector by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/183\r\n\r\n\r\n**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/compare/v1.8.3...v1.9.0.dev11",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v1.9.0.dev11",
        "name": "v1.9.0.dev11",
        "release_id": 112630706,
        "tag": "v1.9.0.dev11",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v1.9.0.dev11",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112630706",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112630706",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v1.9.0.dev11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "askorikov",
          "type": "User"
        },
        "date_created": "2017-11-06T13:54:03Z",
        "date_published": "2023-07-18T08:33:11Z",
        "description": "## Release highlights\r\n  * fix geometry memory leak in 3D FP/BP\r\n  * fix FDK short scan weighting\r\n  * add preliminary support for building on macOS\r\n  * add experimental support for using externally managed GPU memory from python (see samples/python/s021_pygpu.py)\r\n  * our Linux conda python packages now have variants depending on the cudatoolkit version\r\n  * add basic post-install tests test_CUDA/test_noCUDA (see README)\r\n\r\n## Included pull requests\r\n* Use specific numpy version in conda package by @dmpelt in https://github.com/astra-toolbox/astra-toolbox/pull/85\r\n* GPULink support by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/93\r\n* Travis: only install cuda packages for cuda builds by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/108\r\n* added vol_geom and proj_geom to the properties by @vincentvn in https://github.com/astra-toolbox/astra-toolbox/pull/120\r\n* README: boost lib path correction by @codeling in https://github.com/astra-toolbox/astra-toolbox/pull/106\r\n* Add basic tests to check an astra installation by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/126\r\n\r\n**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/compare/v1.8...v1.8.3",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v1.8.3",
        "name": "v1.8.3",
        "release_id": 112628522,
        "tag": "v1.8.3",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v1.8.3",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112628522",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112628522",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v1.8.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "askorikov",
          "type": "User"
        },
        "date_created": "2016-12-05T13:45:59Z",
        "date_published": "2023-07-18T08:32:30Z",
        "description": "## Release highlights\r\n  * the Windows binary release now requires CUDA 8.0\r\n  * major changes to the way 'make install' works when building from source\r\n  * removed GPU memory size restrictions for FDK\r\n  * added multi-GPU support to 3D FP/BP/FDK\r\n  * added relaxation factor option to SIRT, SART\r\n  * fixed certain projections parallel to XZ or YZ planes\r\n  * fixed accumulating multiple raylengths in SART\r\n  * for matlab OpTomo, make output type match input type\r\n  * for python OpTomo, add FP/BP functions with optional 'out' argument\r\n  * fixed problems with non-US locales\r\n\r\n## Included pull requests\r\n* Fix cppcheck warnings by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/37\r\n* Fix accumulating multiple raylengths in SART by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/36\r\n* Add relaxation factor option to SIRT, SART by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/35\r\n* Add an AstraIndexManager by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/29\r\n* Change CPU FFT implementation by @dmpelt in https://github.com/astra-toolbox/astra-toolbox/pull/48\r\n* Fix missing backslash in readme.md install by @adler-j in https://github.com/astra-toolbox/astra-toolbox/pull/43\r\n* Change flatten to ravel in Python code by @dmpelt in https://github.com/astra-toolbox/astra-toolbox/pull/49\r\n* Reverse output of astra.data3d.dimensions by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/50\r\n* Use CXX for Python compilation as well by @dmpelt in https://github.com/astra-toolbox/astra-toolbox/pull/46\r\n* Give OpTomo FP/BP functions with optional out argument by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/47\r\n* Avoid defining singleton construction in header file by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/55\r\n* Compute FBP filter in spatial domain by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/59\r\n* Improve efficiency of CGM volume block reduction by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/58\r\n* Minor string parsing changes by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/62\r\n* Add support for non-cube voxels by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/41\r\n* Use CompositeGeometryManager for FDK by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/42\r\n* Fix build with MS VS 2015 CE by @buzmakov in https://github.com/astra-toolbox/astra-toolbox/pull/72\r\n* Add SIRT, CGLS python plugins by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/66\r\n* Add experimental support for Octave by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/73\r\n* Overhaul package installation by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/75\r\n* Move to VS2015+CUDA8 and automate Windows builds by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/74\r\n* Change order of template instantiations by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/77\r\n* Add option to specify custom filter for FDK by @dmpelt in https://github.com/astra-toolbox/astra-toolbox/pull/56\r\n* Expose the density weighting option of cone_bp by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/84\r\n* Add scripts for building conda packages using Docker by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/81\r\n* Add astra.__version__ (PEP396) by @wjp in https://github.com/astra-toolbox/astra-toolbox/pull/82\r\n\r\n**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/compare/v1.7.1...v1.8",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v1.8",
        "name": "v1.8",
        "release_id": 112628413,
        "tag": "v1.8",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112628413",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112628413",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "askorikov",
          "type": "User"
        },
        "date_created": "2015-12-23T09:53:37Z",
        "date_published": "2023-07-18T08:31:31Z",
        "description": "## Release highlights\r\n  * fix crash with certain 2D CUDA FP calls\r\n\r\n**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/compare/v1.7...v1.7.1",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v1.7.1",
        "name": "v1.7.1",
        "release_id": 112628341,
        "tag": "v1.7.1",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v1.7.1",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112628341",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112628341",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v1.7.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "askorikov",
          "type": "User"
        },
        "date_created": "2015-12-04T15:35:00Z",
        "date_published": "2023-07-18T08:31:02Z",
        "description": "## Release highlights\r\n  * experimental MPI distributed computing support in Python\r\n  * experimental support in Python for FP and BP of objects composited from multiple 3d data objects, at possibly different resolutions. This also removes some restrictions on data size for 3D GPU FP and BP.\r\n  * support for Python algorithm plugins\r\n  * removed restrictions on volume geometries: The volume no longer has to be centered; Voxels still have to be cubes, but no longer 1x1x1.\r\n  * build fixes for newer platforms\r\n  * various consistency and bug fixes\r\n\r\n**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/compare/v1.6...v1.7",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v1.7",
        "name": "v1.7",
        "release_id": 112628260,
        "tag": "v1.7",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112628260",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112628260",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "askorikov",
          "type": "User"
        },
        "date_created": "2015-05-29T11:15:47Z",
        "date_published": "2023-07-18T08:29:55Z",
        "description": "## Release highlights\r\n  * integrate and improve python interface\r\n  * integrate opSpot-based opTomo operator\r\n  * build fixes for newer platforms\r\n  * various consistency and bug fixes\r\n\r\n\r\n**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/compare/v1.5...v1.6",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v1.6",
        "name": "v1.6",
        "release_id": 112628147,
        "tag": "v1.6",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112628147",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112628147",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "askorikov",
          "type": "User"
        },
        "date_created": "2015-01-30T10:32:43Z",
        "date_published": "2023-07-18T08:28:28Z",
        "description": "## Release highlights\r\n  * add support for fan beam FBP\r\n  * remove limits on number of angles in GPU code. (They are still limited by available memory, however)\r\n  * update the included version of the DART algorithm\r\n  * build fixes for newer platforms\r\n  * various consistency and bug fixes\r\n\r\n**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/compare/v1.4...v1.5",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v1.5",
        "name": "v1.5",
        "release_id": 112627955,
        "tag": "v1.5",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112627955",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112627955",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "askorikov",
          "type": "User"
        },
        "date_created": "2014-04-02T14:21:59Z",
        "date_published": "2023-07-18T08:27:38Z",
        "description": "## Release highlights\r\n  * various consistency and bug fixes\r\n  * add global astra_set_gpu_index\r\n\r\n**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/compare/v1.3...v1.4",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v1.4",
        "name": "v1.4",
        "release_id": 112627893,
        "tag": "v1.4",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112627893",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112627893",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "askorikov",
          "type": "User"
        },
        "date_created": "2013-07-01T22:34:11Z",
        "date_published": "2023-07-18T08:22:49Z",
        "description": "**Full Changelog**: https://github.com/astra-toolbox/astra-toolbox/commits/v1.3",
        "html_url": "https://github.com/astra-toolbox/astra-toolbox/releases/tag/v1.3",
        "name": "v1.3",
        "release_id": 112481968,
        "tag": "v1.3",
        "tarball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/tarball/v1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112481968",
        "value": "https://api.github.com/repos/astra-toolbox/astra-toolbox/releases/112481968",
        "zipball_url": "https://api.github.com/repos/astra-toolbox/astra-toolbox/zipball/v1.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 22:52:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 443
      },
      "technique": "GitHub_API"
    }
  ]
}