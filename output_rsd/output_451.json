{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "@software{Monticone_Moroni_UnrollingAverages_2021,\n         abstract     = {A Julia package to deconvolve (\"unroll\") moving averages of time series to get the original ones back.},\n         author       = {Monticone, Pietro and Moroni, Claudio},\n         doi          = {10.5281/zenodo.5725301},\n         institution  = {University of Turin},\n         keywords     = {Julia Language, Time Series, Statistics, Data Science, Data Analysis, Reverse Engineering},\n         license      = {MIT},\n         organization = {Interdisciplinary Physics Team (InPhyT)},\n         title        = {UnrollingAverages.jl},\n         url          = {https://doi.org/10.5281/zenodo.5725301},\n         year         = {2021}\n         }"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/CITATION.bib",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to Cite",
        "parent_header": [
          "UnrollingAverages.jl"
        ],
        "type": "Text_excerpt",
        "value": "If you use this package in your work, please cite this repository using the metadata in [`CITATION.bib`](https://github.com/InPhyT/UnrollingAverages.jl/blob/main/CITATION.bib).\n"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/InPhyT/UnrollingAverages.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to Contribute",
        "parent_header": [
          "UnrollingAverages.jl"
        ],
        "type": "Text_excerpt",
        "value": "If you wish to change or add some functionality, please file an [issue](https://github.com/InPhyT/UnrollingAverages.jl/issues). Some suggestions may be found in the [Future Developments](#Future-Developments) section.\n"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-22T22:34:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-11T10:08:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Julia package to deconvolve (\"unroll\") moving averages of time series to get the original ones back."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9710292637228217,
      "result": {
        "original_header": "UnrollingAverages.jl",
        "type": "Text_excerpt",
        "value": "UnrollingAverages is a Julia package aimed at *deconvolving* (or *unrolling*) moving averages of time series to get the original ones back. \nUnrollingAverages currently assumes that the moving average is a [simple moving average](https://en.wikipedia.org/wiki/Moving_average#Simple_moving_average). Further relaxations and extensions may come in the future, see [Future Developments](#Future-Developments) section.\n \n"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9698314323825861,
      "result": {
        "original_header": "Future Developments",
        "type": "Text_excerpt",
        "value": "- Modify `initial_conditions` argument of `unroll` so that it accepts known values throughout the series;\n- Implement reversing methods for other types of moving averages .\n \n"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/InPhyT/UnrollingAverages.jl/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "InPhyT/UnrollingAverages.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "UnrollingAverages.jl"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/430885253"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "UnrollingAverages.jl"
        ],
        "type": "Text_excerpt",
        "value": "Press `]` in the Julia REPL and then\n\n```nothing\npkg> add UnrollingAverages\n```\n"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9907074264032747,
      "result": {
        "original_header": "UnrollingAverages.jl",
        "type": "Text_excerpt",
        "value": "<img align=\"right\" width=\"200\" height=\"200\" src=\"https://github.com/InPhyT/UnrollingAverages.jl/blob/main/docs/src/assets/logo.png?raw=true\"> \n"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8084728393638829,
      "result": {
        "original_header": "UnrollingAverages.jl",
        "type": "Text_excerpt",
        "value": "<img align=\"right\" width=\"200\" height=\"200\" src=\"https://github.com/InPhyT/UnrollingAverages.jl/blob/main/docs/src/assets/logo.png?raw=true\"> \n"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "julia, julia-language, julia-package, reverse-engineering, statistics, stats, time-series, time-series-analysis, time-series-data, time-series-database, time-series-transformation"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Pietro Monticone, Claudio Moroni\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/docs/src/assets/logo.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "UnrollingAverages.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "InPhyT"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Julia",
        "size": 17722,
        "type": "Programming_language",
        "value": "Julia"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-12-13T01:19:44Z",
        "date_published": "2022-12-13T01:19:45Z",
        "description": "## UnrollingAverages v0.2.3\n\n[Diff since v0.2.2](https://github.com/InPhyT/UnrollingAverages.jl/compare/v0.2.2...v0.2.3)",
        "html_url": "https://github.com/InPhyT/UnrollingAverages.jl/releases/tag/v0.2.3",
        "name": "v0.2.3",
        "release_id": 85806876,
        "tag": "v0.2.3",
        "tarball_url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/tarball/v0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/releases/85806876",
        "value": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/releases/85806876",
        "zipball_url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/zipball/v0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-12-12T19:03:18Z",
        "date_published": "2022-12-12T19:03:19Z",
        "description": "## UnrollingAverages v0.2.2\n\n[Diff since v0.2.1](https://github.com/InPhyT/UnrollingAverages.jl/compare/v0.2.1...v0.2.2)",
        "html_url": "https://github.com/InPhyT/UnrollingAverages.jl/releases/tag/v0.2.2",
        "name": "v0.2.2",
        "release_id": 85777397,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/releases/85777397",
        "value": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/releases/85777397",
        "zipball_url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-08-15T21:43:10Z",
        "date_published": "2022-08-15T21:43:11Z",
        "description": "## UnrollingAverages v0.2.1\n\n[Diff since v0.2.0](https://github.com/InPhyT/UnrollingAverages.jl/compare/v0.2.0...v0.2.1)",
        "html_url": "https://github.com/InPhyT/UnrollingAverages.jl/releases/tag/v0.2.1",
        "name": "v0.2.1",
        "release_id": 74462951,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/releases/74462951",
        "value": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/releases/74462951",
        "zipball_url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-11-27T17:23:40Z",
        "date_published": "2021-11-27T17:23:41Z",
        "description": "## UnrollingAverages v0.2.0\n\n[Diff since v0.1.1](https://github.com/InPhyT/UnrollingAverages.jl/compare/v0.1.1...v0.2.0)",
        "html_url": "https://github.com/InPhyT/UnrollingAverages.jl/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 54174708,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/releases/54174708",
        "value": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/releases/54174708",
        "zipball_url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "InterdisciplinaryPhysicsTeam",
          "type": "User"
        },
        "date_created": "2021-11-24T17:10:00Z",
        "date_published": "2021-11-24T17:38:59Z",
        "description": "First release!",
        "html_url": "https://github.com/InPhyT/UnrollingAverages.jl/releases/tag/v0.1.1",
        "name": "v0.1.1",
        "release_id": 54018594,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/releases/54018594",
        "value": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/releases/54018594",
        "zipball_url": "https://api.github.com/repos/InPhyT/UnrollingAverages.jl/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:16:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "UnrollingAverages.jl"
        ],
        "type": "Text_excerpt",
        "value": "The package exports a single function called `unroll`: it returns a `Vector` whose elements are the possible original time series.\n\n```julia\nunroll( moving_average::Vector{Float64},\n        window::Int64;\n        initial_conditions::U=nothing,\n        assert_natural::Bool=false\n      ) where {U<:Union{Tuple{Vararg{Union{Int64,Float64}}},Nothing}}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Arguments",
        "parent_header": [
          "UnrollingAverages.jl",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "- `moving_average`: the time series representing the moving average to unroll ;\n- `window`: the width of the moving average ;\n- `initial_conditions`: the initial values of the original time series to be recovered. It may be a `Tuple` of `window-1` positive integer values, or `nothing` if initial conditions are unknown. Currently it is not possible to specify values in the middle of the time series, this may be a feature to be added in the future ;\n- `assert_natural` default boolean argument. If true, the pipeline will try to recover a time series of natural numbers only. More then one acceptable time series (where \"acceptable\" means that it reproduces `moving_average`) may be found and all will be returned.\n\nA few remarks:\n\n1. If `isnothing(initial_conditions)`:\n   - `if assert_natural`, then an internal `unroll_iterative` method is called, which tries to exactly recover the whole time series, initial conditions included. Enter `?UnrollingAverages.unroll_iterative` in a Julia  to read further details;\n   - `if !assert_natural`, then an internal `unroll_linear_approximation` method is called. See this [StackExchange post](https://stats.stackexchange.com/a/68002). NB: this is an approximated method, it will generally not return the exact original time series;\n2. If `typeof(initial_conditions) <: Ntuple{window-1, <:Union{Int64,Float64}}`, then an internal `unroll_recursive` method is called, which exactly recovers the time series. Mathematical details about this function are reported in the [documentation](https://InPhyT.github.io/UnrollingAverages.jl/stable), and you may read more by entering `?UnrollingAverages.unroll_recursive`.\n"
      },
      "source": "https://raw.githubusercontent.com/InPhyT/UnrollingAverages.jl/main/README.md",
      "technique": "header_analysis"
    }
  ]
}