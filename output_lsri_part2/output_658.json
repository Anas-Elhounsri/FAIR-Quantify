{
  "application_domain": [
    {
      "confidence": 16.2,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/OrensteinLab/rG4detector"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-03-07T13:58:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-30T16:26:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9985872542926059,
      "result": {
        "original_header": "rG4detector",
        "type": "Text_excerpt",
        "value": "We present rG4detector, a convolutional neural network for predicting rG4 folding of any given sequence based on rG4-seq data. rG4-seq  experimental protocol was employed to generate transcriptome-wide rG4 maps of human HeLa cells (accession code GSE77282). In this study, we used the experimental raw data to extract RSR (ratio of stalled reads) scores across the transcriptome, and used this information to train rG4detector. \nrG4detector assigns an rG4 propensity score for any RNA sequence. in addition, we utilized rG4detector predictions to  detect rG4 forming sequences in a given transcript/any long RNA sequence.\n \n"
      },
      "source": "https://raw.githubusercontent.com/OrensteinLab/rG4detector/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/OrensteinLab/rG4detector/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/OrensteinLab/rG4detector/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OrensteinLab/rG4detector"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rG4detector"
      },
      "source": "https://raw.githubusercontent.com/OrensteinLab/rG4detector/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OrensteinLab/rG4detector/main/G4RNA/bed2seq.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8248825288031965,
      "result": {
        "original_header": "Model training",
        "type": "Text_excerpt",
        "value": "```\npython code/train_rG4detector.py \n```\nThe model will be saved under BASH2* .\n \n"
      },
      "source": "https://raw.githubusercontent.com/OrensteinLab/rG4detector/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/OrensteinLab/rG4detector/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2024 Orenstein Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/OrensteinLab/rG4detector/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rG4detector"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "OrensteinLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 110987,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 95,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OrensteinLab/rG4detector/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "maorturn",
          "type": "User"
        },
        "date_created": "2022-08-16T13:00:07Z",
        "date_published": "2022-08-16T13:35:41Z",
        "description": "Firs release",
        "html_url": "https://github.com/OrensteinLab/rG4detector/releases/tag/v1.0.0",
        "name": "First release",
        "release_id": 74518134,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/OrensteinLab/rG4detector/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/OrensteinLab/rG4detector/releases/74518134",
        "value": "https://api.github.com/repos/OrensteinLab/rG4detector/releases/74518134",
        "zipball_url": "https://api.github.com/repos/OrensteinLab/rG4detector/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "rG4detector",
          "Reproduce rG4detector model"
        ],
        "type": "Text_excerpt",
        "value": "The model is implemented with Keras python library with Tensorflow backend (version 2.5.0).\n"
      },
      "source": "https://raw.githubusercontent.com/OrensteinLab/rG4detector/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:31:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get rG4detector predictions",
        "parent_header": [
          "rG4detector"
        ],
        "type": "Text_excerpt",
        "value": "rG4detector can operate in two different modes:\n  1. prediction - for a given fasta file, rG4detector will predict the propensity of each sequence to form an rG4 structure.\n  2. detection - for a given fasta file, rG4detector will assign a score to each sequence nucleotide, which indicates the probability of this nucleotide to belong to an rG4 folding sequence.\n"
      },
      "source": "https://raw.githubusercontent.com/OrensteinLab/rG4detector/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Prediction mode",
        "parent_header": [
          "rG4detector",
          "Get rG4detector predictions"
        ],
        "type": "Text_excerpt",
        "value": "In order to predict the propensity of each sequence in a fasta file to form an rG4 structure, run:\n```\npython code/predict_fasta.py -f <fasta_file> -o <output_directory>\n```\nIf the rG4detector models aren't under ```models/```, pass the model directory using -m flag.\nThe program will output the results to the output directory under ```rG4detector_prediction.csv```.\n"
      },
      "source": "https://raw.githubusercontent.com/OrensteinLab/rG4detector/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Detection mode",
        "parent_header": [
          "rG4detector",
          "Get rG4detector predictions"
        ],
        "type": "Text_excerpt",
        "value": "In order to utilize rG4detector predictions in a detection task use the -d/--detect flags, as follow:\n```\npython code/predict_fasta.py -d -f <fasta_file> -o <output_directory>\n```\nThe program will output the results to the output directory under ```rG4detector_detection.csv```.\nFor plotting each sequence scores, use the -p/--plot flags (recommended for fasta files with limited number of sequences).\n"
      },
      "source": "https://raw.githubusercontent.com/OrensteinLab/rG4detector/main/README.md",
      "technique": "header_analysis"
    }
  ]
}