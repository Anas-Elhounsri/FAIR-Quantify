{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"Liu\"\n  given-names: \"Daniel\"\n  orcid: \"https://orcid.org/0000-0002-2385-2957\"\n- family-names: \"Belyaeva\"\n  given-names: \"Anastasiya\"\n- family-names: \"Shafin\"\n  given-names: \"Kishwar\"\n  orcid: \"https://orcid.org/0000-0001-5252-3434\"\n- family-names: \"Chang\"\n  given-names: \"Pi-Chuan\"\n  orcid: \"https://orcid.org/0000-0003-3021-6446\"\n- family-names: \"Carroll\"\n  given-names: \"Andrew\"\n  orcid: \"https://orcid.org/0000-0002-4824-6689\"\n- family-names: \"Cook\"\n  given-names: \"Daniel\"\n  orcid: \"https://orcid.org/0000-0003-3347-562X\"\ntitle: \"Best: A Tool for Characterizing Sequencing Errors\"\nversion: 0.1.0\ndoi: 10.1101/2022.12.22.521488\ndate-released: 2020-12-09\nurl: \"https://github.com/google/best\"\n"
      },
      "source": "https://raw.githubusercontent.com/google/best/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/google/best"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to Contribute\n\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement (CLA). You (or your employer) retain the copyright to your\ncontribution; this simply gives us permission to use and redistribute your\ncontributions as part of the project. Head over to\n<https://cla.developers.google.com/> to see your current agreements on file or\nto sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\n\n## Code Reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\n[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more\ninformation on using pull requests.\n\n## Community Guidelines\n\nThis project follows\n[Google's Open Source Community Guidelines](https://opensource.google/conduct/).\n"
      },
      "source": "https://raw.githubusercontent.com/google/best/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-09T18:38:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-05T11:55:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Bam Error Stats Tool (best): analysis of error types in aligned reads."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9172664983811797,
      "result": {
        "original_header": "best",
        "type": "Text_excerpt",
        "value": "Bam Error Stats Tool (best): analysis of error types in aligned reads. \n`best` is used to assess the quality of reads after aligning them to a\nreference assembly.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google/best/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.986689969445438,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "* Collect overall and per alignment stats\n* Distribution of indel lengths\n* Yield at different empirical Q-value thresholds\n* Bin per read stats to easily examine the distribution of errors for certain\n  types of reads\n* Stats for regions specified by intervals (BED file, homopolymer regions,\n  windows etc.)\n* Stats for quality scores vs empirical Q-values\n* Multithreading for speed\n \n"
      },
      "source": "https://raw.githubusercontent.com/google/best/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9859117419366289,
      "result": {
        "original_header": "Comparing",
        "type": "Text_excerpt",
        "value": "Remember to pass the `-t 1` option to ensure that only one thread is used for\ntesting. Best generally tries to ensure the order of outputs is deterministic\nwith multiple threads, but the order of per-alignment stats is arbitrary unless\nonly one thread is used.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google/best/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9897032398020768,
      "result": {
        "original_header": "Disclaimer",
        "type": "Text_excerpt",
        "value": "This is not an official Google product. \nThe code is not intended for use in any clinical settings.  It is not intended to be a medical device and is not intended for clinical use of any kind, including but not limited to diagnosis or prognosis. \nNo representations or warranties are made with regards to the accuracy of results generated.  User or licensee is responsible for verifying and validating accuracy when using this tool.\n \n"
      },
      "source": "https://raw.githubusercontent.com/google/best/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/google/best/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/google/best/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "google/best"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "best"
      },
      "source": "https://raw.githubusercontent.com/google/best/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google/best/main/pub/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google/best/main/pub/get_data.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google/best/main/pub/run_benchmark.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing",
        "parent_header": [
          "best"
        ],
        "type": "Text_excerpt",
        "value": "1. Install [Rust](https://www.rust-lang.org/tools/install).\n2. Clone this repository and navigate into the directory of this repository.\n3. Run `cargo install --locked --path .`\n4. Run `best input.bam reference.fasta prefix/path`\n\nThis will generate stats files with the `prefix/path` prefix.\n"
      },
      "source": "https://raw.githubusercontent.com/google/best/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/google/best/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, sequencing"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright 2022 Google LLC.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/google/best/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "best"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "google"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Rust",
        "size": 57986,
        "type": "Programming_language",
        "value": "Rust"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5224,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/google/best/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "danielecook",
          "type": "User"
        },
        "date_created": "2022-12-09T20:04:07Z",
        "date_published": "2022-12-19T22:24:50Z",
        "description": "This is the initial release of `best`.",
        "html_url": "https://github.com/google/best/releases/tag/0.1.0",
        "name": "0.1.0",
        "release_id": 86590523,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/google/best/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/google/best/releases/86590523",
        "value": "https://api.github.com/repos/google/best/releases/86590523",
        "zipball_url": "https://api.github.com/repos/google/best/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "parent_header": [
          "best",
          "Development"
        ],
        "type": "Text_excerpt",
        "value": "1. Install [Rust](https://www.rust-lang.org/tools/install).\n2. Clone this repository and navigate into the directory of this repository.\n3. Run `cargo build --release`\n4. Run `cargo run --release -- input.bam reference.fasta prefix/path` or\n`target/release/best input.bam reference.fasta prefix/path`\n\nThis will generate stats files with the `prefix/path` prefix.\n\nThe built binary is located at `target/release/best`.\n"
      },
      "source": "https://raw.githubusercontent.com/google/best/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:09:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 124
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "best"
        ],
        "type": "Text_excerpt",
        "value": "The [`best` Usage Guide](Usage.md) gives an overview of how to use `best`.\n"
      },
      "source": "https://raw.githubusercontent.com/google/best/main/README.md",
      "technique": "header_analysis"
    }
  ]
}