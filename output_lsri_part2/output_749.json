{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "wenda_gpu: fast domain adaptation for genomic data"
        ],
        "type": "Text_excerpt",
        "value": "If you use this method, please cite the following:\n\n`wenda_gpu: fast domain adaptation for genomic data\nAriel A. Hippen, Jake Crawford, Jacob R. Gardner, Casey S. Greene\nbioRxiv 2022.04.09.487671; doi: https://doi.org/10.1101/2022.04.09.487671`\n"
      },
      "source": "https://raw.githubusercontent.com/greenelab/wenda_gpu/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/greenelab/wenda_gpu"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-10-14T18:31:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-27T13:12:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fast domain adaptation method for building prediction models on genomic data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9989553297715491,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "Domain adaptation allows for development of predictive models even in cases with limited or unlabeled sample data, by developing predictors for the data of interest (target data) using labeled data from a similar distribution (source data).\nThis repo is a fast implementation of one domain adaptation method, weighted elastic net domain adaptation, or wenda.\nIt leverages the complex interactions between biological features (such as genes) to optimize a model\u2019s predictive power on both source and target datasets. \n \n"
      },
      "source": "https://raw.githubusercontent.com/greenelab/wenda_gpu/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9515245155072479,
      "result": {
        "original_header": "Directory structure",
        "type": "Text_excerpt",
        "value": "By default, wenda_gpu implements the following structure in your working directory:\n```\nworking_directory\n \u00a0\u00a0 \u251c\u2500\u2500 data\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 prefix\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 source_data.tsv\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 source_y.tsv\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 target_data.tsv\n \u00a0\u00a0 \u251c\u2500\u2500 feature_models\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 prefix\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 model_0.pth\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 model_1.pth\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 ...\n    \u251c\u2500\u2500 confidences\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 prefix\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 confidences.tsv\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 model_0_confidence.txt\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 model_1_confidence.txt\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 ...\u00a0\u00a0 \n    \u2514\u2500\u2500 output\n \u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 prefix\n \u00a0\u00a0  \u00a0\u00a0     \u251c\u2500\u2500 k_00\n \u00a0\u00a0  \u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 target_predictions.txt\n \u00a0\u00a0  \u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 target_probabilities.txt\n \u00a0\u00a0  \u00a0\u00a0     \u251c\u2500\u2500 k_01\n \u00a0\u00a0  \u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 target_predictions.txt\n \u00a0\u00a0  \u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 target_probabilities.txt\n \u00a0\u00a0  \u00a0\u00a0     \u2514\u2500\u2500 ...\n```\n\"prefix\" is intended to be a unique identifier for your dataset, which allows you to run wenda_gpu on multiple datasets and have them nested within the same directory structure.\nThe user will need to create the files under the `data` directory, containing the feature information for both source and target datasets and the labels for the source data. Data can be loaded from a different source, for an example consult wenda_gpu_quick_usage.ipynb.\nThe files under the `feature_models`, `confidences`, and `output` directories will be automatically created by wenda_gpu. If you want intermediate files and output in a different location than inside your working directory, you can specify your own paths using the path arguments in the related functions, e.g.\n```\nwg.train_feature_models(source_data_normed, target_data_normed, prefix=\"sample\", feature_model_path=\"~/wenda_gpu_run/feature_models\", confidence_path=\"~/wenda_gpu_run/confidences\")\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/greenelab/wenda_gpu/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/greenelab/wenda_gpu/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/greenelab/wenda_gpu/main/example/wenda_gpu_quick_usage.ipynb"
      },
      "source": "https://raw.githubusercontent.com/greenelab/wenda_gpu/main/example/wenda_gpu_quick_usage.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/greenelab/wenda_gpu/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "greenelab/wenda_gpu"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wenda_gpu: fast domain adaptation for genomic data"
      },
      "source": "https://raw.githubusercontent.com/greenelab/wenda_gpu/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "wenda_gpu: fast domain adaptation for genomic data"
        ],
        "type": "Text_excerpt",
        "value": "This package can be installed using pip:\n```\npip install wenda_gpu\n```\n\nAlternatively, you can install the latest development version directly from this GitHub repository:\n```\npip install git+https://github.com/greenelab/wenda_gpu\n```\n"
      },
      "source": "https://raw.githubusercontent.com/greenelab/wenda_gpu/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Directory structure",
        "type": "Text_excerpt",
        "value": "By default, wenda_gpu implements the following structure in your working directory:\n```\nworking_directory\n \u00a0\u00a0 \u251c\u2500\u2500 data\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 prefix\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 source_data.tsv\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 source_y.tsv\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 target_data.tsv\n \u00a0\u00a0 \u251c\u2500\u2500 feature_models\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 prefix\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 model_0.pth\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 model_1.pth\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 ...\n    \u251c\u2500\u2500 confidences\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 prefix\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 confidences.tsv\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 model_0_confidence.txt\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 model_1_confidence.txt\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 ...\u00a0\u00a0 \n    \u2514\u2500\u2500 output\n \u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 prefix\n \u00a0\u00a0  \u00a0\u00a0     \u251c\u2500\u2500 k_00\n \u00a0\u00a0  \u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 target_predictions.txt\n \u00a0\u00a0  \u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 target_probabilities.txt\n \u00a0\u00a0  \u00a0\u00a0     \u251c\u2500\u2500 k_01\n \u00a0\u00a0  \u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 target_predictions.txt\n \u00a0\u00a0  \u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 target_probabilities.txt\n \u00a0\u00a0  \u00a0\u00a0     \u2514\u2500\u2500 ...\n```\n\"prefix\" is intended to be a unique identifier for your dataset, which allows you to run wenda_gpu on multiple datasets and have them nested within the same directory structure.\nThe user will need to create the files under the `data` directory, containing the feature information for both source and target datasets and the labels for the source data. Data can be loaded from a different source, for an example consult wenda_gpu_quick_usage.ipynb.\nThe files under the `feature_models`, `confidences`, and `output` directories will be automatically created by wenda_gpu. If you want intermediate files and output in a different location than inside your working directory, you can specify your own paths using the path arguments in the related functions, e.g.\n```\nwg.train_feature_models(source_data_normed, target_data_normed, prefix=\"sample\", feature_model_path=\"~/wenda_gpu_run/feature_models\", confidence_path=\"~/wenda_gpu_run/confidences\")\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/greenelab/wenda_gpu/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/greenelab/wenda_gpu/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2022, Greene Laboratory\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/greenelab/wenda_gpu/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wenda_gpu"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "greenelab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 73864,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 13000,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/greenelab/wenda_gpu/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:53:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "wenda_gpu: fast domain adaptation for genomic data"
        ],
        "type": "Text_excerpt",
        "value": "The most basic usage of wenda is this:\n\n```\nfrom wenda_gpu import wenda_gpu as wg\n\nsource_data, target_data = wg.load_data(prefix=\"sample\")\nsource_data_normed, target_data_normed = wg.normalize_data(source_data, target_data)\nwg.train_feature_models(source_data_normed, target_data_normed, prefix=\"sample\")\nsource_y = wg.load_labels(prefix=\"sample\")\nwg.train_elastic_net(source_data_normed, source_y, target_data_normed, prefix=\"sample\")\n```\n\nFor a step-by-step tutorial in running wenda_gpu, consult wenda_gpu_quick_usage.ipynb in the example folder.\n"
      },
      "source": "https://raw.githubusercontent.com/greenelab/wenda_gpu/main/README.md",
      "technique": "header_analysis"
    }
  ]
}