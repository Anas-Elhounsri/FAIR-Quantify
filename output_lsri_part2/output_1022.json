{
  "application_domain": [
    {
      "confidence": 40.82,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HantaoShu/GRN-Transformer"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-14T13:48:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-09T19:53:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Description of directories and files",
        "parent_header": [
          "GRN-Transformer"
        ],
        "type": "Text_excerpt",
        "value": "- [src] contains the detailed implementation for the self-supervised step of the GRN-Transformer\n- [demo_data] contains the example of the used dataset.\n    - BEELINE\n        - 500_ChIP-seq_mDC\n            - inputs:\n                - Including the gene expression data 'data.csv' (cells in columns and genes in rows),\n                - ground truth cell-type-specific GRN 'label.csv' (two columns, TF names and target names), \n                - GRN inference result by using PIDC 'PIDC_output_file.txt'\n                - train-test-split index files 'split_non_*.pkl'(two list, first list is the training index and second list is the test index) \n                - TF-target names 'train_z.npy' (two columns, TF names and target names)\n                - ground truth cell-type-specific GRN labels 'train_y.npy' (1 is for edge in cell-type-specific GRN while 0 is for edge not in cell-type-specific GRN, generated from label.csv)\n                - cell-type-non-specific ChIP-seq training labels 'train_y_non.npy'(1 is for edge in non-specific GRN while 0 is for edge not in non-specific GRN, generated from other_data/human_Non-specific-ChIP-seq-network.csv (for hESC and hHep) and other_data/mouse_Non-Specific-ChIP-seq-network.csv (for mHSC, mESC, mDC))\n            - outputs: \n                - Including example pretrain result 'pretrain_output.pkl' by running code self_supervised_main.py \n                - example performance output file 'performance.pkl' by running code supervised_main.py\n        - other_data Including TFs and cell-type-non-specific GRN collected by BEELINE benchmark.\n    - Simulation \n        - ER/SF\n            - inputs:  Similar with inputs directory of 500_ChIP-seq_mDC except train-test-split index files. \n            'split\\_\\*\\_0.5.pkl' denotes to the split file for train-test-split (without label flipped). \n            - outputs: Similar with outputs directory of 500_ChIP-seq_mDC \n\n- [self_superivsed_main.py]  The main function for the self-supervised learning step.\n\n- [supervised_main.py] The main function for the supervised learning step.\n"
      },
      "source": "https://raw.githubusercontent.com/HantaoShu/GRN-Transformer/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9944614471917894,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "This directory contains the code and resources of the following paper:\n<i> Boosting single-cell gene regulatory network reconstruction via bulk-cell transcriptomic data </i> which is published in Briefings in Bioinformatics (https://doi.org/10.1093/bib/bbac389). \n"
      },
      "source": "https://raw.githubusercontent.com/HantaoShu/GRN-Transformer/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HantaoShu/GRN-Transformer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HantaoShu/GRN-Transformer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HantaoShu/GRN-Transformer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GRN-Transformer"
      },
      "source": "https://raw.githubusercontent.com/HantaoShu/GRN-Transformer/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HantaoShu/GRN-Transformer/master/Figure1_github.png"
      },
      "source": "https://raw.githubusercontent.com/HantaoShu/GRN-Transformer/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8168952222549669,
      "result": {
        "original_header": "Overview of the Model",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n<img  src=\"Figure1_github.png\" width=\"800\" height=\"1000\" > \n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/HantaoShu/GRN-Transformer/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HantaoShu/GRN-Transformer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 HantaoShu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/HantaoShu/GRN-Transformer/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GRN-Transformer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "HantaoShu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 67907,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HantaoShu/GRN-Transformer/master/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "GRN-Transformer"
        ],
        "type": "Text_excerpt",
        "value": "- python==3.7\n- einops==0.3.0\n- pytorch==1.7.0+cu101\n- pandas==1.1.4\n- numpy==1.19.4\n- scikit-learn==0.23.2\n- argparse==1.4.0\n\nAll dependencies can be installed within a few minutes.\n"
      },
      "source": "https://raw.githubusercontent.com/HantaoShu/GRN-Transformer/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:54:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "GRN-Transformer"
        ],
        "type": "Text_excerpt",
        "value": "We take 500_ChIP-seq_mDC data as an example.\n\n- self-supervised step\n    ```sh\n    python self_superivsed_main.py --data_file ./demo_data/BEELINE/500_ChIP-seq_mDC/inputs/data.csv --PIDC_file  \n    ./demo_data/BEELINE/500_ChIP-seq_mDC/inputs/PIDC_output_file.txt --save_name pretrain_output --attention conventional_attention\n    ```\n    where '--data_file' denotes the input expression data (cells in rows and genes in columns), \\\n    '--PIDC_file' denotes the input pre-calculated PIDC file (three columns (TF name, Target gene name, and importance values), \\\n    '--attention' denotes the attention mechanism (selection from {conventional_attention, efficient_attention, performer, reformer}), \\\n    '--save_name' denotes the output filename used in the following supervised step.\n    \n    We recommend using conventional_attention when the number of genes is not too large (e.g., less than 2000 for \n    GTX1080 Ti). Please run self_superivsed_main.py with GPU.\n    It should be finished within 6 hours for the given demo dataset.  \n    \n- supervised step \n    ```sh\n    python supervised_main.py --split_file split_non_1.pkl  --pre_GRN_file  \n    ./demo_data/BEELINE/500_ChIP-seq_mDC/outputs/pretrain_output.pkl  --data_dir \n    ./demo_data/BEELINE/500_ChIP-seq_mDC/inputs/ --train_y_file  train_y_non.npy --output_file \n    ./demo_data/BEELINE/500_ChIP-seq_mDC/outputs/performance.pkl\n    ```\n  where '--pre_GRN_file' denotes the output file of the previous self-supervised step,\\\n  '--data_dir' denotes the directory which includes all training data,\\\n  '--train_y_file' denotes the name of the training label file,\\\n  '--output_file' denotes the output file name.\\\n  It should be finished in several minutes \nfor the given demo dataset. \\\n\\\nIf you have any questions, please feel free to contact me. \\\nEmail: shuht96@gmail.com\n \n # Other baseline single-cell RNA-seq packages \n - BEELINE https://github.com/Murali-group/Beeline\n - DeepSEM https://github.com/HantaoShu/DeepSEM\n - CNNC https://github.com/xiaoyeye/CNNC\n - DeepDRIM https://github.com/jiaxchen2-c/DeepDRIM\n"
      },
      "source": "https://raw.githubusercontent.com/HantaoShu/GRN-Transformer/master/readme.md",
      "technique": "header_analysis"
    }
  ]
}