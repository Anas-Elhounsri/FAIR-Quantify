{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Please cite",
        "parent_header": [
          "Running the algorithm"
        ],
        "type": "Text_excerpt",
        "value": "(Under review)\n\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DianaLaboratory/DeepTSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-01-21T09:47:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-17T15:26:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "PhyloP bigWig file can be downloaded from UCSC",
        "parent_header": [
          "Download input files"
        ],
        "type": "Text_excerpt",
        "value": "```\nhttp://hgdownload.cse.ucsc.edu/goldenpath/hg38/phyloP100way/hg38.phyloP100way.bw (for -cons tag)\n```\n #### Download fasta file from UCSC\n```\nhttps://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/latest/hg38.fa.gz (for -hg tag)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DianaLaboratory/DeepTSS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Please address any problems or comments to:",
        "parent_header": [
          "Running the algorithm",
          "License"
        ],
        "type": "Text_excerpt",
        "value": "jim.grigor@gmail.com\n\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DianaLaboratory/DeepTSS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DianaLaboratory/DeepTSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Anaconda python:",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Download and install anaconda python [(installation guide)](https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html)\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install conda enviroment using the DeepTSS.yml file provided.",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Create and activate a conda environment with python 3.7",
        "parent_header": [
          "Manual installation"
        ],
        "type": "Text_excerpt",
        "value": "```\nconda create -n py37 python=3.7\nconda activate py37\n```"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install python libraries",
        "parent_header": [
          "Manual installation"
        ],
        "type": "Text_excerpt",
        "value": "```\npip intall pandas\npip install numpy\npip install sklearn\npip install pyBigWig\npip install tensorflow-gpu\npip install keras\nconda install -c bioconda bedtools\nconda install -c bioconda samtools\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DianaLaboratory/DeepTSS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 RBP_Bioinformatics\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Running the algorithm"
        ],
        "type": "Text_excerpt",
        "value": "MIT LICENSE\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepTSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "DianaLaboratory"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 25830,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "DIANA-DeepTSS - Deep learning computational framework for TSS identification"
        ],
        "type": "Text_excerpt",
        "value": "- Unix system\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the algorithm",
        "type": "Text_excerpt",
        "value": "```\nExamle usage of tool:\npython main.py -i H9.bam -hg hg38.fa -cons hg38.phyloP100way.bw\n\n  -h, --help            show this help message and exit\n  -i INPUT_FILE         Input file                                           | bam alignments or bed TSS representatives file | Mandatory\n  -hg HG38_FA           Specify human genome file (requires fasta file)      | Mandatory\n  -cons CONS            Specify PhyloP bigWig file (.bw)                     | If empty conservation branch won't be used\n  -g FAI                Specify genome chrom sizes (hg38, hg19, or hg18)     | Deafult hg38\n  -Q QUALITY            Skip alignments with map quality lower than <-Q>     | Default: 10\n  -mapd MAP_DISTANCE    Set map distance                                     | Default: 50\n  -t THREADS            Set number of threads                                | Default half of total threads\n  -tpm TPM              Specify tpm threshold                                | Default 1\n  -min MIN_CLUST_SIZE   Set minimum cluster size                             | Default 1\n  -max MAX_CLUST_SIZE   Set maximum cluster size                             | Default 1000\n  -out OUT_DIR          Specify output directory                             | Optional\n  -dir_name DIR_NAME    Specify output dir name                              | Optional\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Without conservation branch",
        "parent_header": [
          "Running the algorithm",
          "Example use"
        ],
        "type": "Text_excerpt",
        "value": "* `python main.py -i <bam or bed file> -hg <human genome file> `\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using conservation branch",
        "parent_header": [
          "Running the algorithm",
          "Example use"
        ],
        "type": "Text_excerpt",
        "value": "* `python main.py -i <bam or bed file> -hg <human genome file> -cons <PhyloP.bw> `\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Mandatory arguments",
        "parent_header": [
          "Running the algorithm"
        ],
        "type": "Text_excerpt",
        "value": "* `-i <specify bam or bed file>`\n   Input bam is a CAGE-seq file.\n   Clusters and representatives will be calculated based on bam input.\n   If a bed file is provided (instead of bam), the algorithm assumes it contains precalculated CAGE tag cluster representatives.\n      \n* `-hg <specify genome>`\n   User must provide fasta file of desired genome. e.g. hg38.fa\n\n* `-cons <specify PhyloP bigWig file>`\n   Specify PhyloP.bw file for evolutionary conservation. If empty CNN conservation branch will not be used.\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional arguments",
        "parent_header": [
          "Running the algorithm"
        ],
        "type": "Text_excerpt",
        "value": "* ` -g <specify genome> `\n\n   Choose between hg38, hg19 or hg18 or provide external chrom.zises file.\n   ###### Examples:\n   ``` \n   python main.py -i <bam or bed file> -hg <human genome file> -cons <PhyloP.bw>  -g hg19\n   python main.py -i <bam or bed file> -hg <human genome file> -cons <PhyloP.bw>  -g /user/path/hg19.chrom.sizes\n   ```\n<br>\n\n* ` -Q <INT> `\n\n   Reads having quality below <-Q> will be discarded\n   \n* `-mapd <INT>`\n\n   Maximum required distance between discovered CAGE CTSSs to be consider as a single peak. Default = 50.\n    \n* `-t <INT>`\n\n    Maximum threads to be used. Default half of system's availiable.\n\n* `-tpm <FLOAT>`\n\n   Minimum tpm value of accepted clusters (>=tpm). Default = 1.\n   \n* `-min <INT>`\n\n   Minimum cluster size (bp). Default = 1.\n    \n* `-max <INT>`\n\n   Maximum cluster size (bp). Default = 1000.\n   \n* `-out <STR>`\n\n   Specify output directory. If empty an output directory will be created in current terminal path.\n   ###### Example:\n  `python main.py -i <bam or bed file> -hg <human genome file> -cons <PhyloP.bw>  -out /user/mydir`\n\n* `-dir_name <STR>`\n\n   Specify output directory name. If empty an output directory will be created with unique name (based on date & time)\n   \n   ###### Example:\n  `python main.py -i <bam or bed file> -hg <human genome file> -cons <PhyloP.bw>  -dir_name output_dir_name`\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output explained",
        "parent_header": [
          "Running the algorithm"
        ],
        "type": "Text_excerpt",
        "value": "DeepTSS returns 3 bed files.\n- Clusters file          (clusters around cage peaks)\n- Representatives TSS    (Representative TSS for each clusters)\n- Scored Representatives (Scored TSS representatives based on the CNN model)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Authors",
        "parent_header": [
          "Running the algorithm"
        ],
        "type": "Text_excerpt",
        "value": "Dimitris Grigoriadis, Nikos Perdikopanis, Georgios K. Georgakilas and Artemis Hatzigeorgiou.\n\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "contact",
    "description",
    "contributors",
    "documentation",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:03:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Without conservation branch",
        "parent_header": [
          "Running the algorithm",
          "Example use"
        ],
        "type": "Text_excerpt",
        "value": "* `python main.py -i <bam or bed file> -hg <human genome file> `\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using conservation branch",
        "parent_header": [
          "Running the algorithm",
          "Example use"
        ],
        "type": "Text_excerpt",
        "value": "* `python main.py -i <bam or bed file> -hg <human genome file> -cons <PhyloP.bw> `\n"
      },
      "source": "https://raw.githubusercontent.com/DianaLaboratory/DeepTSS/main/README.md",
      "technique": "header_analysis"
    }
  ]
}