{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/andy897221/BMC_PPI_L3N"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-12T16:01:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-28T11:54:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Normalized Network Modeling for PPI Link Prediction"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9501130818146852,
      "result": {
        "original_header": "Normalized L3-based Link Prediction in Protein-Protein Interaction Networks",
        "type": "Text_excerpt",
        "value": "NormalizedL3 (L3N) is a network modeling approach for link prediction in protein-protein interaction networks. \nThe journal publication of L3N has currently online in BMC Bioinformatics: [10.1186/s12859-023-05178-3](https://doi.org/10.1186/s12859-023-05178-3) \nThis repo includes the proposed algorithms, jupyter notebooks that code all the experiments for data & figure generations, and a command-line script to run L3 and L3N link predictors for PPI networks.\n \n"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9962194070418989,
      "result": {
        "original_header": "Implementations",
        "type": "Text_excerpt",
        "value": "```core.py``` is the actual implementation of the L3N and L3 algorithm. The code is self-explanatory.\n```example.py``` and BASH3*: see [Usage](#Usage).\n```unitTest.py``` provides basic unit tests of simple types of PPI graphs. it is to show that the predictors implementation in BASH1* is the same as the predictors in BASH5* under the unit tests, of which BASH5* is the actual implementation used for the experiments in the paper (e.g. multiprocessing handler is included to generate data).\n \n"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentations",
        "type": "Text_excerpt",
        "value": "Details to use the datasets that generated the data in our publication is documented [here](datasets_docs.md)\n\nDetails of L3N networking modeling is available in the paper, [10.1186/s12859-023-05178-3](https://doi.org/10.1186/s12859-023-05178-3)\n\nDetails of the folder ```./src/notebook``` (data processing, results, and data figures) are briefly elaborated [here](docs.md)\n"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/andy897221/BMC_PPI_L3N/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20precision%20recall%20human.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20precision%20recall%20human.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/generate%20prediction%20-%20human.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/generate%20prediction%20-%20human.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20STRING%20conf%20score%20human.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20STRING%20conf%20score%20human.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20L3%20Simulation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20L3%20Simulation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20negatome%20analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20negatome%20analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20STRING%20conf%20score.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20STRING%20conf%20score.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20GOSemSim%20human.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20GOSemSim%20human.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20precision%20recall.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20precision%20recall.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Table%20-%20computation%20time.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Table%20-%20computation%20time.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Table%20-%20computation%20time%20human.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Table%20-%20computation%20time%20human.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/predicted%20PPIs%20overlaps.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/predicted%20PPIs%20overlaps.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Table%20-%20Dataset%20Properties.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Table%20-%20Dataset%20Properties.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/generate%20prediction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/generate%20prediction.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/predicted%20PPIs%20overlaps%20human.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/predicted%20PPIs%20overlaps%20human.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20GOSemSim.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/Figure%20-%20GOSemSim.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/img_simulation/Draft%203%20-%20L3%20Simulation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/img_simulation/Draft%203%20-%20L3%20Simulation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/img_simulation/.ipynb_checkpoints/Draft%203%20-%20L3%20Simulation-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/src/notebook/img_simulation/.ipynb_checkpoints/Draft%203%20-%20L3%20Simulation-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/andy897221/BMC_PPI_L3N/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "andy897221/BMC_PPI_L3N"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Normalized L3-based Link Prediction in Protein-Protein Interaction Networks"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/andy897221/BMC_PPI_L3N/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 andy897221\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BMC_PPI_L3N"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "andy897221"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 9399516,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 90938,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 2937,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirement",
        "type": "Text_excerpt",
        "value": "Language: ```python``` (version 3.6 or above).\n\nPython libraries requirement: ```numpy```, ```pandas```\n"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:23:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "To run main.py in the terminal:\n\n```python main.py {input file path} {output file path} {link predictor}```\n\nExample to run L3N(f1):\n\n```python main.py ./sample_data/example_PPI.txt ./sample_data/out.txt L3NPrime(f1)```\n\nSupported Link Predictors (see the paper details): ```L3```, ```L3NPrime(f1)```, ```L3NPrime(f2)```, ```L3N(f1)```, ```L3N(f2)```\n\nThe input file is a tab-delimited .csv file with no header & with two columns. The number of rows is the amount of PPIs. Each row represents a pair of protein (two columns) that exists a PPI. For example, a row ```A\\tB``` implies protein 'A' and protein 'B' has a PPI.\n\nTo use L3N programmatically, see ```./example.py``` as an example. It is encouraged to use L3E this way for real PPI datasets, so that custom multiprocessing handler can be coded and parsed into the L3E function.\n"
      },
      "source": "https://raw.githubusercontent.com/andy897221/BMC_PPI_L3N/main/README.md",
      "technique": "header_analysis"
    }
  ]
}