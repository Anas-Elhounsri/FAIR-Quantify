{
  "application_domain": [
    {
      "confidence": 0.8577856590245518,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8819099578415697,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References:",
        "type": "Text_excerpt",
        "value": "  \n  [1] von Luxburg, U. A tutorial on spectral clustering. Stat Comput 17, 395\u2013416 (2007). https://doi.org/10.1007/s11222-007-9033-z;\n  \n  [2] https://github.com/palash1992/GEM;\n  \n  [3] G. Rossetti, L. Milli, R. Cazabet. CDlib: a Python Library to Extract, Compare and Evaluate Communities from Complex Networks. Applied Network Science Journal. 2019. DOI:10.1007/s41109-019-0165-9 https://github.com/GiulioRossetti/cdlib\n"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nhguzzi@unicz.it.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/.github/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hguzzi/ProteinContactNetworks"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Protein Contact Networks Miner: A tool for the Analysis of Protein Contact Networks",
        "type": "Text_excerpt",
        "value": "Protein Contact Networks Miner is a command line tool (and now a Graphic User Interface) designed for annotate allosteric domains of a protein based of his rappresentation trough an unweighted graph, this graph is also called Protein Contact Network.\n\nA Protein Contact Network is an unweighted graph where: nodes are the amino acids of the protein and exists an edge that connect two nodes i and j only if the euclidean distance between them is between 4 Angstrom (threshold for only non covalent interactions) and 8 Angstrom (threshold for only significant interactions). The distance between two aminoacids i and j is approssimated by the distance between the Alpha Carbon of the amino acids. The user can modify the only covalent (min) and the only significant (max) threshold distance for PCN construction. \n\t \t\t\t\t\n![image](https://user-images.githubusercontent.com/87126937/165716233-50229af4-fae5-4833-8ff1-b6c2568408a6.png)\n\n![image](https://user-images.githubusercontent.com/87126937/165716596-aea2d977-59b9-4ce8-99b1-d1259783f5cd.png)\n\nPCN global descriptors (like graph diameter) or local descriptors (like node centrality measures) are useful to model and analyse protein functions. PCN Miner allow the user to identify modules (also called communities or clusters) in protein molecules using three different approaches: \n  1. spectral clustering: extract clusters from a graph with a clustering approach based on the Laplacian matrix eigenvectors following the guidelines given    in the paper: A tutorial on spectral clustering [1];\n  2. embedding+clustering: uses one of the embedding algorithm in the GEM library [2] and then apply clustering;\n  3. community detection: uses one of the community detection algorithm in the cdlib library [3].\n\nThe main objective of PCN Miner are:\n\n(i) identify the putative allosteric paths and regions in protein structures (that can help the design of allosteric drugs); \n\n(ii) allow the user to hypotize the functional effect of mutations (example variants of SARS CoV-2 Spike Protein); \n\n(iii) recognise funtional domains (communities or clusters) in proteins.\n\n\nPCN-Miner Supported Algorithms:\n  \n  1. Spectral Clustering: Both Hard (K-Means) and Soft (Fuzzy C-Means) clustering approach used on the eigenvectors of the Laplacian matrix (both normalized or unnormalized form). Is also supported the Shi Malik spectral clustering approach that resolves the generalized eigenvalues problem;\n  2. Embedding + Clustering: Node2vec, HOPE, Laplacianeigenmaps embedding followed by a supported spectral clustering algorithm;\n  3. Community Detection:  Louvain, Leiden, Walktrap, Infomap, Asyn FluidC, Greedy Modularity, Spinglass;\n  4. Centrality Measures: Closeness Centrality, Betweenness Centrality, Eigenvector Centrality, Degree Centrality.\n\nOutputs (node centrality, clusters or communities) of the supported algorithms are then plotted on the 3D structure of the protein using PyMol scripts.\n"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Welcome to GitHub docs contributing guide\n\nThank you for investing your time in contributing to our project! Any contribution you make will be reflected on docs.github.com \u2728.\n\nRead our Code of Conduct to keep our community approachable and respectable.\n\nIn this guide you will get an overview of the contribution workflow from opening an issue, creating a PR, reviewing, and merging the PR.\n\nUse the table of contents icon  on the top left corner of this document to get to a specific section of this guide quickly.\n\nNew contributor guide\n\nTo get an overview of the project, read the README. Here are some resources to help you get started with open source contributions:\n\nFinding ways to contribute to open source on GitHub\nSet up Git\nGitHub flow\nCollaborating with pull requests\nGetting started\n\nTo navigate our codebase with confidence, see the introduction to working in the docs repository \ud83c\udf8a. For more information on how we write our markdown files, see the GitHub Markdown reference.\n\nCheck to see what types of contributions we accept before making changes. Some of them don't even require writing a single line of code \u2728.\n\nIssues\n\nCreate a new issue\n\nIf you spot a problem with the docs, search if an issue already exists. If a related issue doesn't exist, you can open a new issue using a relevant issue form.\n\nSolve an issue\n\nScan through our existing issues to find one that interests you. You can narrow down the search using labels as filters. See Labels for more information. As a general rule, we don\u2019t assign issues to anyone. If you find an issue to work on, you are welcome to open a PR with a fix.\n\nMake Changes\n\nMake changes in the UI\n\nClick Make a contribution at the bottom of any docs page to make small changes such as a typo, sentence fix, or a broken link. This takes you to the .md file where you can make your changes and create a pull request for a review.\n\n\n\nMake changes locally\n\nInstall Git LFS.\n\nFork the repository.\n\nUsing GitHub Desktop:\n\nGetting started with GitHub Desktop will guide you through setting up Desktop.\nOnce Desktop is set up, you can use it to fork the repo!\nUsing the command line:\n\nFork the repo so that you can make your changes without affecting the original project until you're ready to merge them.\nGitHub Codespaces:\n\nFork, edit, and preview using GitHub Codespaces without having to install and run the project locally.\nInstall or update to Node.js v16. For more information, see the development guide.\n\nCreate a working branch and start with your changes!\n\nCommit your update\n\nCommit the changes once you are happy with them. See Atom's contributing guide to know how to use emoji for commit messages.\n\nOnce your changes are ready, don't forget to self-review to speed up the review process\u26a1.\n\nPull Request\n\nWhen you're finished with the changes, create a pull request, also known as a PR.\n\nFill the \"Ready for review\" template so that we can review your PR. This template helps reviewers understand your changes as well as the purpose of your pull request.\nDon't forget to link PR to issue if you are solving one.\nEnable the checkbox to allow maintainer edits so the branch can be updated for a merge. Once you submit your PR, a Docs team member will review your proposal. We may ask questions or request for additional information.\nWe may ask for changes to be made before a PR can be merged, either using suggested changes or pull request comments. You can apply suggested changes directly through the UI. You can make any other changes in your fork, then commit them to your branch.\nAs you update your PR and apply changes, mark each conversation as resolved.\nIf you run into any merge issues, checkout this git tutorial to help you resolve merge conflicts and other issues.\nYour PR is merged!\n\nCongratulations \ud83c\udf89\ud83c\udf89 The GitHub team thanks you \u2728.\n\nOnce your PR is merged, your contributions will be publicly visible on the GitHubs docs.\n\nNow that you are part of the GitHub docs community, see how else you can contribute to the docs.\n\nWindows\n\nThis site can be developed on Windows, however a few potential gotchas need to be kept in mind:\n\nRegular Expressions: Windows uses \\r\\n for line endings, while Unix based systems use \\n. Therefore when working on Regular Expressions, use \\r?\\n instead of \\n in order to support both environments. The Node.js os.EOL property can be used to get an OS-specific end-of-line marker.\nPaths: Windows systems use \\ for the path separator, which would be returned by path.join and others. You could use path.posix, path.posix.join etc and the slash module, if you need forward slashes - like for constructing URLs - or ensure your code works with either.\nBash: Not every Windows developer has a terminal that fully supports Bash, so it's generally preferred to write scripts in JavaScript instead of Bash.\nFilename too long error: There is a 260 character limit for a filename when Git is compiled with msys. While the suggestions below are not guaranteed to work and could possibly cause other issues, a few workarounds include:\nUpdate Git configuration: git config --system core.longpaths true\nConsider using a different Git client on Windows\n"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/.github/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-01T09:31:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-16T02:23:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Protein Contact Network Analysis"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hguzzi/ProteinContactNetworks/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/examples/Embedding%2BClustering/PCN_EmbeddingClustering.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/examples/Embedding%2BClustering/PCN_EmbeddingClustering.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/examples/SpectralClustering/PCN_SpectralClustering.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/examples/SpectralClustering/PCN_SpectralClustering.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/examples/CentralityAnalysis/PCN_CentralityAnalysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/examples/CentralityAnalysis/PCN_CentralityAnalysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/examples/CommunityDetection/PCN_CommunityDetection.ipynb"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/examples/CommunityDetection/PCN_CommunityDetection.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hguzzi/ProteinContactNetworks/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hguzzi/ProteinContactNetworks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Protein Contact Networks Miner: A tool for the Analysis of Protein Contact Networks"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/setupLinux-MacOSX.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/87126937/165716233-50229af4-fae5-4833-8ff1-b6c2568408a6.png"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/87126937/165716596-aea2d977-59b9-4ce8-99b1-d1259783f5cd.png"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/87126937/162151095-3ddc1177-3b32-4407-b6d7-06eb4dab9b3e.png"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/87126937/162151265-a64b2af6-bb15-41eb-883f-a4cc1779439d.png"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to install:",
        "type": "Text_excerpt",
        "value": "The easiest way to install this library is using the setup files on github:\n\n-S.O. Windows:\n\n\tgit clone https://github.com/hguzzi/ProteinContactNetworks.git\n\tcd ProteinContactNetworks\n\tsetupWindows.bat\n        \n-S.O. Linux-MACOSX:\n\n\tgit clone https://github.com/hguzzi/ProteinContactNetworks.git\n\tcd ProteinContactNetworks\n\tsource setupLinux-MacOSX.sh  \n\nNote: You may need to convert line endings format of the file setupLinux-MacOSX.sh. You can do it with Notepad++: Open the .sh file and then Edit -> EOL Conversion -> Unix or Macintosh.\n\nYou can also install this library with pip:\n"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "IMPORTANT: This project depends on PyMOL and GraphEmbeddingMethods, two libraries not available on PyPI.",
        "parent_header": [
          "How to install:"
        ],
        "type": "Text_excerpt",
        "value": "One easy way to install pymol is using anaconda.\n\nOpen the anaconda prompt and type the following command:\n\n\tconda create -n PCN python=3.8.3\n\tconda activate PCN \n\tconda install -c conda-forge -c schrodinger pymol-bundle\n\t\nThen we can install GEM library using pip+git:\n\t\n\tpip install git+https://github.com/palash1992/GEM.git\n\nFinally we can install this library using TESTPYPI:\n\n\tpip install --extra-index-url https://pypi.org/simple -i https://test.pypi.org/simple/ pcn\n\t\nOr with pip:\n\t\n\tpip install pcn\n\nOr with pip+git:\n\t\t\n\tpip install git+https://github.com/hguzzi/ProteinContactNetworks.git#egg=pcn\n"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999999972715,
      "result": {
        "type": "Text_excerpt",
        "value": "Third part softwares needed:\n  \n    -Git: https://git-scm.com/downloads\n    -Anaconda3: https://www.anaconda.com/products/individual\n    -PyMOL: https://pymol.org/2/#download \n"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hguzzi/ProteinContactNetworks/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Creative Commons Zero v1.0 Universal",
        "spdx_id": "CC0-1.0",
        "type": "License",
        "url": "https://api.github.com/licenses/cc0-1.0",
        "value": "https://api.github.com/licenses/cc0-1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Creative Commons Legal Code\n\nCC0 1.0 Universal\n\n    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\n    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\n    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\n    INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\n    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\n    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\n    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\n    HEREUNDER.\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\n\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ProteinContactNetworks"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hguzzi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 165006,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 707,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 677,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:40:13",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use the command line tool version:",
        "type": "Text_excerpt",
        "value": "\t\nIf the software is installed with pip:\n\n\tconda activate PCN\n\tpython\n\tfrom pcn.tools import pcn_main\n\tpcn_main.main()\n\nIf the software is installed with setup files on git:\n\n\tconda activate PCN\n\tcd pcn\n\tcd tools\n\tpython pcn_main.py\n"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use the GUI version:",
        "type": "Text_excerpt",
        "value": "If the software is installed with pip:\n\n\tconda activate PCN\n\tpython\n\tfrom pcn.tools import pcn_gui_main\n\tpcn_gui_main.main()\n\nIf the software is installed with setup files on git:\n\n\tconda activate PCN\n\tcd pcn       \n\tcd tools\n\tpython pcn_gui_main.py\n\t\n"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example:",
        "type": "Text_excerpt",
        "value": "  \nEntry PDB code: 6VXX\n\nDescription: SARS CoV 2 Spike protein closed form\n                                    \nMethod: Community Detection\n\nAlgorithm: Leiden\n\nNumber of communities extracted: 20 \n\n![image](https://user-images.githubusercontent.com/87126937/162151095-3ddc1177-3b32-4407-b6d7-06eb4dab9b3e.png)\n\nMethod: Centrality Analysis\n\nAlgorithm: Eigenvector Centrality\n\n![image](https://user-images.githubusercontent.com/87126937/162151265-a64b2af6-bb15-41eb-883f-a4cc1779439d.png)\n\n"
      },
      "source": "https://raw.githubusercontent.com/hguzzi/ProteinContactNetworks/main/README.md",
      "technique": "header_analysis"
    }
  ]
}