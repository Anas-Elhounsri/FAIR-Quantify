{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BiodataAnalysisGroup/kmerAnalyzer"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "A computational framework for pattern detection on unaligned sequences: An application on SARS-CoV-2 data"
        ],
        "type": "Text_excerpt",
        "value": "Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-09-30T11:55:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-29T10:33:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An alignment-free method capable of processing and counting k-mers in a reasonable time, while evaluating multiple values of the k parameter concurrently."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9906726486278403,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "An alignment-free method capable of processing and counting k-mers in a reasonable time, while evaluating multiple values of the k parameter concurrently.\n \n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/BiodataAnalysisGroup/kmerAnalyzer/wiki"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BiodataAnalysisGroup/kmerAnalyzer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BiodataAnalysisGroup/kmerAnalyzer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BiodataAnalysisGroup/kmerAnalyzer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A computational framework for pattern detection on unaligned sequences: An application on SARS-CoV-2 data"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Python Version",
        "parent_header": [
          "A computational framework for pattern detection on unaligned sequences: An application on SARS-CoV-2 data",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "kmerAnalyzer was initially implemented in **Python 2.7** version, but it seems to work pretty well in **Python 3.8** too.\n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required Python Packages",
        "parent_header": [
          "A computational framework for pattern detection on unaligned sequences: An application on SARS-CoV-2 data",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "- [`pandas`](https://pandas.pydata.org/getting_started.html) \n- [`numpy`](https://numpy.org/install/)\n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BiodataAnalysisGroup/kmerAnalyzer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "feature-selection, k-mers, phylogenetics, sars-cov-2, unsupervised-learning"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 tatsistog\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "A computational framework for pattern detection on unaligned sequences: An application on SARS-CoV-2 data"
        ],
        "type": "Text_excerpt",
        "value": "This project is licensed under the [MIT](https://opensource.org/licenses/MIT) License - see the [LICENSE](LICENSE) file for details\n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kmerAnalyzer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "BiodataAnalysisGroup"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 19069,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 17416,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to execute",
        "parent_header": [
          "A computational framework for pattern detection on unaligned sequences: An application on SARS-CoV-2 data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "1. In order to execute the application, there must be a unique `fasta` file inside the `data/` folder, which will be used as an input to the current k-mer analyzer toolkit.\n2. Folder `Output/` needs to be empty. Otherwise, the application will remove everything (file or subfolder) inside it. In case the folder doesn't exist, it wil be created automatically.\n3. Specify the parameters inside `featuresExtraction.py` script in **lines 21-22**, `kmax` and `eval_factor`. `Eval_factor` parameter determines the strictness in the assessment of kmers of each length. Recommended values for `eval_factor` lie inside the interval [1,2]. For optimal results, it's highly recommended to select a value between [1.2, 1.5]. At any case, for values lower than 1, the application won't run properly\n4. Execute the python script `featuresExtraction.py` \n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:00:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Input files",
        "parent_header": [
          "A computational framework for pattern detection on unaligned sequences: An application on SARS-CoV-2 data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The current application supports only `.fasta` files as input files.\n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output files",
        "parent_header": [
          "A computational framework for pattern detection on unaligned sequences: An application on SARS-CoV-2 data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Assuming that the input file is called `filename.fasta`:\n\n1. Inside the `Output/` directory there is a `.csv` file called `clustData.csv` which is actually the data matrix that we aimed for. Every sequemce is being represented by a number k-mer based features. The value of every feature is the number of times each k-mer was detected in the current sequence. There's also a CSV file called `heades_to_IDS.csv`, which maps the headers of each sequence from fasta input to code names ID-1, ID-2 etc.\n2. Inside the `Output/filename/` sub-folder there are 3 `csv` files: \n   * File `output.csv` contains the list that is generated from the kmer-tree. Every row represents a k-mer. The first column is the k-mer itself, the second is the length of the k-mer, the third column its frequency (the number of times that was detected in the input data) and the fourth one is its evaluation in the tree. \n   * The two remaining files are associated with the sequences that every k-mer appears, and the number of times that each k-mer appears in every sequence occurs as well.\n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Extra comments",
        "parent_header": [
          "A computational framework for pattern detection on unaligned sequences: An application on SARS-CoV-2 data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "- It's important to have a look at the lengths of the sequences, prior to executing kmerAnalyzer. For example, in the example dataset, the sequence with header `>ERR525627.984.1 984 length=31` has length 31, so probably its better to either exclude this sequence (data filtering) or examine lower k-values, e.g. up to 20. However, if we set `kmax = 35`, the code seems to work properly.\n- While executing kmerAnalyzer, a folder called `input` is created isnide the project direcoty, containing some necessary files for the execution process. The folder is deleted at the end of the process.\n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/kmerAnalyzer/master/README.md",
      "technique": "header_analysis"
    }
  ]
}