{
  "application_domain": [
    {
      "confidence": 19.23,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/senli2018/DTGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-28T03:37:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-05T17:37:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9793002542615918,
      "result": {
        "original_header": "DTGCN",
        "type": "Text_excerpt",
        "value": "This page shows the original code and data samples of the paper 'Multi-Stage Malaria Parasites Recognition by Deep Transfer Graph Convolutional Network'. \nThe code in this page is for multi-stage malaria prasites recognition. Please revised the parameters in 'config.py' when conduct on other datasets. \n"
      },
      "source": "https://raw.githubusercontent.com/senli2018/DTGCN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/senli2018/DTGCN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/senli2018/DTGCN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "senli2018/DTGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DTGCN"
      },
      "source": "https://raw.githubusercontent.com/senli2018/DTGCN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Detailed Setting",
        "type": "Text_excerpt",
        "value": "We have released the code under a OSI compliant license (MIT) with a license file in GitHub (https://github.com/senli2018/DTGCN) and mentioned in our paper.\n\nThe code and trained model can be downloaded from GitHub, and the detail information is described below.\n\nRunning Environment\n\n\tOperating System: Windows 10;\n\n\tGPU: Nvidia Geforce 2080Ti GPU;\n\n\tDeep learning framework: PyTorch 1.0.0 in Python 3.6.0;\n\nRequirements:\n\n\tPytorch 1.0.0;\n\n\tTorchvision 0.4.1;\n\n\tScipy 1.1.0;\n\n\tNumpy 1.17.4;\n\nParameter in code has been described in the GitHub, and can be directly run. The detail parameters are introduced as follow:\n\nIn this section, the batch size is set as 15 for source and target data with learning rate of 1e-5 which multiply 0.1 in every 50 iterations.\n\nFor the training details in GCN, the two graph convolution layers are trained with the output CNN features of the pre-trained CNN. \n\nFor both of CNN and GCN training, the DTGCN is implemented by the PyTorch framework with GTX2080Ti GPU and employ Adam optimizer to optimize the parameters of the network. As for GCN, the learning rate is 2e-7 and is optimized by manually gradient descent operation. And the settings of large-scale malaria parasites recognition are also following this setting.\n\nFinally, we introduce how to run DTGCN code.\n1.\tDownload the DTGCN code from GitHub (https://github.com/senli2018/DTGCN).\n\n2.\tDownload the dataset from Mendeley and release it into the root dir of code.\n\n3.\tThe data consist three tasks of \u20181_multistage_malaria_classification\u2019, \u20182_Unseen_Malaria_classification\u2019 and \u20183_babesia_classification\u2019, it can change the path variables in \u2018config.py\u2019, such as \n\n(a)\tMulti-stage malaria parasites recognition task:\n\nsource_dataset_path = '1_multistage_malaria_classification/train'\n\ntarget_dataset_path = '1_multistage_malaria_classification/test'\t\n\n(b)\tLarge scale malaria classification task:\n\nsource_dataset_path = '2_Unseen_Malaria_classification/train'\n\ntarget_dataset_path = '2_Unseen_Malaria_classification/test'\t\n\n(c)\tbabesia_classification\n\nsource_dataset_path = '3_babesia_classification '\n\ntarget_dataset_path = '3_babesia_classification '\n\n4.Taking multi-stage malaria parasites recognition task as an example, just run \u2018main.py\u2019, and the programme will automatically load existing models and start train the GCN, with outputting loss and predicted results along with epochs. It will be soon convergence in 10 epochs, and reported results can be obtained.\n"
      },
      "source": "https://raw.githubusercontent.com/senli2018/DTGCN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/senli2018/DTGCN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 senli2018\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/senli2018/DTGCN/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DTGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "senli2018"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/senli2018/DTGCN/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:34:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}