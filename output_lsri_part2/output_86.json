{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MDU-PHL/abritamr"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-21T03:59:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T13:23:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A pipeline for running AMRfinderPlus and collating results into functional classes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.907563850826937,
      "result": {
        "original_header": "Command-line tool",
        "type": "Text_excerpt",
        "value": "```\nabritamr run --help\n\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --contigs CONTIGS, -c CONTIGS\n                        Tab-delimited file with sample ID as column 1 and path to assemblies as column 2 OR path to a contig\n                        file (used if only doing a single sample - should provide value for -pfx). (default: )\n  --prefix PREFIX, -px PREFIX\n                        If running on a single sample, please provide a prefix for output directory (default: abritamr)\n  --jobs JOBS, -j JOBS  Number of AMR finder jobs to run in parallel. (default: 16)\n  --identity IDENTITY, -i IDENTITY\n                        Set the minimum identity of matches with amrfinder (0 - 1.0). Defaults to amrfinder preset, which is 0.9\n                        unless a curated threshold is present for the gene. (default: )\n  --amrfinder_db AMRFINDER_DB, -d AMRFINDER_DB\n                        Path to amrfinder DB to use (default:\n                        /<path_to_installation>/abritamr/abritamr/db/amrfinderplus/data/2021-09-30.1)\n  --species {Neisseria,Clostridioides_difficile,Acinetobacter_baumannii,Campylobacter,Enterococcus_faecalis,Enterococcus_faecium,Escherichia,Klebsiella,Salmonella,Staphylococcus_aureus,Staphylococcus_pseudintermedius,Streptococcus_agalactiae,Streptococcus_pneumoniae,Streptococcus_pyogenes}, -sp {Neisseria,Clostridioides_difficile,Acinetobacter_baumannii,Campylobacter,Enterococcus_faecalis,Enterococcus_faecium,Escherichia,Klebsiella,Salmonella,Staphylococcus_aureus,Staphylococcus_pseudintermedius,Streptococcus_agalactiae,Streptococcus_pneumoniae,Streptococcus_pyogenes}\n                        Set if you would like to use point mutations, please provide a valid species. (default: )\n``` \nYou can also run abriTAMR in `report` mode, this will output a spreadsheet which is based on reportable/not-reportable requirements in Victoria. You will need to supply a quality control file (comma separated) (`-q`), with the following columns: \n`--sop` refers to the type of collation and reporting pipeline\n* general\n  * standard reporting structure for aquired genes, output as reportable and non-reportable\n* plus\n  * Inferred AST based on validation undertaken at MDU\n```\nabritamr report --help\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --qc QC, -q QC        Name of checked MDU QC file. (default: )\n  --runid RUNID, -r RUNID\n                        MDU RunID (default: Run ID)\n  --matches MATCHES, -m MATCHES\n                        Path to matches, concatentated output of abritamr (default: summary_matches.txt)\n  --partials PARTIALS, -p PARTIALS\n                        Path to partial matches, concatentated output of abritamr (default: summary_partials.txt)\n  --sop {general,plus}  The MDU pipeline for reporting results. (default: general)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.990273522275087,
      "result": {
        "type": "Text_excerpt",
        "value": "abriTAMR is an AMR gene detection pipeline that runs AMRFinderPlus on a single (or  list ) of given isolates and collates the results into a table, separating genes identified into functionally relevant groups. \n_abriTAMR is accredited by NATA for use in reporting the presence of reportable AMR genes in Victoria Australia._ \n* Acquired resistance mechanims in the form of point mutations (restricted to subset of species)\n* Streamlined output.\n* Presence of virulence factors \n"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/MDU-PHL/abritamr/wiki"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MDU-PHL/abritamr/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MDU-PHL/abritamr/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MDU-PHL/abritamr"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/209921768"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://circleci.com/gh/MDU-PHL/abritamr.svg?style=svg&amp;circle-token=a54d59b013a30a507621695e738f0a72e47d6969"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda",
        "parent_header": [
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "abritAMR is best installed with `conda` as described below (~2 minutes on laptop)\n\n\n```\nconda create -n abritamr -c bioconda abritamr\nconda activate abritamr\n```\n"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9906472852258945,
      "result": {
        "original_header": "Command-line tool",
        "type": "Text_excerpt",
        "value": "```\nabritamr run --help\n\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --contigs CONTIGS, -c CONTIGS\n                        Tab-delimited file with sample ID as column 1 and path to assemblies as column 2 OR path to a contig\n                        file (used if only doing a single sample - should provide value for -pfx). (default: )\n  --prefix PREFIX, -px PREFIX\n                        If running on a single sample, please provide a prefix for output directory (default: abritamr)\n  --jobs JOBS, -j JOBS  Number of AMR finder jobs to run in parallel. (default: 16)\n  --identity IDENTITY, -i IDENTITY\n                        Set the minimum identity of matches with amrfinder (0 - 1.0). Defaults to amrfinder preset, which is 0.9\n                        unless a curated threshold is present for the gene. (default: )\n  --amrfinder_db AMRFINDER_DB, -d AMRFINDER_DB\n                        Path to amrfinder DB to use (default:\n                        /<path_to_installation>/abritamr/abritamr/db/amrfinderplus/data/2021-09-30.1)\n  --species {Neisseria,Clostridioides_difficile,Acinetobacter_baumannii,Campylobacter,Enterococcus_faecalis,Enterococcus_faecium,Escherichia,Klebsiella,Salmonella,Staphylococcus_aureus,Staphylococcus_pseudintermedius,Streptococcus_agalactiae,Streptococcus_pneumoniae,Streptococcus_pyogenes}, -sp {Neisseria,Clostridioides_difficile,Acinetobacter_baumannii,Campylobacter,Enterococcus_faecalis,Enterococcus_faecium,Escherichia,Klebsiella,Salmonella,Staphylococcus_aureus,Staphylococcus_pseudintermedius,Streptococcus_agalactiae,Streptococcus_pneumoniae,Streptococcus_pyogenes}\n                        Set if you would like to use point mutations, please provide a valid species. (default: )\n``` \nYou can also run abriTAMR in `report` mode, this will output a spreadsheet which is based on reportable/not-reportable requirements in Victoria. You will need to supply a quality control file (comma separated) (`-q`), with the following columns: \n`--sop` refers to the type of collation and reporting pipeline\n* general\n  * standard reporting structure for aquired genes, output as reportable and non-reportable\n* plus\n  * Inferred AST based on validation undertaken at MDU\n```\nabritamr report --help\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --qc QC, -q QC        Name of checked MDU QC file. (default: )\n  --runid RUNID, -r RUNID\n                        MDU RunID (default: Run ID)\n  --matches MATCHES, -m MATCHES\n                        Path to matches, concatentated output of abritamr (default: summary_matches.txt)\n  --partials PARTIALS, -p PARTIALS\n                        Path to partial matches, concatentated output of abritamr (default: summary_partials.txt)\n  --sop {general,plus}  The MDU pipeline for reporting results. (default: general)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MDU-PHL/abritamr/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/documentation/abriTAMR_logo.jpg"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "abritamr"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "MDU-PHL"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 98949,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 45526,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 916,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kristyhoran",
          "type": "User"
        },
        "date_created": "2024-06-24T08:01:42Z",
        "date_published": "2024-06-24T08:08:24Z",
        "description": "- Updated amrfinderplus database to most current release\r\n- Fixed species flag for Neisseria species - will now report point mutations.",
        "html_url": "https://github.com/MDU-PHL/abritamr/releases/tag/v1.0.18",
        "name": "Update database 2024-05-02",
        "release_id": 161997255,
        "tag": "v1.0.18",
        "tarball_url": "https://api.github.com/repos/MDU-PHL/abritamr/tarball/v1.0.18",
        "type": "Release",
        "url": "https://api.github.com/repos/MDU-PHL/abritamr/releases/161997255",
        "value": "https://api.github.com/repos/MDU-PHL/abritamr/releases/161997255",
        "zipball_url": "https://api.github.com/repos/MDU-PHL/abritamr/zipball/v1.0.18"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kristyhoran",
          "type": "User"
        },
        "date_created": "2023-12-13T05:45:29Z",
        "date_published": "2023-12-13T05:47:28Z",
        "description": "- cleaned up classification database\r\n- added script to update the db and email for approval",
        "html_url": "https://github.com/MDU-PHL/abritamr/releases/tag/v1.0.15",
        "name": "DB updater",
        "release_id": 133681969,
        "tag": "v1.0.15",
        "tarball_url": "https://api.github.com/repos/MDU-PHL/abritamr/tarball/v1.0.15",
        "type": "Release",
        "url": "https://api.github.com/repos/MDU-PHL/abritamr/releases/133681969",
        "value": "https://api.github.com/repos/MDU-PHL/abritamr/releases/133681969",
        "zipball_url": "https://api.github.com/repos/MDU-PHL/abritamr/zipball/v1.0.15"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kristyhoran",
          "type": "User"
        },
        "date_created": "2022-11-13T23:55:07Z",
        "date_published": "2022-11-28T06:59:19Z",
        "html_url": "https://github.com/MDU-PHL/abritamr/releases/tag/v1.0.14",
        "name": "Update DB and publish",
        "release_id": 84293869,
        "tag": "v1.0.14",
        "tarball_url": "https://api.github.com/repos/MDU-PHL/abritamr/tarball/v1.0.14",
        "type": "Release",
        "url": "https://api.github.com/repos/MDU-PHL/abritamr/releases/84293869",
        "value": "https://api.github.com/repos/MDU-PHL/abritamr/releases/84293869",
        "zipball_url": "https://api.github.com/repos/MDU-PHL/abritamr/zipball/v1.0.14"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kristyhoran",
          "type": "User"
        },
        "date_created": "2021-08-29T06:25:26Z",
        "date_published": "2021-08-29T06:31:45Z",
        "description": "This release has streamlined the abriTAMR tool.\r\n\r\n- abriTAMR now has support for acquired mutations and virulence genes\r\n\r\n- Added in functionality for Salmonella AST reporting (for MDU)",
        "html_url": "https://github.com/MDU-PHL/abritamr/releases/tag/v1.0.3",
        "name": "Tame the beast",
        "release_id": 48626176,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/MDU-PHL/abritamr/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/MDU-PHL/abritamr/releases/48626176",
        "value": "https://api.github.com/repos/MDU-PHL/abritamr/releases/48626176",
        "zipball_url": "https://api.github.com/repos/MDU-PHL/abritamr/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "A note on dependencies",
        "parent_header": [
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "abriTAMR requires [AMRFinder Plus](https://github.com/ncbi/amr), this can be installed separately with `conda` if required. \n\nabriTAMR comes packaged with a version of the  AMRFinder DB consistent with current NATA accreditation. If you would like to use another DB please download it using `amrfinder -U` and use the `-d` flag to point to your database.\n\nCurrent version of AMRFinder Plus compatible with abritAMR 3.10.42 (tested on versions down to 3.10.16)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "`abritAMR run`",
        "parent_header": [
          "Output"
        ],
        "type": "Text_excerpt",
        "value": "Outputs 4 summary files and retains the raw AMRFinderPlus output for each sequence input.\n\n1. `amrfinder.out` raw output from AMRFinder plus (per sequence). For more information please see AMRFinderPlus help [here](https://github.com/ncbi/amr/wiki/Interpreting-results) \n\n2.  `summary_matches.txt` \n  * Tab-delimited file, with a row per sequence, and columns representing functional drug classes \n  * Only genes recovered from sequence which have >90% coverage of the gene reported and greater than the desired identity threshold (default 90%). \n    \n    I. Genes annotated with `*` indicate >90% coverage and > identity threshold < 100% identity.\n    \n    II. No further annotation indicates that the gene recovered exhibits 100% coverage and 100% identity to a gene in the gene catalog.\n    \n    III. Point mutations detected (if `--species` supplied) will also be present in this file in the form of `gene_AAchange`.\n\n3. `summary_partials.txt`\n  * Tab-delimited file, with a row per sequence, and columns representing functional drug classes \n  * Genes recovered from sequence which have >50% but <90% coverage of the gene reported and greater than the desired identity threshold (default 90%). \n\n4. `summary_virulence.txt`\n  * Tab-delimited file, with a row per sequence, and columns representing AMRFinderPlus virulence gene classification\n  * Genes recovered from sequence which have >50% coverage of the gene reported and greater than the desired identity threshold (default 90%). \n\n      * Genes recovered with >50% but <90% coverage of a gene in the gene catalog will be annotated with `^`.\n      * Genes annotated with `*` indicate >90% coverage and > identity threshold < 100% identity.\n\n4. `abritamr.txt`\n  * Tab-delimited file, combining `summary_matches.txt`, `summary_partials.txt`, `summary_virulence.txt` with a row per sequence, and columns representing AMRFinderPlus virulence gene classification and/or functional drug classes.\n  * Genes recovered from sequence which have >50% coverage of the gene reported and greater than the desired identity threshold (default 90%). \n\n      * Genes recovered with >50% but <90% coverage of a gene in the gene catalog will be annotated with `^`.\n      * Genes annotated with `*` indicate >90% coverage and > identity threshold < 100% identity.\n"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:14:48",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 69
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "`abritamr report`",
        "parent_header": [
          "Output"
        ],
        "type": "Text_excerpt",
        "value": "will output spreadsheets `general_runid.xlsx` (NATA accredited) or `plus_runid.xlsx` (validated - not yet accredited) depending upon the sop chosen.\n\n* `general_rundid.xlsx` has two tabs, one for matches and one for partials (corresponding to genes reported in the `summary_matches.txt` and `summary_partials.txt`). Each tab has 7 columns \n\n| Column | Interpretation |\n|:---: | :---: |\n| MDU sample ID | Sample ID |\n|Item code | suffix (MDU specific) |\n| Resistance genes (alleles) detected | genes detected that are reportable (based on species and drug classification)|\n| Resistance genes (alleles) det (non-rpt) | other genes detected that are not not reportable for the species detected.\n| Species_obs | Species observed (supplied in input file) |\n| Species_exp | Species expected (supplied in input file) |\n| db_version | Version of the AMRFinderPlus DB used |\n\n* `plus_runid.xlsx` output is a spreadsheet with the different drug resistance mechanims and the corresponding interpretation (based on validation of genotype and phenotype) for drug-classes relevant to reporting of anti-microbial resistance in _Salmonella enterica_ (other species will be added as validation of genotype vs phenotype is performed).\n\n* Ampicillin\n* Cefotaxime (ESBL) \n* Cefotaxime (AmpC)\n* Tetracycline\n* Gentamicin\n* Kanamycin\n* Streptomycin\n* Sulfathiazole\n* Trimethoprim\n* Trim-Sulpha\n* Chloramphenicol \n* Ciprofloxacin\n* Meropenem \n* Azithromycin\n* Aminoglycosides (RMT)\n* Colistin \n\n"
      },
      "source": "https://raw.githubusercontent.com/MDU-PHL/abritamr/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}