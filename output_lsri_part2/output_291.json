{
  "application_domain": [
    {
      "confidence": 17.94,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Genome reference for host reads filtering",
        "type": "Text_excerpt",
        "value": "For host-associated samples, one can remove host sequences from the metagenomic reads by mapping these reads against a reference genome. If there are multiple host genomes, one can just concatenate the different fasta files into a single one.\nIn the case of termite gut metagenomes, we are providing [here](https://zenodo.org/record/6908287#.YuAdFXZBx8M) the relevant files (fasta and index files) from termite genomes.\n\nUpon request, we can help you to generate these files for your own reference genome and make them available to the community.\n\nNB. These steps of mapping generate voluminous files such as .bam and .sam. Depending on your disk space, you might want to delete these files after use.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download Genome reference for host reads filtering",
        "parent_header": [
          "Use case"
        ],
        "type": "Text_excerpt",
        "value": "```\nmkdir host_genomes\ncd host_genomes\nwget https://zenodo.org/record/6908287/files/termite_genomes.fasta.gz\ngunzip termite_genomes.fasta.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citations",
        "type": "Text_excerpt",
        "value": "If you use SnakeMAGs, please cite:\n> Tadrent N, Dedeine F and Herv\u00e9 V. SnakeMAGs: a simple, efficient, flexible and scalable workflow to reconstruct prokaryotic genomes from metagenomes [version 2; peer review: 2 approved]. F1000Research 2023, 11:1522 (https://doi.org/10.12688/f1000research.128091.2)\n\n\nPlease also cite the dependencies:\n- [Snakemake](https://doi.org/10.12688/f1000research.29032.2) : M\u00f6lder, F., Jablonski, K. P., Letcher, B., Hall, M. B., Tomkins-tinch, C. H., Sochat, V., Forster, J., Lee, S., Twardziok, S. O., Kanitz, A., Wilm, A., Holtgrewe, M., Rahmann, S., Nahnsen, S., & K\u00f6ster, J. (2021) Sustainable data analysis with Snakemake [version 2; peer review: 2 approved]. *F1000Research* 2021, 10:33.\n- [illumina-utils](https://doi.org/10.1371/journal.pone.0066643) : Murat Eren, A., Vineis, J. H., Morrison, H. G., & Sogin, M. L. (2013). A Filtering Method to Generate High Quality Short Reads Using Illumina Paired-End Technology. *PloS ONE*, 8(6), e66643.\n- [Trimmomatic](https://doi.org/10.1093/bioinformatics/btu170) : Bolger, A. M., Lohse, M., & Usadel, B. (2014). Genome analysis Trimmomatic: a flexible trimmer for Illumina sequence data. *Bioinformatics*, 30(15), 2114-2120.\n- [Bowtie2](https://doi.org/10.1038/nmeth.1923) : Langmead, B., & Salzberg, S. L. (2012). Fast gapped-read alignment with Bowtie 2. *Nature Methods*, 9(4), 357\u2013359.\n- [SAMtools](https://doi.org/10.1093/bioinformatics/btp352) : Li, H., Handsaker, B., Wysoker, A., Fennell, T., Ruan, J., Homer, N., Marth, G., Abecasis, G., & Durbin, R. (2009). The Sequence Alignment/Map format and SAMtools. *Bioinformatics*, 25(16), 2078\u20132079.\n- [BEDtools](https://doi.org/10.1093/bioinformatics/btq033) : Quinlan, A. R., & Hall, I. M. (2010). BEDTools: A flexible suite of utilities for comparing genomic features. *Bioinformatics*, 26(6), 841\u2013842.\n- [MEGAHIT](https://doi.org/10.1093/bioinformatics/btv033) : Li, D., Liu, C. M., Luo, R., Sadakane, K., & Lam, T. W. (2015). MEGAHIT: An ultra-fast single-node solution for large and complex metagenomics assembly via succinct de Bruijn graph. *Bioinformatics*, 31(10), 1674\u20131676.\n- [bwa](https://doi.org/10.1093/bioinformatics/btp324) : Li, H., & Durbin, R. (2009). Fast and accurate short read alignment with Burrows-Wheeler transform. *Bioinformatics*, 25(14), 1754\u20131760.\n- [MetaBAT2](https://doi.org/10.7717/peerj.7359) : Kang, D. D., Li, F., Kirton, E., Thomas, A., Egan, R., An, H., & Wang, Z. (2019). MetaBAT 2: An adaptive binning algorithm for robust and efficient genome reconstruction from metagenome assemblies. *PeerJ*, 2019(7), 1\u201313.\n- [CheckM](https://doi.org/10.1101/gr.186072.114) : Parks, D. H., Imelfort, M., Skennerton, C. T., Hugenholtz, P., & Tyson, G. W. (2015). CheckM: Assessing the quality of microbial genomes recovered from isolates, single cells, and metagenomes. *Genome Research*, 25(7), 1043\u20131055.\n- [GTDB-Tk](https://doi.org/10.1093/BIOINFORMATICS/BTAC672) : Chaumeil, P.-A., Mussig, A. J., Hugenholtz, P., Parks, D. H. (2022). GTDB-Tk v2: memory friendly classification with the genome taxonomy database. *Bioinformatics*.\n- [CoverM](https://github.com/wwood/CoverM)\n- [Waidele et al, 2019](https://doi.org/10.1101/526038) : Waidele, L., Korb, J., Voolstra, C. R., Dedeine, F., & Staubach, F. (2019). Ecological specificity of the metagenome in a set of lower termite species supports contribution of the microbiome to adaptation of the host. *Animal Microbiome*, 1(1), 1\u201313.\n- [Tokuda et al, 2018](https://doi.org/10.1073/pnas.1810550115) : Tokuda, G., Mikaelyan, A., Fukui, C., Matsuura, Y., Watanabe, H., Fujishima, M., & Brune, A. (2018). Fiber-associated spirochetes are major agents of hemicellulose degradation in the hindgut of wood-feeding higher termites. *Proceedings of the National Academy of Sciences of the United States of America*, 115(51), E11996\u2013E12004.\n- [Romero Victorica et al, 2020](https://doi.org/10.1038/s41598-020-60850-5) : Romero Victorica, M., Soria, M. A., Batista-Garc\u00eda, R. A., Ceja-Navarro, J. A., Vikram, S., Ortiz, M., Onta\u00f1on, O., Ghio, S., Mart\u00ednez-\u00c1vila, L., Quintero Garc\u00eda, O. J., Etcheverry, C., Campos, E., Cowan, D., Arneodo, J., & Talia, P. M. (2020). Neotropical termite microbiomes as sources of novel plant cell wall degrading enzymes. *Scientific Reports*, 10(1), 1\u201314.\n- [Moreira et al, 2021](https://doi.org/10.3389/fevo.2021.632590) : Moreira, E. A., Persinoti, G. F., Menezes, L. R., Paix\u00e3o, D. A. A., Alvarez, T. M., Cairo, J. P. L. F., Squina, F. M., Costa-Leonardo, A. M., Rodrigues, A., Sillam-Duss\u00e8s, D., & Arab, A. (2021). Complementary contribution of Fungi and Bacteria to lignocellulose digestion in the food stored by a neotropical higher termite. *Frontiers in Ecology and Evolution*, 9(April), 1\u201312.\n- [Calusinska et al, 2020](https://doi.org/10.1038/s42003-020-1004-3) : Calusinska, M., Marynowska, M., Bertucci, M., Untereiner, B., Klimek, D., Goux, X., Sillam-Duss\u00e8s, D., Gawron, P., Halder, R., Wilmes, P., Ferrer, P., Gerin, P., Roisin, Y., & Delfosse, P. (2020). Integrative omics analysis of the termite gut system adaptation to Miscanthus diet identifies lignocellulose degradation enzymes. *Communications Biology*, 3(1), 1\u201312.\n- [Orakov et al, 2021](https://doi.org/10.1186/s13059-021-02393-0) : Orakov, A., Fullam, A., Coelho, L. P., Khedkar, S., Szklarczyk, D., Mende, D. R., Schmidt, T. S. B., & Bork, P. (2021). GUNC: detection of chimerism and contamination in prokaryotic genomes. *Genome Biology*, 22(1).\n- [Parks et al, 2015](https://doi.org/10.1101/gr.186072.114) : Parks, D. H., Imelfort, M., Skennerton, C. T., Hugenholtz, P., & Tyson, G. W. (2015). CheckM: Assessing the quality of microbial genomes recovered from isolates, single cells, and metagenomes. *Genome Research*, 25(7), 1043\u20131055."
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Nachida08/SnakeMAGs"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-25T11:57:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-15T14:30:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9965906073541718,
      "result": {
        "original_header": "About SnakeMAGs",
        "type": "Text_excerpt",
        "value": "SnakeMAGs is a workflow to reconstruct prokaryotic genomes from metagenomes. The main purpose of SnakeMAGs is to process Illumina data from raw reads to metagenome-assembled genomes (MAGs).\nSnakeMAGs is efficient, easy to handle and flexible to different projects. The workflow is CeCILL licensed, implemented in Snakemake (run on multiple cores) and available for Linux.\nSnakeMAGs performed eight main steps:\n- Quality filtering of the reads\n- Adapter trimming\n- Filtering of the host sequences (optional)\n- Assembly\n- Binning\n- Evaluation of the quality of the bins\n- Classification of the MAGs\n- Estimation of the relative abundance of the MAGs \n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9765973970752276,
      "result": {
        "original_header": "Test",
        "type": "Text_excerpt",
        "value": "We provide you a small data set in the [test](https://github.com/Nachida08/SnakeMAGs/tree/main/test) directory which will allow you to validate your instalation and take your first steps with SnakeMAGs. This data set is a subset from [ZymoBiomics Mock Community](https://www.zymoresearch.com/blogs/blog/zymobiomics-microbial-standards-optimize-your-microbiomics-workflow) (250K reads) used in this tutoriel [metagenomics_tutorial](https://github.com/pjtorres/metagenomics_tutorial). \nNote: the analysis of these files took 1159.32 secondes to complete on a Ubuntu 22.04 LTS with an Intel(R) Xeon(R) Silver 4210 CPU @ 2.20GHz x 40 processor, 96GB of RAM.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download Genome Taxonomy Database (GTDB)",
        "parent_header": [
          "How to use SnakeMAGs"
        ],
        "type": "Text_excerpt",
        "value": "GTDB-Tk requires ~66G+ of external data (GTDB) that need to be downloaded and unarchived. Because this database is voluminous, we let you decide where you want to store it.\nSnakeMAGs do not download automatically GTDB, you have to do it:\n\n```\n#Download the latest release (tested with release207 and also more recently with release214)\n#Note: SnakeMAGs uses GTDBtk v2.1.0 and therefore require release 207 as minimum version. See https://ecogenomics.github.io/GTDBTk/installing/index.html#installing for details.\nwget https://data.gtdb.ecogenomic.org/releases/latest/auxillary_files/gtdbtk_v2_data.tar.gz\n#Decompress\ntar -xzvf *tar.gz\n#This will create a folder called release207_v2\n```\nAll you have to do now is to indicate the path to the database folder (in our example, the folder is called release207_v2 but we also tested it recently with release214) in the config file, Classification section.\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download the GUNC database (required if gunc: \"yes\")",
        "parent_header": [
          "How to use SnakeMAGs"
        ],
        "type": "Text_excerpt",
        "value": "GUNC accepts either a progenomes or GTDB based reference database. Both can be downloaded using the ```gunc download_db``` command. For our study we used the default proGenome-derived GUNC database. It requires less resources with similar performance.\n\n```\nconda activate\n# Install and activate GUNC environment\nconda create --prefix /path/to/gunc_env\nconda install -c bioconda gunc --prefix /path/to/gunc_env\nsource activate /path/to/gunc_env\n\n#Download the proGenome-derived GUNC database (tested with gunc_db_progenomes2.1)\n#Note: SnakeMAGs uses GUNC v1.0.5\ngunc download_db -db progenomes /path/to/GUNC_DB\n```\nAll you have to do now is to indicate the path to the GUNC database file in the config file,  Bins quality section.\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download the Illumina pair-end reads",
        "parent_header": [
          "Use case"
        ],
        "type": "Text_excerpt",
        "value": "We use fasterq-dump tool to extract data in FASTQ-format from SRA-accessions. It is a commandline-tool which offers a faster solution for downloading those large files.\n\n```\n# Install and activate sra-tools environment\n## Note: For this study we used sra-tools 2.11.0\n\nconda activate\nconda install -c bioconda sra-tools\nconda activate sra-tools\n\n# Download fastqs in a single directory\nmkdir raw_fastq\ncd raw_fastq\nfasterq-dump <SRA-accession> --threads <threads_nbr> --skip-technical --split-3\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download Genome reference for host reads filtering",
        "parent_header": [
          "Use case"
        ],
        "type": "Text_excerpt",
        "value": "```\nmkdir host_genomes\ncd host_genomes\nwget https://zenodo.org/record/6908287/files/termite_genomes.fasta.gz\ngunzip termite_genomes.fasta.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Nachida08/SnakeMAGs/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Nachida08/SnakeMAGs/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Nachida08/SnakeMAGs"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "About SnakeMAGs"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/SnakeMAGs_schema.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install conda",
        "parent_header": [
          "How to use SnakeMAGs"
        ],
        "type": "Text_excerpt",
        "value": "The easiest way to install and run SnakeMAGs is to use [conda](https://www.anaconda.com/products/distribution). These package managers will help you to easily install [Snakemake](https://snakemake.readthedocs.io/en/stable/getting_started/installation.html).\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install and activate Snakemake environment",
        "parent_header": [
          "How to use SnakeMAGs"
        ],
        "type": "Text_excerpt",
        "value": "Note: The workflow was developed with Snakemake 7.0.0\n```\nconda activate\n\n# First, set up your channel priorities\nconda config --add channels defaults\nconda config --add channels bioconda\nconda config --add channels conda-forge\nconda config --add channels anaconda\n\n# Then, create a new environment for the Snakemake version you require\nconda create -n snakemake_7.0.0 snakemake=7.0.0\n\n# And activate it\nconda activate snakemake_7.0.0\n```\n\nAlternatively, you can also install Snakemake via mamba:\n```\n# If you do not have mamba yet on your machine, you can install it with:\nconda install -n base -c conda-forge mamba\n\n# Then you can install Snakemake\nconda activate base\nmamba create -c conda-forge -c bioconda -n snakemake snakemake\n\n# And activate it\nconda activate snakemake\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9806469955420549,
      "result": {
        "original_header": "Test",
        "type": "Text_excerpt",
        "value": "1. Before getting started make sure you have cloned the SnakeMAGs repository or you have downloaded all the necessary files (SnakeMAGs.smk, config.yaml, chr19.fa.gz, insub732_2_R1.fastq.gz, insub732_2_R2.fastq.gz). See the [SnakeMAGs executable](#snakemags-executable) section.\n2. Unzip the fastq files and the host sequences file.\n```\ngunzip fastqs/insub732_2_R1.fastq.gz fastqs/insub732_2_R2.fastq.gz host_genomes/chr19.fa.gz\n```\n3. For better organisation put all the read files in the same directory (eg. fastqs) and the host sequences file in a separate directory (eg. host_genomes)\n4. Edit the config file (see [Edit config file](#edit-config-file) section)\n5. Run the test (see [Run SnakeMAGs](#run-snakemags) section) \nNote: the analysis of these files took 1159.32 secondes to complete on a Ubuntu 22.04 LTS with an Intel(R) Xeon(R) Silver 4210 CPU @ 2.20GHz x 40 processor, 96GB of RAM.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Nachida08/SnakeMAGs/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n  CeCILL FREE SOFTWARE LICENSE AGREEMENT\n\nVersion 2.1 dated 2013-06-21\n\n\n    Notice\n\nThis Agreement is a Free Software license agreement that is the result\nof discussions between its authors in order to ensure compliance with\nthe two main principles guiding its drafting:\n\n  * firstly, compliance with the principles governing the distribution\n    of Free Software: access to source code, broad rights granted to users,\n  * secondly, the election of a governing law, French law, with which it\n    is conformant, both as regards the law of torts and intellectual\n    property law, and the protection that it offers to both authors and\n    holders of the economic rights over software.\n\nThe authors of the CeCILL (for Ce[a] C[nrs] I[nria] L[ogiciel] L[ibre]) \nlicense are: \n\nCommissariat \u00e0 l'\u00e9nergie atomique et aux \u00e9nergies alternatives - CEA, a\npublic scientific, technical and industrial research establishment,\nhaving its principal place of business at 25 rue Leblanc, immeuble Le\nPonant D, 75015 Paris, France.\n\nCentre National de la Recherche Scientifique - CNRS, a public scientific\nand technological establishment, having its principal place of business\nat 3 rue Michel-Ange, 75794 Paris cedex 16, France.\n\nInstitut National de Recherche en Informatique et en Automatique -\nInria, a public scientific and technological establishment, having its\nprincipal place of business at Domaine de Voluceau, Rocquencourt, BP\n105, 78153 Le Chesnay cedex, France.\n\n\n    Preamble\n\nThe purpose of this Free Software license agreement is to grant users\nthe right to modify and redistribute the software governed by this\nlicense within the framework of an open source distribution model.\n\nThe exercising of this right is conditional upon certain obligations for\nusers so as to preserve this status for all subsequent redistributions.\n\nIn consideration of access to the source code and the rights to copy,\nmodify and redistribute granted by the license, users are provided only\nwith a limited warranty and the software's author, the holder of the\neconomic rights, and the successive licensors only have limited liability.\n\nIn this respect, the risks associated with loading, using, modifying\nand/or developing or reproducing the software by the user are brought to\nthe user's attention, given its Free Software status, which may make it\ncomplicated to use, with the result that its use is reserved for\ndevelopers and experienced professionals having in-depth computer\nknowledge. Users are therefore encouraged to load and test the\nsuitability of the software as regards their requirements in conditions\nenabling the security of their systems and/or data to be ensured and,\nmore generally, to use and operate it in the same conditions of\nsecurity. This Agreement may be freely reproduced and published,\nprovided it is not altered, and that no provisions are either added or\nremoved herefrom.\n\nThis Agreement may apply to any or all software for which the holder of\nthe economic rights decides to submit the use thereof to its provisions.\n\nFrequently asked questions can be found on the official website of the\nCeCILL licenses family (http://www.cecill.info/index.en.html) for any \nnecessary clarification.\n\n\n    Article 1 - DEFINITIONS\n\nFor the purpose of this Agreement, when the following expressions\ncommence with a capital letter, they shall have the following meaning:\n\nAgreement: means this license agreement, and its possible subsequent\nversions and annexes.\n\nSoftware: means the software in its Object Code and/or Source Code form\nand, where applicable, its documentation, \"as is\" when the Licensee\naccepts the Agreement.\n\nInitial Software: means the Software in its Source Code and possibly its\nObject Code form and, where applicable, its documentation, \"as is\" when\nit is first distributed under the terms and conditions of the Agreement.\n\nModified Software: means the Software modified by at least one\nContribution.\n\nSource Code: means all the Software's instructions and program lines to\nwhich access is required so as to modify the Software.\n\nObject Code: means the binary files originating from the compilation of\nthe Source Code.\n\nHolder: means the holder(s) of the economic rights over the Initial\nSoftware.\n\nLicensee: means the Software user(s) having accepted the Agreement.\n\nContributor: means a Licensee having made at least one Contribution.\n\nLicensor: means the Holder, or any other individual or legal entity, who\ndistributes the Software under the Agreement.\n\nContribution: means any or all modifications, corrections, translations,\nadaptations and/or new functions integrated into the Software by any or\nall Contributors, as well as any or all Internal Modules.\n\nModule: means a set of sources files including their documentation that\nenables supplementary functions or services in addition to those offered\nby the Software.\n\nExternal Module: means any or all Modules, not derived from the\nSoftware, so that this Module and the Software run in separate address\nspaces, with one calling the other when they are run.\n\nInternal Module: means any or all Module, connected to the Software so\nthat they both execute in the same address space.\n\nGNU GPL: means the GNU General Public License version 2 or any\nsubsequent version, as published by the Free Software Foundation Inc.\n\nGNU Affero GPL: means the GNU Affero General Public License version 3 or\nany subsequent version, as published by the Free Software Foundation Inc.\n\nEUPL: means the European Union Public License version 1.1 or any\nsubsequent version, as published by the European Commission.\n\nParties: mean both the Licensee and the Licensor.\n\nThese expressions may be used both in singular and plural form.\n\n\n    Article 2 - PURPOSE\n\nThe purpose of the Agreement is the grant by the Licensor to the\nLicensee of a non-exclusive, transferable and worldwide license for the\nSoftware as set forth in Article 5 <#scope> hereinafter for the whole\nterm of the protection granted by the rights over said Software.\n\n\n    Article 3 - ACCEPTANCE\n\n3.1 The Licensee shall be deemed as having accepted the terms and\nconditions of this Agreement upon the occurrence of the first of the\nfollowing events:\n\n  * (i) loading the Software by any or all means, notably, by\n    downloading from a remote server, or by loading from a physical medium;\n  * (ii) the first time the Licensee exercises any of the rights granted\n    hereunder.\n\n3.2 One copy of the Agreement, containing a notice relating to the\ncharacteristics of the Software, to the limited warranty, and to the\nfact that its use is restricted to experienced users has been provided\nto the Licensee prior to its acceptance as set forth in Article 3.1\n<#accepting> hereinabove, and the Licensee hereby acknowledges that it\nhas read and understood it.\n\n\n    Article 4 - EFFECTIVE DATE AND TERM\n\n\n      4.1 EFFECTIVE DATE\n\nThe Agreement shall become effective on the date when it is accepted by\nthe Licensee as set forth in Article 3.1 <#accepting>.\n\n\n      4.2 TERM\n\nThe Agreement shall remain in force for the entire legal term of\nprotection of the economic rights over the Software.\n\n\n    Article 5 - SCOPE OF RIGHTS GRANTED\n\nThe Licensor hereby grants to the Licensee, who accepts, the following\nrights over the Software for any or all use, and for the term of the\nAgreement, on the basis of the terms and conditions set forth hereinafter.\n\nBesides, if the Licensor owns or comes to own one or more patents\nprotecting all or part of the functions of the Software or of its\ncomponents, the Licensor undertakes not to enforce the rights granted by\nthese patents against successive Licensees using, exploiting or\nmodifying the Software. If these patents are transferred, the Licensor\nundertakes to have the transferees subscribe to the obligations set\nforth in this paragraph.\n\n\n      5.1 RIGHT OF USE\n\nThe Licensee is authorized to use the Software, without any limitation\nas to its fields of application, with it being hereinafter specified\nthat this comprises:\n\n 1. permanent or temporary reproduction of all or part of the Software\n    by any or all means and in any or all form.\n\n 2. loading, displaying, running, or storing the Software on any or all\n    medium.\n\n 3. entitlement to observe, study or test its operation so as to\n    determine the ideas and principles behind any or all constituent\n    elements of said Software. This shall apply when the Licensee\n    carries out any or all loading, displaying, running, transmission or\n    storage operation as regards the Software, that it is entitled to\n    carry out hereunder.\n\n\n      5.2 ENTITLEMENT TO MAKE CONTRIBUTIONS\n\nThe right to make Contributions includes the right to translate, adapt,\narrange, or make any or all modifications to the Software, and the right\nto reproduce the resulting software.\n\nThe Licensee is authorized to make any or all Contributions to the\nSoftware provided that it includes an explicit notice that it is the\nauthor of said Contribution and indicates the date of the creation thereof.\n\n\n      5.3 RIGHT OF DISTRIBUTION\n\nIn particular, the right of distribution includes the right to publish,\ntransmit and communicate the Software to the general public on any or\nall medium, and by any or all means, and the right to market, either in\nconsideration of a fee, or free of charge, one or more copies of the\nSoftware by any means.\n\nThe Licensee is further authorized to distribute copies of the modified\nor unmodified Software to third parties according to the terms and\nconditions set forth hereinafter.\n\n\n        5.3.1 DISTRIBUTION OF SOFTWARE WITHOUT MODIFICATION\n\nThe Licensee is authorized to distribute true copies of the Software in\nSource Code or Object Code form, provided that said distribution\ncomplies with all the provisions of the Agreement and is accompanied by:\n\n 1. a copy of the Agreement,\n\n 2. a notice relating to the limitation of both the Licensor's warranty\n    and liability as set forth in Articles 8 and 9,\n\nand that, in the event that only the Object Code of the Software is\nredistributed, the Licensee allows effective access to the full Source\nCode of the Software for a period of at least three years from the\ndistribution of the Software, it being understood that the additional\nacquisition cost of the Source Code shall not exceed the cost of the\ndata transfer.\n\n\n        5.3.2 DISTRIBUTION OF MODIFIED SOFTWARE\n\nWhen the Licensee makes a Contribution to the Software, the terms and\nconditions for the distribution of the resulting Modified Software\nbecome subject to all the provisions of this Agreement.\n\nThe Licensee is authorized to distribute the Modified Software, in\nsource code or object code form, provided that said distribution\ncomplies with all the provisions of the Agreement and is accompanied by:\n\n 1. a copy of the Agreement,\n\n 2. a notice relating to the limitation of both the Licensor's warranty\n    and liability as set forth in Articles 8 and 9,\n\nand, in the event that only the object code of the Modified Software is\nredistributed,\n\n 3. a note stating the conditions of effective access to the full source\n    code of the Modified Software for a period of at least three years\n    from the distribution of the Modified Software, it being understood\n    that the additional acquisition cost of the source code shall not\n    exceed the cost of the data transfer.\n\n\n        5.3.3 DISTRIBUTION OF EXTERNAL MODULES\n\nWhen the Licensee has developed an External Module, the terms and\nconditions of this Agreement do not apply to said External Module, that\nmay be distributed under a separate license agreement.\n\n\n        5.3.4 COMPATIBILITY WITH OTHER LICENSES\n\nThe Licensee can include a code that is subject to the provisions of one\nof the versions of the GNU GPL, GNU Affero GPL and/or EUPL in the\nModified or unmodified Software, and distribute that entire code under\nthe terms of the same version of the GNU GPL, GNU Affero GPL and/or EUPL.\n\nThe Licensee can include the Modified or unmodified Software in a code\nthat is subject to the provisions of one of the versions of the GNU GPL,\nGNU Affero GPL and/or EUPL and distribute that entire code under the\nterms of the same version of the GNU GPL, GNU Affero GPL and/or EUPL.\n\n\n    Article 6 - INTELLECTUAL PROPERTY\n\n\n      6.1 OVER THE INITIAL SOFTWARE\n\nThe Holder owns the economic rights over the Initial Software. Any or\nall use of the Initial Software is subject to compliance with the terms\nand conditions under which the Holder has elected to distribute its work\nand no one shall be entitled to modify the terms and conditions for the\ndistribution of said Initial Software.\n\nThe Holder undertakes that the Initial Software will remain ruled at\nleast by this Agreement, for the duration set forth in Article 4.2 <#term>.\n\n\n      6.2 OVER THE CONTRIBUTIONS\n\nThe Licensee who develops a Contribution is the owner of the\nintellectual property rights over this Contribution as defined by\napplicable law.\n\n\n      6.3 OVER THE EXTERNAL MODULES\n\nThe Licensee who develops an External Module is the owner of the\nintellectual property rights over this External Module as defined by\napplicable law and is free to choose the type of agreement that shall\ngovern its distribution.\n\n\n      6.4 JOINT PROVISIONS\n\nThe Licensee expressly undertakes:\n\n 1. not to remove, or modify, in any manner, the intellectual property\n    notices attached to the Software;\n\n 2. to reproduce said notices, in an identical manner, in the copies of\n    the Software modified or not.\n\nThe Licensee undertakes not to directly or indirectly infringe the\nintellectual property rights on the Software of the Holder and/or\nContributors, and to take, where applicable, vis-\u00e0-vis its staff, any\nand all measures required to ensure respect of said intellectual\nproperty rights of the Holder and/or Contributors.\n\n\n    Article 7 - RELATED SERVICES\n\n7.1 Under no circumstances shall the Agreement oblige the Licensor to\nprovide technical assistance or maintenance services for the Software.\n\nHowever, the Licensor is entitled to offer this type of services. The\nterms and conditions of such technical assistance, and/or such\nmaintenance, shall be set forth in a separate instrument. Only the\nLicensor offering said maintenance and/or technical assistance services\nshall incur liability therefor.\n\n7.2 Similarly, any Licensor is entitled to offer to its licensees, under\nits sole responsibility, a warranty, that shall only be binding upon\nitself, for the redistribution of the Software and/or the Modified\nSoftware, under terms and conditions that it is free to decide. Said\nwarranty, and the financial terms and conditions of its application,\nshall be subject of a separate instrument executed between the Licensor\nand the Licensee.\n\n\n    Article 8 - LIABILITY\n\n8.1 Subject to the provisions of Article 8.2, the Licensee shall be\nentitled to claim compensation for any direct loss it may have suffered\nfrom the Software as a result of a fault on the part of the relevant\nLicensor, subject to providing evidence thereof.\n\n8.2 The Licensor's liability is limited to the commitments made under\nthis Agreement and shall not be incurred as a result of in particular:\n(i) loss due the Licensee's total or partial failure to fulfill its\nobligations, (ii) direct or consequential loss that is suffered by the\nLicensee due to the use or performance of the Software, and (iii) more\ngenerally, any consequential loss. In particular the Parties expressly\nagree that any or all pecuniary or business loss (i.e. loss of data,\nloss of profits, operating loss, loss of customers or orders,\nopportunity cost, any disturbance to business activities) or any or all\nlegal proceedings instituted against the Licensee by a third party,\nshall constitute consequential loss and shall not provide entitlement to\nany or all compensation from the Licensor.\n\n\n    Article 9 - WARRANTY\n\n9.1 The Licensee acknowledges that the scientific and technical\nstate-of-the-art when the Software was distributed did not enable all\npossible uses to be tested and verified, nor for the presence of\npossible defects to be detected. In this respect, the Licensee's\nattention has been drawn to the risks associated with loading, using,\nmodifying and/or developing and reproducing the Software which are\nreserved for experienced users.\n\nThe Licensee shall be responsible for verifying, by any or all means,\nthe suitability of the product for its requirements, its good working\norder, and for ensuring that it shall not cause damage to either persons\nor properties.\n\n9.2 The Licensor hereby represents, in good faith, that it is entitled\nto grant all the rights over the Software (including in particular the\nrights set forth in Article 5 <#scope>).\n\n9.3 The Licensee acknowledges that the Software is supplied \"as is\" by\nthe Licensor without any other express or tacit warranty, other than\nthat provided for in Article 9.2 <#good-faith> and, in particular,\nwithout any warranty as to its commercial value, its secured, safe,\ninnovative or relevant nature.\n\nSpecifically, the Licensor does not warrant that the Software is free\nfrom any error, that it will operate without interruption, that it will\nbe compatible with the Licensee's own equipment and software\nconfiguration, nor that it will meet the Licensee's requirements.\n\n9.4 The Licensor does not either expressly or tacitly warrant that the\nSoftware does not infringe any third party intellectual property right\nrelating to a patent, software or any other property right. Therefore,\nthe Licensor disclaims any and all liability towards the Licensee\narising out of any or all proceedings for infringement that may be\ninstituted in respect of the use, modification and redistribution of the\nSoftware. Nevertheless, should such proceedings be instituted against\nthe Licensee, the Licensor shall provide it with technical and legal\nexpertise for its defense. Such technical and legal expertise shall be\ndecided on a case-by-case basis between the relevant Licensor and the\nLicensee pursuant to a memorandum of understanding. The Licensor\ndisclaims any and all liability as regards the Licensee's use of the\nname of the Software. No warranty is given as regards the existence of\nprior rights over the name of the Software or as regards the existence\nof a trademark.\n\n\n    Article 10 - TERMINATION\n\n10.1 In the event of a breach by the Licensee of its obligations\nhereunder, the Licensor may automatically terminate this Agreement\nthirty (30) days after notice has been sent to the Licensee and has\nremained ineffective.\n\n10.2 A Licensee whose Agreement is terminated shall no longer be\nauthorized to use, modify or distribute the Software. However, any\nlicenses that it may have granted prior to termination of the Agreement\nshall remain valid subject to their having been granted in compliance\nwith the terms and conditions hereof.\n\n\n    Article 11 - MISCELLANEOUS\n\n\n      11.1 EXCUSABLE EVENTS\n\nNeither Party shall be liable for any or all delay, or failure to\nperform the Agreement, that may be attributable to an event of force\nmajeure, an act of God or an outside cause, such as defective\nfunctioning or interruptions of the electricity or telecommunications\nnetworks, network paralysis following a virus attack, intervention by\ngovernment authorities, natural disasters, water damage, earthquakes,\nfire, explosions, strikes and labor unrest, war, etc.\n\n11.2 Any failure by either Party, on one or more occasions, to invoke\none or more of the provisions hereof, shall under no circumstances be\ninterpreted as being a waiver by the interested Party of its right to\ninvoke said provision(s) subsequently.\n\n11.3 The Agreement cancels and replaces any or all previous agreements,\nwhether written or oral, between the Parties and having the same\npurpose, and constitutes the entirety of the agreement between said\nParties concerning said purpose. No supplement or modification to the\nterms and conditions hereof shall be effective as between the Parties\nunless it is made in writing and signed by their duly authorized\nrepresentatives.\n\n11.4 In the event that one or more of the provisions hereof were to\nconflict with a current or future applicable act or legislative text,\nsaid act or legislative text shall prevail, and the Parties shall make\nthe necessary amendments so as to comply with said act or legislative\ntext. All other provisions shall remain effective. Similarly, invalidity\nof a provision of the Agreement, for any reason whatsoever, shall not\ncause the Agreement as a whole to be invalid.\n\n\n      11.5 LANGUAGE\n\nThe Agreement is drafted in both French and English and both versions\nare deemed authentic.\n\n\n    Article 12 - NEW VERSIONS OF THE AGREEMENT\n\n12.1 Any person is authorized to duplicate and distribute copies of this\nAgreement.\n\n12.2 So as to ensure coherence, the wording of this Agreement is\nprotected and may only be modified by the authors of the License, who\nreserve the right to periodically publish updates or new versions of the\nAgreement, each with a separate number. These subsequent versions may\naddress new issues encountered by Free Software.\n\n12.3 Any Software distributed under a given version of the Agreement may\nonly be subsequently distributed under the same version of the Agreement\nor a subsequent version, subject to the provisions of Article 5.3.4\n<#compatibility>.\n\n\n    Article 13 - GOVERNING LAW AND JURISDICTION\n\n13.1 The Agreement is governed by French law. The Parties agree to\nendeavor to seek an amicable solution to any disagreements or disputes\nthat may arise during the performance of the Agreement.\n\n13.2 Failing an amicable solution within two (2) months as from their\noccurrence, and unless emergency proceedings are necessary, the\ndisagreements or disputes shall be referred to the Paris Courts having\njurisdiction, by the more diligent Party.\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/LICENCE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "This project is licensed under the CeCILL License - see the [LICENSE](https://github.com/Nachida08/SnakeMAGs/blob/main/LICENCE) file for details.\n\nDeveloped by Nachida Tadrent at the Insect Biology Research Institute ([IRBI](https://irbi.univ-tours.fr/)), under the supervision of Franck Dedeine and Vincent Herv\u00e9.\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SnakeMAGs"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Nachida08"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 17521,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://snakemake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Nachida08",
          "type": "User"
        },
        "date_created": "2024-07-15T14:30:35Z",
        "date_published": "2024-07-15T14:55:50Z",
        "description": "In this version we corrected a bug observed when host genome filtering was not required.",
        "html_url": "https://github.com/Nachida08/SnakeMAGs/releases/tag/v1.1.1",
        "name": "SnakeMAGs v1.1.1",
        "release_id": 165471910,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/Nachida08/SnakeMAGs/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Nachida08/SnakeMAGs/releases/165471910",
        "value": "https://api.github.com/repos/Nachida08/SnakeMAGs/releases/165471910",
        "zipball_url": "https://api.github.com/repos/Nachida08/SnakeMAGs/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Nachida08",
          "type": "User"
        },
        "date_created": "2023-02-22T08:00:32Z",
        "date_published": "2023-02-22T13:45:45Z",
        "description": "We are happy to announce the release of **SnakeMAGs v1.1.0** which features two major improvements.\r\n\r\n**The first one**, we implemented a new rule to detect and discard chimeric and contaminated genomes using the [GUNC](https://github.com/grp-bork/gunc) tool. It is optional, the user can choose to apply or not this treatment to its genomes.\r\n\r\n**The second one**, at the bins quality filtering step, the user can choose if he wants to keep the bins above a minimum completion rate (by default 50%, but it can be adjusted) and below a maximum contamination rate (by default 10%, but it can be adjusted) or if he decides to filter bins according to the a quality score (completion-5*contamination >= 50), as defined in _Parks et al. (2017) Recovery of nearly 8,000 metagenome-assembled genomes substantially expands the tree of life. Nat Microbiol 2, 1533\u20131542 https://doi.org/10.1038/s41564-017-0012-7_.",
        "html_url": "https://github.com/Nachida08/SnakeMAGs/releases/tag/v1.1.0",
        "name": "SnakeMAGs v1.1.0",
        "release_id": 93296236,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/Nachida08/SnakeMAGs/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Nachida08/SnakeMAGs/releases/93296236",
        "value": "https://api.github.com/repos/Nachida08/SnakeMAGs/releases/93296236",
        "zipball_url": "https://api.github.com/repos/Nachida08/SnakeMAGs/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Nachida08",
          "type": "User"
        },
        "date_created": "2022-11-18T14:51:58Z",
        "date_published": "2022-11-18T14:54:22Z",
        "description": "SnakeMAGs is a workflow to reconstruct prokaryotic genomes from metagenomes. The main purpose of SnakeMAGs is to process Illumina data from raw reads to metagenome-assembled genomes (MAGs). SnakeMAGs is efficient, easy to handle and flexible to different projects. The workflow is CeCILL licensed, implemented in Snakemake (run on multiple cores) and available for Linux.",
        "html_url": "https://github.com/Nachida08/SnakeMAGs/releases/tag/v1.0.2",
        "name": "SnakeMAGs",
        "release_id": 83555951,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/Nachida08/SnakeMAGs/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/Nachida08/SnakeMAGs/releases/83555951",
        "value": "https://api.github.com/repos/Nachida08/SnakeMAGs/releases/83555951",
        "zipball_url": "https://api.github.com/repos/Nachida08/SnakeMAGs/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Nachida08",
          "type": "User"
        },
        "date_created": "2022-11-02T16:09:32Z",
        "date_published": "2022-11-08T08:58:36Z",
        "description": "SnakeMAGs is a workflow to reconstruct prokaryotic genomes from metagenomes. The main purpose of SnakeMAGs is to process Illumina data from raw reads to metagenome-assembled genomes (MAGs). SnakeMAGs is efficient, easy to handle and flexible to different projects. The workflow is CeCILL licensed, implemented in Snakemake (run on multiple cores) and available for Linux.",
        "html_url": "https://github.com/Nachida08/SnakeMAGs/releases/tag/v1.0.1",
        "name": "SnakeMAGs",
        "release_id": 82358580,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/Nachida08/SnakeMAGs/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Nachida08/SnakeMAGs/releases/82358580",
        "value": "https://api.github.com/repos/Nachida08/SnakeMAGs/releases/82358580",
        "zipball_url": "https://api.github.com/repos/Nachida08/SnakeMAGs/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Nachida08",
          "type": "User"
        },
        "date_created": "2022-08-01T09:37:55Z",
        "date_published": "2022-08-01T09:47:32Z",
        "description": "SnakeMAGs is a workflow to reconstruct prokaryotic genomes from metagenomes. The main purpose of SnakeMAGs is to process Illumina data from raw reads to metagenome-assembled genomes (MAGs). SnakeMAGs is efficient, easy to handle and flexible to different projects. The workflow is CeCILL licensed, implemented in Snakemake (run on multiple cores) and available for Linux.",
        "html_url": "https://github.com/Nachida08/SnakeMAGs/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 73043703,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/Nachida08/SnakeMAGs/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Nachida08/SnakeMAGs/releases/73043703",
        "value": "https://api.github.com/repos/Nachida08/SnakeMAGs/releases/73043703",
        "zipball_url": "https://api.github.com/repos/Nachida08/SnakeMAGs/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run SnakeMAGs",
        "parent_header": [
          "Use case"
        ],
        "type": "Text_excerpt",
        "value": "If you are using a workstation with Ubuntu (tested on Ubuntu 22.04):\n```{bash}\nsnakemake --cores 30 --snakefile SnakeMAGs.smk --use-conda --conda-prefix /path/to/SnakeMAGs_conda_env/ --configfile /path/to/config.yaml --keep-going --latency-wait 180\n```\n\nIf you are working on a cluster with Slurm (tested with version 18.08.7):\n```{bash}\nsnakemake --snakefile SnakeMAGs.smk --cluster 'sbatch -p <cluster_partition> --mem <memory> -c <cores> -o \"cluster_logs/{wildcards}.{rule}.{jobid}.out\" -e \"cluster_logs/{wildcards}.{rule}.{jobid}.err\" ' --jobs <nbr_of_parallel_jobs> --use-conda --conda-frontend conda --conda-prefix /path/to/SnakeMAGs_conda_env/ --jobname \"{rule}.{wildcards}.{jobid}\" --latency-wait 180 --configfile /path/to/config.yaml --keep-going\n```\n\nIf you are working on a cluster with SGE (tested with version 8.1.9):\n```{bash}\nsnakemake --snakefile SnakeMAGs.smk --cluster \"qsub -cwd -V -q <short.q/long.q> -pe thread {threads} -e cluster_logs/{rule}.e{jobid} -o cluster_logs/{rule}.o{jobid}\" --jobs <nbr_of_parallel_jobs> --use-conda --conda-frontend conda --conda-prefix /path/to/SnakeMAGs_conda_env/ --jobname \"{rule}.{wildcards}.{jobid}\" --latency-wait 180 --configfile /path/to/config.yaml --keep-going\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:05:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Study results",
        "parent_header": [
          "Use case"
        ],
        "type": "Text_excerpt",
        "value": "The MAGs reconstructed from each metagenome and their taxonomic classification are available in this [repository](https://doi.org/10.5281/zenodo.7661004).\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "SnakeMAGs executable",
        "parent_header": [
          "How to use SnakeMAGs"
        ],
        "type": "Text_excerpt",
        "value": "The easiest way to procure SnakeMAGs and its related files is to clone the repository using git:\n```\ngit clone https://github.com/Nachida08/SnakeMAGs.git\n```\nAlternatively, you can download the relevant files:\n```\nwget https://github.com/Nachida08/SnakeMAGs/blob/main/SnakeMAGs.smk https://github.com/Nachida08/SnakeMAGs/blob/main/config.yaml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SnakeMAGs input files",
        "parent_header": [
          "How to use SnakeMAGs"
        ],
        "type": "Text_excerpt",
        "value": "- Illumina paired-end reads in FASTQ.\n- Adapter sequence file ([adapter.fa](https://github.com/Nachida08/SnakeMAGs/blob/main/adapters.fa)).\n- Host genome sequences in FASTA (if host_genome: \"yes\"), in case you work with host-associated metagenomes (e.g. human gut metagenome).\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Edit config file",
        "parent_header": [
          "How to use SnakeMAGs"
        ],
        "type": "Text_excerpt",
        "value": "You need to edit the config.yaml file. In particular, you need to set the correct paths: for the working directory, to specify where are your fastq files, where you want to place the conda environments (that will be created using the provided .yaml files available in [SnakeMAGs_conda_env directory](https://github.com/Nachida08/SnakeMAGs/tree/main/SnakeMAGs_conda_env)), where are the adapters, where is GTDB and optionally where is the GUNC database and where is your host genome reference.\n\nLastly, you need to allocate the proper computational resources (threads, memory) for each of the main steps. These can be optimized according to your hardware.\n\n\n\nHere is an example of a config file:\n\n```\n#####################################################################################################\n#####  _____    ___    _              _   _    ______   __    __              _______   _____   #####\n##### /  ___|  |   \\  | |     /\\     | | / /  |  ____| |  \\  /  |     /\\     /  _____| /  ___|  #####\n##### | (___   | |\\ \\ | |    /  \\    | |/ /   | |____  |   \\/   |    /  \\    | |   __  | (___   #####\n#####  \\___ \\  | | \\ \\| |   / /\\ \\   | |\\ \\   |  ____| | |\\  /| |   / /\\ \\   | |  |_ |  \\___ \\  #####\n#####  ____) | | |  \\   |  / /__\\ \\  | | \\ \\  | |____  | | \\/ | |  / /__\\ \\  | |____||  ____) | #####\n##### |_____/  |_|   \\__| /_/    \\_\\ |_|  \\_\\ |______| |_|    |_| /_/    \\_\\  \\______/ |_____/  #####\n#####                                                                                           #####\n#####################################################################################################\n\n############################\n### Execution parameters ###\n############################\n\nworking_dir: /path/to/working/directory/                                 #The main directory for the project\nraw_fastq: /path/to/raw_fastq/                                           #The directory that contains all the fastq files of all the samples (eg. sample1_R1.fastq & sample1_R2.fastq, sample2_R1.fastq & sample2_R2.fastq...)\nsuffix_1: \"_R1.fastq\"                                                    #Main type of suffix for forward reads file (eg. _1.fastq or _R1.fastq or _r1.fastq or _1.fq or _R1.fq or _r1.fq )\nsuffix_2: \"_R2.fastq\"                                                    #Main type of suffix for reverse reads file (eg. _2.fastq or _R2.fastq or _r2.fastq or _2.fq or _R2.fq or _r2.fq )\n\n###########################\n### Conda environnemnts ###\n###########################\n\nconda_env: \"/path/to/SnakeMAGs_conda_env/\"                               #Path to the provided SnakeMAGs_conda_env directory which contains the yaml file for each conda environment\n\n#########################\n### Quality filtering ###\n#########################\nemail: name.surname@your-univ.com                                        #Your e-mail address\nthreads_filter: 10                                                       #The number of threads to run this process. To be adjusted according to your hardware\nresources_filter: 150                                                    #Memory according to tools need (in GB)\n\n########################\n### Adapter trimming ###\n########################\nadapters: /path/to/working/directory/adapters.fa                         #A fasta file contanning a set of various Illumina adaptors (this file is provided and is also available on github)\ntrim_params: \"2:40:15\"                                                   #For further details, see the Trimmomatic documentation\nthreads_trim: 10                                                         #The number of threads to run this process. To be adjusted according to your hardware\nresources_trim: 150                                                      #Memory according to tools need (in GB)\n\n######################\n### Host filtering ###\n######################\nhost_genome: \"yes\"                                                      #yes or no. An optional step for host-associated samples (eg. termite, human, plant...)\nthreads_bowtie2: 50                                                     #The number of threads to run this process. To be adjusted according to your hardware\nhost_genomes_directory: /path/to/working/host_genomes/                  #the directory where the host genome is stored\nhost_genomes: /path/to/working/host_genomes/host_genomes.fa             #A fasta file containing the DNA sequences of the host genome(s)\nthreads_samtools: 50                                                    #The number of threads to run this process. To be adjusted according to your hardware\nresources_host_filtering: 150                                           #Memory according to tools need (in GB)\n\n################\n### Assembly ###\n################\nthreads_megahit: 50                                                    #The number of threads to run this process. To be adjusted according to your hardware\nmin_contig_len: 1000                                                   #Minimum length (in bp) of the assembled contigs\nk_list: \"21,31,41,51,61,71,81,91,99,109,119\"                           #Kmer size (for further details, see the megahit documentation)\nresources_megahit: 250                                                 #Memory according to tools need (in GB)\n\n###############\n### Binning ###\n###############\nthreads_bwa: 50                                                        #The number of threads to run this process. To be adjusted according to your hardware\nresources_bwa: 150                                                     #Memory according to tools need (in GB)\nthreads_samtools: 50                                                   #The number of threads to run this process. To be adjusted according to your hardware\nresources_samtools: 150                                                #Memory according to tools need (in GB)\nseed: 19860615                                                         #Seed number for reproducible results\nthreads_metabat: 50                                                    #The number of threads to run this process. To be adjusted according to your hardware\nminContig: 2500                                                        #Minimum length (in bp) of the contigs\nresources_binning: 250                                                 #Memory according to tools need (in GB)\n\n####################\n### Bins quality ###\n####################\n#checkM\nthreads_checkm: 50                                                    #The number of threads to run this process. To be adjusted according to your hardware\nresources_checkm: 250                                                 #Memory according to tools need (in GB)\n#bins_quality_filtering\ncompletion: 50                                                        #The minimum completion rate of bins\ncontamination: 10                                                     #The maximum contamination rate of bins\nparks_quality_score: \"yes\"                                            #yes or no. If yes bins are filtered according to the Parks quality score (completion-5*contamination >= 50)\n#GUNC\ngunc: \"yes\"                                                           #yes or no. An optional step to detect and discard chimeric and contaminated genomes using the GUNC tool\nthreads_gunc: 50                                                      #The number of threads to run this process. To be adjusted according to your hardware\nresources_gunc: 250                                                   #Memory according to tools need (in GB)\nGUNC_db: /path/to/GUNC_DB/gunc_db_progenomes2.1.dmnd                  #Path to the downloaded GUNC database (see the readme file)\n\n######################\n### Classification ###\n######################\nGTDB_data_ref: /path/to/downloaded/GTDB                                #Path to uncompressed GTDB-Tk reference data (GTDB)\nthreads_gtdb: 10                                                       #The number of threads to run this process. To be adjusted according to your hardware\nresources_gtdb: 250                                                    #Memory according to tools need (in GB)\n\n##################\n### Abundances ###\n##################\nthreads_coverM: 10                                                     #The number of threads to run this process. To be adjusted according to your hardware\nresources_coverM: 150                                                  #Memory according to tools need (in GB)\n```"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use case",
        "type": "Text_excerpt",
        "value": "During the test phase of the development of SnakeMAGs, we used this workflow to process 10 publicly available termite gut metagenomes generated by Illumina sequencing, to ultimately reconstruct prokaryotic MAGs. These metagenomes were retrieved from the NCBI database using the following accession numbers: SRR10402454; SRR14739927; SRR8296321; SRR8296327; SRR8296329; SRR8296337; SRR8296343; DRR097505; SRR7466794; SRR7466795. They come from five different studies: Waidele et al, 2019; Tokuda et al, 2018; Romero Victorica et al, 2020; Moreira et al, 2021; and Calusinska et al, 2020.\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Edit the config file",
        "parent_header": [
          "Use case"
        ],
        "type": "Text_excerpt",
        "value": "See [Edit config file](#edit-config-file) section.\n\n## Run SnakeMAGs\n```\nconda activate snakemake_7.0.0\nmkdir cluster_logs\nsnakemake --snakefile SnakeMAGs.smk --cluster 'sbatch -p <cluster_partition> --mem <memory> -c <cores> -o \"cluster_logs/{wildcards}.{rule}.{jobid}.out\" -e \"cluster_logs/{wildcards}.{rule}.{jobid}.err\" ' --jobs <nbr_of_parallel_jobs> --use-conda --conda-frontend conda --conda-prefix /path/to/SnakeMAGs_conda_env/ --jobname \"{rule}.{wildcards}.{jobid}\" --latency-wait 180 --configfile /path/to/config.yaml --keep-going\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Nachida08/SnakeMAGs/main/README.md",
      "technique": "header_analysis"
    }
  ]
}