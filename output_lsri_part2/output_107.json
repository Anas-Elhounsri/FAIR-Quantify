{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "JASPER software for polishing genome assemblies and creating personalized reference genomes",
        "type": "Text_excerpt",
        "value": "\r\nJASPER (Jellyfish based Assembly Sequence Polisher for Error Reduction) is an efficient polishing tool for draft genomes.  It uses accurate reads (PacBio HiFi or Illumina) to evaluate consensus quality and correct consensus errors in genome assemblies.  JASPER is substantially faster than polishing methods based on sequence alignment, and more accurate than currently available k-mer based methods.  The efficiency and scalability of JASPER allows one to use it to create personalized reference genomes for specific populations very efficiently, even for large sequenced populations, by polishing the reference genome, such as GRCh38 or chm13v2.0 for human, with Illumina reads sequenced from many individuals from the population. \r\n\r\nPlease see this manuscript for more details: Guo A, Salzberg SL, Zimin AV. JASPER: A fast genome polishing tool that improves accuracy of genome assemblies. PLoS Comput Biol. 2023 Mar 31;19(3):e1011032. doi: 10.1371/journal.pcbi.1011032. PMID: 37000853; PMCID: PMC10096238.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/alguoo314/JASPER/develop/README",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/alguoo314/JASPER"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-28T15:24:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-13T10:29:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This is the official site for JASPER (Jellyfish based Assembly Sequence Polisher for Error Reduction)"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/alguoo314/JASPER/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/alguoo314/JASPER/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "alguoo314/JASPER"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JASPER software for polishing genome assemblies and creating personalized reference genomes"
      },
      "source": "https://raw.githubusercontent.com/alguoo314/JASPER/develop/README",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alguoo314/JASPER/develop/src/jasper.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Note: This version of JASPER does not install Jellyfish, a required dependency. For convenience we created an integrated version that includes all required dependencies.  You can install it from here: https://github.com/alekseyzimin/JASPER_release/releases",
        "parent_header": [
          "JASPER software for polishing genome assemblies and creating personalized reference genomes"
        ],
        "type": "Text_excerpt",
        "value": "To install, download the release tarball JASPER-v1.0.4.tar.gz and then run:\r\n```\r\ntar xzf JASPER-v1.0.4.tar.gz\r\ncd JASPER-v1.0.4\r\n./install.sh\r\n```\r\nThis will compule jellyfish and configure and install JASPER.  You can then run JASPER from /path_to/JASPER-v1.0.4/bin/jasper.sh. \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/alguoo314/JASPER/develop/README",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "JASPER software for polishing genome assemblies and creating personalized reference genomes"
        ],
        "type": "Text_excerpt",
        "value": "To install, please download the latest release tarball from the Releases section, and use \"tar -xzf\" to unpack the archive.  Then cd to the resulting folder and run ./configure --prefix=$PWD && make install.  For example:\r\n```shell\r\ntar -xzf jasper-1.0.3.tar.gz\r\ncd jasper-1.0.3\r\n./configure --prefix=$PWD\r\nmake install\r\n```\r\nJASPER will be available as $PWD/bin/jasper.sh.  Upon successful install, you can type $PWD/bin/jasper.sh -h to get usage information.\r\n    \r\nJASPER uses Python binding of Jellyfish. To configure Jellyfish Python binding, download and install the latest release of Jellyfish from https://github.com/gmarcais/Jellyfish, and then configure and compile with:\r\n\r\n```shell\r\n./configure --enable-python-binding \r\nmake -j 4\r\nsudo make install\r\n```\r\nBy default, Jellyfish installs in /usr/local and the bindings are installed in the proper system location. The \"python\" command must alias to \"python3\" or \"python3.x\" in the system for Jellyfish binding to install properly. If the \"python\" is aliased to \"python3.8\" then Jellyfish binding will install into python3.8/site-packages/. Please type ``` which python ``` to ensure that \"python\" points to a python3.x version before running the command below. Furthermore, if you do not have root access, you can pass the --prefix switch to have the bindings install in the given directory. For example:\r\n\r\n```shell\r\n./configure --prefix=$HOME --enable-python-binding\r\nmake -j 4\r\nmake install\r\n```\r\nThis will install the python binding in $HOME/lib/python3.8/site-packages (adjust based on your Python version). \r\n\r\nThen, an environment variable PYTHONPATH needs to be set. For example:\r\n\r\n```shell\r\nexport PYTHONPATH=$HOME/lib/python3.8/site-packages \r\n```\r\n    \r"
      },
      "source": "https://raw.githubusercontent.com/alguoo314/JASPER/develop/README",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/alguoo314/JASPER/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "assembly, bioinformatics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JASPER"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "alguoo314"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 42468,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 34072,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 15776,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 1018,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 757,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 706,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alguoo314/JASPER/develop/README"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alguoo314/JASPER/develop/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "alguoo314",
          "type": "User"
        },
        "date_created": "2023-09-26T13:54:41Z",
        "date_published": "2023-10-09T17:24:51Z",
        "description": "This version contains these new changes:\r\n1. Prevented large jf_size from being scientific notation unparsable by later lines\r\n2. Removed dependency on math.inf\r\n3. Resolved syntax warnings",
        "html_url": "https://github.com/alguoo314/JASPER/releases/tag/v1.0.3",
        "name": "JASPER version 1.0.3",
        "release_id": 124299610,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/alguoo314/JASPER/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/alguoo314/JASPER/releases/124299610",
        "value": "https://api.github.com/repos/alguoo314/JASPER/releases/124299610",
        "zipball_url": "https://api.github.com/repos/alguoo314/JASPER/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "alguoo314",
          "type": "User"
        },
        "date_created": "2023-02-16T21:25:48Z",
        "date_published": "2023-02-20T18:28:15Z",
        "description": "This version has the following major updates resulting in significantly better accuracy and speed, especially on the large genomes:\r\n\r\n1. The default k-mer size is now k=37 instead of k=25 for better polishing performance.\r\n2. Added the k-mer graph extension method to correct scenarios with several errors within k-mer size window.\r\n3. Added two more fixable error types.\r\n4. Optimized run time by first looking for the most common and least expensive to fix error types.\r\n5. Optimized the subroutine that checks if the fix is successful.\r\n6. Optimized run time and system load by minimizing I/O.",
        "html_url": "https://github.com/alguoo314/JASPER/releases/tag/v1.0.2",
        "name": "JASPER version 1.0.2",
        "release_id": 93061975,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/alguoo314/JASPER/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/alguoo314/JASPER/releases/93061975",
        "value": "https://api.github.com/repos/alguoo314/JASPER/releases/93061975",
        "zipball_url": "https://api.github.com/repos/alguoo314/JASPER/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "alekseyzimin",
          "type": "User"
        },
        "date_created": "2022-10-12T18:33:53Z",
        "date_published": "2022-10-12T18:51:17Z",
        "description": "This release fixes a bug where jellyfish database is always created with k=25",
        "html_url": "https://github.com/alguoo314/JASPER/releases/tag/v1.0.1",
        "name": "JASPER v1.0.1",
        "release_id": 79680479,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/alguoo314/JASPER/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/alguoo314/JASPER/releases/79680479",
        "value": "https://api.github.com/repos/alguoo314/JASPER/releases/79680479",
        "zipball_url": "https://api.github.com/repos/alguoo314/JASPER/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "alekseyzimin",
          "type": "User"
        },
        "date_created": "2022-06-10T15:36:18Z",
        "date_published": "2022-06-10T15:38:25Z",
        "description": "This is the initial release of JASPER genome polishing software.  Please refer to README.md for installation instructions.",
        "html_url": "https://github.com/alguoo314/JASPER/releases/tag/v1.0.0",
        "name": "JASPER v1.0.0",
        "release_id": 69169714,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/alguoo314/JASPER/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/alguoo314/JASPER/releases/69169714",
        "value": "https://api.github.com/repos/alguoo314/JASPER/releases/69169714",
        "zipball_url": "https://api.github.com/repos/alguoo314/JASPER/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Note: This version of JASPER does not install Jellyfish, a required dependency. For convenience we created an integrated version that includes all required dependencies.  You can install it from here: https://github.com/alekseyzimin/JASPER_release/releases",
        "parent_header": [
          "JASPER software for polishing genome assemblies and creating personalized reference genomes"
        ],
        "type": "Text_excerpt",
        "value": "To install, download the release tarball JASPER-v1.0.4.tar.gz and then run:\r\n```\r\ntar xzf JASPER-v1.0.4.tar.gz\r\ncd JASPER-v1.0.4\r\n./install.sh\r\n```\r\nThis will compule jellyfish and configure and install JASPER.  You can then run JASPER from /path_to/JASPER-v1.0.4/bin/jasper.sh. \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/alguoo314/JASPER/develop/README",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "JASPER software for polishing genome assemblies and creating personalized reference genomes"
        ],
        "type": "Text_excerpt",
        "value": "* Python 3\r\n* Jellyfish version 2 or above (https://github.com/gmarcais/Jellyfish)\r\n* Biopython (https://biopython.org/)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/alguoo314/JASPER/develop/README",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running JASPER",
        "parent_header": [
          "JASPER software for polishing genome assemblies and creating personalized reference genomes"
        ],
        "type": "Text_excerpt",
        "value": "To run JASPER, execute <PATH>/bin/jasper.sh with the following options:\\\r\n(default value in (), *required):\\\r\n```\r\n-b, --batch=uint64               Desired batch size for the query (default value based on number of threads and assembly size). For the efficiency of jellyfish database loading, the max number of batches is limited to 8.\r\n-t, --threads=uint32             Number of threads (1)\r\n-a --assembly                    *Path to the assembly file\r\n-j --jf                          Path to the jellyfish database file. Required if --reads is not provided\r\n-r --reads                       Path to the file(s) containing the reads to construct a jellyfish database. If two or more files are provided, please enclose the list with single-quotes, e.g. -r '/path_to/file1.fastq /path_to/file2.fastq'. Both fasta and fastq formats are acceptable. Required if --jf is not provided.\r\n-k, --kmer=uint64                k-mer size (37)\r\n-p, --num_passes=utint16         The number of iterations of running jasper for fixing (2). A number smaller than 4 is usually more than sufficient\r\n-h, --help                       This message\r\n-v, --verbose                    Output information (False)\r\n-d. --debug                      Debug mode. If supplied, all the _iter*batch*csv and _iter*batch*fa.temp files will be kept for debugging \r\n```\r\nWhen JASPER runs with --reads, it creates mer_counts.jf Jellyfish k-mer count database from the reads. On subsequent runs in the same folder, if mer_counts.jf exists, it re-uses the mer_counts.jf.  Here is an example of how to run JASPER:\r\n\r\n```shell\r\n/PATH/bin/jasper.sh --reads '/path/read1.fastq /path/read2.fastq' -a assembly.fasta -k 25 -t 16 -p 4 1>jasper.out 2>&1\r\n```\r\nThis command will polish assembly.fasta using reads /path/read1.fastq and /path/read2.fastq with 16 threads and with 4 passes of polishing. jasper.out will contain the diagnostic output including the QV value before and after polishing, and the polished assembly will be output as assembly.fasta.fixed.fasta.  \r\n"
      },
      "source": "https://raw.githubusercontent.com/alguoo314/JASPER/develop/README",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:20:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ]
}