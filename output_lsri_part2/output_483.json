{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "MTaxi"
        ],
        "type": "Text_excerpt",
        "value": "If you use MTaxi, please cite https://open-research-europe.ec.europa.eu/articles/2-100.\n"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/goztag/MTaxi"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-08T14:09:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-06T17:15:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.958961734263014,
      "result": {
        "original_header": "MTaxi",
        "type": "Text_excerpt",
        "value": "A comparative tool for taxon identification of low coverage ancient genomes. \nMTaxi is a method to classify pairs of closely related species using ancient DNA data, by utilizing mitochondrial tranversion-type substitutions between the two species. \nIt is developed and tested using both Linux operating system (Ubuntu 18.04 LTS) and WSL2 (Windows Subsystem for Linux 2), should work in other Unix-like platforms. \nMTaxi is implemented with sheep and goat genomes in this repository, but can be used with arbitrary pairs if mtDNA references are available. \n\u2192 **Note:** The default algorithm of MTaxi is optimized for low mitochondrial coverages. For high coverage data (e.g. >10x), please use the argument _\"-shared\"_ on separate libraries. \n"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9379145050974137,
      "result": {
        "original_header": "File Structure",
        "type": "Text_excerpt",
        "value": "\u2192 Edit the paths to sp1_ref_file, sp2_ref_file, transv_poly_sp1, transv_poly_sp2 files.\n - sp1_ref_file: species 1 mitochondrial reference file (in FASTA format)\n - transv_poly_sp1: species 1 substition positions file (in BED format)\n     - transv_poly_sp1 and transv_poly_sp2 should have the same number of variant sites, each line corresponding to the same site in both files. \n\u2192 reference files for sheep and goat:\n- NC_001941.1_sheep.fasta \n- NC_005044.2_goat.fasta \n\u2192 transversion substition files for sheep and goat:\n- trvpos_sheep.bed \n- trvpos_goat.bed \n"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/goztag/MTaxi/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/goztag/MTaxi/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "goztag/MTaxi"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MTaxi"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**How to install the program via GitHub**",
        "parent_header": [
          "MTaxi"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ngit clone https://github.com/goztag/MTaxi.git\n```\n\n<br />\n"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999923651626962,
      "result": {
        "original_header": "MTaxi",
        "type": "Text_excerpt",
        "value": "It is developed and tested using both Linux operating system (Ubuntu 18.04 LTS) and WSL2 (Windows Subsystem for Linux 2), should work in other Unix-like platforms. \n"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8734433798709363,
      "result": {
        "original_header": "File Structure",
        "type": "Text_excerpt",
        "value": "\n**run_MTaxi.py :**\n- run_MTaxi implementer file, call this to run MTaxi. \n\n**settings.py :** \nFile locations are set here ! \n"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8498400940146545,
      "result": {
        "original_header": "**Output**",
        "type": "Text_excerpt",
        "value": "MTaxi will print the results as below and write them to the output file.\n```bash\n>>> RESULTS <<<\n   Total_reads  Sp1_reads  Sp2_reads       p_value\n0       NNNN       NNN       NNN             NN\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/goztag/MTaxi/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "MTaxi"
        ],
        "type": "Text_excerpt",
        "value": "This project is licensed under the terms of the Creative Commons - Attribution 4.0 International (CC BY 4.0) license.\n"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MTaxi"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "goztag"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 17679,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "goztag",
          "type": "User"
        },
        "date_created": "2022-05-20T08:56:43Z",
        "date_published": "2022-07-07T09:39:37Z",
        "html_url": "https://github.com/goztag/MTaxi/releases/tag/v1.0",
        "release_id": 71452569,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/goztag/MTaxi/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/goztag/MTaxi/releases/71452569",
        "value": "https://api.github.com/repos/goztag/MTaxi/releases/71452569",
        "zipball_url": "https://api.github.com/repos/goztag/MTaxi/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Requirements**",
        "parent_header": [
          "MTaxi"
        ],
        "type": "Text_excerpt",
        "value": "\n\u2192 **Working environment**\n\n- Python 3+ (tested with 3.6)\n\n\u2192 Bedtools ([https://bedtools.readthedocs.io/en/latest/](https://bedtools.readthedocs.io/en/latest/))\n\t- make sure it's on the path\n    \n\n\u2192 **Required libraries**\n\n - Available in\u00a0```requirements.txt```. Install with\u00a0```pip3 install -r requirements.txt```.\n\n\n<br />\n"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**How to run**",
        "parent_header": [
          "MTaxi"
        ],
        "type": "Text_excerpt",
        "value": "**Command line arguments:**\n\n\u2192 Necessary arguments:\n - \"-sp1\": To specify the sample aligned to species 1 with .bam extension\n - \"-sp2\": To specify the .bam file aligned to species 2\n - \"-out\": To specify the output file name (format is set as .txt file)\n\t\n\n\u2192 Optional arguments:\n\n\"-shared\" : To restrict the analysis to to those that aligned to both species\u2019 references. As default, all reads (the reads that could be mapped to both and the ones that could map only to one of the species\u2019 references) are included in the analysis.\n\n\"-d\" : To use debug mode\n\n**The order of arguments does not matter.**\n\n\u2192 Example run on bash:\n\n```bash\npython3 run_MTaxi.py -sp1 sample_sheep.bam -sp2 sample_goat.bam -out outf\n\n```\n\n```bash\npython3 run_MTaxi.py -sp1 sample_sheep.bam -sp2 sample_goat.bam -shared -out outf\n\n```\n\n- sample_sheep.bam : Sample aligned to sheep mitochondrial reference\n- sample_goat.bam : Sample aligned to goat mitochondrial reference\n- outf: Name of the output file, which will be created as \"outf.txt\"\n"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run with debug mode",
        "parent_header": [
          "MTaxi"
        ],
        "type": "Text_excerpt",
        "value": "Use debug mode to see outputs of each step on the console.\n\nIn addition to this, debug mode enables you to have each intermediate file be created on data_out folder. Otherwise, only the required files are generated.\n\nDebug mode is off by default. To activate debug mode run the following command :\n\n```bash\npython3 run_MTaxi.py -sp1 sample_sheep.bam -sp2 sample_goat.bam -out outf -d\n\n```"
      },
      "source": "https://raw.githubusercontent.com/goztag/MTaxi/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:52:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}