{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WGLab/TermViewer"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-24T17:51:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-18T03:29:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Repository for NLP project filtering medical notes "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9577736905434108,
      "result": {
        "original_header": "TermViewer",
        "type": "Text_excerpt",
        "value": "Repository for NLP project filtering medical notes \nThis project consists of two main componentns:  \nscripts: contains the programs that will generate tagged notes. tagged notes are formatted as JSON files and include the note as well as information about the HPO terms found in those notes using MetaMap and cTakes\nFlask App: a web application that allows you to load tagged JSON files from a server to visualize the various terms being extracted from each note and classify them as good/bad. All confidential information remains on the server but can be accessed by clients elsewhere in order to annotate large sets of note data   \n \n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/TermViewer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WGLab/TermViewer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WGLab/TermViewer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "WGLab/TermViewer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TermViewer"
      },
      "source": "https://raw.githubusercontent.com/WGLab/TermViewer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WGLab/TermViewer/main/scripts/generate_tagged_notes.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WGLab/TermViewer/main/scripts/generate_tagged_folders.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WGLab/nlp_notes/main/docs/images/filepaths.PNG"
      },
      "source": "https://raw.githubusercontent.com/WGLab/TermViewer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/13920834/155355724-bdff8f3a-7e40-489f-9699-b3be1bd8b788.png"
      },
      "source": "https://raw.githubusercontent.com/WGLab/TermViewer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/13920834/155356136-3a4f1de0-28b7-40bd-9c91-92cedeef958f.png"
      },
      "source": "https://raw.githubusercontent.com/WGLab/TermViewer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/13920834/155356857-08ea90d4-d477-4e95-92eb-021ba21e5600.png"
      },
      "source": "https://raw.githubusercontent.com/WGLab/TermViewer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WGLab/TermViewer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TermViewer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "WGLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 24574,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 16349,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4204,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 3735,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 1518,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WGLab/TermViewer/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kaichop",
          "type": "User"
        },
        "date_created": "2022-08-19T12:21:22Z",
        "date_published": "2022-08-19T14:26:43Z",
        "description": "Initial release of TermViewer web application.",
        "html_url": "https://github.com/WGLab/TermViewer/releases/tag/v0.1.0",
        "name": "v0.1.0",
        "release_id": 74840643,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/WGLab/TermViewer/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/WGLab/TermViewer/releases/74840643",
        "value": "https://api.github.com/repos/WGLab/TermViewer/releases/74840643",
        "zipball_url": "https://api.github.com/repos/WGLab/TermViewer/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running Scripts",
        "parent_header": [
          "TermViewer"
        ],
        "type": "Text_excerpt",
        "value": "To use this program you will need to have installed MetaMap and cTakes to the machine where your notes are stored.\n\nTo begin clone this repository and open to scripts/generate_tagged_notes.sh \n\nModify the file paths to the appropriate locations on your machine\n\nNOTE: All file paths must be pointing to existing directories so make sure to create empty output folders if they do not already exist \n\n![Specify Filepaths](https://github.com/WGLab/nlp_notes/blob/main/docs/images/filepaths.PNG)\n\nFrom the scripts folder run\n```\n./generate_tagged_notes.sh \n```\n\nThis script will preprocess all input notes in the specified folder, run MetaMap and cTakes, and then create a final JSON file containing information from both outputs\n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/TermViewer/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running Web App",
        "parent_header": [
          "TermViewer"
        ],
        "type": "Text_excerpt",
        "value": "After the script has finished executing the results can be visualized by running the web application \n\nTo begin navigate to the TermViewer directory on your server. Make sure you have miniconda or anaconda installed (if not, you can go to [here](https://docs.conda.io/en/latest/miniconda.html) to download the appropriate version and install). Then create a new environment using the .yml file from the repository and the following command: \n\n```\nconda env create --name [envname] -f viewerenv.yml\n```\n\nAfterwards activate the environment. Before running the webapp make sure to execute the following step.   \n\n```\nconda activate [envname]\n```\n\nNow with your preferred editing tool navigate to init_db.py and modify/add SQL statements to add the paths of the generated JSON files from the previous step into the notes database. \n\nAfter the database initialization has been edited to include the files that you have created then run \n\n```\npython init_db.py\n```\n\nNow your SQLite database has been initialized and can store scores for each document. This step only has to be run once. \n\nNOTE: After the db has been created do not run this again or all saved values will be deleted when the tables are created from scratch again.\n\nOnce the database is ready you can start the webapp \n\n```\nflask run\n```\n\nThe console will print out the address the application is running on (usually localhost:5000). You can either view it directly or set up port tunneling to view from another device. A demo server is set up at http://termviewer.wglab.org/.\n\nYou should see the following screen asking for an evaluator name and with a dropdown containing the list of patient notesets that you have stored in the notes table of the database. Scores are stored based on evaluator and note so enter a name to access the annotations specific to you and then select a noteset to navigate. \n\n![Main Page](https://user-images.githubusercontent.com/13920834/155355724-bdff8f3a-7e40-489f-9699-b3be1bd8b788.png)\n\nSelect which labels you would like to view and click 'Confirm Selection'\n\n![Select Labels](https://user-images.githubusercontent.com/13920834/155356136-3a4f1de0-28b7-40bd-9c91-92cedeef958f.png)\n\nAny HPO terms that were detected by MetaMap, cTakes, or both will now be overlaid onto the original note for easy analysis. You can navigate through individual notes in a patient's noteset using the next/previous buttons. The button next to 'Is this a good note?' Displays whether or not the note has been annotated as good or bad or if it has not received a score yet. Clicking on the button automatically updates the annotation value on the database.\n\n![Annotations](https://user-images.githubusercontent.com/13920834/155356857-08ea90d4-d477-4e95-92eb-021ba21e5600.png)\n\n"
      },
      "source": "https://raw.githubusercontent.com/WGLab/TermViewer/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:42:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}