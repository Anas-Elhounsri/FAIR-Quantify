{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/LIU-CT/MSNet-4mC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-20T06:26:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-02T05:18:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MSNet-4mC: Learning effective multi-scale representations for identifying DNA N4-methylcytosine sites"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8711317859546812,
      "result": {
        "original_header": "MSNet-4mC",
        "type": "Text_excerpt",
        "value": "Author: Liu Chunting\nAffiliation: Department of Intelligence Science and Technology, Graduate School of Informatics, Kyoto University\nE-mail: liuchunting@kuicr.kyoto-u.ac.jp\n \n"
      },
      "source": "https://raw.githubusercontent.com/LIU-CT/MSNet-4mC/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/LIU-CT/MSNet-4mC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/LIU-CT/MSNet-4mC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LIU-CT/MSNet-4mC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MSNet-4mC"
      },
      "source": "https://raw.githubusercontent.com/LIU-CT/MSNet-4mC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation Guide",
        "parent_header": [
          "MSNet-4mC"
        ],
        "type": "Text_excerpt",
        "value": "* Download from GitHub at https://github.com/LIU-CT/MSNet-4mC  \n* cd MSNet-4mC  \n* pip install -r requirements.txt  \n"
      },
      "source": "https://raw.githubusercontent.com/LIU-CT/MSNet-4mC/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/LIU-CT/MSNet-4mC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MSNet-4mC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "LIU-CT"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 107540,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LIU-CT/MSNet-4mC/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency",
        "parent_header": [
          "MSNet-4mC"
        ],
        "type": "Text_excerpt",
        "value": "* Python 3.8.8 and Pytorch 1.11.0 or later versions  \n"
      },
      "source": "https://raw.githubusercontent.com/LIU-CT/MSNet-4mC/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:14:54",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "For evaluation:",
        "parent_header": [
          "MSNet-4mC",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* Run the default dataset  \n```\npython MSNet_4mC.py --Dataset Lin_2017_Dataset --Species <Species>\n``` \n```\npython MSNet_4mC.py --Dataset Li_2020_Dataset --Species <Species> \n```\n* Make the prediction for customized data  \n```\npython MSNet_4mC.py --Dataset User_Dataset --Species <Species> --Fasta_file <Fasta_file>  \n```\n* For evaluation on the default dataset, users can also directly run *test.py* with corrected paths to the datasets and models.   "
      },
      "source": "https://raw.githubusercontent.com/LIU-CT/MSNet-4mC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "For training",
        "parent_header": [
          "MSNet-4mC",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* The training codes are given in the Dataset directories. \n* Train the default dataset  \n  * Run *training_basemodel.py* to train the base model.  \n  * Run *training_scratch_and_finetuning.py* to train the species-specific models from scratch or fine-tuning the hyperparameters to retrain the species-specific models based the base model with the different settings of load_pretrain and load_path.\n* Train the customized data  \n  * Firstly, use *class_weight.py* to calculate class weights for different species.  \n  * Secondly, use *training_basemodel.py* to train a base model on the merged training dataset.  \n  * Finally, use *training_scratch_and_finetuning.py* to retrain the species-specific model on each species training dataset.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/LIU-CT/MSNet-4mC/main/README.md",
      "technique": "header_analysis"
    }
  ]
}