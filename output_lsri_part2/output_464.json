{
  "application_domain": [
    {
      "confidence": 22.05,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Duet: SNP-Assisted Structural Variant Calling and Phasing Using Oxford Nanopore Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "Zhou, Y., Leung, A.WS., Ahmed, S.S. et al. Duet: SNP-assisted structural variant calling and phasing using Oxford nanopore sequencing. BMC Bioinformatics 23, 465 (2022). https://doi.org/10.1186/s12859-022-05025-x\n\n---"
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yekaizhou/duet"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "Duet: SNP-Assisted Structural Variant Calling and Phasing Using Oxford Nanopore Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "For any problems or suggestions, please post on [Github Issue](https://github.com/yekaizhou/duet/issues) or send to yekai.zhou@outlook.com.\n"
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-20T09:35:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-12T19:08:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SNP-Assisted SV Calling and Phasing Using ONT"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Duet: SNP-Assisted Structural Variant Calling and Phasing Using Oxford Nanopore Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "Whole genome sequencing (WGS) using the long-read Oxford Nanopore Technologies (ONT) MinION sequencer provides a cost-effective option for structural variant (SV) detection in clinical applications. Despite the advantage of using long reads, however, accurate SV calling and phasing are still challenging. We introduce Duet, an SV detection tool optimized for SV calling and phasing using ONT data. The tool uses novel features integrated from both SV signatures and single-nucleotide polymorphism (SNP) signatures, which can accurately distinguish SV haplotype from a false signal. Duet can perform accurate SV calling, SV genotyping and SV phasing using low-coverage ONT data. It has great scaling performance when sequencing coverage is higher and is adaptable to various clinical applications.\n\n---"
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.94786477354438,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "(A) First, ONT long reads are aligned using Minimap2. (B-C) To obtain the per-read phasing information (green or brown) with its confidence level (luminance of the color), SNPs (indicated in circles) are called using Clair3 and then phased using WhatsHap. Based on the phased SNPs, the haplotypes of the reads are determined by WhatsHap. (D) The SV marks on each read are detected by cuteSV. (E) Three signatures from previous steps are integrated as the signature of the support reads. (F) Duet phases SV and filters out false signals based on the features derived from the signatures in step (E). T1 to T5 are thresholds for each feature. \n"
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8282129656577611,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "   \n| Chromosome | Position | ID | Alteration | Length | Haplotype | Phase Set |\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|1|724801|Duet.1|INS|1963|**1\\|1**|639244|\n|1|818028|Duet.2|DEL|-84|**0\\|1**|639244|\n|1|965596|Duet.3|DEL|-353|**1\\|0**|639244|\n|...|...|...|...|...|**...**|...|\n|16|88087453|Duet.6700|INS|142|**0\\|1**|85189772|\n|16|88196792|Duet.6701|DEL|-131|**1\\|1**|85189772|\n|...|...|...|...|...|**...**|...|\n    \nThese SV phasing results will be arranged into `phased_sv.vcf`. Results from intermediate steps (SNP calling, SNP phasing, SV calling) will also be written to corresponding folders in the same working directory, for the reference and utilization of the users. \n"
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yekaizhou/duet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yekaizhou/duet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yekaizhou/duet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yekaizhou/duet/main/docs/overview.jpg"
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Duet: SNP-Assisted Structural Variant Calling and Phasing Using Oxford Nanopore Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "```shell\n# install via conda\nconda config --add channels bioconda && conda config --add channels conda-forge\nconda create -n duet -c bioconda duet -y && conda activate duet\n\n# or you can install from github\nconda config --add channels bioconda && conda config --add channels conda-forge\nconda create -n duet -c bioconda clair3=0.1.12 sniffles=2.0.7 cutesv=2.0.2 svim=1.4.2 bcftools=1.8 -y && conda activate duet\ngit clone https://github.com/yekaizhou/duet.git\ncd duet && pip install .\n\nduet -h\n```\n\n---"
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9985844600948443,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "   \n| Chromosome | Position | ID | Alteration | Length | Haplotype | Phase Set |\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|1|724801|Duet.1|INS|1963|**1\\|1**|639244|\n|1|818028|Duet.2|DEL|-84|**0\\|1**|639244|\n|1|965596|Duet.3|DEL|-353|**1\\|0**|639244|\n|...|...|...|...|...|**...**|...|\n|16|88087453|Duet.6700|INS|142|**0\\|1**|85189772|\n|16|88196792|Duet.6701|DEL|-131|**1\\|1**|85189772|\n|...|...|...|...|...|**...**|...|\n    \nThese SV phasing results will be arranged into `phased_sv.vcf`. Results from intermediate steps (SNP calling, SNP phasing, SV calling) will also be written to corresponding folders in the same working directory, for the reference and utilization of the users. \n"
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yekaizhou/duet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, oxford-nanopore, structural-variation"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright 2021 The University of Hong Kong, Department of Computer Science\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\n   may be used to endorse or promote products derived from this software without\n   specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "duet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yekaizhou"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 35983,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yekaizhou",
          "type": "User"
        },
        "date_created": "2022-11-30T07:01:23Z",
        "date_published": "2023-07-09T10:13:59Z",
        "description": "update clair3 to 1.0.3",
        "html_url": "https://github.com/yekaizhou/duet/releases/tag/v1.0",
        "name": "Duet_v1.0",
        "release_id": 111525874,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/yekaizhou/duet/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/yekaizhou/duet/releases/111525874",
        "value": "https://api.github.com/repos/yekaizhou/duet/releases/111525874",
        "zipball_url": "https://api.github.com/repos/yekaizhou/duet/zipball/v1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yekaizhou",
          "type": "User"
        },
        "date_created": "2022-11-22T13:30:03Z",
        "date_published": "2022-11-22T13:37:10Z",
        "description": "support sniffles for base sv calling",
        "html_url": "https://github.com/yekaizhou/duet/releases/tag/v0.6",
        "name": "Duet_v0.6",
        "release_id": 83871929,
        "tag": "v0.6",
        "tarball_url": "https://api.github.com/repos/yekaizhou/duet/tarball/v0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/yekaizhou/duet/releases/83871929",
        "value": "https://api.github.com/repos/yekaizhou/duet/releases/83871929",
        "zipball_url": "https://api.github.com/repos/yekaizhou/duet/zipball/v0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yekaizhou",
          "type": "User"
        },
        "date_created": "2022-08-13T08:34:31Z",
        "date_published": "2022-08-13T08:36:48Z",
        "description": "support cuteSV as the base SV caller",
        "html_url": "https://github.com/yekaizhou/duet/releases/tag/v0.5",
        "name": "Duet_v0.5",
        "release_id": 74348385,
        "tag": "v0.5",
        "tarball_url": "https://api.github.com/repos/yekaizhou/duet/tarball/v0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/yekaizhou/duet/releases/74348385",
        "value": "https://api.github.com/repos/yekaizhou/duet/releases/74348385",
        "zipball_url": "https://api.github.com/repos/yekaizhou/duet/zipball/v0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yekaizhou",
          "type": "User"
        },
        "date_created": "2022-07-14T12:42:11Z",
        "date_published": "2022-07-14T12:59:40Z",
        "description": "support working on all contigs",
        "html_url": "https://github.com/yekaizhou/duet/releases/tag/v0.4",
        "name": "Duet_v0.4",
        "release_id": 71997071,
        "tag": "v0.4",
        "tarball_url": "https://api.github.com/repos/yekaizhou/duet/tarball/v0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/yekaizhou/duet/releases/71997071",
        "value": "https://api.github.com/repos/yekaizhou/duet/releases/71997071",
        "zipball_url": "https://api.github.com/repos/yekaizhou/duet/zipball/v0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yekaizhou",
          "type": "User"
        },
        "date_created": "2021-08-11T08:04:31Z",
        "date_published": "2021-08-11T08:20:05Z",
        "description": "support working on incomplete genomes",
        "html_url": "https://github.com/yekaizhou/duet/releases/tag/v0.3",
        "name": "Duet_v0.3",
        "release_id": 47653244,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/yekaizhou/duet/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/yekaizhou/duet/releases/47653244",
        "value": "https://api.github.com/repos/yekaizhou/duet/releases/47653244",
        "zipball_url": "https://api.github.com/repos/yekaizhou/duet/zipball/v0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yekaizhou",
          "type": "User"
        },
        "date_created": "2021-07-27T10:32:01Z",
        "date_published": "2021-07-27T10:32:28Z",
        "description": "add utils e.g. setup.py",
        "html_url": "https://github.com/yekaizhou/duet/releases/tag/v0.2",
        "name": "Duet-v0.2",
        "release_id": 46825063,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/yekaizhou/duet/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/yekaizhou/duet/releases/46825063",
        "value": "https://api.github.com/repos/yekaizhou/duet/releases/46825063",
        "zipball_url": "https://api.github.com/repos/yekaizhou/duet/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yekaizhou",
          "type": "User"
        },
        "date_created": "2021-07-26T12:08:43Z",
        "date_published": "2021-07-26T14:03:14Z",
        "description": "Initial release of Duet",
        "html_url": "https://github.com/yekaizhou/duet/releases/tag/v0.1",
        "name": "Duet-v0.1",
        "release_id": 46771494,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/yekaizhou/duet/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/yekaizhou/duet/releases/46771494",
        "value": "https://api.github.com/repos/yekaizhou/duet/releases/46771494",
        "zipball_url": "https://api.github.com/repos/yekaizhou/duet/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Duet: SNP-Assisted Structural Variant Calling and Phasing Using Oxford Nanopore Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "- [Clair3](https://github.com/HKU-BAL/Clair3) = 0.1.12\n- [SVIM](https://github.com/eldariont/svim) = 1.4.2\n- [cuteSV](https://github.com/tjiangHIT/cuteSV) = 2.0.2\n- [Sniffles](https://github.com/fritzsedlazeck/Sniffles) = 2.0.7\n- [bcftools](https://anaconda.org/bioconda/bcftools) = 1.8\n\n---"
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:47:48",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Duet: SNP-Assisted Structural Variant Calling and Phasing Using Oxford Nanopore Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "    duet <ALN.bam>     # along with indexed .bai file in the same directory \\\n         <REF.fa>      # along with indexed .fai file in the same directory \\\n         <OUTPUT_DIR>  # working and output directory\n         [Optional Parameters]\n\n| Optional Parameter | Description | Default |\n| :------------ |:---------------|-------------:|\n|--threads, -t|number of threads to use|4|\n|--include_all_ctgs, -a|call variants on all contigs, otherwise chr{1..22,X,Y}|false|\n|--sv_min_size, -s|minimum SV size to be reported|50|\n|--min_allele_frequency, -m|minimum allele frequency required to call a candidate SNP|0.25|\n|--min_support_read, -r|minimum number of reads that support a SV to be reported|2|\n|--sv_caller, -b|choose the base SV caller from either cuteSV (\"cutesv\"), Sniffles (sniffles), or SVIM (\"svim\")|cutesv|\n|--cluster_max_distance, -c|maximum span-position distance between SV marks in a cluster to call a SV candidates when using SVIM as the base SV caller|0.9|\n\n---"
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick demo",
        "parent_header": [
          "Duet: SNP-Assisted Structural Variant Calling and Phasing Using Oxford Nanopore Sequencing"
        ],
        "type": "Text_excerpt",
        "value": "After [Installation](#installation), Duet can be used for phased SV detection. Here we demonstrate the utility of Duet using a lite example: **chromosome 21** in the **HG00733** human sample, aligning to the **hg19** reference genome.\n\n```bash\nmkdir duet_demo && cd duet_demo\nwget 'http://www.bio8.cs.hku.hk/duet_demo_data.tar.gz'\ntar -zxvf duet_demo_data.tar.gz && rm duet_demo_data.tar.gz\nduet duet_demo_data/HG00733_hg19_chr21.bam duet_demo_data/hg19_chr21.fa results\n\nless results/phased_sv.vcf\n```\n\n---"
      },
      "source": "https://raw.githubusercontent.com/yekaizhou/duet/main/README.md",
      "technique": "header_analysis"
    }
  ]
}