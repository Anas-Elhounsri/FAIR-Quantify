{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "CCIVR"
        ],
        "type": "Text_excerpt",
        "value": "Ohhata T *et al.*, ***Sci Rep.***, 12:15525, 2022.\n\nUpdated May 4th, 2024\n"
      },
      "source": "https://raw.githubusercontent.com/CCIVR/ccivr/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CCIVR/ccivr"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-14T14:37:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-04T01:35:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9958025447378431,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "**CCIVR** (**C**omprehensive **C**is-NATs **I**dentifier **V**ia **R**NA-seq data) is a Python package tool that facilitates the identification of total cis-NATs (cis-natural antisense transcripts) from gene datasets. CCIVR requires a CSV-formatted input file that contains gene datasets with their locational information including chromosome number where the genes are located, their strand direction, transcription start site (TSS), and transcription termination site (TTS), with or without expression profiling data from RNA-seq, including TPM, FPKM, fold-change, and padj (q-value). CCIVR generates two CSV-formatted output files: a table file containing a list of total extracted cis-NATs accompanied by their structural characteristics, including embedded (EB), fully-overlapped (FO), head-to-head (HH), and tail-to-tail (TT) types; a summary file containing the absolute number and percentage of each type of extracted cis-NAT. For more details, please see Ohhata T *et al.*, ***Sci Rep.***, 12:15525, 2022.\n \n"
      },
      "source": "https://raw.githubusercontent.com/CCIVR/ccivr/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CCIVR/ccivr/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CCIVR/ccivr/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CCIVR/ccivr"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CCIVR"
      },
      "source": "https://raw.githubusercontent.com/CCIVR/ccivr/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "CCIVR"
        ],
        "type": "Text_excerpt",
        "value": "You can install CCIVR via a package manager `pip` by typing the following command:           \n\n```\npip install git+https://github.com/CCIVR/ccivr.git\n```\n\nIt should be noted, however, that this doesn't work when you don't have git on your computer. In that case, please download the ZIP file offered by this site and type the following command:\n\n```\npip install [full path of unzipped package]\n```\n\nIf the package manager `pip` does not work, please try `pip3` instead.\n\nTo check whether CCIVR is correctly installed, please type the following command:\n\n```\nccivr --help\n```\nIf this does not work, please check the setting of the `$PATH` environment. \n\n\nThe location of CCIVR installation can be found by typing the following command:\n\n```\npip show ccivr\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/CCIVR/ccivr/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input file preparation",
        "parent_header": [
          "CCIVR"
        ],
        "type": "Text_excerpt",
        "value": "For CCIVR analysis, a CSV-formatted file is required as an input file. The input file must contain five different gene annotations listed in their independent columns, as follows: \n\n- **id**: gene id of each gene. Example: ENSMUSG00000085715   \n- **Chr**: chromosome number where the gene is located. Example: X\n- **Strand**: strand direction of the gene. Example: +\n- **Start**: the minimum number of the gene location. Example: 103431517\n- **End**: the maximum number of the gene location. Example: 103484957\n\n(The example above is for the murine *Tsix* gene, from Ensembl GRCm39)  \n\nThe order of these five columns is changeable because CCIVR recognizes their characters (*i.e.*, **id**, **Chr**, **Strand**, **Start**, **End**) but not their order.\n\nThese gene annotations can be obtained from the Ensembl database. \n\nAttaching other gene annotations is available during the CCIVR process by adding extra columns such as \u201c**GeneSymbol**\u201d, \u201c**gene_source**\u201d, \u201c**gene_biotype**\u201d, \u201c**GO_analysis**\u201d, and so on to the input file.\n\nAttaching information for expression profiling obtained from RNA-seq analysis is also available during the CCIVR process by adding extra columns such as **\u201cTPM\u201d**, **\u201cFPKM\u201d**, **\u201cfold_change\u201d**, **\u201cpadj\u201d**, and so on to the input file. \n\nPlease see [the test file](data/Test_file.csv) for an example of the input file. \n(The test file contains human gene datasets accompanied by expression profiling of human hepatoma Huh-7 cells with TGF\u00df\nstimulation, which is consistent with the input file used for the CCIVR analysis in figure 4 of our paper, Ohhata T *et al.*, ***Sci Rep.***, 12:15525, 2022.)\n\n"
      },
      "source": "https://raw.githubusercontent.com/CCIVR/ccivr/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999972696631018,
      "result": {
        "original_header": "Uninstallation",
        "type": "Text_excerpt",
        "value": "When you no longer use the package, you can uninstall it by typing the following command:\n```\npip uninstall ccivr\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/CCIVR/ccivr/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CCIVR/ccivr/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 CCIVR\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/CCIVR/ccivr/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "CCIVR"
        ],
        "type": "Text_excerpt",
        "value": "CCIVR is licensed under the [MIT license](LICENSE).\n"
      },
      "source": "https://raw.githubusercontent.com/CCIVR/ccivr/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CCIVR/ccivr/main/CCIVR_logo.png"
      },
      "source": "https://raw.githubusercontent.com/CCIVR/ccivr/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ccivr"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "CCIVR"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 9881,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CCIVR/ccivr/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CCIVR",
          "type": "User"
        },
        "date_created": "2023-09-14T08:52:42Z",
        "date_published": "2023-09-14T09:28:37Z",
        "description": "## v0.2.0\r\n\r\nSeptember 14th, 2023\r\n\r\n- The definition of each cis-NATs type has been changed to be consistent with that in the newly released CCIVR2. See the figure below.\r\n![new_definition](https://github.com/CCIVR/ccivr/assets/99396379/d15a10b9-0d82-4c08-9264-34872d80794f)\r\n",
        "html_url": "https://github.com/CCIVR/ccivr/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 121092490,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/CCIVR/ccivr/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/CCIVR/ccivr/releases/121092490",
        "value": "https://api.github.com/repos/CCIVR/ccivr/releases/121092490",
        "zipball_url": "https://api.github.com/repos/CCIVR/ccivr/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CCIVR",
          "type": "User"
        },
        "date_created": "2022-12-12T11:14:46Z",
        "date_published": "2023-05-10T09:49:36Z",
        "description": "First release",
        "html_url": "https://github.com/CCIVR/ccivr/releases/tag/v0.1.5",
        "name": "v0.1.5",
        "release_id": 102463950,
        "tag": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/CCIVR/ccivr/tarball/v0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/CCIVR/ccivr/releases/102463950",
        "value": "https://api.github.com/repos/CCIVR/ccivr/releases/102463950",
        "zipball_url": "https://api.github.com/repos/CCIVR/ccivr/zipball/v0.1.5"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirement",
        "parent_header": [
          "CCIVR"
        ],
        "type": "Text_excerpt",
        "value": "* Python 3.8+\n"
      },
      "source": "https://raw.githubusercontent.com/CCIVR/ccivr/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:06:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "CCIVR"
        ],
        "type": "Text_excerpt",
        "value": "For running \"CCIVR\", please specify the absolute or relative path of the input file```[path of input CSV]``` and type the following command:\n\n```\nccivr [path of input CSV] \n```\n\nBy default, output files will be saved in the same directory as the input file. For saving the output files to a different directory, please add the optional argument and specify the absolute or relative path of the directory```[path of saving directory]``` and type the following command:\n\n```\nccivr [path of input CSV] --output [path of saving directory]\n```\n\nIf it runs successfully, processing status will be displayed as follows (this is an example from running with [the test file](data/Test_file.csv):\n\n```\nReading [path of input CSV]\nEB\nPlus-to-minus extracting\nMinus-to-plus extracting\nFO\nPlus-to-minus extracting\nMinus-to-plus extracting\nHH\nPlus-to-minus extracting\nMinus-to-plus extracting\nTT\nPlus-to-minus extracting\nMinus-to-plus extracting\n< Result >\ntotal genes : 65065\ngenes with cisNats : 27351 [42.04%]\n     EB : 8112 [12.47%]\n     FO : 12194 [18.74%]\n     HH : 5992 [9.21%]\n     TT : 6097 [9.37%]\nWriting the table to [path of output CSV, ending with \"Table.csv\"]\nWriting the summary to [path of output CSV, ending with \"Summary.csv\"]\n```\n\nTwo CSV formatted output files **\"Table.csv\"** and **\"Summary.csv\"** will be generated and saved in a new directory named **\"ccivr_output\"**.  \n\n**Table.csv** contains a list of all extracted cis-NATs accompanied by their structural characteristics.  \n**Summary.csv** contains the absolute number of each type of extracted cis-NATs with its percentages of the total genes. \n\nAn example of \"Table.csv\" obtained from [the test file](data/Test_file.csv), can be found [here](data/Table.csv).\n\nAn example of \"Summary.csv\" obtained from [the test file](data/Test_file.csv), can be found [here](data/Summary.csv).\n\n\n\nTo complete the whole CCIVR process with the test file may take from a few to dozens of minutes using a standard-powered computer (for example, it takes 6 minutes 34 seconds using an iMac 2017 equipped with a 3.4 GHz Intel Core i5).\n"
      },
      "source": "https://raw.githubusercontent.com/CCIVR/ccivr/main/README.md",
      "technique": "header_analysis"
    }
  ]
}