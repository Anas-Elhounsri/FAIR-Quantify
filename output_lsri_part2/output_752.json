{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AnthonyOfSeattle/pyAscoreValidation"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-10-27T19:33:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-02T22:51:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Validation experiments for the pyAscore python package."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description of notebooks:",
        "parent_header": [
          "Validation experiments for pyAscore"
        ],
        "type": "Text_excerpt",
        "value": "Original results and figures which were included in the manuscript are available in the following\nnotebook files. These can be directly viewed in Github or downloaded and re-run with the re-created\nanalysis on your own machine.\n\n- [**Comparison of pyAscore with original:**](https://github.com/AnthonyOfSeattle/pyAscoreValidation/blob/main/notebook/comparison_of_ascore_implementations.ipynb)\n  Here we look at how well the scores and localized sequences from the new pyAscore match up to the original.\n  **Gotcha:** Data for this analysis is currently downloaded seperately in the `/Mouse` folder.\n- [**Evaluation of pyAscore's speed:**](https://github.com/AnthonyOfSeattle/pyAscoreValidation/blob/main/notebook/evaluating_scoring_times.ipynb)\n  Here we analyze the data from PXD007740 from scratch with pyAscore and time the scoring times for\n  individual scans. This notebook is also a great place to see the command line interface of pyAscore\n  in action.\n- [**Evaluation of pyAscore's versitility:**](https://github.com/AnthonyOfSeattle/pyAscoreValidation/blob/main/notebook/evaluating_application_versitility.ipynb)\n  Here we analyze results of running pyAscore on a label free phosphoproteome (PXD007740), a\n  TMT-labeled phosphoproteome (PXD007145), and a label free acetylome (MSV000079068). This is\n  meant to show pyAscore's ability to analyze data from many different types of experiments.\n- [**Evaluation of pyAscore's accuracy:**](https://github.com/AnthonyOfSeattle/pyAscoreValidation/blob/main/notebook/evaluation_of_false_localization_on_marx_synthetic_peptides.ipynb)\n  Here we analyze pyAscore's performance on phosphopeptides where we know the correct localization.\n  The underlying peptides all come from [Marx *et al.* (2013)](https://pubmed.ncbi.nlm.nih.gov/23685481/),\n  and we analyzed with 3 different fragementation modes. The HCD and ETD data come from the PRIDE\n  accession, PXD000138, and the CID data comes from the PRIDE accession, PXD000759.\n- [**Comparison of pyAscore to PTMProphet:**](https://github.com/AnthonyOfSeattle/pyAscoreValidation/blob/main/notebook/comparison_of_pyascore_with_ptmprophet.ipynb)\n  Here we look at how well pyAscore performs compared to PTMProphet using data from the latter's papers.\n  **Gotcha:** Data for this analysis is currently downloaded seperately in the `/TPP` folder.\n\n  \n"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.874292542200571,
      "result": {
        "original_header": "Validation experiments for pyAscore",
        "type": "Text_excerpt",
        "value": "Here you can find the pipeline and notebooks of results from our validation experiments for the\n[pyAscore](https://pyascore.readthedocs.io/) python package. All experiments were performed with\nSnakemake, and the pipeline should reproduce all search and scoring results from our manuscript.\nIf you are intersted in re-creating the analysis, please see the Snakemake documentation at this\n[link](https://snakemake.readthedocs.io/en/stable/) for information on installation and running.\nRegardless of how you decide to set up Snakemake, please be sure to add the `--use-conda` flag\nto be sure that Snakemake uses the provided conda environments for individual rules. The results\nof the pipeline will be output into a `results` directory which will appear at runtime. \nIf you simply would like to know which PRIDE or MassIVE datasets were analyzed, and the specific\nfiles which were downloaded from each, please see the contained file `samples.json`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AnthonyOfSeattle/pyAscoreValidation/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/comparison_of_ascore_implementations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/comparison_of_ascore_implementations.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/evaluating_scoring_times.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/evaluating_scoring_times.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/evaluation_of_false_localization_on_marx_synthetic_peptides.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/evaluation_of_false_localization_on_marx_synthetic_peptides.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/comparison_of_pyascore_with_ptmprophet.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/comparison_of_pyascore_with_ptmprophet.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/evaluating_application_versitility.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/evaluating_application_versitility.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/pyascore_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/notebook/pyascore_tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AnthonyOfSeattle/pyAscoreValidation/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AnthonyOfSeattle/pyAscoreValidation"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/Mouse/get_files.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/TPP/get_files.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.8889897436134842,
      "result": {
        "original_header": "Validation experiments for pyAscore",
        "type": "Text_excerpt",
        "value": "Here you can find the pipeline and notebooks of results from our validation experiments for the\n[pyAscore](https://pyascore.readthedocs.io/) python package. All experiments were performed with\nSnakemake, and the pipeline should reproduce all search and scoring results from our manuscript.\nIf you are intersted in re-creating the analysis, please see the Snakemake documentation at this\n[link](https://snakemake.readthedocs.io/en/stable/) for information on installation and running.\nRegardless of how you decide to set up Snakemake, please be sure to add the `--use-conda` flag\nto be sure that Snakemake uses the provided conda environments for individual rules. The results\nof the pipeline will be output into a `results` directory which will appear at runtime. \n"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AnthonyOfSeattle/pyAscoreValidation/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Anthony Barente\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pyAscoreValidation"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "AnthonyOfSeattle"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 726780,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 12526,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1569,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pyascore.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://snakemake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:53:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AnthonyOfSeattle/pyAscoreValidation/main/Snakefile"
      },
      "technique": "file_exploration"
    }
  ]
}