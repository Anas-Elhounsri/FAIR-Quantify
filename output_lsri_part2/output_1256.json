{
  "application_domain": [
    {
      "confidence": 19.87,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/obenno/ShinySyn"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-12T06:54:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-14T11:52:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A shiny application to visualize MCscan result"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9182532967031636,
      "result": {
        "original_header": "ShinySyn",
        "type": "Text_excerpt",
        "value": "`ShinySyn` is a shiny application to help user investigate synteny blocks identified by `mcscan`,\nwhich is a part of `jcvi` (https://github.com/tanghaibao/jcvi) library \ndeveloped by [@tanghaibao](https://github.com/tanghaibao),\nand provide a intuitive connection between macrosynteny and microsynteny (genes). \nZhixia Xiao, Hon-Ming Lam, ShinySyn: a Shiny/R application for the interactive visualization and integration of macro- and micro-synteny data, Bioinformatics, 2022;, btac503, https://doi.org/10.1093/bioinformatics/btac503 \nIf you use the `mcscan` pipeline in `ShinySyn`, please also remember to cite its orignal paper: \nTang, H., Bowers, J. E., Wang, X., Ming, R., Alam, M., & Paterson, A. H. (2008). Synteny and collinearity in plant genomes. Science, 320(5875), 486-488. \nand the paper of `last`: \n"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9048359852412157,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- Interactive visualization for both macro- and microsynteny \n- Intuitive connection between macrosynteny and microsynteny \n- Integration of [`mcscan`](https://github.com/tanghaibao/jcvi/wiki/MCscan-%28Python-version%29) pipeline\n \n"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/tanghaibao/jcvi/wiki/MCscan-%28Python-version%29"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/obenno/ShinySyn/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/obenno/ShinySyn/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "obenno/ShinySyn"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ShinySyn"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/obenno/ShinySyn/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/obenno/ShinySyn/main/entrypoint.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/obenno/ShinySyn/main//www/images/main_view.gif"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/obenno/ShinySyn/main//www/images/dot_plot.gif"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install packages from conda",
        "parent_header": [
          "ShinySyn",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "- create conda env\n\nSince conda is bit slow, use [mamba](https://mamba.readthedocs.io/en/latest/index.html) instead\n\n```\nconda install mamba -n base -c conda-forge\n```\n\n```\n## clone app repo\ngit clone https://github.com/obenno/ShinySyn.git\n## cd app directory\ncd ShinySyn\n## create conda env with yml file\nmamba env create -f shinysyn_env.yml\n```\n\n- activate env and run application\n\n```\nconda activate shinysyn\nRscript -e \"options(shiny.port = 3838, shiny.host = '0.0.0.0', sass.cache = FALSE); shiny::runApp()\"\n```\n\nThe application will be run locally at `http://127.0.0.1:3838`,\nuser could open the address with google chrome or other modern browsers.\n"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/obenno/ShinySyn/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "d3, mcscan, shiny, synteny"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 obenno\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/obenno/ShinySyn/main//www/images/ShinySyn_main_view.png"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ShinySyn"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "obenno"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 86589,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 50726,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1606,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 1046,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 538,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://mamba.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "ShinySyn",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "- `jcvi/mcscan` ([https://github.com/tanghaibao/jcvi/wiki/MCscan-%28Python-version%29](https://github.com/tanghaibao/jcvi/wiki/MCscan-%28Python-version%29))\n\n- `LASTAL` ([https://gitlab.com/mcfrith/last](https://gitlab.com/mcfrith/last))\n\n- R packages\n  - `{shiny}`\n  - `{bslib}`\n  - `{shinyjs}`\n  - `{shinyWidgets}`\n  - `{DT}`\n  - `{shinyalert}`\n  - `{colourpicker}`\n  - `{waiter}`\n  - `{tidyverse}`\n  - `{vroom}`\n\nWe recommand to install the dependencies via [`conda`](https://docs.conda.io/en/latest/) \nor directly use the docker image if [`docker`](https://docs.docker.com/) was installed. \nPlease follow their official document for installation:\n\n- miniconda: https://docs.conda.io/en/latest/miniconda.html\n\n- docker: https://docs.docker.com/get-docker/\n\nConda env was tested on both linux and OSX. Windows user could use docker desktop to \nrun `ShinySyn` as linux container. Please follow [this instruction](https://hub.docker.com/editions/community/docker-ce-desktop-windows) to\ninstall it firstly.\n"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:46:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 31
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage Demo",
        "parent_header": [
          "ShinySyn",
          "Features"
        ],
        "type": "Text_excerpt",
        "value": "- Select macrosynteny block of interest and investigate gene pairs within\n\n![](/www/images/main_view.gif)\n\n- Select dots (gene pairs) from dot plot and get detail gene list\n\n![](/www/images/dot_plot.gif)\n"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use docker image",
        "parent_header": [
          "ShinySyn",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "We have prepared docker images for `ShinySyn`. With docker installed, user could simplely invoke\nthe app with command below, and will be able to invoke the application directly from \n**\"Containers/ Apps\"** menu when opening Docker Desktop next time.\n\n```\ndocker run -p 3838:3838 obenno/shinysyn\n```\n\nTo remove container after usage, use command:\n\n```\ndocker run --rm -p 3838:3838 obenno/shinysyn\n```\n\nThe application will be run locally at `http://127.0.0.1:3838`, user could open\nthe address with browsers.\n\nTo only pull the pre-built image from [dockerhub](https://hub.docker.com/), use:\n\n```\ndocker pull obenno/shinysyn\n```\n\nUsers in the mainland of China could use the image below:\n\n```\ndocker run -p 3838:3838 registry-intl.cn-hangzhou.aliyuncs.com/obenno/shinysyn\n```\n\nNote: \n\n- Windows users needs to install docker desktop, and type the same command\nabove in any terminal app, e.g. `PowerShell`.\n\n- The image is a bit large, please reserve 5 GB space for it.\n"
      },
      "source": "https://raw.githubusercontent.com/obenno/ShinySyn/main/README.md",
      "technique": "header_analysis"
    }
  ]
}