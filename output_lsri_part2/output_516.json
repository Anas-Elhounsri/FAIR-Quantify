{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/luigidibiasi/ENTAIL"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-03T18:04:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-14T12:15:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Progetto Fibrille Amiloidi"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "type": "Text_excerpt",
        "value": "We proposed a new classifier, called ENTAIL, for the prediction of fibril deposits involved in the amyloidoses. We aggregated the sequences from four datasets: AmyLoad, WALTZ-DB 2.0, Pep424 and AmyPro. We removed all the redundant sequences obtaining a complete set composed of 1897 sequences (788 amyloid peptides and 1109 non-amyloid peptides). For subsequent analyzes, we used a balanced dataset consisting of these sequences. We have selected the 4125 sequence descriptors from iFeature. The script rebuild all.py can be used to accomplish the descriptor extraction.\nAll the used datasets are into the files TrainingSet.txt and TestSet.txt. \n ENTAIL was based on the Naive Bayes Classifier with Unbounded Support and Gaussian Kernel Type. We reached an accuracy on the test set of 81.80%, SN of 100%, SP of 63.63% and an MCC of 0.683 on the balanced dataset. \n\n"
      },
      "source": "https://raw.githubusercontent.com/luigidibiasi/ENTAIL/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8045007659955817,
      "result": {
        "original_header": "Step Aggregation of datasets",
        "type": "Text_excerpt",
        "value": "If needed, it is possible to perform the merging step avoiding the redundant removal step by using the script rebuild all.py provided on the project GitHub repository, , adding an exit() instruction at line 173 and dumping the content of the sequences data variable into a file. \n"
      },
      "source": "https://raw.githubusercontent.com/luigidibiasi/ENTAIL/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9271258488894019,
      "result": {
        "original_header": "Step Extraction of descriptors",
        "type": "Text_excerpt",
        "value": "In addition, it is possible to perform the extraction of descriptors by using the script rebuild all.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/luigidibiasi/ENTAIL/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.946905089661987,
      "result": {
        "original_header": "Step Datasets",
        "type": "Text_excerpt",
        "value": "The training set and the test set were stored in TSV format. Therefore, the \u201creadtable\u201d function must be used with the following parameters to load the training and test data correctly: ReadRowNames set to False and ReadVariableNames set to True. Before training, we excluded the \u201cSEQUENCE\u201d and \u201cSOURCE\u201d columns from the list of predictors, and we selected the \u201cTARGET\u201d column as the learning target.\n \n"
      },
      "source": "https://raw.githubusercontent.com/luigidibiasi/ENTAIL/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/luigidibiasi/ENTAIL/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/luigidibiasi/ENTAIL/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "luigidibiasi/ENTAIL"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fibrils"
      },
      "source": "https://raw.githubusercontent.com/luigidibiasi/ENTAIL/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/luigidibiasi/ENTAIL/main/Models/ENTAIL_3b/linux/run_entail_predict_e3.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9987117127030524,
      "result": {
        "original_header": "Step Aggregation of datasets",
        "type": "Text_excerpt",
        "value": "If needed, it is possible to perform the merging step avoiding the redundant removal step by using the script rebuild all.py provided on the project GitHub repository, , adding an exit() instruction at line 173 and dumping the content of the sequences data variable into a file. \nIt is possible to perform prediction on the sequences of length six, using ENTAIL 3b models using the script predict.py provided on the GitHub repository project. However, a tiny path change may be needed on some systems, particularly on the python executable base path. Therefore, the script will answer YES for sequence detected as amyloid and NO otherwise. \n \n"
      },
      "source": "https://raw.githubusercontent.com/luigidibiasi/ENTAIL/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/luigidibiasi/ENTAIL/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ENTAIL"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "luigidibiasi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 12787391,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 346595,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MAXScript",
        "size": 2690,
        "type": "Programming_language",
        "value": "MAXScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Objective-C",
        "size": 1304,
        "type": "Programming_language",
        "value": "Objective-C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1083,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/luigidibiasi/ENTAIL/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:59:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}