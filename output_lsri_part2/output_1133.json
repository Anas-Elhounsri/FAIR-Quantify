{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/calico/scBasset"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-18T23:46:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-11T04:54:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Sequence-based Modeling of single-cell ATAC-seq using Convolutional Neural Networks."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9975316192123721,
      "result": {
        "original_header": "scBasset",
        "type": "Text_excerpt",
        "value": "Sequence-based Modeling of single-cell ATAC-seq using Convolutional Neural Networks.\nscBasset is a sequence-based convolutional neural network method to model single cell ATAC-seq data. We show that by leveraging the DNA sequence information underlying accessibility peaks and the expressiveness of a neural network model, scBasset achieves state-of-the-art performance across a variety of tasks on single-cell ATAC-seq and single-cell multiome datasets, including cell type identification, scATAC profile denoising, data integration, and transcription factor activity inference.\n \n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9612600191393039,
      "result": {
        "original_header": "Basenji",
        "type": "Text_excerpt",
        "value": "scBasset provides a fixed architecture that we experimented to perform best on scATAC datasets. The key components of scBasset architecture come from [Basenji](https://github.com/calico/basenji). Although scBasset can work as a stand-alone package, we strongly suggest installing [Basenji](https://github.com/calico/basenji) if you want to experiment with alternative archictures. See [link](link) as an example of how to create a Json file and instruct Basenji to train a scBasset model.\n \n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. download tutorial data.",
        "parent_header": [
          "scBasset",
          "Tutorial: Training scBasset on 10x multiome PBMC dataset (scATAC)"
        ],
        "type": "Text_excerpt",
        "value": "Follow [Download tutorial data](https://github.com/calico/scBasset/blob/main/examples/download.ipynb) to download data used for tutorial.\n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/calico/scBasset/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/cicero/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/cicero/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/magic/imputation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/magic/imputation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/scale/batch_correction/batch_correction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/scale/batch_correction/batch_correction.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/scopen/make_m.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/scopen/make_m.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/peakvi/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/peakvi/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/peakvi/batch_correction/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/peakvi/batch_correction/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/peakvi/imputation/impute.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/peakvi/imputation/impute.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/snapatac/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/snapatac/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/pca/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/pca/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/pca/batch_correction/plot.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/pca/batch_correction/plot.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/chromvar/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/chromvar/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/scdec/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/scdec/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/scdec/batch_correction/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/scdec/batch_correction/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/cistopic/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/cistopic/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/cistopic/batch_correction/batch_correction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/cistopic/batch_correction/batch_correction.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/cicero/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/cicero/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/magic/imputation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/magic/imputation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/scale/gen_csv.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/scale/gen_csv.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/scopen/make_m.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/scopen/make_m.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/peakvi/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/peakvi/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/peakvi/imputation/impute.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/peakvi/imputation/impute.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/snapatac/plot.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/snapatac/plot.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/pca/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/pca/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/chromvar/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/chromvar/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/scdec/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/scdec/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/cistopic/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/cistopic/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/archr/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/archr/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/cicero/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/cicero/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/magic/imputation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/magic/imputation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/scale/gen_csv.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/scale/gen_csv.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/scopen/make_m.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/scopen/make_m.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/peakvi/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/peakvi/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/peakvi/imputation/impute.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/peakvi/imputation/impute.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/snapatac/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/snapatac/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/pca/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/pca/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/chromvar/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/chromvar/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/scdec/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/scdec/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/cistopic/eval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/cistopic/eval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/examples/download.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/examples/download.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/examples/batch_correction/buen_batch_correction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/examples/batch_correction/buen_batch_correction.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/examples/PBMC_multiome/evaluate.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/examples/PBMC_multiome/evaluate.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/examples/PBMC_multiome/score_motif.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/examples/PBMC_multiome/score_motif.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/examples/PBMC_multiome/make_anndata.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/examples/PBMC_multiome/make_anndata.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/examples/ISM/ism.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/examples/ISM/ism.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/examples/ISM/motif_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/examples/ISM/motif_analysis.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/calico/scBasset/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "calico/scBasset"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scBasset"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/scale/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/scopen/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/snapatac/process.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/scdec/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/cistopic/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/Buenrostro2018/archr/process.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/scale/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/scopen/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/snapatac/make_snap.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/scdec/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_PBMC/cistopic/generate_rds.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/scale/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/scopen/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/snapatac/make_snap.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/scdec/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/scripts_for_review/multiome_mouse_brain/cistopic/generate_rds.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/examples/PBMC_multiome/train.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/examples/ISM/run_fimo.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/docs/architecture.png"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "installation",
        "parent_header": [
          "scBasset"
        ],
        "type": "Text_excerpt",
        "value": "To install scBasset, we suggest first create a conda environment by:\n```\n    conda create -n scbasset python=3.7\n    conda activate scbasset\n```\nand then run the following commands:\n```\n    git clone https://github.com/calico/scBasset.git\n    pip install -e scBasset\n```\nInstallation should take only a few minutes. Verify that scBasset is correctly installed by running in python:\n```\n    import scbasset\n```\n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/calico/scBasset/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scBasset"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "calico"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 6913248,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 55460,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 19920,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5918,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/calico/scBasset/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:18:45",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 94
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "scBasset"
        ],
        "type": "Text_excerpt",
        "value": "The best way to get familiar with scBasset is to go over the tutorials. Starting from 10x PBMC mulitome output, we will walk you through the data preprocessing, model training and post-processing steps.\n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial: Training scBasset on 10x multiome PBMC dataset (scATAC)",
        "parent_header": [
          "scBasset"
        ],
        "type": "Text_excerpt",
        "value": "[Download tutorial data](https://github.com/calico/scBasset/blob/main/examples/download.ipynb)   \n[Create Anndata](https://github.com/calico/scBasset/blob/main/examples/PBMC_multiome/make_anndata.ipynb)   \n[create H5](https://github.com/calico/scBasset/blob/main/examples/PBMC_multiome/train.sh)   \n[Training](https://github.com/calico/scBasset/blob/main/examples/PBMC_multiome/train.sh)   \n[Get cell embeddings](https://github.com/calico/scBasset/blob/main/examples/PBMC_multiome/evaluate.ipynb)   \n[Motif scoring](https://github.com/calico/scBasset/blob/main/examples/PBMC_multiome/score_motif.ipynb)  \n[ISM_visualization](https://github.com/calico/scBasset/blob/main/examples/ISM/ism.ipynb)   \n[ISM_PWM](https://github.com/calico/scBasset/blob/main/examples/ISM/motif_analysis.ipynb)    \n[batch correction tutorial](https://github.com/calico/scBasset/blob/main/examples/batch_correction/buen_batch_correction.ipynb)    \n "
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. download tutorial data.",
        "parent_header": [
          "scBasset",
          "Tutorial: Training scBasset on 10x multiome PBMC dataset (scATAC)"
        ],
        "type": "Text_excerpt",
        "value": "Follow [Download tutorial data](https://github.com/calico/scBasset/blob/main/examples/download.ipynb) to download data used for tutorial.\n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. create anndata.",
        "parent_header": [
          "scBasset",
          "Tutorial: Training scBasset on 10x multiome PBMC dataset (scATAC)"
        ],
        "type": "Text_excerpt",
        "value": "See the tutorial here [Create Anndata](https://github.com/calico/scBasset/blob/main/examples/PBMC_multiome/make_anndata.ipynb). \nIn order to run scBasset model, we need to first create anndata from the raw 10x scATAC/multiome output. Two files from 10x scATAC/multiome outputs are required: the **_filtered_feature_bc_matrix.h5** that stores the count matrix, and the **_peaks.bed** file that stores genomic regions of the peaks. Briefly, We converted the raw filtered_feature_bc_matrix.h5 into a h5ad file, and perform filtering of peaks. Notice that we filter out peaks accessible in <5% cells for optimal performance.  The h5ad file should have cells as obs and peaks as var. There should be at least three columns in var: chr, start, end that indicate the genomic region of each peak.\n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. generate training data for scBasset.",
        "parent_header": [
          "scBasset",
          "Tutorial: Training scBasset on 10x multiome PBMC dataset (scATAC)"
        ],
        "type": "Text_excerpt",
        "value": "scBasset/bin/scbasset_preprocess.py is used as a command line tool to extract sequences underlying the peaks, one-hot encode them and save them to h5 sparse format. Run 'scbasset_preprocess.py --help' to see help page. scBasset takes as input anndata file, genome fasta file for the corresponding genome build, and output folder name.  Genome fasta file can be downloaded from [UCSC](https://hgdownload.soe.ucsc.edu/downloads.html). This process should take ~30s for example multiome PBMC dataset.\nThe following output are saved to the output folder: ad.h5ad, splits.h5, train_seqs.h5, test_seqs.h5, val_seqs.h5.\n```\nusage: scbasset_preprocess.py [-h] [--ad_file AD_FILE]\n                              [--input_fasta INPUT_FASTA]\n                              [--out_path OUT_PATH]\n\nPreprocess anndata to generate inputs for scBasset.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --ad_file AD_FILE     Input scATAC anndata. .var must have 'chr', 'start', 'end' columns. anndata.X must be in csr format.\n  --input_fasta INPUT_FASTA\n                        Genome fasta file.\n  --out_path OUT_PATH   Output path. Default to ./processed/\n```\nNote: if you are generating peak atlas and count matrix from other sources such as ArchR. Make sure the peak atlas and count matrix have matching peak order! For ArchR, use rowRanges(getMatrixFromProject(proj,\"PeakMatrix\")) as the peaks so that the peak order matches getMatrixFromProject(proj, \"PeakMatrix\"). Peaks in getPeakSet(proj) could have a different order!\n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. train scBasset model.",
        "parent_header": [
          "scBasset",
          "Tutorial: Training scBasset on 10x multiome PBMC dataset (scATAC)"
        ],
        "type": "Text_excerpt",
        "value": "scBasset/bin/scbasset_train.py is used as a command line tool for training model. Use 'scbasset_train.py --help' to see help page. scbasset_train.py takes as input the folder path containing preprocessed h5 files. scBasset by default trains for 1000 epochs with early-stopping on **train auc**. We focused on **training auROC** instead of validation auROC for model selection because we observed that, across multiple datasets, the model continues to improve cell embeddings even after the point where the validation auROC has plateaued. We observed that validation auROC during the later stages of training is stable, suggesting that the model is not prone to overfitting. Our analyses indicate that the 32 units bottleneck layer is a major impediment to true overfitting. Training takes ~13s per epoch for example multiome PBMC dataset on V100 gpu. \n```\nusage: scbasset_train.py [-h] [--input_folder INPUT_FOLDER]\n                         [--bottleneck BOTTLENECK] [--batch_size BATCH_SIZE]\n                         [--lr LR] [--epochs EPOCHS] [--out_path OUT_PATH]\n                         [--print_mem PRINT_MEM]\n\ntrain scBasset on scATAC data\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --input_folder INPUT_FOLDER\n                        folder contains preprocess files. The folder should\n                        contain: train_seqs.h5, test_seqs.h5, val_seqs.h5,\n                        splits.h5, ad.h5ad\n  --bottleneck BOTTLENECK\n                        size of bottleneck layer. Default to 32\n  --batch_size BATCH_SIZE\n                        batch size. Default to 128\n  --lr LR               learning rate. Default to 0.01\n  --epochs EPOCHS       Number of epochs to train. Default to 1000.\n  --out_path OUT_PATH   Output path. Default to ./output/\n  --print_mem PRINT_MEM\n                        whether to output cpu memory usage.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5. use trained model for downstream analysis.",
        "parent_header": [
          "scBasset",
          "Tutorial: Training scBasset on 10x multiome PBMC dataset (scATAC)"
        ],
        "type": "Text_excerpt",
        "value": "See the tutorial [Get cell embeddings](https://github.com/calico/scBasset/blob/main/examples/PBMC_multiome/evaluate.ipynb) for how to get cell embedding and denoised accessibility profiles from a trained scBasset model.  \n\nSee the tutorial [Motif scoring](https://github.com/calico/scBasset/blob/main/examples/PBMC_multiome/score_motif.ipynb) for how to score motifs on a per cell basis using motif injection method. For motif injection, we first generated dinucleotides shuffled background sequences, and inserted motif of interest to the center of those sequences. We provided such sequences for motifs in the MEME Suite CIS-BP 1.0 [Homo sapiens motif collection](https://meme-suite.org/meme/db/motifs) at [Homo_sapiens_motif_fasta](https://storage.googleapis.com/scbasset_tutorial_data/Homo_sapiens_motif_fasta.tar.gz). To score on additional motifs, follow make_fasta.R in the tarball to create dinucleotide shuffled sequences with and without motifs of interest. \n\nSee the tutorial [ISM_visualization](https://github.com/calico/scBasset/blob/main/examples/ISM/ism.ipynb) for performing in silico saturation mutagenesis on an example peak of interest, and visualizing the ISM scores aggregated by cell type. See tutorial [ISM_PWM](https://github.com/calico/scBasset/blob/main/examples/ISM/motif_analysis.ipynb) for computing Pearson correlation between ISM and motif match.\n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "6. batch correction.",
        "parent_header": [
          "scBasset",
          "Tutorial: Training scBasset on 10x multiome PBMC dataset (scATAC)"
        ],
        "type": "Text_excerpt",
        "value": "scBasset can be adapted to perform batch correction. The /bin/scbasset_bc_train.py commandline tool is for training scBasset with batch correction. See [batch correction tutorial](https://github.com/calico/scBasset/blob/main/examples/batch_correction/buen_batch_correction.ipynb) for an example of correcting for donor effect on Buenrostro2018 dataset.  We use a parameter l2 to control for the level of mixing. Usually a default l2 value of 0 gives good mixing performance. In cases where default l2 doesn't mix enough, you can try tune up l2 (1e-9, 1e-8 etc).\n"
      },
      "source": "https://raw.githubusercontent.com/calico/scBasset/main/README.md",
      "technique": "header_analysis"
    }
  ]
}