{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YeoLab/Metadensity"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-08-31T20:33:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-03-31T20:02:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Define metadensity to predict RNA binding protein function"
      },
      "technique": "GitHub_API"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://metadensity.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1: download data and setup paths to annotations in `config/`",
        "type": "Text_excerpt",
        "value": "Metadensity requires several annotations to work. You need to point those files in `config/*.ini`. see `config/hg38.ini` as an example.\nThese information are genome coordinate, species dependent. So you can keep each species with a seperate `.ini`.\n\n|                  | Description                                                                              | Link to download                                                                            | Essential to run |\n|------------------|------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|------------------|\n| GENOME_FA        | fasta for the entire genome sequence                                                     | https://www.ncbi.nlm.nih.gov/genome/guide/human/                                            | YES              |\n| GENCODE          | gff3 annotation of exon, intron, gene, transcripts etc                                   | https://www.gencodegenes.org/human/                                                         | YES              |\n| BRANCHPOINT      | branchpoint annotation                                                                   | https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4315302/                                       | NO               |\n| BRANCHPOINT_PRED | machine learning predicted branchpoints                                                  | https://pubmed.ncbi.nlm.nih.gov/29092009/                                                   | NO               |\n| POLYA            | annotation of polyA sites and signals from polyASite                                     | https://polyasite.unibas.ch/atlas | NO               |\n| MIRNA            | annotation of microRNA                                                                   | https://www.mirbase.org/                                                                    | NO               |\n| SNORNA           | annotation of snoRNA                                                                     | http://scottgroup.med.usherbrooke.ca/snoDB/                                                 | NO               |\n| LNCRNA           | annotation of lncRNA                                                                     | https://lncipedia.org/                                                                      | NO               |\n| TRANSCRIPT       | gff3 annotation from GENCODE, containing only \"transcript\"                               | use [this script](https://github.com/algaebrown/Metadensity/blob/master/scripts/gencode_canon_filtering.sh) to generate from GENCODE and UCSC canonical transcript list or download [them *nonpickle](https://www.dropbox.com/sh/hoya37n9pmuqd4l/AABBSpcpjFYIUFWMdIRuJtU4a?dl=0) here | YES              |    \n| FEATURE          | gff3 annotation from GENCODE, containing only \"exon\", \"CDS\", \"UTR\" and created \"introns\" | use [this script](https://github.com/algaebrown/Metadensity/blob/master/scripts/gencode_canon_filtering.sh) to generate from GENCODE and UCSC canonical transcript list; or download [them *nonpickle](https://www.dropbox.com/sh/hoya37n9pmuqd4l/AABBSpcpjFYIUFWMdIRuJtU4a?dl=0)| YES              |\n| DATADIR          | parsed information of above, python .pickle file                                         | https://www.dropbox.com/sh/hoya37n9pmuqd4l/AABBSpcpjFYIUFWMdIRuJtU4a?dl=0                   |                  |\n\n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YeoLab/Metadensity/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_test_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_test_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/How%20does%20metadensity%20work.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/How%20does%20metadensity%20work.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_SF3B4.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_SF3B4.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/deseq_metaden.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/deseq_metaden.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_HNRNPC_on_different_cell_line.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_HNRNPC_on_different_cell_line.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/prep_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/prep_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_Par-CLIP.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_Par-CLIP.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/Heatmap_from_precomputed_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/Heatmap_from_precomputed_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/parse_gencode_coords_into_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/parse_gencode_coords_into_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_HNRNPC_RPS3_RBFOX_LIN28.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_HNRNPC_RPS3_RBFOX_LIN28.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_SF3B4-rep_seperate.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_SF3B4-rep_seperate.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/0_customize_feature_example_miRNA_host_gene.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/0_customize_feature_example_miRNA_host_gene.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/0_customize_feature_example_intronic_polyA.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/0_customize_feature_example_intronic_polyA.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_SF3B4-compare-CIMS-CITS.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_SF3B4-compare-CIMS-CITS.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_Par-CLIP-YBX1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/docs/source/1_Example_on_Par-CLIP-YBX1.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YeoLab/Metadensity/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "YeoLab/Metadensity"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Metadensity"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/gkmsvm.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/kmer_stat.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/dbclus.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/run_motif_peaks.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/prep_file_dapars.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/rnafold_bed.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/degroup.cluster.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/prep_icshape.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/run_homer.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/gencode_cds_transcript_id.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/region_enrich-encore.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/rmats.cluster.evan.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/gencode_filtering.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/region_enrich.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/gencode_canon_filtering.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/subsample.cluster.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/make_wig_rnaseq.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/IPAFinder.cluster.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/run_em.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/run_dapars.cluster.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/motif.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/subsample_bam.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/rbpamp_clus.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/create_test_data.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/metasubmit_encore4.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/run_iCLIPro.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/run_clan.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/jon.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/g4hunter_cluster.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/metasubmit.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/rmats.cluster.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/subsample_2million.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/rbpamp.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/qgrs_cluster_script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/transcript_centric.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/prep_depars.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/scripts/dump_fastq.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "type": "Text_excerpt",
        "value": "The environment is available at [DockerHub](https://hub.docker.com/repository/docker/algaebrown/metadensity)\n```\ngit clone https://github.com/algaebrown/Metadensity.git\ncd Metadensity\n# build your own environment!\nconda env create -n Metadensity --file environment.yaml\nconda activate Metadensity\n# copy genome coordinate\ncd Metadensity\npip install -e .\n```"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1: download data and setup paths to annotations in `config/`",
        "type": "Text_excerpt",
        "value": "Metadensity requires several annotations to work. You need to point those files in `config/*.ini`. see `config/hg38.ini` as an example.\nThese information are genome coordinate, species dependent. So you can keep each species with a seperate `.ini`.\n\n|                  | Description                                                                              | Link to download                                                                            | Essential to run |\n|------------------|------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|------------------|\n| GENOME_FA        | fasta for the entire genome sequence                                                     | https://www.ncbi.nlm.nih.gov/genome/guide/human/                                            | YES              |\n| GENCODE          | gff3 annotation of exon, intron, gene, transcripts etc                                   | https://www.gencodegenes.org/human/                                                         | YES              |\n| BRANCHPOINT      | branchpoint annotation                                                                   | https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4315302/                                       | NO               |\n| BRANCHPOINT_PRED | machine learning predicted branchpoints                                                  | https://pubmed.ncbi.nlm.nih.gov/29092009/                                                   | NO               |\n| POLYA            | annotation of polyA sites and signals from polyASite                                     | https://polyasite.unibas.ch/atlas | NO               |\n| MIRNA            | annotation of microRNA                                                                   | https://www.mirbase.org/                                                                    | NO               |\n| SNORNA           | annotation of snoRNA                                                                     | http://scottgroup.med.usherbrooke.ca/snoDB/                                                 | NO               |\n| LNCRNA           | annotation of lncRNA                                                                     | https://lncipedia.org/                                                                      | NO               |\n| TRANSCRIPT       | gff3 annotation from GENCODE, containing only \"transcript\"                               | use [this script](https://github.com/algaebrown/Metadensity/blob/master/scripts/gencode_canon_filtering.sh) to generate from GENCODE and UCSC canonical transcript list or download [them *nonpickle](https://www.dropbox.com/sh/hoya37n9pmuqd4l/AABBSpcpjFYIUFWMdIRuJtU4a?dl=0) here | YES              |    \n| FEATURE          | gff3 annotation from GENCODE, containing only \"exon\", \"CDS\", \"UTR\" and created \"introns\" | use [this script](https://github.com/algaebrown/Metadensity/blob/master/scripts/gencode_canon_filtering.sh) to generate from GENCODE and UCSC canonical transcript list; or download [them *nonpickle](https://www.dropbox.com/sh/hoya37n9pmuqd4l/AABBSpcpjFYIUFWMdIRuJtU4a?dl=0)| YES              |\n| DATADIR          | parsed information of above, python .pickle file                                         | https://www.dropbox.com/sh/hoya37n9pmuqd4l/AABBSpcpjFYIUFWMdIRuJtU4a?dl=0                   |                  |\n\n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YeoLab/Metadensity/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Metadensity"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "YeoLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 318056,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 233732,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 595,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "algaebrown",
          "type": "User"
        },
        "date_created": "2022-08-21T17:27:26Z",
        "date_published": "2022-08-31T20:34:58Z",
        "html_url": "https://github.com/YeoLab/Metadensity/releases/tag/0.0.1",
        "name": "Metadensity 0.0.1",
        "release_id": 75958320,
        "tag": "0.0.1",
        "tarball_url": "https://api.github.com/repos/YeoLab/Metadensity/tarball/0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/YeoLab/Metadensity/releases/75958320",
        "value": "https://api.github.com/repos/YeoLab/Metadensity/releases/75958320",
        "zipball_url": "https://api.github.com/repos/YeoLab/Metadensity/zipball/0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:23:40",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Advanced usage:",
        "parent_header": [
          "Step 1: download data and setup paths to annotations in `config/`"
        ],
        "type": "Text_excerpt",
        "value": "if you are using some coordinate that we don't have precomputed \"DATADIR\", please check out [this notebook](https://github.com/algaebrown/Metadensity/blob/master/docs/source/parse_gencode_coords_into_data.ipynb) on how to build one yourself.\n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2: Command line usage: the most vanilla functions",
        "type": "Text_excerpt",
        "value": "`python scripts/run_metadensity_vanilla.py -h`\n\n```\nOptions:\n  -h, --help            show this help message and exit\n  -i CSV, --csv=CSV     .csv file containing all CLIP files\n  -u UID, --uid=UID     unique ID(uid) to the CLIP in the csv you want to run\n                        on\n  -t TRANSCRIPT_LIST, --transcript_list=TRANSCRIPT_LIST\n                        list of transcript ids to include in the calculation,\n                        if not specify, use peak-containing transcripts\n  -o OUTDIR, --out=OUTDIR\n                        output path (figures and arrays)\n  -s, --single end      Whether your CLIP is single end. Affects Metatruncate\n                        objects\n  -c CONFIG, --config=CONFIG\n                        file path to the config file, genome coordinate\n                        specific\n  --stat=STAT           choose [mean,median]\n  --background_method=BG\n                        how you want to compute IP to INPUT, choose [relative\n                        information,substraction,None]\n  --normalization       whether to average the signal in a transcript\n  --truncation          Use truncation instead of the entire read\n```\n\nThis will run the most vanilla functions of Metadensity\n\nHere we provide some [test data](https://www.dropbox.com/s/cgkeuqr0cjif558/test_data.tar.gz?dl=0) to run the script.\n\n```\ncd Metadensity\n# download the data\nwget https://www.dropbox.com/s/cgkeuqr0cjif558/test_data.tar.gz\n\n# uncompress\ntar -xvzf test_data.tar.gz\n\n# modify paths is menifest.csv to correspond to your directory\nnano test_data/menifest.csv\n\n# run\ncd scripts/\npython run_metadensity_vanilla.py -i ../test_data/menifest.csv -u SF3B4_test -o ../test_data --config=../config/hg38.ini\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 3: Advanced usage in jupyter notebook",
        "type": "Text_excerpt",
        "value": "[checkout example jupyter notebooks](https://github.com/algaebrown/Metadensity/tree/master/docs/source)\n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/Metadensity/master/README.md",
      "technique": "header_analysis"
    }
  ]
}