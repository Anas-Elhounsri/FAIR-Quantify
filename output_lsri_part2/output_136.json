{
  "application_domain": [
    {
      "confidence": 11.6,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HannahMDoherty/ChemGAPP"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact <a name=\"contact\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "For queries, please contact [Hannah Doherty](mailto:hxd476@student.bham.ac.uk?subject=[GitHub:ChemGAPP]), Institute of Microbiology and Infection, School of Biosciences, University of Birmingham. In collaboration with Center for Computational Biology, University of Birmingham.  \n\n----"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-12T11:37:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-30T22:06:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A package and series of Streamlit apps for analysing chemical genomic screen data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction <a name=\"content\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "ChemGAPP encompasses three modules, each with a dedicated Streamlit App.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9679688824450055,
      "result": {
        "original_header": "iris_to_dataset <a name=\"Iris_to_dataset\"></a>",
        "type": "Text_excerpt",
        "value": "Where a concentration is not relevant, put two dashes between condition and plate number: \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9004037738668601,
      "result": {
        "original_header": "Step_2_Threshold_Selector.py <a name=\"Step_2_Threshold_Selector\"></a>",
        "type": "Text_excerpt",
        "value": "\n2- Then select which statistical tests you would like to use to remove detrimental data. *Any combination can be selected.*  \n4- Check the replicate reproducibilty 'r' value for improvement after curation. Aim to maximise this r value with your curation. \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9836175917400192,
      "result": {
        "original_header": "Step_4_Dataset_Comparison.py <a name=\"Step_4_Dataset_Comparison\"></a>",
        "type": "Text_excerpt",
        "value": "File should be in CSV format and consist of two columns; Cluster and Gene.  \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8949373811884743,
      "result": {
        "original_header": "Step_1_chemgapp_small <a name=\"Step_1_ChemGAPP_Small\"></a>",
        "type": "Text_excerpt",
        "value": "\n4- Decide whether you wish to compare mutants to a Wildype within the same condition or compare mutants to themselves in a control condition. \nE.g. for `AMPICILLIN-50mM-6_B.JPG.iris` you would input `AMPICILLIN 50mM`. \n5- Select which IRIS phenotype you would like to analyse. If size is selected optionally input a maximum conlony size value. \n7- Select the type of plot you wish to produce; Bar plots or Swarm plots.  \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8932127307453899,
      "result": {
        "original_header": "Step_1_Interaction_Scores.py <a name=\"Step_1_Interaction_Scores\"></a>",
        "type": "Text_excerpt",
        "value": "1. Input a path to your desired output folder. This is where your files will be stored. \n```\n    E.g. ~/Desktop/GI_Files\n``` \n* The `Order` column tells the software which strain is the wildtype, primary gene, secondary gene, and double knockout. \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.912274522883953,
      "result": {
        "original_header": "Step_2_Bar_Plot.py <a name=\"Step_2_Bar_Plot\"></a>",
        "type": "Text_excerpt",
        "value": "\n2. Input the name of the Primary Gene. This is the gene common to all the tested gene pairs.\n    \nE.g. \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9168147510696332,
      "result": {
        "original_header": "Test files <a name=\"package\"></a>",
        "type": "Text_excerpt",
        "value": "These files are located in the `ChemGAPP/Test_Files` folder and include: \n1.  `ChemGAPP_Big/` Folder containing test IRIS files, plate information files and cluster data for ChemGAPP Big.  \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "If downloaded via pip commands can be initiated from any folder. The help instruction is called using -h option. E.g:",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>",
          "Streamlit APPs",
          "ChemGAPP GI"
        ],
        "type": "Text_excerpt",
        "value": "```\niris_to_dataset [-h] [-p PATH] [-o OUTPUTFILE]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HannahMDoherty/ChemGAPP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HannahMDoherty/ChemGAPP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HannahMDoherty/ChemGAPP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ChemGAPP: A Package for Chemical Genomic Analysis and Phenotypic Profiling."
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/ChemGAPP_Small.png"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/ChemGAPP_GI.png"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation <a name=\"installation\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "There are two ways to run the tool, via the package files or by running the streamlit applications.\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Bin files are intiated by specifying the path to the file. E.g, if within the files' directory:",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>",
          "Streamlit APPs",
          "ChemGAPP GI"
        ],
        "type": "Text_excerpt",
        "value": "```\n./Iris_to_Dataset [-h] [-p PATH] [-o OUTPUTFILE]\n```\n\n`Colony Size is stated as the phenotype within the below examples for ease. However, any Iris phenotype (e.g opacity, circularity etc) can be analysed`\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "iris_to_dataset <a name=\"Iris_to_dataset\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Takes a directory of Iris files and turns them into the combined .csv dataset used for normalisation. \n\nInput files do not have to be from IRIS as long as they are in the IRIS format and named in the format below.\n\nThe IRIS file format is a tab delimited tabular file starting with columns for plate locations, followed by measured phenotypes. E.g:\n\n| row |\tcolumn|\tsize | circularity | opacity |\n|  ------------- | ------------- | ------------- | ------------- | :-------------: |\n| 1 |\t1\t| 12348\t | 0.549 | 512559 |\n| 1 |\t2\t| 11786\t | 0.572 | 509877 |\n| 1 |\t3\t| 11265\t | 0.578 | 488846 |\n\nIris file names MUST be in the format: \n\n`CONDITION-concentration-platenumber-batchnumber_replicate.JPG.iris`\n\nE.g. `AMPICILLIN-50 mM-6-1_B.JPG.iris`\n\nWhere concentrations have decimals, use a comma instead of a period:\n\nE.g. `AMPICILLIN-0,5 mM-6-1_B.JPG.iris`\n\nWhere a concentration is not relevant, put two dashes between condition and plate number:\n\nE.g. `LB--1-2_A.JPG.iris`\n\nIf only one source plate and/or only one batch was produced, assign 1 for these:\n\nE.g. `AMPICILLIN-0,5 mM-1-1_B.JPG.iris`\n\n`platenumber` refers to the source plate number, i.e which mutants are on the experiment plate. This will match the plate information file number in later steps.\n\n\n```\nusage: iris_to_dataset [-h] [-p PATH] [-o OUTPUTFILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -p PATH, --PATH PATH  \n                        Path to folder which contains IRIS files, IRIS file names should be in the format: CONDITION-concentration-platenumber-batchnumber_replicate.JPG.iris (default:None)\n\n  -o OUTPUTFILE, --outputfile OUTPUTFILE\n                        Name of output file, should be a .csv file (default:None)\n\n  -it IRISPHENOTYPE, --IRISphenotype IRISPHENOTYPE\n                        IRIS phenotype from IRIS files you wish to analyse (default: size)\n\n```\n    "
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "check_normalisation <a name=\"Check_Normalisation\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Checks each plate individually to see if outer-edge normalisation is required due to plate effects. The module uses the wilcoxson rank sum test to determine if the distribution of outer edge colony sizes, e.g colony size, are the same as the inner colony sizes. If the distributions differ, the outer edge is normalised such that the row or column median of each outer edge colony is equal to the Plate Middle Mean (PMM). The PMM is equal to the mean colony size of all colonies within the middle of the plate within the 40th to 60th percentile of size. Following this, all plates are normalised such that all colonies are scaled to adjust the PMM to the medain colony size of all colonies within the dataset. \n\nFalse zero values, are also changed to NaNs, false zero values are values where a colony has a size of zero but other replicates within the condition are not. This is likely due to pinning defects. \n\n```\nusage: check_normalisation [-h] [-i INPUTFILE] [-o OUTPUTFILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        The txt file from Iris_to_dataset.py of the colony dataset with conditions across the top and row/column coordinates downwards (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        CSV file of the normalised colony sizes. (default: None)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "z_score <a name=\"Z_Score\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Compares each replicate colony to find outliers within colony size for each plate. Outliers include, colonies smaller than the mean of the replicates (S), colonies bigger than the mean of the replicates (B) and NaN values (X). \n\n```\nusage: z_score [-h] [-i INPUTFILE] [-o OUTPUTFILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        The normalised csv file from check_normalisation (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        A CSV file of the dataset where colony sizes are replaced with the colony type values. (default: None)\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "z_score_count <a name=\"Z_Score_Count\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Counts the number of each colony type within each plate and the percentage of each colony type. \n\n```\nusage: z_score_count [-h] [-i INPUTFILE] [-o OUTPUTFILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        The CSV output file from z_score (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        A CSV file with the counts and percentages of the each colony type. (default: None)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "mw_plate_level <a name=\"Mann_Whitney_Plate_Level\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Compares the distributions of the colony sizes of replicate plates of the same condition and determines if replicate plates have the same distribution based on the p value of the Mann whitney test. A p-value < \u237a indicates that the two distributions differ with statistical signifcance. The mean p-value is then averaged for each replicate, e.g average(A vs B, A vs C, A vs D) = replicate mean of A. \n\n```\nusage: mw_plate_level [-h] [-i INPUTFILE] [-o OUTPUTFILE] [-o2 OUTPUTFILE_MEAN]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        The normalised csv file from check_normalisation output (default:None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        A CSV file with the u statistics and p-values for each comparison. (default: None)\n  -o2 OUTPUTFILE_MEAN, --OutputFile_Mean OUTPUTFILE_MEAN\n                        A CSV file with the mean u statistics and p-values for each replicate (default: None)\n\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "mw_condition_level <a name=\"Mann_Whitney_Condition_Level\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "The variance of the replicate means for each condition is calculated and then the average of these variance is calculated for each plate within that conditions, i.e the variance between replicate plate A,B,C,D for plate 1 of condition A, and then the average of plate 1, 2, 3 etc. for condition A. \n\n```\nusage: mw_condition_level [-h] [-i INPUTFILE] [-o OUTPUTFILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        The CSV file with the mean u statistics and p values for each replicate from mw_plate_level (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        A CSV file with the mean variance values for the u statistic and p values of the mann-whitney test for each condition. (default: None)\n```"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "condition_variance <a name=\"Condition_Variance\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "The variance of replicate colony sizes is calculated for each plate and these variance values are averaged for each plate within a condition. \n\n```\nusage: condition_variance [-h] [-i INPUTFILE] [-o OUTPUTFILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        The normalised csv file from check_normalisation (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        A CSV file of the average variances for each condition. (default: None)\n```"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "pass_fail_conditions <a name=\"Pass_Fail_Conditions\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "The output files of the Mann-Whitney condition level analysis and the condition variance analysis are inputted. The files are tested to see which conditions fail at certain thresholds of variance and Mann-Whitney p value. \n\n```\nusage: pass_fail_conditions [-h] [-iv INPUTFILE_VARIANCE] [-imwc INPUTFILE_MWC] [-ov OUTPUTFILE_VARIANCE] [-omwc OUTPUTFILE_MWC]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -iv INPUTFILE_VARIANCE, --InputFile_Variance INPUTFILE_VARIANCE\n                        Output file from condition_variance (default: None)\n  -imwc INPUTFILE_MWC, --InputFile_MWC INPUTFILE_MWC\n                        Output file from mw_condition_level (default: None)\n  -ov OUTPUTFILE_VARIANCE, --OutputFile_Variance OUTPUTFILE_VARIANCE\n                        A CSV file showing the conditions and the thresholds at which they pass and fail. Here variances which are greater than the threshold tested fail. (default: None)\n  -omwc OUTPUTFILE_MWC, --OutputFile_MWC OUTPUTFILE_MWC\n                        A CSV file showing the conditions and the thresholds at which they pass and fail. Here p values which are lower than the threshold tested fail. (default: None)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "pass_fail_plates <a name=\"Pass_Fail_Plates\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "The output files of the Mann-Whitney plate level analysis and the Z score analysis are inputted. The files are tested to see which conditions fail at certain thresholds of Normality and Mann-Whitney p value.\n\n```\nusage: pass_fail_plates [-h] [-iz INPUTFILE_Z_SCORE] [-imwp INPUTFILE_MWP] [-oz OUTPUTFILE_Z_SCORE] [-omwp OUTPUTFILE_MWP] [-mo MERGED_OUTPUTFILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -iz INPUTFILE_Z_SCORE, --InputFile_Z_Score INPUTFILE_Z_SCORE\n                        output file from z_score_count (default: None)\n  -imwp INPUTFILE_MWP, --InputFile_MWP INPUTFILE_MWP\n                        output file from mw_plate_level (default: None)\n  -oz OUTPUTFILE_Z_SCORE, --OutputFile_Z_Score OUTPUTFILE_Z_SCORE\n                        A CSV file showing the plates and the thresholds at which they pass and fail for the Z-score test. Here normality percentages which are lower than the threshold tested fail. (default: None)\n  -omwp OUTPUTFILE_MWP, --OutputFile_MWP OUTPUTFILE_MWP\n                        A CSV file showing the plates and the thresholds at which they pass and fail for the Mann-Whitney test. Here p values which are lower than the threshold tested fail. (default: None)\n  -mo MERGED_OUTPUTFILE, --Merged_Outputfile MERGED_OUTPUTFILE \n                        A CSV file showing the plates and the thresholds at which they pass and fail for both. (default: None)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "bar_plot_plates <a name=\"Bar_Plot_Plate\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Produces a bar plot showing the counts of conditions with a certain number of plates lost at different thresholds of normality (z-score) and Mann-Whitney p-value.\n\n```\nusage: bar_plot_plates [-h] [-i INPUTFILE] [-o OUTPUTPLOT]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        The input file for the module. Uses the merged output file from pass_fail_plates (default: None)\n  -o OUTPUTPLOT, --OutputPlot OUTPUTPLOT\n                        Name of output file, a PDF of the bar chart (default: None)\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "bar_plot_conditions <a name=\"Bar_Plot_Conditions\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Produces a bar plot showing the counts of conditions with a certain number of plates lost at different thresholds of Variance and Mann-Whitney mean p-value variance .\n\n```\nusage: bar_plot_conditions [-h] [-i INPUTFILE] [-o OUTPUTPLOT]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        The input file for the module. Uses the output files from pass_fail_conditions, either Variance or Mann_Whitney. (default: None)\n  -o OUTPUTPLOT, --OutputPlot OUTPUTPLOT\n                        Name of output file, a PDF of the bar chart (default: None)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "mw_plates_to_remove <a name=\"MW_Plates_to_Remove\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Outputs a list of plates which were removed at a certain chosen threshold for the Mann-Whitney test. Also outputs a new dataset to go back into the process of normalisation and scoring, but with detrimental plates removed. \n\n```\nusage: mw_plates_to_remove [-h] [-i INPUTFILE] [-o OUTPUTFILE] [-od ORIGINAL_DATASET] [-or OUTPUT_REMOVED] [-t THRESHOLD]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        Input file is the mean output from mw_plate_level (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        A CSV file with the name of the plates that were removed and their file names. (default: None)\n  -od ORIGINAL_DATASET, --Original_Dataset ORIGINAL_DATASET\n                        The original .csv dataset used in the first stage or the output of z_plates_to_remove to remove more plates (default: None)\n  -or OUTPUT_REMOVED, --Output_removed OUTPUT_REMOVED\n                        A .csv dataset with detrimental plates removed. (default: None)\n  -t THRESHOLD, --Threshold THRESHOLD\n                        A chosen threshold, usually based off of the bar chart produced by bar_plot_plates. (default: None)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "z_plates_to_remove <a name=\"Z_Plates_to_Remove\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "    \nOutputs a list of plates which were removed at a certain chosen threshold for the Z-score test. Also outputs a new dataset to go back into the process of normalisation and scoring, but with detrimental plates removed. \n\n```\nusage: z_plates_to_remove [-h] [-i INPUTFILE] [-o OUTPUTFILE] [-od ORIGINAL_DATASET] [-or OUTPUT_REMOVED] [-t THRESHOLD]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        output from z_score_count (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        A CSV file with the name of the plates that were removed and their file names. (default: None)\n  -od ORIGINAL_DATASET, --Original_Dataset ORIGINAL_DATASET\n                        The original .csv dataset used in the first stage or the output of mw_plates_to_remove to remove more plates (default: None)\n  -or OUTPUT_REMOVED, --Output_removed OUTPUT_REMOVED\n                        A .csv dataset with detrimental plates removed. (default: None)\n  -t THRESHOLD, --Threshold THRESHOLD\n                        A chosen threshold, usually based off of the bar chart produced by bar_plot_plates. (default: None)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "mw_conditions_to_remove <a name=\"MW_Conditions_to_Remove\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Outputs a list of conditions which were removed at a certain chosen threshold for the Mann Whitney Condition Level test. Also outputs a new dataset to go back into the process of normalisation and scoring, but with detrimental plates removed.\n\n```\nusage: mw_conditions_to_remove [-h] [-i INPUTFILE] [-o OUTPUTFILE] [-od ORIGINAL_DATASET] [-or OUTPUT_REMOVED] [-t THRESHOLD]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        output from mw_condition_level (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        A CSV file with the name of the plates that were removed and their file names. (default: None)\n  -od ORIGINAL_DATASET, --Original_Dataset ORIGINAL_DATASET\n                        The original .csv dataset used in the first stage or the output of mw_plates_to_remove or z_plates_to_remove or variance_conditions_to_remove to remove more plates (default: None)\n  -or OUTPUT_REMOVED, --Output_removed OUTPUT_REMOVED\n                        A .csv dataset with detrimental plates removed. (default: None)\n  -t THRESHOLD, --Threshold THRESHOLD\n                        A chosen threshold, usually based off of the bar chart produced by Bar_plot_Condition.py. (default: None)\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "variance_conditions_to_remove <a name=\"Variance_Conditions_to_Remove\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Outputs a list of conditions which were removed at a certain chosen threshold for the variance test. Also outputs a new dataset to go back into the process of normalisation and scoring, but with detrimental plates removed.\n\n```\nusage: variance_conditions_to_remove [-h] [-i INPUTFILE] [-o OUTPUTFILE] [-od ORIGINAL_DATASET] [-or OUTPUT_REMOVED] [-t THRESHOLD]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        output from condition_variance (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        A CSV file with the name of the plates that were removed and their file names. (default: None)\n  -od ORIGINAL_DATASET, --Original_Dataset ORIGINAL_DATASET\n                        The original .csv dataset used in the first stage or the output of mw_plates_to_remove or z_plates_to_remove to remove more plates (default: None)\n  -or OUTPUT_REMOVED, --Output_removed OUTPUT_REMOVED\n                        A .csv dataset with detrimental plates removed. (default: None)\n  -t THRESHOLD, --Threshold THRESHOLD\n                        A chosen threshold, usually based off of the bar chart produced by Bar_plot_Condition.py. (default: None)\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "s_scores <a name=\"S_Scores\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Computes the S-scores from the normalised dataset. \n\n```\nusage: s_scores [-h] [-i INPUTFILE] [-o OUTPUTFILE]\n\nComputes the S-scores from the normalised dataset.\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        The normalised csv file from check_normalisation (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        A CSV file of the dataset as S-scores (default: None)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "add_gene_names <a name=\"Add_Gene_Names\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Add the gene names from the plate info files to make the final dataset. \n\nThe plate info files must be in a folder by themselves and should be .txt files. Files such also be numbered e.g:\n\n```\n\ud83d\udcc2Plate_info\n \u2523 \ud83d\udcdcplat1.txt\n \u2517 \ud83d\udcdcplat2.txt\n```\n\nPlate info files should be formatted as such:\n\n| Row\t          | Column      | Strain | \n| ------------- |:-------------:| :-----: |\n| 1          | 1 |  PA1230   |\n| 1        | 2 |  PA2543   |\n\n```\nusage: add_gene_names [-h] [-i INPUTFILE] [-o OUTPUTPATH] [-p PATH]\n\nAdd the gene names from the plate info files to make the final dataset. The\nplate info files must be in a folder by themselves and should be .txt files.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUTFILE, --InputFile INPUTFILE\n                        The CSV output of S_Scores.py (default: None)\n  -o OUTPUTPATH, --Outputpath OUTPUTPATH\n                        A path a prefix for the output files E.g\n                        ~/Desktop/ChemGAPP would make\n                        ChemGAPP_Final_Dataset.txt . (default: None)\n  -p PATH, --PATH PATH  The path to the folder containing the plate info\n                        files. (default: None)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "cosine_similarity <a name=\"Cosine_Similarity\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Calculates the cosine similarity scores for the phenotypic profiles of genes from the same operon and genes from different operons. Produces a density plot of the cosine similarity scores for genes of the same and different operons. Produces an ROC curve testing models ability at different threshold. \n\n```\nusage: cosine_similarity [-h] [-i INPUTFILE] [-o OUTPUTFILE] [-or OUTPUT_ROC_CURVE] [-od OUTPUT_DENSITY_PLOT] [-clus CLUSTER_FILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  -i INPUTFILE, --InputFile INPUTFILE\n                        The dataset with gene names added. Output from add_gene_names (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        List of genes compared and the cosine similarity score as well as if they belong to the same operon (default: None)\n  -or OUTPUT_ROC_CURVE, --Output_ROC_curve OUTPUT_ROC_CURVE\n                        Plot of the ROC curve and AUC score. (default: None)\n  -od OUTPUT_DENSITY_PLOT, --Output_Density_plot OUTPUT_DENSITY_PLOT\n                        Density plot of the cosine similarity scores for same and different operons. (default: None)\n  -clus CLUSTER_FILE, --Cluster_file CLUSTER_FILE\n                        A CSV file containing the operon clusters for each gene within the bacterium of interest, where columns = (Cluster,Gene). (default: None)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "chemgapp_small <a name=\"ChemGAPP_Small\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "ChemGAPP Small is an extension within ChemGAPP for the analysis of small scale chemical genomic screens. ChemGAPP Small produces three types of plots, a heatmap, bar plots and swarm plots. For the bar plot and heatmap, ChemGAPP Small compares the mean colony size of within plate replicates to the mean colony size of the within plate wildtype replicates, producing a fitness ratio. The bar plots are then optionally grouped by strain or by condition. The heatmap displays all conditions and strains. For the swarm plots each mutant colony size is divided by the mean colony size of the wildtype, to produce the fitness ratio. A one-way ANOVA and Tukey-HSD analysis determines the significance in difference between each mutant fitness ratio distribution and the wildtype fitness ratio distribution.\n\nEnsure IRIS file names are in the format: `CONDITION-concentration-platenumber_replicate.JPG.iris`\n\nE.g. `AMPICILLIN-50mM-6_B.JPG.iris`\n\nWhere concentrations have decimals, use a comma instead of a period:\n\nE.g. `AMPICILLIN-0,5mM-6_B.JPG.iris`\n\n```\nusage: chemgapp_small [-h] [-p PATH] [-o OUTPUTFILE_PREFIX]\n                      [-pf PLATEINFOPATH] [-m MAX_COLONY_SIZE] [-wt WILDTYPE]\n                      [-cd CONDITION] [-it IRIS_TYPE]\n                      [-col_plot COLOURPALETTE] [-col_heat COLOURHEATMAP]\n                      [-wd WIDTH] [-ht HEIGHT] [-hwd HEATMAP_WIDTH]\n                      [-hht HEATMAP_HEIGHT] [-hs HEATMAP_FONTSIZE]\n                      [-r ROTATION] [-cs CIRCLESIZE] [-g GROUP] [-pt PLOTTYPE]\n                      [-rm REMOVE_STRAIN] [-ymax Y_MAX] [-ymin Y_MIN]\n\nAnalyses small scale chemical genomic screen data\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p PATH, --PATH PATH  Path to folder which contains IRIS files (default:\n                        None)\n  -o OUTPUTFILE_PREFIX, --outputfile_prefix OUTPUTFILE_PREFIX\n                        Path and prefix for output file (default: None)\n  -pf PLATEINFOPATH, --PlateInfoPath PLATEINFOPATH\n                        The path to the folder containing the plate info\n                        files. (default: None)\n  -m MAX_COLONY_SIZE, --max_colony_size MAX_COLONY_SIZE\n                        Maximum colony size allowed, any colony larger than\n                        this will be removed (default: False)\n  -wt WILDTYPE, --WildType WILDTYPE\n                        If comparing to WT in same condition: Name of wild\n                        type strain within plate info file. (default: None)\n  -cd CONDITION, --Condition CONDITION\n                        If comparing mutants to themselves within a control\n                        condition: Name of condition. (default: None)\n  -it IRIS_TYPE, --IRIS_type IRIS_TYPE\n                        Input IRIS morphology to test. Options:\n                        size,circularity,opacity (default: size)\n  -col_plot COLOURPALETTE, --colourpalette COLOURPALETTE\n                        Name of Seaborn colour palette to use for the bar and\n                        swarm plots. (default: icefire)\n  -col_heat COLOURHEATMAP, --colourheatmap COLOURHEATMAP\n                        Name of Seaborn colour palette to use for the heatmap.\n                        (default: bwr_r)\n  -wd WIDTH, --width WIDTH\n                        Figure width to use for the graphs. (default: 5)\n  -ht HEIGHT, --height HEIGHT\n                        Figure height to use for the graphs. (default: 5)\n  -hwd HEATMAP_WIDTH, --heatmap_width HEATMAP_WIDTH\n                        Figure width to use for the heatmap. (default: 10)\n  -hht HEATMAP_HEIGHT, --heatmap_height HEATMAP_HEIGHT\n                        Figure height to use for the heatmap. (default: 10)\n  -hs HEATMAP_FONTSIZE, --heatmap_fontsize HEATMAP_FONTSIZE\n                        Font size of heatmap annotation. To remove annotation\n                        set to 0 (default: 6)\n  -r ROTATION, --rotation ROTATION\n                        X Axis label rotation (default: 90)\n  -cs CIRCLESIZE, --CircleSize CIRCLESIZE\n                        SwarmPlot circle size (default: 2.5)\n  -g GROUP, --group GROUP\n                        Group bar plots by strain or condition. Options =\n                        strain, condition. (default: condition)\n  -pt PLOTTYPE, --PlotType PLOTTYPE\n                        Type of Plot. Options: barplot, swarmplot (default:\n                        barplot)\n  -rm REMOVE_STRAIN, --remove_strain REMOVE_STRAIN\n                        txt file of strain names to remove separated by ';'.\n                        Names must match those in plate information file. E.g.\n                        mutant1;mutant2;mutant4 (default: None)\n  -ymax Y_MAX, --y_max Y_MAX\n                        Maximum limit for y axis (default: None)\n  -ymin Y_MIN, --y_min Y_MIN\n                        Minimum limit for y axis (default: None)\n\n```     \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "gi_dataset <a name=\"GI_Dataset\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "gi_dataset calculates the fitness ratio of two single mutant strains and a double knockout in comparison to the wildtype. It also calculates the expected double knockout fitness ratio for comparison to the observed fitness ratio. This outputs a Colony_Size.csv file and Interaction_Score.csv file for each secondary gene within the pair.\n\nEnsure IRIS file names are in the format: `SecondaryGeneName_replicate.JPG.iris`\n\nE.g. `MexB_A.JPG.iris`\n\n```\n\nusage: gi_dataset [-h] [-i INPUTFILE] [-p PATH] [-n NAMEINFOFILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUTFILE, --inputfile INPUTFILE\n                        Input IRIS file. (default: None)\n  -p PATH, --PATH PATH  Path for the output files. (default: None)\n  -n NAMEINFOFILE, --nameinfofile NAMEINFOFILE\n                        The plate information file. Plate info files should be txt files, with the columns: Row, Column, Strain, Replicate, Order, Set. (default: None)\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "gi_barplot <a name=\"GI_Barplot\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "GI_Barplot produces a grouped bar plot for all Interaction_score.csv files within the given directory.  \n\n```\n\nusage: gi_barplot [-h] [-p PATH] [-o OUTPUTFILE] [-g PRIMARYGENE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p PATH, --PATH PATH  Path to Interaction Score Files (default: None)\n  -o OUTPUTFILE, --OutputFile OUTPUTFILE\n                        A PDF file of the final bar plot. (default: None)\n  -g PRIMARYGENE, --PrimaryGene PRIMARYGENE\n                        The primary interacting gene being compared (default: None)\n\n```\n\n### ChemGAPP Big\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999998873506,
      "result": {
        "original_header": "Package:",
        "type": "Text_excerpt",
        "value": "- The easiest way to install the package is via `pip` :\n```\npip install ChemGAPP\n```\n \n- The package module files can also be downloaded and run as a python or bin files. To download the files run:\n```\ngit clone https://github.com/HannahMDoherty/ChemGAPP\n```\n- Then run:\n```\npip install -r requirements.txt\n```\nor \nBASH4*\n \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9746957543856564,
      "result": {
        "original_header": "Streamlit applications:",
        "type": "Text_excerpt",
        "value": "  \n  - The graphical interfaces can be run using streamlit. \n    - First download the APP files\n    - Ensure you have Python 3. This can be easily downloaded by installing Anaconda-Naviagator (available here: https://www.anaconda.com/products/distribution)\n  - For Mac:\n    - Follow the below instructions.\n  - For Windows:\n    - Within Anaconda-Navigator click on the `Environments` tab, then for `base (root)` click the green play button and select `Open Terminal`. Then follow the below instructions. \n\n  - For ChemGAPP Big, you need to clone the repository, navigate into the `ChemGAPP_APPs` directory and then the `ChemGAPP_Big` directory and launch the application. These steps can be performed using the following commands in terminal:\n```\ngit clone https://github.com/HannahMDoherty/ChemGAPP\ncd ChemGAPP/ChemGAPP_Apps/ChemGAPP_Big\npip install -r requirements.txt\nstreamlit run ChemGAPP_Big.py\n```\n \nThe commmand provides a link to the following front web application:\n<p align=\"center\">\n<img src=\"https://github.com/HannahMDoherty/ChemGAPP/blob/main/ChemGAPP_APP.png\" width=\"500\" />\n</p> \n  - For ChemGAPP_Small, you need to clone the repository, navigate into the `ChemGAPP_APPs` directory and then the `ChemGAPP_Small` directory and launch the application. These steps can be performed using the following commands in terminal:\n```\ngit clone https://github.com/HannahMDoherty/ChemGAPP\ncd ChemGAPP/ChemGAPP_Apps/ChemGAPP_Small\npip install -r requirements.txt\nstreamlit run ChemGAPP_small.py\n```\n \nThe commmand provides a link to the following front web application:\n<p align=\"center\">\n<img src=\"https://github.com/HannahMDoherty/ChemGAPP/blob/main/ChemGAPP_Small.png\" width=\"500\" />\n</p> \n  - For ChemGAPP_GI, you need to clone the repository, navigate into the `ChemGAPP_APPs` directory and then the `ChemGAPP_GI` directory and launch the application. These steps can be performed using the following commands in terminal:\n```\ngit clone https://github.com/HannahMDoherty/ChemGAPP\ncd ChemGAPP/ChemGAPP_Apps/ChemGAPP_GI\npip install -r requirements.txt\nstreamlit run ChemGAPP_GI.py\n```\nThe commmand provides a link to the following front web application:\n<p align=\"center\">\n<img src=\"https://github.com/HannahMDoherty/ChemGAPP/blob/main/ChemGAPP_GI.png\" width=\"500\" />\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8907453618779606,
      "result": {
        "original_header": "Step_1_Normalisation.py <a name=\"Step_1_Normalisation\"></a>",
        "type": "Text_excerpt",
        "value": "1- Upload your IRIS files. \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8186635712545005,
      "result": {
        "original_header": "iris_to_dataset <a name=\"Iris_to_dataset\"></a>",
        "type": "Text_excerpt",
        "value": "`platenumber` refers to the source plate number, i.e which mutants are on the experiment plate. This will match the plate information file number in later steps. \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9381067017341103,
      "result": {
        "original_header": "Step_1_Normalisation.py <a name=\"Step_1_Normalisation\"></a>",
        "type": "Text_excerpt",
        "value": "\n2- Enter a path to the folder you would like to save the output files to. Ensure you include a prefix which will be added to the start of all output file names e.g: ~/Projects/Test \n\n4- Press `Begin!`\n \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9042663523654311,
      "result": {
        "original_header": "Step_3_S_Score_Calculator.py <a name=\"Step_3_S_Score_Calculator\"></a>",
        "type": "Text_excerpt",
        "value": "2- Select if you want to score the original dataset, the curated dataset or both.\n \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8804307014415099,
      "result": {
        "original_header": "Step_4_Dataset_Comparison.py <a name=\"Step_4_Dataset_Comparison\"></a>",
        "type": "Text_excerpt",
        "value": "1- Upload your cluster file.  \nThe Genes must match the names assigned to the scored dataset in the step 3. \n2- Select if you want to analyse the averaged or non-averaged datasets from Step 3. \n3- Press Begin! \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9338202053645531,
      "result": {
        "original_header": "Step_1_chemgapp_small <a name=\"Step_1_ChemGAPP_Small\"></a>",
        "type": "Text_excerpt",
        "value": "\n2- Enter a path to the folder you would like to save the output files to. Ensure you include a prefix which will be added to the start of all output file names e.g: ~/Desktop/project/Test \nThese should be txt files with the format: \n| Row | Column | Strain |\n|  ------------- | :-------------: | :-------------: |\n| 1 | 1 | WT |\n| 1 | 2 | WT  |\n| 1 | 3 | Mutant1 |\n| 1 | 4 | Mutant1  |\n| ... |...| ... |\n| 16 | 23 | Mutantx |\n| 16 | 24 | Mutantx | \nIf you choose `Wildtype`: \nIf you choose `Control Condition`: \n6- Select how you want the plots to be grouped. Either by strain or by condition. \n    * Files will be downloaded to your Downloads Folder \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8979406325835055,
      "result": {
        "original_header": "Step_1_Interaction_Scores.py <a name=\"Step_1_Interaction_Scores\"></a>",
        "type": "Text_excerpt",
        "value": "1. Input a path to your desired output folder. This is where your files will be stored. \n```\n    E.g. ~/Desktop/GI_Files\n``` \n2. Upload your IRIS Files. \n\n    * The `Order` column must match these values: \n\n4. Press Begin. \n \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8296132472066777,
      "result": {
        "original_header": "Step_1_chemgapp_small <a name=\"Step_1_ChemGAPP_Small\"></a>",
        "type": "Text_excerpt",
        "value": "`Test_Intial_dataset.csv` \n`Test_Normalised_dataset.csv` \n`Test_Scored_Dataset.csv` \n`Test_Final_dataset.csv` \n\n10- To save bar plot images, click on the `Download image` button beneath the plot. This will save the image as a pdf file. \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8066876648488679,
      "result": {
        "original_header": "gi_dataset <a name=\"GI_Dataset\"></a>",
        "type": "Text_excerpt",
        "value": "Ensure IRIS file names are in the format: `SecondaryGeneName_replicate.JPG.iris` \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8712949547242212,
      "result": {
        "original_header": "Test files <a name=\"package\"></a>",
        "type": "Text_excerpt",
        "value": "2. `ChemGAPP_Small/`  Folder containing test IRIS files and plate information file ChemGAPP Small. \n3. `ChemGAPP_GI/` Folder containing test IRIS files and plate information file ChemGAPP GI. \n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HannahMDoherty/ChemGAPP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA."
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License <a name=\"license\"></a>",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n\n----\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/ChemGAPP_APP.png"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ChemGAPP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "HannahMDoherty"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 423010,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:29:45",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "If downloaded via pip commands can be initiated from any folder. The help instruction is called using -h option. E.g:",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>",
          "Streamlit APPs",
          "ChemGAPP GI"
        ],
        "type": "Text_excerpt",
        "value": "```\niris_to_dataset [-h] [-p PATH] [-o OUTPUTFILE]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python files are initiated using the python command. The help instruction is called using -h option. E.g:",
        "parent_header": [
          "ChemGAPP: A Package for *Chem*ical *G*enomic *A*nalysis and *P*henotypic *P*rofiling.",
          "Table of Contents",
          "Manual <a name=\"manual\"></a>",
          "Streamlit APPs",
          "ChemGAPP GI"
        ],
        "type": "Text_excerpt",
        "value": "```\npython Iris_to_Dataset.py [-h] [-p PATH] [-o OUTPUTFILE]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannahMDoherty/ChemGAPP/main/README.md",
      "technique": "header_analysis"
    }
  ]
}