{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nanoporetech/dorado"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-17T23:12:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-04T09:51:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Oxford Nanopore's Basecaller"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Sequencing Summary",
        "parent_header": [
          "Dorado",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "The `dorado summary` command outputs a tab-separated file with read level sequencing information from the BAM file generated during basecalling. To create a summary, run:\n\n```\n$ dorado summary <bam> > summary.tsv\n```\n\nNote that summary generation is only available for reads basecalled from POD5 files. Reads basecalled from .fast5 files are not compatible with the summary command.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9688863513302295,
      "result": {
        "original_header": "Dorado",
        "type": "Text_excerpt",
        "value": "Dorado is a high-performance, easy-to-use, open source basecaller for Oxford Nanopore reads.\n \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9889112089248894,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "* One executable with sensible defaults, automatic hardware detection and configuration.\n* Runs on Apple silicon (M1/2 family) and Nvidia GPUs including multi-GPU with linear scaling (see [Platforms](#platforms)).\n* [Modified basecalling](#modified-basecalling).\n* [Duplex basecalling](#duplex) (watch the following video for an introduction to [Duplex](https://youtu.be/8DVMG7FEBys)).\n* Simplex [barcode classification](#barcode-classification).\n* Support for aligned read output in SAM/BAM.\n* Initial support for [poly(A) tail estimation](#polya-tail-estimation).\n* Support for [single-read error correction](#read-error-correction).\n* [POD5](https://github.com/nanoporetech/pod5-file-format) support for highest basecalling performance.\n* Based on libtorch, the C++ API for pytorch.\n* Multiple custom optimisations in CUDA and Metal for maximising inference performance. \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9093572012624378,
      "result": {
        "original_header": "Platforms",
        "type": "Text_excerpt",
        "value": "Dorado is heavily-optimised for Nvidia A100 and H100 GPUs and will deliver maximal performance on systems with these GPUs. \nLinux or Windows systems not listed above but which have Nvidia GPUs with \u22658 GB VRAM and architecture from Pascal onwards (except P100/GP100) have not been widely tested but are expected to work. When basecalling with Apple devices, we recommend systems with \u226516 GB of unified memory. \nAWS Benchmarks on Nvidia GPUs for Dorado 0.3.0 are available [here](https://aws.amazon.com/blogs/hpc/benchmarking-the-oxford-nanopore-technologies-basecallers-on-aws/). Please note: Dorado's basecalling speed is continuously improving, so these benchmarks may not reflect performance with the latest release.\n \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9348816983515901,
      "result": {
        "original_header": "Decoding Dorado model names",
        "type": "Text_excerpt",
        "value": "The names of Dorado models are systematically structured, each segment corresponding to a different aspect of the model, which include both chemistry and run settings. Below is a sample model name explained: \n- **Analyte Type (`dna`)**: This denotes the type of analyte being sequenced. For DNA sequencing, it is represented as `dna`. If you are using a Direct RNA Sequencing Kit, this will be `rna002` or `rna004`, depending on the kit. \n- **Pore Type (`r10.4.1`)**: This section corresponds to the type of flow cell used. For instance, FLO-MIN114/FLO-FLG114 is indicated by `r10.4.1`, while FLO-MIN106D/FLO-FLG001 is signified by `r9.4.1`. \n- **Chemistry Type (`e8.2`)**: This represents the chemistry type, which corresponds to the kit used for sequencing. For example, Kit 14 chemistry is denoted by `e8.2` and Kit 10 or Kit 9 are denoted by `e8`. \n- **Translocation Speed (`400bps`)**: This parameter, selected at the run setup in MinKNOW, refers to the speed of translocation. Prior to starting your run, a prompt will ask if you prefer to run at 260 bps or 400 bps. The former yields more accurate results but provides less data. As of MinKNOW version 23.04, the 260 bps option has been deprecated. \n- **Model Type (`hac`)**: This represents the size of the model, where larger models yield more accurate basecalls but take more time. The three types of models are `fast`, `hac`, and `sup`. The `fast` model is the quickest, `sup` is the most accurate, and `hac` provides a balance between speed and accuracy. For most users, the `hac` model is recommended. \n- **Model Version Number (`v5.0.0`)**: This denotes the version of the model. Model updates are regularly released, and higher version numbers typically signify greater accuracy. \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9728332365168603,
      "result": {
        "original_header": "**DNA models:**",
        "type": "Text_excerpt",
        "value": "Below is a table of the available basecalling models and the modified basecalling models that can be used with them. The bolded models are for the latest released condition with 5 kHz data. \nThe versioning of modification models is bound to the basecalling model. This means that the modification model version is reset for each new simplex model release. For example, `6mA@v1` compatible with `v4.3.0` basecalling models is more recent than `6mA@v2` compatible with `v4.2.0` basecalling models. \n| Basecalling Models | Compatible<br />Modifications | Modifications<br />Model<br />Version | Data<br />Sampling<br />Frequency |\n| :-------- | :------- | :--- | :--- |\n| **dna_r10.4.1_e8.2_400bps_fast@v5.0.0** | | | 5 kHz |\n| **dna_r10.4.1_e8.2_400bps_hac@v5.0.0** | 4mC_5mC<br />5mCG_5hmCG<br />5mC_5hmC<br />6mA<br /> | v2<br />v2<br />v2<br />v2 | 5 kHz |\n| **dna_r10.4.1_e8.2_400bps_sup@v5.0.0** | 4mC_5mC<br />5mCG_5hmCG<br />5mC_5hmC<br />6mA<br /> | v2<br />v2.0.1<br />v2.0.1<br />v2 | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_fast@v4.3.0 | | | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_hac@v4.3.0 | 5mCG_5hmCG<br />5mC_5hmC<br />6mA<br /> | v1<br />v1<br />v2 | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_sup@v4.3.0 | 5mCG_5hmCG<br />5mC_5hmC<br />6mA<br /> | v1<br />v1<br />v2 | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_fast@v4.2.0 | 5mCG_5hmCG | v2 | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_hac@v4.2.0 | 5mCG_5hmCG | v2 | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_sup@v4.2.0 | 5mCG_5hmCG<br />5mC_5hmC<br />5mC<br />6mA<br />| v3.1<br />v1<br />v2<br />v3| 5 kHz |\n| dna_r10.4.1_e8.2_400bps_fast@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_hac@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_sup@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_fast@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_hac@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_sup@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_fast@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_hac@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_sup@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_fast@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_hac@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_sup@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_fast@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_hac@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_sup@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_fast@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_hac@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_sup@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r9.4.1_e8_sup@v3.6 |  |  | 4 kHz |\n| dna_r9.4.1_e8_fast@v3.4 | 5mCG_5hmCG<br />5mCG | v0<br />v0.1 | 4 kHz |\n| dna_r9.4.1_e8_hac@v3.3 | 5mCG_5hmCG<br />5mCG | v0<br />v0.1 |4 kHz |\n| dna_r9.4.1_e8_sup@v3.3 | 5mCG_5hmCG<br />5mCG | v0<br />v0.1 |4 kHz |\n \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.953798338041167,
      "result": {
        "original_header": "**RNA models:**",
        "type": "Text_excerpt",
        "value": "**Note:** The BAM format does not support `U` bases. Therefore, when Dorado is performing RNA basecalling, the resulting output files will include `T` instead of `U`. This is consistent across output file types. \n| Basecalling Models | Compatible<br />Modifications | Modifications<br />Model<br />Version | Data<br />Sampling<br />Frequency |\n| :-------- | :------- | :--- | :--- |\n| **rna004_130bps_fast@v5.1.0** | | | 4 kHz |\n| **rna004_130bps_hac@v5.1.0** | m5C<br />m6A_DRACH<br />inosine_m6A<br />pseU | v1<br />v1<br />v1<br />v1 | 4 kHz |\n| **rna004_130bps_sup@v5.1.0** | m5C<br />m6A_DRACH<br />inosine_m6A<br />pseU | v1<br />v1<br />v1<br />v1 | 4 kHz |\n| rna004_130bps_fast@v5.0.0 | | | 4 kHz |\n| rna004_130bps_hac@v5.0.0 | m6A<br />m6A_DRACH<br />pseU | v1<br />v1<br />v1 | 4 kHz |\n| rna004_130bps_sup@v5.0.0 | m6A<br />m6A_DRACH<br />pseU | v1<br />v1<br />v1 | 4 kHz |\n| rna004_130bps_fast@v3.0.1 | | | 4 kHz |\n| rna004_130bps_hac@v3.0.1 | | | 4 kHz |\n| rna004_130bps_sup@v3.0.1 | m6A_DRACH | v1 | 4 kHz |\n| rna002_70bps_fast@v3 | | | 3 kHz |\n| rna002_70bps_hac@v3 | | | 3 kHz | \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8453723522745977,
      "result": {
        "original_header": "Automatic model selection complex",
        "type": "Text_excerpt",
        "value": "The `model` argument in dorado can specify either a model path or a model **_complex_**. A model complex must start with the **simplex model speed**, and follows this syntax:\n```\n(fast|hac|sup)[@(version|latest)][,modification[@(version|latest)]][,...]\n```\n \nAutomatically selected modification models will always match the base simplex model version and will be the latest compatible version unless a specific version is set by the user. Automatic modification model selection will not allow the mixing of modification models which are bound to different simplex model versions.   \n| Model Complex | Description |\n| :------------ | :---------- |\n| fast  | Latest compatible **fast** model |\n| hac  | Latest compatible **hac** model |\n| sup  | Latest compatible **sup** model |\n| hac@latest | Latest compatible **hac** simplex basecalling model |\n| hac@v4.2.0  | Simplex basecalling **hac** model with version `v4.2.0` |\n| hac@v3.5 | Simplex basecalling **hac** model with version `v3.5.0` |\n| hac,5mCG_5hmCG  | Latest compatible **hac** simplex model and latest **5mCG_5hmCG** modifications model for the chosen basecall model |\n| hac,5mCG_5hmCG@v2  | Latest compatible **hac** simplex model and **5mCG_5hmCG** modifications model with version `v2.0.0` |\n| sup,5mCG_5hmCG,6mA  | Latest compatible **sup** model and latest compatible **5mCG_5hmCG** and **6mA** modifications models |\n \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Model search directory and temporary model downloads",
        "parent_header": [
          "Dorado",
          "Automatic model selection complex"
        ],
        "type": "Text_excerpt",
        "value": "Once the automatic model selection process has found the appropriate model given the input data, it will search for existing model directories to avoid downloading models unnecessarily. The behaviour of this search can be controlled as follows:\n\n1. Setting the `--models-directory` CLI argument - The `--models-directory` argument can be used to specify a directory where models will be searched.\n2. Setting the `DORADO_MODELS_DIRECTORY` environment variable - This is the same as setting `--models-directory` but has lower priority than the CLI equivalent.\n3. If neither `--models-directory` or `DORADO_MODELS_DIRECORY` are set then the current working directory is searched.\n\nIf `--models-directory` or `DORADO_MODELS_DIRECTORY` is set automatically downloaded models will persist, otherwise models will be downloaded into a local temporary directory\nand deleted after dorado has finished.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nanoporetech/dorado/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Read Error Correction",
        "parent_header": [
          "Dorado",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Dorado supports single-read error correction with the integration of the [HERRO](https://github.com/lbcb-sci/herro) algorithm. HERRO uses all-vs-all alignment followed by haplotype-aware correction using a deep learning model to achieve higher single-read accuracies. The corrected reads are primarily useful for generating *de novo* assemblies of diploid organisms.\n\nTo correct reads, run:\n```\n$ dorado correct reads.fastq > corrected_reads.fasta\n```\n\nDorado correct only supports FASTQ(.gz) as the input and generates a FASTA file as output. The input can be uncompressed or compressed with `bgz`. An index file is generated for the input FASTQ file in the same folder unless one is already present. Please ensure that the folder with the input file is writeable by the `dorado` process and has sufficient disk space.\n\nThe error correction tool is both compute and memory intensive. As a result, it is best run on a system with multiple high performance CPU cores ( >= 64 cores), large system memory ( >= 256GB) and a modern GPU with a large VRAM ( >= 32GB).\n\nAll required model weights are downloaded automatically by Dorado. However, the weights can also be pre-downloaded and passed via command line in case of offline execution. To do so, run:\n```\n$ dorado download --model herro-v1\n$ dorado correct -m herro-v1 reads.fastq > corrected_reads.fasta\n```\nDorado Correct now also provides a feature to run mapping (CPU-only stage) and inference (GPU-intensive stage) individually. This enables separation of the CPU and GPU heavy stages into individual steps which can even be run on different nodes with appropriate compute characteristics. Example:\n```\n$ dorado correct reads.fastq --to-paf > overlaps.paf\n$ dorado correct reads.fastq --from-paf overlaps.paf > corrected_reads.fasta\n```\nGzipped PAF is currently not supported for the `--from-paf` option.\n\nAdditionally, if a run was stopped or has failed, Dorado Correct provides a \"resume\" functionality. The resume feature takes a list of previously corrected reads (e.g. a `.fai` index from the previous run) and skips the previously processed reads:\n```\n$ samtools faidx corrected_reads.1.fasta    # Output from the previously interrupted run.\n$ dorado correct reads.fastq --resume-from corrected_reads.1.fasta.fai > corrected_reads.2.fasta\n```\nThe input file format for the `--resume-from` feature can be any plain text file where the first whitespace-delimited column (or a full row) consists of sequence names to skip, one per row.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Troubleshooting",
        "parent_header": [
          "Dorado",
          "Running",
          "Read Error Correction"
        ],
        "type": "Text_excerpt",
        "value": "1. In case the process is consuming too much memory for your system, try running it with a smaller index size. For example:\n    ```\n    $ dorado correct reads.fastq --index-size 4G > corrected_reads.fasta\n    ```\n2. The auto-computed inference batch size may still be too high for your system. If you are experiencing warnings/errors regarding available GPU memory, try reducing the batch size / selecting it manually. For example:\n    ```\n    $ dorado correct reads.fastq --batch-size <number> > corrected_reads.fasta\n    ```\n3. In case your output FASTA file contains a very low amount of corrected reads compared to the input, please check the following:\n    - The input dataset has average read length `>=10kbp`. Dorado Correct is designed for long reads, and it will not work on short libraries.\n    - Input coverage is reasonable, preferrably `>=30x`.\n    - Check the average base qualities of the input dataset. Dorado Correct expects accurate inputs for both mapping and inference.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Library Path Errors",
        "parent_header": [
          "Dorado",
          "Troubleshooting Guide"
        ],
        "type": "Text_excerpt",
        "value": "Dorado comes equipped with the necessary libraries (such as CUDA) for its execution. However, on some operating systems, the system libraries might be chosen over Dorado's. This discrepancy can result in various errors, for instance,  `CuBLAS error 8`.\n\nTo resolve this issue, you need to set the `LD_LIBRARY_PATH` to point to Dorado's libraries. Use a command like the following on Linux (change path as appropriate):\n\n```\n$ export LD_LIBRARY_PATH=<PATH_TO_DORADO>/dorado-x.y.z-linux-x64/lib:$LD_LIBRARY_PATH\n```\n\nOn macOS, the equivalent export would be (change path as appropriate):\n\n```\n$ export DYLD_LIBRARY_PATH=<PATH_TO_DORADO>/dorado-x.y.z-osx-arm64/lib:$DYLD_LIBRARY_PATH\n```\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GPU Out of Memory Errors",
        "parent_header": [
          "Dorado",
          "Troubleshooting Guide"
        ],
        "type": "Text_excerpt",
        "value": "Dorado operates on a broad range of GPUs but it is primarily developed for Nvidia A100/H100 and Apple Silicon. Dorado attempts to find the optimal batch size for basecalling. Nevertheless, on some low-RAM GPUs, users may face out of memory crashes.\n\nA potential solution to this issue could be setting a manual batch size using the following command:\n\n`dorado basecaller --batchsize 64 ...`\n\n**Note:** Reducing memory consumption by modifying the `chunksize` parameter is not recommended as it influences the basecalling results.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 59
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nanoporetech/dorado/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nanoporetech/dorado"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Dorado"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/benchmark/generate_chunk_auto_batchsize_benchmarks.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/.gitlab/run_clang_tidy.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Dorado"
        ],
        "type": "Text_excerpt",
        "value": "First, download the relevant installer for your platform:\n\n - [dorado-0.8.1-linux-x64](https://cdn.oxfordnanoportal.com/software/analysis/dorado-0.8.1-linux-x64.tar.gz)\n - [dorado-0.8.1-linux-arm64](https://cdn.oxfordnanoportal.com/software/analysis/dorado-0.8.1-linux-arm64.tar.gz)\n - [dorado-0.8.1-osx-arm64](https://cdn.oxfordnanoportal.com/software/analysis/dorado-0.8.1-osx-arm64.zip)\n - [dorado-0.8.1-win64](https://cdn.oxfordnanoportal.com/software/analysis/dorado-0.8.1-win64.zip)\n\nOnce the relevant `.tar.gz` or `.zip` archive is downloaded, extract the archive to your desired location.\n\nYou can then call Dorado using the full path, for example:\n```\n$ /path/to/dorado-x.y.z-linux-x64/bin/dorado basecaller hac pod5s/ > calls.bam\n```\n\nOr you can add the bin path to your `$PATH` environment variable, and run with the `dorado` command instead, for example:\n```\n$ dorado basecaller hac pod5s/ > calls.bam\n```\n\nSee [DEV.md](DEV.md) for details about building Dorado for development.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Improving the Speed of Duplex Basecalling",
        "parent_header": [
          "Dorado",
          "Troubleshooting Guide"
        ],
        "type": "Text_excerpt",
        "value": "Duplex basecalling is an IO-intensive process and can perform poorly if using networked storage or HDD. This can generally be improved by splitting up POD5 files appropriately.\n\nFirstly install the POD5 python tools:\n\nThe POD5 documentation can be found [here](https://pod5-file-format.readthedocs.io/en/latest/docs/tools.html).\n\n\n```\n$ pip install pod5\n```\n\nThen run `pod5 view` to generate a table containing information to split on specifically, the \"channel\" information.\n\n```\n$ pod5 view /path/to/your/dataset/ --include \"read_id, channel\" --output summary.tsv\n```\n\nThis will create \"summary.tsv\" file which should look like:\n\n```\nread_id channel\n0000173c-bf67-44e7-9a9c-1ad0bc728e74    109\n002fde30-9e23-4125-9eae-d112c18a81a7    463\n...\n```\n\nNow run `pod5 subset` to copy records from your source data into outputs per-channel. This might take some time depending on the size of your dataset\n```\n$ pod5 subset /path/to/your/dataset/ --summary summary.tsv --columns channel --output split_by_channel\n```\n\nThe command above will create the output directory `split_by_channel` and write into it one pod5 file per unique channel.  Duplex basecalling these split reads will now be much faster.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9938295083295247,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "If you encounter any problems building or running Dorado, please [report an issue](https://github.com/nanoporetech/dorado/issues).\n \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9291784104542369,
      "result": {
        "original_header": "Platforms",
        "type": "Text_excerpt",
        "value": "| Platform | GPU/CPU | Minimum Software Requirements |\n| --- |---------|--------------|\n| Linux x86_64  | (G)V100, A100 | CUDA Driver \u2265450.80.02 |\n| | H100 | CUDA Driver \u2265520 |\n| Linux arm64 | Jetson Orin | Linux for Tegra \u226534.1.1 |\n| Windows x86_64 | (G)V100, A100 | CUDA Driver \u2265452.39 |\n| | H100 | CUDA Driver \u2265520 |\n| Apple | Apple Silicon (M1/M2) | | \nLinux or Windows systems not listed above but which have Nvidia GPUs with \u22658 GB VRAM and architecture from Pascal onwards (except P100/GP100) have not been widely tested but are expected to work. When basecalling with Apple devices, we recommend systems with \u226516 GB of unified memory. \nIf you encounter problems with running on your system, please [report an issue](https://github.com/nanoporetech/dorado/issues). \nAWS Benchmarks on Nvidia GPUs for Dorado 0.3.0 are available [here](https://aws.amazon.com/blogs/hpc/benchmarking-the-oxford-nanopore-technologies-basecallers-on-aws/). Please note: Dorado's basecalling speed is continuously improving, so these benchmarks may not reflect performance with the latest release.\n \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9300283047267086,
      "result": {
        "original_header": "Decoding Dorado model names",
        "type": "Text_excerpt",
        "value": "`dna_r10.4.1_e8.2_400bps_hac@v5.0.0` \n- **Translocation Speed (`400bps`)**: This parameter, selected at the run setup in MinKNOW, refers to the speed of translocation. Prior to starting your run, a prompt will ask if you prefer to run at 260 bps or 400 bps. The former yields more accurate results but provides less data. As of MinKNOW version 23.04, the 260 bps option has been deprecated. \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999998313160292,
      "result": {
        "original_header": "**DNA models:**",
        "type": "Text_excerpt",
        "value": "| Basecalling Models | Compatible<br />Modifications | Modifications<br />Model<br />Version | Data<br />Sampling<br />Frequency |\n| :-------- | :------- | :--- | :--- |\n| **dna_r10.4.1_e8.2_400bps_fast@v5.0.0** | | | 5 kHz |\n| **dna_r10.4.1_e8.2_400bps_hac@v5.0.0** | 4mC_5mC<br />5mCG_5hmCG<br />5mC_5hmC<br />6mA<br /> | v2<br />v2<br />v2<br />v2 | 5 kHz |\n| **dna_r10.4.1_e8.2_400bps_sup@v5.0.0** | 4mC_5mC<br />5mCG_5hmCG<br />5mC_5hmC<br />6mA<br /> | v2<br />v2.0.1<br />v2.0.1<br />v2 | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_fast@v4.3.0 | | | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_hac@v4.3.0 | 5mCG_5hmCG<br />5mC_5hmC<br />6mA<br /> | v1<br />v1<br />v2 | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_sup@v4.3.0 | 5mCG_5hmCG<br />5mC_5hmC<br />6mA<br /> | v1<br />v1<br />v2 | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_fast@v4.2.0 | 5mCG_5hmCG | v2 | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_hac@v4.2.0 | 5mCG_5hmCG | v2 | 5 kHz |\n| dna_r10.4.1_e8.2_400bps_sup@v4.2.0 | 5mCG_5hmCG<br />5mC_5hmC<br />5mC<br />6mA<br />| v3.1<br />v1<br />v2<br />v3| 5 kHz |\n| dna_r10.4.1_e8.2_400bps_fast@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_hac@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_sup@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_fast@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_hac@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_sup@v4.1.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_fast@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_hac@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_sup@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_fast@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_hac@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_sup@v4.0.0 | 5mCG_5hmCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_fast@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_hac@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_260bps_sup@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_fast@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_hac@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r10.4.1_e8.2_400bps_sup@v3.5.2 | 5mCG | v2 | 4 kHz |\n| dna_r9.4.1_e8_sup@v3.6 |  |  | 4 kHz |\n| dna_r9.4.1_e8_fast@v3.4 | 5mCG_5hmCG<br />5mCG | v0<br />v0.1 | 4 kHz |\n| dna_r9.4.1_e8_hac@v3.3 | 5mCG_5hmCG<br />5mCG | v0<br />v0.1 |4 kHz |\n| dna_r9.4.1_e8_sup@v3.3 | 5mCG_5hmCG<br />5mCG | v0<br />v0.1 |4 kHz |\n \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999934346,
      "result": {
        "original_header": "**RNA models:**",
        "type": "Text_excerpt",
        "value": "| Basecalling Models | Compatible<br />Modifications | Modifications<br />Model<br />Version | Data<br />Sampling<br />Frequency |\n| :-------- | :------- | :--- | :--- |\n| **rna004_130bps_fast@v5.1.0** | | | 4 kHz |\n| **rna004_130bps_hac@v5.1.0** | m5C<br />m6A_DRACH<br />inosine_m6A<br />pseU | v1<br />v1<br />v1<br />v1 | 4 kHz |\n| **rna004_130bps_sup@v5.1.0** | m5C<br />m6A_DRACH<br />inosine_m6A<br />pseU | v1<br />v1<br />v1<br />v1 | 4 kHz |\n| rna004_130bps_fast@v5.0.0 | | | 4 kHz |\n| rna004_130bps_hac@v5.0.0 | m6A<br />m6A_DRACH<br />pseU | v1<br />v1<br />v1 | 4 kHz |\n| rna004_130bps_sup@v5.0.0 | m6A<br />m6A_DRACH<br />pseU | v1<br />v1<br />v1 | 4 kHz |\n| rna004_130bps_fast@v3.0.1 | | | 4 kHz |\n| rna004_130bps_hac@v3.0.1 | | | 4 kHz |\n| rna004_130bps_sup@v3.0.1 | m6A_DRACH | v1 | 4 kHz |\n| rna002_70bps_fast@v3 | | | 3 kHz |\n| rna002_70bps_hac@v3 | | | 3 kHz | \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9911159067530623,
      "result": {
        "original_header": "Automatic model selection complex",
        "type": "Text_excerpt",
        "value": "Automatically selected modification models will always match the base simplex model version and will be the latest compatible version unless a specific version is set by the user. Automatic modification model selection will not allow the mixing of modification models which are bound to different simplex model versions.   \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8647462989934102,
      "result": {
        "original_header": "Available basecalling models",
        "type": "Text_excerpt",
        "value": "To download all available Dorado models, run:\n```\n$ dorado download --model all\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nanoporetech/dorado/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "basecalling, genomics, libtorch, nanopore"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Licence and Copyright",
        "parent_header": [
          "Dorado"
        ],
        "type": "Text_excerpt",
        "value": "(c) 2024 Oxford Nanopore Technologies PLC.\n\nDorado is distributed under the terms of the Oxford Nanopore Technologies PLC.  Public License, v. 1.0.  If a copy of the License was not distributed with this file, You can obtain one at http://nanoporetech.com\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dorado"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "nanoporetech"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 2372930,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 128682,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Metal",
        "size": 62116,
        "type": "Programming_language",
        "value": "Metal"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 35741,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 18745,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Raku",
        "size": 13514,
        "type": "Programming_language",
        "value": "Raku"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 2156,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Objective-C++",
        "size": 1380,
        "type": "Programming_language",
        "value": "Objective-C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 943,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pod5-file-format.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2024-10-03T15:37:26Z",
        "date_published": "2024-10-04T09:52:25Z",
        "description": "[0.8.1] (03 Oct 2024)\r\n\r\nThis release of Dorado includes fixes and improvements to the Dorado 0.8.0 release, including corrected configuration for DNA v5 SUP-compatible 5mC_5hmC and 5mCG_5hmCG models, improved cDNA poly(A) tail estimation for data from MinION flow cells, reduced basecaller startup time on supported GPUs, and more.\r\n\r\n* f74d8917ba3472e07ae4d00bb2e3a745048c8c84 - Corrected bug causing dna_r10.4.1_e8.2_400bps_sup@v5.0.0_5mC_5hmC@v2 to call CpG contexts only and dna_r10.4.1_e8.2_400bps_sup@v5.0.0_5mCG_5hmCG@v2 to call all contexts\r\n* eb4649442bbe1ef84eb72fd62e30586c9a45c10d - Improve cDNA poly(A) tail estimation for MinION flow cells\r\n* 762e88689b31099081a7fcd39b959ddc4c7eb2e1 - Cache batch sizes to significantly reduce basecaller startup time on supported GPUs\r\n* 22269a8eed928ed04fbf7731ff99fe4454f87493 - Prevent \"Trim interval is invalid for sequence\" error when performing trimming\r\n* f156ae6237fa4602d759dc6ee05b1b367e77c09c - Prevent write permission error for model download folder when file write is not required\r\n* fcb9d53ab168f42cdd02cfa740158a0ce0b5cc84 - Include run name in output files from `dorado demux` even if input files are FASTQ\r\n* a4c96490a4409d961ce59b642478ff453d217776 - BED file handling: only split columns on tabs, not spaces; load files with spaces in region names\r\n* e62cbc851a087d778fbde24ebe0ae85b96d28a9e - Allow comment lines in the middle of the BED file\r\n* f15c0b38286dccda86e3244e535e69e30edb60cd - Fix compilation in AppleClang 16",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.8.1",
        "name": "v0.8.1",
        "release_id": 178374390,
        "tag": "v0.8.1",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/178374390",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/178374390",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2024-09-16T19:44:22Z",
        "date_published": "2024-09-16T21:18:09Z",
        "description": "# [0.8.0] (16 Sept 2024)\r\n\r\nThis release of Dorado adds v5.1 RNA models with new `inosine_m6A` and `m5C` RNA modified base models, updates existing modified base models, improves the speed of v5 SUP basecalling models on A100/H100 GPUs, and enhances the flexibility and stability of `dorado correct`. It also introduces per-barcode configuration for poly(A) estimation with interrupted tails, adds new `--output-dir` and `--bed-file` arguments to Dorado basecalling commands, and includes a variety of other improvements for stability and usability.\r\n\r\n* a69c0a2987e60f3889cc56cd820e8a7713887f33 - Add v5.1.0 RNA basecalling models, including new `inosine_m6A` and `m5C` modified base models, and updated existing DNA and RNA modified base models\r\n* 8e3a8707be5248d7bcc47d3e89b80c0bdc9c2f36 - Improve speed of v5 SUP basecalling models on A100 and H100 GPUs\r\n* 6ee90189197d11bfe50e919067582da6eccf513e - Reduce false positive calls from v5 DNA modifed base models\r\n* 69cb26032d8393a781a9a3d32aa2ceb13ec65491 - Fix bug causing intermittent crashing with v5 SUP models\r\n* e9dec497a38fa2a1935f64d30e35db246da58a08 - Add `--resume-from` functionality to `dorado correct`\r\n* cb6eee1c3d63da2f1f11fb8fcc63418908154f81 - Decouple alignment and inference stages in `dorado correct`\r\n* df861db10d77b4056702857ca11d2e50b63946af - Prevent segfaults in `dorado correct`\r\n* f35c8cc3ebf900cfd6e19cf6ebaebc94fbb8619b - Fix bug when downloading models for `dorado correct`\r\n* 66467011c1f22f7037e1055bb435bef090790dd1 - Add per-barcode poly(A) configuration for interrupted tails\r\n* 0b79407afdfc8f4fa66d5393a722e29358a6302d - Improve poly(A) length estimation for RNA and DNA\r\n* df614abee24523abc2858b02d18205b9ebca53fe - Add `--output-dir` argument to `dorado basecaller` and `dorado duplex`\r\n* f9beb393cd8237a142dba43f3b04a77cb688d1c0 - Add `--bed-file` argument to `dorado basecaller` and `dorado duplex`\r\n* 1fc6f1eb5a535262ef601a8fe4674edc87a137c9 - Add `--models-directory` option to `basecaller`, `duplex`, and `download` to download and reuse models\r\n* 966c2ca38369a21855cdd491b025979a9628b5b5 - Update POD5 version to v0.3.15\r\n* 6ec77c8b6cfc3a53433ae27f7a5383f77097eefa - Fix errors when performing duplex calling with modified bases\r\n* 4a28d589d5e244f62543ebb4d744e8c2843bde93 - Always trim DNA adapter signal before processing RNA reads\r\n* a90fbf9729a1791be5e7da0f3aacc9d5c20135a8 - Fix loading of FASTQ files containing RNA with U bases\r\n* 9e5db84725635ceaa282691e8e430dd56851ffa2 - Fix duplicated alignment tags in re-aligned files\r\n* 3cc4de3c941601fad906c80b6c770fef2814ad9c - Prevent \"Too many open files\" error when using `--sort-bam` with `dorado demux`\r\n* b53191858fd33e7a0b4832df6e9e38cf5af22add - Prevent `dorado basecaller` crash when signal-space trimming removes all raw data\r\n* adc60bae22648fef6521608a625c0e5bc842ac2f - Package `libcupti.so` into ARM Linux builds\r\n* 667d16001845c8f173ae44ecdef0befaabf2af10 - Remove kit name requirement in custom barcode configuration\r\n* e9281fa6d9ff36a7fb51efed0caf2c776b7d0c33 - Emit an error message if header from input HTS file cannot be read\r\n* 7f42b8fd869da5210f9a60a83a6656173023dcb0 - Warn and exit instead of crashing if a model path does not exist\r\n* 7d7424615830f46f7246a20125b73573c78ef7c9 - Improve index file error handling\r\n* c77733a9d5ec054a426147cdcd9f6e8a03399aff - Add a mechanism to cache auto batch size calculations\r\n* a674dadec1b3feb1ed8e8a6421d5d3fc17b0b5bd - Update `--help` documentation for `basecaller`, `duplex`, and `correct`\r\n* 022901e29864fdeb9a99c4961c679882fe4a6b34 - Fix JSON output when using `--list-structured` with `dorado download`\r\n* db73e5d767dcc3a9ea9c2d62e2a3d77d7058a231 - Add `run_id` to filenames output by `demux` ",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.8.0",
        "name": "v0.8.0",
        "release_id": 175324976,
        "tag": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/175324976",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/175324976",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2024-08-01T12:25:02Z",
        "date_published": "2024-08-01T15:14:09Z",
        "description": "# [0.7.3] (1 Aug 2024)\r\n\r\nThis release of Dorado updates `dorado correct` to fix handling of high copy repeats and avoid shutdown hanging. It also includes `dorado demux` improvements to reduce false matches in midstrand barcode detection and ensure correct file naming, along with other fixes.\r\n\r\n* 5dc78ab677fbf4c67467ecfc4fb89438dc68c8d4 - Remove limit on number of overlaps considered during all-vs-all alignment in `dorado correct`\r\n* 2741de70278dd47850c548266d8b3bff5b387aaf - Prevent hang during shutdown of `dorado correct` and prevent out of memory errors\r\n* 37d316c4db26df6121f5c09410eb8bd966ab6b75 - Remove unused `--read-ids` and `--threads` parameters from `dorado correct`\r\n* ddb13dea5144769e0a5542321aa03867f06024c1 - Increase the threshold for midstrand barcode detection to reduce false matches\r\n* 845a3ad37f2a7d2b7e62fcd50ff1971f47c139c3 - Fix misnaming by `dorado demux` of barcode file for barcodes ending in a letter (e.g., `12a`)\r\n* 56d3e8e2ea55b4873e0ef4f35c144d210b20755e - Fix seq/qual orientation when demultiplexing aligned BAMs\r\n* 5ddfc2fa6d639fa52c735184a2c92e9ce4306a3c - Fix bug causing CUDA illegal memory access with v5 RNA SUP and mods",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.7.3",
        "name": "v0.7.3",
        "release_id": 168269616,
        "tag": "v0.7.3",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.7.3",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/168269616",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/168269616",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.7.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2024-07-31T13:36:28Z",
        "date_published": "2024-08-01T09:45:49Z",
        "description": "# [0.6.3] (31 July 2024)\r\n\r\nThis release matches the version of Dorado in MinKNOW 24.06 and Dorado Basecall Server 7.4.12. \r\n\r\n* 29f311b04898f7ba17904adaa4ced9a41e6ea248 - Increase the threshold for midstrand barcode detection to reduce false matches\r\n* 01735dd9eaa6cfbff1e33bf81c4be5e01763e90e - Fix misnaming by `dorado demux` of barcode file for barcodes ending in a letter (e.g., `12a`)\r\n* c65f1f3076b66acb95ae8d5a9d85c96dd1ae4bcb - Fixes to support live basecalling in MinKNOW",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.6.3",
        "name": "v0.6.3",
        "release_id": 168203082,
        "tag": "v0.6.3",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.6.3",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/168203082",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/168203082",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.6.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2024-06-18T09:05:55Z",
        "date_published": "2024-06-18T10:29:53Z",
        "description": "# [0.7.2] (18 June 2024)\r\n\r\nThis release of Dorado resolves basecalling failures when running v5 SUP models on CPU-only devices or v5 RNA HAC on Apple silicon. It also fixes bugs in `dorado demux` and `dorado correct`, and corrects `sm` and `sd` tags to match the Dorado SAM specification.\r\n\r\n* 383527291e0553fa08d647af81a6c8a4bf4045a5 - Fix bug causing v5 SUP models to fail when running on CPU-only devices\r\n* c36f4443d982a2ca47dc84fb8b840929811ea087 - Fix bug causing RNA v5 HAC basecalling to fail on Apple silicon\r\n* 36218004593b0ebba37ff870eb3d92c8238fb0c6 - Fix bug causing segfault in `dorado demux`\r\n* 3b51c1b3c694453d7da04ea91030d7e98b4e9681 - Fix sub-par alignments in `dorado correct`\r\n* d0df79c49f29d2f7cdff3423071380be3b6c6918 - Correct shift and scale (`sm` and `sd`) SAM tags to match SAM specification",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.7.2",
        "name": "v0.7.2",
        "release_id": 161048643,
        "tag": "v0.7.2",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.7.2",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/161048643",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/161048643",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.7.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2024-06-03T14:55:06Z",
        "date_published": "2024-06-04T02:46:45Z",
        "description": "# [0.7.1] (3 June 2024)\r\n\r\nThis release of Dorado fixes out of memory errors when using the v5 SUP model with methylation calling, resolves several bugs in `dorado correct` and adds correct handling of the `BC:Z` tag when running `demux` multiple times.\r\n\r\n* a9c6f59bff450d2a822ca5b64b18162bfd9b9a09 - Fetch available memory correctly for autobatch calculation with modbase models\r\n* eb24124ba8f1a72c6730c1ce4b178f020c9d3565 - Move developer quickstart and extend installation instructions\r\n* 45b8acc730ddbe6b438cf17153a64c084d1af2fb - Package missing CUDA Toolkit dependencies with `dorado`\r\n* 33578e7c6d3af063389411ae6d7436ed6d0f94a1 - Update BC tag instead of adding a new one\r\n* 580ad61ccd0f193c88202c852cbea38790c50700 - Prevent creation of CUDA stream when device is CPU\r\n* 82078c5e0bc9545010f2405e92f93d8cff0c35db - Fix segfault with htslib pointer freeing in Windows",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.7.1",
        "name": "v0.7.1",
        "release_id": 158713702,
        "tag": "v0.7.1",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.7.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/158713702",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/158713702",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.7.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2024-05-21T16:37:39Z",
        "date_published": "2024-05-21T17:30:59Z",
        "description": "# [0.7.0] (21 May 2024)\r\n\r\nThis release of Dorado introduces new and more accurate v5 models for improved basecalling. It also adds a new subcommand, `dorado correct`, for single-read error correction to help Nanopore based *de novo* assemblies of haploid or diploid genomes. In addition, this release contains a slew of bug fixes, stability enhancements and updates to barcode classification.\r\n\r\n## New feature highlights\r\n\r\n1. DNA, RNA and duplex basecalling models with improved single read accuracy.\r\n2. Support for `4mC_5mC` methylation calling in DNA and all-context `m6A` and `pseU` in RNA.\r\n3. `dorado correct` subcommand for single-read error correction of haploid and diploid genomes (for assembly pipelines).\r\n4. Poly(A) tail estimation for plasmids and transcripts with interrupted tails.\r\n5. Support for `--junc-bed` minimap2 splice option.\r\n6. Faster BAM indexing and sorting code.\r\n\r\n## Changes to default behavior\r\n\r\n1. Data type of mean Q-score tag (`qs`) updated to `float`.\r\n2. Adapter trimming is enabled when poly(A) estimation is requested.\r\n\r\n## All key changes\r\n\r\n* 7a09ca3d1d1e469570a7df1e5819c39e9dd2325e - Add v5 basecalling models for DNA, RNA and duplex\r\n* 159b73c7fea64d374b562af32abeaa382af54354 - Add new models for calling DNA and RNA base modifications (4mC_5mC, m6A, pseU)\r\n* be8ac08652d5fe0b73c1126048b7fd96f29f3419 - Add `dorado correct` support for read error correction\r\n* 67dc5bab58d74ee636e492619a6802db38059534 - Poly(A) estimation for plasmids and interrupted tails\r\n* 381f6c3038fb69523ea591b1942d3293d7e9b9aa - Enable adapter trimming when poly(A) estimation is requested\r\n* d6b0f68b3617f34a321db676b780e1a1183b6060 - Change data type of mean Q-score (`qs` tag) to float\r\n* f938c415ddc9f458fe718af72c82001448d9c3c7 - List supported models in structured format\r\n* 70ff95d84b316adb4701f7f43a19151e73b58b5b - Enable `dorado summary` to run on trimmed BAM files\r\n* 6373792b686538758a16aacb063434c2b3260077 - Detect presence of midstrand barcodes to reduce false positive classifications\r\n* 68d40da45da886384508173219a9fb677fc50cef - Add support for `--junc-bed` minimap2 splice option\r\n* c443f75314708b7aed0aafa38fffdb8b2e76e9f2 - Output BAM instead of SAM from `dorado trim` command\r\n* a3dce7ebe298ce3e17f3d61ad180b099700afb6a - Support `dorado demux` from input folders with mix of PG and SQ headers\r\n* 08e2c7bb2538c2ba89203a68bbf153e6a6054535 - Speed up sorting and merging of BAM files\r\n* b8de2d900d9aeb1c349931a216db7e05aa2ff2c4 - Set maximum memory sizes in minimap2\r\n* b8de2d900d9aeb1c349931a216db7e05aa2ff2c4 - Calculate scaling for RNA on non-adapter signal only\r\n* c88e9f753219f3c462c3678ddfad6b4561830f33 - Update CMake Minimum Version to 3.23",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.7.0",
        "name": "v0.7.0",
        "release_id": 156733747,
        "tag": "v0.7.0",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/156733747",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/156733747",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2024-05-09T16:34:19Z",
        "date_published": "2024-05-10T03:13:46Z",
        "description": "# [0.6.2] (9 May 2024)\r\n\r\nThis release of Dorado disables trimming of the rapid adapter during basecalling which was causing some RBK datasets to have a high unclassified rate during demux.\r\n\r\n* a64492b69eb59c1d60d602fee1670085338450c4 - Fix bug with loading reverse aligned records in dorado demux and trim\r\n* 6cc278f4d7759a7aaaa9a9b336d843b127b0d7ed - Disable rapid adapter trimming to prevent signal overtrimming in some RBK datasets",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.6.2",
        "name": "v0.6.2",
        "release_id": 155056595,
        "tag": "v0.6.2",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/155056595",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/155056595",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2024-04-23T19:44:56Z",
        "date_published": "2024-04-24T01:29:20Z",
        "description": "# [0.6.1] (23 April 2024)\r\n\r\nThis release of Dorado fixes bugs in `dorado aligner` related to using presets incorrectly and in `dorado demux` which were causing demultiplexed outputs to be malformed.\r\n\r\n* 3e060db5a35ab09fecbeef9754cc545ba400edf1 - Skip stripping of SQ header lines in dorado demux --no-classify\r\n* a2abf83852e895b1016c690769b59c06587684fe - Fix incorrect overriding of minimap2 options when minimap2 preset is specified\r\n* 1cc207a166b1cafcbd012f5c70b5c817c788c7f3 - Fix bug causing unclassified records from `dorado demux` to be unreadable by samtools\r\n* 298277150ad2522ca6c1928c4981782ce2893a5a - Fix issue with allocating memory on unused GPU during basecalling\r\n* fa79f4a77fca737704d8a9e08d0495b9988f88ef - Fix reverse strand alignments when re-mapping a SAM/BAM file with `dorado aligner`\r\n* 3b2c8252d1a40bb0f941ca2ceca0849be15d15fa - Propagate `sv` tag to split reads\r\n* 11675a565da9af52de89a3f6614d15e57d10765d - Fix bug where errors were being swallowed in HtsFile class\r\n* 73046e19fd443dfb48f3fbb82c0b37c5c7cfb8d5 - Fix typo in Warnings.cmake",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.6.1",
        "name": "v0.6.1",
        "release_id": 152505330,
        "tag": "v0.6.1",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/152505330",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/152505330",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2024-04-02T13:46:21Z",
        "date_published": "2024-04-02T13:54:36Z",
        "description": "# [0.6.0] (2 April 2024)\r\n\r\nThis release of Dorado improves performance for short read basecalling and RBK barcode classification rates, introduces sorted and indexed BAM generation in Dorado aligner and demux, and updates the minimap2 version and default mapping preset. It also adds GPU information to the output BAM or FASTQ and includes several other improvements and bug fixes.\r\n\r\n## New feature highlights\r\n\r\n1. `--emit-summary` option to generate summary files from `dorado demux` and `dorado aligner`.\r\n2. Support for loading inputs from/saving outputs to a folder for`dorado demux` and `dorado aligner`\r\n3. `--bed-file` option in `dorado aligner` to capture alignments hits in specific intervals of the reference. Hits per read stored in the `bh:i` tag.\r\n4. `--sort-bam` option in `dorado demux` to output sorted reads when input is sorted and barcodes are not trimmed.\r\n\r\n## Changes to default behavior\r\n\r\n1. Default mapping preset for `dorado aligner` updated to `lr:hq`.\r\n2. `dorado trim` and `dorado demux` now output unaligned records by default (i.e. all alignment information such as tags and headers removed).\r\n\r\n## Backwards incompatible changes\r\n\r\n1. New scoring parameters for barcode classification to support an updated classification algorithm. Older scoring config files will no longer be compatible.\r\n\r\n## All key changes\r\n\r\n* dc22d7f21215082796e972760db68cbaa3faf242 - Update method for barcode classification\r\n* e65eaf4d4dee3d85d5eee007013c9a8815f4aaa2 - Improve basecalling speed on short reads\r\n* f0b829d5eb5e1e56b96d6d8a7749445fa3d0f4d2 - Emit sorted, indexed BAM files from `dorado demux` and `dorado aligner`\r\n* 913f062d6efac4e661bea0142c644331a01a5c29 - Add DS:gpu information to output FASTQ and SAM/BAM files\r\n* c4598901d764f073a18232f02039a618d1d94d3c - Added support for `demux` and `aligner` reading from a folder and a `--recursive` option\r\n* d994a4d5232226ddac68eac60a14de5db087cf5c - Add `--emit-summary` option to `dorado demux` and `dorado aligner`\r\n* 246b9b995360a384e1b122a7ef477f43acc29843 - Add `--bed-file` argument to `dorado aligner`\r\n* f6b65540d1edfc84f06fda3a751ccae8d96dcfba - Add `--sort-bam` option to `dorado demux`\r\n* 9b49ae5e2be1df596c0aaed821c63dfb0add5a9c - Update to minimap2-2.27 and use `lr:hq` as default mapping preset\r\n* a0f9462761df979540826d4725a2414a68db9503 - Add `RG` and `st` tags to FASTQ for consistency with BAM\r\n* ae47155115e5f22475f424e8da3553312315cf53 - Calculate mean Q-score for RNA on bases after the poly(A)\r\n* 3cf15fa02edd65d036cd830970719cb15d8c7e99 - Trimming rapid adapter from raw signal\r\n* b40d0015618d3ef355445d35ea7a1ebeb2029101 - Improve read splitting for RBK\r\n* 9d3af872b2aa4ddda4044c8a52113b765abd0701 - Trim low-quality data from reads with end reason mux_change or unblock_mux_change\r\n* ec106d65eed2592683a8d30f936318721369b427 - Improve performance of calling modified bases on NVIDIA GPUs\r\n* 77c55999499f72ff56fdfa792745dd0b1b0d00bd - Improve Apple silicon auto batch sizing\r\n* b4fdb2453b8719f36eb2f99ce5814a110f7b300f - Fix bug with `MM/ML` tags not updating correctly with `dorado trim`\r\n* bacd354210f74373946a0f4d248162bb22e88063 - Remove invalidated tags if running `dorado demux` or `dorado trim` on aligned BAM\r\n* b6077db36f18947c27cfba1d2d3b95bca3a014a7 - Fix bug with modbase model auto detection on `@v0`\r\n* ba0d70862f1b861b996244d83d7f547da9845d59 - Ensure `ts` set to zero if `--no-trim` or `--estimate-poly-a` enabled\r\n* 12c5a3e23dff454f28a6c27ce24afbba62414e72 - Fix duplicate SQ lines in header of aligned BAM\r\n* 9dc052dce52014aa7c2eaaf4c57eab290974194d - Ensure read group header lines include custom barcodes\r\n* e8fb085897feeda7dd101b201f856d64e33b125c - Skip barcode trimming when running poly(A) estimation\r\n* bbe6ad6964944158236a369f4e723c7e5f21330f - Handle issues related to user locale\r\n* bdc05e37dd6eea975615d37f246c1529fa8144c7 - Fix bug using simplex-only model complex and `--modified-bases{-models}` arguments\r\n* b31e5c88b71913ae9f6900fdd2938ae58e84ead6 - Fix resume loading for split reads\r\n* 2919fe0b1ded1bce64ee66534e13d7fbf06ccb96 - Fix bug with custom barcode arrangements\r\n* 98763daba089be12708479ade687c8146f2ca245 - Fix bug when aligner writing to stdout\r\n* 74b4b536f621ec31d795f4559c9fdd205fd71fc7 - Fix regression with calling modified bases on macOS\r\n* 392900332620a21da1b6e86f264c0459b163511c - Perform an allocation-less matmul when using torch\r\n* 6f283a5f6876df767b09ee4c4ec4d6e268731b9d - Prevent CUDA OOM due to small allocations\r\n* 0fa2c2f7f964942287548ecc3afc439a9c530b5c - Fix Cuda OOM during batch size calculation\r\n* 7506d44333d980e2d381a4731608fe3137354975 - Add support for additional barcodes\r\n* 13ba5af85aecfd7c651b249a127cf1b3243c1aec - Add deprecation warning for FAST5\r\n* b5dc9f846bbc6f487a1f971824690c3a0f5fe3e4 - Update to Koi v0.4.5\r\n* c9c5ad0ea395bd528c99680daa73208df4b09165 - Update to POD5 v0.2.4\r\n* 901f700e00c76158a11aa4fa34425c107fa15a18 - Improve error reporting when the device string is invalid for CUDA devices\r\n* e3442ec2633238ca6bfd073c9e817b6b6c14728c - Log errors reported by Metal and enable warnings\r\n* e61cfe4ac28be6e06ea42721eeee2e7693527638 - Output Dorado commandline arguments in logs\r\n* de59f33492f75ecb6777b372c9f0a0382a65a768 - Move default download path for third-party libraries into the build folder\r\n* d7defcc424f566ff3a8de193262da0531cdd4fe5 - Log a warning message if running on Apple Silicon with less than 16GB RAM\r\n* 8dfd180d526bf426624d2129bf1a495d1e1d43dc - Consolidate pipeline node input thread handling\r\n* 401882331baf86d7a3e4b8e5a018389a8363cfbb - Update DEV.md to install the correct package",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.6.0",
        "name": "v0.6.0",
        "release_id": 149401664,
        "tag": "v0.6.0",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/149401664",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/149401664",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2024-02-06T04:37:37Z",
        "date_published": "2024-02-06T15:10:47Z",
        "description": "# [0.5.3] (06 Feb 2024)\r\n\r\nThis release of Dorado fixes a bug causing low Poly(A) estimation rates in RNA.\r\n\r\n* 59a083c9d9ee359049fc30ea4ca9ec4aacb84fe7 - Fix RNA Poly(A) tail estimated in the absence of adapter trimming.\r\n* f0f98838156fe45c51a3e39795ee45248e045100 - Clarify `ns` tag in Dorado SAM spec.",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.5.3",
        "name": "v0.5.3",
        "release_id": 140112260,
        "tag": "v0.5.3",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.5.3",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/140112260",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/140112260",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.5.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2024-01-18T18:28:21Z",
        "date_published": "2024-01-19T10:00:01Z",
        "description": "# [0.5.2] (18 Jan 2024)\r\n\r\nThis release of Dorado fixes a bug causing malformed CIGAR strings, prevents crashing when calling modifications with duplex, and improves adapter and primer trimming support.\r\n\r\n* 062e5e32a23f7f88705c3e5ef989f3f8c524b340 - Fix malformed CIGAR string for non-primary alignment\r\n* 0a057bb14c6342092eaf5787c5de90f41c08a93b - Fix duplex modifications crash\r\n* d453db274d68f5f315deb1f1238814ec24953588 - Add missing support for RAD adapter detection and trimming\r\n* 8c2d004d71c9c21fb7bfbe283ba44bc100a67793 - Correctly trim modbase tags for reverse strand alignments\r\n* 76f24b29312af4a6bb22e02e79f439bd1ccfd725 - Update custom barcode documentation\r\n* 9959654ba7377d3807d5d96aabdc9b40d74c5d0d - Only require standardisation parameters if standardisation is active\r\n",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.5.2",
        "name": "v0.5.2",
        "release_id": 137689444,
        "tag": "v0.5.2",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/137689444",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/137689444",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2023-12-21T19:19:51Z",
        "date_published": "2023-12-21T21:49:42Z",
        "description": "# [0.5.1] (21 Dec 2023)\r\n\r\nThis release of Dorado fixes bugs with adapter trimming and custom barcodes, introduces a more accurate 6mA model, and adds several quality of life improvements.\r\n\r\n* 9a4639261576bf957392b406f7e36664b1ddf9eb - Replace use of constant with a parameter from custom barcode file.\r\n* 1893d69a4f472df00936db3fe7c31a72de31c23a - Decouple basecall library from models library.\r\n* e42761c65b96e4feecdbdaff343928e30e258ee8 - Allow RNA adapter trimming to be skipped.\r\n* a510d531af46dc07c445d59914e809b4a18de0ad - Prevent simultaneous usage of multiple modbase models affecting the same canonical base.\r\n* 371a252ac5d62512597d288bb3396cc93a2b18fc - Fix incorrect sample count in the ns tag with sequence trimming.\r\n* 9f532ffe298c72f39984fc68e36e9fa24d811382 - Remove modbase tags for non-primary alignments except when soft clipping is enabled.\r\n* 52431e685dae82fd94ecf12c52f5d3cd8f78fd1a - Update 6mA model.\r\n* 7109c1c639f19b8bea5ea4e7faacb6cf32e58fb6 - Remove superfluous clamp from Metal model implementation.\r\n* 5fa4de73a38e5ff858e9ed7662d8b72844588c6d - Refactor decoder interfaces.\r\n* a3dfc94a1bf37644d95ed2acabd7bb27e5229245 - Improve README for adapter trimming.\r\n* 3bfb1f052bdf5b09998a511cb6369c2227d8bc3a - Fix bug with out-of-order primer trimming positions.\r\n* b1302aee6accd8e9a56037311c176649f8b166bd - Allow alignment to be skipped for disconnected clients.\r\n* 55d09f9f985923494b8ef407f35e788cfd6039d4 - Update HDF5 pre-built library location.\r\n* 2048ad5f371d50ec03268d4a69c566b73a661bf0 - Decrease httplib connection timeout.\r\n* aae47b1313511c330765c418cff55e2cc7f51323 - Refactor codebase to unify interfaces and reduce dependencies.\r\n* 6ed81c5edcf0d6e0d20da4d250891e0a7e77b92a - Run separate modbase models in different CUDA streams.\r\n* decb9e7ca8688e365f5f340802534dedaf7bf026 - Update build settings to simplify integration into basecall server.\r\n* e8b07e20925dcfb79538d7cdcc40a9e064560bbc - Report warning and skip FAST5 files when datasets contain FAST5 and POD5 files.\r\n* 6c984a0b04617866251920d11092618e24cc5f43 - Enable Xcode builds.\r\n* 6d317935ffb4974cab4bc2a1617eeddaf47976a3 - Split Metal LSTM kernel into multiple command buffers.\r\n* 364d15d9c4fbc6d88a7cc8f35657da5d31c51aaa - Fix bug with passing custom barcode file into basecaller command.\r\n* 951e3c3f4cd645580b8f09ee7d24f94f99043910 - Allow read to override adapter/primer trimming defaults.\r\n* d6e2a801608e1b3ae0baaee346c1690f63f5032f - Clean up model auto download directories.\r\n* c5523515d66b57a3aa862cf5b1296e6082942e07 - Improve error handling during model auto download.\r\n* 936d40883b1c4fcd6d8dccbc90d62a5d4d444b81 - Report incorrect results warning for CPU basecalling on TX2.",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.5.1",
        "name": "v0.5.1",
        "release_id": 134830314,
        "tag": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/134830314",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/134830314",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2023-12-05T14:12:56Z",
        "date_published": "2023-12-05T19:30:14Z",
        "description": "# [0.5.0] (5 Dec 2023)\r\n\r\nThis release of Dorado introduces new, more accurate, and faster v4.3 basecalling models. It also enables hemi-methylation basecalling of duplex reads. Dorado now supports DNA primer and adapter trimming, custom barcode arrangements and sequences, and can automatically select the correct model for your data. Furthermore, this release introduces speed and memory enhancements for basecalling on Apple silicon and various stability improvements.\r\n\r\n* 14159695955dd0d08322f26b545069fbfecb5003 - Add v4.3 basecalling models\r\n* b7d4b380f17d4a15ed43d8d383cc770d121fca17 - Support for modified bases with duplex basecalling (hemi-methylation)\r\n* 30e639cf66c1c24d0f61f1e7b91c6ce5db2cf7bf - Primer and adapter trimming\r\n* fb85a70609eedfe895587275d06429515a1ce61e - Enable automatic model selection\r\n* 16e5b6ad577f5485eb3a78c755313fc8314b2b1c - Support for custom barcode arrangements and sequences\r\n* 46bbfddda06a7088f7031ef79eecf03b0f04660c - Add barcode column to summary file\r\n* e9f060c1afff8d72fd51da4201d3062d8c8a2064 - Improve the precision of read splitting\r\n* 4102ffc3454c609479665a337e1ad7c2f33b9d22 - Increase speed of v4.3 model execution\r\n* 0a0711012ad906f94aa6e26c3a6b540e5ccbcc0e - Prevent progress bar from `--resume-from` logging excessive dots\r\n* 20b5637dbbf944efcc3878c5271a8bd84d2b6eab - Ensure that aligner outputs SAM when not piped to a file\r\n* 942a35a69832883904a1116b9b21d5c1641d0e2b - Add `MN` tag to ouput BAM to help downstream tools interpret modified base tags\r\n* f0ac935035423d3b913940bf1b9b7fd50d832993 - Added modbase model name to BAM files in RG header section.\r\n* a7fa37132b0f442ce87a154e7f2db21dfaa66933 - Improve performance of HAC and SUP on Apple silicon\r\n* 152d5fdc782d14b1e9853d9242051d1f7064b63c - Improvements to auto batch sizing on Apple silicon\r\n* b0767a6f31cd7f084491b2b3313d33d048bcc5a0 - Fix bug causing segfault with `summary` command on Windows\r\n* 1c2c6a9e9bcf980702afec9b9f6a17cd27c3ae07 - Make AVX `reverse_complement` implementation preserve nucleotide case\r\n* 4a4dd1cffe9db32e4c58e79ca6dc5dc79125f0c9 - Use updated Koi functions for small LSTM layers, final convolutional layer in LSTM models, and final linear layer",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.5.0",
        "name": "v0.5.0",
        "release_id": 132733855,
        "tag": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/132733855",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/132733855",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2023-11-14T18:26:22Z",
        "date_published": "2023-11-14T19:41:18Z",
        "description": "# [0.4.3] (14 Nov 2023)\r\n\r\nThis release of Dorado introduces a new RNA m6A modified base model and initial support for poly(A)/poly(T) tail length estimation. It also introduces duplex performance enhancements and bug fixes to improve the stability of Dorado.\r\n\r\n* 803e3a7ce2590b1c95b4754117185983ac2ad560 - Add RNA m6A DRACH-context model\r\n* 0f282cde507a36bf91863270bd0323564235c15b - Add poly(A)/poly(T) tail length estimation support for RNA and cDNA\r\n* 54e14ca01e7391c8857989da7db086a4591375a1 - Add RNA read splitting\r\n* 2dc1f039cac7f3e6cd082b77a5b020fed5488e2f - Enable RNA adapter trimming\r\n* 80114c08c45bc902843a2e18b5949ebf5cfefdf2 - Correctly update CIGAR and POS entries when trimming barcodes\r\n* 4b2025c57fd3b87b2ce6cd52be07adfd9ae5acf9 - Add documentation for sample sheet support\r\n* 641cb08b457d727c3da682185c6fe491df49dab2 - Reduce host memory footprint for duplex basecalling\r\n* 7c1c0f04d93113d4dd2c632bdcd242304b54d270 - Reduce working reads size, in particular for duplex.\r\n* 831f0a91f0100c2586720f6026450fdbae1a8d21 - Fix pairing check for split reads in duplex basecalling\r\n* b63056743be6e5442f2f5af65a36c592bbf96184 - Account for split reads during progress tracking\r\n* 383fe0226bfa7956705376ac5e4a32096ff80c45 - Update to Koi v0.4.1\r\n* 873c6b11e0113735b21305afce5057138558388d - Fix warnings about `ONLY_C_LOCAL` mismatches in PCH builds\r\n* 52cbabff83de3c9fb6f1a0db9194828b92418855 - Encapsulate `date` dependency\r\n* 8fb8a4df567ba22df6a298f4e30277a0d47ceaa4 - Disable Cutlass LSTM codepath for 128-wide LSTM layers because this kernel does not work\r\n* 6a9dad907af8dd2b4e556d49a329a8a0fbc5c32c - Enable warnings as errors at build time\r\n* 5aaef312027836ffbd6e2b944e6cd3ba4a259267 - Address auto batchsize issues on unified memory Linux systems\r\n* 92b5a6792fca4d2bb2b76727ec486efe8bdfae97 - Reduce compilation times\r\n* 062e3fd53f58380070efff660303b71c03cd02c0 - Minor speed improvements to CPU beam search",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.4.3",
        "name": "v0.4.3",
        "release_id": 129426652,
        "tag": "v0.4.3",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.4.3",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/129426652",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/129426652",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.4.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2023-10-27T20:28:53Z",
        "date_published": "2023-10-30T09:27:03Z",
        "description": "# [0.4.2] (30 Oct 2023)\r\n\r\nThis release of Dorado fixes a bug with the CpG-context 5mC/5hmC model calling all contexts and adds beta support for using a barcode alias from a sample sheet.\r\n\r\n* 90a4d013938672af6dac399afbbafbd8bf7814ad - Fix motif for `5mCG_5hmCG` compatible with `dna_r10.4.1_e8.2_400bps_sup@v4.2.0`\r\n* 616b951e3ede257ae6359b6005f60e44a53dd2cf - Beta support for sample sheet aliasing",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.4.2",
        "name": "v0.4.2",
        "release_id": 127147587,
        "tag": "v0.4.2",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/127147587",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/127147587",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2023-10-12T22:32:52Z",
        "date_published": "2023-10-13T00:23:40Z",
        "description": "# [0.4.1] (12 Oct 2023)\r\n\r\nThis release of Dorado fixes a bug with duplex tags and adds functionality to dorado demux.\r\n\r\n* 7fefd5d949d32decc3b347778afa80c90b9c6417 - Fix missing `dx:i:-1` tag for simplex reads with duplex offsprings\r\n* d532ef1517413b536714d47c01a998305890d922 - Enable dorado debug build in Visual Studio 22\r\n* eeef7575b6dabab8d5647cebed0f92ef793786ef - Add `dorado demux` option to demux pre-classified barcoded data",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.4.1",
        "name": "v0.4.1",
        "release_id": 124912172,
        "tag": "v0.4.1",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/124912172",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/124912172",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2023-10-09T17:17:26Z",
        "date_published": "2023-10-09T17:25:57Z",
        "description": "# [0.4.0] (9 Oct 2023)\r\n\r\nThis release of Dorado introduces barcode demultiplexing, barcode trimming, simplex read splitting, and updated models for calling 6mA and 5mC/5hmC modified bases. Furthermore, it contains improvements to duplex pairing for increased yield, basecalling speed enhancements and reductions to memory consumption, bug fixes, and additional tests for enhanced stability.\r\n\r\n* e836fa46a452e0cff69f1ea0b2017878ff5b85b2 - New all-context and updated CpG-context 5mC/5hmC models\r\n* e4aca7696392fe5836da22d1df62c399c2bfd664 - Handle custom batch sizes that exceed maximum safe batch size\r\n* ad463ead384119b756d9f8a940919b1ab9cfe4fc - Updated all-context 6mA model\r\n* 21d25a3d00331027ba24227e95d9b5f353a882d2 - SSL host verification enabled and `dorado download` HTTPS proxy support improved\r\n* 8ae95e732310400016f34b8f9499f1fdb4a0dd41 - Enable simplex read splitting\r\n* 1210607cc0f647772053ed82dcae94b416a0b821 - Fix mean-qscore calculation with trimming\r\n* d27666eb02add2e9a991442d8ba4f2bc7f849df5 - Beam search optimisation\r\n* 46e68c1138ebc25e53818e185e967f5a156c1896 - Report the error we get back from httplib if a download fails\r\n* 89db1e197c68d6cf7209f1366372cb24dfe87ba2 - Support ChEBI codes for modified bases\r\n* 92097cade8f53effbc1610c2fcac679c19203cc6 - Add options to `dorado aligner`\r\n* 4cb986265ffcc0576752e20b5c20acb01ac635e7 - Fix Linux ccache usage\r\n* 692ecd3ed9dc16a94a86bf4ac563c0e618745bb3 - Fixed issues with internal representation of signal during duplex calling\r\n* 80efe8cc7116883ee5413efb223bc5189f893322 - Fix `std::logic_error` (issue #205)\r\n* d92547a49fb95210656fcef7e9486f228ab4cfeb - Make CUDA kernel profiling to stderr available via `--devopts`\r\n* 69bf701f2668c52d325375706821a00b72ea9b1c - Refactoring to support further duplex developments\r\n* 510e2e9e0b2e24d9b5c8bd1c13057c4b05d145a4 - Verify models when downloaded using `dorado download`\r\n* 12476ee058271b353ef1e2cfd4a159397ce9c824 - Improve memory usage diagnostics in Metal\r\n* 3172413657b9be0bf0b6c280cb8c03c7627f9784 - Fix non-determinism in selecting matrix multiplication sub-routine during basecalling\r\n* f14b418e8497fcb033d68f3e6561b5b9a91a07fb - Provide NVIDIA driver version in server API\r\n* 207871ee7f98d1e0cbefeb790ffdd02c1f6c929c - Use `DORADO_GPU_BUILD` rather than `!defined(__x86_64__)`\r\n* d16ccbea8d99c1d820d508ee3ce9175374293049 - Get tests that use CUDA working when ASAN is enabled\r\n* 41bfb99503372db84d218d5ccc0b8f2462d1bba9 - Update duplex pairing heuristics to improve duplex yield\r\n* 87c2c6ed947c7e36bd6bffada2dc2f1856f847a6 - Change `ReadPair` to take full ownership of its data, and drop `ReadPtr`\r\n* 88aa9f3f1ede6803b531bf6f9a719a2cc4f6f74c - Only use pre-compiled headers if ccache isn't available\r\n* c04c145afde62f0f7c1c739b69e5b6f98758dda5 - Bump Koi version to 0.3.9\r\n* 6b8064df59bce3de35b951480b56584484f6c317 - Separate out data shared by both Duplex and Simplex reads into `ReadCommon` class\r\n* 34e9b550b1dcbd40bd8df1ba726773881627ff90 - Flip RNA signal for modified basecalling\r\n* 636ac83e642bda153d6f44d0de979bdd37ccee98 - `CRFModel`: Update to use `KoiActivation` and corresponding Koi host functions\r\n* cd50a01a0b555a75f208bc827e6aaf34d4f00163 - Add parent ID tag (`pi:Z:parentid`) to split reads so that original read can be inferred\r\n* 2956bf6afef66e86b7abc0122ae19a2e37c96cc8 - Add support for barcode trimming\r\n* 92dee851d39ce48fb12b221ac0bfa7575ae7e182 - Fix segfault in modified basecalling\r\n* fe22d2158e4c5fb95b2e2875f3e10d3482035ed1 - Add support for read groups with barcoding\r\n* 2f69da6f659442e0b3caebbb94dfc9e84432e6d3 - Allow basecalling from single files rather than a directory\r\n* c22e46f5407c0863180b0e273551fc9fb5ebc145 - Support ambiguous motifs for modified basecalling\r\n* 882da60f3d2cd9a9633966fe8e5e8241310ffd87 - Refactor to create separate utils lib target\r\n* b792bba1b07986d8ec4dcd601ded55d7021eb4d0 - Enforce const-west style via clang-format\r\n* 611a4eaf2ae52041216c4c369d9f61d481275df1 - Skip code signing on x64 to prevent crashes\r\n* a6a1902efa462d25637be056c352502a2c262366 - Fix various deficiencies of the iOS htslib build\r\n* 5ff8034a0f9f6555223e2d12e53db8061ce718ef - Add barcode check for both ends\r\n* e42b8c8da47c97d7a9fd0844f9d87531e4f35afa - Remove mux from pairing cache key to reduce memory consumption by up to 4x\r\n* 93d052bce610797bf5fae169471635c32bd5bb8d - Setup signing of executables on macOS\r\n* a45b97ce2ded09baac3c06618e5d5b8f8ce9ad8e - Bump RNA004 models to V3.0.1 with corrected scaling\r\n* 7e152fd556401d2af3bc14423c048fadd02f744e - Reinstate `ReadFilterNode` tests\r\n* c3e412ea3a134f18ef4c5eb07e5b6ae46940260c - Add duplex commandline test\r\n* 3ba422b1678a61510900ef647eb501d1a18e736f - Don't perform adapter trimming on RNA signals\r\n* 066b815c4dd0e75a0629d5432199ab6a830637f5 - Add barcoding support to Dorado\r\n* 09cc44f12ff32e6606b192229e6a2e8fb14c892d - Add unit test coverage report generation\r\n* b2e54b8bb6348dc418b45722b96fe001a36a0497 - Fix typo for 5fC modification\r\n* 829dba39bf85250e8275456c3e87a2d6eec72f8e - Enforce that values passed to a sink are mutable rvalues\r\n* 8aa7722fea91abb780071dda7414d0a5bc20cf0a - Remove dependence of `dorado_lib` on `dorado_models_lib`\r\n* cd6d2bfbf547a555c5a7e649db700807ef6d17ea - Extend the lifetime of the `NNTasks` in the metal backend\r\n* abed8ee88e9648981a0996b7f9c0507eca018fb0 - Bug fixes for iOS build\r\n* 64b3ae33377972474a3ec2c4752c95d274f1c908 - Clarify `--min-qscore` option in help\r\n* 225a153e9defb873925e4a0e2e414a1fa1a5aeed - Further restrict Metal kernel run times to improve stability of basecalling on Apple silicon\r\n* 3ae95e40d61b8f383bd778a779aa4a54fe7abdcc - Refactor modified basecalling code\r\n* 8ec58f0153b39f9e60d0606da0a4cc24c6d83e59 - Option for `--guard-gpus` no longer used in duplex\r\n* 1f3cade20f6074880997833783ae1be645974557 - Add `CUDAGuard` before cache clear to reduce CUDA memory consumption\r\n* dae5e30531b3687145e15cfda7655cca267b0aa5 - Move `ModBaseCallerNode` to using an `unordered_set` for working reads, like `BasecallerNode`\r\n* b43adfab9571ab14ac8e41e9d5102fe5fa98f541 - Improvements to pipeline API\r\n",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.4.0",
        "name": "v0.4.0",
        "release_id": 124300039,
        "tag": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/124300039",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/124300039",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2023-08-14T20:15:11Z",
        "date_published": "2023-08-14T20:18:54Z",
        "description": "# [0.3.4] (14 Aug 2023)\r\n\r\nThis release of Dorado contains a few bug fixes and a hotfix for CUDA out of memory issues encountered during duplex runs with v0.3.3.\r\n\r\n * c5c0ea003d2b2019f8d400ef203f45ef28aed3d3 - Introduce pipeline API functions to simplify setup for simplex/duplex basecalling.\r\n * 9614ebaccbed591a82be2b3683a406023f4fab32 - Fix potential hang in modbase calling node.\r\n * 67f84a69b6ae3ed12729c9723d7c827daaeaa3a7 - Set the `--max-reads` default to unlimited for `dorado aligner`\r\n * f6a0422b34cdd89637bddb939364a38ea507d198 - Fix CUDA OOM in duplex by removing tensor caching in decode and updating memory fraction for stereo model.\r\n * 107ebba28c9f77424c0ba271b663338dcd49a902 - Account for filtered duplex reads when tagging simplex parents and calculating duplex yield.",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.3.4",
        "name": "v0.3.4",
        "release_id": 117223561,
        "tag": "v0.3.4",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/117223561",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/117223561",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2023-08-08T21:37:03Z",
        "date_published": "2023-08-09T00:26:12Z",
        "description": "# [0.3.3] (8 Aug 2023)\r\n\r\nThis release of Dorado introduces improvements to Duplex pair identification for improved duplex yields, faster basecalling on A100 and H100, improvements to modified base calling speed on Apple silicon, and major enhancements to the portability of Dorado binaries.\r\n\r\n * 7307146b55096ee339b1da953b5acf05d112e124 - Major reduction to required GPU memory, especially for A100/H100. Allows greater batch size and consequently improved basecalling speed\r\n * 8073364fa8e4390d21da56216a2ef0d78b57f206 - Improvements to Duplex pairing algorithm for increased Duplex yield. Situations where complement read is truncated are now handled.\r\n * 39ffb35a90a2389b9f45ba229e908136e770991f - Report the duplex rate percentage\r\n * 65b8b8a81a202d0166ca2d0ea4724941aa3102a4 - Major speed upgrade to modified base calling on Apple silicon devices\r\n * 481438a3415e009174e5f0406d90ad9fd0868339 - Improve performance of basecalling of Fast model on M silicon by 6% by inlining of function used during decode\r\n * fe8dbf2af44900bcb60e602653cf01dc119b702b - Improve basecalling stability on Apple silicon by limiting run time of LSTM kernel to avoid CB submission errors\r\n * 0abea5fb58545a679fcc1638ababe2a866789921 - Upgrade dna_r9.4.1_e8 5mCG models to version 0.1 for improved accuracy\r\n * 752e094b5c4769ff4375249a23ab51d51cf9486b - Upgrade to OpenSSL3\r\n * 447b5592758ddf1d26d6ae72a43e836259b53836 - Switch to target-based includes CMake builds - Prevents dependent projects from copying all nclude paths and link libs\r\n * b0d10a985e3f4e8d43778367a1710c67d1cde544 - Fix edge case where it is possible to spawn no basecaller worker threads\r\n * 1650b83106c3a06e038b98badc3c529e12046630 - Fix issue with inability to find `CUPTI` library during compilation on some systems\r\n * e4ba3e55fe3e8cd83d59a2f89a415a63be672b94 - Add missing `SA:Z` tag to alignments generated by Dorado\r\n * c5a4cfcabb93084c6d5a4d0e069daefc5cc261b1 - Fix various linker errors\r\n * bf72fdd7f2f21491f85930f55f7bf0f9231eac4e - Dorado will error out gracefully if no POD5s are provided\r\n * bcdeb8f0093bc5c01ef42befecda7f524b894aee - Improvements to portability of Dorado binaries via use of static linking on macOS and Linux\r\n * e14a7e61a6a3e60c0516342df7516b0ba5b92e62 - Improvements to error handling on Apple Silicon devices (Metal command buffer error handling)\r\n * ca1d191ffba5cc1397e4b704e3dab1014fa07175 - Improvements to read ids for non-split reads\r\n * 5d9238a809656d6fab59713c7ab8346790efd2cc - Revamp `AsyncQueue` interface\r\n * 6a3ccb6af5a56527571bf4938447bf85ab5c38e5 - Removed RNA003 model which is obsolesced by RNA004\r\n * 1a94facbad52db0908eae3a7fe3242d525cbd6da - Add summary stats and progress bar for basecalling from Fast5\r\n * 072ed964276fc8e26f0a705c89055cece900edbf - Add pipeline restart capability and pairing cache retention option to termination\r\n * 01acbd5628948bf934985777bcade6bf51103200 - Stop progress bar cutting out near the end of the run\r\n * 211968cd38fee6fa7476a4033a2b59ca37b19199 - Add suppression for false-positive vptr issues in older Xcodes\r\n * 1e14d2af7bff07c62b0286f17e1d61a7b99390fb - Reduce unnecessary startup cost by setting an upper limit on the maximum batchsize to 10,240\r\n * 09c5b28f51707c72df1436967d5da28f850beef1 - Speed up the fixed cost of auto batchsize detection on mGPU systems by running in parallel",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.3.3",
        "name": "v0.3.3",
        "release_id": 115688497,
        "tag": "v0.3.3",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/115688497",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/115688497",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2023-07-13T20:51:27Z",
        "date_published": "2023-07-13T22:44:56Z",
        "description": "# [0.3.2] (13 Jul 2023)\r\n\r\nThis release of Dorado introduces basecalling models for the RNA004 chemistry, better identification of duplex read pairs and improved read Q score estimation. It also incorporates various important bug fixes which improve the stability and usability of Dorado.\r\n\r\n * 4ce0cb038eebbaa3de6d561caa11f0ee80d2e82a - Add RNA004 models\r\n * 24b6c4e2854c32aaca37b039c7bdf5a773db8995 - Retry basecalling on CUDA OOM after clearing allocator cache\r\n * 3897ba505bdda80ff1f0fe9f517cb463bc5347bf - Add troubleshooting guide to README.md\r\n * 9d55b446bce88e22de3584ad6c106cdfa5f7abb4 - Fix bug with resume file header parsing\r\n * f9289e2f5c93641bfc2d2e753e5d612c87f7b34e - Improvements to duplex read splitting algorithm for improved accuracy\r\n * 2869dbc52326d148f9562686d8d89a6dc373072a - Solve memory leak during modified base calling\r\n * 4d8ca172128cb4854e39599077d7c477eeb02504 - Fix race condition which was introducing nondeterministic basecalls\r\n * ddb6f711bf22c3b1f14690a85e6980e4e39a6c9f - Fix aligner regressions from pipeline change\r\n * a57987f2fef3cdb17f1a92e76dbf3110e9adf5bd - Add R941 v3.3 5mCG 5hmCG models\r\n * ba40e53e697bfcfd33beeaa44583a8cc56ca8976 - Refactor of basecalling pipeline management strategy\r\n * 26be1a017baf7131a82271ebb624a484135d29ba - Query enabled Apple silicon cores, not all cores\r\n * 185058ef226d508e2ead05659149514530e90adb - Replace empty value with \"Unknown\" in read group tags to satisfy SAM specification\r\n * d953f339e1ad32533bfb3d53c7427bbbabea4d1d - Add time ordered reads pair cache strategy to PairingNode to support greater variety of ways to run duplex basecalling\r\n * d2700dd44a0a5fbdbf6cbbc71d1f1a791ba25aa9 - Fix to enable Duplex basecalling on CPU. This will be slow but functionally correct.\r\n * f5ccd0d261ac384e05107290e214b3a422eacb26 - Add channel/mux/start_time/start_time_ms to the duplex read\r\n * 0ee5a9b5a24022fdb5330b512e14213c4cbe0e24 - Fixes to host OOM issues\r\n * 2fe609bcbec5158b3ba1f1a1c200212cf1a66a0c - Exclude some non-informative bases at read start from mean qscore calculation\r\n * 3090328a5b12689b649537a4dc83a25c00730c59 - Fix no output when stdout == stderr and both are the tty\r\n * 7e70de7197ffc09586fe6f097f9b25c30dc17802 - Add support for compute 6.1 (GTX 1080 Ti) plus handling CUDA failures\r\n * 995d0fb60c2ce3209e45c3645d59012326ce515d - Runner creation refactor\r\n * 9d21036b309e4dde1125ccddae382a5f1729f725 - Modbase smoke test BLAS fix\r\n * 30658c4d7b0823bd8924257aac5a09d3f1f96b22 - Add `ScopedAutoReleasePool` to prevent autorelease leaks on MacOS\r\n * cf502e3c67809b263e9d7645608e67643f90769e - Update sample rate check to allow some tolerance",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.3.2",
        "name": "v0.3.2",
        "release_id": 112182060,
        "tag": "v0.3.2",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/112182060",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/112182060",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2023-06-26T14:44:19Z",
        "date_published": "2023-06-26T18:35:16Z",
        "description": "# [0.3.1] (26 Jun 2023)\r\n\r\nThis is a minor release of Dorado. It introduces various bug fixes, as well as performance and usability enhancements. Of particular note, this release introduces the ability to resume simplex basecalling if interrupted, adds RNA002 models, improves the speed of modified base calling and duplex calling, and solves an issue whereby Dorado users were experiencing segmentation faults on version of Linux with older glibc.\r\n\r\n * 08218cda24dae7af12115bc749e038d89b41ec5a - Added `--resume-from` for simplex basecalling.\r\n * 790a002be6e69de390ca9d4259e126a02c0beafa - Mitigate simplex scaling performance regression on mGPU systems.\r\n * e0c1beb96daf88a932146bee878b8c7195d5e265 - Turn off all logging if stdout and stderr point to the same file to avoid curruption\r\n * ae1e5e39190860d5eadac1191c4baa7114ca259d - Support for http proxies in `dorado download` via `dorado_proxy` and `dorado_proxy_port` envvars.\r\n * a62465cd7fd555cc64a5592b6b05cffeff3a03f0 - Added warning if user tries to use duplex with fast model\r\n * 99f7483c22aa292682b9cd3a48f3795b99451a57 - Improved error reporting on OSX\r\n * 4f61c18498ffa846ff11b3b8ba3ef1ecdfb4aae0 - Removed source of error related to race-condition\r\n * b1405ab50c831281c36647fcd07acee40380b228 - Added new RNA002 models with V3 architecture\r\n * e75e327f2a52a4d77afbc9b2384b662725ea42b0 - Aligner throws error when reference path does not exist\r\n * a9779164e2b29793617a03128017b75433154d1e - Refactor of progress bar and account for filtered reads\r\n * f1627051edba1bff67a8b8fba510bc456b1e6621 - Fix the build when compiling with VS2017\r\n * 84ecf32158fb4a587b7e0263021eea19c5533d1f - Update Koi to v0.3.3\r\n * d6463b351264dacecf100aeb89c8b493966649fd - Refactor aligner/hts nodes\r\n * c46a2a3558f42831e85efce56765b37be12040b9 - Fix segfault on Ubuntu 16.04\r\n * 2a96f891e35fb567e696c3fe91cdba708c005d8a - Improve performance of mod base calling by changing encoding format\r\n * 612ba2043739ee0418d3addb643bfd145f04d58e - Node performance stats monitoring\r\n * dc9ea3b11c1df8521285fd075b562ec7e8d83a5e - CRFModel: perform clamp on torch tensors in-place. Use ``torch::InferenceMode``\r\n * bf183144f2b9caceea64a690f6946b9d1683c5a2 - Solve various bugs in duplex pairing algorithm\r\n * 164ca6ea3e2ca7491c8cf82162ecb19d540642ab - Add support for running sanitizers as part of CI\r\n * 379fc21b16834eeee88a335a1da8bd34ac211be0 - Add RG tag to duplex pipeline\r\n * 68b5b81aaacea8f9f48402147a6421ddf74f0052 - Add missing dependencies for Mac\r\n * 628722d0e8f85f334cbe4b8662423e4954f1fd21 - Add error checking to pod5 api calls\r\n * c48ab081a681025c34a462bee2816444ff44bb92 - Progress bar fixes for Windows\r\n * ce68b552c98cf5e2ee11331e4a6a7d7157507baf - Update metal-cpp so we can make use of ``NS::SharedPtr<>``\r\n * 53aec516b9a017880e47ba81deeb9084b092b311 - Update Readme to include roadmap\r\n * 5ea670504c052426ef9cc8e2b51f3b213be1b58a - Adding smoke tests\r\n",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.3.1",
        "name": "v0.3.1",
        "release_id": 109954100,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/109954100",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/109954100",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2023-05-18T10:34:14Z",
        "date_published": "2023-05-18T13:52:34Z",
        "description": "# [0.3.0] (18 May 2023)\r\n\r\nThis is a major release of Dorado which introuduces: Duplex pairing and splitting for directly going from POD5 to duplex reads, major performance improvements to simplex and duplex basecalling on A100 GPUs via int8 model quantization and the output of aligned BAM from Dorado and support for producing summary tsv files from BAM.\r\n\r\n * ddb7c1e20b8df5935764cf1d014d3f2202eb29a4 - Improvements to modified basecalling performance\r\n * f879af586dd122a5e9f071fa28970e1531ba1530 - Add support for CPU basecalling of modified bases\r\n * 282a66c4730b381694c170385db3fd124a4c2048 - Add duplex pair alignment accuracy check to reduce risk of incorrect matches\r\n * 3bb0ffc3cc44ca2319b02b6e91b7a0a0fc0a8ca3 - Add `dx:i` tag to Dorado output to indicate whether a read is duplex `dx:i:1` or simplex `dx:i:0`\r\n * 78d6bc403ff840b917ffe89c0bdfc24f779df224 - Improvements to Duplex calling performance\r\n * 20972d4638f8c2d6a3dfbbb3350590cb5c006e7e - Added ability to filter reads by read length, default of 5\r\n * b8ceee484a112f9982d581f15fc143f1a2e1404e - Include simplex output in SAM when running duplex basecalling\r\n * 724bafd32cea0603771c6bb07bd24e7201669a31 - Add `dorado summary` command which produces a summary.tsv file from a SAM/BAM file\r\n * da13d36cd4aa25aa5d2c76c9a8f1da8a6491a783 - Add splitting of live splitting of concatemer reads into duplex pairs\r\n * 8992e6731cf416ef1c29a5eb09b6ecb11d5993ff - Fix for segfault in older glibc version\r\n * d1377a0f838b2823ee906795ae4e19474b5d8655 - Add `dna_r9.4.1_e8_sup@v3.6` simplex model\r\n * 88b547ce61adedcc73bbd19428707c7bc81bde31 - Add 5kHz duplex Stereo model and duplex 5kHz support\r\n * 26609569c401c19bc2b31135f7c99f09522ee731 - Various CPU performance improvements\r\n * f4ea66453971fedb7eaf9f8c82e539c0fefa014b - All context modbase tags\r\n * 338911db23fdeb96345e4aab34184c35283d18c6 - Add v4.2 6mA 5mC modbase models\r\n * 1684168809f9126611d752624fb47339e21f7b31 - Improved support for short read duplex basecalling\r\n * 6fe6adb381fde06778f8f56ac8d8f76adae3de99 - Add verbose logging option for duplex basecalling.\r\n * a035d7f12f60753a7f027d3e881bfeae1843dd9f - Check model sample rate agrees with raw data, add option to skip check\r\n * 26c11122478d8593d2d5f34fe57d8b0744aec750 - Add ability to perform automatic duplex pairing in dorado.\r\n * a824a7d344051beb7ee0e14cf1cb829143365f24 - Output uncompressed BAM when dorado output is a pipe.\r\n * f27d672f32a7d567cdf116314b0edcb64086403e - Add CPU to list of devices in help\r\n * 3329bb5cb1e850536d38c570770fe89544aa9f8b - Fix Fast5 basecalling\r\n * 4d91533610ca908dd4daf61a81e3a3fe634ace89 - Improvements to reduce possibility of out of memory issues on CUDA devices via a GPU device mutex\r\n * 14de2e8e05bc737948a7ec2f82fe14b8a8d7b7b7 - Improvements to progress bar reporting\r\n * 2095fea10169121d52051a50d48e37648b31defd - Add alignment and BAM generation to duplex and simplex\r\n * fef15ae0a74155460f175e55d2adf0421201cb48 - Improvements to stereo duplex encoding.\r\n * c6dc18796c7f77d7276972798af1606d7b76ceff - Add `--reference` option to basecalling to allow basecalls to be aligned to a reference.\r\n * 51ca9e7c1968827e07c8720b872acdab66adb9d9 - Add v4.2.0 5kHz simplex models\r\n * 1a215e793146a1c7625e55c95d0e57c4bbfd7b12 - Reduce CPU load from mean_q_score_from_qstring\r\n * d3f7320469822ae69b76afbbd58156ef82f44ea8 - Handle empty read-ids file\r\n * 25e2cd103561df1feb55c9bea6809d966e480e94 - Upgrade to Pod5 v0.1.20\r\n * 98eb30d3a23c0e40121d030cb73be38a045dbfa2 - Add Cutlass LSTM kernels for significant performance improvement on A100 GPUs\r\n * 6aea63a9bd747de727ac909f8ecb7c7901d1d5a6 - Reduce CPU load due to trimming\r\n * 7459371e837a0be3ab4e502d5efcb071e37ce543 - Increase per-device ScalerNode thread count\r\n * 758d0d9e17196327fbdcce53a0b20c2e163cec3d - Minor improvements to RemoraEncoder::encode_kmer\r\n * b2af21b40b511cd77b90b171c78a7433026310ff - Add read filter node to filter reads by Q score, length etc.\r\n * fb604256639fd6513ce501fa8eb432ac4badd522 - Reduce stereo duplex CPU load\r\n * 0bca7d84ee23cb8827499e6c7578a9974df42a2c - Reduce torch indexing overhead in modified basecalling\r\n * 4632f05a194a081e076bb36031480a325b710da7 - Expose `k`, `w` comandmline options to dorado aligner\r\n * d560661ad52d51dca36d8d946b9d80aa0b848039 - Improved read trimming\r\n * 3cd1c80faf45b8df44180b6bd9e8bf3294924df2 - Improve performance of reverse_complement calculation\r\n * 92ef398874e9f4d09c7a57e5d979d4e704a12a74 - Fix segfault in modified basecalling\r\n",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.3.0",
        "name": "v0.3.0",
        "release_id": 103466114,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/103466114",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/103466114",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2023-04-12T15:00:17Z",
        "date_published": "2023-04-12T16:28:51Z",
        "description": "# [0.2.4] (12 Apr 2023)\r\n\r\n * 92ef398874e9f4d09c7a57e5d979d4e704a12a74 - Fix out of bound access when modbase calling",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.2.4",
        "name": "v0.2.4",
        "release_id": 99173271,
        "tag": "v0.2.4",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/99173271",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/99173271",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2023-04-06T16:17:12Z",
        "date_published": "2023-04-07T00:00:03Z",
        "description": "# [0.2.3] (06 Apr 2023)\r\n\r\n * 6bf227b8139132854927884b59246922f92f0bdc - Upgrade to Pod5 v0.1.16",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.2.3",
        "name": "v0.2.3",
        "release_id": 98478626,
        "tag": "v0.2.3",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/98478626",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/98478626",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2023-04-04T15:34:25Z",
        "date_published": "2023-04-04T18:00:42Z",
        "description": "# [0.2.2] (04 Apr 2023)\r\n\r\n * e1159c4aa8562f539f86d0d2d30899cb69ec9e54 - Add V4.1 modified base models\r\n * dd389f1239ab5372eadc9305064053a7ac8941ac - Add ability to load POD5/FAST5 files recursively, remove the `runners` flag\r\n * 5a55416a9e414bb325d10c07e68904eb3816eeaa - Fix bug whereby the last read was ignored for read lists not terminated by a newline character\r\n * 1c7988a3c47c34e4b87264e988489feb1a1af752 - Performance improvements to Stereo Basecalling with better batch size selection\r\n * 27c8a2efbcbabc689eda0817e6a572cb9f2887c6 - Upgrade to Pod5 v0.1.13 which allows loading large files on vmem-limited systems\r\n * 3a9bb7a4bed6490f7c7a913200c9534a8238329f - Incorporate improvements in Koi which give more predictive QV Scores\r\n * 6896f096f1cfba67d3a831df6ff911bcff38a9ed - Fixes to dorado duplex basespace\r\n * 1079b75303ddf642a6569141c7cdcbfd808e6826 - Upgrade to Torch 2.0 and Cuda 11.8\r\n * bcfd64d2552aae5fc498c6722bed8fc3c2b87961 - If a Stereo model is not available for duplex basecalling, download it automatically\r\n * 8b9064359140b882530a3b750b9b235019d56fad - Improve Dorado startup time when using POD5 files by getting ReadGroup information from metadata tables\r\n * e86e9707a7a60dd030e2338e77c2562939cd6fdc - Use `jemalloc` to override allocator on Linux\r\n * 4d6a898240ede28726079ba0418f62667e8d2b49 - Enable Stereo Duplex on M1\r\n * db097be3849ea957092aaf34fe8791afc93c8c59 - Make metal stereo conv1 kernel available\r\n * 17d97d3c5faccd6f0cdce17d2ae52bc923b25fee - Make ``MetalModel`` capable of handling > 1 input channel (Required for Stereo Duplex)\r\n * 6d5f07f6784a6e77ed86339d57abb78b20cf3830 - Fix memory leak in getting read groups\r\n * 3e3b21a4c5e571ee420e8b37cbafd42aa6b7fd5a - Remove deprecated use of FindCUDA and show real location of found toolkit\r\n * ff80a9fae368389271d01f84419f776b93c84461 - Improvements to Mk1C performance\r\n * 35dcb6558924b91160b16e6eb136696fd4eadebd - Fix meaning of TLEN in SAM output\r\n * 7f13113ecc215a0eec59b62457b05fa9399bf551 - Add support for arbitrary messages in Dorado pipelines\r\n * a93ae2cbeb8ea325b009b3932e798ff007284ee6 - Addition of a progress bar for basecalling\r\n * a93ae2cbeb8ea325b009b3932e798ff007284ee6 - Solve bug which was occuring when a read had no mod base context hits\r\n * 22a3140528f4b01ffb7e81c9bc668ec82aed20ab - Refactoring of Dorado pipeline system to Add AsyncQueue and use it in ReadSink/Nodes\r\n * 824459e4f4b8a7fa4c160c1af76d2a5ef760c66f - Add `\"cuda:auto\"` as alternative to `\"cuda:all\"` when selecting a compute accelerator device on CLI\r\n * d0c9387fc6083eddd5fb4c1659d0e73f99c32b10 - Store reads raw data internally in fp16 format\r\n * 6cd81705f879e350f1bb15760c02204945679385 - Switch post-ScalerNode ``raw_data`` to float16",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.2.2",
        "name": "v0.2.2",
        "release_id": 98076630,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/98076630",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/98076630",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2023-02-16T12:21:29Z",
        "date_published": "2023-02-16T13:43:22Z",
        "description": "# [0.2.1] (16 Feb 2023)\r\n\r\n * 121dddf9a3a288ca2c01dd2b732017a8f02c19a2 - Fix malformed SAM header\r\n",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.2.1",
        "name": "v0.2.1",
        "release_id": 92696557,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/92696557",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/92696557",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2023-02-16T00:44:26Z",
        "date_published": "2023-02-16T07:37:25Z",
        "description": "# [0.2.0] (16 Feb 2023)\r\n\r\nDorado v0.2.0 is a major release that introduces several performance and usability improvements. In particular, we are happy to announce the inclusion and release of v4.1.0 simplex models, which improved basecalling in low-complexity genomic regions.\r\n\r\n * 9b8ea1133b94e4071d7214000c8d7e10ed379540 - v4.1.0 with models higher accuracy basecalling in low-complexity genomic regions\r\n * 1311cbe06fbfa1a09785d4f3171548f99e0f739e - Increased basecalling performance on macOS\r\n * 74a04fc51765750e712289ecc7b7f9f162a96a54 - The stereo duplex model has been updated with calibrated qscores parameters\r\n * 1170ef6d0e0c04729530851b33d79e03ec65df4a - SAM output now include read groups\r\n * 63fb334a687876565c05e47707500142456a5ee4 - linux-arm64 builds\r\n * 117be24d9db35417ed8c06414eaac1a0f9349013 - Added `--read-id` filter and only basecalling paired reads in duplex for higher basecalling speed\r\n * a8ec89510b3f7208e43d41757bc3b025eb28e0b3 - Added `--min-qscore` filter\r\n * c80bae6020e7d60c17da54d3a47cdc0f876fd199 - Set builds to default to Release\r\n * e802181f401d7a2d283076f54e8d7da283e16f78 - Modbase CPU fixes\r\n * f0b96548651a9365712e0ca93483914a222a6bb4 - Better auto-batchsize detection on macos\r\n * 1a422db5b4008138927f12e1ad01410ef35a7139 - Switch to transparent model URLs\r\n * c2e694e66e573f7d4f49e41ce5a48a0c643918a5 - 260bps v4.0.0 5mCG_5hmCG@v2 models\r\n * 6b9249f4cc64ecb43134239fba2fe5682c5deb72 - Initial CUDA 12.0 support",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 92656684,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/92656684",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/92656684",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2022-12-12T16:49:57Z",
        "date_published": "2022-12-12T16:53:38Z",
        "description": "# [0.1.1] (12 Dec 2022)\r\n\r\n * 38b953f3863d44067593adb49d9496dd704fef69 - Improved stereo duplex calling performance\r\n * 0de73feeeab9cd21f4b5c72685f7008fe143f846 - Fixed reverse calls in stereo\r\n * 1f62d8d71dc3393e78b4bb572576ba057d2f155b - Fixed modification model matching",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.1.1",
        "name": "v0.1.1",
        "release_id": 85760778,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/85760778",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/85760778",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iiSeymour",
          "type": "User"
        },
        "date_created": "2022-12-05T19:46:17Z",
        "date_published": "2022-12-06T13:01:12Z",
        "description": "# [0.1.0] (05 Dec 2022)\r\n\r\n * 0ff3e59b3e6bf1231e7e4b5d4521de0f6c371278 - Introducing stereo duplex calling introduced\r\n * fe42f660d962782213b351fb057929fcd88cb67b - New v4.0.0 simplex models for kit 14\r\n * 9e9fae377b2ec95f6fa80bb8234fe38cf05f50ea - v4.0.0 400bps simplex 5mCG_5hmGC modification models\r\n * 59aef4968cdacb671ecf1d707a35951c08829e5b - Simplified modification calling interface `--modified-bases 5mCG_5hmGC`\r\n * c8d4f39eb37986548b7703cac4e3d66af4f8ff0c - Initial RNA calling support\r\n * 9747efde97887d06721aa357023faa8b3836681f - Remove move table overhang\r\n * eb4854a280e1dcdd7af19c7194c8ae8a40c2f459 - Improved simplex calling performance by selecting the optimal batchsize at startup\r\n",
        "html_url": "https://github.com/nanoporetech/dorado/releases/tag/v0.1.0",
        "name": "v0.1.0",
        "release_id": 85135782,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/nanoporetech/dorado/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/nanoporetech/dorado/releases/85135782",
        "value": "https://api.github.com/repos/nanoporetech/dorado/releases/85135782",
        "zipball_url": "https://api.github.com/repos/nanoporetech/dorado/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "parent_header": [
          "Dorado"
        ],
        "type": "Text_excerpt",
        "value": "The following are helpful commands for getting started with Dorado.\nTo see all options and their defaults, run `dorado -h` and `dorado <subcommand> -h`.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Model selection foreword",
        "parent_header": [
          "Dorado",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Dorado can automatically select a basecalling model using a selection of model speed (`fast`, `hac`, `sup`) and the pod5 data. This feature is **not** supported for fast5 data. If the model does not exist locally, dorado will automatically download the model and use it.\n\nDorado continues to support model paths.\n\nFor details read [Automatic model selection complex](#automatic-model-selection-complex).\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Simplex basecalling",
        "parent_header": [
          "Dorado",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "To run Dorado basecalling, using the automatically downloaded `hac` model on a directory of POD5 files or a single POD5 file _(.fast5 files are supported, but will not be as performant)_.\n\n```\n$ dorado basecaller hac pod5s/ > calls.bam\n```\n\nTo basecall a single file, simply replace the directory `pod5s/` with a path to your data file.\n\nIf basecalling is interrupted, it is possible to resume basecalling from a BAM file. To do so, use the `--resume-from` flag to specify the path to the incomplete BAM file. For example:\n\n```\n$ dorado basecaller hac pod5s/ --resume-from incomplete.bam > calls.bam\n```\n\n`calls.bam` will contain all of the reads from `incomplete.bam` plus the new basecalls *(`incomplete.bam` can be discarded after basecalling is complete)*.\n\n**Note: it is important to choose a different filename for the BAM file you are writing to when using `--resume-from`**. If you use the same filename, the interrupted BAM file will lose the existing basecalls and basecalling will restart from the beginning.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "DNA adapter and primer trimming",
        "parent_header": [
          "Dorado",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Dorado can detect and remove any adapter and/or primer sequences from the beginning and end of DNA reads. Note that if you intend to demultiplex the reads at some later time, trimming adapters and primers may result in some portions of the flanking regions of the barcodes being removed, which could interfere with correct demultiplexing.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "In-line with basecalling",
        "parent_header": [
          "Dorado",
          "Running",
          "Barcode Classification"
        ],
        "type": "Text_excerpt",
        "value": "By default, `dorado basecaller` will attempt to detect any adapter or primer sequences at the beginning and ending of reads, and remove them from the output sequence.\n\nThis functionality can be altered by using either the `--trim` or `--no-trim` options with `dorado basecaller`. The `--no-trim` option will prevent the trimming of detected barcode sequences as well as the detection and trimming of adapter and primer sequences.\n\nThe `--trim` option takes as its argument one of the following values:\n\n* `all` This is the the same as the default behavior. Any detected adapters or primers will be trimmed, and if barcoding is enabled then any detected barcodes will be trimmed.\n* `primers` This will result in any detected adapters or primers being trimmed, but if barcoding is enabled the barcode sequences will not be trimmed.\n* `adapters` This will result in any detected adapters being trimmed, but primers will not be trimmed, and if barcoding is enabled then barcodes will not be trimmed either.\n* `none` This is the same as using the --no-trim option. Nothing will be trimmed.\n\nIf adapter/primer trimming is done in-line with basecalling in combination with demultiplexing, then the software will automatically ensure that the trimming of adapters and primers does not interfere with the demultiplexing process. However, if you intend to do demultiplexing later as a separate step, then it is recommended that you disable adapter/primer trimming when basecalling with the `--no-trim` option, to ensure that any barcode sequences remain completely intact in the reads.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Trimming existing datasets",
        "parent_header": [
          "Dorado",
          "Running",
          "DNA adapter and primer trimming"
        ],
        "type": "Text_excerpt",
        "value": "Existing basecalled datasets can be scanned for adapter and/or primer sequences at either end, and trim any such found sequences. To do this, run:\n\n```\n$ dorado trim <reads> > trimmed.bam\n```\n\n`<reads>` can either be an HTS format file (e.g. FASTQ, BAM, etc.) or a stream of an HTS format (e.g. the output of Dorado basecalling).\n\nThe `--no-trim-primers` option can be used to prevent the trimming of primer sequences. In this case only adapter sequences will be trimmed.\n\nIf it is also your intention to demultiplex the data, then it is recommended that you demultiplex before trimming any adapters and primers, as trimming adapters and primers first may interfere with correct barcode classification.\n\nThe output of `dorado trim` will always be unaligned records, regardless of whether the input is aligned/sorted or not.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Custom primer trimming",
        "parent_header": [
          "Dorado",
          "Running",
          "DNA adapter and primer trimming"
        ],
        "type": "Text_excerpt",
        "value": "The software automatically searches for primer sequences used in Oxford Nanopore kits. However, you can specify an alternative set of primer sequences to search for when trimming either in-line with basecalling, or in combination with the `--trim` option. In both cases this is accomplished using the `--primer-sequences` command line option, followed by the full path and filename of a FASTA file containing the primer sequences you want to search for. The record names of the sequences do not matter. Note that if you use this option the normal primer sequences built-in to the dorado software will not be searched for.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "RNA adapter trimming",
        "parent_header": [
          "Dorado",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Adapters for RNA002 and RNA004 kits are automatically trimmed during basecalling. However, unlike in DNA, the RNA adapter cannot be trimmed post-basecalling.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Modified basecalling",
        "parent_header": [
          "Dorado",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Beyond the traditional A, T, C, and G basecalling, Dorado can also detect modified bases such as 5-methylcytosine (5mC), 5-hydroxymethylcytosine (5hmC), and N<sup>6</sup>-methyladenosine (6mA). These modified bases play crucial roles in epigenetic regulation.\n\nTo call modifications, extend the models argument with a comma-separated list of modifications:\n\n```\n$ dorado basecaller hac,5mCG_5hmCG,6mA pod5s/ > calls.bam\n```\n\nIn the example above, basecalling is performed with the detection of both 5mC/5hmC in CG contexts and 6mA in all contexts.\n\nRefer to the [DNA models](#dna-models) table's _Compatible Modifications_ column to see available modifications that can be called with the `--modified-bases` option.\n\nModified basecalling is also supported with [Duplex basecalling](#duplex), where it produces hemi-methylation calls.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Duplex",
        "parent_header": [
          "Dorado",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "To run Duplex basecalling, run the command:\n\n```\n$ dorado duplex sup pod5s/ > duplex.bam\n```\n\nWhen using the `duplex` command, two types of DNA sequence results will be produced: 'simplex' and 'duplex'. Any specific position in the DNA which is in a duplex read is also seen in two simplex strands (the template and complement).  So, each DNA position which is duplex sequenced will be covered by a minimum of three separate readings in the output.\n\nThe `dx` tag in the BAM record for each read can be used to distinguish between simplex and duplex reads:\n* `dx:i:1` for duplex reads.\n* `dx:i:0` for simplex reads which don't have duplex offsprings.\n* `dx:i:-1` for simplex reads which have duplex offsprings.\n\nDorado will report the duplex rate as the number of nucleotides in the duplex basecalls multiplied by two and divided by the total number of nucleotides in the simplex basecalls. This value is a close approximation for the proportion of nucleotides which participated in a duplex basecall.\n\nDuplex basecalling can be performed with modified base detection, producing hemi-methylation calls for duplex reads:\n\n```\n$ dorado duplex hac,5mCG_5hmCG pod5s/ > duplex.bam\n```\nMore information on how hemi-methylation calls are represented can be found in [page 7 of the SAM specification document (version aa7440d)](https://samtools.github.io/hts-specs/SAMtags.pdf) and [Modkit documentation](https://nanoporetech.github.io/modkit/intro_pileup_hemi.html).\n\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Alignment",
        "parent_header": [
          "Dorado",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Dorado supports aligning existing basecalls or producing aligned output directly.\n\nTo align existing basecalls, run:\n\n```\n$ dorado aligner <index> <reads>  > aligned.bam\n```\nwhere `index` is a reference to align to in (FASTQ/FASTA/.mmi) format and `reads` is a folder or file in any HTS format.\n\nWhen reading from an input folder, `dorado aligner` also supports emitting aligned files to an output folder, which will preserve the file structure of the inputs:\n\n```\n$ dorado aligner <index> <input_read_folder> --output-dir <output_read_folder>\n```\n\nAn alignment summary containing alignment statistics for each read can be generated with the `--emit-summary` option. The file will be saved in the `--output-dir` folder.\n\nTo basecall with alignment with duplex or simplex, run with the `--reference` option:\n\n```\n$ dorado basecaller <model> <reads> --reference <index> > calls.bam\n```\n\nAlignment uses [minimap2](https://github.com/lh3/minimap2) and by default uses the `lr:hq` preset. This can be overridden by passing a minimap option string, `--mm2-opts`, using the '-x <preset>' option and/or individual options such as `-k` and `-w` to set kmer and window size respectively. For a complete list of supported minimap2 options use '--mm2-opts --help'. For example:\n```\n$ dorado aligner <index> <input_read_folder> --output-dir <output_read_folder> --mm2-opt \"-x splice --junc-bed <annotations_file>\"\n$ dorado aligner <index> <input_read_folder> --output-dir <output_read_folder> --mm2-opt --help\n$ dorado basecaller <model> <reads> --reference <index> --mm2-opt \"-k 15 -w 10\" > calls.bam\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Barcode Classification",
        "parent_header": [
          "Dorado",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Dorado supports barcode classification for existing basecalls as well as producing classified basecalls directly.\n\n#### In-line with basecalling\n\nIn this mode, reads are classified into their barcode groups during basecalling as part of the same command. To enable this, run:\n```\n$ dorado basecaller <model> <reads> --kit-name <barcode-kit-name> > calls.bam\n```\n\nThis will result in a single output stream with classified reads. The classification will be reflected in the read group name as well as in the `BC` tag of the output record.\n\nBy default, Dorado is set up to trim the barcode from the reads. To disable trimming, add `--no-trim` to the cmdline.\n\nThe default heuristic for double-ended barcodes is to look for them on either end of the read. This results in a higher classification rate but can also result in a higher false positive count. To address this, `dorado basecaller` also provides a `--barcode-both-ends` option to force double-ended barcodes to be detected on both ends before classification. This will reduce false positives dramatically, but also lower overall classification rates.\n\nThe output from `dorado basecaller` can be demultiplexed into per-barcode BAMs using `dorado demux`. e.g.\n\n```\n$ dorado demux --output-dir <output-dir> --no-classify <input-bam>\n```\nThis will output a BAM file per barcode in the `output-dir`.\n\nThe barcode information is reflected in the BAM `RG` header too. Therefore demultiplexing is also possible through `samtools split`. e.g.\n```\n$ samtools split -u <output-dir>/unclassified.bam -f \"<output-dir>/<prefix>_%!.bam\" <input-bam>\n```\nHowever, `samtools split` uses the full `RG` string as the filename suffix, which can result in very long file names. We recommend using `dorado demux` to split barcoded BAMs.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Classifying existing datasets",
        "parent_header": [
          "Dorado",
          "Running",
          "Barcode Classification"
        ],
        "type": "Text_excerpt",
        "value": "Existing basecalled datasets can be classified as well as demultiplexed into per-barcode BAMs using the standalone `demux` command in `dorado`. To use this, run\n\n```\n$ dorado demux --kit-name <kit-name> --output-dir <output-folder-for-demuxed-bams> <reads>\n```\n\n`<reads>` can either be a folder or a single file in an HTS format file (e.g. FASTQ, BAM, etc.) or a stream of an HTS format (e.g. the output of dorado basecalling).\n\nThis results in multiple BAM files being generated in the output folder, one per barcode (formatted as `KITNAME_BARCODEXX.bam`) and one for all unclassified reads. As with the in-line mode, `--no-trim` and `--barcode-both-ends` are also available as additional options.\n\nIf the input file is aligned/sorted and `--no-trim` is chosen, each of the output barcode-specific BAM files will also be sorted and indexed. However, if trimming is enabled (which is the default), the alignment information is removed and the output BAMs are unaligned. This is done because the alignment tags and positions are invalidated once a sequence is altered.\n\nHere is an example output folder\n\n```\n$ dorado demux --kit-name SQK-RPB004 --output-dir /tmp/demux reads.fastq\n\n$ ls -1 /tmp/demux\nSQK-RPB004_barcode01.bam\nSQK-RPB004_barcode02.bam\nSQK-RPB004_barcode03.bam\n...\nunclassified.bam\n```\n\nA summary file listing each read and its classified barcode can be generated with the `--emit-summary` option in `dorado demux`. The file will be saved in the `--output-dir` folder.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Demultiplexing mapped reads",
        "parent_header": [
          "Dorado",
          "Running",
          "Barcode Classification"
        ],
        "type": "Text_excerpt",
        "value": "If the input data files contain mapping data, this information can be preserved in the output files. To do this, you must use the `--no-trim` option. Trimming the barcodes will invalidate any mapping information that may be contained in the input files, and therefore the application will exclude any mapping information if `--no-trim` is not specified.\n\nIt is also possible to get `dorado demux` to sort and index any output bam files that contain mapped reads. To enable this, use the `--sort-bam` option. If you use this option then you must also use the `--no-trim` option, as trimming will prevent any mapping information from being included in the output files. Index files (.bai extension) will only be created for BAM files that contain mapped reads and were sorted. Note that for large datasets sorting the output files may take a few minutes.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using a sample sheet",
        "parent_header": [
          "Dorado",
          "Running",
          "Barcode Classification"
        ],
        "type": "Text_excerpt",
        "value": "Dorado is able to use a sample sheet to restrict the barcode classifications to only those present, and to apply aliases to the detected classifications. This is enabled by passing the path to a sample sheet to the `--sample-sheet` argument when using the `basecaller` or `demux` commands. See [here](documentation/SampleSheets.md) for more information.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Custom barcodes",
        "parent_header": [
          "Dorado",
          "Running",
          "Barcode Classification"
        ],
        "type": "Text_excerpt",
        "value": "In addition to supporting the standard barcode kits from Oxford Nanopore, Dorado also supports specifying custom barcode kit arrangements and sequences. This is done by passing a barcode arrangement file via the `--barcode-arrangement` argument (either to `dorado demux` or `dorado basecaller`). Custom barcode sequences can optionally be specified via the `--barcode-sequences` option. See [here](documentation/CustomBarcodes.md) for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Poly(A) tail estimation",
        "parent_header": [
          "Dorado",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Dorado has initial support for estimating poly(A) tail lengths for cDNA (PCS and PCB kits) and RNA. Note that Oxford Nanopore cDNA reads are sequenced in two different orientations and Dorado poly(A) tail length estimation handles both (A and T homopolymers). This feature can be enabled by passing `--estimate-poly-a` to the `basecaller` command. It is disabled by default. The estimated tail length is stored in the `pt:i` tag of the output record. Reads for which the tail length could not be estimated will not have the `pt:i` tag. Custom primer sequences and estimation of interrupted tails can be configured through the `--poly-a-config` option. See [here](documentation/PolyTailConfig.md) for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Troubleshooting",
        "parent_header": [
          "Dorado",
          "Running",
          "Read Error Correction"
        ],
        "type": "Text_excerpt",
        "value": "1. In case the process is consuming too much memory for your system, try running it with a smaller index size. For example:\n    ```\n    $ dorado correct reads.fastq --index-size 4G > corrected_reads.fasta\n    ```\n2. The auto-computed inference batch size may still be too high for your system. If you are experiencing warnings/errors regarding available GPU memory, try reducing the batch size / selecting it manually. For example:\n    ```\n    $ dorado correct reads.fastq --batch-size <number> > corrected_reads.fasta\n    ```\n3. In case your output FASTA file contains a very low amount of corrected reads compared to the input, please check the following:\n    - The input dataset has average read length `>=10kbp`. Dorado Correct is designed for long reads, and it will not work on short libraries.\n    - Input coverage is reasonable, preferrably `>=30x`.\n    - Check the average base qualities of the input dataset. Dorado Correct expects accurate inputs for both mapping and inference.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running Duplex Basecalling in a Distributed Fashion",
        "parent_header": [
          "Dorado",
          "Troubleshooting Guide"
        ],
        "type": "Text_excerpt",
        "value": "If running duplex basecalling in a distributed fashion (e.g. on a SLURM or Kubernetes cluster) it is important to split POD5 files as described above. The reason is that duplex basecalling requires aggregation of reads from across a whole sequencing run, which will be distributed over multiple POD5 files.\nThe splitting strategy described above ensures that all reads which need to be aggregated are in the same POD5 file. Once the split is performed one can execute multiple jobs against smaller subsets of POD5 (e.g one job per 100 channels). This will allow basecalling to be distributed across nodes on a cluster. \nThis will generate multiple BAMs which can be merged. This apporach also offers some resilience as if any job fails it can be restarted without having to re-run basecalling against the entire dataset.\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:54:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 493
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Low GPU Utilization",
        "parent_header": [
          "Dorado",
          "Troubleshooting Guide"
        ],
        "type": "Text_excerpt",
        "value": "Low GPU utilization can lead to reduced basecalling speed. This problem can be identified using tools such as `nvidia-smi` and `nvtop`. Low GPU utilization often stems from I/O bottlenecks in basecalling. Here are a few steps you can take to improve the situation:\n\n1. Opt for POD5 instead of .fast5: POD5 has superior I/O performance and will enhance the basecall speed in I/O constrained environments.\n2. Transfer data to the local disk before basecalling: Slow basecalling often occurs because network disks cannot supply Dorado with adequate speed. To mitigate this, make sure your data is as close to your host machine as possible.\n3. Choose SSD over HDD: Particularly for duplex basecalling, using a local SSD can offer significant speed advantages. This is due to the duplex basecalling algorithm's reliance on heavy random access of data.\n\n"
      },
      "source": "https://raw.githubusercontent.com/nanoporetech/dorado/release-v0.8/README.md",
      "technique": "header_analysis"
    }
  ]
}