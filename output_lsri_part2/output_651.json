{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/intermod-pro/presto-measure"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-10T13:56:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-04T08:42:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Collection of measurement and analysis scripts for the Presto platform"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`sweep`",
        "parent_header": [
          "presto-measure",
          "Summary of modules (scripts)"
        ],
        "type": "Text_excerpt",
        "value": "Simple single-frequency sweep on the resonator using **lockin** mode. If\n[resonator_tools](https://github.com/sebastianprobst/resonator_tools) is available, perform fit to extract resonance\nfrequency and internal and external quality factors.\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`sweep_power`",
        "parent_header": [
          "presto-measure",
          "Summary of modules (scripts)"
        ],
        "type": "Text_excerpt",
        "value": "2D sweep of drive amplitude and frequency on the resonator using **lockin** mode. If\n[resonator_tools](https://github.com/sebastianprobst/resonator_tools) is available, perform fit to extract resonance\nfrequency and internal and external quality factors for a slice of the data at a given drive amplitude.\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`two_tone_power`",
        "parent_header": [
          "presto-measure",
          "Summary of modules (scripts)"
        ],
        "type": "Text_excerpt",
        "value": "Two tone spectroscopy using **lockin** mode. 2D sweep of qubit drive amplitude and frequency, with fixed resonator\ndrive frequency and amplitude.\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`two_tone_pulsed`",
        "parent_header": [
          "presto-measure",
          "Summary of modules (scripts)"
        ],
        "type": "Text_excerpt",
        "value": "Two tone spectroscopy using **pulsed** mode. 1D sweep of qubit drive frequency, with fixed amplitude and fixed\nresonator drive frequency and amplitude.\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`rabi_amp`",
        "parent_header": [
          "presto-measure",
          "Summary of modules (scripts)"
        ],
        "type": "Text_excerpt",
        "value": "Rabi oscillations by driving the qubit with a pulse of variable amplitude and constant duration. Multiple pulses can be\napplied to increase accuracy of fitted results.\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`ramsey_single`",
        "parent_header": [
          "presto-measure",
          "Summary of modules (scripts)"
        ],
        "type": "Text_excerpt",
        "value": "Measure Ramsey oscillations by changing the delay between two \u03c0/2 pulses. Fit detuning of control drive frequency from\nqubit, and T2*. The control pulse has a sin^2 envelope, while the readout pulse is square.\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`ramsey_chevron`",
        "parent_header": [
          "presto-measure",
          "Summary of modules (scripts)"
        ],
        "type": "Text_excerpt",
        "value": "Measure a Ramsey chevron pattern by changing the delay between two \u03c0/2 pulses and their frequency.\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`excited_sweep`",
        "parent_header": [
          "presto-measure",
          "Summary of modules (scripts)"
        ],
        "type": "Text_excerpt",
        "value": "Pulsed frequency sweep on the resonator with and without a \u03c0/2 control pulse: plot (and fit) resonance curves for\nground and excited states.\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`t1`",
        "parent_header": [
          "presto-measure",
          "Summary of modules (scripts)"
        ],
        "type": "Text_excerpt",
        "value": "Measure the energy-relaxation time T1.\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`ramsey_echo`",
        "parent_header": [
          "presto-measure",
          "Summary of modules (scripts)"
        ],
        "type": "Text_excerpt",
        "value": "Measure the decoherence time T2 with a Ramsey echo experiment.\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`ac_stark_shift`",
        "parent_header": [
          "presto-measure",
          "Summary of modules (scripts)"
        ],
        "type": "Text_excerpt",
        "value": "Measure AC-Stark shift and measurement-induced dephasing by performing a Ramsey measurement while driving the resonator\nwith variable power.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9876461531956797,
      "result": {
        "original_header": "presto-measure",
        "type": "Text_excerpt",
        "value": "Collection of measurement and analysis scripts for the Presto platform. \nThe target use case is the characterization of a circuit-QED device with two superconducting transmon qubits coupled by\na tunable coupler. Each qubit has a readout resonator and a dedicated control line. The resonators are coupled to a\nsingle readout line in a notch configuration. The coupler accepts a DC bias and an AC drive. The readout line is\npreamplified by a Josephson parametric amplifier (JPA) which is biased and pumped. See [Bengtsson\n2020](https://doi.org/10.1103/PhysRevApplied.14.034010) for a very similar setup. \n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9699902778807243,
      "result": {
        "original_header": "`jpa_sweep_bias`",
        "type": "Text_excerpt",
        "value": "2D sweep of DC bias (JPA pump line) and frequency of probe (qubits readout line) to find the modulation curve of the\nJPA.\n \n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9949896674610637,
      "result": {
        "original_header": "`jpa_sweep_power_bias`",
        "type": "Text_excerpt",
        "value": "3D sweep of AC pump power and DC bias (JPA pump line) and frequency of probe (qubits readout line) to find operating\npoint of JPA, i.e. where there is gain. It can be run with a single value of pump power, in which case it's a 2D sweep. \n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/intermod-pro/presto-measure/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/intermod-pro/presto-measure/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "intermod-pro/presto-measure"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "presto-measure"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9906361442911004,
      "result": {
        "original_header": "Older stuff",
        "type": "Text_excerpt",
        "value": "Scripts in `bak` folder may or may not work, with higher chances on the may-not case.\n \n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/intermod-pro/presto-measure/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Intermodulation Products AB\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "presto-measure"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "intermod-pro"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 702974,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:29:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "presto-measure"
        ],
        "type": "Text_excerpt",
        "value": "In general, the use is like the following:\n```python\n# import the experiment class\nfrom some_module import SomeExperiment\n\n# initialize the experiment\nexperiment = SomeExperiment(\n    # some parameters required\n    # ...\n)\n\n# run the experiment: it might take time, and it will save at the end\npresto_address = \"192.168.42.50\"  # or whatever else\nsave_filename = experiment.run(presto_address)\n\n# analyze the data and get nice plots\nexperiment.analyze()\n\n# you can also load older data\nold_experiment = SomeExperiment.load(\"/path/to/saved/data.h5\")\nold_experiment.analyze()\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/intermod-pro/presto-measure/master/README.md",
      "technique": "header_analysis"
    }
  ]
}