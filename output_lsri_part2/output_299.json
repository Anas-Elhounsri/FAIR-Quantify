{
  "application_domain": [
    {
      "confidence": 0.9504526303602303,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udcd6 Citation",
        "parent_header": [
          "\ud83d\udc4b Attribution"
        ],
        "type": "Text_excerpt",
        "value": "> [Prediction and Curation of Missing Biomedical Identifier Mappings with Biomappings](https://doi.org/10.1093/bioinformatics/btad130)\n> <br />Hoyt, C. T., Hoyt, A. L., and Gyori, B. M. (2022)\n> <br />*Bioinformatics*, btad130. \n\n```bibtex\n@article{Hoyt2022,\n   title = {{Prediction and Curation of Missing Biomedical Identifier Mappings with Biomappings}},\n   author = {Hoyt, Charles Tapley and Hoyt, Amelia L and Gyori, Benjamin M},\n   journal = {Bioinformatics},\n   year = {2023},\n   month = {03},\n   issn = {1367-4811},\n   doi = {10.1093/bioinformatics/btad130},\n   url = {https://doi.org/10.1093/bioinformatics/btad130},\n   note = {btad130},\n   eprint = {https://academic.oup.com/bioinformatics/advance-article-pdf/doi/10.1093/bioinformatics/btad130/49521613/btad130.pdf},\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Hoyt, Charles Tapley and Hoyt, Amelia L and Gyori, Benjamin M",
        "doi": "10.1093/bioinformatics/btad130",
        "format": "bibtex",
        "title": "{Prediction and Curation of Missing Biomedical Identifier Mappings with Biomappings}",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1093/bioinformatics/btad130",
        "value": "@article{Hoyt2022,\n    eprint = {https://academic.oup.com/bioinformatics/advance-article-pdf/doi/10.1093/bioinformatics/btad130/49521613/btad130.pdf},\n    note = {btad130},\n    url = {https://doi.org/10.1093/bioinformatics/btad130},\n    doi = {10.1093/bioinformatics/btad130},\n    issn = {1367-4811},\n    month = {03},\n    year = {2023},\n    journal = {Bioinformatics},\n    author = {Hoyt, Charles Tapley and Hoyt, Amelia L and Gyori, Benjamin M},\n    title = {{Prediction and Curation of Missing Biomedical Identifier Mappings with Biomappings}},\n}"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "---\nlayout: page\ntitle: Contributor Covenant Code of Conduct\npermalink: /coc\n---\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\ncthoyt@gmail.com.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/docs/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biopragmatics/biomappings"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "---\nlayout: page\ntitle: Contributing\npermalink: /contributing/\n---\nContributions to Biomappings are welcomed and encouraged. Thanks for\nconsidering to participate.\n\nAll contributors, maintainers, and participants of the Biomappings project\nare expected to follow our [Code of Conduct](CODE_OF_CONDUCT.md).\nThis document is organized as follows:\n\n1. [Content Contribution](#content-contribution)\n2. [Code Contribution](#code-contribution)\n\n## Content Contribution\n\nThere are several ways to add new content to Biomappings:\n\n1. Write a script that automatically generates new mappings\n2. Curate mappings using the local web application\n3. Suggest curations in the issue tracker\n\n### Who Can Add New Mappings\n\nNew mappings can be added by anyone, even if they are for a resource they\ndo not themselves maintain. A main goal of Biomappings is to fill in the\ngaps left by primary curation projects, so expertise is welcome from\nanywhere.\n\n### Requirements for New Mappings\n\n1. Mappings must use canonical Bioregistry prefixes and local unique identifier\n   standards\n2. Mappings should not duplicate previously curated work (e.g., from primary resources or other Biomappings curations)\n3. Mappings should be one-to-one between vocabularies when possible\n4. Mappings should be properly attributed with ORCID for manual curation or provenance to a script if automatically\n   generated.\n\n### Editing Mappings\n\nSometimes, it becomes clear that a mapping was not correct. If this is the case,\nthan anyone is free to turn a manually curated mapping into an incorrect\nmapping.\nHowever, the original contributor should be contacted (which should be possible\nvia the `git blame` feature on GitHub as well as the ORCID identifier\nannotation).\n\nCurrently, Biomappings uses a simple format and does not track full change\nhistory for each mapping. Therefore, the ORCID identifier should be overwritten\nby the last person to make a manual curation to the mapping.\n\n### Review of Additions and Edits\n\nReview of edits to existing records is handled by the Biomappings Review Team,\nwhose membership and conduct is described in the Biomappings's\n[Project Governance](GOVERNANCE.md).\n\n## Code Contribution\n\nThis project uses the [GitHub Flow](https://guides.github.com/introduction/flow)\nmodel for code contributions. Follow these steps:\n\n1. [Create a fork](https://help.github.com/articles/fork-a-repo) of the upstream\n   repository\n   at [`biopragmatics/biomappings`](https://github.com/biopragmatics/biomappings)\n   on your GitHub account (or in one of your organizations)\n2. [Clone your fork](https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository)\n   with `git clone https://github.com/<your namespace here>/biomappings.git`\n3. Make and commit changes to your fork with `git commit`\n4. Push changes to your fork with `git push`\n5. Repeat steps 3 and 4 as needed\n6. Submit a pull request back to the upstream repository\n\n### Merge Model\n\nBiomappings uses [squash merges](https://docs.github.com/en/github/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/about-pull-request-merges#squash-and-merge-your-pull-request-commits)\nto group all related commits in a given pull request into a single commit upon\nacceptance and merge into the main branch. This has several benefits:\n\n1. Keeps the commit history on the main branch focused on high-level narrative\n2. Enables people to make lots of small commits without worrying about muddying\n   up the commit history\n3. Commits correspond 1-to-1 with pull requests\n\n### Code Style\n\nThis project encourages the use of optional static typing. It\nuses [`mypy`](http://mypy-lang.org/) as a type checker\nand [`sphinx_autodoc_typehints`](https://github.com/agronholm/sphinx-autodoc-typehints)\nto automatically generate documentation based on type hints. You can check if\nyour code passes `mypy` with `tox -e mypy`.\n\nThis project uses [`black`](https://github.com/psf/black) to automatically\nenforce a consistent code style. You can apply `black` and other pre-configured\nlinters with `tox -e lint`.\n\nThis project uses [`flake8`](https://flake8.pycqa.org) and several plugins for\nadditional checks of documentation style, security issues, good variable\nnomenclature, and more (see [`tox.ini`](tox.ini) for a list of flake8 plugins). You can check if your\ncode passes `flake8` with `tox -e flake8`.\n\nEach of these checks are run on each commit using GitHub Actions as a continuous\nintegration service. Passing all of them is required for accepting a\ncontribution. If you're unsure how to address the feedback from one of these\ntools, please say so either in the description of your pull request or in a\ncomment, and we will help you.\n\n### Logging\n\nPython's builtin `print()` should not be used (except when writing to files),\nit's checked by the\n[`flake8-print`](https://github.com/jbkahn/flake8-print) plugin to `flake8`. If\nyou're in a command line setting or `main()` function for a module, you can use\n`click.echo()`. Otherwise, you can use the builtin `logging` module by adding\n`logger = logging.getLogger(__name__)` below the imports at the top of your\nfile.\n\n### Documentation\n\nAll public functions (i.e., not starting with an underscore `_`) must be\ndocumented using the [sphinx documentation format](https://sphinx-rtd-tutorial.readthedocs.io/en/latest/docstrings.html#the-sphinx-docstring-format).\nThe [`darglint`](https://github.com/terrencepreilly/darglint) plugin to `flake8`\nreports on functions that are not fully documented.\n\nThis project uses [`sphinx`](https://www.sphinx-doc.org) to automatically build\ndocumentation into a narrative structure. You can check that the documentation\nproperly builds with `tox -e docs-test`.\n\n### Testing\n\nFunctions in this repository should be unit tested. These can either be written\nusing the `unittest` framework in the `tests/` directory or as embedded\ndoctests. You can check that the unit tests pass with `tox -e py` and that the\ndoctests pass with `tox -e doctests`. These tests are required to pass for\naccepting a contribution.\n\n### Syncing your fork\n\nIf other code is updated before your contribution gets merged, you might need to\nresolve conflicts against the main branch. After cloning, you should add the\nupstream repository with\n\n```shell\n$ git remote add biopragmatics https://github.com/biopragmatics/biomappings.git\n```\n\nThen, you can merge upstream code into your branch. You can also use the GitHub\nUI to do this by following [this tutorial](https://docs.github.com/en/github/collaborating-with-pull-requests/working-with-forks/syncing-a-fork).\n\n### Python Version Compatibility\n\nThis project aims to support all versions of Python that have not passed their\nend-of-life dates. After end-of-life, the version will be removed from the Trove\nqualifiers in the [`setup.cfg`](https://github.com/biopragmatics/biomappings/blob/main/setup.cfg)\nand from the GitHub Actions testing configuration.\n\nSee https://endoflife.date/python for a timeline of Python release and\nend-of-life dates.\n\n#### Review of Pull Requests\n\nReview of edits to existing records is handled by the Biomappings Core\nDevelopment Team, whose membership and conduct is described in the Biomappings's\n[Project Governance](GOVERNANCE.md).\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/docs/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\ude4f Contributing",
        "type": "Text_excerpt",
        "value": "We welcome contributions in the form of curations to any of the four primary TSV\nfiles in this repository via a pull request to the main Biomappings repository\nat https://github.com/biopragmatics/biomappings.\n\nPredicted mappings can be curated by moving a row in the `predictions.tsv` file\ninto either the positive mappings file (`mappings.tsv`), negative mappings file\n(`incorrect.tsv`), or the unsure mappings file (`unsure.tsv`). Additionally,\nthe `confidence` column should be removed, a `type` column should be added with\nthe value `manually_reviewed`, and the `source` column should be changed from\nthe prediction script's URI to your ORCiD identifier written as a CURIE\n(e.g., `orcid:0000-0003-1307-2508`).\n\nNovel mappings can be curated by adding a full row to the positive mappings\nfile (`mappings.tsv`) following the format of the previous lines.\n\nWhile Biomappings is generally able to use any predicate written as a [compact URI (CURIE)](http://www.w3.org/TR/curie),\nit's preferred to use predicates from the [Simple Knowledge Organization System (SKOS)](https://www.w3.org/2004/02/skos/)\nto denote hierarchical relationships. The three most common predicates that are\nuseful for curating mappings are:\n\n| Predicate                                                                             | Description                                     |\n|---------------------------------------------------------------------------------------|-------------------------------------------------|\n| [`skos:exactMatch`](https://www.w3.org/2009/08/skos-reference/skos.html#exactMatch)   | The two terms can be used interchangeably       |\n| [`skos:broadMatch`](https://www.w3.org/2009/08/skos-reference/skos.html#broadMatch)   | The object term is a super-class of the subject |\n| [`skos:narrowMatch`](https://www.w3.org/2009/08/skos-reference/skos.html#narrowMatch) | The object term is a sub-class of the subject   |\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Online via GitHub Web Interface",
        "parent_header": [
          "\ud83d\ude4f Contributing"
        ],
        "type": "Text_excerpt",
        "value": "GitHub has an interface for editing files directly in the browser. It will take care of creating a branch for you and\ncreating a pull request. After logging into GitHub, click one of the following links to be brought to the editing\ninterface:\n\n- [True Mappings](https://github.com/biopragmatics/biomappings/edit/master/src/biomappings/resources/mappings.tsv)\n- [False Mappings](https://github.com/biopragmatics/biomappings/edit/master/src/biomappings/resources/incorrect.tsv)\n- [Unsure Mappings](https://github.com/biopragmatics/biomappings/edit/master/src/biomappings/resources/unsure.tsv)\n- [Predictions](https://github.com/biopragmatics/biomappings/edit/master/src/biomappings/resources/predictions.tsv)\n\nThis has the caveat that you can only edit one file at a time. It's possible to navigate to your own forked version of\nthe repository after, to the correct branch (will not be the default one), then edit other files in the web interface as\nwell. However, if you would like to do this, then it's probably better to see the following instructions on contributing\nlocally.\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "\u270d\ufe0f Local via a Text Editor",
        "parent_header": [
          "\ud83d\ude4f Contributing"
        ],
        "type": "Text_excerpt",
        "value": "1. Fork the repository at https://github.com/biopragmatics/biomappings, clone locally, and make a new branch (see below)\n2. Edit one or more of the resource files (`mappings.tsv`, `incorrect.tsv`, `unsure.tsv`, `predictions.tsv`)\n3. Commit to your branch, push, and create a pull request back to the upstream repository.\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83c\udf10 Local via the Web Curation Interface",
        "parent_header": [
          "\ud83d\ude4f Contributing"
        ],
        "type": "Text_excerpt",
        "value": "Rather than editing files locally, this repository also comes with a web-based curation interface. Install the code in\ndevelopment mode with the `web` option (which installs `flask` and `flask-bootstrap`) using:\n\n```bash\n$ git clone git+https://github.com/biopragmatics/biomappings.git\n$ cd biomappings\n$ git checkout -b your-branch-name\n$ pip install -e .[web]\n```\n\nThe web application can be run with:\n\n```bash\n$ biomappings web\n```\n\nIt can be accessed by navigating to http://localhost:5000/ in your browser.\nAfter you do some curations, the web application takes care of interacting with\nthe git repository from which you installed `biomappings` via the \"commit and\npush\" button.\n\n**Note** if you've installed `biomappings` via [PyPI](https://pypi.org/project/biomappings/),\nthen running the web curation interface doesn't make much sense,\nsince it's non-trivial for most users to find the location of the resources within your Python installation's\n`site-packages` folder, and you won't be able to contribute them back.\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Curation Attribution",
        "parent_header": [
          "\ud83d\ude4f Contributing"
        ],
        "type": "Text_excerpt",
        "value": "There are three places where curators of Biomappings are credited:\n\n1. ORCiD identifiers of curators are stored in each mapping\n2. The [summary website](https://biopragmatics.github.io/biomappings) groups\n   and counts contributions curator\n3. A curation leaderboard is automatically uploaded to [APICURON](https://apicuron.org/database?resource_uri=https:%2F%2Fbiomappings.github.io%2Fbiomappings%2F).\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-08-05T16:57:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-14T05:45:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "\ud83d\uddfa\ufe0f Community curated and predicted equivalences and related mappings between named biological entities that are not available from primary sources."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udcca Summary",
        "parent_header": [
          "\ud83d\udcbe Data"
        ],
        "type": "Text_excerpt",
        "value": "Summary statistics of the manually curated mappings and predicted mappings\nare automatically generated nightly and deployed as a website with GitHub\nActions to https://biopragmatics.github.io/biomappings.\n\n[![Summary statistics](docs/img/summary.svg)](https://biopragmatics.github.io/biomappings)\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8978263892795495,
      "result": {
        "original_header": "\ud83d\udcbe Data",
        "type": "Text_excerpt",
        "value": "The primary and derived data in this repository are both available under\nthe [CC0 1.0 Universal License](https://github.com/biopragmatics/biomappings/blob/master/LICENSE). \nPredictions are generated by scripts in the [`scripts/`](scripts) folder. Each\nuses the utilities from the `biomappings.resources` module to programmatically\ninteract with the mappings files, e.g., to add predictions.\n \n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9283646181226997,
      "result": {
        "original_header": "\ud83e\udd52 Derived",
        "type": "Text_excerpt",
        "value": "Equivalences and related mappings that are available from the OBO Foundry and other primary sources can be accessed\nthrough [Inspector Javert's Xref Database](https://zenodo.org/record/3757266)\non Zenodo which was described in [this blog post](https://cthoyt.com/2020/04/19/inspector-javerts-xref-database.html).\n \n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8783776856189357,
      "result": {
        "original_header": "\ud83d\udcb0 Funding",
        "type": "Text_excerpt",
        "value": "The development of the Bioregistry is funded by the DARPA Young Faculty Award W911NF2010255 (PI:\nBenjamin M. Gyori).\n \n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.859923572724544,
      "result": {
        "original_header": "\ud83c\udf6a Cookiecutter",
        "type": "Text_excerpt",
        "value": "This package was created with [@audreyfeldroy](https://github.com/audreyfeldroy)'s\n[cookiecutter](https://github.com/cookiecutter/cookiecutter) package using [@cthoyt](https://github.com/cthoyt)'s\n[cookiecutter-snekpack](https://github.com/cthoyt/cookiecutter-snekpack) template.\n \n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9334684391627768,
      "result": {
        "original_header": "\ud83d\udee0\ufe0f For Developers",
        "type": "Text_excerpt",
        "value": "\nThe final section of the README is for if you want to get involved by making a code contribution. \n1. Uses [Bump2Version](https://github.com/c4urself/bump2version) to switch the version number in the `setup.cfg`,\n   `src/biomappings/version.py`, and [`docs/source/conf.py`](docs/source/conf.py) to not have the `-dev` suffix\n2. Packages the code in both a tar archive and a wheel using [`build`](https://github.com/pypa/build)\n3. Uploads to PyPI using [`twine`](https://github.com/pypa/twine). Be sure to have a `.pypirc` file configured to avoid the need for manual input at this\n   step\n4. Push to GitHub. You'll need to make a release going with the commit where the version was bumped.\n5. Bump the version to the next patch. If you made big changes and want to bump the version by minor, you can\n   use `tox -e bumpversion minor` after.\n</details>\n \n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9886362235951835,
      "result": {
        "type": "Text_excerpt",
        "value": "\nBiomappings is a repository of community curated and predicted equivalences and\nrelated mappings between named biological entities that are not available from\nprimary sources. It's also a place where anyone can contribute curations\nof predicted mappings or their own novel mappings. Ultimately, we hope that\nprimary resources will integrate these mappings and distribute them themselves. \n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biopragmatics/biomappings/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://biomappings.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biopragmatics/biomappings/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/cancer-cell-line-mappings.ipynb"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/cancer-cell-line-mappings.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/curation-precision.ipynb"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/curation-precision.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/chemicals-unbiased-evaluation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/chemicals-unbiased-evaluation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/Process%20CLO%20Mappings.ipynb"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/Process%20CLO%20Mappings.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/hetionet-pathway-duplication.ipynb"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/hetionet-pathway-duplication.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/curation-benefit.ipynb"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/curation-benefit.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/clinical-trials-indication-mapping.ipynb"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/notebooks/clinical-trials-indication-mapping.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biopragmatics/biomappings"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/docs/img/mappings_screenshot.png"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/docs/img/summary.svg"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "\u2b07\ufe0f Installation",
        "type": "Text_excerpt",
        "value": "The most recent release can be installed from\n[PyPI](https://pypi.org/project/biomappings/) with:\n\n```bash\n$ pip install biomappings\n```\n\nThe most recent code and data can be installed directly from GitHub with:\n\n```bash\n$ pip install git+https://github.com/biopragmatics/biomappings.git\n```\n\nTo install in development mode and create a new branch, use the following:\n\n```bash\n$ git clone git+https://github.com/biopragmatics/biomappings.git\n$ cd biomappings\n$ pip install -e .\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9053508995823775,
      "result": {
        "original_header": "\ud83d\udcbe Data",
        "type": "Text_excerpt",
        "value": "The data are available through the following four files on\nthe [biopragmatics/biomappings](https://github.com/biopragmatics/biomappings) GitHub repository. \n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9322219782257524,
      "result": {
        "original_header": "\ud83c\udf6a Cookiecutter",
        "type": "Text_excerpt",
        "value": "This package was created with [@audreyfeldroy](https://github.com/audreyfeldroy)'s\n[cookiecutter](https://github.com/cookiecutter/cookiecutter) package using [@cthoyt](https://github.com/cthoyt)'s\n[cookiecutter-snekpack](https://github.com/cthoyt/cookiecutter-snekpack) template.\n \n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9686191239669348,
      "result": {
        "original_header": "\ud83d\udee0\ufe0f For Developers",
        "type": "Text_excerpt",
        "value": "<details>\n  <summary>See developer instructions</summary> \n### Development Installation \nTo install in development mode, use the following:\n```bash\n$ git clone git+https://github.com/biopragmatics/biomappings.git\n$ cd biomappings\n$ pip install -e .\n```\n \nAfter cloning the repository and installing `tox` with `pip install tox`, the unit tests in the `tests/` folder can be\nrun reproducibly with:\n```shell\n$ tox\n```\n \n### \ud83d\udcd6 Building the Documentation \nThe documentation can be built locally using the following:\n```shell\n$ git clone git+https://github.com/biopragmatics/biomappings.git\n$ cd biomappings\n$ tox -e docs\n$ open docs/build/html/index.html\n``` \n \nThe documentation automatically installs the package as well as the `docs`\nextra specified in the [`setup.cfg`](setup.cfg). `sphinx` plugins\nlike `texext` can be added there. Additionally, they need to be added to the\n`extensions` list in [`docs/source/conf.py`](docs/source/conf.py). \nAfter installing the package in development mode and installing\n`tox` with `pip install tox`, the commands for making a new release are contained within the `finish` environment\nin `tox.ini`. Run the following from the shell:\n```shell\n$ tox -e finish\n```\n \nThis script does the following: \n1. Uses [Bump2Version](https://github.com/c4urself/bump2version) to switch the version number in the `setup.cfg`,\n   `src/biomappings/version.py`, and [`docs/source/conf.py`](docs/source/conf.py) to not have the `-dev` suffix\n2. Packages the code in both a tar archive and a wheel using [`build`](https://github.com/pypa/build)\n3. Uploads to PyPI using [`twine`](https://github.com/pypa/twine). Be sure to have a `.pypirc` file configured to avoid the need for manual input at this\n   step\n4. Push to GitHub. You'll need to make a release going with the commit where the version was bumped.\n5. Bump the version to the next patch. If you made big changes and want to bump the version by minor, you can\n   use `tox -e bumpversion minor` after.\n</details>\n \n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biocuration, biopragmatics, bioregistry, mappings, ontology, semantics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Creative Commons Zero v1.0 Universal",
        "spdx_id": "CC0-1.0",
        "type": "License",
        "url": "https://api.github.com/licenses/cc0-1.0",
        "value": "https://api.github.com/licenses/cc0-1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Creative Commons Legal Code\n\nCC0 1.0 Universal\n\n    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\n    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\n    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\n    INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\n    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\n    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\n    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\n    HEREUNDER.\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\n\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "\u2696\ufe0f License",
        "parent_header": [
          "\ud83d\udc4b Attribution"
        ],
        "type": "Text_excerpt",
        "value": "Code is licensed under the MIT License. Data are licensed under the CC0 License.\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biopragmatics/biomappings/raw/master/docs/source/logo.png"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biomappings"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "biopragmatics"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 288760,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 171370,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 14002,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2023-10-10T18:31:30Z",
        "date_published": "2023-10-10T18:32:55Z",
        "description": "## What's Changed\r\n* Enforce using CURIEs for all relationships by @cthoyt in https://github.com/biopragmatics/biomappings/pull/123\r\n* Ensure SSSOM file is valid by @cthoyt in https://github.com/biopragmatics/biomappings/pull/155\r\n* Use preferred prefixes in SSSOM by @cthoyt in https://github.com/biopragmatics/biomappings/pull/157\r\n* Add broad/narrow curation to interface by @cthoyt in https://github.com/biopragmatics/biomappings/pull/158\r\n* Add custom predictions and custom deployment tutorials by @cthoyt in https://github.com/biopragmatics/biomappings/pull/160\r\n* Add VO-DrugBank predictions and curations by @cthoyt in https://github.com/biopragmatics/biomappings/pull/159\r\n\r\n\r\n**Full Changelog**: https://github.com/biopragmatics/biomappings/compare/v0.3.6...v0.3.7",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.3.7",
        "name": "v0.3.7",
        "release_id": 124480726,
        "tag": "v0.3.7",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.3.7",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/124480726",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/124480726",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.3.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2023-09-19T11:25:06Z",
        "date_published": "2023-10-10T18:24:00Z",
        "description": "## What's Changed\r\n* Add summary page button by @cthoyt in https://github.com/biopragmatics/biomappings/pull/145\r\n* Improve trackability of committer by @cthoyt in https://github.com/biopragmatics/biomappings/pull/148\r\n* Update testing with py38 by @cthoyt in https://github.com/biopragmatics/biomappings/pull/150\r\n* Add generic contribution workflow to OBO flat files by @cthoyt in https://github.com/biopragmatics/biomappings/pull/149\r\n* CVX and MeSH mappings by @cthoyt in https://github.com/biopragmatics/biomappings/pull/147\r\n* Curated 1 mapping (sumir) by @sumirp in https://github.com/biopragmatics/biomappings/pull/151\r\n\r\n## New Contributors\r\n* @sumirp made their first contribution in https://github.com/biopragmatics/biomappings/pull/151\r\n\r\n**Full Changelog**: https://github.com/biopragmatics/biomappings/compare/v0.3.5...v0.3.6",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.3.6",
        "name": "v0.3.6",
        "release_id": 124479193,
        "tag": "v0.3.6",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.3.6",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/124479193",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/124479193",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.3.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2023-08-14T14:03:19Z",
        "date_published": "2023-10-10T18:23:50Z",
        "description": "## What's Changed\r\n* Update linting on predictions by @cthoyt in https://github.com/biopragmatics/biomappings/pull/144\r\n\r\n\r\n**Full Changelog**: https://github.com/biopragmatics/biomappings/compare/v0.3.4...v0.3.5",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.3.5",
        "name": "v0.3.5",
        "release_id": 124479149,
        "tag": "v0.3.5",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.3.5",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/124479149",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/124479149",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.3.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2023-08-14T13:20:45Z",
        "date_published": "2023-10-10T18:23:40Z",
        "description": "## What's Changed\r\n* Override MIRIAM OBI pattern by @cthoyt in https://github.com/biopragmatics/biomappings/pull/143\r\n\r\n\r\n**Full Changelog**: https://github.com/biopragmatics/biomappings/compare/v0.3.3...v0.3.4",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.3.4",
        "name": "v0.3.4",
        "release_id": 124479118,
        "tag": "v0.3.4",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/124479118",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/124479118",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2023-08-14T11:35:36Z",
        "date_published": "2023-10-10T18:23:30Z",
        "description": "## What's Changed\r\n* Improve redundancy filtering by @cthoyt in https://github.com/biopragmatics/biomappings/pull/141\r\n* Make tests reusable by @cthoyt in https://github.com/biopragmatics/biomappings/pull/142\r\n\r\n\r\n**Full Changelog**: https://github.com/biopragmatics/biomappings/compare/v0.3.2...v0.3.3",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.3.3",
        "name": "v0.3.3",
        "release_id": 124479093,
        "tag": "v0.3.3",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/124479093",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/124479093",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2023-08-14T09:18:20Z",
        "date_published": "2023-08-14T09:21:02Z",
        "description": "## What's Changed\r\n* Add UBERON-BTO predictions by @bgyori in https://github.com/biopragmatics/biomappings/pull/129\r\n* Add custom predictions flag in web app runner by @cthoyt in https://github.com/biopragmatics/biomappings/pull/130\r\n* Fix gilda prediction workflow by @cthoyt in https://github.com/biopragmatics/biomappings/pull/131\r\n* Add more curations by @cthoyt in https://github.com/biopragmatics/biomappings/pull/132\r\n* Add CLO processing notebook by @cthoyt in https://github.com/biopragmatics/biomappings/pull/133\r\n* Update state handling by @cthoyt in https://github.com/biopragmatics/biomappings/pull/134\r\n* Additional cell, cell line, and tissue curations by @cthoyt in https://github.com/biopragmatics/biomappings/pull/135\r\n* Generate MAxO-MeSH predictions by @cthoyt in https://github.com/biopragmatics/biomappings/pull/137\r\n* Add negative mappings to SSSOM output by @cthoyt in https://github.com/biopragmatics/biomappings/pull/138\r\n* Enable custom curation files by @cthoyt in https://github.com/biopragmatics/biomappings/pull/140\r\n\r\n\r\n**Full Changelog**: https://github.com/biopragmatics/biomappings/compare/v0.3.1...v0.3.2",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.3.2",
        "name": "v0.3.2",
        "release_id": 117133950,
        "tag": "v0.3.2",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/117133950",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/117133950",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2023-06-09T08:50:37Z",
        "date_published": "2023-08-14T09:20:25Z",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.3.1",
        "release_id": 117133887,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/117133887",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/117133887",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2023-02-07T18:19:25Z",
        "date_published": "2023-02-07T18:26:40Z",
        "description": "This release corresponds to the changes that go with the re-submission of the biomappings paper.\r\n\r\n## What's Changed\r\n* Assess curation precision by @cthoyt in https://github.com/biopragmatics/biomappings/pull/113\r\n* Add sort by confidence to web app by @cthoyt in https://github.com/biopragmatics/biomappings/pull/75\r\n* Add epidemiology curation by @cthoyt in https://github.com/biopragmatics/biomappings/pull/115\r\n* Cleanup and update by @cthoyt in https://github.com/biopragmatics/biomappings/pull/116\r\n* Improve prediction linting by @cthoyt in https://github.com/biopragmatics/biomappings/pull/118\r\n* Propagate metadata from predictions into curated files by @cthoyt in https://github.com/biopragmatics/biomappings/pull/117\r\n\r\n\r\n**Full Changelog**: https://github.com/biopragmatics/biomappings/compare/v0.2.0...v0.3.0",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.3.0",
        "name": "v0.3.0 - Publication revision",
        "release_id": 91643034,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/91643034",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/91643034",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2022-11-09T13:12:37Z",
        "date_published": "2022-11-09T13:13:52Z",
        "description": "This release prepares for the Biomappings paper submission (probably that no more curations are necessary before next release).\r\n\r\n## What's Changed\r\n* Add predictions and curations for MeSH-ChEBI equivalences by @bgyori in https://github.com/biopragmatics/biomappings/pull/70\r\n* Predict DOID mappings to UMLS, MeSH, and EFO by @cthoyt in https://github.com/biopragmatics/biomappings/pull/68\r\n* Add more specific script URL for predictions by @bgyori in https://github.com/biopragmatics/biomappings/pull/76\r\n* Assorted DOID and ChEBI curations by @cthoyt in https://github.com/biopragmatics/biomappings/pull/74\r\n* Add manually curated PubChem-MeSH mappings by @bgyori in https://github.com/biopragmatics/biomappings/pull/77\r\n* Remove DOID mappings where primary mappings exist by @bgyori in https://github.com/biopragmatics/biomappings/pull/79\r\n* Remove more redundant predictions and curate some DOID mappings by @bgyori in https://github.com/biopragmatics/biomappings/pull/80\r\n* More manual DOID-MeSH curation by @bgyori in https://github.com/biopragmatics/biomappings/pull/81\r\n* Add UBERON-MeSH mappings by @bgyori in https://github.com/biopragmatics/biomappings/pull/86\r\n* Generate and curate a new set of MESH-CHEBI mappings by @bgyori in https://github.com/biopragmatics/biomappings/pull/89\r\n* Predict and curate CL-MESH mappings by @bgyori in https://github.com/biopragmatics/biomappings/pull/91\r\n* Miscellaneous curation by @bgyori in https://github.com/biopragmatics/biomappings/pull/92\r\n* More curations by @bgyori in https://github.com/biopragmatics/biomappings/pull/93\r\n* Curate MONDO-MeSH mappings by @bgyori in https://github.com/biopragmatics/biomappings/pull/95\r\n* Add AGRO-AGROVOC mappings by @cthoyt in https://github.com/biopragmatics/biomappings/pull/83\r\n* Curate AGRO-AGROVOC-Mappings by @cthoyt in https://github.com/biopragmatics/biomappings/pull/97\r\n* Add predicted WikiPathways orthologs by @cthoyt in https://github.com/biopragmatics/biomappings/pull/59\r\n* Additional curation and updates for bioregistry by @cthoyt in https://github.com/biopragmatics/biomappings/pull/98\r\n* Improve interface by @cthoyt in https://github.com/biopragmatics/biomappings/pull/99\r\n* Update MONDO local unique identifiers by @cthoyt in https://github.com/biopragmatics/biomappings/pull/105\r\n* Curate additional DOID-MESH mappings and contribute to DOID by @bgyori in https://github.com/biopragmatics/biomappings/pull/104\r\n* Some MeSH curations by @bgyori in https://github.com/biopragmatics/biomappings/pull/107\r\n* Add hetionet duplication and value added notebooks by @cthoyt in https://github.com/biopragmatics/biomappings/pull/102\r\n* Add project governance documentation by @cthoyt in https://github.com/biopragmatics/biomappings/pull/106\r\n* Fill out project skeleton by @cthoyt in https://github.com/biopragmatics/biomappings/pull/108\r\n\r\n\r\n**Full Changelog**: https://github.com/biopragmatics/biomappings/compare/v0.1.2...v0.2.0",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 82548408,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/82548408",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/82548408",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2021-10-12T11:11:36Z",
        "date_published": "2021-10-12T11:13:34Z",
        "description": "- Improve curation interface\r\n- Add new tools for generating predictions from PyOBO/Gilda\r\n- Add additional curations for CCLE (thanks @ALHoyt)\r\n- Import ComPath\r\n- Add APICURON upload",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.1.2",
        "release_id": 51201767,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/51201767",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/51201767",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2021-07-09T02:20:15Z",
        "date_published": "2021-07-09T02:21:35Z",
        "description": "Fix picture in readme",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.1.1",
        "release_id": 45942392,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/45942392",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/45942392",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2021-07-09T02:19:13Z",
        "date_published": "2021-07-09T02:21:20Z",
        "description": "- Refactor gilda predictions pipeline\r\n- Add major curation of DOID-MeSH by @ALHoyt ",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.1.0",
        "release_id": 45942383,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/45942383",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/45942383",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2021-01-06T19:27:08Z",
        "date_published": "2021-01-06T19:29:39Z",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.0.4",
        "release_id": 36062647,
        "tag": "v0.0.4",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/36062647",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/36062647",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2020-12-30T20:53:23Z",
        "date_published": "2020-12-30T20:54:41Z",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.0.3",
        "release_id": 35855806,
        "tag": "v0.0.3",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/35855806",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/35855806",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2020-12-16T20:01:58Z",
        "date_published": "2020-12-16T20:04:23Z",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.0.2",
        "release_id": 35376756,
        "tag": "v0.0.2",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/35376756",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/35376756",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cthoyt",
          "type": "User"
        },
        "date_created": "2020-12-15T21:59:23Z",
        "date_published": "2020-12-15T22:01:35Z",
        "html_url": "https://github.com/biopragmatics/biomappings/releases/tag/v0.0.1",
        "release_id": 35317765,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/biopragmatics/biomappings/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/biopragmatics/biomappings/releases/35317765",
        "value": "https://api.github.com/repos/biopragmatics/biomappings/releases/35317765",
        "zipball_url": "https://api.github.com/repos/biopragmatics/biomappings/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:07:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 50
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83c\udf81 Support",
        "parent_header": [
          "\ud83d\udc4b Attribution"
        ],
        "type": "Text_excerpt",
        "value": "Biomappings was developed by the [INDRA Lab](https://indralab.github.io), a part of the\n[Laboratory of Systems Pharmacology](https://hits.harvard.edu/the-program/laboratory-of-systems-pharmacology/about/)\nand the [Harvard Program in Therapeutic Science (HiTS)](https://hits.harvard.edu)\nat [Harvard Medical School](https://hms.harvard.edu/).\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udcaa Usage",
        "type": "Text_excerpt",
        "value": "There are three main functions exposed from `biomappings`. Each loads a list of dictionaries with the mappings in each.\n\n```python\nimport biomappings\n\ntrue_mappings = biomappings.load_mappings()\n\nfalse_mappings = biomappings.load_false_mappings()\n\npredictions = biomappings.load_predictions()\n```\n\nAlternatively, you can use the above links to the TSVs on GitHub in with the library or programming language of your\nchoice.\n\nThe data can also be loaded as [networkx](https://networkx.org/) graphs with the following functions:\n\n```python\nimport biomappings\n\ntrue_graph = biomappings.get_true_graph()\n\nfalse_graph = biomappings.get_false_graph()\n\npredictions_graph = biomappings.get_predictions_graph()\n```\n\nFull documentation can be found on [ReadTheDocs](https://biomappings.readthedocs.io).\n"
      },
      "source": "https://raw.githubusercontent.com/biopragmatics/biomappings/master/README.md",
      "technique": "header_analysis"
    }
  ]
}