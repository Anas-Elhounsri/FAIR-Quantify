{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/arumugamlab/MIntO"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-02T17:16:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-04T07:42:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pipeline for Reproducible and Scalable Integration of Metagenomic and Metatranscriptomic Data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9890473091136706,
      "result": {
        "type": "Text_excerpt",
        "value": "\n<h1 align=\"center\"> MIntO </h1>\n<h1 align=\"center\"> A Modular and Scalable Pipeline for Microbiome Metagenomics and Metatranscriptomics Data Integration </h1> \n"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9897235203627791,
      "result": {
        "original_header": " A Modular and Scalable Pipeline for Microbiome Metagenomics and Metatranscriptomics Data Integration ",
        "type": "Text_excerpt",
        "value": "MIntO (Microbiome Integrated Meta-Omics), is a **highly versatile pipeline** that integrates metagenomic and metatranscriptomic data in a scalable way.\nThe distinctive feature of this pipeline is the computation of gene expression profile by taking into account the community turnover and gene expression variations as the underlying process that shapes the community transcript levels along the time and between conditions.\nThe integrated pipeline will be relevant to provide unique biochemical insights into the microbial ecology by linking functions to retrieved genomes and to examine gene expression variations.  \n"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9250492104109694,
      "result": {
        "type": "Text_excerpt",
        "value": "### You do not need to be a programmer to use MIntO \nMIntO aims to reduce the barrier of entry for metagenomic/metatranscriptomic data analysis. Experience with linux/unix command line is required, but that's just about it.\nMIntO is designed to work out of the box, as long as you provide the right information in the configuration files - this is explained in the tutorials.\nWe provide all the key steps and necessary explanations in the [wiki section](https://github.com/arumugamlab/MIntO/wiki/).  \nIf you are experienced with bioinformatic pipelines and have used Snakemake, then you could tweak MIntO for your own purposes. You can even add new functionality. You are welcome to contribute to the repository if you are interested. \n"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9305605399047241,
      "result": {
        "original_header": "Publication",
        "type": "Text_excerpt",
        "value": "If you use MIntO during your analysis, please cite: \n**MIntO: a Modular and Scalable Pipeline for Microbiome Meta-omics Data Integration**  \nCarmen Saenz, Eleonora Nigro, Vithiagaran Gunalan & Manimozhiyan Arumugam  \n_Frontiers in Bioinformatics_ (2022). doi: [10.3389/fbinf.2022.846922](https://doi.org/10.3389/fbinf.2022.846922).  \n"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8136532194543996,
      "result": {
        "original_header": "Contacts",
        "type": "Text_excerpt",
        "value": "Feel free to get in touch with the authors if you have any questions. You can post issues in this repository, or write to the corresponding author from the article link above.\n \n"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/arumugamlab/MIntO/wiki/"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/arumugamlab/MIntO/wiki"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/arumugamlab/MIntO/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/arumugamlab/MIntO/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "arumugamlab/MIntO"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9995852572073216,
      "result": {
        "original_header": " A Modular and Scalable Pipeline for Microbiome Metagenomics and Metatranscriptomics Data Integration ",
        "type": "Text_excerpt",
        "value": "MIntO can be downloaded here:  https://github.com/arumugamlab/MIntO \n"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9511730562173726,
      "result": {
        "type": "Text_excerpt",
        "value": "### You do not need to be a programmer to use MIntO \n### If you are a programmer, you can also use MIntO \n"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.848092922462628,
      "result": {
        "original_header": " A Modular and Scalable Pipeline for Microbiome Metagenomics and Metatranscriptomics Data Integration ",
        "type": "Text_excerpt",
        "value": "<p align=\"center\"><img src=\"images/MIntO_blu_Microbiome_integrated_meta_omics.png\" height=\"200\" /></p> \n"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/arumugamlab/MIntO/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Arumugam Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/images/MIntO_blu_Microbiome_integrated_meta_omics.png"
      },
      "source": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MIntO"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "arumugamlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 370841,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 97289,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 10167,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 6425,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "microbiomix",
          "type": "User"
        },
        "date_created": "2024-08-13T16:28:12Z",
        "date_published": "2024-08-13T16:33:10Z",
        "description": "We have added a couple of new functionalities (see **Newly supported functionalities** below). This required that we moved some config variables from one `yaml` file to another. Considering this as a not-so-small change in behavior, we have upgraded MIntO to `v2.2.0` \r\n\r\nWe also fixed a lot of bugs since `v2.1.0`. Outputs are still identical with `v2.1.0` within 6-decimal precision, so these bugs were not producing wrong results. But `v2.2.0` will give you a smoother experience.\r\n\r\n## Making a fresh installation?\r\n\r\nPlease see instructions in our [Wiki page for installation](https://github.com/arumugamlab/MIntO/wiki/Installation&Dependencies)\r\n\r\n## Upgrading from 2.0.0 or 2.1.0?\r\n\r\nPlease do the following from where you cloned MIntO from github.\r\n\r\n```\r\ngit pull\r\ngit checkout tags/2.2.0\r\n```\r\n\r\nAfter this, please rerun `dependencies.smk` using the same command you ran previously. This should finish without any complaints. If it does not finish successfully, please submit an issue report on github.\r\n\r\n## Newly supported functionalities\r\n\r\n- Taxonomic profile outputs from mapping reads to genomes in `MAG` and `refgenome` modes.\r\n  - A standardized tabular output listing genomes and their taxonomic annotations together with their quantitative profiles. Users can process them to generate e.g., species profiles by grouping genomes from the same species.\r\n- Co-assembly of samples using a newly defined variable `COAS_factor`. If it is absent, still defaults to older behavior of coassembling samples using `MAIN_factor`.\r\n- Capable of handling sample names with underscore and more special characters in them. But please try to avoid extremely **special** special characters (e.g., single- or double-quotes, space, percentage sign) in sample names.\r\n\r\n## Changes/bug-fixes\r\n\r\n- Moving taxonomic annotation\r\n  - Adding taxonomic annotations to the genome profiles required that we move taxonomic annotation of genomes from `mags_generation.smk` to `gene_annotation.smk`\r\n  - The above change also meant that configuration parameters for taxonomy moved from one `yaml` file to another.\r\n- Removed `BINSPLIT_CHAR` from configuration\r\n  - In order to support handling of underscore characters in sample names, we had to take full control of how sample names and contig names will be separated in fasta headers. Therefore, we remove the ability of users to configure `BINSPLIT_CHAR`. Not that someone would need to - we never needed to tinker with it. Hopefully, you wouldn't even notice this change.\r\n- Simplified MAG/refgenome profile filenames \r\n  - They are now more intuitively `gene_abundances`, `genome_abundances`, and `contig_abundances`. This also avoids having `genome` as a suffix somewhere later in the name.\r\n\r\n\r\n\r\n\r\n## What's Changed\r\n* Bugfix number of lines in concatting individual annotation files by @jszarvas in https://github.com/arumugamlab/MIntO/pull/53\r\n* Optional COAS_factor, more flexible sample names and tax. profile plotting by @jszarvas in https://github.com/arumugamlab/MIntO/pull/54\r\n* Taxonomic profiles from read-mapping in MAG/refgenome modes; other bug-fixes and improvements by @microbiomix in https://github.com/arumugamlab/MIntO/pull/55\r\n* Upgraded test script to use v2.2.0 when released by @microbiomix in https://github.com/arumugamlab/MIntO/pull/56\r\n\r\n\r\n**Full Changelog**: https://github.com/arumugamlab/MIntO/compare/2.1.0...2.2.0",
        "html_url": "https://github.com/arumugamlab/MIntO/releases/tag/2.2.0",
        "name": "MIntO 2.2.0 stable release",
        "release_id": 170013410,
        "tag": "2.2.0",
        "tarball_url": "https://api.github.com/repos/arumugamlab/MIntO/tarball/2.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/arumugamlab/MIntO/releases/170013410",
        "value": "https://api.github.com/repos/arumugamlab/MIntO/releases/170013410",
        "zipball_url": "https://api.github.com/repos/arumugamlab/MIntO/zipball/2.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "microbiomix",
          "type": "User"
        },
        "date_created": "2024-07-05T11:23:22Z",
        "date_published": "2024-07-05T12:36:38Z",
        "description": "MIntO has gone through some more major improvements to handle large studies with 1000+ of shotgun metagenomes. While version `2.0.0` focused on reducing runtime and memory for all the steps up to MAG generation, version `2.1.0` dramatically reduces resource requirements for the gene/functional profiling steps, without changing the outputs (within 6-decimal precision), except when we fixed bugs (see **Changes/bug-fixes** below). Profiling 100s of samples against MAGs/genomes with millions of genes is now possible, that too efficiently, whereas analyzing them with `2.0.0` would run out of memory or reach `data.frame`'s in-built limits.\r\n\r\n\r\n**NOTE:** \r\n> * While MIntO can handle large studies, processing a gene profile table with 1000 samples and 15M genes will require lots of memory. In our hands, analysing such study demanded 250GB memory at peak usage, but finishes within 15 minutes.\r\n> \r\n> * There are some minor changes to the fields in configuration files, but most are still backwards-compatible with configuration files from version `2.0.0`.\r\n\r\n## Making a fresh installation?\r\n\r\nPlease see instructions in our [Wiki page for installation](https://github.com/arumugamlab/MIntO/wiki/Installation&Dependencies)\r\n\r\n## Upgrading from 2.0.0?\r\n\r\nPlease do the following from where you cloned MIntO from github.\r\n\r\n```\r\ngit pull\r\ngit checkout tags/2.1.0\r\n```\r\n\r\nAfter this, please rerun `dependencies.smk` using the same command you ran previously. This should finish without any complaints. If it does not finish successfully, please submit an issue report on github.\r\n\r\n\r\n## Software improvements\r\n\r\n- More user-friendly\r\n  - Installation is further improved.\r\n  - Example script has further improvements, made available as [`run_IBD_test.sh`](https://github.com/arumugamlab/MIntO/blob/main/testing/run_IBD_test.sh). Do check it out!\r\n- Improved efficiency and speed\r\n  - Migrated from `data.frame` to `data.table` in R scripts.\r\n  - Large-scale `pandas`-based table-merging using python is replaced with faster `data.table`-based merging using R.\r\n  - eggnog-mapper annotation now uses in-memory databases via `--dbmem` option.\r\n  - Writing phyloseq objects out using the much faster `qsave()` rather than `saveRDS()`.\r\n- Smaller disk footprint\r\n  - Many useless intermediate files are not stored anymore.\r\n  - Several unnecessary columns from GFF and BED files are removed.\r\n  - Sample-level gene profile files used to keep all GFF columns in front of the actual abundance information. Now only the gene ID is kept.\r\n  - Multi-sample profiles used an intermediate file with sample id in the column header, which was then remapped to a final file with the `sample_alias` in column header. For large studies, these files are several GBs each.  Intermediate file is not used anymore.\r\n  - MAG IDs have been dropped from the gene IDs. Gene IDs looked like `<MAG>|<GENE>` before, but since `<GENE>` included the unique locus tag from prokka, we decided to use that as a proxy for MAG IDs during calculations. If users need to know where a gene comes from, they can look at the file mapping locus tags to MAG IDs at: `DB/MAG/1-prokka/locus_id_list.txt` or `DB/refgenome/1-prokka/locus_id_list.txt`\r\n  - Tutorial output folder reduced from 269 MB to 252 MB (6% reduction).\r\n  - In a study with 5500 MAGs and 12.7M genes, single-sample profiles files went from 525 MB (uncompressed, with `0` counts, 12.6M lines) to 19 MB (gzipped, without `0` counts, 3.4M lines). Projected savings for 100 samples will be 50 GB.\r\n\r\n## Changes/bug-fixes\r\n\r\n- Functional database naming scheme\r\n  - We admit: the naming in functional annotation was confusing. KEGG annotations from `eggnog-mapper` were called `KEGG_KO`, `KEGG_Module`, and `KEGG_Pathway`; while those from `kofamscan` were called `kofam_KO`, `kofam_Module`, and `kofam_Pathway`. This was not ideal. While this may not be a big deal for many, users would expect that `KEGG_Module` annotation will come from an official KEGG resource that is `kofamscan`. \r\n  - We have now streamlined functional annotations using `<software>.<functional-category>` as the grammar for functional category names. Available functional categories are: `eggNOG.OGs`, `eggNOG.KEGG_KO`, `eggNOG.KEGG_Pathway`, `eggNOG.KEGG_Module`, `eggNOG.PFAMs`, `kofam.KEGG_KO`, `kofam.KEGG_Pathway`, `kofam.KEGG_Module`,`dbCAN.module`, `dbCAN.enzclass`, `dbCAN.subfamily`, `dbCAN.eCAMI_subfamily`, `dbCAN.eCAMI_submodule`, `dbCAN.EC`.\r\n  - E.g., `KEGG_KO` annotations can be obtained from both `eggNOG-mapper` and `kofamscan`, which means that we have two versions: `eggNOG.KEGG_KO` and `kofam.KEGG_KO`. If you enable both `eggNOG` and `kofam` in functional annotation, MIntO will also make an additional category called `merged.KEGG_KO`, which merges the two `KEGG_KO` annotations.\r\n- MIntO mode names\r\n  - The three modes are now named: `MAG`, `refgenome` or `catalog`. Output directories are named after the modes.\r\n  - They are specified using `MINTO_MODE` field in the yaml file.\r\n  - `9-mapping-profiles` and `DB` directories will have subdirectories named by the MIntO mode (e.g., `9-mapping-profiles/MAG`, `DB/refgenome`).\r\n  - `output/data_integration` will have subdirectories called `<MODE>-genes`, since the profiling are based on genes (e.g. `MAG-genes`).\r\n  - Old names (e.g., `reference_genome`, `db_genes`) are still accepted for backwards-compatibility, but their corresponding output directories will be `refgenome` and `catalog`, respectively.\r\n- Tabular files are strictly TSVs\r\n  - All tabular output files are now tab-separated `.tsv` files. It used to be a mix of `.csv` and `.tsv` files, sometimes with the wrong file extension.\r\n- `MIN_mapped_reads` bug fixed\r\n  - `MIN_mapped_reads = N` in `mapping.yaml` file (input to `gene_abundance.smk`) was wrongly interpreted as `> N` in **refgenome** and **MAG** modes. This has now been fixed. This also means that outputs are not identical between `v2.0.0` and `v2.1.0+`, but the `v2.1.0+` results are more accurate.\r\n- Gene coordinate bug fixed\r\n  - `BED` files were inadvertently changed to have 1-based coordinates like in GFF files, leading to wrong output from `bedtools multicov`. This has now been fixed. This also means that outputs are not identical between `v2.0.0` and `v2.1.0+`, but the `v2.1.0+` results are more accurate.\r\n\r\n## Software and database version upgrades\r\n\r\n- dbCAN updated to v4.1.4, still maintaining HMMdb v12 (based on CAZyDB 7/26/2023). See info [here](https://bcb.unl.edu/dbCAN2/).\r\n- MetaPhlAn remains in v4.0.6 but its database has been updated to 'mpa_vJun23_CHOCOPhlAnSGB_202403'.\r\n- PhyloPhlAn updated to v3.1.1 and SGB database to Jun23, so both PhyloPhlAn-annotated MAG-based profiles and MetaPhlAn profiles will map to the same SGB features.\r\n- GTDB-Tk has been updated to v2.4.0 and GTDB release has been updated to r220.\r\n\r\n## Newly supported functionalities\r\n\r\n- Versioning of software and database components in directory `output/versions`\r\n  - All software/package versions are registered. This is useful when writing up methods section in manuscript.\r\n  - All functional/taxonomic annotation software versions and annotation file timestamps are also registered.\r\n- Bulk input of fastq files using a tsv file that maps fastq files to sample ids.\r\n\r\n## Improved gene/functional profiling\r\n- Gene profile output will not list genes with `metaG==0` or `metaT==0` across all samples. This also includes `GE.tsv` where `metaG==0` leads to `Inf` and `metaT==0` leads to `0`.\r\n- Function expression profiling (derived from ratio of functions in metaT data and metaG data) will now report features where some (but not all) samples have 0 abundance in metaG.\r\n\r\n## What's Changed\r\n* Update to MAG dereplication with CoverM v0.7 by @jszarvas in https://github.com/arumugamlab/MIntO/pull/17\r\n* FracMinHash clustering by @jszarvas in https://github.com/arumugamlab/MIntO/pull/18\r\n* ensure smash_plot_output() is not None by @cpauvert in https://github.com/arumugamlab/MIntO/pull/20\r\n* GTDB support, bwa2 index memory, and kofamscan-speedup by @microbiomix in https://github.com/arumugamlab/MIntO/pull/22\r\n* Bugfix umap min. neighbors by @jszarvas in https://github.com/arumugamlab/MIntO/pull/23\r\n* Gene table normalization made faster and more efficient; plus some bugfixes and improvement by @microbiomix in https://github.com/arumugamlab/MIntO/pull/24\r\n* Updated GTDB db location and some more improvements by @microbiomix in https://github.com/arumugamlab/MIntO/pull/25\r\n* MAG taxonomy bug by @microbiomix in https://github.com/arumugamlab/MIntO/pull/27\r\n* Update to dbCAN 4.1 and switch to individual processing of MAGs by @jszarvas in https://github.com/arumugamlab/MIntO/pull/26\r\n* Function profiling enabled for large number of MAGs by @microbiomix in https://github.com/arumugamlab/MIntO/pull/28\r\n* Bugfixes and speed-ups for gene_annotation and mags_generation by @jszarvas in https://github.com/arumugamlab/MIntO/pull/29\r\n* New minor features; updated yaml file examples; bug fixes by @microbiomix in https://github.com/arumugamlab/MIntO/pull/30\r\n* Function profiling enabled for large number of MAGs by @microbiomix in https://github.com/arumugamlab/MIntO/pull/31\r\n* Renamed functional categories to be more structured and logical  by @microbiomix in https://github.com/arumugamlab/MIntO/pull/32\r\n* Minor improvements by @microbiomix in https://github.com/arumugamlab/MIntO/pull/33\r\n* Update collate script and bugfixes by @jszarvas in https://github.com/arumugamlab/MIntO/pull/34\r\n* Bringing back explicit arguments to annotation collation script by @microbiomix in https://github.com/arumugamlab/MIntO/pull/35\r\n* Bringing back lost kofamscan runtime fix (d1fe76a) by @microbiomix in https://github.com/arumugamlab/MIntO/pull/36\r\n* Several improvements in annotation and profiling - outputs remain unchanged by @microbiomix in https://github.com/arumugamlab/MIntO/pull/37\r\n* Gene/functional profiling - Saving disk space and runtime by further optimization by @microbiomix in https://github.com/arumugamlab/MIntO/pull/38\r\n* Removed unnecessary 'mag_omics' from 'data_integration.yaml' by @microbiomix in https://github.com/arumugamlab/MIntO/pull/39\r\n* Efficient reimplementation of generating & merging single-sample profile files to save disk space, memory and time. Plus other efficiency improvements. by @microbiomix in https://github.com/arumugamlab/MIntO/pull/40\r\n* Software and database versions by @jszarvas in https://github.com/arumugamlab/MIntO/pull/41\r\n* Streamlining/simplifying directory structure, using GNU parallel within rules for further speedup, smaller output file footprints by @microbiomix in https://github.com/arumugamlab/MIntO/pull/42\r\n* Bugfix motus version print after moving the db by @jszarvas in https://github.com/arumugamlab/MIntO/pull/43\r\n* TSVs only for tabular output; BED coordinate bugfix; more file compression by @microbiomix in https://github.com/arumugamlab/MIntO/pull/44\r\n* Feature: bulk input in one folder by @jszarvas in https://github.com/arumugamlab/MIntO/pull/45\r\n* Upgraded metaphlan, phylophlan and GTDB versions/databases. Other minor improvements by @microbiomix in https://github.com/arumugamlab/MIntO/pull/46\r\n* Added shadow directive to gtdb download by @jszarvas in https://github.com/arumugamlab/MIntO/pull/47\r\n* Removed unnecessary config variables from yaml files by @microbiomix in https://github.com/arumugamlab/MIntO/pull/48\r\n* Removed redundant rules; Moved marker gene identification from gene_abundance to gene_annotation. by @microbiomix in https://github.com/arumugamlab/MIntO/pull/49\r\n* Reordered rules and added comments for easier comprehension by @microbiomix in https://github.com/arumugamlab/MIntO/pull/50\r\n* Safely handling sample names as strings; Other bug fixes by @microbiomix in https://github.com/arumugamlab/MIntO/pull/51\r\n\r\n## New Contributors\r\n* @cpauvert made their first contribution in https://github.com/arumugamlab/MIntO/pull/20\r\n* @microbiomix made their first contribution in https://github.com/arumugamlab/MIntO/pull/22\r\n\r\n**Full Changelog**: https://github.com/arumugamlab/MIntO/compare/2.0.0...2.1.0",
        "html_url": "https://github.com/arumugamlab/MIntO/releases/tag/2.1.0",
        "name": "MIntO 2.1.0 stable release",
        "release_id": 164153952,
        "tag": "2.1.0",
        "tarball_url": "https://api.github.com/repos/arumugamlab/MIntO/tarball/2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/arumugamlab/MIntO/releases/164153952",
        "value": "https://api.github.com/repos/arumugamlab/MIntO/releases/164153952",
        "zipball_url": "https://api.github.com/repos/arumugamlab/MIntO/zipball/2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "microbiomix",
          "type": "User"
        },
        "date_created": "2024-01-29T09:04:52Z",
        "date_published": "2024-01-29T09:28:04Z",
        "description": "MIntO has gone through major improvements. We have gone straight to version `2.0.0` as the directory structures and configuration field names have changed dramatically. This means that old configuration files are not compatible with version `2.0.0` onwards.\r\n\r\n## Software improvements\r\n\r\n- More user-friendly:\r\n  - Installation is even more simplified.\r\n  - Example script to run the entire tutorial, which we have tested extensively, made available as [`run_IBD_test.sh`](https://github.com/arumugamlab/MIntO/blob/main/testing/run_IBD_test.sh). Do check it out!\r\n  - Example TruSeq and MGIEasy sequencing adapters included in distribution.\r\n- Improved efficiency and speed:\r\n  - Use of `shadow` directives lets `Snakemake` work on local disk as much as possible. This means `--shadow-prefix` is a mandatory argument to `Snakemake` now.\r\n  - Flow of processes (rules) optimized so that there is no heavy I/O between rules using NFS.\r\n  - Increased use of pipes rather than files.\r\n  - Bottleneck steps that summarized all samples at the same time (e.g. `bedtools multicov`, and `coverm contig`) have been replaced with parallel runs with single samples and `pandas`-based table-merging.\r\n  - Bottleneck steps that serially profiled multiple functional databases inside one process (e.g. functional quantification) have been replaced with parallel runs with individual databases.\r\n- Code optimization:\r\n  - Embraced `Snakemake` style input-output connection via wildcards in nearly all rules rather than bulk outputs.\r\n  - Removed several obsolete scripts and files.\r\n  - Unified multiple mode-specific normalization scripts into a global script.\r\n  - Unified multiple mode-specific functional quantification scripts into a global script.\r\n  - Descriptions of eggNOG, KEGG, dbCAN functional databases are automatically downloaded and setup when running `dependencies.smk`. This lets the user get matching databases and descriptions at the time of installation, e.g. KEGG orthology definitions and descriptions.\r\n\r\n## Software version upgrades\r\n\r\n- SPAdes updated to 3.15.5.\r\n- MetaPhlAn updated to v4.0.6.\r\n- mOTUs updated to v3.0.3.\r\n- Genome binner updated to AVAMB v4.1.3.\r\n- Genome completeness check updated to CheckM2 v1.0.1.\r\n- dbCAN updated to dbCAN3 HMMdb v12 (based on CAZyDB 7/26/2023). See info [here](https://bcb.unl.edu/dbCAN2/).\r\n\r\n## Newly supported functionalities\r\n\r\n- New script `QC_0.smk` to enable reanalysis of publicly available datasets.\r\n- Taxonomic profiling, assembly and MAG generation now enabled for `metaT`.\r\n- Taxonomy profiles are tagged with profiler version, so that upgrading a profiler does not overwrite existing results.\r\n- External reference genomes can be given as just `.fna` files and MIntO will perform genome annotation.\r\n- Replicate samples can be merged post QC into a single sample using `MERGE_ILLUMINA_SAMPLES` section in the YAML file.\r\n- It is now possible to provide custom kmer-sizes for MEGAHIT coassembly.\r\n- MAGs are made using AVAMB with a combination of VAE and AAE, as recommended by AVAMB developers.\r\n- VAMB GPU mode can be enabled if the server installing via `dependencies.smk` has CUDA drivers installed. (Automatically generated `mags.yaml` still disables GPU mode to avoid issues. User has to manually enable it before running the MAG generation step.)\r\n\r\n## Improved functional quantification \r\n\r\n### MG normalization (only available in refgenome or MAG mode)\r\n- We have updated how to quantify functional categories under marker gene (MG) normalization. Quantification is a little bit more involved now.\r\n- Weighted sum of genes belonging to a given functional unit (e.g. K12345), weighted by the relative abundance of the MAG/refgenome it belongs to.\r\n- Weights for metaG/metaT gene profiles are derived from relative abundance from metaG/metaT space, respectively.\r\n- The way to interpret this: If each species in the community carries the functional unit and expresses it at the same level as marker genes, it will be 1.0.\r\n\r\n### TPM normalization mode\r\n- We have updated how to quantify functional categories under TPM normalization.\r\n- Quantification is straightforward: sum up all genes mapped to a given functional unit (e.g. K12345).\r\n- This also means that sum of functional profiles is not bounded by 1 million anymore. Since each gene can map to multiple KEGG KO's for example, total might be over million. We have decided not to renormalize to 1 million, as this will unfairly alter abundances when more promiscuous genes are present.\r\n- The way to interpret this: Given a million transcripts, this is the number of transcripts representing this function. This is more comparable across samples.\r\n\r\n## What's Changed via PRs\r\n* Removed pip dependencies for easier installation by @askerdb in https://github.com/arumugamlab/MIntO/pull/1\r\n* Update to remove pip dependencies by @askerdb in https://github.com/arumugamlab/MIntO/pull/2\r\n* Updated to remove pip dependencies by @askerdb in https://github.com/arumugamlab/MIntO/pull/3\r\n* Switch Flye to use conda by @jszarvas in https://github.com/arumugamlab/MIntO/pull/10\r\n* Made light rules local by @jszarvas in https://github.com/arumugamlab/MIntO/pull/11\r\n* Alternative qc and trimming for external data (QC_0) & custom megahit settings by @jszarvas in https://github.com/arumugamlab/MIntO/pull/12\r\n* Simple slurm cluster congfiguration by @jszarvas in https://github.com/arumugamlab/MIntO/pull/14\r\n* Bugfix feature custom megahit by @jszarvas in https://github.com/arumugamlab/MIntO/pull/13\r\n\r\n## New Contributors\r\n* @askerdb made their first contribution in https://github.com/arumugamlab/MIntO/pull/1\r\n* @jszarvas made their first contribution in https://github.com/arumugamlab/MIntO/pull/10\r\n\r\n**Full Changelog**: https://github.com/arumugamlab/MIntO/compare/1.0.1...2.0.0",
        "html_url": "https://github.com/arumugamlab/MIntO/releases/tag/2.0.0",
        "name": "MIntO 2.0.0 stable release",
        "release_id": 138880542,
        "tag": "2.0.0",
        "tarball_url": "https://api.github.com/repos/arumugamlab/MIntO/tarball/2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/arumugamlab/MIntO/releases/138880542",
        "value": "https://api.github.com/repos/arumugamlab/MIntO/releases/138880542",
        "zipball_url": "https://api.github.com/repos/arumugamlab/MIntO/zipball/2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "arumugamlab",
          "type": "User"
        },
        "date_created": "2023-06-07T16:17:41Z",
        "date_published": "2023-06-07T16:30:27Z",
        "description": "MIntO has gone through major improvements. We have gone straight to version `2.0.0` as the directory structures and configuration field names have changed dramatically. This means that old configuration files are not compatible with version `2.0.0` onwards.\r\n\r\n**Improvements:**\r\n- Much faster due to several optimizations under the hood.\r\n- More user-friendly:\r\n  - Installation is even more simplified.\r\n  - Example script to run the entire tutorial, which we have tested extensively.\r\n\r\n**Software version upgrades:**\r\n- MetaPhlAn updated to v4.0.6.\r\n- mOTUs updated to v3.0.3.\r\n- Genome binner updated to AVAMB v4.1.1.\r\n- Genome completeness check updated to CheckM2 v1.0.1.\r\n\r\n**Newly supported features:**\r\n- Taxonomic profiling, assembly and MAG generation now enabled for `metaT`.\r\n- Taxonomy profiles are tagged with profiler version, so that upgrading a profiler does not overwrite existing results.\r\n- External reference genomes can be given as just `.fna` files and MIntO will perform genome annotation.\r\n- Replicate samples can be merged for post analysis.\r\n- MAGs are made using AVAMB with a combination of VAE and AAE, as recommended by AVAMB developers.\r\n- VAMB GPU mode can be enabled if the server installing via `dependencies.smk` has CUDA drivers installed. (Automatically generated `mags.yaml` still disables GPU mode to avoid issues. User has to manually enable it before running the MAG generation step.)\r\n",
        "html_url": "https://github.com/arumugamlab/MIntO/releases/tag/2.0.0-beta.1",
        "name": "MIntO 2.0.0 first beta version",
        "release_id": 107703092,
        "tag": "2.0.0-beta.1",
        "tarball_url": "https://api.github.com/repos/arumugamlab/MIntO/tarball/2.0.0-beta.1",
        "type": "Release",
        "url": "https://api.github.com/repos/arumugamlab/MIntO/releases/107703092",
        "value": "https://api.github.com/repos/arumugamlab/MIntO/releases/107703092",
        "zipball_url": "https://api.github.com/repos/arumugamlab/MIntO/zipball/2.0.0-beta.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "carmen-saenz",
          "type": "User"
        },
        "date_created": "2022-04-20T08:08:32Z",
        "date_published": "2022-04-20T08:30:46Z",
        "description": "Minor update that enables to set a minimum number of mapped reads to a gene prior to the normalization step for the gene to be considered \u201cexpressed\u201d:\r\n\r\n- `MIN_mapped_reads`: Filter the aligned reads by establishing the minimum number of mapped reads to a gene. This parameter is included in `mapping.yaml`, when running `gene_abundance.smk`.\r\n- `msamtools` has been updated to **v1.1.0**\r\n\r\nAdditionally, `Flye` has been updated to **v2.9**.\r\n\r\n**Full Changelog**: https://github.com/arumugamlab/MIntO/compare/1.0.0...1.0.1",
        "html_url": "https://github.com/arumugamlab/MIntO/releases/tag/1.0.1",
        "name": "MIntO 1.0.1",
        "release_id": 64819572,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/arumugamlab/MIntO/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/arumugamlab/MIntO/releases/64819572",
        "value": "https://api.github.com/repos/arumugamlab/MIntO/releases/64819572",
        "zipball_url": "https://api.github.com/repos/arumugamlab/MIntO/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "carmen-saenz",
          "type": "User"
        },
        "date_created": "2022-03-18T17:36:16Z",
        "date_published": "2022-03-18T18:59:48Z",
        "description": "First public available release.",
        "html_url": "https://github.com/arumugamlab/MIntO/releases/tag/1.0.0",
        "name": "MIntO 1.0.0",
        "release_id": 62217519,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/arumugamlab/MIntO/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/arumugamlab/MIntO/releases/62217519",
        "value": "https://api.github.com/repos/arumugamlab/MIntO/releases/62217519",
        "zipball_url": "https://api.github.com/repos/arumugamlab/MIntO/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:14:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/smk/dependencies.smk"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/smk/data_integration.smk"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/arumugamlab/MIntO/main/smk/include/config_parser.smk"
      },
      "technique": "file_exploration"
    }
  ]
}