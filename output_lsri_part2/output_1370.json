{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bioinfolabwhu/circRIP"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-09T04:23:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-03T18:59:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "circRIP: An accurate tool for identifying circRNA-RBP interaction"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9503643716583989,
      "result": {
        "original_header": "2.1 Identify circRNA using built-in method in circRIP:",
        "type": "Text_excerpt",
        "value": "\n        \n    results:\n    \n        the column of test_ip/input.circ is:\n\t\n            1, Chromosome\n            2, circRNA start coordinates\n            3, circRNA end coordinates\n            4, circRNA BSJs reads counts\n \n"
      },
      "source": "https://raw.githubusercontent.com/bioinfolabwhu/circRIP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9037292759672851,
      "result": {
        "original_header": "2.2 Identify circRNA using other softwares:",
        "type": "Text_excerpt",
        "value": "     Users are free to use the circRNA recognition software, as long as the following conditions are met:\n     \n        1, transform the results to four columns format as described above.\n        2, bam files of linear reads(to detecte forward-splice junctions, splice-aware aligners such as STAR should be used to perform reads mapping)\n            \n         \n"
      },
      "source": "https://raw.githubusercontent.com/bioinfolabwhu/circRIP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8972418046697646,
      "result": {
        "original_header": "3. Identify IP-enriched circRNA:",
        "type": "Text_excerpt",
        "value": "\n    results:\n        circRIP generates two output files test.final.out and test.final.out.html, test.final.out is the txt format results and test.final.out.html is a web report page\n        the column of test.final.out is:\n            1, circRNA ID(Chromosome:start|end)\n            2, circRNA host gene symbol\n            3, circRNA BSJs in IP\n            4, circRNA BSJs in Input\n            5, circRNA CPM in IP\n            6, circRNA CPM in Input\n            7, IP/Input ratio\n            8, P value\n            9, circRNA status (enriched or non-enriched)\n        \n        test.final.out.html:\n![image](https://github.com/bioinfolabwhu/imges/blob/main/demo.jpg)\n            \n \n"
      },
      "source": "https://raw.githubusercontent.com/bioinfolabwhu/circRIP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bioinfolabwhu/circRIP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bioinfolabwhu/circRIP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinfolabwhu/circRIP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "circRIP"
      },
      "source": "https://raw.githubusercontent.com/bioinfolabwhu/circRIP/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bioinfolabwhu/imges/main/demo.jpg"
      },
      "source": "https://raw.githubusercontent.com/bioinfolabwhu/circRIP/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999757347913047,
      "result": {
        "original_header": "2.1 Identify circRNA using built-in method in circRIP:",
        "type": "Text_excerpt",
        "value": "        circRIP identify circRNA by parsing STAR mapping results and re-mapping the unmapped reads to known circRNA back-splice junctions(BSJs)\n    \n        requisited input files:\n\t\n            test_ip_1.fq.gz,test_ip_2.fq.gz,test_input_1.fq.gz,test_input_2.fq.gz  fastq files of IP/Input\n            ~/starindex/    the STAR index\n            ~/bowtie2index/circBase the bowtie2 index of circRNA junctions \n            gencode.v32.annotation.gtf  the GTF format gene annotation\n            GRCh38.p10.genome.fa    the genome fasta file\n            \n        command lines:\n\t\n\t\t# IP\n\t\tpython circRIP.py  circRNAIdentify -fq1 test_ip_1.fq.gz -fq2 test_ip_2.fq.gz \\\n\t\t                   -star_index ~/starindex/ -bowtie2_index ~/bowtie2index/circBase \\\n\t\t                   -p 30 -gtf gencode.v32.annotation.gtf -genome GRCh38.p10.genome.fa -prefix test_ip.circ -junLen 100\n\t\t# Input\n\t\tpython circRIP.py  circRNAIdentify -fq1 test_input_1.fq.gz -fq2 test_input_2.fq.gz \\\n\t\t                    -star_index ~/starindex/ -bowtie2_index ~/bowtie2index/circBase \\\n\t\t                    -p 30 -gtf gencode.v32.annotation.gtf -genome GRCh38.p10.genome.fa -prefix test_input.circ -junLen 100 \n"
      },
      "source": "https://raw.githubusercontent.com/bioinfolabwhu/circRIP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8068550200735727,
      "result": {
        "original_header": "3. Identify IP-enriched circRNA:",
        "type": "Text_excerpt",
        "value": "\tpython circRIP.py EnrichedcircRNA -ip_circ test_ip.circ -input_circ test_input.circ -gtf gencode.v32.annotation.gtf \\\n\t                  -ip_bam test_ip.circAligned.out.bam -input_bam test_input.circAligned.out.bam -prefix test.final.out \\\n\t\t\t  -G GRCh38.p10.genome.fa \n"
      },
      "source": "https://raw.githubusercontent.com/bioinfolabwhu/circRIP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bioinfolabwhu/circRIP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "circRIP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bioinfolabwhu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 35625,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 7843,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bioinfolabwhu/circRIP/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 14:11:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}