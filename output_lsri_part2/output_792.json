{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lh3/wgsim"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2011-01-22T22:57:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-18T23:24:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Reads simulator"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "Wgsim is a small tool for simulating sequence reads from a reference genome.\nIt is able to simulate diploid genomes with SNPs and insertion/deletion (INDEL)\npolymorphisms, and simulate reads with uniform substitution sequencing errors.\nIt does not generate INDEL sequencing errors, but this can be partly\ncompensated by simulating INDEL polymorphisms.\n\nWgsim outputs the simulated polymorphisms, and writes the true read coordinates\nas well as the number of polymorphisms and sequencing errors in read names.\nOne can evaluate the accuracy of a mapper or a SNP caller with wgsim_eval.pl\nthat comes with the package.\n\n"
      },
      "source": "https://raw.githubusercontent.com/lh3/wgsim/master/README",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9772465295015674,
      "result": {
        "original_header": "History",
        "type": "Text_excerpt",
        "value": "Wgsim was modified from MAQ's read simulator by dropping dependencies to other\nsource codes in the MAQ package and incorporating patches from Colin Hercus\nwhich allow to simulate INDELs longer than 1bp. Wgsim was originally released\nin the SAMtools software package. I forked it out in 2011 as a standalone\nproject. A few improvements were also added in this course. \n"
      },
      "source": "https://raw.githubusercontent.com/lh3/wgsim/master/README",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9872678793077341,
      "result": {
        "original_header": "Simulation and evaluation",
        "type": "Text_excerpt",
        "value": "where yyy is the read length, zzz is the error rate and $xxx * $yyy = 10000000.\nBy default, 15% of polymorphisms are INDELs and their lengths are drawn from a\ngeometric distribution with density 0.7*0.3^{l-1}. \n"
      },
      "source": "https://raw.githubusercontent.com/lh3/wgsim/master/README",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.924359155044705,
      "result": {
        "original_header": "Results",
        "type": "Text_excerpt",
        "value": "1) AGILE throws \"Floating point exception\" halfway for 100/200bp reads.  The\n   default output is supposed to be PSL, but actually has an additional \"score\"\n   column. AGILE is reportedly faster than BWA-SW for 1000bp reads. It is\n   slower here possibly because of suboptimal command line options. \n3) Lastz complains: \"FAILURE: bad fasta character in hs37m.fa ...\". \n4) Pash only gives 'unique mapping'. Its unique mapping is better than BWA-SW's\n   Q1 mapiping. It is very slow, though, possibly because of suboptimal\n   options. \n"
      },
      "source": "https://raw.githubusercontent.com/lh3/wgsim/master/README",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/lh3/wgsim/wiki"
      },
      "source": "https://raw.githubusercontent.com/lh3/wgsim/master/README",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lh3/wgsim/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 91
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lh3/wgsim/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lh3/wgsim"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Introduction"
      },
      "source": "https://raw.githubusercontent.com/lh3/wgsim/master/README",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8881450804102295,
      "result": {
        "original_header": "Simulation and evaluation",
        "type": "Text_excerpt",
        "value": "  wgsim -Nxxx -1yyy -d0 -S11 -e0 -rzzz hs37m.fa yyy-zzz.fq /dev/null \nThe '-g' option may be changed with mappers. \n"
      },
      "source": "https://raw.githubusercontent.com/lh3/wgsim/master/README",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9967777311252229,
      "result": {
        "original_header": "System",
        "type": "Text_excerpt",
        "value": "GCC: 4.1.2\nCPU: AMD Opteron 8350 @ 2.0GHz\nMem: 128GB \n"
      },
      "source": "https://raw.githubusercontent.com/lh3/wgsim/master/README",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lh3/wgsim/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, genomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wgsim"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lh3"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 22660,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 8677,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lh3/wgsim/master/README"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:01:33",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 261
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}