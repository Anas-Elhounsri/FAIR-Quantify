{
  "application_domain": [
    {
      "confidence": 15.08,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8491203616401857,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "COJAC - CoOccurrence adJusted Analysis and Calling"
        ],
        "type": "Text_excerpt",
        "value": "If you use this software in your research, please cite:\n\n- Katharina Jahn, David Dreifuss, Ivan Topolsky, Anina Kull, Pravin Ganesanandamoorthy, Xavier Fernandez-Cassi, Carola B\u00e4nziger, Alexander J. Devaux, Elyse Stachler, Lea Caduff, Federica Cariti, Alex Tu\u00f1as Corz\u00f3n, Lara Fuhrmann, Chaoran Chen, Kim Philipp Jablonski, Sarah Nadeau, Mirjam Feldkamp, Christian Beisel, Catharine Aquino, Tanja Stadler, Christoph Ort, Tamar Kohn, Timothy R. Julian & Niko Beerenwinkel\n\n  \"*Early detection and surveillance of SARS-CoV-2 genomic variants in wastewater using COJAC*.\"\n\n  Nature Microbiology volume 7, pages 1151\u20131160 (2022); [doi:10.1038/s41564-022-01185-x](https://doi.org/10.1038/s41564-022-01185-x)\n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cbg-ethz/cojac"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contacts",
        "parent_header": [
          "COJAC - CoOccurrence adJusted Analysis and Calling"
        ],
        "type": "Text_excerpt",
        "value": "If you experience problems running the software:\n\n- We encourage to use the [issue tracker on GitHub](https://github.com/cbg-ethz/cojac/issues)\n- For further enquiries, you can also contact the [V-pipe Dev Team](https://cbg-ethz.github.io/V-pipe/contact/)\n- You can contact the publication\u2019s corresponding author\n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-02-02T16:36:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-28T11:39:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "COJAC - CoOccurrence adJusted Analysis and Calling"
        ],
        "type": "Text_excerpt",
        "value": "The _cojac_ package comprises a set of command-line tools to analyse co-occurrence of mutations on amplicons. It is useful, for example, for early detection of viral variants of concern (e.g. Alpha, Delta, Omicron) in environmental samples, and has been designed to scan for multiple SARS-CoV-2 variants in wastewater samples, as analyzed jointly by [ETH Zurich](https://bsse.ethz.ch/news-and-events/d-bsse-news/2021/01/sars-cov-2-variants-detected-in-wastewater-samples.html), [EPFL](https://actu.epfl.ch/news/covid-19-using-wastewater-to-track-the-pandemic/) and [Eawag](https://www.eawag.ch/en/department/sww/projects/sars-cov2-in-wastewater/).\nLearn more about this project on [its Dashboard](https://cov-spectrum.org/story/wastewater-in-switzerland).\n\nThe analysis requires the whole amplicon to be covered by sequencing read pairs. It currently works at the level of aligned reads, but [we plan](#upcoming-features) to be able to adjust confidence scores based on local (window) haplotypes (as generated, e.g., by [ShoRAH](https://github.com/cbg-ethz/shorah), [doi:10.1186/1471-2105-12-119](https://doi.org/10.1186/1471-2105-12-119)).\n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9020031822327602,
      "result": {
        "original_header": "COJAC - CoOccurrence adJusted Analysis and Calling",
        "type": "Text_excerpt",
        "value": "The COJAC tool is part of the [V-pipe workflow for analysing NGS data of short viral genomes](https://github.com/cbg-ethz/v-pipe).\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9703196057650152,
      "result": {
        "original_header": "Collect the co-occurrence data",
        "type": "Text_excerpt",
        "value": "If you're not executing COJAC as part of a larger workflow, such as [V-pipe](https://github.com/cbg-ethz/v-pipe), you can analyse stand-alone BAM/CRAM/SAM alignment files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9359518131599601,
      "result": {
        "original_header": "Standalone files",
        "type": "Text_excerpt",
        "value": "> **Note:**\n> - you can also use the `-y` / `--yaml` option to write to a YAML file instead of a JSON.\n> - as an optimisation tip of your workflow, try running one separate instance of COJAC on each BAM file,\n>   and combining the results afterward in a single YAML (or JSON).\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9776597793938816,
      "result": {
        "original_header": "Analyzing a cohort previously aligned by V-pipe",
        "type": "Text_excerpt",
        "value": "> ***Note:** Warning, it is much slower as each alignment is analyzed sequentially.\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8968374700539301,
      "result": {
        "original_header": "Number of cooccurrences",
        "type": "Text_excerpt",
        "value": " - you can increase it to e.g.: 3 if the variants you study require more stringent identification\n - you can set it to 1, to also count isolated occurrences - in this case `cooc-mutbamscan` will also double as a generic (non coorcurrence-aware) variant caller, so you can get all counts with a single tool.\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9206052711717203,
      "result": {
        "original_header": "Render table for publication",
        "type": "Text_excerpt",
        "value": "> **Note:**\n> - if provided options `-m` / `--vocdir` and `-a` /  `--amplicons` can help generate human-friendly headers (_Amplicon 88, 26277-26635_) in the table instead of short names (`88_om`)\n> - you can also output to comma-separated table (`-o cooc-output.csv`)\n> - Microsoft Excel requires using option `-x`/`--excel` (using semi-colon instead of comma in comma-separated-value files). Some versions can also open TSV (but not the Office 365 web app). \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8742411638920918,
      "result": {
        "original_header": "Export table for downstream analysis",
        "type": "Text_excerpt",
        "value": " - **count**: total count of amplicons carrying the sites of interest\n - **mut_all**: amplicons carrying mutations on all site of interest (e.g.: variant mutations observed on all sites)\n - **mut_oneless**: amplicons where one mutation is missing (e.g.: only 2 out of 3 sites carried the variant mutation, 1 sites carries wild-type)\n - **frac**: fraction _(mut_all/count)_ or empty if no _counts_\n - **cooc**: number of considered site (e.g.: 2 sites of interests) or empty if no _counts_ \nAnother different table orientation is provided by `-l`/`--lines`: \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8914859973702101,
      "result": {
        "original_header": "Mutations affecting primers",
        "type": "Text_excerpt",
        "value": "It is also possible to abuse the sub-command shown in [section _Store the amplicon query_ above](#store-the-amplicon-query) to get a list of mutations which fall on primers' target sites (and thus could impact binding and cause drop-outs) by providing a *primer* BED file.\n```bash\n# get the *primer* BED file for Artic v5.3.2\ncurl -o SARS-CoV-2.v532.primer.bed 'https://raw.githubusercontent.com/artic-network/primer-schemes/master/nCoV-2019/V5.3.2/SARS-CoV-2.primer.bed'\n# get the full list of Omicron BA.2.86 mutations\ncurl -O 'https://raw.githubusercontent.com/cbg-ethz/cowwid/master/voc/omicron_ba286_mutations_full.yaml'\n\n# check which primers have at least 1 mutation falling in their target binding regions\ncojac cooc-mutbamscan --voc omicron_ba286_mutations_full.yaml --bedfile SARS-CoV-2.v532.primer.bed --no-sort --cooc 1 --out-amp affected_primers.v532.yaml\n```\n \nmeaning:\n- [50th line of the BED file](https://github.com/artic-network/primer-schemes/blob/master/nCoV-2019/V5.3.2/SARS-CoV-2.primer.bed#L50)\n- primer's target binding region 7819-7850\n- (that would be primer \"SARS-CoV-2_25_RIGHT\" with sequence `CTCTCAGGTTGTCTAAGTTAACAAAATGAGA`)\n- is hit by one mutation `7842G` \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8080387654019261,
      "result": {
        "original_header": "Upcoming features",
        "type": "Text_excerpt",
        "value": "- [x] ~~bioconda package~~\n- [x] ~~further jupyter and rstudio code from the publication~~\n- [x] ~~Move hard-coded amplicons to BED input file~~\n- [x] ~~Move hard-coded mutations to YAML configuration~~\n- [x] ~~Refactor code into proper Python package~~ \n- [x] ~~Integration as part of V-pipe~~\n- [ ] Integration with ShoRAH amplicons\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cbg-ethz/cojac/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/MutationOccurrenceVisualization.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/MutationOccurrenceVisualization.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/ww_smoothing.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/ww_smoothing.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/ww_delta.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/ww_delta.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/snv_count_wastewater3.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/snv_count_wastewater3.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/Signature_mutations_in_patient_samples.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/Signature_mutations_in_patient_samples.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/ww_modelling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/ww_modelling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/mut-table.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/notebooks/mut-table.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cbg-ethz/cojac/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cbg-ethz/cojac"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "COJAC - CoOccurrence adJusted Analysis and Calling"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://quay.io/repository/biocontainers/cojac/status"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/terminal.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/ORCIDiD_iconvector.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/mark-github.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/ORCIDiD_iconvector.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/mark-github.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/ORCIDiD_iconvector.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/mark-github.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/ORCIDiD_iconvector.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/mark-github.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/ORCIDiD_iconvector.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/mark-github.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/ORCIDiD_iconvector.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/mark-github.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/images/ORCIDiD_iconvector.svg"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "COJAC - CoOccurrence adJusted Analysis and Calling"
        ],
        "type": "Text_excerpt",
        "value": "We recommend using [bioconda software repositories](https://bioconda.github.io/index.html) for easy installation.\nYou can find instruction to setup your bioconda environment at the following address:\n\n - https://bioconda.github.io/index.html#usage\n\nIn those instructions, please follow carefully the channel configuration instructions.\n\nIf you use [V-pipe\u2019s `quick_install.sh`](https://github.com/cbg-ethz/V-pipe#using-quick-install-script), it will set up an environment that you can activate, e.g.:\n\n```bash\nbash quick_install.sh -b master -p testing -w work\n. ./testing/miniconda3/bin/activate\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Prebuilt package",
        "parent_header": [
          "COJAC - CoOccurrence adJusted Analysis and Calling",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "_cojac_ and its dependencies are all available in the bioconda repository. We strongly advise you to install [this pre-built package](https://bioconda.github.io/recipes/cojac/README.html) for a hassle-free experience.\n\nYou can install _cojac_ in its own environment and activate it:\n\n```bash\nconda create -n cojac cojac\nconda activate cojac\n# test it\ncojac --help\n```\n\nAnd to update it to the latest version, run:\n\n```bash\n# activate the environment if not already active:\nconda activate cojac\nconda update cojac\n```\n\nOr you can add it to the current environment (e.g.: in environment _base_):\n\n```bash\nconda install cojac\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Remove conda environment",
        "parent_header": [
          "COJAC - CoOccurrence adJusted Analysis and Calling",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can remove the conda environment if you don't need it any more:\n\n```bash\n# exit the cojac environment first:\nconda deactivate\nconda env remove -n cojac\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python poetry",
        "parent_header": [
          "COJAC - CoOccurrence adJusted Analysis and Calling",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "COJAC has its dependencies in a [pyproject.toml](pyproject.toml) managed\nwith poetry and can be installed with it.\n\n```bash\n# If not installed system-wide: manually run poetry-dynamic-versioning\npoetry-dynamic-versioning\n# (this sets the version string from the git currently cloned and checked out)\n\npoetry install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9979096794003786,
      "result": {
        "original_header": "Standalone files",
        "type": "Text_excerpt",
        "value": "Provide a list of BAM files using the `-a` / `--alignment` option. Run:\n```bash\ncojac cooc-mutbamscan -b nCoV-2019.insert.V3.bed -m voc/ -a sam1.bam sam2.bam -j cooc-test.json\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8321850851858572,
      "result": {
        "original_header": "Number of cooccurrences",
        "type": "Text_excerpt",
        "value": " - you can increase it to e.g.: 3 if the variants you study require more stringent identification\n - you can set it to 1, to also count isolated occurrences - in this case `cooc-mutbamscan` will also double as a generic (non coorcurrence-aware) variant caller, so you can get all counts with a single tool.\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9939900475394119,
      "result": {
        "original_header": "Display data on terminal",
        "type": "Text_excerpt",
        "value": "The default `-d` / `--dump` option of `cooc-mutbamscan` is not a very user-friendly experience to display the data. You can instead pass a JSON or YAML file to the display script. Run:\n```bash\ncojac cooc-colourmut -a amplicons.v3.yaml -j cooc-test.json\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9413590356752177,
      "result": {
        "original_header": "Render table for publication",
        "type": "Text_excerpt",
        "value": "And now, let\u2019s go beyond our terminal and produce a table that can be included in a publication (see bibliography below for concrete example). Run:\n```bash\ncojac cooc-pubmut -m voc/ -a amplicons.v3.yaml -j cooc-test.json -o cooc-output.tsv\n```\n \n> **Note:**\n> - if provided options `-m` / `--vocdir` and `-a` /  `--amplicons` can help generate human-friendly headers (_Amplicon 88, 26277-26635_) in the table instead of short names (`88_om`)\n> - you can also output to comma-separated table (`-o cooc-output.csv`)\n> - Microsoft Excel requires using option `-x`/`--excel` (using semi-colon instead of comma in comma-separated-value files). Some versions can also open TSV (but not the Office 365 web app). \n\nIt is also possible to use the software [_pandoc_](https://pandoc.org/) to further convert the CSV to other formats. Run:\n```bash\ncojac cooc-pubmut -j cooc-test.json -o cooc-output.csv\npandoc cooc-output.csv -o cooc-output.pdf\npandoc cooc-output.csv -o cooc-output.html\npandoc cooc-output.csv -o cooc-output.md\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9957470703188155,
      "result": {
        "original_header": "Export table for downstream analysis",
        "type": "Text_excerpt",
        "value": "If you want to further analyse the data (e.g.: with RStudio), it's also possible to export the data into a more machine-readable CSV/TSV table. Run:\n```bash\ncojac cooc-tabmut -j cooc-test.json -o cooc-export.csv\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9996656817268174,
      "result": {
        "original_header": "Mutations affecting primers",
        "type": "Text_excerpt",
        "value": "It is also possible to abuse the sub-command shown in [section _Store the amplicon query_ above](#store-the-amplicon-query) to get a list of mutations which fall on primers' target sites (and thus could impact binding and cause drop-outs) by providing a *primer* BED file.\n```bash\n# get the *primer* BED file for Artic v5.3.2\ncurl -o SARS-CoV-2.v532.primer.bed 'https://raw.githubusercontent.com/artic-network/primer-schemes/master/nCoV-2019/V5.3.2/SARS-CoV-2.primer.bed'\n# get the full list of Omicron BA.2.86 mutations\ncurl -O 'https://raw.githubusercontent.com/cbg-ethz/cowwid/master/voc/omicron_ba286_mutations_full.yaml'\n\n# check which primers have at least 1 mutation falling in their target binding regions\ncojac cooc-mutbamscan --voc omicron_ba286_mutations_full.yaml --bedfile SARS-CoV-2.v532.primer.bed --no-sort --cooc 1 --out-amp affected_primers.v532.yaml\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999181256487493,
      "result": {
        "original_header": "Upcoming features",
        "type": "Text_excerpt",
        "value": "- [x] ~~bioconda package~~\n- [x] ~~further jupyter and rstudio code from the publication~~\n- [x] ~~Move hard-coded amplicons to BED input file~~\n- [x] ~~Move hard-coded mutations to YAML configuration~~\n- [x] ~~Refactor code into proper Python package~~ \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8500072668363232,
      "result": {
        "original_header": "Standalone files",
        "type": "Text_excerpt",
        "value": "Provide a list of BAM files using the `-a` / `--alignment` option. Run:\n```bash\ncojac cooc-mutbamscan -b nCoV-2019.insert.V3.bed -m voc/ -a sam1.bam sam2.bam -j cooc-test.json\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8496376385693811,
      "result": {
        "original_header": "Display data on terminal",
        "type": "Text_excerpt",
        "value": "The default `-d` / `--dump` option of `cooc-mutbamscan` is not a very user-friendly experience to display the data. You can instead pass a JSON or YAML file to the display script. Run:\n```bash\ncojac cooc-colourmut -a amplicons.v3.yaml -j cooc-test.json\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.87448258209272,
      "result": {
        "original_header": "Render table for publication",
        "type": "Text_excerpt",
        "value": "\nIt is also possible to use the software [_pandoc_](https://pandoc.org/) to further convert the CSV to other formats. Run:\n```bash\ncojac cooc-pubmut -j cooc-test.json -o cooc-output.csv\npandoc cooc-output.csv -o cooc-output.pdf\npandoc cooc-output.csv -o cooc-output.html\npandoc cooc-output.csv -o cooc-output.md\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8048989228048805,
      "result": {
        "original_header": "Export table for downstream analysis",
        "type": "Text_excerpt",
        "value": "If you want to further analyse the data (e.g.: with RStudio), it's also possible to export the data into a more machine-readable CSV/TSV table. Run:\n```bash\ncojac cooc-tabmut -j cooc-test.json -o cooc-export.csv\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cbg-ethz/cojac/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "### GNU GENERAL PUBLIC LICENSE\n\nVersion 3, 29 June 2007\n\nCopyright (C) 2007 Free Software Foundation, Inc.\n<https://fsf.org/>\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n### Preamble\n\nThe GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\nThe licenses for most software and other practical works are designed\nto take away your freedom to share and change the works. By contrast,\nthe GNU General Public License is intended to guarantee your freedom\nto share and change all versions of a program--to make sure it remains\nfree software for all its users. We, the Free Software Foundation, use\nthe GNU General Public License for most of our software; it applies\nalso to any other work released this way by its authors. You can apply\nit to your programs, too.\n\nWhen we speak of free software, we are referring to freedom, not\nprice. Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\nTo protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights. Therefore, you\nhave certain responsibilities if you distribute copies of the\nsoftware, or if you modify it: responsibilities to respect the freedom\nof others.\n\nFor example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received. You must make sure that they, too, receive\nor can get the source code. And you must show them these terms so they\nknow their rights.\n\nDevelopers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\nFor the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software. For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\nSome devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the\nmanufacturer can do so. This is fundamentally incompatible with the\naim of protecting users' freedom to change the software. The\nsystematic pattern of such abuse occurs in the area of products for\nindividuals to use, which is precisely where it is most unacceptable.\nTherefore, we have designed this version of the GPL to prohibit the\npractice for those products. If such problems arise substantially in\nother domains, we stand ready to extend this provision to those\ndomains in future versions of the GPL, as needed to protect the\nfreedom of users.\n\nFinally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish\nto avoid the special danger that patents applied to a free program\ncould make it effectively proprietary. To prevent this, the GPL\nassures that patents cannot be used to render the program non-free.\n\nThe precise terms and conditions for copying, distribution and\nmodification follow.\n\n### TERMS AND CONDITIONS\n\n#### 0. Definitions.\n\n\"This License\" refers to version 3 of the GNU General Public License.\n\n\"Copyright\" also means copyright-like laws that apply to other kinds\nof works, such as semiconductor masks.\n\n\"The Program\" refers to any copyrightable work licensed under this\nLicense. Each licensee is addressed as \"you\". \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of\nan exact copy. The resulting work is called a \"modified version\" of\nthe earlier work or a work \"based on\" the earlier work.\n\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\n\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy. Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies. Mere interaction with a user\nthrough a computer network, with no transfer of a copy, is not\nconveying.\n\nAn interactive user interface displays \"Appropriate Legal Notices\" to\nthe extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License. If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n#### 1. Source Code.\n\nThe \"source code\" for a work means the preferred form of the work for\nmaking modifications to it. \"Object code\" means any non-source form of\na work.\n\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form. A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities. However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work. For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\nThe Corresponding Source need not include anything that users can\nregenerate automatically from other parts of the Corresponding Source.\n\nThe Corresponding Source for a work in source code form is that same\nwork.\n\n#### 2. Basic Permissions.\n\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met. This License explicitly affirms your unlimited\npermission to run the unmodified Program. The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work. This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\nYou may make, run and propagate covered works that you do not convey,\nwithout conditions so long as your license otherwise remains in force.\nYou may convey covered works to others for the sole purpose of having\nthem make modifications exclusively for you, or provide you with\nfacilities for running those works, provided that you comply with the\nterms of this License in conveying all material for which you do not\ncontrol copyright. Those thus making or running the covered works for\nyou must do so exclusively on your behalf, under your direction and\ncontrol, on terms that prohibit them from making any copies of your\ncopyrighted material outside their relationship with you.\n\nConveying under any other circumstances is permitted solely under the\nconditions stated below. Sublicensing is not allowed; section 10 makes\nit unnecessary.\n\n#### 3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such\ncircumvention is effected by exercising rights under this License with\nrespect to the covered work, and you disclaim any intention to limit\noperation or modification of the work as a means of enforcing, against\nthe work's users, your or third parties' legal rights to forbid\ncircumvention of technological measures.\n\n#### 4. Conveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n#### 5. Conveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these\nconditions:\n\n-   a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n-   b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under\n    section 7. This requirement modifies the requirement in section 4\n    to \"keep intact all notices\".\n-   c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy. This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged. This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n-   d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit. Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n#### 6. Conveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms of\nsections 4 and 5, provided that you also convey the machine-readable\nCorresponding Source under the terms of this License, in one of these\nways:\n\n-   a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n-   b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the Corresponding\n    Source from a network server at no charge.\n-   c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source. This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n-   d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge. You need not require recipients to copy the\n    Corresponding Source along with the object code. If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source. Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n-   e) Convey the object code using peer-to-peer transmission,\n    provided you inform other peers where the object code and\n    Corresponding Source of the work are being offered to the general\n    public at no charge under subsection 6d.\n\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal,\nfamily, or household purposes, or (2) anything designed or sold for\nincorporation into a dwelling. In determining whether a product is a\nconsumer product, doubtful cases shall be resolved in favor of\ncoverage. For a particular product received by a particular user,\n\"normally used\" refers to a typical or common use of that class of\nproduct, regardless of the status of the particular user or of the way\nin which the particular user actually uses, or expects or is expected\nto use, the product. A product is a consumer product regardless of\nwhether the product has substantial commercial, industrial or\nnon-consumer uses, unless such uses represent the only significant\nmode of use of the product.\n\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to\ninstall and execute modified versions of a covered work in that User\nProduct from a modified version of its Corresponding Source. The\ninformation must suffice to ensure that the continued functioning of\nthe modified object code is in no case prevented or interfered with\nsolely because modification has been made.\n\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information. But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or\nupdates for a work that has been modified or installed by the\nrecipient, or for the User Product in which it has been modified or\ninstalled. Access to a network may be denied when the modification\nitself materially and adversely affects the operation of the network\nor violates the rules and protocols for communication across the\nnetwork.\n\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n#### 7. Additional Terms.\n\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law. If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit. (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.) You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders\nof that material) supplement the terms of this License with terms:\n\n-   a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n-   b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n-   c) Prohibiting misrepresentation of the origin of that material,\n    or requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n-   d) Limiting the use for publicity purposes of names of licensors\n    or authors of the material; or\n-   e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n-   f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions\n    of it) with contractual assumptions of liability to the recipient,\n    for any liability that these contractual assumptions directly\n    impose on those licensors and authors.\n\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10. If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term. If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions; the\nabove requirements apply either way.\n\n#### 8. Termination.\n\nYou may not propagate or modify a covered work except as expressly\nprovided under this License. Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\nHowever, if you cease all violation of this License, then your license\nfrom a particular copyright holder is reinstated (a) provisionally,\nunless and until the copyright holder explicitly and finally\nterminates your license, and (b) permanently, if the copyright holder\nfails to notify you of the violation by some reasonable means prior to\n60 days after the cessation.\n\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License. If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n#### 9. Acceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or run\na copy of the Program. Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance. However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work. These actions infringe copyright if you do\nnot accept this License. Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n#### 10. Automatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License. You are not responsible\nfor enforcing compliance by third parties with this License.\n\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations. If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License. For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n#### 11. Patents.\n\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based. The\nwork thus licensed is called the contributor's \"contributor version\".\n\nA contributor's \"essential patent claims\" are all patent claims owned\nor controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version. For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement). To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients. \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\nA patent license is \"discriminatory\" if it does not include within the\nscope of its coverage, prohibits the exercise of, or is conditioned on\nthe non-exercise of one or more of the rights that are specifically\ngranted under this License. You may not convey a covered work if you\nare a party to an arrangement with a third party that is in the\nbusiness of distributing software, under which you make payment to the\nthird party based on the extent of your activity of conveying the\nwork, and under which the third party grants, to any of the parties\nwho would receive the covered work from you, a discriminatory patent\nlicense (a) in connection with copies of the covered work conveyed by\nyou (or copies made from those copies), or (b) primarily for and in\nconnection with specific products or compilations that contain the\ncovered work, unless you entered into that arrangement, or that patent\nlicense was granted, prior to 28 March 2007.\n\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n#### 12. No Surrender of Others' Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License. If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under\nthis License and any other pertinent obligations, then as a\nconsequence you may not convey it at all. For example, if you agree to\nterms that obligate you to collect a royalty for further conveying\nfrom those to whom you convey the Program, the only way you could\nsatisfy both those terms and this License would be to refrain entirely\nfrom conveying the Program.\n\n#### 13. Use with the GNU Affero General Public License.\n\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work. The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n#### 14. Revised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU General Public License from time to time. Such new versions\nwill be similar in spirit to the present version, but may differ in\ndetail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Program\nspecifies that a certain numbered version of the GNU General Public\nLicense \"or any later version\" applies to it, you have the option of\nfollowing the terms and conditions either of that numbered version or\nof any later version published by the Free Software Foundation. If the\nProgram does not specify a version number of the GNU General Public\nLicense, you may choose any version ever published by the Free\nSoftware Foundation.\n\nIf the Program specifies that a proxy can decide which future versions\nof the GNU General Public License can be used, that proxy's public\nstatement of acceptance of a version permanently authorizes you to\nchoose that version for the Program.\n\nLater license versions may give you additional or different\npermissions. However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n#### 15. Disclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT\nWARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND\nPERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE\nDEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR\nCORRECTION.\n\n#### 16. Limitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR\nCONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES\nARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT\nNOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR\nLOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM\nTO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER\nPARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n#### 17. Interpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\nEND OF TERMS AND CONDITIONS\n\n### How to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these\nterms.\n\nTo do so, attach the following notices to the program. It is safest to\nattach them to the start of each source file to most effectively state\nthe exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n        <one line to give the program's name and a brief idea of what it does.>\n        Copyright (C) <year>  <name of author>\n\n        This program is free software: you can redistribute it and/or modify\n        it under the terms of the GNU General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version.\n\n        This program is distributed in the hope that it will be useful,\n        but WITHOUT ANY WARRANTY; without even the implied warranty of\n        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n        GNU General Public License for more details.\n\n        You should have received a copy of the GNU General Public License\n        along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper\nmail.\n\nIf the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n        <program>  Copyright (C) <year>  <name of author>\n        This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n        This is free software, and you are welcome to redistribute it\n        under certain conditions; type `show c' for details.\n\nThe hypothetical commands \\`show w' and \\`show c' should show the\nappropriate parts of the General Public License. Of course, your\nprogram's commands might be different; for a GUI interface, you would\nuse an \"about box\".\n\nYou should also get your employer (if you work as a programmer) or\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary. For more information on this, and how to apply and follow\nthe GNU GPL, see <https://www.gnu.org/licenses/>.\n\nThe GNU General Public License does not permit incorporating your\nprogram into proprietary programs. If your program is a subroutine\nlibrary, you may consider it more useful to permit linking proprietary\napplications with the library. If this is what you want to do, use the\nGNU Lesser General Public License instead of this License. But first,\nplease read <https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cojac"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "cbg-ethz"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 680584,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 75562,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 16535,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://lapis-docs.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DrYak",
          "type": "User"
        },
        "date_created": "2024-06-03T22:36:59Z",
        "date_published": "2024-06-03T22:42:08Z",
        "description": "Bugfixes and improvement for sig generation from GeneSpectrum:\r\n\r\n- support LAPIS v2\r\n- switch to lineage field\r\n- quirk field to workaround bugs in servers\r\n\r\nPreview feature:\r\n\r\n- alpha importer from NextStrain\r\n",
        "html_url": "https://github.com/cbg-ethz/cojac/releases/tag/v0.9.2",
        "name": "Version 0.9.2 - LAPIS improvement",
        "release_id": 158696664,
        "tag": "v0.9.2",
        "tarball_url": "https://api.github.com/repos/cbg-ethz/cojac/tarball/v0.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/cbg-ethz/cojac/releases/158696664",
        "value": "https://api.github.com/repos/cbg-ethz/cojac/releases/158696664",
        "zipball_url": "https://api.github.com/repos/cbg-ethz/cojac/zipball/v0.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DrYak",
          "type": "User"
        },
        "date_created": "2023-09-04T14:37:42Z",
        "date_published": "2023-09-04T14:39:59Z",
        "description": "\r\nBug fixes:\r\n- `--url` was broken in `sig-generate` and `cooc-curate`\r\n\r\nNew features:\r\n- sort BED file by position, on by default\r\n  (avoids wrong amplicons names in out-of-order file)\r\n- comment amplicons query file, on by default\r\n  (add comments such as `# SARS-CoV-2_25_RIGHT`)\r\n  - helps double check amplicon names\r\n  - simplify searching for primers affected by mutation\r\n    by (ab)using COJAC's cooc-mutbamscan and primer BED files\r\n",
        "html_url": "https://github.com/cbg-ethz/cojac/releases/tag/v0.9.1",
        "name": "Version 0.9.1",
        "release_id": 119828699,
        "tag": "v0.9.1",
        "tarball_url": "https://api.github.com/repos/cbg-ethz/cojac/tarball/v0.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/cbg-ethz/cojac/releases/119828699",
        "value": "https://api.github.com/repos/cbg-ethz/cojac/releases/119828699",
        "zipball_url": "https://api.github.com/repos/cbg-ethz/cojac/zipball/v0.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DrYak",
          "type": "User"
        },
        "date_created": "2023-03-29T15:02:57Z",
        "date_published": "2023-03-29T15:10:35Z",
        "description": " - Converted to a proper python package with poewtry and click\r\n   - Command format has changed\r\n - Integrated into V-pipe\r\n - Tool for generating list of mutations from Cov-Spectrum to be used in\r\n   creating COJAC's specific YAML files\r\n - Select API end-point on Cov-Spectrum (ENA or GISAID)\r\n - Accesskey for non-open (GISAID) on Cov-Spectrum\r\n - Tool for converting list of mutations from TSV on Covariants.org repo\r\n - Partial support for aarch64\r\n   - pysam still missing on bioconda\r\n \r\n\r\nPublication:\r\n - change of literature ref to Nature Microbiology\r\n - Notebooks used in publication more portable\r\n",
        "html_url": "https://github.com/cbg-ethz/cojac/releases/tag/v0.9",
        "name": "Version 0.9",
        "release_id": 97338952,
        "tag": "v0.9",
        "tarball_url": "https://api.github.com/repos/cbg-ethz/cojac/tarball/v0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/cbg-ethz/cojac/releases/97338952",
        "value": "https://api.github.com/repos/cbg-ethz/cojac/releases/97338952",
        "zipball_url": "https://api.github.com/repos/cbg-ethz/cojac/zipball/v0.9"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Input data requirements",
        "parent_header": [
          "COJAC - CoOccurrence adJusted Analysis and Calling",
          "Howto"
        ],
        "type": "Text_excerpt",
        "value": "Analysis needs to be performed on SARS-CoV-2 samples sequenced using a tiled multiplexed PCRs protocol for which you need a BED (Browser Extensible Data) file describing the amplified regions, and sequenced with read settings that covers the totality of an amplicon.\n\nWe provide BED files for the following examples:\n - [nCoV-2019.insert.V3.bed](nCoV-2019.insert.V3.bed) for [ARTIC V3](https://doi.org/10.17504/protocols.io.bibtkann)\n - [SARS-CoV-2.insert.V4.txt](SARS-CoV-2.insert.V4.txt) for [ARTIC V4](https://community.artic.network/t/sars-cov-2-version-4-scheme-release/312)\n\n> **Note:**\n> - if you have a BED file describing the *primers' target binding region*, it's possible to convert it into an BED *inserts* using the tool [viramp-hub](https://github.com/wm75/viramp-hub):\n```bash\n# download the *primer* BED file for Artic v5.3.2\ncurl -o SARS-CoV-2.v532.primer.bed 'https://raw.githubusercontent.com/artic-network/primer-schemes/master/nCoV-2019/V5.3.2/SARS-CoV-2.primer.bed'\n# convert it into an *insert* BED file\nscheme-convert SARS-CoV-2.v532.primer.bed --to bed --bed-type cojac -o SARS-CoV-2.v532.cojac_insert.bed\n```\n> - for a useful application of *primer* BED files to searching for possible drop-outs, see [section _Mutations affecting primers_ below](#mutations-affecting-primers).\n\nThese protocols produce ~400bp long amplicons, and thus needs to be sequenced with, e.g., paired end sequencing with read length 250.\n\nSelect the desired bedfile using the `-b` / `--bedfile` option.\n\n> **Note:**\n> - this analysis method cannot work on read length much shorter than the amplicons (e.g.: it will not give reliable results for a read-length of 50).\n> - to use different protocols (e.g. Nimagen), you need to provide a BED file describing the amplicons. Its columns \"start\" and \"stop\" are mandatory\n\nAnalysis will use variants description YAML that list mutation to be searched.\n\nWe provide several examples in the directory [`voc/`](voc/). The current variants' mutation lists that we use in production as part of our wastewater-based surveillance of SARS-CoV-2 variants can be found in the repository [COWWID](https://github.com/cbg-ethz/cowwid), in the subdirectory [`voc/`](https://github.com/cbg-ethz/cowwid/tree/master/voc).\n\nSelect a directory containing a collection of virus definitions YAMLs using the `-m` / `--vocdir` option, or list individual YAML file(s) with option `--voc`.\n\n> **Note:**\n> - you can create new YAML files if you need to look for new variants of concern.\n> - e.g. it is possible to automatically generate YAMLs listing a few key mutations for cojac from [UK Health Security Agency (UKHSA) _Standardised Variant Definitions_](https://github.com/ukhsa-collaboration/variant_definitions/):\n```bash\n# fetch the repository of standardised variant definitions\ngit clone https://github.com/ukhsa-collaboration/variant_definitions.git\n# generate a YAML for omicron subvariant BA.2 using the corresponding standardised variant definitions\ncojac phe2cojac --shortname 'om2' --yaml voc/omicron_ba2_mutations.yaml variant_definitions/variant_yaml/imagines-viewable.yml\n# now have a look at the frequencies of mutations using covSPECTRUM\ncojac cooc-curate voc/omicron_ba2_mutations.yaml\n# adjust the content of the YAML files to your needs\n```\n> - Another possibility is obtaining an exhaustive list of mutations from covSpectrum or [covariants.org's repository](https://github.com/hodcroftlab/covariants/tree/master/defining_mutations)\n```bash\n# display the exhaustive list of all mutations known to appear on Omicron BA.1 on covSPECTRUM:\ncojac sig-generate --url https://lapis.cov-spectrum.org/open/v1 --variant BA.1 | tee list_ba1.yaml\n\n# or, Alternatively, download the TSV from covariants.org's repo and extract the list:\ncurl -O 'https://raw.githubusercontent.com/hodcroftlab/covariants/master/defining_mutations/21K.Omicron.tsv'\ncojac sig-generate --covariants 21K.Omicron.tsv --variant 'BA.1' | tee list_ba1.yaml\n\n# add a YAML header to the list:\n# (at minimum you NEED to specify the 'pangolin' lineage and give it a 'short' handle)\n# (source and 'nextstrain' lineages are optional)\ncat - list_ba1.yaml > voc/omicron_ba1_mutations_full.yaml <<HEAD\nvariant:\n  short: 'om1'\n  nextstrain: '21K'\n  pangolin: 'BA.1'\nsource:\n- https://github.com/cov-lineages/pango-designation/issues/361\n- https://github.com/hodcroftlab/covariants/blob/master/defining_mutations/21K.Omicron.tsv\nmut:\nHEAD\n\n# now have a look at the frequencies of mutations using covSPECTRUM\ncojac cooc-curate voc/omicron_ba2_mutations_full.yaml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "COJAC - CoOccurrence adJusted Analysis and Calling",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you want to install the software yourself, you can see the list of dependencies in [`conda_cojac_env.yaml`](conda_cojac_env.yaml).\n\nWe recommend using conda to install them:\n\n```bash\nconda env create -f conda_cojac_env.yaml\nconda activate cojac\n```\n\nInstall _cojac_ using pip:\n```bash\npip install .\n# this will autodetect dependencies already installed by conda\n```\n\ncojac should now be accessible from your PATH\n\n```bash\n# activate the environment if not already active:\nconda activate cojac\ncojac --help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:10:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "COJAC - CoOccurrence adJusted Analysis and Calling"
        ],
        "type": "Text_excerpt",
        "value": "Here are the available command-line tools:\n\n| command                 | purpose |\n| :---------------------- | :------ |\n| `cojac cooc-mutbamscan` | scan an alignment BAM/CRAM/SAM file for mutation co-occurrences and output a JSON or YAML file |\n| `cojac cooc-colourmut`  | display a JSON or YAML file as a coloured output on the terminal |\n| `cojac cooc-pubmut`     | render a JSON or YAML file to a table as in the publication |\n| `cojac cooc-tabmut`     | export a JSON or YAML file as a CSV/TSV table for downstream analysis (e.g.: RStudio) |\n| `cojac cooc-curate`     | an (experimental) tool to assist evaluating the quality of variant definitions by looking at mutations' or cooccurrences' frequencies from [covSPECTRUM](https://cov-spectrum.org) |\n| `cojac phe2cojac`       | a tool to generate new variant definition YAMLs for cojac using YMLs available at [UK Health Security Agency (UKHSA) _Standardised Variant Definitions_](https://github.com/ukhsa-collaboration/variant_definitions/) |\n| `cojac sig-generate`    | a tool to generate a list of mutations by querying [covSPECTRUM](https://lapis.cov-spectrum.org/) and assist writing variant definition YAMLs for cojac |\n\nUse option `-h` / `--help` to see available command-line options:\n\n```console\n$ cojac cooc-mutbamscan --help\nUsage: cojac cooc-mutbamscan [OPTIONS]\n\n  Scan amplicon (covered by long read pairs) for mutation cooccurrence\n\nOptions:\n  -a, --alignments BAM/CRAM       alignment files\n  -n, --name NAME                 when using alignment files, name to use for\n                                  the output\n  -s, --samples TSV               V-pipe samples list tsv\n  --batchname SEP                 concatenate samplename/batchname from\n                                  samples tsv\n  -p, --prefix PATH               V-pipe work directory prefix for where to\n                                  look at align files when using TSV samples\n                                  list\n  -r, --reference REFID           reference to look for in alignment files\n  -m, --vocdir DIR                directory containing the yamls defining the\n                                  variant of concerns\n  -V, --voc VOC                   individual yamls defining the variant of\n                                  concerns\n  --rev, --with-revert / --no-rev, --without-revert\n                                  also include reverts when compiling\n                                  amplicons (requires VOC YAML files with\n                                  revert category)\n  -b, --bedfile BED               bedfile defining the amplicons, with format:\n                                  ref\\tstart\\tstop\\tamp_num\\tpool\\tstrand\n  --sort / --no-sort             sort the bedfile by 'reference name' and\n                                  'start position' (default: sorted)\n  -#, --cooc COOC                 minimum number of cooccurrences to search for\n  -Q, --amplicons, --in-amp, --in-amplicons YAML\n                                  use the supplied YAML file to query\n                                  amplicons instead of building it from BED +\n                                  voc's DIR\n  -A, --out-amp, --out-amplicons YAML\n                                  output amplicon query in a YAML file\n  --comment / --no-comment        add comments in the out amplicon YAML with\n                                  names from BED file (default: comment the\n                                  YAML)\n  -j, --json JSON                 output results to a JSON file\n  -y, --yaml YAML                 output results to a yaml file\n  -t, --tsv TSV                   output results to a (raw) tsv file\n  -d, --dump                      dump the python object to the terminal\n  --help                          Show this message and exit.\n\n  @listfile can be used to pass a long list of parameters (e.g.: a large\n  number of BAMs) in a file instead of command line\n```\n\n```console\n$ cojac cooc-colourmut --help\nUsage: cojac cooc-colourmut [OPTIONS]\n\n  Print coloured pretty table on terminal\n\nOptions:\n  -a, --amplicons YAML  list of query amplicons, from mutbamscan  [required]\n  -j, --json JSON       results generated by mutbamscan\n  -y, --yaml YAML       results generated by mutbamscan\n  --help                Show this message and exit.\n\n  See cooc-pubmut for a CSV file that can be imported into an article\n```\n\n```console\n$ cojac cooc-pubmut --help\nUsage: cojac cooc-pubmut [OPTIONS]\n\n  Make a pretty table\n\nOptions:\n  -m, --vocdir DIR                directory containing the yamls defining the\n                                  variant of concerns\n  -a, --amplicons YAML            list of query amplicons, from mutbamscan\n  -j, --json JSON                 results generated by mutbamscan\n  -y, --yaml YAML                 results generated by mutbamscan\n  -o, --output CSV                name of (pretty) csv file to save the table\n                                  into\n  -e, --escape / -E, --no-escape  use escape characters for newlines\n  -x, --excel                     use a semi-colon ';' instead of a comma ','\n                                  in the comma-separated-files as required by\n                                  Microsoft Excel\n  --batchname SEP                 separator used to split samplename/batchname\n                                  in separate column\n  -q, --quiet                     Run quietly: do not print the table\n  --help                          Show this message and exit.\n\n  You need to open the CSV in a spreadsheet that understands linebreaks\n```\n\n```console\n$ cojac cooc-tabmut --help\nUsage: cojac cooc-tabmut [OPTIONS]\n\n  Make a table suitable for further processing: RStudio, etc\n\nOptions:\n  -j, --json JSON   results generated by mutbamscan\n  -y, --yaml YAML   results generated by mutbamscan\n  --batchname SEP   separator used to split samplename/batchname in separate\n                    column\n  -o, --output CSV  name of (raw) csv file to save the table into\n  -l, --lines       Line-oriented table alternative\n  -x, --excel       use a semi-colon ';' instead of a comma ',' in the comma-\n                    separated-files as required by Microsoft Excel\n  -m, --multiindex  Use multi-level indexing (amplicons and counts categories)\n  -q, --quiet       Run quietly: do not print the table\n  --help            Show this message and exit.\n```\n\n```console\n$ cojac cooc-curate --help\nUsage: cojac cooc-curate [OPTIONS] [VOC]...\n\n  Helps determining specific mutations and cooccurrences by querying\n  covSPECTRUM\n\nOptions:\n  -u, --url URL               url to use when querying covspectrum (e.g.\n                              https://lapis.cov-spectrum.org/open/v2,\n                              https://lapis.cov-spectrum.org/gisaid/v2, etc.)\n  --lintype FIELD             switch the lineage field queried on covspectrum\n                              (e.g. nextcladePangoLineage: as determined with\n                              nextclade, pangoLineage: as provided by upstream\n                              sequence repository)\n  -a, --amplicons YAML        use the YAML file generated by mutbamscan to\n                              query amplicons instead of mutations\n  -m, --mutations             always do mutations (even if amplicons YAML\n                              provided)\n  -H, --high FLOAT            Fraction above which a mutation must be found\n                              among seeked lineages\n  -l, --low FLOAT             Fraction under which a mutation must be found\n                              among other lineages\n  --collapse / --no-collapse  combine counts of all sublineages together and\n                              consider a single value that corresponds to a\n                              lineages family (e.g.: count all B.1.612.2*\n                              together). This is especially useful for\n                              assessing signatures of old variants that have\n                              branched out by now.\n  --colour / --no-colour      use coloured output\n  --debug / --no-debug        show API calls details (urls and arguments)\n  -h, --help                  Show this message and exit.\n\n  This tool queries LAPIS, see https://lapis-docs.readthedocs.io/en/latest/\n```\n\n```console\n$ cojac phe2cojac  --help\nUsage: cojac phe2cojac [OPTIONS] IN_YAML\n\n convert phe-genomics to cojac's dedicated variant YAML format\n\nOptions:\n  -s, --shortname SHRT  shortname to use (otherwise auto-build one based on\n                        phe-genomic's unique id)\n  -y, --yaml OUT_YAML   write cojac variant to a YAML file instead of printing\n                        (if empty, build filename from shortname)\n  --help                Show this message and exit.\n```\n\n```console\n$ cojac sig-generate --help\nUsage: cojac sig-generate [OPTIONS]\n\n  Helps generating a list of mutations frequently found in a variant by\n  querying covSPECTRUM\n\nOptions:\n  -u, --url URL           url to use when querying covspectrum (e.g.\n                          https://lapis.cov-spectrum.org/open/v2,\n                          https://lapis.cov-spectrum.org/gisaid/v2, etc.)\n  --lintype FIELD         switch the lineage field queried on covspectrum\n                          (e.g. nextcladePangoLineage: as determined with\n                          nextclade, pangoLineage: as provided by upstream\n                          sequence repository)\n  --var, --variant PANGO  Pangolineage of the root variant to list  [required]\n  --extras LAPIS          Additional LAPIS query arguments passed as a YAML\n                          flow, e.g.: '{dateFrom: \"2022-02-01\", variantQuery:\n                          \"[6-of: S:147E, S:152R, S:157L, S:210V, S:257S,\n                          S:339H, S:446S, S:460K, ORF1a:1221L, ORF1a:1640S,\n                          ORF1a:4060S]\"}'. For more information about LAPIS,\n                          see: https://lapis-docs.readthedocs.io/en/latest/\n  -f, --minfreq FREQ      Minimum frequency for inclusion in list\n  -d, --mindelfreq FREQ   Use a different minimum frequency for deletions\n                          (useful early on when there are few sequences and\n                          some of those were produced by pipelines that don't\n                          handle deletions)\n  -s, --minseqs NUM       Minimum number of sequence supporting for inclusion\n                          in list\n  --covariants TSV        import from a covariants.org TSV file instead of\n                          covSpectrum. (See: https://github.com/hodcroftlab/co\n                          variants/blob/master/defining_mutations/)\n  --debug / --no-debug    show 'extra' query content, show API details (urls\n                          and arguments)\n  -h, --help              Show this message and exit.\n\n  This tool queries LAPIS, see https://lapis-docs.readthedocs.io/en/latest/\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cbg-ethz/cojac/master/README.md",
      "technique": "header_analysis"
    }
  ]
}