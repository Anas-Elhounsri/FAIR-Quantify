{
  "application_domain": [
    {
      "confidence": 34.35,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HannesStark/protein-localization"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-09-12T09:58:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-22T02:11:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Using Transformer protein embeddings with a linear attention mechanism to make SOTA de-novo predictions for the subcellular location of proteins :microscope:"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8559069823418304,
      "result": {
        "original_header": "<a href=\"https://www.youtube.com/watch?v=6gDy8-yOJqY\">Video</a> | <a href=\"https://www.biorxiv.org/content/10.1101/2021.04.25.441334v1\">Paper</a>",
        "type": "Text_excerpt",
        "value": "Repository for the paper [Light Attention Predicts Protein Location from the Language of Life](https://www.biorxiv.org/content/10.1101/2021.04.25.441334v1). The method beats the previous SOTA by **8 percentage points** on the standard subcellular localization dataset and our new benchmark. \nIf you have questions or any trouble running some of the code, don't hesitate to open an issue or ask me via hannes.staerk@gmail.com. I am happy to hear from you! \n"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HannesStark/protein-localization/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/legacy_scripts/embedding_similarity.ipynb"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/legacy_scripts/embedding_similarity.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/legacy_scripts/umap_plots.ipynb"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/legacy_scripts/umap_plots.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HannesStark/protein-localization/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HannesStark/protein-localization"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Protein Subcellular Localization Prediction :dna:"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/.architecture.png"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/.accuracy.png"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Setup environment",
        "parent_header": [
          "Protein Subcellular Localization Prediction :dna:",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "If you are using conda, you can install all dependencies like this. Otherwise, look at the setup below.\n\n```\nconda env create -f environment.yml\nconda activate bio\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup",
        "parent_header": [
          "Protein Subcellular Localization Prediction :dna:"
        ],
        "type": "Text_excerpt",
        "value": "Python 3 dependencies:\n\n- pytorch\n- biopython\n- h5py\n- matplotlib\n- seaborn\n- pandas\n- pyaml\n- torchvision\n- sklearn\n\nYou can use the conda environment file to install all of the above dependencies. Create the conda environment `bio` by\nrunning:\n\n```\nconda env create -f environment.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Reproduce exact results",
        "parent_header": [
          "Protein Subcellular Localization Prediction :dna:",
          "Setup"
        ],
        "type": "Text_excerpt",
        "value": "You can use the respective configuration file to reproduce the results of the methods in the paper. The 10 randomly\ngenerated seeds with which we trained 10 models of each method to get standard errors are:\n\n```\n[921, 969, 309, 559, 303, 451, 279, 624, 657, 702]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Performance",
        "parent_header": [
          "Protein Subcellular Localization Prediction :dna:",
          "Setup"
        ],
        "type": "Text_excerpt",
        "value": "The DeepLoc [data set](http://www.cbs.dtu.dk/services/DeepLoc/data.php) has 10 different subcellular localizations that\nneed to be classified. Meanwhile, `setHard` is a new Dataset with less redundancy and harder targets. The dataset\ndetails can be found in our paper.\n\n![accuracyplot](https://github.com/HannesStark/protein-localization/blob/master/.accuracy.png)\n\nAccuracy on the DeepLoc test set:\n\n| Method | Accuracy |\n| --- | --- |\n| Ours | **86.01%** |\n| DeepLoc | 77.97% |\n| iLoc-Euk | 68.20% |\n| YLoc | 61.22% |\n| LocTree2 | 61.20% |\n| SherLoc2 | 58.15% |\n\n(Ours evaluated accross 10 different randomly chosen seeds)\n(Numbers taken from the DeepLoc [paper](https://academic.oup.com/bioinformatics/article/33/21/3387/3931857))\n"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9727497911256687,
      "result": {
        "original_header": "<a href=\"https://www.youtube.com/watch?v=6gDy8-yOJqY\">Video</a> | <a href=\"https://www.biorxiv.org/content/10.1101/2021.04.25.441334v1\">Paper</a>",
        "type": "Text_excerpt",
        "value": "If you have questions or any trouble running some of the code, don't hesitate to open an issue or ask me via hannes.staerk@gmail.com. I am happy to hear from you! \n"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HannesStark/protein-localization/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "attention, attention-mechanism, bio-embeddings, machine-learning, protein-localization, pytorch"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 Hannes St\u00e4rk\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "protein-localization"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "HannesStark"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 821612,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 284130,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:32:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 54
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Protein Subcellular Localization Prediction :dna:"
        ],
        "type": "Text_excerpt",
        "value": "Either train your own model or use the weights I provide in this repository and do only inference. We also provide\na webserver https://embed.protein.properties/ where you can just upload sequences and get the localization predictions (and more).\n"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Get Protein Embeddings",
        "parent_header": [
          "Protein Subcellular Localization Prediction :dna:",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The architecture works on embeddings that are generated from single sequences of amino acids without additional\nevolutionary information as in profile embeddings.\nJust [download](https://drive.google.com/drive/folders/1Qsu8uvPuWr7e0sOdjBAsWQW7KvHcSo1y?usp=sharing)\nthe embeddings and place them in `data_files`.\n\nAlternatively you can generate the embedding files from ``.fasta`` files using the\n[bio-embeddings](https://pypi.org/project/bio-embeddings/) library. For using the embeddings here, just replace the path\nin the corresponding config file, such as `configs/light_attention.yaml` to point to your embeddings and remapping file\nand set the parameter `key_format: hash`.\n"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.1 Training",
        "parent_header": [
          "Protein Subcellular Localization Prediction :dna:",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Make sure that you have\nthe [embeddings](https://drive.google.com/drive/folders/1Qsu8uvPuWr7e0sOdjBAsWQW7KvHcSo1y?usp=sharing)\nplaced in the files specified in `configs/light_attention.yaml` as described in step 1. Then start training:\n\n```\npython train.py --config configs/light_attention.yaml\ntensorboard --logdir=runs --port=6006\n```\n\nYou can now go to `localhost:6006` in your browser and watch the model train.\n"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.2 Inference",
        "parent_header": [
          "Protein Subcellular Localization Prediction :dna:",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Either use your own tranined weights that were saved in the `runs` directory, or download\nthe [trained_model_weights](https://drive.google.com/drive/folders/13Ci6OmUaqUBpjWnG5nHLhg8HdJfbPi0p?usp=sharing)\nand place the folder in the repository root. Running the following command will use the weights to generate the\npredictions for the protein embeddings specified in `configs/inference.yaml` (setHARD currently).\n\n```\npython inference.py --config configs/inference.yaml\n```\n\nThe predictions are then saved in the checkpoint in `trained_model_weights` as `predictions.txt` in the same order as\nyour input.\n"
      },
      "source": "https://raw.githubusercontent.com/HannesStark/protein-localization/master/README.md",
      "technique": "header_analysis"
    }
  ]
}