{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HKU-BAL/Clair3"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-30T11:02:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-29T17:09:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling"
        ],
        "type": "Text_excerpt",
        "value": "Clair3 is a germline small variant caller for long-reads. Clair3 makes the best of two major method categories: pileup calling handles most variant candidates with speed, and full-alignment tackles complicated candidates to maximize precision and recall. Clair3 runs fast and has superior performance, especially at lower coverage. Clair3 is simple and modular for easy deployment and integration.\n\nClair3 is the 3<sup>rd</sup> generation of [Clair](https://github.com/HKU-BAL/Clair) (the 2<sup>nd</sup>) and [Clairvoyante](https://github.com/aquaskyline/Clairvoyante) (the 1<sup>st</sup>).\n\nClair3 is published at [Nature Computational Science](https://rdcu.be/c1TPa), and available as a preprint at [bioRxiv](https://www.biorxiv.org/content/10.1101/2021.12.29.474431v2).\n\nFor somatic variant calling using paired tumor/normal samples, please try [ClairS](https://github.com/HKU-BAL/ClairS).\n\nFor somatic variant calling using tumor-only samples, please try [ClairS-TO](https://github.com/HKU-BAL/ClairS-TO).\n\n----\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Folder Structure and Submodule Descriptions",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling"
        ],
        "type": "Text_excerpt",
        "value": "Submodules in __`clair3/`__ are for variant calling and model training. Submodules in __`preprocess`__ are for data preparation.\n\n*For all the submodules listed below, you can use `-h` or `--help` for available options.*\n\n`clair3/` | Note: submodules under this folder are pypy incompatible, please run using python\n---: | ---\n`CallVariants` | Call variants using a trained model and tensors of candidate variants.\n`CallVarBam` | Call variants using a trained model and a BAM file.\n`Train` | Training a model using the `RectifiedAdam` optimizer. We also use the `Lookahead` optimizer to adjust the `RectifiedAdam` parameters dynamically. The initial learning rate is `1e-3` with `0.1` learning rate warm-up. Input a binary containing tensors created by `Tensor2Bin`. \n\n\n\n`preprocess/` | Note: submodules under this folder is Pypy compatible unless specified.\n---: | ---\n`CheckEnvs`| Check the environment and  validity of the input variables, preprocess the BED input if necessary, `--chunk_size` sets the chuck size to be processed per parallel job. \n`CreateTensorPileup`| Generate variant candidate tensors in pileup format for training or calling. \n`CreateTensorFullAlignment`| Generate variant candidate tensors in phased full-alignment format for training or calling. \n`GetTruth`| Extract the variants from a truth VCF. Input: VCF; Reference FASTA if the VCF contains asterisks in ALT field.\n`MergeVcf` | Merge pileup and full-alignment VCF/GVCF.\n`RealignReads` | Reads local realignment for Illumina platform.\n`SelectCandidates`| Select pileup candidates for full-alignment calling.\n`SelectHetSnp` | Select heterozygous SNP candidates for whatshap phasing.\n`SelectQual` | Select a quality cutoff using the pileup calling results. Variants below the cutoff are included in phasing and full-alignment calling. \n`SortVcf` | Sort VCF file. \n`SplitExtendBed` | Split BED file regions according to the contig names and extend bed region by 33bp by default for variant calling. \n`UnifyRepresentation` | Representation unification between candidate sites and true variants. \n`MergeBin` | Combine tensor binaries into a single file. \n`CreateTrainingTensor` | Create tensor binaries for pileup or full-alignment training. \n`Tensor2Bin` | Combine the variant and non-variant tensors and convert them to a binary, using `blosc:lz4hc` meta-compressor, the overall training memory is 10~15G (pypy incompatible). \n\n----\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9365753977122661,
      "result": {
        "original_header": "Latest Updates",
        "type": "Text_excerpt",
        "value": "*v1.0.10 (Jul 28, 2024)* : 1. Fixed an out of range bug when outputing GVCF for non-human genome ([#317](https://github.com/HKU-BAL/Clair3/issues/317)). 2. Improve the calling speed when working with targeted amplicon data, Use `\u2014chunk_num=-1` to call variant without splitting genome into chunks ([#306](https://github.com/HKU-BAL/Clair3/issues/306), contributor [Elliot Hallmark](https://github.com/Permafacture)). 3. Updated LongPhase to version 1.7.3 ([#321](https://github.com/HKU-BAL/Clair3/issues/321)). \n*v1.0.7 (Apr 7, 2024)* : 1. Added memory guards and test function on full-alignment C implement ([#286](https://github.com/HKU-BAL/Clair3/pull/286) by @[Chris Wright](https://github.com/cjw85)). 2. Increased the maximum mpileup read coverage to 2^20 to adapt high-coverage amplicon data ([#292](https://github.com/HKU-BAL/Clair3/pull/292) by @[Devon Ryan](https://github.com/dpryan79)). 3. Updated LongPhase to version 1.6. \n*v1.0.6 (Mar 15, 2024)* : 1. Fixed stack overflow issue when the read coverage is excessively high ([#282](https://github.com/HKU-BAL/Clair3/issues/282) by @[Chris Wright](https://github.com/cjw85), [#265](https://github.com/HKU-BAL/Clair3/issues/265) by @[ymcki](https://github.com/ymcki)). 2. Added reference caching for CRAM input ([#278](https://github.com/HKU-BAL/Clair3/pull/278) by @[Alex Leonard](https://github.com/ASLeonard), [#180](https://github.com/HKU-BAL/Clair3/issues/180) by @[bartcharbon](https://github.com/bartcharbon) and @[SamStudio8](https://github.com/SamStudio8)). 3. Fixed a bug that outputs RefCall calls when no variant is called by full-alignment model ([#271](https://github.com/HKU-BAL/Clair3/issues/271)). 4. Fixed a bug that variants below min coverage were still being called ([#262](https://github.com/HKU-BAL/Clair3/issues/262)). 5. Set `--min_snp_af` and `--min_indel_af` to 0.0 when `--vcf_fn` is provided ([#261](https://github.com/HKU-BAL/Clair3/issues/261)). \n*v1.0.5 (Dec 20, 2023)* : 1. Fixed the issue showing wrong multi-allelic AF when read coverage is excessively high ([#241](https://github.com/HKU-BAL/Clair3/issues/241)). 2. Added `--base_err` and `--gq_bin_size` options that can resolve the problem of having excessive GT ./. in GVCF output ([#220](https://github.com/HKU-BAL/Clair3/issues/220)). 3. Modified logs ([#231](https://github.com/HKU-BAL/Clair3/issues/231), [#225](https://github.com/HKU-BAL/Clair3/issues/225)) \n*v1.0.3 (Jun 20, 2023)* : 1. Colon ':' is now allowed in reference sequence name ([#203](https://github.com/HKU-BAL/Clair3/issues/203)). \n*v1.0.1 (Apr 24, 2023)* : 1. Bumped up \"WhatsHap\" version to 1.7, `whatshap haplotag` step is ~15% faster.([#193](https://github.com/HKU-BAL/Clair3/issues/193)). 2. Fixed PL issue when alternative base is N ([#191](https://github.com/HKU-BAL/Clair3/issues/191), contributor @[\nDennis Hendriksen](https://github.com/dennishendriksen)). \n*v1.0.0 (Mar 6, 2023)* : 1. Added Clair3 version in VCF header([#141](https://github.com/HKU-BAL/Clair3/issues/141)). 2. Fixed the Numpy int issue using the latest numpy version ([#165](https://github.com/HKU-BAL/Clair3/issues/165), contributor @[Aaron Tyler](https://github.com/AJTDaedalus)). 3. Coverted all IUPAC bases to 'N' in both VCF and GVCF output, use `--keep_iupac_bases` to keep the IUPAC bases ([#153](https://github.com/HKU-BAL/Clair3/issues/153)). 4. Added `--use_longphase_for_intermediate_phasing`, `--use_whatshap_for_intermediate_phasing`, `--use_longphase_for_final_output_phasing`, `--use_whatshap_for_final_output_phasing`, `--use_whatshap_for_final_output_haplotagging` options to support intermediate phasing and final VCF phasing(using WhatsHap or LongPhase) ([#164](https://github.com/HKU-BAL/Clair3/issues/164)). 5. Fixed shell issue in docker host user mode ([#175](https://github.com/HKU-BAL/Clair3/issues/175)). \n*v0.1-r12 (Aug 19)* : 1. CRAM input is supported ([#117](https://github.com/HKU-BAL/Clair3/issues/117)). 2. Bumped up dependencies' version to \"Python 3.9\" ([#96](https://github.com/HKU-BAL/Clair3/issues/96)), \"TensorFlow 2.8\", \"Samtools 1.15.1\", \"WhatsHap 1.4\". 3. VCF DP tag now shows raw coverage for both pileup and full-alignment calls (before r12, sub-sampled coverage was shown for pileup calls if average DP > 144, ([#128](https://github.com/HKU-BAL/Clair3/issues/128)). 4. Fixed Illumina representation unification out-of-range error in training ([#110](https://github.com/HKU-BAL/Clair3/issues/110)). 5. Updated package longphase from v1.0 to v1.3 (on Sept 27th, included in all installation options labeled v0.1-r12). \n*v0.1-r11 minor 2 (Apr 16)* : 1. fixed a bug in GVCF output that occasionally caused missing of non-variant positions at chunk boundaries. 2. fixed a bug in GVCF output that consumes too much memory for caching, now GVCF output mode takes amount of memory similar to VCF ([#88](https://github.com/HKU-BAL/Clair3/issues/88)). \n*v0.1-r11 (Apr 4)* : 1. Variant calling ~2.5x faster than `v0.1-r10` tested with ONT Q20 data, with feature generation in both pileup and full-alignment now implemented in C (co-contributors @[cjw85](https://github.com/cjw85), @[ftostevin-ont](https://github.com/ftostevin-ont), @[EpiSlim](https://github.com/EpiSlim)). 2. Added the lightning-fast [longphase](https://github.com/twolinin/longphase) as an option for phasing. Enable using `longphase` with option `--longphase_for_phasing`. New option disabled by default to align with the default behavior of the previous versions, but we recommend enable when calling human variants with \u226520x long-reads). 3. Added `--min_coverage` and `--min_mq` options ([#83](https://github.com/HKU-BAL/Clair3/issues/83)). 4. Added `--min_contig_size` option to skip calling variants in short contigs when using genome assembly as input. 4. Reads haplotagging after phasing before full-alignment calling now integrated into full-alignment calling to avoid generating an intermediate BAM file. 5. Supported .`csi` BAM index for large references ([#90](https://github.com/HKU-BAL/Clair3/issues/90)). For more speedup details, please check [Notes on r11](docs/v0.1_r11_speedup.md). \n*v0.1-r10 (Jan 13, 2022)* : 1. Added a new ONT Guppy5 model  (`r941_prom_sup_g5014`). Click [here](docs/guppy5_20220113.md) for some benchmarking results. This `sup` model is also applicable to reads called using the `hac` and `fast` mode. The old `r941_prom_sup_g506` model that was fine-tuned from the Guppy3,4 model is obsoleted. 2. Added `--var_pct_phasing` option to control the percentage of top ranked heterozygous pile-up variants used for WhatsHap phasing. \n*v0.1-r7 (Oct 18)* : 1. Increased `var_pct_full` in ONT mode from 0.3 to 0.7. Indel F1-score increased ~0.2%, but took ~30 minutes longer to finish calling a ~50x ONT dataset. 2. Expand fall through to next most likely variant if network prediction has insufficient read coverage ([#53](https://github.com/HKU-BAL/Clair3/pull/53) commit 09a7d185, contributor @[ftostevin-ont](https://github.com/ftostevin-ont)), accuracy improved on complex Indels. 3. Streamized pileup and full-alignment training workflows. Reduce diskspace demand in model training ([#55](https://github.com/HKU-BAL/Clair3/pull/55) commit 09a7d185, contributor @[ftostevin-ont](https://github.com/ftostevin-ont)). 4.  Added `mini_epochs` option in Train.py, performance  slightly improved in training a model for ONT Q20 data using mini-epochs([#60](https://github.com/HKU-BAL/Clair3/pull/60), contributor @[ftostevin-ont](https://github.com/ftostevin-ont)). 5. Massively reduced disk space demand when outputting GVCF. Now compressing GVCF intermediate files with lz4, five times smaller with little speed penalty. 6. Added `--remove_intermediate_dir`to remove intermediate files as soon as no longer needed ([#48](https://github.com/HKU-BAL/Clair3/issues/48)). 7. Renamed ONT pre-trained models with [Medaka](https://github.com/nanoporetech/medaka/blob/master/medaka/options.py#L22)'s naming convention. 8. Fixed training data spilling over to validation data ([#57](https://github.com/HKU-BAL/Clair3/issues/57)). \n*ONT-provided Models (Sep 23)*: ONT also provides Clair3 models for specific chemistries and basecallers through [Rerio](https://github.com/nanoporetech/rerio). \n*v0.1-r6 (Sep 4)* : 1. Reduced memory footprint at the `SortVcf` stage([#45](https://github.com/HKU-BAL/Clair3/issues/45)). 2. Reduced `ulimit -n` (number of files simultaneously opened) requirement ([#45](https://github.com/HKU-BAL/Clair3/issues/45), [#47](https://github.com/HKU-BAL/Clair3/issues/47)). 3. Added Clair3-Illumina package in bioconda([#42](https://github.com/HKU-BAL/Clair3/issues/42)). \n*v0.1-r5 (July 19)* : 1. Modified data generator in model training to avoid memory exhaustion and unexpected segmentation fault by Tensorflow (contributor @[ftostevin-ont](https://github.com/ftostevin-ont) ). 2. Simplified dockerfile workflow to reuse container caching (contributor @[amblina](https://github.com/amblina)). 3. Fixed ALT output for reference calls (contributor @[wdecoster](https://github.com/wdecoster)). 4. Fixed a bug in multi-allelic AF computation (AF of [ACGT]Del variants was wrong before r5). 5. Added AD tag to the GVCF output. 6. Added the `--call_snp_only` option to only call SNP only ([#40](https://github.com/HKU-BAL/Clair3/issues/40)). 7. Added pileup and full-alignment output validity check to avoid workflow crashing ([#32](https://github.com/HKU-BAL/Clair3/issues/32), [#38](https://github.com/HKU-BAL/Clair3/issues/38)). \n*v0.1-r3 (June 9)* : 1. Added `ulimit -u` (max user processes) check (lowers the `THREADS` if the resource is insufficient) and automatic retries on failed jobs ([#20](https://github.com/HKU-BAL/Clair3/issues/20), [#23](https://github.com/HKU-BAL/Clair3/issues/23), [#24](https://github.com/HKU-BAL/Clair3/issues/24)). 2. Added an ONT Guppy5 model to the images (`ont_guppy5`). Click [here](docs/guppy5.md) for more benchmarks on the Guppy5 model and data. \n*v0.1-r1 (May 18)* : 1. Support relative path in Conda, but Docker and Singularity still require absolute path ([#5](https://github.com/HKU-BAL/Clair3/issues/5)). 2. Fix `taskset` CPU-core visibility and provide a Singularity image ([#6](https://github.com/HKU-BAL/Clair3/issues/6)). \n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9334754480954526,
      "result": {
        "original_header": "HKU-provided Models",
        "type": "Text_excerpt",
        "value": "|           Model name           |  Platform   | Option (`-p/--platform`) |                       Training samples                       | Included in the bioconda package | Included in the docker image |   Date   |\n| :----------------------------: | :---------: | :----------------------------------------------------------: | -------------------------------- | :--------------------------: | :------: | :------: |\n|      r941_prom_sup_g5014       |     ONT r9.4.1     |     `ont`     |                    HG002,4,5 (Guppy5_sup)                    | Yes                              |             Yes              | 20220112 |\n|    r941_prom_hac_g360+g422     |     ONT r9.4.1    | `ont`    |                         HG001,2,4,5                          | Yes                              |             Yes              | 20210517 |\n|  r941_prom_hac_g360+g422_1235  |     ONT r9.4.1    | `ont`    |                         HG001,2,3,5                          |                                  |                              | 20210517 |\n|       r941_prom_hac_g238       |     ONT r9.4.1    | `ont`    |                         HG001,2,3,4                          |                                  |             Yes              | 20210627 |\n| ~~r941_prom_sup_g506~~ |     ONT r9.4.1    |         | Base model: HG001,2,4,5 (Guppy3,4) <br>Fine-tuning data: HG002 (Guppy5_sup) |                                  |                              | 20210609 |\n|              hifi_revio              | PacBio HiFi Revio | `hifi` |                         HG002,4                         | Yes                              |             Yes              | 20230522 |\n|             hifi_sequel2             | PacBio HiFi Sequel II | `hifi` |                         HG001,2,4,5                          | Yes                              |             Yes              | 20210517 |\n| ilmn | Illumina | `ilmn` | HG001,2,4,5 | Yes | Yes | 20210517 |\n \n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9751321317711061,
      "result": {
        "original_header": "ONT-provided Models",
        "type": "Text_excerpt",
        "value": "ONT provides models for some latest or specific chemistries and basecallers (including both Guppy and Dorado) through [Rerio](https://github.com/nanoporetech/rerio). These models are tested and supported by the ONT developers. \n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9877158548804285,
      "result": {
        "original_header": "Dealing with amplicon data",
        "type": "Text_excerpt",
        "value": "If you are dealing with amplicon data with excessively high depth coverage, please try setting `--var_pct_full`, and `--ref_pct_full` to `1`. If you are dealing with human data, set `--var_pct_phasing` to `1`. If you are dealing with non-human data, enable the `--no_phasing_for_fa` option. Please refer to discussion [#160](https://github.com/HKU-BAL/Clair3/issues/160#issuecomment-1396743261), and [#240](https://github.com/HKU-BAL/Clair3/issues/240) for more details. \n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9759277155178483,
      "result": {
        "original_header": "`SwitchZygosityBasedOnSVCalls` module",
        "type": "Text_excerpt",
        "value": "The module takes a Clair3 VCF and a Sniffle2 VCF as inputs. It switches the zygosity from homozygous to heterozygous of a Clair3 called SNP that matches the following two criteria: 1) AF<=0.7, and 2) the flanking 16bp of the SNP is inside one or more SV deletions given in the Sniffle2 VCF. The usage is as follows.\n```shell\npypy3 ${CLAIR3_PATH}/clair3.py SwitchZygosityBasedOnSVCalls\n      --bam_fn input.bam\n      --clair3_vcf_input clair3_input.vcf.gz\n      --sv_vcf_input sniffle2.vcf.gz\n      --vcf_output output.vcf\n      --threads 8\n```\n \nThis postprocessing script was inspired by Philipp Rescheneder from ONT. There are heterozygous SNPs that overlap large deletion, and some of these SNPs are clinically significant. Clair3 doesn't call structural variants and might incorrectly output these SNPs as homozygous SNP but with relatively low AF and QUAL. Given a Sniffle2 SV VCF, the script relabels these SNPs as heterozygous, and adds two INFO tags: 1) SVBASEDHET flag, and 2) ORG_CLAIR3_SCORE that shows the original Clair3 QUAL score. The new QUAL of an SNP that switched zygosity will be the top QUAL of the deletions that overlapped the SNP.  \n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9214286271337333,
      "result": {
        "original_header": "Training Data",
        "type": "Text_excerpt",
        "value": "Clair3 trained both its pileup and full-alignment models using four GIAB samples (HG001, HG002, HG004 and HG005), excluded HG003. On ONT, we also trained a model using HG001, 2, 3, and 5, excluded HG004. All models were trained with chr20 excluded (including only chr1-19, 21, 22).  \nPlease find more details about the training data and links at [Training Data](docs/training_data.md). \n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8435448725404727,
      "result": {
        "original_header": "VCF/GVCF Output Formats",
        "type": "Text_excerpt",
        "value": "Clair3 supports both VCF and GVCF output formats. Clair3 uses VCF version 4.2 specifications. Specifically, Clair3 adds a `P` INFO tag to the results called using a pileup model, and a `F` INFO tag to the results called using a full-alignment model. \nClair3 outputs a GATK-compatible GVCF format that passes GATK's `ValidateVariants` module. Different from DeepVariant that uses `<*>` to represent any possible alternative allele, Clair3 uses `<NON_REF>`, the same as GATK. \nClair3 GVCF files can be merged with GLNexus. A GLNexus caller based configuration file is available [Download](http://www.bio8.cs.hku.hk/clair3_trio/config/clair3.yml).\n \n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HKU-BAL/Clair3/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HKU-BAL/Clair3/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/colab/clair3_illumina_quick_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/colab/clair3_illumina_quick_demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/colab/clair3_pacbio_hifi_quick_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/colab/clair3_pacbio_hifi_quick_demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/colab/clair3_ont_quick_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/colab/clair3_ont_quick_demo.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HKU-BAL/Clair3"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/run_clair3.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/scripts/clair3_ilmn_quick_demo.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/scripts/clair3_c_impl.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/scripts/clair3_hifi_quick_demo.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/scripts/clair3_ont_quick_demo.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/scripts/clair3.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 1.  Docker pre-built image",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "A pre-built docker image is available [here](https://hub.docker.com/r/hkubal/clair3). With it you can run Clair3 using a single command.\n\n**Caution**: Absolute path is needed for both `INPUT_DIR` and `OUTPUT_DIR`. \n\n```bash\nINPUT_DIR=\"[YOUR_INPUT_FOLDER]\"        # e.g. /home/user1/input (absolute path needed)\nOUTPUT_DIR=\"[YOUR_OUTPUT_FOLDER]\"      # e.g. /home/user1/output (absolute path needed)\nTHREADS=\"[MAXIMUM_THREADS]\"            # e.g. 8\nMODEL_NAME=\"[YOUR_MODEL_NAME]\"         # e.g. r941_prom_hac_g360+g422\n\ndocker run -it \\\n  -v ${INPUT_DIR}:${INPUT_DIR} \\\n  -v ${OUTPUT_DIR}:${OUTPUT_DIR} \\\n  hkubal/clair3:latest \\\n  /opt/bin/run_clair3.sh \\\n  --bam_fn=${INPUT_DIR}/input.bam \\    ## change your bam file name here\n  --ref_fn=${INPUT_DIR}/ref.fa \\       ## change your reference file name here\n  --threads=${THREADS} \\               ## maximum threads to be used\n  --platform=\"ont\" \\                   ## options: {ont,hifi,ilmn}\n  --model_path=\"/opt/models/${MODEL_NAME}\" \\\n  --output=${OUTPUT_DIR}               ## absolute output path prefix \n```\n\nCheck [Usage](#Usage) for more options.\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 2. Singularity",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "**Caution**: Absolute path is needed for both `INPUT_DIR` and `OUTPUT_DIR`. \n\n```bash\nINPUT_DIR=\"[YOUR_INPUT_FOLDER]\"        # e.g. /home/user1/input (absolute path needed)\nOUTPUT_DIR=\"[YOUR_OUTPUT_FOLDER]\"      # e.g. /home/user1/output (absolute path needed)\nTHREADS=\"[MAXIMUM_THREADS]\"            # e.g. 8\nMODEL_NAME=\"[YOUR_MODEL_NAME]\"         # e.g. r941_prom_hac_g360+g422\n\nconda config --add channels defaults\nconda create -n singularity-env -c conda-forge singularity -y\nconda activate singularity-env\n\n# singularity pull docker pre-built image\nsingularity pull docker://hkubal/clair3:latest\n\n# run clair3 like this afterward\nsingularity exec \\\n  -B ${INPUT_DIR},${OUTPUT_DIR} \\\n  clair3_latest.sif \\\n  /opt/bin/run_clair3.sh \\\n  --bam_fn=${INPUT_DIR}/input.bam \\    ## change your bam file name here\n  --ref_fn=${INPUT_DIR}/ref.fa \\       ## change your reference file name here\n  --threads=${THREADS} \\               ## maximum threads to be used\n  --platform=\"ont\" \\                   ## options: {ont,hifi,ilmn}\n  --model_path=\"/opt/models/${MODEL_NAME}\" \\\n  --output=${OUTPUT_DIR}               ## absolute output path prefix\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 3.  Bioconda",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "*For using Clair3 with Illumina data, install [clair3-illumina](https://anaconda.org/bioconda/clair3-illumina) package in bioconda channel instead.*\n\n```bash\n# make sure channels are added in conda\nconda config --add channels defaults\nconda config --add channels bioconda\nconda config --add channels conda-forge\n\n# create conda environment named \"clair3\"\n# replace clair3 by clair3-illumina for using illumina data\nconda create -n clair3 -c bioconda clair3 python=3.9.0 -y\nconda activate clair3\n\n# run clair3 like this afterward\nMODEL_NAME=\"[YOUR_MODEL_NAME]\"         # e.g. r941_prom_hac_g360+g422\n\nrun_clair3.sh \\\n  --bam_fn=input.bam \\                 ## change your bam file name here\n  --ref_fn=ref.fa \\                    ## change your reference file name here\n  --threads=${THREADS} \\               ## maximum threads to be used\n  --platform=\"ont\" \\                   ## options: {ont,hifi,ilmn}\n  --model_path=\"${CONDA_PREFIX}/bin/models/${MODEL_NAME}\" \\ \n  --output=${OUTPUT_DIR}               ## output path prefix \n```\n\nCheck [Usage](#Usage) for more options. [Pre-trained models](#pre-trained-models) are already included in the bioconda package.\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 4. Build an anaconda virtual environment",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "**Anaconda install**:\n\nPlease install anaconda using the official [guide](https://docs.anaconda.com/anaconda/install) or using the commands below:\n\n```bash\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nchmod +x ./Miniconda3-latest-Linux-x86_64.sh \n./Miniconda3-latest-Linux-x86_64.sh\n```\n\n**Install Clair3 using anaconda step by step:**\n\n*For using Clair3 on Illumina data, additional installation steps after the following steps are mandatory. Please follow this [guide](https://github.com/HKU-BAL/Clair3/blob/main/docs/quick_demo/illumina_quick_demo.md#step-2-install-boost-graph-library-for-illumina-realignment-process) for the additional steps.*\n\n```bash\nINPUT_DIR=\"[YOUR_INPUT_FOLDER]\"        # e.g. ./input\nOUTPUT_DIR=\"[YOUR_OUTPUT_FOLDER]\"      # e.g. ./output\nTHREADS=\"[MAXIMUM_THREADS]\"            # e.g. 8\n\n# create and activate an environment named clair3\nconda create -n clair3 python=3.9.0 -y\nsource activate clair3\n\n# install pypy and packages in the environemnt\nconda install -c conda-forge pypy3.6 -y\npypy3 -m ensurepip\npypy3 -m pip install mpmath==1.2.1\n\n# install python packages in environment\nconda install -c conda-forge tensorflow==2.8.0 -y\nconda install -c conda-forge pytables -y\nconda install -c anaconda pigz cffi==1.14.4 -y\nconda install -c conda-forge parallel=20191122 zstd -y\nconda install -c conda-forge -c bioconda samtools=1.15.1 -y\nconda install -c conda-forge -c bioconda whatshap=1.7 -y\nconda install -c conda-forge xz zlib bzip2 automake curl -y\n# tensorflow-addons is required in training\npip install tensorflow-addons\n\n# clone Clair3\ngit clone https://github.com/HKU-BAL/Clair3.git\ncd Clair3\n\n# compile samtools, longphase and cffi library for c implement\n# after building, longphase binary is in `Clair3` folder\nsource activate clair3 && make PREFIX=${CONDA_PREFIX}\n\n# download pre-trained models\nmkdir models\nwget http://www.bio8.cs.hku.hk/clair3/clair3_models/clair3_models.tar.gz \ntar -zxvf clair3_models.tar.gz -C ./models\n\n# run clair3\nMODEL_NAME=\"[YOUR_MODEL_NAME]\"         # e.g. r941_prom_hac_g360+g422\n./run_clair3.sh \\\n  --bam_fn=${INPUT_DIR}/input.bam \\    ## change your bam file name here\n  --ref_fn=${INPUT_DIR}/ref.fa \\       ## change your reference file name here\n  --threads=${THREADS} \\               ## maximum threads to be used\n  --platform=\"ont\" \\                   ## options: {ont,hifi,ilmn}\n  --model_path=`pwd`\"/models/${MODEL_NAME}\" \\\n  --output=${OUTPUT_DIR}               ## output path prefix\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 5. Docker Dockerfile",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This is the same as option 1 except that you are building a docker image yourself. Please refer to option 1 for usage. \n\n```bash\n# clone Clair3\ngit clone https://github.com/hku-bal/Clair3.git\ncd Clair3\n\n# build a docker image named hkubal/clair3:latest\n# might require docker authentication to build docker image \ndocker build -f ./Dockerfile -t hkubal/clair3:latest .\n\n# run clair3 docker image like option 1\ndocker run -it hkubal/clair3:latest /opt/bin/run_clair3.sh --help\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9605111173660565,
      "result": {
        "original_header": "Latest Updates",
        "type": "Text_excerpt",
        "value": "*v1.0.10 (Jul 28, 2024)* : 1. Fixed an out of range bug when outputing GVCF for non-human genome ([#317](https://github.com/HKU-BAL/Clair3/issues/317)). 2. Improve the calling speed when working with targeted amplicon data, Use `\u2014chunk_num=-1` to call variant without splitting genome into chunks ([#306](https://github.com/HKU-BAL/Clair3/issues/306), contributor [Elliot Hallmark](https://github.com/Permafacture)). 3. Updated LongPhase to version 1.7.3 ([#321](https://github.com/HKU-BAL/Clair3/issues/321)). \n*v1.0.4 (Jul 11, 2023)* : 1. Added showing command line and reference source in output VCF header. 2. Fixed a bug in showing the AF tag for 1/2 genotypes. 3. Added AD tag output. \n*v1.0.1 (Apr 24, 2023)* : 1. Bumped up \"WhatsHap\" version to 1.7, `whatshap haplotag` step is ~15% faster.([#193](https://github.com/HKU-BAL/Clair3/issues/193)). 2. Fixed PL issue when alternative base is N ([#191](https://github.com/HKU-BAL/Clair3/issues/191), contributor @[\nDennis Hendriksen](https://github.com/dennishendriksen)). \n*v1.0.0 (Mar 6, 2023)* : 1. Added Clair3 version in VCF header([#141](https://github.com/HKU-BAL/Clair3/issues/141)). 2. Fixed the Numpy int issue using the latest numpy version ([#165](https://github.com/HKU-BAL/Clair3/issues/165), contributor @[Aaron Tyler](https://github.com/AJTDaedalus)). 3. Coverted all IUPAC bases to 'N' in both VCF and GVCF output, use `--keep_iupac_bases` to keep the IUPAC bases ([#153](https://github.com/HKU-BAL/Clair3/issues/153)). 4. Added `--use_longphase_for_intermediate_phasing`, `--use_whatshap_for_intermediate_phasing`, `--use_longphase_for_final_output_phasing`, `--use_whatshap_for_final_output_phasing`, `--use_whatshap_for_final_output_haplotagging` options to support intermediate phasing and final VCF phasing(using WhatsHap or LongPhase) ([#164](https://github.com/HKU-BAL/Clair3/issues/164)). 5. Fixed shell issue in docker host user mode ([#175](https://github.com/HKU-BAL/Clair3/issues/175)). \n*v0.1-r12 (Aug 19)* : 1. CRAM input is supported ([#117](https://github.com/HKU-BAL/Clair3/issues/117)). 2. Bumped up dependencies' version to \"Python 3.9\" ([#96](https://github.com/HKU-BAL/Clair3/issues/96)), \"TensorFlow 2.8\", \"Samtools 1.15.1\", \"WhatsHap 1.4\". 3. VCF DP tag now shows raw coverage for both pileup and full-alignment calls (before r12, sub-sampled coverage was shown for pileup calls if average DP > 144, ([#128](https://github.com/HKU-BAL/Clair3/issues/128)). 4. Fixed Illumina representation unification out-of-range error in training ([#110](https://github.com/HKU-BAL/Clair3/issues/110)). 5. Updated package longphase from v1.0 to v1.3 (on Sept 27th, included in all installation options labeled v0.1-r12). \n*v0.1-r9 (Dec 1)* : Added the `--enable_long_indel` option to output indel variant calls >50bp ([#64](https://github.com/HKU-BAL/Clair3/issues/64)), Click [here](https://github.com/HKU-BAL/Clair3/blob/main/docs/indel_gt50_performance.md) to see more benchmarking results. \n*v0.1-r8 (Nov 11)* : 1. Added the `--enable_phasing` option that adds a step after Clair3 calling to output variants phased by WhatsHap ([#63](https://github.com/HKU-BAL/Clair3/issues/63)). 2. Fixed unexpected program termination on successful runs. \n*v0.1-r1 (May 18)* : 1. Support relative path in Conda, but Docker and Singularity still require absolute path ([#5](https://github.com/HKU-BAL/Clair3/issues/5)). 2. Fix `taskset` CPU-core visibility and provide a Singularity image ([#6](https://github.com/HKU-BAL/Clair3/issues/6)). \n*v0.1 (May 17, 2021)*: Initial release. \n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9918234736517005,
      "result": {
        "original_header": "HKU-provided Models",
        "type": "Text_excerpt",
        "value": "Download models from [here](http://www.bio8.cs.hku.hk/clair3/clair3_models/) or click on the links below. \nIn a docker installation, models are in `/opt/models/`. In a bioconda installation, models are in `{CONDA_PREFIX}/bin/models/`. \n|           Model name           |  Platform   | Option (`-p/--platform`) |                       Training samples                       | Included in the bioconda package | Included in the docker image |   Date   |\n| :----------------------------: | :---------: | :----------------------------------------------------------: | -------------------------------- | :--------------------------: | :------: | :------: |\n|      r941_prom_sup_g5014       |     ONT r9.4.1     |     `ont`     |                    HG002,4,5 (Guppy5_sup)                    | Yes                              |             Yes              | 20220112 |\n|    r941_prom_hac_g360+g422     |     ONT r9.4.1    | `ont`    |                         HG001,2,4,5                          | Yes                              |             Yes              | 20210517 |\n|  r941_prom_hac_g360+g422_1235  |     ONT r9.4.1    | `ont`    |                         HG001,2,3,5                          |                                  |                              | 20210517 |\n|       r941_prom_hac_g238       |     ONT r9.4.1    | `ont`    |                         HG001,2,3,4                          |                                  |             Yes              | 20210627 |\n| ~~r941_prom_sup_g506~~ |     ONT r9.4.1    |         | Base model: HG001,2,4,5 (Guppy3,4) <br>Fine-tuning data: HG002 (Guppy5_sup) |                                  |                              | 20210609 |\n|              hifi_revio              | PacBio HiFi Revio | `hifi` |                         HG002,4                         | Yes                              |             Yes              | 20230522 |\n|             hifi_sequel2             | PacBio HiFi Sequel II | `hifi` |                         HG001,2,4,5                          | Yes                              |             Yes              | 20210517 |\n| ilmn | Illumina | `ilmn` | HG001,2,4,5 | Yes | Yes | 20210517 |\n \n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8536846006313863,
      "result": {
        "original_header": "VCF/GVCF Output Formats",
        "type": "Text_excerpt",
        "value": "Clair3 GVCF files can be merged with GLNexus. A GLNexus caller based configuration file is available [Download](http://www.bio8.cs.hku.hk/clair3_trio/config/clair3.yml).\n \n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "computational-biology, deep-learning, genomics, illumina, long-reads, nanopore, ont-data, ont-models, pacbio, variant-calling, variant-detection"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright 2021 The University of Hong Kong, Department of Computer Science\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\n   may be used to endorse or promote products derived from this software without\n   specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/docs/images/clair3_logo.png"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Clair3"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "HKU-BAL"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 807671,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 293551,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 161864,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 75684,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 74978,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2048,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2042,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2024-07-28T15:03:42Z",
        "date_published": "2024-07-28T15:04:30Z",
        "description": "1. Fixed an out of range bug when outputing GVCF for non-human genome ([#317](https://github.com/HKU-BAL/Clair3/issues/317). \r\n2. Improve the calling speed when working with targeted amplicon data, Use `\u2014chunk_num=-1` to call variant without splitting genome into chunks ([#306](https://github.com/HKU-BAL/Clair3/issues/306), contributor [Elliot Hallmark](https://github.com/Permafacture)). \r\n3. Updated LongPhase to version 1.7.3 ([#321](https://github.com/HKU-BAL/Clair3/issues/321).",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v1.0.10",
        "name": "v1.0.10",
        "release_id": 167522339,
        "tag": "v1.0.10",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v1.0.10",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/167522339",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/167522339",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v1.0.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2024-05-15T10:12:30Z",
        "date_published": "2024-05-15T10:14:42Z",
        "description": "1. Fixed an issue in VCF header(https://github.com/HKU-BAL/Clair3/pull/305 by @[Monica Palafox Roberts](https://github.com/mproberts99)). \r\n2. Updated DP FORMAT description in the header.",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v1.0.9",
        "name": "v1.0.9",
        "release_id": 155847448,
        "tag": "v1.0.9",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v1.0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/155847448",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/155847448",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v1.0.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2024-04-30T04:12:11Z",
        "date_published": "2024-04-30T04:31:02Z",
        "description": "1. Fixed an issue in VCF output that caused occasional quality score small differences compared to GVCF output.\r\n2. Updated LongPhase to version 1.7.",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v1.0.8",
        "name": "v1.0.8",
        "release_id": 153400030,
        "tag": "v1.0.8",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v1.0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/153400030",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/153400030",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v1.0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2024-04-07T10:22:41Z",
        "date_published": "2024-04-30T03:58:56Z",
        "description": "1. Added memory guards and test functions to the full-alignment calling C implementation ([#286](https://github.com/HKU-BAL/Clair3/pull/286) by @[Chris Wright](https://github.com/cjw85)). \r\n2. Increased the maximum mpileup read coverage to 2^20 to accomodate excessively high-coverage amplicon data ([#292](https://github.com/HKUBAL/Clair3/pull/292) by @[Devon Ryan](https://github.com/dpryan79)). \r\n3. Updated LongPhase to version 1.6.",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v1.0.7",
        "name": "v1.0.7",
        "release_id": 153398249,
        "tag": "v1.0.7",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v1.0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/153398249",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/153398249",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v1.0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2024-03-15T13:49:00Z",
        "date_published": "2024-03-15T16:30:33Z",
        "description": "1. Fixed stack overflow issue when the read coverage is excessively high ([#282](https://github.com/HKU-BAL/Clair3/issues/282) by @[Chris Wright](https://github.com/cjw85), [#265](https://github.com/HKU-BAL/Clair3/issues/265) by @[ymcki](https://github.com/ymcki)). \r\n2. Added reference caching for CRAM input ([#278](https://github.com/HKU-BAL/Clair3/pull/278) by @[Alex Leonard](https://github.com/ASLeonard), [#180](https://github.com/HKU-BAL/Clair3/issues/180) by @[bartcharbon](https://github.com/bartcharbon) and @[SamStudio8](https://github.com/SamStudio8)).  \r\n3. Fixed a bug that outputs RefCall calls when no variant is called by full-alignment model ([#271](https://github.com/HKU-BAL/Clair3/issues/271)). \r\n4. Fixed a bug that variants below min coverage were still being called ([#262](https://github.com/HKU-BAL/Clair3/issues/262)).\r\n5.  Set --min_snp_af and --min_indel_af to 0.0 when --vcf_fn is provided (https://github.com/HKU-BAL/Clair3/issues/261).",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v1.0.6",
        "name": "v1.0.6",
        "release_id": 146814202,
        "tag": "v1.0.6",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v1.0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/146814202",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/146814202",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v1.0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2023-12-20T09:02:29Z",
        "date_published": "2023-12-21T04:20:30Z",
        "description": "1. Fixed the issue showing wrong multi-allelic AF when read coverage is excessively high ([#241](https://github.com/HKU-BAL/Clair3/issues/241)). \r\n2. Added `--base_err` and `--gq_bin_size` options that can resolve the problem of having excessive GT ./. in GVCF output ([#220](https://github.com/HKU-BAL/Clair3/issues/220)). \r\n3. Modified logs ([#231](https://github.com/HKU-BAL/Clair3/issues/231), [#225](https://github.com/HKU-BAL/Clair3/issues/225))",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v1.0.5",
        "name": "v1.0.5",
        "release_id": 134720206,
        "tag": "v1.0.5",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v1.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/134720206",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/134720206",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v1.0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2023-07-16T12:39:15Z",
        "date_published": "2023-07-16T13:31:16Z",
        "description": "1. Added showing command line and reference source in output VCF header. \r\n2. Fixed a bug in showing the AF tag for 1/2 genotypes. \r\n3. Added AD tag output.",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v1.0.4",
        "name": "v1.0.4",
        "release_id": 112410467,
        "tag": "v1.0.4",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v1.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/112410467",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/112410467",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v1.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2023-06-20T09:37:16Z",
        "date_published": "2023-06-20T09:39:51Z",
        "description": "Fixed a bug when the contig name contains colons ([#203](https://github.com/HKU-BAL/Clair3/issues/203))",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v1.0.3",
        "name": "v1.0.3",
        "release_id": 109197556,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/109197556",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/109197556",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2023-05-22T06:19:14Z",
        "date_published": "2023-05-22T08:30:14Z",
        "description": "1. Added PacBio HiFi Revio model, check [Pre-trained model](https://github.com/HKU-BAL/Clair3#pre-trained-models) for model usage. \r\n2. Fixed a bug that halts the pipeline when there exists too few variant candidates (https://github.com/HKU-BAL/Clair3/issues/198).",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v1.0.2",
        "name": "v1.0.2",
        "release_id": 103775608,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/103775608",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/103775608",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2023-04-26T16:17:22Z",
        "date_published": "2023-04-26T16:18:37Z",
        "description": "1. Bumped up \"WhatsHap\" version to 1.7, the `whatshap haplotag` step is ~15% faster. ([#193](https://github.com/HKU-BAL/Clair3/issues/193)). \r\n2. Fixed PL tag output error when ALT is N ([#191](https://github.com/HKU-BAL/Clair3/issues/191), contributor [@Dennis Hendriksen](https://github.com/dennishendriksen)).",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v1.0.1",
        "name": "v1.0.1",
        "release_id": 100981849,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/100981849",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/100981849",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2023-03-06T14:51:58Z",
        "date_published": "2023-03-06T14:52:34Z",
        "description": "1. Added Clair3 version number to the VCF header ([#141](https://github.com/HKU-BAL/Clair3/issues/141)). \r\n2. Fixed the numpy.int issue when using newer numpy version ([#165](https://github.com/HKU-BAL/Clair3/issues/165), PR contributor @[Aaron Tyler](https://github.com/AJTDaedalus)). \r\n3. The new version converts all IUPAC bases to 'N' in both VCF and GVCF output, use `--keep_iupac_bases` to keep the IUPAC bases ([#153](https://github.com/HKU-BAL/Clair3/issues/153)). \r\n4. Added options `--use_longphase_for_intermediate_phasing`, `--use_whatshap_for_final_output_phasing`, `--use_longphase_for_final_output_phasing`, `--use_whatshap_for_final_output_haplotagging` to disambiguate intermediate phasing and final VCF phasing either using WhatsHap or LongPhase, old options are still usable ([#164](https://github.com/HKU-BAL/Clair3/issues/164)). \r\n5. Fixed \"shell script interpreter selection problem\" when using Clair3 as a host user within a Docker container ([#175](https://github.com/HKU-BAL/Clair3/issues/175)).\r\n",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 94645875,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/94645875",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/94645875",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2022-08-20T03:17:00Z",
        "date_published": "2022-08-20T03:21:48Z",
        "description": "1. CRAM input is supported (https://github.com/HKU-BAL/Clair3/issues/117). \r\n2. Bumped up dependencies' version to \"Python 3.9\" (https://github.com/HKU-BAL/Clair3/issues/96), \"TensorFlow 2.8\", \"Samtools 1.15.1\", \"WhatsHap 1.4\". \r\n3. VCF DP tag now shows raw coverage for both pileup and full-alignment calls (before r12, sub-sampled coverage was shown for pileup calls if average DP > 144, (https://github.com/HKU-BAL/Clair3/issues/128). \r\n4. Fixed Illumina representation unification out-of-range error in training (https://github.com/HKU-BAL/Clair3/issues/110).",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r12",
        "name": "v0.1-r12",
        "release_id": 74898019,
        "tag": "v0.1-r12",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r12",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/74898019",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/74898019",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2022-05-19T13:15:32Z",
        "date_published": "2022-06-13T03:28:23Z",
        "description": "Users, please ignore this pre-release. This pre-release is for Zenodo to pull and archive Clair3 for the first time.",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r11.1",
        "name": "v0.1-r11.1",
        "release_id": 69262535,
        "tag": "v0.1-r11.1",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r11.1",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/69262535",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/69262535",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r11.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2022-04-04T10:08:41Z",
        "date_published": "2022-04-04T10:16:43Z",
        "description": "1. Variant calling ~2.5x faster than `v0.1-r10` tested with ONT Q20 data, with feature generation in both pileup and full-alignment now implemented in C (co-contributors @[cjw85](https://github.com/cjw85), @[ftostevin-ont](https://github.com/ftostevin-ont), @[EpiSlim](https://github.com/EpiSlim)). \r\n2. Added the lightning-fast [longphase](https://github.com/twolinin/longphase) as an option for phasing. Enable using `longphase` with option `--longphase_for_phasing`. New option is disabled by default to align with the default behavior of the previous versions, but we recommend enable when calling human variants with \u226520x long-reads). \r\n3. Added `--min_coverage` and `--min_mq` options ([#83](https://github.com/HKU-BAL/Clair3/issues/83)). \r\n4. Added `--min_contig_size` option to skip calling variants in short contigs when using genome assembly as input. \r\n5. Reads haplotagging after phasing before full-alignment calling now integrated into full-alignment calling to avoid generating an intermediate BAM file. \r\n6. Supported .`csi` BAM index for large references ([#90](https://github.com/HKU-BAL/Clair3/issues/90)). For more speedup details, please check [Notes on r11](docs/v0.1_r11_speedup.md).\r\n\r\n**v0.1-r11 minor 2 patches are included in all installation options**",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r11",
        "name": "v0.1-r11",
        "release_id": 63507181,
        "tag": "v0.1-r11",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r11",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/63507181",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/63507181",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2022-01-13T12:31:22Z",
        "date_published": "2022-01-13T12:43:49Z",
        "description": "1. Added a new ONT Guppy5 model  (`r941_prom_sup_g5014`). Click [here](docs/guppy5_20220113.md) for some benchmarking results. This `sup` model is also applicable to reads called using the `hac` and `fast` mode. The old `r941_prom_sup_g506` model that was fine-tuned from the Guppy3,4 model is obsoleted. \r\n\r\n2. Added `--var_pct_phasing` option to control the percentage of top ranked heterozygous pile-up variants used for WhatsHap phasing.",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r10",
        "name": "v0.1-r10",
        "release_id": 57011059,
        "tag": "v0.1-r10",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r10",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/57011059",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/57011059",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2021-12-01T09:51:36Z",
        "date_published": "2021-12-01T12:05:40Z",
        "description": "Added the `--enable_long_indel` option to output indel variant calls >50bp ([#64](https://github.com/HKU-BAL/Clair3/issues/64)), Click [here](https://github.com/HKU-BAL/Clair3/blob/main/docs/indel_gt50_performance.md) to see more benchmarking results.",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r9",
        "name": "v0.1-r9",
        "release_id": 54402780,
        "tag": "v0.1-r9",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r9",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/54402780",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/54402780",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2021-11-11T13:35:53Z",
        "date_published": "2021-11-11T13:59:23Z",
        "description": "1.  Added the `--enable_phasing` option that adds a step after Clair3 calling to output variants phased by Whatshap ([#63](https://github.com/HKU-BAL/Clair3/issues/63)). \r\n2.  Fixed unexpected program termination on successful runs.",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r8",
        "name": "v0.1-r8",
        "release_id": 53170358,
        "tag": "v0.1-r8",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r8",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/53170358",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/53170358",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2021-10-19T09:08:02Z",
        "date_published": "2021-10-19T09:10:17Z",
        "description": "1. Increased `var_pct_full` in ONT mode from 0.3 to 0.7. Indel F1-score increased ~0.2%, but took ~30 minutes longer to finish calling a ~50x ONT dataset. \r\n2. Expand fall through to next most likely variant if network prediction has insufficient read coverage ([#53](https://github.com/HKU-BAL/Clair3/pull/53) commit 09a7d185, contributor @[ftostevin-ont](https://github.com/ftostevin-ont)), accuracy improved on complex Indels. \r\n3. Streamized pileup and full-alignment training workflows. Reduce diskspace demand in model training ([#55](https://github.com/HKU-BAL/Clair3/pull/55) commit 09a7d185, contributor @[ftostevin-ont](https://github.com/ftostevin-ont)). \r\n4.  Added `mini_epochs` option in Train.py, performance  slightly improved in training a model for ONT Q20 data using mini-epochs([#60](https://github.com/HKU-BAL/Clair3/pull/60), contributor @[ftostevin-ont](https://github.com/ftostevin-ont)). \r\n5. Massively reduced disk space demand when outputting GVCF. Now compressing GVCF intermediate files with lz4, five times smaller with little speed penalty. \r\n6. Added `--remove_intermediate_dir`to remove intermediate files as soon as no longer needed ([#48](https://github.com/HKU-BAL/Clair3/issues/48)). \r\n7. Renamed ONT pre-trained models with [Medaka](https://github.com/nanoporetech/medaka/blob/master/medaka/options.py#L22)'s naming convention. \r\n8. Fixed training data spilling over to validation data ([#57](https://github.com/HKU-BAL/Clair3/issues/57)).",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r7",
        "name": "v0.1-r7",
        "release_id": 51601459,
        "tag": "v0.1-r7",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r7",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/51601459",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/51601459",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2021-09-04T13:41:35Z",
        "date_published": "2021-09-04T13:47:58Z",
        "description": "1. Reduced memory footprint at the `SortVcf` stage([#45](https://github.com/HKU-BAL/Clair3/issues/45)). \r\n2. Reduced `ulimit -n` (number of files simultaneously opened) requirement ([#45](https://github.com/HKU-BAL/Clair3/issues/45), [#47](https://github.com/HKU-BAL/Clair3/issues/47)). \r\n3. Added Clair3-Illumina package in bioconda([#42](https://github.com/HKU-BAL/Clair3/issues/42))",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r6",
        "name": "v0.1-r6",
        "release_id": 49010349,
        "tag": "v0.1-r6",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r6",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/49010349",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/49010349",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2021-07-19T15:09:21Z",
        "date_published": "2021-07-19T15:11:33Z",
        "description": "1. Modified data generator in model training to avoid memory exhaustion and unexpected segmentation fault by Tensorflow (contributor @[ftostevin-ont](https://github.com/ftostevin-ont) ). \r\n2. Simplified dockerfile workflow to reuse container caching (contributor @[amblina](https://github.com/amblina)). \r\n3. Fixed ALT output for reference calls (contributor @[wdecoster](https://github.com/wdecoster)). \r\n4. Fixed a bug in multi-allelic AF computation (AF of [ACGT]Del variants was wrong before r5). \r\n5. Added AD tag to the GVCF output. \r\n6. Added the `--call_snp_only` option to only call SNP only ([#40](https://github.com/HKU-BAL/Clair3/issues/40)). \r\n7. Added pileup and full-alignment output validity check to avoid workflow crashing ([#32](https://github.com/HKU-BAL/Clair3/issues/32), [#38](https://github.com/HKU-BAL/Clair3/issues/38)).",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r5",
        "name": "v0.1-r5",
        "release_id": 46419321,
        "tag": "v0.1-r5",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r5",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/46419321",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/46419321",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2021-06-28T13:09:24Z",
        "date_published": "2021-06-28T13:44:18Z",
        "description": " 1. Install via [bioconda](https://github.com/HKU-BAL/Clair3/tree/main/colab). \r\n 2. Added an ONT Guppy2 model to the images (ont_guppy2). Click [here](https://github.com/HKU-BAL/Clair3/blob/main/docs/guppy2.md) for more benchmarking results. The results show you have to use the Guppy2 model for Guppy2 or earlier data. 3. Added [google colab notebooks](https://github.com/HKU-BAL/Clair3/tree/main/colab) for quick demo. 4. Fixed a bug then there are too few variant candidates (#28).",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r4",
        "name": "v0.1-r4",
        "release_id": 45358188,
        "tag": "v0.1-r4",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r4",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/45358188",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/45358188",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2021-06-09T13:54:05Z",
        "date_published": "2021-06-09T14:02:26Z",
        "description": "1. Added ulimit -u (max user processes) check (lowers the `THREADS` if the resource is insufficient) and automatic retries on failed jobs (#20, #23, #24). \r\n2. Added support for user-defined pileup model prefix `--pileup_model_prefix` and full-alignment model prefix `--fa_model_prefix`.\r\n3. Added contig validity check. Contigs specified in BED but not in BAM won't be used.\r\n4. Added an ONT Guppy5 model (ont_guppy5). \r\n",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r3",
        "name": "v0.1-r3",
        "release_id": 44350227,
        "tag": "v0.1-r3",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r3",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/44350227",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/44350227",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2021-05-23T15:45:39Z",
        "date_published": "2021-05-24T09:27:25Z",
        "description": "1. Fixed BED file out of range error (#12)\r\n2. Added support for both .bam.bai and .bai BAM index filename (#10).\r\n3. Added some boundary checks on inputs. \r\n4. Added version checks on required packages and utilities. \r\n5. Increased pipeline robustness.",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r2",
        "name": "v0.1-r2",
        "release_id": 43453538,
        "tag": "v0.1-r2",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r2",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/43453538",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/43453538",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2021-05-19T04:31:18Z",
        "date_published": "2021-05-19T04:37:12Z",
        "description": "1. Support relative path in Conda, but Docker and Singularity still require absolute path ([#5](https://github.com/HKU-BAL/Clair3/issues/5)). \r\n2. Fix `taskset` CPU-core visibility and provide a Singularity image ([#6](https://github.com/HKU-BAL/Clair3/issues/6)).",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1-r1",
        "name": "v0.1-r1",
        "release_id": 43188159,
        "tag": "v0.1-r1",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1-r1",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/43188159",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/43188159",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1-r1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zhengzhenxian",
          "type": "User"
        },
        "date_created": "2021-05-16T06:39:13Z",
        "date_published": "2021-05-17T02:23:20Z",
        "description": "Initial release",
        "html_url": "https://github.com/HKU-BAL/Clair3/releases/tag/v0.1",
        "release_id": 43026293,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/HKU-BAL/Clair3/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/HKU-BAL/Clair3/releases/43026293",
        "value": "https://api.github.com/repos/HKU-BAL/Clair3/releases/43026293",
        "zipball_url": "https://api.github.com/repos/HKU-BAL/Clair3/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Clair3 with Apple Silicon",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Instructions are given as an answer to issue [#149](https://github.com/HKU-BAL/Clair3/issues/149).\n\n----\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:08:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 234
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Demo",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling"
        ],
        "type": "Text_excerpt",
        "value": "*   Oxford Nanopore (ONT) data, see [ONT Quick Demo](docs/quick_demo/ont_quick_demo.md).\n*   PacBio HiFi data, see [PaBio HiFi Quick Demo](docs/quick_demo/pacbio_hifi_quick_demo.md).\n*   Illumina NGS data, see [Illumina Quick Demo](docs/quick_demo/illumina_quick_demo.md).\n\n**Run Clair3 ONT quick demo**: \n\n- **(Option 1) using Google Colab notebook:**\n\n   [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/HKU-BAL/Clair3/blob/main/colab/clair3_ont_quick_demo.ipynb)\n\n- **(Option 2) using pre-built docker image:**\n\n```bash\ncd ${HOME}\nwget \"http://www.bio8.cs.hku.hk/clair3/demo/clair3_ont_quick_demo.sh\"\nchmod +x clair3_ont_quick_demo.sh\n./clair3_ont_quick_demo.sh\n```\n\nCheck the results using `less ${HOME}/clair3_ont_quickDemo/output/merge_output.vcf.gz`\n\n----\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "General Usage",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "**Caution**:  Use `=value` for optional parameters, e.g. `--bed_fn=fn.bed` instead of `--bed_fn fn.bed`.\n\n```bash\n./run_clair3.sh \\\n  --bam_fn=${BAM} \\\n  --ref_fn=${REF} \\\n  --threads=${THREADS} \\  \t\t     \n  --platform=\"ont\" \\               ## options: {ont,hifi,ilmn}\n  --model_path=${MODEL_PREFIX} \\   ## absolute model path prefix\n  --output=${OUTPUT_DIR}           ## absolute output path prefix\n## pileup output file: ${OUTPUT_DIR}/pileup.vcf.gz\n## full-alignment output file: ${OUTPUT_DIR}/full_alignment.vcf.gz\n## Clair3 final output file: ${OUTPUT_DIR}/merge_output.vcf.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Options",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "**Required parameters:**\n\n```bash\n  -b, --bam_fn=FILE             BAM file input. The input file must be samtools indexed.\n  -f, --ref_fn=FILE             FASTA reference file input. The input file must be samtools indexed.\n  -m, --model_path=STR          The folder path containing a Clair3 model (requiring six files in the folder, including pileup.data-00000-of-00002, pileup.data-00001-of-00002 pileup.index, full_alignment.data-00000-of-00002, full_alignment.data-00001-of-00002  and full_alignment.index).\n  -t, --threads=INT             Max threads to be used. The full genome will be divided into small chunks for parallel processing. Each chunk will use 4 threads. The chunks being processed simultaneously is ceil($threads/4)*3. 3 is the overloading factor.\n  -p, --platform=STR            Select the sequencing platform of the input. Possible options: {ont,hifi,ilmn}.\n  -o, --output=PATH             VCF/GVCF output directory.\n```\n\n**Other parameters:**\n\n **Caution**:  Use `=value` for optional parameters, e.g., `--bed_fn=fn.bed` instead of `--bed_fn fn.bed`\n\n```bash\n      --bed_fn=FILE             Call variants only in the provided bed regions.\n      --vcf_fn=FILE             Candidate sites VCF file input, variants will only be called at the sites in the VCF file if provided.\n      --ctg_name=STR            The name of the sequence to be processed.\n      --sample_name=STR         Define the sample name to be shown in the VCF file.\n      --qual=INT                If set, variants with >$qual will be marked PASS, or LowQual otherwise.\n      --samtools=STR            Path of samtools, samtools version >= 1.10 is required.\n      --python=STR              Path of python, python3 >= 3.6 is required.\n      --pypy=STR                Path of pypy3, pypy3 >= 3.6 is required.\n      --parallel=STR            Path of parallel, parallel >= 20191122 is required.\n      --whatshap=STR            Path of whatshap, whatshap >= 1.0 is required.\n      --longphase=STR           Path of longphase, longphase >= 1.0 is required.\n      --chunk_size=INT          The size of each chuck for parallel processing, default: 5Mbp.\n      --pileup_only             Use the pileup model only when calling, default: disable.\n      --print_ref_calls         Show reference calls (0/0) in vcf file, default: disable.\n      --include_all_ctgs        Call variants on all contigs, otherwise call in chr{1..22,X,Y} and {1..22,X,Y}, default: disable.\n      --gvcf                    Enable GVCF output, default: disable.\n      --use_whatshap_for_intermediate_phasing\n                                Phase high-quality heterozygous variants using whatshap for full-alignment model calling, default: enable.\n      --use_longphase_for_intermediate_phasing\n                                Phase high-quality heterozygous variants using longphase for full-alignment model calling, default: disable.\n      --use_whatshap_for_final_output_phasing\n                                Phase the output variants using whatshap, default: disable.\n      --use_longphase_for_final_output_phasing\n                                Phase the output variants using longphase, default: disable.\n      --use_whatshap_for_final_output_haplotagging\n                                Haplotag input BAM using output phased variants using whatshap, default: disable.\n      --enable_phasing          Output phased variants using whatshap, default: disable.\n      --longphase_for_phasing   Use longphase for phasing, default: enable.\n      --disable_c_impl          Disable C implement with cffi for pileup and full-alignment create tensor, default: enable.\n      --remove_intermediate_dir Remove intermediate directory, including intermediate phased BAM, pileup and full-alignment results. default: disable.\n      --snp_min_af=FLOAT        Minimum SNP AF required for a candidate variant. Lowering the value might increase a bit of sensitivity in trade of speed and accuracy, default: ont:0.08,hifi:0.08,ilmn:0.08.\n      --indel_min_af=FLOAT      Minimum INDEL AF required for a candidate variant. Lowering the value might increase a bit of sensitivity in trade of speed and accuracy, default: ont:0.15,hifi:0.08,ilmn:0.08.\n      --var_pct_full=FLOAT      EXPERIMENTAL: Specify an expected percentage of low quality 0/1 and 1/1 variants called in the pileup mode for full-alignment mode calling, default: 0.3.\n      --ref_pct_full=FLOAT      EXPERIMENTAL: Specify an expected percentage of low quality 0/0 variants called in the pileup mode for full-alignment mode calling, default: 0.3 for ilmn and hifi, 0.1 for ont.\n      --var_pct_phasing=FLOAT   EXPERIMENTAL: Specify an expected percentage of high quality 0/1 variants used in WhatsHap phasing, default: 0.8 for ont guppy5 and 0.7 for other platforms.\n      --pileup_model_prefix=STR EXPERIMENTAL: Model prefix in pileup calling, including $prefix.data-00000-of-00002, $prefix.data-00001-of-00002 $prefix.index. default: pileup.\n      --fa_model_prefix=STR     EXPERIMENTAL: Model prefix in full-alignment calling, including $prefix.data-00000-of-00002, $prefix.data-00001-of-00002 $prefix.index, default: full_alignment.\n      --min_mq=INT              EXPERIMENTAL: If set, reads with mapping quality with <$min_mq are filtered, default: 5.\n      --min_coverage=INT        EXPERIMENTAL: Minimum coverage required to call a variant, default: 2.\n      --min_contig_size=INT     EXPERIMENTAL: If set, contigs with contig size<$min_contig_size are filtered, default: 0.\n      --fast_mode               EXPERIMENTAL: Skip variant candidates with AF <= 0.15, default: disable.\n      --haploid_precise         EXPERIMENTAL: Enable haploid calling mode. Only 1/1 is considered as a variant, default: disable.\n      --haploid_sensitive       EXPERIMENTAL: Enable haploid calling mode. 0/1 and 1/1 are considered as a variant, default: disable.\n      --no_phasing_for_fa       EXPERIMENTAL: Call variants without whatshap phasing in full alignment calling, default: disable.\n      --call_snp_only           EXPERIMENTAL: Call candidates pass SNP minimum AF only, ignore Indel candidates, default: disable.\n      --enable_long_indel       EXPERIMENTAL: Call long Indel variants(>50 bp), default: disable.\n      --keep_iupac_bases        EXPERIMENTAL: Keep IUPAC reference and alternate bases, default: convert all IUPAC bases to N.\n      --base_err=FLOAT          EXPERIMENTAL: Estimated base error rate when enabling gvcf option, default: 0.001.\n      --gq_bin_size=INT         EXPERIMENTAL: Default gq bin size for merge non-variant block when enabling gvcf option, default: 5.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Call variants in a chromosome",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling",
          "Usage",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nCONTIGS_LIST=\"[YOUR_CONTIGS_LIST]\"     # e.g \"chr21\" or \"chr21,chr22\"\nINPUT_DIR=\"[YOUR_INPUT_FOLDER]\"        # e.g. /home/user1/input  (absolute path needed)\nOUTPUT_DIR=\"[YOUR_OUTPUT_FOLDER]\"      # e.g. /home/user1/output (absolute path needed)\nTHREADS=\"[MAXIMUM_THREADS]\"            # e.g. 8\nMODEL_NAME=\"[YOUR_MODEL_NAME]\"         # e.g. r941_prom_hac_g360+g422\n\ndocker run -it \\\n  -v ${INPUT_DIR}:${INPUT_DIR} \\\n  -v ${OUTPUT_DIR}:${OUTPUT_DIR} \\\n  hkubal/clair3:latest \\\n  /opt/bin/run_clair3.sh \\\n  --bam_fn=${INPUT_DIR}/input.bam \\    ## change your bam file name here\n  --ref_fn=${INPUT_DIR}/ref.fa \\       ## change your reference file name here\n  --threads=${THREADS} \\               ## maximum threads to be used\n  --platform=\"ont\" \\                   ## options: {ont,hifi,ilmn}\n  --model_path=\"/opt/models/${MODEL_NAME}\" \\\n  --output=${OUTPUT_DIR} \\             ## absolute output path prefix\n  --ctg_name=${CONTIGS_LIST}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Call variants at known variant sites",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling",
          "Usage",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nKNOWN_VARIANTS_VCF=\"[YOUR_VCF_PATH]\"   # e.g. /home/user1/known_variants.vcf.gz (absolute path needed)\nINPUT_DIR=\"[YOUR_INPUT_FOLDER]\"        # e.g. /home/user1/input (absolute path needed)\nOUTPUT_DIR=\"[YOUR_OUTPUT_FOLDER]\"      # e.g. /home/user1/output (absolute path needed)\nTHREADS=\"[MAXIMUM_THREADS]\"            # e.g. 8\nMODEL_NAME=\"[YOUR_MODEL_NAME]\"         # e.g. r941_prom_hac_g360+g422\n\ndocker run -it \\\n  -v ${INPUT_DIR}:${INPUT_DIR} \\\n  -v ${OUTPUT_DIR}:${OUTPUT_DIR} \\\n  hkubal/clair3:latest \\\n  /opt/bin/run_clair3.sh \\\n  --bam_fn=${INPUT_DIR}/input.bam \\    ## change your bam file name here\n  --ref_fn=${INPUT_DIR}/ref.fa \\       ## change your reference file name here\n  --threads=${THREADS} \\               ## maximum threads to be used\n  --platform=\"ont\" \\                   ## options: {ont,hifi,ilmn}\n  --model_path=\"/opt/models/${MODEL_NAME}\" \\\n  --output=${OUTPUT_DIR} \\             ## absolute output path prefix\n  --vcf_fn=${KNOWN_VARIANTS_VCF}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Call variants at specific sites or bed regions",
        "parent_header": [
          "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling",
          "Usage",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "We highly recommended using BED file to define the regions of interest like:\n\n```shell\n# define 0-based \"ctg start end\" if at specific sites\nCONTIGS=\"[YOUR_CONTIGS_NAME]\"          # e.g. chr22\nSTART_POS=\"[YOUR_START_POS]\"           # e.g. 0\nEND_POS=\"[YOUR_END_POS]\"               # e.g 10000\necho -e \"${CONTIGS}\\t${START_POS}\\t${END_POS}\" > /home/user1/tmp.bed ## change directory accordingly\n```\n\nThen run Clair3 like this:\n\n```bash\nBED_FILE_PATH=\"[YOUR_BED_FILE]\"        # e.g. /home/user1/tmp.bed (absolute path needed)\nINPUT_DIR=\"[YOUR_INPUT_FOLDER]\"        # e.g. /home/user1/input (absolute path needed)\nOUTPUT_DIR=\"[YOUR_OUTPUT_FOLDER]\"      # e.g. /home/user1/output (absolute path needed)\nTHREADS=\"[MAXIMUM_THREADS]\"            # e.g. 8\nMODEL_NAME=\"[YOUR_MODEL_NAME]\"         # e.g. r941_prom_hac_g360+g422\n\ndocker run -it \\\n  -v ${INPUT_DIR}:${INPUT_DIR} \\\n  -v ${OUTPUT_DIR}:${OUTPUT_DIR} \\\n  hkubal/clair3:latest \\\n  /opt/bin/run_clair3.sh \\\n  --bam_fn=${INPUT_DIR}/input.bam \\    ## change your bam file name here\n  --ref_fn=${INPUT_DIR}/ref.fa \\       ## change your reference file name here\n  --threads=${THREADS} \\               ## maximum threads to be used\n  --platform=\"ont\" \\                   ## options: {ont,hifi,ilmn}\n  --model_path=\"/opt/models/${MODEL_NAME}\" \\\n  --output=${OUTPUT_DIR} \\             ## absolute output path prefix\n  --bed_fn=${BED_FILE_PATH}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HKU-BAL/Clair3/main/README.md",
      "technique": "header_analysis"
    }
  ]
}