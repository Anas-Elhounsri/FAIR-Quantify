{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/joshuawlambert/rFSA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-06-27T16:44:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-05T16:17:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An R package for finding higher order interactions, and best subsets for statistical regression models."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8363814515318071,
      "result": {
        "original_header": "rFSA",
        "type": "Text_excerpt",
        "value": "To use the R package, rFSA, the user must know how they wish to model the data (method) and how the will evaluate the fit of the models that will be checked (criterion function).  \n"
      },
      "source": "https://raw.githubusercontent.com/joshuawlambert/rFSA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.896842237654194,
      "result": {
        "original_header": "Visualizing Interactions",
        "type": "Text_excerpt",
        "value": "Visualizing interactions can be quite difficult depending on the types of variables that are involved in the relationship. The goal of *rFSA* is not to assist the user in visualizing the interaction, but the authors recognize that visual tools are often quite useful conveying the results from a statistical model.  \n"
      },
      "source": "https://raw.githubusercontent.com/joshuawlambert/rFSA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/joshuawlambert/rFSA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/joshuawlambert/rFSA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "joshuawlambert/rFSA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Overview"
      },
      "source": "https://raw.githubusercontent.com/joshuawlambert/rFSA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/joshuawlambert/Presentations/master/FS1.png"
      },
      "source": "https://raw.githubusercontent.com/joshuawlambert/rFSA/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/joshuawlambert/Presentations/master/FS2.png"
      },
      "source": "https://raw.githubusercontent.com/joshuawlambert/rFSA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/joshuawlambert/rFSA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "algorithm, fsa, interaction, models, package, parallel, r, statistical, statistics, subset"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rFSA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "joshuawlambert"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 48970,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/joshuawlambert/rFSA/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 14:21:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example (mtcars)",
        "parent_header": [
          "rFSA"
        ],
        "type": "Text_excerpt",
        "value": "In R, a commond test dataset to analyze is `mtcars`. For this example we will use multiple linear regression to fit the model and Adjusted R Squared to asses the model fit on the response(Miles Per Gallon).\n```R\ndata(mtcars)\nhelp(mtcars)\n```\nFor this example, let us assume that we have already found that the weight(wt) and the number of cylinders(cyc) in a car are statistically signficant predictors of Miles Per Gallon(mpg) for that car. And, let's say that we wish to explore two-way interactions for inclusion in or model with wt and cyc. \n\nTo do this with rFSA, we could run the following code:\n```R\ninstall.packages(rFSA) #or devtools::install_github(\"joshuawlambert/rFSA\")\nlibrary(rFSA)\ndata(mtcars)\n\nset.seed(123)\n\nfsaFit<-FSA(\n  formula=\"mpg~wt+cyl\", #Model that you wish to compare new models to. The variable to the left of the '~' will be used as the response variable in all model fits\n  data=mtcars, #specify dataset \n  fitfunc = lm, #method you wish to use \n  fixvar = c('wt','cyl'), # variables that should be fixed in every model that is considered \n  m = 2, #order of interaction or subset to consider\n  numrs = 10, #number of random starts to do \n  interactions = TRUE, #If TRUE, then the m variables under condsideration will be added to the model with a '*' between them, if FALSE then the m variables will be added to the model with a '+' between them. Basically, do you want to look for interactions or best subsets.\n  criterion = adj.r.squared, #Criterion function used to asses model fit\n  minmax = \"max\" #Should Criterion function be minimized ('min') or maximized ('max').\n  \n)\n\nfsaFit #shows results from running FSA\nprint(fsaFit) #shows results from running FSA\nsummary(fsaFit) #shows summary from all models found by FSA\nplot(fsaFit) #plots diagnostic plots for all models found by FSA\nfitted(fsaFit) #fitted values from all models found by FSA\npredict(fsaFit) #predicted values from all models found by FSA, can also add newdata command.\n```\nAs we can see from `print(fsaFit)`, from the 10 random starts there were 2 feasible solutions (FS). The two feasible included an interaction between hp*wt and drat*carb.  Each of these FS happened 9 and 1 respectively. After looking at `summary(fsaFit)` we can see that hp and wt interaction is statistically significant (p-value<0.01) and drat and carb interaction is marginally significant (p-value ~= 0.06). If we wished to find interactions that were significant, we could change `criterion=int.p.val` and `minmax = \"min\"`. Doing so, will yeild one FS: hp*wt.\n\nFollowing up these results with sufficient checks into model fit and diagnositic plots is . \n\n\nOther options for the FSA function in rFSA include: \n```R\ncores = 1  #*FOR LINUX USERS ONLY* uses parallel package to use multiple cores if available. \nquad = FALSE #should quadratic terms be considered by rFSA (example: wt^2)\ncheckfeas = NULL #Choose a starting place for FSA. If used, should be a vector same length as m from above. Example: c('wt','cyc')\nvar4int = NULL #Variable to fix in interaction. Useful when considering 3 or more way interactions.\nmin.nonmissing = 1 #Don't consider models that have less than or equal to this number of observations\nreturn.models = FALSE #should all models that are checked be returned? Useful when you want to ploc criterion history.\n```\nsee `help(FSA)' for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/joshuawlambert/rFSA/master/README.md",
      "technique": "header_analysis"
    }
  ]
}