{
  "application_domain": [
    {
      "confidence": 0.9856923152451138,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9993652724254984,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "LinkExplorer"
        ],
        "type": "Text_excerpt",
        "value": "```bibtex\n@article{10.1093/bioinformatics/btac068,\n    author = {Ott, Simon and Barbosa-Silva, Adriano and Samwald, Matthias},\n    title = \"{LinkExplorer: Predicting, explaining and exploring links in large biomedical knowledge graphs}\",\n    journal = {Bioinformatics},\n    year = {2022},\n    month = {02},\n    abstract = \"{Machine learning algorithms for link prediction can be valuable tools for hypothesis generation. However, many current algorithms are black boxes or lack good user interfaces that could facilitate insight into why predictions are made. We present LinkExplorer, a software suite for predicting, explaining and exploring links in large biomedical knowledge graphs. LinkExplorer integrates our novel, rule-based link prediction engine SAFRAN, which was recently shown to outcompete other explainable algorithms and established black box algorithms. Here, we demonstrate highly competitive evaluation results of our algorithm on multiple large biomedical knowledge graphs, and release a web interface that allows for interactive and intuitive exploration of predicted links and their explanations.A publicly hosted instance, source code and further documentation can be found at https://github.com/OpenBioLink/Explorer.Supplementary data are available at Bioinformatics online.}\",\n    issn = {1367-4803},\n    doi = {10.1093/bioinformatics/btac068},\n    url = {https://doi.org/10.1093/bioinformatics/btac068},\n    note = {btac068},\n    eprint = {https://academic.oup.com/bioinformatics/advance-article-pdf/doi/10.1093/bioinformatics/btac068/42447077/btac068.pdf},\n}\n```\n\nThis project received funding from [netidee](https://www.netidee.at/).\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Ott, Simon and Barbosa-Silva, Adriano and Samwald, Matthias",
        "doi": "10.1093/bioinformatics/btac068",
        "format": "bibtex",
        "title": "{LinkExplorer: Predicting, explaining and exploring links in large biomedical knowledge graphs}",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1093/bioinformatics/btac068",
        "value": "@article{10.1093/bioinformatics/btac068,\n    eprint = {https://academic.oup.com/bioinformatics/advance-article-pdf/doi/10.1093/bioinformatics/btac068/42447077/btac068.pdf},\n    note = {btac068},\n    url = {https://doi.org/10.1093/bioinformatics/btac068},\n    doi = {10.1093/bioinformatics/btac068},\n    issn = {1367-4803},\n    abstract = {{Machine learning algorithms for link prediction can be valuable tools for hypothesis generation. However, many current algorithms are black boxes or lack good user interfaces that could facilitate insight into why predictions are made. We present LinkExplorer, a software suite for predicting, explaining and exploring links in large biomedical knowledge graphs. LinkExplorer integrates our novel, rule-based link prediction engine SAFRAN, which was recently shown to outcompete other explainable algorithms and established black box algorithms. Here, we demonstrate highly competitive evaluation results of our algorithm on multiple large biomedical knowledge graphs, and release a web interface that allows for interactive and intuitive exploration of predicted links and their explanations.A publicly hosted instance, source code and further documentation can be found at https://github.com/OpenBioLink/Explorer.Supplementary data are available at Bioinformatics online.}},\n    month = {02},\n    year = {2022},\n    journal = {Bioinformatics},\n    title = {{LinkExplorer: Predicting, explaining and exploring links in large biomedical knowledge graphs}},\n    author = {Ott, Simon and Barbosa-Silva, Adriano and Samwald, Matthias},\n}"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/OpenBioLink/Explorer"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-07T13:11:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T03:18:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.90488737330837,
      "result": {
        "original_header": "Explanation files",
        "type": "Text_excerpt",
        "value": "You can load any explanation file produced with SAFRAN, by clicking on 'Load local explanation' and selecting the generated `.db` file. Metadata graphs of custom explanation files can be either 'None', a public graph (From the dropdown) or a custom graph (see [here](#dataset-metadata-rdf)).\n \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8935728237957447,
      "result": {
        "original_header": "LinkExplorer",
        "type": "Text_excerpt",
        "value": "+ Client (The frontend of LinkExplorer)\n+ API/Server (Hosts sqlite-Databases storing explanations of predictions in Benchmarks)\n+ Blazegraph/RDF-Database (Database for metadata (Labels, Descriptions, ...) of entities in Benchmarks) \nThe LinkExplorer application is orchestrated through *Docker Compose* and can be run following these steps: \n1. Install [Docker](https://docker.com)\n2. Clone repository\n3. Copy db-file/s to `server/db` (Db files of our graphs are hosted [here](https://zenodo.org/record/6669241))\n4. Insert RDF-graph/s containing labels, descriptions, ... into the blazegraph database (For our graphs we provide a script for that, see `/blazegraph/setup.py`, the actual graphs are hosted [here](https://github.com/OpenBioLink/Utilities/tree/main/data/dataset-metadata-graphs))\n5. Create/update index.json in `server/db`\n6. Run `docker-compose up --build` from the `Explorer` folder \nNow the LinkExplorer app is accessible via http://localhost:5000, while Blazegraph is accessible via http://localhost:9999. Explanation files (sqlite) and the `index.json` should be added to `/server/db`. **Important: The host of all SPARQL endpoints that are running in the docker blazegraph container should be `blazegraph`**, f.e. \n```text\n{\n    \"Dataset\": [\n        {\n            \"ID\": \"wn18rr\",\n            \"Endpoint\": \"http://blazegraph:9999/blazegraph/namespace/wn18rr/sparql\",\n            \"Name\": \"WN18RR\",\n            \"Version\":\t\"\",\n            \"Description\":\t\"WN18RR is a link prediction dataset created from WN18, ...\",\n\t\t\t\"Explanation\": [\n\t\t\t\t{\n\t\t\t\t\t\"ID\": \"max\",\n          ...\n```\n \n### Data \nThe central file which stores names, endpoints, explanations, ... of benchmarks hosted on the server is `index.json` which sould be stored under `/server/db`. A template can be found [here](https://github.com/OpenBioLink/Explorer/blob/main/server/db/index_template.json).  \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.972099641122915,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "Explanation files generated by SAFRAN (.db) should be stored in `/server/db` and should adhere to the following naming convention: `{ID of dataset}_{ID of explanation}.db`. F.e. the explanation file for WN18RR and Maximum aggregation should be `wn18rr_max.db` if the entry in the `index.json` is as follows\n```\n{\n    \"Dataset\": [\n        {\n            \"ID\": \"wn18rr\",\n            \"Endpoint\": \"http://explore.ai-strategies.org:9999/blazegraph/namespace/wn18rr/sparql\",\n            \"Name\": \"WN18RR\",\n            \"Version\":\t\"\",\n            \"Description\":\t\"WN18RR is a link prediction dataset created from WN18, ...\",\n            \"Explanation\": [\n              {\n                \"ID\": \"max\",\n                \"Label\": \"MAX\",\n                \"Date\": 1624529144,\n                \"Comment\": \"These results were retrieved by applying the MaxPlus (AnyBURL default) aggregation ...\",\n                \"Method\": \"max\",\n                \"RuleConfig\": \"SNAPSHOTS_AT = 1000 ...\",\n                \"ClusteringConfig\": \"\"\n              },\n        ...\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.927268924441482,
      "result": {
        "original_header": "LinkExplorer",
        "type": "Text_excerpt",
        "value": "This project received funding from [netidee](https://www.netidee.at/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9709353046996677,
      "result": {
        "original_header": "Dataset metadata (RDF)",
        "type": "Text_excerpt",
        "value": "LinkExplorer retrieves metadata of benchmark datasets from RDF graphs, which provides labels, descriptions of nodes and relations in the dataset, as well as the edges of the dataset. You can extend LinkExplorer with your own dataset metadata graph by specifying the endpoint of your RDF graph after clicking on the button 'Load custom endpoint' in the dataset loading screen (`/loader`). Further information about the schema of the RDF graphs can be found [here](https://github.com/OpenBioLink/Utilities/tree/main/data/dataset-metadata-graphs). \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9155478999620114,
      "result": {
        "type": "Text_excerpt",
        "value": "The LinkExplorer is a web-based tool for exploring nodes and relations of link prediction benchmark datasets and explanations of predictions done with the rule-based approach . \n\n  Paper preprint on bioRxiv \u2022\n  Peer reviewed paper in the journal Bioinformatics (for citations) \u2022\n  Supplementary data \u2022\n  Citation (bibTex) \n## BYOD (Bring your own data) \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/OpenBioLink/Explorer/wiki"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/OpenBioLink/Explorer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/OpenBioLink/Explorer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OpenBioLink/Explorer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LinkExplorer"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/blazegraph/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/blazegraph/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/client/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/client/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/server/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/server/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/icon.svg"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Manual execution",
        "parent_header": [
          "LinkExplorer",
          "Host LinkExplorer yourself"
        ],
        "type": "Text_excerpt",
        "value": "1. Clone repository\n\n2. Start **server** by running (Starts backend on port 3001)\n\n```bash\ncd server\nnpm install\nnpm run start\n```\n\n3. Build and host **client**\n\n```bash\ncd client\nnpm install\nnpm run build\n```\n\nand host the static build with a web server. All `/rpc` calls have to be proxied to the backend node server.\n\n**Example with https://github.com/lwsjs/local-web-server**\n\nThe following command hosts LinkExplorer client at port 5000 and proxies all `/rpc` calls to the backend.\n\n```bash\nws --port 5000 --directory build --spa index.html --rewrite '/rpc -> http://localhost:3001/rpc'\n```\n\n4. Host your own SPARQL Endpoint\n\nGenerally you can use whatever graph database you want that supports [RDF\\*/SPARQL\\*](https://github.com/blazegraph/database/wiki/Reification_Done_Right). We included a blazegraph, which can be started by running \n\n```bash\ncd server/blazegraph\npython start.py\n```\n\nFurther information can be found at https://blazegraph.com. \n\n*Optional* If you want to populate the blazegraph server with the datasets mentioned above run `python setup.py` with a running blazegraph instance.\n\n5. Open http://localhost:5000\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9703566769308498,
      "result": {
        "original_header": "Dataset metadata (RDF)",
        "type": "Text_excerpt",
        "value": "**If you want to make your RDF graph publicly available, please contact us!**\n \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9763799480856611,
      "result": {
        "original_header": "LinkExplorer",
        "type": "Text_excerpt",
        "value": "## Host LinkExplorer yourself \nThe LinkExplorer application is orchestrated through *Docker Compose* and can be run following these steps: \n1. Install [Docker](https://docker.com)\n2. Clone repository\n3. Copy db-file/s to `server/db` (Db files of our graphs are hosted [here](https://zenodo.org/record/6669241))\n4. Insert RDF-graph/s containing labels, descriptions, ... into the blazegraph database (For our graphs we provide a script for that, see `/blazegraph/setup.py`, the actual graphs are hosted [here](https://github.com/OpenBioLink/Utilities/tree/main/data/dataset-metadata-graphs))\n5. Create/update index.json in `server/db`\n6. Run `docker-compose up --build` from the `Explorer` folder \nNow the LinkExplorer app is accessible via http://localhost:5000, while Blazegraph is accessible via http://localhost:9999. Explanation files (sqlite) and the `index.json` should be added to `/server/db`. **Important: The host of all SPARQL endpoints that are running in the docker blazegraph container should be `blazegraph`**, f.e. \n```text\n{\n    \"Dataset\": [\n        {\n            \"ID\": \"wn18rr\",\n            \"Endpoint\": \"http://blazegraph:9999/blazegraph/namespace/wn18rr/sparql\",\n            \"Name\": \"WN18RR\",\n            \"Version\":\t\"\",\n            \"Description\":\t\"WN18RR is a link prediction dataset created from WN18, ...\",\n\t\t\t\"Explanation\": [\n\t\t\t\t{\n\t\t\t\t\t\"ID\": \"max\",\n          ...\n```\n \n1. Clone repository \n2. Start **server** by running (Starts backend on port 3001)\n```bash\ncd server\nnpm install\nnpm run start\n```\n3. Build and host **client**\n```bash\ncd client\nnpm install\nnpm run build\n```\n \nand host the static build with a web server. All `/rpc` calls have to be proxied to the backend node server. \n**Example with https://github.com/lwsjs/local-web-server** \nThe following command hosts LinkExplorer client at port 5000 and proxies all `/rpc` calls to the backend.\n```bash\nws --port 5000 --directory build --spa index.html --rewrite '/rpc -> http://localhost:3001/rpc'\n```\n \nGenerally you can use whatever graph database you want that supports [RDF\\*/SPARQL\\*](https://github.com/blazegraph/database/wiki/Reification_Done_Right). We included a blazegraph, which can be started by running \n```bash\ncd server/blazegraph\npython start.py\n```\n \nFurther information can be found at https://blazegraph.com.  \n*Optional* If you want to populate the blazegraph server with the datasets mentioned above run `python setup.py` with a running blazegraph instance. \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/OpenBioLink/Explorer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Matthias Samwald\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Explorer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "OpenBioLink"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 138055,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 4179,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 2133,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 1545,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 811,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:57:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "parent_header": [
          "LinkExplorer"
        ],
        "type": "Text_excerpt",
        "value": "<img align=\"left\" src=\"https://raw.githubusercontent.com/OpenBioLink/Explorer/main/icon.svg\" alt=\"LinkExplorer Logo\">\n<h1>LinkExplorer</h1>\n\nThe LinkExplorer is a web-based tool for exploring nodes and relations of link prediction benchmark datasets and explanations of predictions done with the rule-based approach [SAFRAN](https://github.com/OpenBioLink/SAFRAN).\n\nIncluded are three biomedical knowledge bases:\n\n+ OpenBioLink\n+ Hetionet\n+ Pheknowlator\n\nand two general-domain benchmarks:\n\n+ YAGO3-10\n+ WN18RR\n\n<p align=\"center\">\n  <a href=\"https://www.biorxiv.org/content/10.1101/2022.01.09.475537v2\">Paper preprint on bioRxiv</a> \u2022\n  <a href=\"https://doi.org/10.1093/bioinformatics/btac068\">Peer reviewed paper in the journal Bioinformatics (for citations)</a> \u2022\n  <a href=\"https://oup.silverchair-cdn.com/oup/backfile/Content_public/Journal/bioinformatics/PAP/10.1093_bioinformatics_btac068/1/btac068_supplementary_data.pdf?Expires=1647519170&Signature=2zpLHPo0A4I8MK9VX8DeLcSMzsJdq-rVlmFaP-J2cZtQ9jzUv6VH6TEvjOzKRayRVuEqKQcaOqc0zs4QUQ9s2qZAi1CzRqESRQH4xHgN6ZVZ~37g~I12To9JXrpdTSqVsN3FYEnfy2Yw2kOmTcpMaN8SNTyAlWjlKJz5AB2Rvj4C8ikOJjUVVTU3KembUc-UStoHkEpX-rLrd7mwT2F1xiONirQAKRRg4qPDMUJy4AWD2m9b47d7~on2MMftJkNdiTCpt7p5xr9VCxO-XgiY~vAe1ZxYCrGOmHgMYqaVeK2jc4PYM0G271QeCL7uMcBU5Fn6sS5DASs6iesj0BiDGg__&Key-Pair-Id=APKAIE5G5CRDK6RD3PGA\">Supplementary data</a> \u2022\n  <a href=\"#citation\">Citation (bibTex)</a>\n</p>\n\n## Tutorial\n\nA screenshot tutorial of the main functionalities can be found at [https://openbiolink.github.io/Explorer/](https://openbiolink.github.io/Explorer/)\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/Explorer/main/README.md",
      "technique": "header_analysis"
    }
  ]
}