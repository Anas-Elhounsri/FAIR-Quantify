{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citations",
        "parent_header": [
          "directLFQ"
        ],
        "type": "Text_excerpt",
        "value": "In the case that directLFQ is useful to you, please consider supporting us by citing the [paper](https://doi.org/10.1016/j.mcpro.2023.100581)\n\nAmmar, C., Schessner, J.P., Willems, S., Michaelis, A.C., and Mann, M. (2023). Accurate label-free quantification by directLFQ to compare unlimited numbers of proteomes.  Molecular & Cellular Proteomics, 100581.\n\n\n\n---"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MannLabs/directlfq"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to contribute\n\n## How to get started\n\nBefore anything else, please install the git hooks that run automatic scripts during each commit and merge to strip the notebooks of superfluous metadata (and avoid merge conflicts). After cloning the repository, run the following command inside it:\n```\nnbdev_install_git_hooks\n```\n\n## Did you find a bug?\n\n* Ensure the bug was not already reported by searching on GitHub under Issues.\n* If you're unable to find an open issue addressing the problem, open a new one. Be sure to include a title and clear description, as much relevant information as possible, and a code sample or an executable test case demonstrating the expected behavior that is not occurring.\n* Be sure to add the complete error messages.\n\n#### Did you write a patch that fixes a bug?\n\n* Open a new GitHub pull request with the patch.\n* Ensure that your PR includes a test that fails without your patch, and pass with it.\n* Ensure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.\n\n## PR submission guidelines\n\n* Keep each PR focused. While it's more convenient, do not combine several unrelated fixes together. Create as many branches as needing to keep each PR focused.\n* Do not mix style changes/fixes with \"functional\" changes. It's very difficult to review such PRs and it most likely get rejected.\n* Do not add/remove vertical whitespace. Preserve the original style of the file you edit as much as you can.\n* Do not turn an already submitted PR into your development playground. If after you submitted PR, you discovered that more work is needed - close the PR, do the required work and then submit a new PR. Otherwise each of your commits requires attention from maintainers of the project.\n* If, however, you submitted a PR and received a request for changes, you should proceed with commits inside that PR, so that the maintainer can see the incremental fixes and won't need to review the whole PR again. In the exception case where you realize it'll take many many commits to complete the requests, then it's probably best to close the PR, do the work and then submit it again. Use common sense where you'd choose one way over another.\n\n## Do you want to contribute to the documentation?\n\n* Docs are automatically created from the notebooks in the nbs folder.\n\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to contribute",
        "parent_header": [
          "directLFQ"
        ],
        "type": "Text_excerpt",
        "value": "If you like this software, you can give us a [star](https://github.com/MannLabs/directlfq/stargazers) to boost our visibility! All direct contributions are also welcome. \nFeel free to post a new [issue](https://github.com/MannLabs/directlfq/issues) or clone the repository and create a [pull request](https://github.com/MannLabs/directlfq/pulls) with a new branch. \nFor an even more interactive participation, check out the [discussions](https://github.com/MannLabs/directlfq/discussions) and the [the Contributors License Agreement](misc/CLA.md).\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tagging of changes",
        "parent_header": [
          "directLFQ",
          "How to contribute"
        ],
        "type": "Text_excerpt",
        "value": "In order to have release notes automatically generated, changes need to be tagged with labels.\nThe following labels are used (should be safe-explanatory):\n`breaking-change`, `bug`, `enhancement`.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Release a new version",
        "parent_header": [
          "directLFQ",
          "How to contribute"
        ],
        "type": "Text_excerpt",
        "value": "This package uses a shared release process defined in the\n[alphashared](https://github.com/MannLabs/alphashared) repository. Please see the instructions\n[there](https://github.com/MannLabs/alphashared/blob/reusable-release-workflow/.github/workflows/README.md#release-a-new-version)\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-23T10:38:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T08:20:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fast and accurate label-free quantification for small and very large numbers of proteomes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9909064877197817,
      "result": {
        "original_header": "directLFQ",
        "type": "Text_excerpt",
        "value": "directLFQ is an open-source Python package for quantifying protein intensities based on peptide intensities or fragment-ion intensities measured with from Mass Spectrometry-based proteomics. It preserves peptide ratios, shows very accurate quantification and has a robust normalization approach. Furthermore, it allows fast processing also of very large sample cohorts, as runtime increases linearly with sample number. It is part of the AlphaPept ecosystem from the [Mann Labs at the Max Planck Institute of Biochemistry](https://www.biochem.mpg.de/mann) and the [University of Copenhagen](https://www.cpr.ku.dk/research/proteomics/mann/). \nYou can process DIA and DDA data analyzed by [AlphaPept](https://github.com/MannLabs/alphapept), MaxQuant, FragPipe, Spectronaut and DIANN as well as [generic formats](#generic-input-format), using a Graphical User Interface (GUI) or the python package. \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9928301162343067,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "Generating protein intensities from Mass Spectrometry proteomics data comes with a variety of challenges. Differing peptides that belong to the same protein can have strongly differing intensities, for example due to differing ionization efficiencies. Missing values (i.e. peptides that have been detected in one run but not in the other) make simple summarization of peptide intensities to protein intensities problematic. Differences in sample loading can introduce systematic biases into the analysis.\nWith directLFQ, we provide a novel algorithm for addressing these challenges in an efficient and accurate manner. directLFQ retains peptide ratios and uses them to infer protein ratios and uses the concept of *intensity traces* for it's main processing steps. For futher details on the algorithm, please refer to the [preprint](https://doi.org/10.1101/2023.02.17.528962). \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8522812182686497,
      "result": {
        "original_header": "Troubleshooting",
        "type": "Text_excerpt",
        "value": "In case of issues, check out the following: \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9205121042405484,
      "result": {
        "original_header": "directLFQ commands",
        "type": "Text_excerpt",
        "value": "directLFQ is started internally via the directlfq.lfq_manager.run_lfq() command. In principle and for most use cases, you only need to provide the path to the AlphaPept/MaxQuant/DIA-NN etc. file of interest. However, there are several other options that can be used to customize the analysis. The following commands are available: \n- **input_file**: The input file containing the ion intensities. Usually the output of a search engine.\n- **columns_to_add**: Add the names of columns that are present in the output table and that you want to keep in the directLFQ output file. Separated by semicolons. Note that some basic additional columns such as gene names are always added to the output table by default. WARNING: Take care that columns you add are not ambigous. For example, adding the peptide sequence column will not work, because there are multiple peptide sequences per protein.\n- **selected_proteins_file**: If you want to perform normalization only on a subset of proteins, you can pass a .txt file containing the protein IDs, separeted by line breaks. No header expected.\n- **mq_protein_groups_txt**: In the case of using MaxQuant data, the proteinGroups.txt table is needed in order to map IDs analogous to MaxQuant. Adding this table improves protein mapping, but is not necessary.\n- **min_nonan**: Min number of ion intensities necessary in order to derive a protein intensity. Increasing the number results in more reliable protein quantification at the cost of losing IDs.\n- **input_type_to_use**: The type of input file to use. This is used to determine the column names of the input file. Only change this if you want to use non-default settings.\n- **maximum_number_of_quadratic_ions_to_use_per_protein**: How many ions are used to create the anchor intensity trace (see paper). Increasing might marginally increase performance at the cost of runtime.\n- **number_of_quadratic_samples**: How many samples are used to create the anchor intensity trace (see paper). Increasing might marginally increase performance at the cost of runtime\n-  **num_cores**: The number of cores to use (default is to use multiprocessing).\n-  **filename_suffix**: Suffix to append to the output files.\n-  **deactivate_normalization**: Set to true, if no between-sample normalization should be performed before processing.\n-  **filter_dict**: In case you want to define specific filters in addition to the standard filters, you can add a yaml file where the filters are defined (see example [here](release/examples/filterdict.yaml)). In the Python API you can also directly put in the dictionary instead of the .yaml file. \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9725628759192805,
      "result": {
        "original_header": "directLFQ output",
        "type": "Text_excerpt",
        "value": "directLFQ writes three output files into the directory of the input file:\n1.  The main output file ends with .protein_intensities.tsv and contains the estimated LFQ protein intensities. \n2.  The second output file ends with .ion_intensities.tsv and contains the aligned intensity traces of all ions. This allows to compare profiles of different ions to each other. In particular, if you run directLFQ with peptide-level quantification, you can use this file to compare the intensity traces of different peptides of the same protein.\n3.  The third output file ends with .aq_reformat.tsv and contains the reformatted input data in matrix format (ions are rows, samples are columns). The values are identical to the values of the original input file, just the format is different. \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MannLabs/directlfq/tree/master/directlfq/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MannLabs/directlfq/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/04_utils.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/04_utils.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/08_tracefilter.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/08_tracefilter.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/05_visualizations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/05_visualizations.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/03_protein_intensity_estimation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/03_protein_intensity_estimation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/06_benchmarking.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/06_benchmarking.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/02_normalization.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/nbdev_nbs/02_normalization.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MannLabs/directlfq/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MannLabs/directlfq"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "directLFQ"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/docker-compose.yml",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/misc/stable_pip_install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/misc/check_version.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/misc/loose_pip_install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/release/macos/create_installer_macos.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/release/macos/build_installer_macos.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/release/macos/build_package_macos.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/release/pypi/prepare_pypi_wheel.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/release/pypi/install_test_pypi_wheel.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/release/pypi/install_pypi_wheel.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/release/windows/create_installer_windows.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/release/linux/create_installer_linux.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/release/linux/build_installer_linux.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/release/linux/build_package_linux.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/./release/images/methods_figure.png"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/./release/images/gui_screenshot.png"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/./release/images/cli_screenshot.png"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/./release/images/example_input_format_mq.png"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/./release/images/example_input_format_sn.png"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "directLFQ"
        ],
        "type": "Text_excerpt",
        "value": "directLFQ can be installed and used on all major operating systems (Windows, macOS and Linux).\nThere are currently two different types of installation possible:\n\n* [**One-click GUI installer:**](#one-click-gui) Choose this installation if you only want the GUI and/or keep things as simple as possible.\n\n* [**Developer installer:**](#developer) Choose this installation if you are familiar with CLI tools, [conda](https://docs.conda.io/en/latest/) and Python. This installation allows access to all available features of directlfq and even allows to modify its source code directly. Generally, the developer version of directlfq outperforms the precompiled versions which makes this the installation of choice for high-throughput experiments.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "One-click GUI",
        "parent_header": [
          "directLFQ",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The GUI of directlfq is a completely stand-alone tool that requires no knowledge of Python or CLI tools. Click on one of the links below to download the latest release for:\n\n* [**Windows**](https://github.com/MannLabs/directlfq/releases/latest/download/directlfq_gui_installer_windows.exe)\n* [**macOS**](https://github.com/MannLabs/directlfq/releases/latest/download/directlfq_gui_installer_macos.pkg)\n* [**Linux**](https://github.com/MannLabs/directlfq/releases/latest/download/directlfq_gui_installer_linux.deb)\n\nOlder releases remain available on the [release page](https://github.com/MannLabs/directlfq/releases), but no backwards compatibility is guaranteed.\n\n-"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pip",
        "parent_header": [
          "directLFQ",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "directLFQ can be installed in an existing Python 3.8 environment with a single `bash` command.\n\n```bash\npip install directlfq\n```\n\nThis installs the core directLFQ without graphical user interface (GUI). If you want to install with additional dependencies for GUI support, you can do this with:\n\n```bash\npip install \"directlfq[gui]\"\n```\n\nFor installation with stable dependencies, use:\n\n```bash\npip install \"directlfq[stable]\"\n```\n\nNOTE: You might need to run `pip install pip==21.0` before installing directlfq like this. Also note the double quotes `\"`.\n\nFor those who are really adventurous, it is also possible to directly install any branch (e.g. `@development`) with any extras (e.g. `#egg=directlfq[stable,development-stable]`) from GitHub with e.g.\n\n```bash\npip install \"git+https://github.com/MannLabs/directlfq.git@development#egg=directlfq[stable,development-stable]\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Developer",
        "parent_header": [
          "directLFQ",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "directlfq can also be installed in editable (i.e. developer) mode with a few `bash` commands. This allows to fully customize the software and even modify the source code to your specific needs. When an editable Python package is installed, its source code is stored in a transparent location of your choice. While optional, it is advised to first (create and) navigate to e.g. a general software folder:\n\n```bash\nmkdir ~/folder/where/to/install/software\ncd ~/folder/where/to/install/software\n```\n\n***The following commands assume you do not perform any additional `cd` commands anymore***.\n\nNext, download the directlfq repository from GitHub either directly or with a `git` command. This creates a new directlfq subfolder in your current directory.\n\n```bash\ngit clone https://github.com/MannLabs/directlfq.git\n```\n\nFor any Python package, it is highly recommended to use a separate [conda virtual environment](https://docs.conda.io/en/latest/), as otherwise *dependancy conflicts can occur with already existing packages*.\n\n```bash\nconda create --name directlfq python=3.8 -y\nconda activate directlfq\n```\n\nFinally, directlfq and all its [dependencies](requirements) need to be installed. To take advantage of all features and allow development (with the `-e` flag), this is best done by also installing the [development dependencies](requirements/requirements_development.txt) instead of only the [core dependencies](requirements/requirements.txt):\n\n```bash\npip install -e \"./directlfq[development,gui]\"\n```\n\nBy default this installs loose dependencies (no explicit versioning), although it is also possible to use stable dependencies (e.g. `pip install -e \"./directlfq[stable,development-stable]\"`).\n\n***By using the editable flag `-e`, all modifications to the [directlfq source code folder](directlfq) are directly reflected when running directlfq. Note that the directlfq folder cannot be moved and/or renamed if an editable version is installed. In case of confusion, you can always retrieve the location of any Python module with e.g. the command `import module` followed by `module.__file__`.***\n\n---"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Spectronaut",
        "parent_header": [
          "directLFQ",
          "preparing input files"
        ],
        "type": "Text_excerpt",
        "value": "directLFQ takes a Spectronaut .tsv table as input. When exporting from Spectronaut, the correct columns need to be selected. These can be obtained by downloading one of the export schemes available below. We provide one export scheme for sprecursor quantification and one export scheme for fragment ion quantification. Fragment ion quantification shows slightly more accuracy, but the files are around 10 times larger.\n\nAn export scheme can then simply be loaded into Spectronaut as follows:\n\nGo to the \"Report\" perspective in Spectronaut, click \"Import Schema\" and provide the file.\n\nThe data needs to be exported in the normal long format as .tsv file\n\n\n<a href=\"https://github.com/MannLabs/directlfq/raw/development/directlfq/configs/spectronaut_tableconfig_precursor.rs\" download>Download Spectronaut export scheme for precursor quantification</a>\n\n<a href=\"https://github.com/MannLabs/directlfq/raw/development/directlfq/configs/spectronaut_tableconfig_fragion.rs\" download>Download Spectronaut export scheme for fragment ion quantification</a>\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "DIA-NN",
        "parent_header": [
          "directLFQ",
          "preparing input files"
        ],
        "type": "Text_excerpt",
        "value": "Provide the path to the DIANN \"report.tsv\" output table.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MaxQuant",
        "parent_header": [
          "directLFQ",
          "preparing input files"
        ],
        "type": "Text_excerpt",
        "value": "Provide the path to the MaxQuant \"peptides.txt\" output table or the MaxQuant evidence.txt output table. Additionally and if possible, provide the path to the corresponding \"proteinGroups.txt\" file.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "FragPipe",
        "parent_header": [
          "directLFQ",
          "preparing input files"
        ],
        "type": "Text_excerpt",
        "value": "Provide the path to the \"combined_ion.tsv\" output table.\n\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "generic input format",
        "parent_header": [
          "directLFQ",
          "preparing input files"
        ],
        "type": "Text_excerpt",
        "value": "In the case that you working with a search engine that is not supported by directLFQ, you can use the generic input format. This format is a tab-separated quantity matrix file with the following columns: \"protein\", \"ion\", \"run_id1\", \"run_id2\", ..,\"run_idN\". \nEach row contains therefore all the ion intensities that were measured for an ion in each run (see examples below). The ion identifier only needs to be unique for each ion and can be on the level you want (peptide, charged peptide, or fragment ion). After reformatting your file into this format, save the file with the ending \".aq_reformat.tsv\". Then you can simply give this file as input to directLFQ and it will automatically detect the generic input format.\n<img src=\"./release/images/example_input_format_mq.png\" width=\"700\" />\n<img src=\"./release/images/example_input_format_sn.png\" width=\"700\" />\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MannLabs/directlfq/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "algorithms, alphapept-ecosystem, bioinformatics, proteomics, python, quantification"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2023 MannLabs\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "directLFQ"
        ],
        "type": "Text_excerpt",
        "value": "directLFQ was developed by the [Mann Labs at the Max Planck Institute of Biochemistry](https://www.biochem.mpg.de/mann) and the [University of Copenhagen](https://www.cpr.ku.dk/research/proteomics/mann/) and is freely available with an [Apache License](LICENSE.txt). External Python packages (available in the [requirements](requirements) folder) have their own licenses, which can be consulted on their respective websites.\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "directlfq"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "MannLabs"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 8081912,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 308573,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 9386,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Inno Setup",
        "size": 4503,
        "type": "Programming_language",
        "value": "Inno Setup"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 3481,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 1551,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PowerShell",
        "size": 1171,
        "type": "Programming_language",
        "value": "PowerShell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 1001,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-08-13T14:51:37Z",
        "date_published": "2024-08-13T14:53:12Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.20",
        "name": "Release version 0.2.20",
        "release_id": 169991195,
        "tag": "0.2.20",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.20",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/169991195",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/169991195",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.20"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-04-09T11:46:16Z",
        "date_published": "2024-04-09T11:47:29Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.19",
        "name": "Release version 0.2.19",
        "release_id": 150380785,
        "tag": "0.2.19",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.19",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/150380785",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/150380785",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.19"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-02-21T16:21:50Z",
        "date_published": "2024-02-21T16:25:59Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.18",
        "name": "Release version 0.2.18",
        "release_id": 143017559,
        "tag": "0.2.18",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.18",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/143017559",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/143017559",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.18"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-01-24T15:25:10Z",
        "date_published": "2024-01-24T15:27:04Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.17",
        "name": "Release version 0.2.17",
        "release_id": 138354990,
        "tag": "0.2.17",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.17",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/138354990",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/138354990",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.17"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-01-22T11:22:36Z",
        "date_published": "2024-01-22T11:23:54Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.16",
        "name": "Release version 0.2.16",
        "release_id": 137962954,
        "tag": "0.2.16",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.16",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/137962954",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/137962954",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.16"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-12-08T14:44:28Z",
        "date_published": "2023-12-08T14:46:08Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.15",
        "name": "Release version 0.2.15",
        "release_id": 133186295,
        "tag": "0.2.15",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.15",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/133186295",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/133186295",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.15"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-12-06T20:05:22Z",
        "date_published": "2023-12-06T20:06:47Z",
        "description": "Please see release 0.2.11 for the GUI",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.14",
        "name": "Release version 0.2.14",
        "release_id": 132913581,
        "tag": "0.2.14",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.14",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/132913581",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/132913581",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.14"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-07-27T14:33:49Z",
        "date_published": "2023-07-27T15:18:30Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.11",
        "name": "Release version 0.2.11",
        "release_id": 113849178,
        "tag": "0.2.11",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.11",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/113849178",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/113849178",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-07-18T13:57:10Z",
        "date_published": "2023-07-24T15:58:00Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.10",
        "name": "Release version 0.2.10",
        "release_id": 113347819,
        "tag": "0.2.10",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.10",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/113347819",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/113347819",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-03-01T10:50:47Z",
        "date_published": "2023-03-01T10:52:15Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.8",
        "name": "Release version 0.2.8",
        "release_id": 94064670,
        "tag": "0.2.8",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.8",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/94064670",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/94064670",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-02-28T17:11:18Z",
        "date_published": "2023-02-28T17:13:43Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.7",
        "name": "Release version 0.2.7",
        "release_id": 93966531,
        "tag": "0.2.7",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.7",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/93966531",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/93966531",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-02-20T16:21:27Z",
        "date_published": "2023-02-22T14:23:43Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.5",
        "name": "Release version 0.2.5",
        "release_id": 93301174,
        "tag": "0.2.5",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/93301174",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/93301174",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-02-08T12:38:36Z",
        "date_published": "2023-02-19T12:55:24Z",
        "description": "first public release",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.4",
        "name": "Release version 0.2.4",
        "release_id": 92944381,
        "tag": "0.2.4",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/92944381",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/92944381",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-02-02T16:54:28Z",
        "date_published": "2023-02-02T16:56:01Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.3",
        "name": "Release version 0.2.3",
        "release_id": 91162633,
        "tag": "0.2.3",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/91162633",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/91162633",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-02-01T17:13:50Z",
        "date_published": "2023-02-01T17:15:40Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.2",
        "name": "Release version 0.2.2",
        "release_id": 91012865,
        "tag": "0.2.2",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/91012865",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/91012865",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-01-31T14:31:11Z",
        "date_published": "2023-01-31T14:33:38Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.1",
        "name": "Release version 0.2.1",
        "release_id": 90838693,
        "tag": "0.2.1",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/90838693",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/90838693",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-01-20T18:08:48Z",
        "date_published": "2023-01-27T14:45:41Z",
        "html_url": "https://github.com/MannLabs/directlfq/releases/tag/0.2.0",
        "name": "Release version 0.2.0",
        "release_id": 90429472,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/MannLabs/directlfq/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/directlfq/releases/90429472",
        "value": "https://api.github.com/repos/MannLabs/directlfq/releases/90429472",
        "zipball_url": "https://api.github.com/repos/MannLabs/directlfq/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running directLFQ",
        "parent_header": [
          "directLFQ"
        ],
        "type": "Text_excerpt",
        "value": "There are three ways to use directlfq:\n\n* [**GUI**](#gui)\n* [**CLI**](#cli)\n* [**Python**](#python-and-jupyter-notebooks)\n\nNOTE: The first time you use a fresh installation of directlfq, it is often quite slow because some functions might still need compilation on your local operating system and architecture. Subsequent use should be a lot faster.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GUI",
        "parent_header": [
          "directLFQ",
          "Running directLFQ"
        ],
        "type": "Text_excerpt",
        "value": "![](./release/images/gui_screenshot.png)\nIf you have installed directlfq with the one-click GUI installer, you can run the GUI simply by clicking the directLFQ icon on your desktop/applications folder.\n\nIf the GUI was not installed through a one-click GUI installer, it can be activate with the following `bash` command:\n\n```bash\ndirectlfq gui\n```\n\nNote that this needs to be prepended with a `!` when you want to run this from within a Jupyter notebook. When the command is run directly from the command-line, make sure you use the right environment (activate it with e.g. `conda activate directlfq` or set an alias to the binary executable (can be obtained with `where directlfq` or `which directlfq`)).\n\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CLI",
        "parent_header": [
          "directLFQ",
          "Running directLFQ"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"./release/images/cli_screenshot.png\" width=\"600\" />\n\n\nThe CLI can be run with the following command (after activating the `conda` environment with `conda activate directlfq` or if an alias was set to the directlfq executable):\n\n```bash\ndirectlfq -h\n```\n\nIt is possible to get help about each function and their (required) parameters by using the `-h` flag.\n\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python and Jupyter notebooks",
        "parent_header": [
          "directLFQ",
          "Running directLFQ"
        ],
        "type": "Text_excerpt",
        "value": "directLFQ can be imported as a Python package into any Python script or notebook with the command `import directlfq`.\nRunning the standard analysis (with plots) can be done via the command:\n```bash\nimport directlfq.lfq_manager as lfq_manager\n\nexample_input_file_diann = \"/path/to/example_input_file_diann.tsv\"\n\nlfq_manager.run_lfq(example_input_file_diann)\n```\n\nSeveral use cases for applying directLFQ can be found as Jupyter Notebooks in the tests folder. See for example the [quicktests notebook](tests/quicktests/run_pipeline_w_different_input_formats.ipynb).\n\nNote that the nbdev_nbs folder contains the source code as Jupyter notebooks. These notebooks are automatically converted to Python scripts using the nbdev package and stored in the directlfq folder. The notebooks contain additional documentation and comments as well as unit tests that can be executed directly from the notebooks themselves.\n\n---"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/directlfq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:48:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 37
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}