{
  "application_domain": [
    {
      "confidence": 0.8812597691755512,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ParBLiSS/FastANI"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-07-25T21:21:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-26T07:08:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fast Whole-Genome Similarity (ANI) Estimation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage Summary",
        "parent_header": [
          "FastANI"
        ],
        "type": "Text_excerpt",
        "value": "* **Produce help page.** Quickly check the software usage and available command line options.\n\n```sh\n$ ./fastANI -h\n```\n\n* **One to One.** Compute ANI between single query and single reference genome:\n\n```sh\n$ ./fastANI -q [QUERY_GENOME] -r [REFERENCE_GENOME] -o [OUTPUT_FILE] \n```\n\nHere QUERY\\_GENOME and REFERENCE\\_GENOME are the query genome assemblies in fasta or multi-fasta format.\n\n* **One to Many.** Compute ANI between single query genome and multiple reference genomes:\n\n```sh\n$ ./fastANI -q [QUERY_GENOME] --rl [REFERENCE_LIST] -o [OUTPUT_FILE]\n```\n\nFor above use case, REFERENCE\\_LIST should be a file containing directory paths to reference genomes, one per line.\n\n* **Many to Many.** When there are multiple query genomes and multiple reference genomes:\n\n```sh\n$ ./fastANI --ql [QUERY_LIST] --rl [REFERENCE_LIST] -o [OUTPUT_FILE]\n```\nAgain, QUERY\\_LIST and REFERENCE\\_LIST are files containing paths to genomes, one per line.\n\n**Output format.** In all above use cases, OUTPUT\\_FILE will contain tab delimited row(s) with query genome, reference genome, ANI value, count of bidirectional fragment mappings, and total query fragments. Alignment fraction (wrt. the query genome) is simply the ratio of mappings and total fragments. Optionally, users can also get a second `.matrix` file with identity values arranged in a [phylip-formatted lower triangular matrix](https://www.mothur.org/wiki/Phylip-formatted_distance_matrix) by supplying `--matrix` parameter. **NOTE:** No ANI output is reported for a genome pair if ANI value is much below 80%. Such case should be computed at [amino acid level](http://enve-omics.ce.gatech.edu/aai/).\n\nTwo genome assemblies are provided in [data](data) folder to do a quick test run. \n\nWe suggest users to do an adequate quality check of their input genome assemblies (both reference and query), especially the N50 be \u226510 Kbp.\n"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9995627075419912,
      "result": {
        "original_header": "FastANI",
        "type": "Text_excerpt",
        "value": "FastANI is developed for fast alignment-free computation of whole-genome Average Nucleotide Identity (ANI). ANI is defined as mean nucleotide identity of orthologous gene pairs shared between two microbial genomes. FastANI supports pairwise comparison of both complete and draft genome assemblies. Its underlying procedure follows a similar workflow as described by [Goris et al. 2007](http://www.ncbi.nlm.nih.gov/pubmed/17220447). However, it avoids expensive sequence alignments and uses [Mashmap](https://github.com/marbl/MashMap) as its MinHash based sequence mapping engine to compute the orthologous mappings and alignment identity estimates. Based on our experiments with complete and draft genomes, its accuracy is on par with [BLAST-based ANI solver](http://enve-omics.ce.gatech.edu/ani/) and it achieves two to three orders of magnitude speedup. Therefore, it is useful for pairwise ANI computation of large number of genome pairs. More details about its speed, accuracy and potential applications are described here: \"[High Throughput ANI Analysis of 90K Prokaryotic Genomes Reveals Clear Species Boundaries](https://doi.org/10.1038/s41467-018-07641-9)\". \n \n"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9828157266897486,
      "result": {
        "original_header": "Visualize Conserved Regions b/w Two Genomes",
        "type": "Text_excerpt",
        "value": "FastANI supports visualization of the reciprocal mappings computed between two genomes. \nGetting this visualization requires a one to one comparison using FastANI as discussed above, except an additional flag `--visualize` should be provided. \nThis flag forces FastANI to output a mapping file (with `.visual` extension) that contains information of all the reciprocal mappings. \nFinally, an [R script](scripts) is provided in the repository which uses [genoPlotR](https://cran.r-project.org/web/packages/genoPlotR/index.html) package to plot these mappings. \nHere we show an example run using two genomes: *Bartonella quintana* ([GenBank: CP003784.1](https://www.ncbi.nlm.nih.gov/nuccore/CP003784.1)) and *Bartonella henselae* ([NCBI Reference Sequence: NC_005956.1](https://www.ncbi.nlm.nih.gov/nuccore/NC_005956.1)).\n```sh\n$ ./fastANI -q B_quintana.fna -r B_henselae.fna --visualize -o fastani.out\n$ Rscript scripts/visualize.R B_quintana.fna B_henselae.fna fastani.out.visual\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9391544263778231,
      "result": {
        "original_header": "Parallelization",
        "type": "Text_excerpt",
        "value": "FastANI (v1.1 onwards) supports multi-threading, see the help page on how to configure thread count. To parallelize FastANI beyond single compute node, users also have the choice to simply divide their reference database into multiple chunks, and execute them as parallel processes. We provide a [script](scripts) in the repository to randomly split the database for this purpose.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and Compile",
        "parent_header": [
          "FastANI"
        ],
        "type": "Text_excerpt",
        "value": "Clone the software from Github and follow [`INSTALL.txt`](INSTALL.txt) to compile the code. There is also an option to download dependency-free binary for Linux or OSX through the [latest release](https://github.com/ParBliSS/FastANI/releases).\n"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ParBLiSS/FastANI/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 66
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ParBLiSS/FastANI/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ParBLiSS/FastANI"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FastANI"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/bootstrap.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/scripts/splitDatabase.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.postimg.cc/kX77DHcr/readme-ANI.jpg"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9681275139379563,
      "result": {
        "original_header": "Visualize Conserved Regions b/w Two Genomes",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n<img src=\"https://i.postimg.cc/kX77DHcr/readme-ANI.jpg\" height=\"350\"/>\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.955101667941543,
      "result": {
        "original_header": "Troubleshooting",
        "type": "Text_excerpt",
        "value": "Users are welcome to report any issue or feedback related to FastANI by posting a [Github issue](https://github.com/ParBLiSS/FastANI/issues).\n \n"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ParBLiSS/FastANI/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "microbial-genomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2017 Georgia Institute of Technology\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FastANI"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ParBLiSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 349564,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 16416,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 3903,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1991,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 1502,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1453,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 934,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 638,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "srirampc",
          "type": "User"
        },
        "date_created": "2023-07-28T20:41:45Z",
        "date_published": "2023-07-28T21:04:50Z",
        "description": "These are release notes for FastANI version 1.34, which was released on July 28, 2023. Full documentation can be found by running ```FastANI -h```\r\n\r\nCompared to v1.33, this version fix multi-threading output bugs, adds test scripts, adds build with cmake and removes the build with autoconf . Output and interface of FastANI remains same as before.\r\n\r\n## Installation\r\n\r\nUsers can either download FastANI as a binary file compiled for Linux or compile from source code. The instructions to compile from source are listed in file `INSTALL.txt`.",
        "html_url": "https://github.com/ParBLiSS/FastANI/releases/tag/v1.34",
        "name": "FastANI v1.34",
        "release_id": 112485369,
        "tag": "v1.34",
        "tarball_url": "https://api.github.com/repos/ParBLiSS/FastANI/tarball/v1.34",
        "type": "Release",
        "url": "https://api.github.com/repos/ParBLiSS/FastANI/releases/112485369",
        "value": "https://api.github.com/repos/ParBLiSS/FastANI/releases/112485369",
        "zipball_url": "https://api.github.com/repos/ParBLiSS/FastANI/zipball/v1.34"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2021-04-28T12:28:55Z",
        "date_published": "2021-04-29T05:44:08Z",
        "description": "These are release notes for FastANI version 1.33, which was released on April 29, 2021. Full documentation can be found by running ```fastANI -h```\r\n\r\nThis release provides a stable, tested, and documented version of the software.  Compared to v1.32, this version fixes issue #81 by removing dependency to argvparser library. Output and interface of FastANI remains same as before.\r\n\r\n## Installation\r\n\r\nUsers can either download FastANI as a binary file compiled for Linux or compile from source code. The instructions to compile from source are listed in file `INSTALL.txt`.",
        "html_url": "https://github.com/ParBLiSS/FastANI/releases/tag/v1.33",
        "name": "FastANI v1.33",
        "release_id": 42179433,
        "tag": "v1.33",
        "tarball_url": "https://api.github.com/repos/ParBLiSS/FastANI/tarball/v1.33",
        "type": "Release",
        "url": "https://api.github.com/repos/ParBLiSS/FastANI/releases/42179433",
        "value": "https://api.github.com/repos/ParBLiSS/FastANI/releases/42179433",
        "zipball_url": "https://api.github.com/repos/ParBLiSS/FastANI/zipball/v1.33"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2020-09-30T13:00:57Z",
        "date_published": "2020-09-30T13:48:06Z",
        "description": "These are release notes for FastANI version 1.32, which was released on September 30, 2020. Full documentation can be found by running ```fastANI -h```\r\n\r\nThis release provides a stable, tested, and documented version of the software.  Compared to v1.31, this version fixes issue #70 and includes minor corrections in README file.\r\n\r\n## Installation\r\n\r\nUsers can either download FastANI as a binary file compiled for Linux or compile from source code. The instructions to compile from source are listed in file `INSTALL.txt`.",
        "html_url": "https://github.com/ParBLiSS/FastANI/releases/tag/v1.32",
        "name": "FastANI v1.32",
        "release_id": 31992628,
        "tag": "v1.32",
        "tarball_url": "https://api.github.com/repos/ParBLiSS/FastANI/tarball/v1.32",
        "type": "Release",
        "url": "https://api.github.com/repos/ParBLiSS/FastANI/releases/31992628",
        "value": "https://api.github.com/repos/ParBLiSS/FastANI/releases/31992628",
        "zipball_url": "https://api.github.com/repos/ParBLiSS/FastANI/zipball/v1.32"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2020-07-12T02:10:34Z",
        "date_published": "2020-07-12T02:22:48Z",
        "description": "Fixed bugs that previously produced indeterministic output with varying threads and input genome order (issues #57, #58, #67, #37)",
        "html_url": "https://github.com/ParBLiSS/FastANI/releases/tag/v1.31",
        "name": "FastANI v1.31",
        "release_id": 28473840,
        "tag": "v1.31",
        "tarball_url": "https://api.github.com/repos/ParBLiSS/FastANI/tarball/v1.31",
        "type": "Release",
        "url": "https://api.github.com/repos/ParBLiSS/FastANI/releases/28473840",
        "value": "https://api.github.com/repos/ParBLiSS/FastANI/releases/28473840",
        "zipball_url": "https://api.github.com/repos/ParBLiSS/FastANI/zipball/v1.31"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2019-12-05T19:29:20Z",
        "date_published": "2019-12-05T19:42:30Z",
        "description": "- FastANI uses a minimum threshold on the aligned genome length. This cutoff must be satisfied for the pairwise ANI value to be reported. Previously, this was implemented as an absolute cut-off (default 150 kbp), which can be troublesome with variable genome lengths. Based on user recommendations, the cut-off in v1.3 is implemented as a fraction of the genome. Default value is 20% of the smaller genome, see parameter  `--minFraction` in the help page)\r\n\r\n- `FastANI -v` reports the current version being used. ",
        "html_url": "https://github.com/ParBLiSS/FastANI/releases/tag/v1.3",
        "name": "FastANI v1.3",
        "release_id": 22008537,
        "tag": "v1.3",
        "tarball_url": "https://api.github.com/repos/ParBLiSS/FastANI/tarball/v1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ParBLiSS/FastANI/releases/22008537",
        "value": "https://api.github.com/repos/ParBLiSS/FastANI/releases/22008537",
        "zipball_url": "https://api.github.com/repos/ParBLiSS/FastANI/zipball/v1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2019-07-25T16:01:28Z",
        "date_published": "2019-07-26T14:30:11Z",
        "description": "- Made fixes to produce fully consistent results when changing the count of input genomes.\r\n- Minor changes to Mac OS build command",
        "html_url": "https://github.com/ParBLiSS/FastANI/releases/tag/v1.2",
        "name": "FastANI v1.2",
        "release_id": 18891531,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/ParBLiSS/FastANI/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ParBLiSS/FastANI/releases/18891531",
        "value": "https://api.github.com/repos/ParBLiSS/FastANI/releases/18891531",
        "zipball_url": "https://api.github.com/repos/ParBLiSS/FastANI/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2018-08-01T16:29:53Z",
        "date_published": "2018-08-01T16:52:12Z",
        "description": "Based on popular demand, we've added:\r\n\r\n- support for multi-threading\r\n- option to get final output as matrix \r\n- improved file IO logic for the `--rl` / `--ql` options ",
        "html_url": "https://github.com/ParBLiSS/FastANI/releases/tag/v1.1",
        "name": "FastANI v1.1",
        "release_id": 12208396,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/ParBLiSS/FastANI/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ParBLiSS/FastANI/releases/12208396",
        "value": "https://api.github.com/repos/ParBLiSS/FastANI/releases/12208396",
        "zipball_url": "https://api.github.com/repos/ParBLiSS/FastANI/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cjain7",
          "type": "User"
        },
        "date_created": "2017-11-26T05:08:10Z",
        "date_published": "2017-11-26T05:23:58Z",
        "description": "First stable release.",
        "html_url": "https://github.com/ParBLiSS/FastANI/releases/tag/v1.0",
        "name": "FastANI v1.0",
        "release_id": 8656730,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/ParBLiSS/FastANI/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ParBLiSS/FastANI/releases/8656730",
        "value": "https://api.github.com/repos/ParBLiSS/FastANI/releases/8656730",
        "zipball_url": "https://api.github.com/repos/ParBLiSS/FastANI/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "An Example Run",
        "parent_header": [
          "FastANI"
        ],
        "type": "Text_excerpt",
        "value": "* **One to One.** Here we compute ANI between *Escherichia coli* and *Shigella flexneri* genomes provided in the [data](data) folder.\n\n```sh\n$ ./fastANI -q data/Shigella_flexneri_2a_01.fna -r data/Escherichia_coli_str_K12_MG1655.fna -o fastani.out \n```\n\nExpect output log in the following format in the console:\n\n```sh\n$ ./fastANI -q data/Shigella_flexneri_2a_01.fna -r data/Escherichia_coli_str_K12_MG1655.fna -o fastani.out \n>>>>>>>>>>>>>>>>>>\nReference = [data/Escherichia_coli_str_K12_MG1655.fna]\nQuery = [data/Shigella_flexneri_2a_01.fna]\nKmer size = 16\nFragment length = 3000\nThreads = 1\nANI output file = fastani.out\n>>>>>>>>>>>>>>>>>>\n....\n....\nINFO, skch::main, Time spent post mapping : 0.00310319 sec\n```\n\nOutput is saved in file `fastani.out`, provided above using the `-o` option. \n\n```sh\n$ cat fastani.out\ndata/Shigella_flexneri_2a_01.fna data/Escherichia_coli_str_K12_MG1655.fna 97.7507 1303 1608\n```\n\nAbove output implies that the ANI estimate between *S. flexneri* and *E. coli* genomes is 97.7507. Out of the total 1608 sequence fragments from *S. flexneri* genome, 1303 were aligned as orthologous matches.\n"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:28:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 368
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage Summary",
        "parent_header": [
          "FastANI"
        ],
        "type": "Text_excerpt",
        "value": "* **Produce help page.** Quickly check the software usage and available command line options.\n\n```sh\n$ ./fastANI -h\n```\n\n* **One to One.** Compute ANI between single query and single reference genome:\n\n```sh\n$ ./fastANI -q [QUERY_GENOME] -r [REFERENCE_GENOME] -o [OUTPUT_FILE] \n```\n\nHere QUERY\\_GENOME and REFERENCE\\_GENOME are the query genome assemblies in fasta or multi-fasta format.\n\n* **One to Many.** Compute ANI between single query genome and multiple reference genomes:\n\n```sh\n$ ./fastANI -q [QUERY_GENOME] --rl [REFERENCE_LIST] -o [OUTPUT_FILE]\n```\n\nFor above use case, REFERENCE\\_LIST should be a file containing directory paths to reference genomes, one per line.\n\n* **Many to Many.** When there are multiple query genomes and multiple reference genomes:\n\n```sh\n$ ./fastANI --ql [QUERY_LIST] --rl [REFERENCE_LIST] -o [OUTPUT_FILE]\n```\nAgain, QUERY\\_LIST and REFERENCE\\_LIST are files containing paths to genomes, one per line.\n\n**Output format.** In all above use cases, OUTPUT\\_FILE will contain tab delimited row(s) with query genome, reference genome, ANI value, count of bidirectional fragment mappings, and total query fragments. Alignment fraction (wrt. the query genome) is simply the ratio of mappings and total fragments. Optionally, users can also get a second `.matrix` file with identity values arranged in a [phylip-formatted lower triangular matrix](https://www.mothur.org/wiki/Phylip-formatted_distance_matrix) by supplying `--matrix` parameter. **NOTE:** No ANI output is reported for a genome pair if ANI value is much below 80%. Such case should be computed at [amino acid level](http://enve-omics.ce.gatech.edu/aai/).\n\nTwo genome assemblies are provided in [data](data) folder to do a quick test run. \n\nWe suggest users to do an adequate quality check of their input genome assemblies (both reference and query), especially the N50 be \u226510 Kbp.\n"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "An Example Run",
        "parent_header": [
          "FastANI"
        ],
        "type": "Text_excerpt",
        "value": "* **One to One.** Here we compute ANI between *Escherichia coli* and *Shigella flexneri* genomes provided in the [data](data) folder.\n\n```sh\n$ ./fastANI -q data/Shigella_flexneri_2a_01.fna -r data/Escherichia_coli_str_K12_MG1655.fna -o fastani.out \n```\n\nExpect output log in the following format in the console:\n\n```sh\n$ ./fastANI -q data/Shigella_flexneri_2a_01.fna -r data/Escherichia_coli_str_K12_MG1655.fna -o fastani.out \n>>>>>>>>>>>>>>>>>>\nReference = [data/Escherichia_coli_str_K12_MG1655.fna]\nQuery = [data/Shigella_flexneri_2a_01.fna]\nKmer size = 16\nFragment length = 3000\nThreads = 1\nANI output file = fastani.out\n>>>>>>>>>>>>>>>>>>\n....\n....\nINFO, skch::main, Time spent post mapping : 0.00310319 sec\n```\n\nOutput is saved in file `fastani.out`, provided above using the `-o` option. \n\n```sh\n$ cat fastani.out\ndata/Shigella_flexneri_2a_01.fna data/Escherichia_coli_str_K12_MG1655.fna 97.7507 1303 1608\n```\n\nAbove output implies that the ANI estimate between *S. flexneri* and *E. coli* genomes is 97.7507. Out of the total 1608 sequence fragments from *S. flexneri* genome, 1303 were aligned as orthologous matches.\n"
      },
      "source": "https://raw.githubusercontent.com/ParBLiSS/FastANI/master/README.md",
      "technique": "header_analysis"
    }
  ]
}