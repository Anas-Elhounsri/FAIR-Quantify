{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jumphone/FitDevo"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-19T13:05:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-03T08:30:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FitDevo: accurate inference of single-cell developmental potential using sample-specific gene weight"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9004809969253766,
      "result": {
        "original_header": "Updates:",
        "type": "Text_excerpt",
        "value": "**2022.07.01, v1.1.0 - New features!**  Users can use \"fitdevo.field\" to build developmental potential field (DPF) and draw arrows. \n**2022.06.30, v1.0.1 - Paper version.** The details of this version is described in our BIB (2022) paper. \n"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9469812661734456,
      "result": {
        "original_header": "Training &amp; Testing Datasets:",
        "type": "Text_excerpt",
        "value": "Each sample is saved in a \"RDS\" file.  \nUsers can use R to load the \"RDS\" file.\n    \n    # R code\n    data1 = readRDS('1.rds')\n    # data1$mat is the expression matrix\n    # data1$tag is the reverse order of timepoint label (higher value indicates higher developmental potential).\n    \n</br>\n \n"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9790520865125935,
      "result": {
        "type": "Text_excerpt",
        "value": "**FitDevo: accurate inference of single-cell developmental potential using sample-specific gene weight**, ***Briefings in Bioinformatics*, 2022** \nThis tool is designed for inferring the developmental potential (DP) of cells in scRNA-seq data \n"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jumphone/fitdevo/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jumphone/FitDevo/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jumphone/FitDevo"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Updates:"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jumphone/FitDevo/main/img/f01_demo2_fitdevo.field.png"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://fzhang.bioinfo-lab.com/img/white.png"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Please install \"igraph\" and \"stringr\" before using \"fitdevo.field\"",
        "parent_header": [
          "Demos:",
          "Demo 2 - Build developmental potential field (DPF) and draw arrows ( latest version of FitDevo )"
        ],
        "type": "Text_excerpt",
        "value": "    install.packages('igraph')\n    install.packages('stringr')\n\nUsers should provide the embedding coordinates (e.g. tSNE, UMAP, PAGA, etc.). This demo is based on a \"seurat.object\" with a normalized expression matrix and an UMAP. To generate seurat.object, please refer to: https://satijalab.org/seurat/articles/pbmc3k_tutorial.html\n\nThe function named \"fitdevo.field\" partially follows the idea of another tool named VECTOR. If you are using this function in your work, please also cite: Unsupervised Inference of Developmental Directions for Single Cells Using VECTOR, Cell Reports, 2020. {[code](https://github.com/jumphone/Vector), [paper](https://doi.org/10.1016/j.celrep.2020.108069)}\n\n</br>\n\n    source('https://github.com/jumphone/FitDevo/blob/main/fitdevo.R?raw=true')\n    \n    # Step 1. Prepare input files.\n    MAT=as.matrix(seurat.object[['RNA']]@data)\n    VEC=seurat.object@reductions$umap@cell.embeddings\n    BGW=readRDS(url('https://github.com/jumphone/FitDevo/blob/main/BGW.rds?raw=true'))\n    \n    # Step 2. Infer developmental potential\n    DP=fitdevo(MAT, BGW, NORM=FALSE, PCNUM=50)\n\n    # Step 3. Build developmental potential field (DPF) and draw arrows\n    FIELD=fitdevo.field(DP=DP, VEC=VEC, SHOW=TRUE)\n    \n    # Coler scale\n    plot(x=FIELD$VALUE,y=rep(1,length(FIELD$VALUE)),col=FIELD$POINT.COL,type='h',lwd=2,ylim=c(0,1))\n    \n<p float=\"left\">\n<img src=\"https://raw.githubusercontent.com/jumphone/FitDevo/main/img/f01_demo2_fitdevo.field.png\" width=\"250\">\n</p>\n\nThis figure is generated by using the scRNA-seq data of mouse dentate gyrus ([PMID: 29335606](https://www.nature.com/articles/s41593-017-0056-2)).\n\n</br>\n\n[Click back to the top](#)\n\n</br>\n</br>\n\n\n\n<img src=\"https://fzhang.bioinfo-lab.com/img/white.png\" height=\"50\">\n\n-------------------------------------------------------------------------------------------------------------------\n\n<img src=\"https://fzhang.bioinfo-lab.com/img/panda_happy_logo.png\" height='150'>\n"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9957796793356538,
      "result": {
        "original_header": "Training &amp; Testing Datasets:",
        "type": "Text_excerpt",
        "value": "Testing dataset (n=28), https://sourceforge.net/projects/fitdevo/files/testing/ \n"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jumphone/FitDevo/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://fzhang.bioinfo-lab.com/img/panda_happy_logo.png"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FitDevo"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jumphone"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 148228,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jumphone",
          "type": "User"
        },
        "date_created": "2023-06-14T01:58:56Z",
        "date_published": "2023-11-28T06:19:22Z",
        "description": "Update ",
        "html_url": "https://github.com/jumphone/FitDevo/releases/tag/v1.2.1",
        "name": "FitDevo 1.2.1",
        "release_id": 131676774,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/jumphone/FitDevo/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jumphone/FitDevo/releases/131676774",
        "value": "https://api.github.com/repos/jumphone/FitDevo/releases/131676774",
        "zipball_url": "https://api.github.com/repos/jumphone/FitDevo/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jumphone",
          "type": "User"
        },
        "date_created": "2022-07-13T11:52:15Z",
        "date_published": "2022-07-13T11:53:50Z",
        "description": "Improve the computational efficiency by using \"qlcMatrix\".",
        "html_url": "https://github.com/jumphone/FitDevo/releases/tag/v1.2.0",
        "name": "FitDevo 1.2.0",
        "release_id": 71892492,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/jumphone/FitDevo/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jumphone/FitDevo/releases/71892492",
        "value": "https://api.github.com/repos/jumphone/FitDevo/releases/71892492",
        "zipball_url": "https://api.github.com/repos/jumphone/FitDevo/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jumphone",
          "type": "User"
        },
        "date_created": "2022-07-13T08:49:30Z",
        "date_published": "2022-07-13T08:51:49Z",
        "description": "Regular update",
        "html_url": "https://github.com/jumphone/FitDevo/releases/tag/v1.1.2",
        "name": "FitDevo 1.1.2",
        "release_id": 71877536,
        "tag": "v1.1.2",
        "tarball_url": "https://api.github.com/repos/jumphone/FitDevo/tarball/v1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/jumphone/FitDevo/releases/71877536",
        "value": "https://api.github.com/repos/jumphone/FitDevo/releases/71877536",
        "zipball_url": "https://api.github.com/repos/jumphone/FitDevo/zipball/v1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jumphone",
          "type": "User"
        },
        "date_created": "2022-07-13T01:27:24Z",
        "date_published": "2022-07-13T02:34:58Z",
        "description": "Regular update",
        "html_url": "https://github.com/jumphone/FitDevo/releases/tag/v1.1.1",
        "name": "FitDevo 1.1.1",
        "release_id": 71858497,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/jumphone/FitDevo/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jumphone/FitDevo/releases/71858497",
        "value": "https://api.github.com/repos/jumphone/FitDevo/releases/71858497",
        "zipball_url": "https://api.github.com/repos/jumphone/FitDevo/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jumphone",
          "type": "User"
        },
        "date_created": "2022-07-01T07:42:56Z",
        "date_published": "2022-07-01T07:43:59Z",
        "description": "Users can use \"fitdevo.field\" to build developmental potential field (DPF) and draw arrows.",
        "html_url": "https://github.com/jumphone/FitDevo/releases/tag/v1.1.0",
        "name": "FitDevo 1.1.0",
        "release_id": 71047721,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/jumphone/FitDevo/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jumphone/FitDevo/releases/71047721",
        "value": "https://api.github.com/repos/jumphone/FitDevo/releases/71047721",
        "zipball_url": "https://api.github.com/repos/jumphone/FitDevo/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jumphone",
          "type": "User"
        },
        "date_created": "2022-06-29T05:22:53Z",
        "date_published": "2022-07-01T02:42:14Z",
        "description": "The details of this version are described in our paper published in BIB 2022.",
        "html_url": "https://github.com/jumphone/FitDevo/releases/tag/v1.0.1",
        "name": "FitDevo v1.0.1",
        "release_id": 71034843,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/jumphone/FitDevo/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jumphone/FitDevo/releases/71034843",
        "value": "https://api.github.com/repos/jumphone/FitDevo/releases/71034843",
        "zipball_url": "https://api.github.com/repos/jumphone/FitDevo/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jumphone",
          "type": "User"
        },
        "date_created": "2022-06-15T07:35:20Z",
        "date_published": "2022-06-21T07:30:47Z",
        "description": "The first release of FitDevo.",
        "html_url": "https://github.com/jumphone/FitDevo/releases/tag/v1.0.0",
        "name": "FitDevo 1.0.0",
        "release_id": 69901992,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/jumphone/FitDevo/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jumphone/FitDevo/releases/69901992",
        "value": "https://api.github.com/repos/jumphone/FitDevo/releases/69901992",
        "zipball_url": "https://api.github.com/repos/jumphone/FitDevo/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements:",
        "type": "Text_excerpt",
        "value": "    R: 4.0.0+\n    Seurat: v4 (the original fitdevo is developed with Seurat v4)\n    qlcMatrix: 0.9.7\n\nFitDevo for Seurat v5: https://github.com/jumphone/FitDevo/blob/main/fitdevo_seurat5.R\n\nR: https://www.r-project.org/\n\nSeurat: https://satijalab.org/seurat/articles/install.html\n\nqlcMatrix: https://cran.r-project.org/web/packages/qlcMatrix/index.html\n\n    install.packages(\"qlcMatrix\")\n\nSeurat v4:\n\n    remotes::install_version(\"SeuratObject\", \"4.1.4\", repos = c(\"https://satijalab.r-universe.dev\", getOption(\"repos\")))\n    remotes::install_version(\"Seurat\", \"4.4.0\", repos = c(\"https://satijalab.r-universe.dev\", getOption(\"repos\")))\n\nSeurat v5:\n\n    install.packages(\"Seurat\") \n    \n\n\n</br>\n\n"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:31:12",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Demos:",
        "type": "Text_excerpt",
        "value": "* [Demo 1 - Infer developmental potential (DP) using expression matrix of scRNA-seq data](#demo-1---infer-developmental-potential-dp-using-expression-matrix-of-scrna-seq-data)\n* [Demo 2 - Build developmental potential field (DPF) and draw arrows](#demo-2---build-developmental-potential-field-dpf-and-draw-arrows--fitdevo--110-)\n\n</br>\n</br>\n</br>\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage:",
        "type": "Text_excerpt",
        "value": "    \n    source('https://github.com/jumphone/FitDevo/blob/main/fitdevo.R?raw=true') \n    # source('https://github.com/jumphone/FitDevo/blob/main/fitdevo_seurat5.R?raw=true')\n\n    fitdevo( MAT=MAT, BGW=BGW, NORM=TRUE, PCNUM=50 )\n    \nThe input of FitDevo includes two files: a BGW list and an expression matrix. The BGW list is provided by us, while the expression matrix is provided by users (should not be scaled). The row and column names of the expression matrix are genes and cell names, respectively. FitDevo can help users to normalize the raw read count by setting the \u201cNORM\u201d parameter to \u201cTRUE\u201d, or users can use \u201cLogNormalize\u201d function in Seurat to conduct normalization. The output of FitDevo is a vector containing the inferred DP of all cells.\n"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input:",
        "parent_header": [
          "Usage:"
        ],
        "type": "Text_excerpt",
        "value": "    MAT: expression matrix\n    BGW: binarized gene weight (BGW)\n    \n    BGW=readRDS(url('https://github.com/jumphone/FitDevo/blob/main/BGW.rds?raw=true'))\n    \n    NORM: whether to conduct normalization\n    PCNUM: number of PCs used to calculate sample-specific gene weight (SSGW)\n"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output:",
        "parent_header": [
          "Usage:"
        ],
        "type": "Text_excerpt",
        "value": "    A vector of inferred DP\n    \n</br>\n\n[Click back to the top](#)\n\n</br>\n</br>\n\n\n\n# Demos:\n\n</br>\n"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Demo 1 - Infer developmental potential (DP) using expression matrix of scRNA-seq data",
        "parent_header": [
          "Demos:"
        ],
        "type": "Text_excerpt",
        "value": "    # R 4.0.3 \n    \n    # Step 1. Load FitDevo \n    source('https://github.com/jumphone/FitDevo/blob/main/fitdevo.R?raw=true')\n    \n    # Step 2. Load data (the 1st sample in the testing dataset)\n    data1 = readRDS('1.rds')\n    MAT=data1$mat\n    CorrectDP=data1$tag\n    \n    # Step 3. Load BGW\n    BGW=readRDS(url('https://github.com/jumphone/FitDevo/blob/main/BGW.rds?raw=true'))\n    \n    # Step 4. Run FitDevo\n    DP=fitdevo(MAT=MAT, BGW=BGW, NORM=TRUE, PCNUM=50)\n    \n    # Step 5. Evaluate the performance of FitDevo\n    cor(DP, CorrectDP, method='spearman')  # 0.7980606\n\n\n</br>\n\n[Click back to the top](#)\n\n</br>\n</br>\n\n"
      },
      "source": "https://raw.githubusercontent.com/jumphone/fitdevo/main/README.md",
      "technique": "header_analysis"
    }
  ]
}