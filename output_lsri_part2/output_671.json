{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "Fusarium oxysporum Effector Clustering 2 (FoEC2)"
        ],
        "type": "Text_excerpt",
        "value": "van Dam, P., Fokkens, L., Schmidt, S. M., Linmans, J. H. J., Kistler, H. C., Ma, L.-J., & Rep, M. (2016). Effector profiles distinguish <I>formae speciales </I>of <I>Fusarium oxysporum</I>. Environmental Microbiology. http://doi.org/10.1111/1462-2920.13445\n\nBrenes Guallar, M. A., Fokkens, L., Rep, M., Berke, L., & van Dam, P. (2022). <I>Fusarium oxysporum</I> effector clustering version 2: An updated pipeline to infer host range. Frontiers in Plant Science. http://doi.org/10.3389/fpls.2022.1012688"
      },
      "source": "https://raw.githubusercontent.com/pvdam3/FoEC2/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pvdam3/FoEC2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-12T14:17:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-02T16:04:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fusarium oxysporum Effector Clustering version 2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9856358695951605,
      "result": {
        "original_header": "Fusarium oxysporum Effector Clustering 2 (FoEC2)",
        "type": "Text_excerpt",
        "value": "This pipeline can identify putative effectors in a provided set of *Fusarium oxysporum* genomes and show their presence/absence variation across all input genomes. For more details, please see [our paper](http://doi.org/10.3389/fpls.2022.1012688).\n \n"
      },
      "source": "https://raw.githubusercontent.com/pvdam3/FoEC2/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.983275818285086,
      "result": {
        "original_header": "Concept",
        "type": "Text_excerpt",
        "value": "**1. Putative effector identification (per genome)**\n  * Miniature impala(mimp) terminal inverted repeat (TIR) identification based on TIR consensus sequence.\n  * Determination of genome regions downstream of mimps/TIRs.\n  * Finding possible Open Reading Frames (ORFs) within these downstream regions by translating the sequence in three or six frames (default three frames) and finding the first Methionine (M) residue followed by a sequence of threshold length (default 10 amino acids) and a STOP codon/end of contig\n  * Update gene models (when possible) using [AUGUSTUS](http://bioinf.uni-greifswald.de/augustus/) gene prediction. \n  * Filter for secreted proteins with SignalP.\n  * Filter for size (default between 10 and 600 amino acids) and cysteine content (default 0 cysteines). \n**2. Duplicate effector candidates are removed:**\n  * A BLAST database is created from all the putative effectors (from all input genomes) and each of the putative effectors are BLASTed against this database using [DIAMOND](https://github.com/bbuchfink/diamond). The similarity among putative effectors is shown in their BLAST hits. Clusters are created with this information using [MCL](https://github.com/micans/mcl), thereby essentially marking redundancy.\n  * A Hidden Markov Model (HMM) profile is created per putative effector cluster using [HMMER](http://hmmer.org/). This profile captures the variability present in each cluster and is used to represent the cluster. \n**3. Identifying presence-absence patterns in the genomes:**\n  * A search for each putative effector HMM profile across all input genomes is conducted with HMMER's nHMMER. These hits, found in (`output/03.presenceabsence/00_genome_effector_hits.out`), are filtered by a minimum E-value and query coverage (default thresholds 10E-10 and 0.8 respectively). The total number of valid hits per genome is recorded. \n  * These values are stored in a table with the effectors on one axis and the genomes on the other.\n  * Putative effectors with excessive hits are filtered out (default threshold 20 hits for a single genome and 5 hits on average across all genomes). The final table can be seen at `output/03.presenceabsence/01_presence_absence.tsv`. \n**4. Visualization:**\n  * To discover which genomes are most alike in terms of effector pallette, the table is imported in an R script, which applies hierarchical clustering on the rows and columns. The clustering method can be selected in the RShiny App.\n  * Dendrograms representing this clustering can be visualized in the app, and their newick files can be downloaded.\n  * Multiple sequence alignments (MSAs) found in `output/03.presenceabsence/putative_effector_msas` can be visualized in the app.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pvdam3/FoEC2/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pvdam3/FoEC2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pvdam3/FoEC2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pvdam3/FoEC2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fusarium oxysporum Effector Clustering 2 (FoEC2)"
      },
      "source": "https://raw.githubusercontent.com/pvdam3/FoEC2/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pvdam3/FoEC2/main/foec_setup.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9539447618756114,
      "result": {
        "original_header": "Concept",
        "type": "Text_excerpt",
        "value": "The following steps are executed in this pipeline: \n"
      },
      "source": "https://raw.githubusercontent.com/pvdam3/FoEC2/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pvdam3/FoEC2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Peter van Dam\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/pvdam3/FoEC2/main/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FoEC2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "pvdam3"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 122567,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 27047,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2541,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pvdam3/FoEC2/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://snakemake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/pvdam3/FoEC2/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Fusarium oxysporum Effector Clustering 2 (FoEC2)"
        ],
        "type": "Text_excerpt",
        "value": "The pipeline relies a number of different 3rd party programs and libraries:\n* [Conda](https://docs.conda.io/en/latest/)\n* [Snakemake](https://snakemake.readthedocs.io/en/stable/getting_started/installation.html)\n* [Singularity](https://sylabs.io/guides/3.0/user-guide/quick_start.html#quick-installation-steps) (only required to run FoEC2 with a container - recommended for users experiencing problems with installing conda environments)\n* [SignalP](http://www.cbs.dtu.dk/cgi-bin/nph-sw_request?signalp) (only versions 4 and 5 are currently supported)\n* R with the following libraries installed:\n  * shiny\n  * shinythemes\n  * dendextend\n  * RColorBrewer\n  * pals\n  * pheatmap\n  * phylogram\n  * DT\n  * rhandsontable\n  * [msaR](https://zachcp.github.io/msaR/)\n  * grid\n  ```R\n  install.packages(c(\"shiny\", \"shinythemes\", \"dendextend\", \"RColorBrewer\", \"pals\", \"pheatmap\", \"phylogram\", \"DT\", \"rhandsontable\", \"msaR\", \"grid\"))\n  ```\n* Python with the following package installed:\n  * [BioPython](http://biopython.org/wiki/Download)\n"
      },
      "source": "https://raw.githubusercontent.com/pvdam3/FoEC2/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:33:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Fusarium oxysporum Effector Clustering 2 (FoEC2)"
        ],
        "type": "Text_excerpt",
        "value": "Please first make sure to have all the dependencies installed (see below).\nThis pipeline requires that the paths to the input genomes be in a specific configuration file. In order to facilitate this, the `foec_setup.sh` script automatically creates this config file. Usage, where `infolder` is the path to a directory which only contains the input genomes in FASTA format: \n```bash\n./foec_setup.sh -g [infolder]\n```\n\nFoEC2 can also be run with existing curated effectors. To do this, a FASTA file containing these sequences (`effectors`) can be provided to the effector flag. The pipeline will then skip the putative effector prediction steps. Usage:\n```bash\n./foec_setup.sh -g [infolder] -e [effectors]\n```\n\nType `./foec_setup.sh -h` for a detailed help page including options.\n\nMore configuration options for the pipeline are available in the config file [config/config.yaml](config/config.yaml). \n\nOnce all the genome configuration files are ready, the pipeline can be run. Usage:\n```bash\nsnakemake --use-conda --cores [N]\n```\n\nType `snakemake -h` for a detailed help page for more Snakemake related options.\n\nOnce the pipeline has finished, the output files can be visualized in the RShiny app (`app.R`). Usage (R):\n```R\nlibrary(shiny)\nrunApp(\"scripts/app.R\")\n```\n\nThe app will open at the 'Data' tab, where the output from the pipeline can be uploaded:\n* PAV table: the presence/absence variation table (`output/03.presenceabsence/01_presence_absence.tsv`)\n* Genome metadata table: extra information concerning genomes to include in the visualization (i.e. *formae speciales*, sample location, etc.). A template can be found at `config/visualization_config.csv` after running the pipeline.\n* Putative effector metadata table: extra information concerning putative effectors to include in the visualization (i.e. suspected SIX genes, other genes of interest). A template can be found at `config/visualization_config_effectors.csv` after running the pipeline.\n\nThe plots can be seen in the 'Plots' tab:\n* Heatmap: this plot depicts the presence / absence patterns of putative effectors across genomes.\n* Dendrograms: these dendrograms reflect those which are shown on each axis of the heatmap.\n* MSAs (Multiple Sequence Alignments): per putative effector cluster.\n"
      },
      "source": "https://raw.githubusercontent.com/pvdam3/FoEC2/main/README.md",
      "technique": "header_analysis"
    }
  ]
}