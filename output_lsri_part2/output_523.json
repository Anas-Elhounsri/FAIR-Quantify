{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hurraygong/MU3DSP"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-09T12:14:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-10T12:00:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Stability changes prediction tool using 3D structure profie"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.890599835327301,
      "result": {
        "original_header": "README",
        "type": "Text_excerpt",
        "value": "SCpre-seq, an end-to-end sequence-based tool using a residue level mutation-based 3D structure information to assess single point mutation effects on protein thermodynamic stability and applying to dingle-domain monomeric proteins. More information can be checked at the [tutorial](https://mu3dsp.readthedocs.io/en/latest/) and [webserver](http://101.42.149.84:8080/). \n"
      },
      "source": "https://raw.githubusercontent.com/hurraygong/MU3DSP/main/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://mu3dsp.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/hurraygong/MU3DSP/main/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hurraygong/MU3DSP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hurraygong/MU3DSP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hurraygong/MU3DSP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "README"
      },
      "source": "https://raw.githubusercontent.com/hurraygong/MU3DSP/main/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "## Installation\n\n### Clone the package\n\n```\ngit clone https://github.com/hurraygong/MU3DSP.git\ncd MU3DSP\n```\n\n### Install dependencies\n\n#### 1. Install HHsuite\n\nUsing conda install hhsuite. It is also can be installed by other methods shown on official website,  If you have installed, pass this step.\n```\nconda install -c conda-forge -c bioconda hhsuite\n```\nInstall HHsuite database.\n```\nmkdir HHsuitDB\ncd HHsuitDB\nwget http://wwwuser.gwdg.de/~compbiol/uniclust/2020_06/UniRef30_2020_06_hhsuite.tar.gz\nmkdir -p UniRef30_2020_06\ntar xfz UniRef30_2020_06_hhsuite.tar.gz -C ./UniRef30_2020_06\nrm UniRef30_2020_06_hhsuite.tar.gz\n```\n#### 2. Install DSSP\n\nUsing conda install DSSP programe (https://anaconda.org/salilab/dssp). It is also can be installed by other methods shown on official website,  If you have installed, pass this step.\n```\nconda install -c salilab dssp\n```\nThen to find the execute programe `mkdssp`. You can change the `mkdssp`\nto `dssp` using `cp` command by yourself.\n```\nwhereis mkdssp\n```\n#### 3.Install BLAST++\n\nInstall [BLAST++]( (https://anaconda.org/bioconda/blast)) using `conda`. To install this package with conda run one of the following:\n```\nconda install -c bioconda blast\nconda install -c bioconda/label/cf201901 blast\n```\nIt is also can be installed by other methods shown on official website,  If you have installed, pass this step.\n\nInstall BLAST++ database.\n```\nmkdir PsiblastDB/\ncd PsiblastDB\nwget https://ftp.ncbi.nlm.nih.gov/blast/db/swissprot.tar.gz\nwget https://ftp.ncbi.nlm.nih.gov/blast/db/swissprot.tar.gz.md5\ntar -zxvf swissprot.tar.gz\nrm swissprot.tar.gz\nrm swissprot.tar.gz.md5\n```\n\nThen you can proceed to the next step.\n"
      },
      "source": "https://raw.githubusercontent.com/hurraygong/MU3DSP/main/Docs/source/Installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Install HHsuite",
        "parent_header": [
          "README",
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Using conda install hhsuite. It is also can be installed by other methods shown on official website,  If you have installed, pass this step.\n```\nconda install -c conda-forge -c bioconda hhsuite\n```\nInstall HHsuite database.\n```\nmkdir HHsuitDB\ncd HHsuitDB\nwget http://wwwuser.gwdg.de/~compbiol/uniclust/2020_06/UniRef30_2020_06_hhsuite.tar.gz\nmkdir -p UniRef30_2020_06\ntar xfz UniRef30_2020_06_hhsuite.tar.gz -C ./UniRef30_2020_06\nrm UniRef30_2020_06_hhsuite.tar.gz\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/hurraygong/MU3DSP/main/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Install DSSP",
        "parent_header": [
          "README",
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Using conda install DSSP programe (https://anaconda.org/salilab/dssp). It is also can be installed by other methods shown on official website,  If you have installed, pass this step.\n```\nconda install -c salilab dssp\n```\nThen to find the execute programe `mkdssp`. You can change the `mkdssp`\nto `dssp` using `cp` command by yourself.\n```\nwhereis mkdssp\n```"
      },
      "source": "https://raw.githubusercontent.com/hurraygong/MU3DSP/main/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.Install BLAST++",
        "parent_header": [
          "README",
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Install [BLAST++]( (https://anaconda.org/bioconda/blast)) using `conda`. To install this package with conda run one of the following:\n```\nconda install -c bioconda blast\nconda install -c bioconda/label/cf201901 blast\n```\nIt is also can be installed by other methods shown on official website,  If you have installed, pass this step.\n\nInstall BLAST++ database.\n```\nmkdir PsiblastDB/\ncd PsiblastDB\nwget https://ftp.ncbi.nlm.nih.gov/blast/db/swissprot.tar.gz\nwget https://ftp.ncbi.nlm.nih.gov/blast/db/swissprot.tar.gz.md5\ntar -zxvf swissprot.tar.gz\nrm swissprot.tar.gz\nrm swissprot.tar.gz.md5\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/hurraygong/MU3DSP/main/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999963823996,
      "result": {
        "original_header": "Clone the package",
        "type": "Text_excerpt",
        "value": "```\ngit clone https://github.com/hurraygong/MU3DSP.git\ncd MU3DSP\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/hurraygong/MU3DSP/main/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hurraygong/MU3DSP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MU3DSP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hurraygong"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 49285,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hurraygong/MU3DSP/main/Readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3.Install BLAST++",
        "parent_header": [
          "README",
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Install [BLAST++]( (https://anaconda.org/bioconda/blast)) using `conda`. To install this package with conda run one of the following:\n```\nconda install -c bioconda blast\nconda install -c bioconda/label/cf201901 blast\n```\nIt is also can be installed by other methods shown on official website,  If you have installed, pass this step.\n\nInstall BLAST++ database.\n```\nmkdir PsiblastDB/\ncd PsiblastDB\nwget https://ftp.ncbi.nlm.nih.gov/blast/db/swissprot.tar.gz\nwget https://ftp.ncbi.nlm.nih.gov/blast/db/swissprot.tar.gz.md5\ntar -zxvf swissprot.tar.gz\nrm swissprot.tar.gz\nrm swissprot.tar.gz.md5\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/hurraygong/MU3DSP/main/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:01:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "README"
        ],
        "type": "Text_excerpt",
        "value": "If provide MSA files with hhm format from HHblits. It can run with:\n```python\n\n  python MU3DSP.py -p residueposition -w wildtyperesidue -m mutationresidue -o -s sequencepath --pdbpath pdbfilepath --dssppath dsspfilepath --dsspbin mkdssp-path --psiblastbin  psiblast-path --hhblitsbin hhblits-path --psiblastout psioutfile-path --psiblastpssm pssmoutfile-path --psiblastdb swissprot-path --hhblitshhm hhmoutfile-path --hhmfile HHblits-hhm-file --printout\n\n```\nFor example:\n```python\n\n    python MU3DSP.py -p 9 -w Q -m H -s ./examples/SEQ/2ocj_A.fasta --pdbpath ./examples/PDBtest --dssppath ./examples/DSSPtest --dsspbin dssp --psiblastbin  psiblast --hhblitsbin hhmake --psiblastout ./examples/psiout --psiblastpssm ./examples/pssmout --psiblastdb ./PsiblastDB/swissprot --hhblitshhm ./examples/hhmout --outfilepath ./examples/2ocj_Q9H.npy --hhmfile /root/MU3DSP/examples/2ocj_A.hhm --printout\n```\n\nIf provide fasta files and HHblits is accessable.\n\n```python\n\n    python MU3DSP.py -p 9 -w Q -m Y --hhsuite True --outfilepath /root/MU3DSP/tmp/2ocj_A_Q9Y.npy -s /root/MU3DSP/tmp/2ocj_A.fasta --G2s --hhmfile /root/MU3DSP/examples/2ocj_A.hhm --pdbpath ./examples/PDBtest --dssppath ./examples/DSSPtest --dsspbin mkdssp --psiblastbin psiblast --psiblastout ./examples/psiout --psiblastpssm ./examples/pssmout --psiblastdb ../blastDB/swissprot --hhblitsdb ../HHblitDB/UniRef30_2020_06 --hhblitsout ./examples/hhblitout --hhblitshhm ./examples/hhmout -o --printout\n\n```\n\nBecause the mutation-based structures are real-time, the DDG will changes with the structures changes and G2s update, we trained MU3DSP-S1676 with S1676 dataset at 12 Sep,2020 and MU3DSP-S5296 on 2 Nov,2022."
      },
      "source": "https://raw.githubusercontent.com/hurraygong/MU3DSP/main/Readme.md",
      "technique": "header_analysis"
    }
  ]
}