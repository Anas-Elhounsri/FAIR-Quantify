{
  "application_domain": [
    {
      "confidence": 39.41,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/broadinstitute/keras-rcnn"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-04-25T13:32:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-31T12:48:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Keras package for region-based convolutional neural networks (RCNNs)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9754980512034215,
      "result": {
        "original_header": "Keras-RCNN",
        "type": "Text_excerpt",
        "value": "keras-rcnn is *the* Keras package for region-based convolutional\nneural networks.\n \n"
      },
      "source": "https://raw.githubusercontent.com/broadinstitute/keras-rcnn/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9954869201285228,
      "result": {
        "original_header": "External Data",
        "type": "Text_excerpt",
        "value": "The data is made up of a list of dictionaries corresponding to images.  \n* For each image, add a dictionary with keys 'image', 'objects'\n    * 'image' is a dictionary, which contains keys 'checksum', 'pathname', and 'shape'\n        * 'checksum' is the md5 checksum of the image\n        * 'pathname' is the pathname of the image, put in full pathname\n        * 'shape' is a dictionary with keys 'r', 'c', and 'channels'\n            * 'c': number of columns\n            * 'r': number of rows\n            * 'channels': number of channels\n    * 'objects' is a list of dictionaries, where each dictionary has keys 'bounding_box', 'category'\n        * 'bounding_box' is a dictionary with keys 'minimum' and 'maximum'\n            * 'minimum': dictionary with keys 'r' and 'c'\n                * 'r': smallest bounding box row\n                * 'c': smallest bounding box column\n            * 'maximum': dictionary with keys 'r' and 'c'\n                * 'r': largest bounding box row\n                * 'c': largest bounding box column\n        * 'category' is a string denoting the class name \nSuppose this data is save in a file called training.json. To load data, \n"
      },
      "source": "https://raw.githubusercontent.com/broadinstitute/keras-rcnn/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/broadinstitute/keras-rcnn/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 222
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/broadinstitute/keras-rcnn/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "broadinstitute/keras-rcnn"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Keras-RCNN"
      },
      "source": "https://raw.githubusercontent.com/broadinstitute/keras-rcnn/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9900073303079014,
      "result": {
        "original_header": "Keras-RCNN",
        "type": "Text_excerpt",
        "value": ".. image:: https://travis-ci.org/broadinstitute/keras-rcnn.svg?branch=master\n    :target: https://travis-ci.org/broadinstitute/keras-rcnn \n.. image:: https://codecov.io/gh/broadinstitute/keras-rcnn/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/broadinstitute/keras-rcnn \n"
      },
      "source": "https://raw.githubusercontent.com/broadinstitute/keras-rcnn/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.818177284946629,
      "result": {
        "original_header": "Getting Started",
        "type": "Text_excerpt",
        "value": ".. code:: python \n"
      },
      "source": "https://raw.githubusercontent.com/broadinstitute/keras-rcnn/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9788814111338325,
      "result": {
        "original_header": "Slack",
        "type": "Text_excerpt",
        "value": "We\u2019ve been meeting in the #keras-rcnn channel on the keras.io Slack\nserver.  \nYou can join the server by inviting yourself from the following website: \nhttps://keras-slack-autojoin.herokuapp.com/\n \n"
      },
      "source": "https://raw.githubusercontent.com/broadinstitute/keras-rcnn/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8784716924798112,
      "result": {
        "original_header": "External Data",
        "type": "Text_excerpt",
        "value": "Suppose this data is save in a file called training.json. To load data, \n    import json \n    with open('training.json') as f:\n        d = json.load(f) \n"
      },
      "source": "https://raw.githubusercontent.com/broadinstitute/keras-rcnn/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/broadinstitute/keras-rcnn/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cntk, deep-learning, image-segmentation, object-detection, tensorflow, theano"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The BSD 3-Clause License\n\nCopyright \u00a9 2017-2019 Broad Institute, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    1.  Redistributions of source code must retain the above copyright notice,\n        this list of conditions and the following disclaimer.\n\n    2.  Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n\n    3.  Neither the name of the Broad Institute, Inc. nor the names of its\n        contributors may be used to endorse or promote products derived from\n        this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED \u201cAS IS.\u201d  BROAD MAKES NO EXPRESS OR IMPLIED\nREPRESENTATIONS OR WARRANTIES OF ANY KIND REGARDING THE SOFTWARE AND\nCOPYRIGHT, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, CONFORMITY WITH ANY DOCUMENTATION,\nNON-INFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, WHETHER OR NOT\nDISCOVERABLE. IN NO EVENT SHALL BROAD, THE COPYRIGHT HOLDERS, OR CONTRIBUTORS\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO PROCUREMENT OF SUBSTITUTE\nGOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF, HAVE REASON TO KNOW, OR IN\nFACT SHALL KNOW OF THE POSSIBILITY OF SUCH DAMAGE.\n\nIf, by operation of law or otherwise, any of the aforementioned warranty\ndisclaimers are determined inapplicable, your sole remedy, regardless of the\nform of action, including, but not limited to, negligence and strict\nliability, shall be replacement of the software with an updated version if one\nexists.\n"
      },
      "source": "https://raw.githubusercontent.com/broadinstitute/keras-rcnn/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "keras-rcnn"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "broadinstitute"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 217977,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/broadinstitute/keras-rcnn/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "0x00b1",
          "type": "User"
        },
        "date_created": "2017-06-26T17:01:08Z",
        "date_published": "2017-06-26T17:01:33Z",
        "html_url": "https://github.com/broadinstitute/keras-rcnn/releases/tag/v0.0.2",
        "name": "v0.0.2",
        "release_id": 6838670,
        "tag": "v0.0.2",
        "tarball_url": "https://api.github.com/repos/broadinstitute/keras-rcnn/tarball/v0.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/broadinstitute/keras-rcnn/releases/6838670",
        "value": "https://api.github.com/repos/broadinstitute/keras-rcnn/releases/6838670",
        "zipball_url": "https://api.github.com/repos/broadinstitute/keras-rcnn/zipball/v0.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "0x00b1",
          "type": "User"
        },
        "date_created": "2017-05-31T21:36:42Z",
        "date_published": "2017-06-02T20:39:50Z",
        "html_url": "https://github.com/broadinstitute/keras-rcnn/releases/tag/v0.0.1",
        "name": "v0.0.1",
        "release_id": 6590767,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/broadinstitute/keras-rcnn/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/broadinstitute/keras-rcnn/releases/6590767",
        "value": "https://api.github.com/repos/broadinstitute/keras-rcnn/releases/6590767",
        "zipball_url": "https://api.github.com/repos/broadinstitute/keras-rcnn/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Keras-RCNN"
        ],
        "type": "Text_excerpt",
        "value": "Python 3\n\nkeras-resnet==0.2.0\n\nnumpy==1.16.2\n\ntensorflow==1.13.1\n\nKeras==2.2.4\n\nscikit-image==0.15.0\n\n"
      },
      "source": "https://raw.githubusercontent.com/broadinstitute/keras-rcnn/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:28:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 555
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "Keras-RCNN"
        ],
        "type": "Text_excerpt",
        "value": "Let\u2019s read and inspect some data:\n\n.. code:: python\n\n    training_dictionary, test_dictionary = keras_rcnn.datasets.shape.load_data()\n\n    categories = {\"circle\": 1, \"rectangle\": 2, \"triangle\": 3}\n\n    generator = keras_rcnn.preprocessing.ObjectDetectionGenerator()\n\n    generator = generator.flow_from_dictionary(\n        dictionary=training_dictionary,\n        categories=categories,\n        target_size=(224, 224)\n    )\n\n    validation_data = keras_rcnn.preprocessing.ObjectDetectionGenerator()\n\n    validation_data = validation_data.flow_from_dictionary(\n        dictionary=test_dictionary,\n        categories=categories,\n        target_size=(224, 224)\n    )\n\n    target, _ = generator.next()\n    \n    target_bounding_boxes, target_categories, target_images, target_masks, target_metadata = target\n\n    target_bounding_boxes = numpy.squeeze(target_bounding_boxes)\n\n    target_images = numpy.squeeze(target_images)\n\n    target_categories = numpy.argmax(target_categories, -1)\n\n    target_categories = numpy.squeeze(target_categories)\n\n    keras_rcnn.utils.show_bounding_boxes(target_images, target_bounding_boxes, target_categories)\n\n\nLet\u2019s create an RCNN instance:\n\n.. code:: python\n\n    model = keras_rcnn.models.RCNN((224, 224, 3), [\"circle\", \"rectangle\", \"triangle\"])\n\nand pass our preferred optimizer to the `compile` method:\n\n.. code:: python\n\n    optimizer = keras.optimizers.Adam(0.0001)\n\n    model.compile(optimizer)\n\nFinally, let\u2019s use the `fit_generator` method to train our network:\n\n.. code:: python\n\n    model.fit_generator(    \n        epochs=10,\n        generator=generator,\n        validation_data=validation_data\n    )\n"
      },
      "source": "https://raw.githubusercontent.com/broadinstitute/keras-rcnn/master/README.rst",
      "technique": "header_analysis"
    }
  ]
}