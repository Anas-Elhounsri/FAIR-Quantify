{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/veg/RASCL"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-21T16:22:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-28T16:27:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9986437913979161,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "This application is designed to use molecular sequence data from genotypically distinct viral lineages to identify distinguishing features and evolution within lineages. Using whole genome sequences, a \"query\" set of sequences will be compared to against a globally diverse set of \"background\" sequences. The background data set contains globally circulating viral sequences, and the query data set is the set of sequences you want to compare. The application uses a number of open-source tools, as well as selection analysis tools from [HyPhy](hyphy.org), and assembles the results from the analysis into JSON files which can then be visualized with our full feature [Observable notebook]. We provide a list of selected results for several SARS-CoV-2 clades at (https://observablehq.com/@aglucaci/rascl)\n \n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9230595384125091,
      "result": {
        "original_header": "Visualization",
        "type": "Text_excerpt",
        "value": "At the completion of the pipeline, the JSON outputs (Summary.json and Annotation.json) will be generated. These can be ingested into our full feature [Observable Notebook](https://observablehq.com/@aglucaci/rascl_latest). We suggest that users make a free account on ObservableHQ and fork this notebook, which allows the user to point the notebook to their data. \nThe version of the notebook at https://observablehq.com/@spond/sars-cov-2-clades allows one to upload summary and annotation JSON files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9801683076553216,
      "result": {
        "original_header": "Exploring results with our interactive notebook",
        "type": "Text_excerpt",
        "value": "We provide visualizations, an alignment viewer, site-level phylogenetic trees, and summary results and full tables in our interactive notebooks. You can explore all of the results for a particular gene through the dropdown box. Or review full results for a particular site of interest (see below). \n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8531301030534436,
      "result": {
        "original_header": "Galaxy workflow",
        "type": "Text_excerpt",
        "value": "We also provide an alternative way to use RASCL within the [Galaxy](https://galaxy.hyphy.org) ecosystem. User accounts are free to sign up. \n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9844294325418299,
      "result": {
        "original_header": "Advanced Configuration",
        "type": "Text_excerpt",
        "value": "The `config.json` file also contains a number of advanced features corresponding to the parameters we use for downsampling viral gene sequences. Specificially, from the total number of query or background sequences we aim to downsample to the `max_background` and `max_query` sequences. These can be modified by the user in order to capature an additional number of sequences from their input. We also have two additional values for `threshold_query` and `threshold_background` which correspond to the initial genetic distance threshold we apply during downsampling. \n \n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9726063567132988,
      "result": {
        "original_header": "Advanced Configuration for HPC environment and downsampling",
        "type": "Text_excerpt",
        "value": "If you want to use more cores, adjust the values in the `cluster.json` file. This can be used to distribute jobs to run across the cluster and to specify a queue. The `cluster` variable refers to the workload manager. The `nodes` variable is a request for resource allocation from the server, in this case it refers to the number of nodes. The `ppn` variable is a request for resource allocation from the server, in this case it refers to the number of processors per node. The `name` variable is a specification to submit the jobs for the RASCL application to a specific queue. These have different names and priorities, please refer to your local system administrator for more information. We have added an additional variable `walltime` which is a request for a certain period of time for resource allocation from the server. We provide an example HPC bash script to run the analysis in `run_HPC.sh` which is designed to run on the Temple University computing cluster. This file can be modified to run in your own computing environment. In the `cluster.json` specify the name of the queue on your system, along with the computing resources to be used.\n \n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/veg/RASCL/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/veg/RASCL/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "veg/RASCL"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/veg/RASCL/main/run_Silverback.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/veg/RASCL/main/run_LOCAL.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/veg/RASCL/main/run_HPC.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/veg/RASCL/main/scripts/cleaner.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/veg/RASCL/main/scripts/process_json.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/veg/RASCL/main/scripts/annotate.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.imgur.com/Da3p3x0.gif"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "To install (Conda-based) -- Steps necessary to complete before running",
        "parent_header": [
          "RASCL: RAPID ASSESSMENT OF SELECTION IN CLADES THROUGH MOLECULAR SEQUENCE ANALYSIS",
          "Installation and dependencies (Conda-based)"
        ],
        "type": "Text_excerpt",
        "value": "1. `git clone https://github.com/veg/RASCL.git`\n2. `cd RASCL`\n3. `conda env create -f environment.yml`.  This will create a conda environment called (RASCL) with the necessary dependencies.\n4. At this point, run `conda activate RASCL` and your environment will be ready to go.\n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.999695174980066,
      "result": {
        "original_header": "Visualization",
        "type": "Text_excerpt",
        "value": "The version of the notebook at https://observablehq.com/@spond/sars-cov-2-clades allows one to upload summary and annotation JSON files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9058010648033485,
      "result": {
        "original_header": "Testing on a singular gene",
        "type": "Text_excerpt",
        "value": "If you want to run the script on a singular gene instead of the entire SARS-CoV-2 genome, you can go into the Snakemake file (`Snakefile`), comment out line 58, 59, 60, and 61. Uncomment out line 64 and input the gene that you want to run (from the `gene` list).\n  \n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/veg/RASCL/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 iGEM/UCSD evolutionary biology and bioinformatics group\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RASCL"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "veg"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 176607,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7212,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HyPhy",
        "size": 5740,
        "type": "Programming_language",
        "value": "HyPhy"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/veg/RASCL/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Environment dependencies",
        "parent_header": [
          "RASCL: RAPID ASSESSMENT OF SELECTION IN CLADES THROUGH MOLECULAR SEQUENCE ANALYSIS",
          "Conda-independent Installation (utilizes a python `venv`, unless you want to install system-wide, then omit step 1)"
        ],
        "type": "Text_excerpt",
        "value": "This application is currently designed to run in an HPC environment.\n\nThere is an assumption that the freely available [Anaconda](https://anaconda.org/) software is installed on your machine.\n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "To install (Conda-based) -- Steps necessary to complete before running",
        "parent_header": [
          "RASCL: RAPID ASSESSMENT OF SELECTION IN CLADES THROUGH MOLECULAR SEQUENCE ANALYSIS",
          "Installation and dependencies (Conda-based)"
        ],
        "type": "Text_excerpt",
        "value": "1. `git clone https://github.com/veg/RASCL.git`\n2. `cd RASCL`\n3. `conda env create -f environment.yml`.  This will create a conda environment called (RASCL) with the necessary dependencies.\n4. At this point, run `conda activate RASCL` and your environment will be ready to go.\n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuration settings -- Steps necessary to complete before running",
        "parent_header": [
          "RASCL: RAPID ASSESSMENT OF SELECTION IN CLADES THROUGH MOLECULAR SEQUENCE ANALYSIS",
          "Installation and dependencies (Conda-based)"
        ],
        "type": "Text_excerpt",
        "value": "The user input data (which consists of the clade of interest downloaded as a FASTA file of viral whole genome's) should be stored in the `./data}` subdirectory. We provide demo data for an test-run using the sequences in `data/Example`. These correspond to a set of \"background\" pre-Alpha variant set of sequences `data/Example/Background-preAlpha.fasta` and a \"query\" set of sequences corresponding to Alpha variant sequences `data/Example/Query-Alpha.fasta`\n\nThe Label variable corresponds to your viral clade of interest (e.g. \"B.1.1.7\") and will be used for annotation. While the data is stored in ./data/Example1 the label for that data is B.1.1.7. The \"label\" of the subdirectory within ./data does not matter. From your working directory:\n\n1. `mkdir data/{Label}`\n2. Place your viral clade of interest fasta file within the \"data\" directory.\n3. In the `config.json` change the following:\n       The `Label` variable corresponds to a tag for your clade of interest (e.g. \"B.1.1.7\"). \n              Make sure to include the `\"` around your label. \n       The `Background_WholeGenomeSeqs` variable to correspond to your query whole genome sequences (e.g. \"Example1/Background-preAlpha.fasta\")\n               Include the relative path as if you were within the working directory\n       The `Query_WholeGenomeSeqs` variable to correspond to your query whole genome sequences (e.g. \"Example1/Query-Alpha.fasta\")\n              Include the relative path as if you were within the working directory\n\n4. The `cluster.json` file can be modified for your computing environment. If you want to use more cores, adjust the values in this file. This can be used to distribute jobs to run across the cluster and to specify a queue. The `cluster` variable refers to the workload manager. The `nodes` variable is a request for resource allocation from the server, in this case it refers to the number of nodes. The `ppn` variable is a request for resource allocation from the server, in this case it refers to the number of processors per node. The `name` variable is a specification to submit the jobs for the RASCL application to a specific queue. These have different names and priorities, please refer to your local system administrator for more information. We have added an additional variable `walltime` which is a request for a certain period of time for resource allocation from the server.\n\n*Notes for running on your local machine.* If you have the computational ability to parallelize jobs across more than one processor, then you can adjust the `ppn` variable (processors per node). Starting with 1 `ppn` is a good place to start, as some computations can take up quite a bit of compute power. The remaining variables within this file are not relevant to a local run, so they can be left alone (see Advanced Configurations for more information).\n\n5. Within the `run_LOCAL.sh` file (within the RASCL directory), change the `--jobs` parameter, to reflect the number of jobs you want to parallelize at one time. Again, much like the `ppn` variable, starting with 1 is a good idea.\n\nAt this point, your configuration settings are set.\n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the analysis.",
        "parent_header": [
          "RASCL: RAPID ASSESSMENT OF SELECTION IN CLADES THROUGH MOLECULAR SEQUENCE ANALYSIS",
          "Installation and dependencies (Conda-based)"
        ],
        "type": "Text_excerpt",
        "value": "When in the `RASCL` working directory:\n1. `bash ./run_HPC.sh` for running on a high performance computing server\n2. `bash ./run_LOCAL.sh` for running on your local machine\n\nThe results of running this application will be placed in the `results/{Label}` subdirectory. This will contain a new folder with the name of of your clade i.e. the `\"Label\"` variable from the `config.json`. We will store all intermediate files and JSON results in this subdirectory. However, they are not tracked by this GitHub repository.\n\nAt the conclusion of the run, the selection output files (BGM, MEME, FEL, SLAC, BUSTED[S], PRIME, FADE, RELAX, and Contrast-FEL, etc) will be aggregated into two JSON files (Summary.json and Annotation.json) for an Observable notebook to ingest. At this point, the user can use our visualizations to investigate the nature and extent of selective forces acting on viral genes within the clade of interest.\n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the analysis",
        "parent_header": [
          "RASCL: RAPID ASSESSMENT OF SELECTION IN CLADES THROUGH MOLECULAR SEQUENCE ANALYSIS"
        ],
        "type": "Text_excerpt",
        "value": "We provide an example HPC bash script to run the analysis in `run_Silverback.sh` which is designed to run on the Temple University computing cluster. This file can be modified to run in your own computing environment. In the `cluster.json` specify the name of the queue on your system, along with the computing resources to be used.\n\nNote, that in some cases not all of the pipeline steps will complete (e.g. insufficient sequences to run analyses on all gene segments). In this case please run, from the top RASCL directory, (with the value of `Label` from `config.json`, and `WD` corresponding to the working directory.\n\n```\nbash scripts/process_json.sh {WD} {Label}\n```\n\nThe results of the analysis will be placed into the `results/Label` directory as `{Label}_summary.json` and `{Label}_annotation.json`.\n\nSee `Visualization` section for next steps on how to use our interactive notebook.\n"
      },
      "source": "https://raw.githubusercontent.com/veg/RASCL/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 14:01:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}