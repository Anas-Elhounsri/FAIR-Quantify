{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lennylv/iHMnBS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-20T02:35:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-20T02:36:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The source code of paper 'Identifying modifications on DNA-bound histones with joint deep learning of multiple binding sites in DNA sequence'"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description of the data",
        "parent_header": [
          "iHMnBS"
        ],
        "type": "Text_excerpt",
        "value": "npz files can be loaded as:\n\n```\nimport numpy as np\nnp.load(file, allow_pickle=True)\n```\n\nEach data entry includes five parts, the key and the meaning of the corresponding value are as follows:\n\n- dna: dna sequence consisting of four bases (A\\T\\C\\G)\n- dnase: dnase values corresponding to the bases in the dna sequence\n- tlabel: labelling of data under the iHMnBS setting\n- label: labelling of data under the DeepHistone setting\n- peaks: the location of peaks in ChIP-seq data, and the encoding for histone modification that occurs in this region\n"
      },
      "source": "https://raw.githubusercontent.com/lennylv/iHMnBS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description of the code running",
        "parent_header": [
          "iHMnBS"
        ],
        "type": "Text_excerpt",
        "value": "You can get the model up and running simply by running the `main.py` file with the following command:\n\n```\npython main.py\n```\n\nFor the data input, you just need to fill the first argument of the `get_fn` function in the `main` function with your data path in the `main.py` file. \n\nThe subsequent code in `main` function deals with the slicing of the data when we train the model. As the name implies, `train_valid_set` and `test_set` represent the training set and test set respectively, and later `train_set` and `valid_set` subdivide the training set into a set for training and a set for validation. This part of the code used for data segmentation can be commented out as appropriate when you test the code.\n\nAny more questions please let me know: 20204227065@stu.suda.edu.cn\n"
      },
      "source": "https://raw.githubusercontent.com/lennylv/iHMnBS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9845194068016764,
      "result": {
        "original_header": "iHMnBS",
        "type": "Text_excerpt",
        "value": "The source code of paper 'Identifying modifications on DNA-bound histones with joint deep learning of multiple binding sites in DNA sequence'\n \n"
      },
      "source": "https://raw.githubusercontent.com/lennylv/iHMnBS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lennylv/iHMnBS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lennylv/iHMnBS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lennylv/iHMnBS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iHMnBS"
      },
      "source": "https://raw.githubusercontent.com/lennylv/iHMnBS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lennylv/iHMnBS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iHMnBS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lennylv"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 25292,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lennylv/iHMnBS/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Description of the code running",
        "parent_header": [
          "iHMnBS"
        ],
        "type": "Text_excerpt",
        "value": "You can get the model up and running simply by running the `main.py` file with the following command:\n\n```\npython main.py\n```\n\nFor the data input, you just need to fill the first argument of the `get_fn` function in the `main` function with your data path in the `main.py` file. \n\nThe subsequent code in `main` function deals with the slicing of the data when we train the model. As the name implies, `train_valid_set` and `test_set` represent the training set and test set respectively, and later `train_set` and `valid_set` subdivide the training set into a set for training and a set for validation. This part of the code used for data segmentation can be commented out as appropriate when you test the code.\n\nAny more questions please let me know: 20204227065@stu.suda.edu.cn\n"
      },
      "source": "https://raw.githubusercontent.com/lennylv/iHMnBS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:34:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}