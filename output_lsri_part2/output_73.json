{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing merqury",
        "parent_header": [
          "Merqury"
        ],
        "type": "Text_excerpt",
        "value": "Please use this [paper](https://doi.org/10.1186/s13059-020-02134-9) to cite Merqury:\n\nRhie, A., Walenz, B.P., Koren, S. et al. Merqury: reference-free quality, completeness, and phasing assessment for genome assemblies. Genome Biol 21, 245 (2020). https://doi.org/10.1186/s13059-020-02134-9\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/marbl/merqury"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-30T02:15:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-27T11:53:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "k-mer based assembly evaluation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.988205334195246,
      "result": {
        "original_header": "Evaluate genome assemblies with k-mers and more",
        "type": "Text_excerpt",
        "value": "Often, genome assembly projects have illumina whole genome sequencing reads available for the assembled individual.<br>\nThe k-mer spectrum of this read set can be used for independently evaluating assembly quality without the need of a high quality reference.<br>\nMerqury provides a set of tools for this purpose.\n \n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9101133087062123,
      "result": {
        "original_header": "Outputs from each modules",
        "type": "Text_excerpt",
        "value": "* `eval/spectra_cn.sh`: k-mer completeness, qv, spectra-cn and spectra-asm plots, asm-only `.bed` and `.tdf` for tracking errors\n* `eval/qv.sh`: just get the qv stats and quit.\n* `trio/spectra_hap.sh`: hap-mer level spectra-cn plots, hap-mer completeness\n* `trio/hap_blob.sh`: blob plots of the hap-mers in each contg/scaffold\n* `trio/phase_block.sh`: phase block statistics, phase block N* plots, hap-mer tracks (`.bed` and `.tdf` files)\n* `trio/block_n_stats.sh`: continuity plots (phase block N* or NG* plots, phase block vs. contig/scaffold plots)\n* `trio/switch_error.sh`: this is run part of `phase_blck.sh`, however can be re-run with desired short-range switch parameters. Run `trio/block_n_stats.sh` along with it to get the associated plots.\n \n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9173603143710597,
      "result": {
        "original_header": "Available pre-built meryl dbs",
        "type": "Text_excerpt",
        "value": "Meryl dbs from Illumina WGS and hapmers are available [here](https://obj.umiacs.umd.edu/marbl_publications/merqury/index.html) for\n* A. thaliana COL-0 x CVI-0 F1\n* NA12878 (HG001)\n* HG002\n \n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/marbl/merqury/wiki"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/marbl/merqury/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/marbl/merqury/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "marbl/merqury"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Merqury"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/_submit_hapmers.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/_submit_split.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/merqury.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/_submit_merqury.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/best_k.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/_submit_build_10x.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/_submit_trio_exclude.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/_submit_build_split.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/_submit_build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/merqury-mash.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/diff.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/split_ont_fa.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/split.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/split_ont.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/filt.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/union_sum.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/count.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/concat_splits.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/split_10x.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/split_hifi.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/intersect.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/build/count_10x.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/eval/spectra-cn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/eval/qv.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/eval/read_multiplicity.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/eval/false_duplications.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/eval/per_seq_qv.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/eval/asm_multiplicity.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/eval/false_duplications_track.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/util/util.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/util/bed_to_bigwig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/plot/to_hist_for_plotting.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/trio/assign_reads.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/trio/exclude_reads.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/trio/hap_blob.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/trio/hapmers_to_bigwig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/trio/phase_block.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/trio/block_n_stats.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/trio/hapmers.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/trio/switch_error.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/trio/spectra-hap.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/trio/hamming_error.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/trio/phase_block/build_jar.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Previous Releases",
        "parent_header": [
          "Merqury",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The v1.3 Merqury is compatable with Meryl v1.3, however does not support homopolymer-compressed kmers. In addition, multiple issues were fixed (e.g. use of large k-mers, better memory utilization, minor bugs in the logs etc.) since then. Therefore, we recommend to use the latest Meryl and Merqury. The Conda version below is currently deploying v1.3.\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Direct installation",
        "parent_header": [
          "Merqury",
          "Installation",
          "Previous Releases"
        ],
        "type": "Text_excerpt",
        "value": "1. Get a working [Meryl](https://github.com/marbl/meryl) in your PATH\n\nDownload Meryl release: https://github.com/marbl/meryl/releases/tag/v1.3\n```shell\ntar -xJf meryl-1.3.*.tar.xz\ncd meryl-1.3/bin\nexport PATH=$pwd:$PATH\n```\n\nIf the binary doesn't work, download the source and compile:\n```shell\ncd meryl/src\nmake -j 24\nexport PATH=/path/to/meryl/\u2026/bin:$PATH\n```\nSee if we get help message with `meryl`.\n\n2. Download the release version and set env variable `$MERQURY`\n```shell\nwget https://github.com/marbl/merqury/archive/v1.3.tar.gz\ntar -zxvf v1.3.tar.gz\ncd merqury-1.3\nexport MERQURY=$PWD\n```\nAdd the \u201cexport\u201d part to your environment for `meryl` and `MERQURY` (~/.bash_profile or ~/.profile).<br>\nAdd installation dir paths for `bedtools` and `samtools` to your environment.<br>\n`source` it.\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Through Conda",
        "parent_header": [
          "Merqury",
          "Installation",
          "Previous Releases"
        ],
        "type": "Text_excerpt",
        "value": "Thanks to @EdHarry, a conda recipe is now available: https://anaconda.org/bioconda/merqury <br>\nOn a new conda environment, run:\n```shell\nconda install -c conda-forge -c bioconda merqury\n```\n\nOr, if you have a different version of jdk installed or want to have a separate conda environnment for merqury:\n```shell\nconda create -n merqury -c conda-forge -c bioconda merqury openjdk=11\n```\n\nYou will then need to activate the merqury environment before using it with:\n```shell\nconda activate merqury\n```\n\nTest running \n```Shell\nRscript $MERQURY/plot/plot_spectra_cn.R --help\n```\n\nIn case R complains for version mismatches of the R packages, try\n```Shell\nconda update --all\n```\nIt seems like R in conda isn't maintained anymore. Try to modify channel priority in `.condarc`.\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Prepare meryl dbs (<a href=\"https://github.com/marbl/merqury/wiki/1.-Prepare-meryl-dbs\">details</a>)",
        "parent_header": [
          "Merqury"
        ],
        "type": "Text_excerpt",
        "value": "1. Get the right k size\n2. Build k-mer dbs with meryl\n3. Build hap-mers for trios\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/marbl/merqury/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n  PUBLIC DOMAIN NOTICE\n\n  This software is \"United States Government Work\" under the terms of the United\n  States Copyright Act. It was written as part of the authors' official duties\n  for the United States Government and thus cannot be copyrighted. This software\n  is freely available to the public for use without a copyright\n  notice. Restrictions cannot be placed on its present or future use.\n\n  Although all reasonable efforts have been taken to ensure the accuracy and\n  reliability of the software and associated data, the National Human Genome\n  Research Institute (NHGRI), National Institutes of Health (NIH) and the\n  U.S. Government do not and cannot warrant the performance or results that may\n  be obtained by using this software or data. NHGRI, NIH and the U.S. Government\n  disclaim all warranties as to performance, merchantability or fitness for any\n  particular purpose.\n\n  Please cite the authors in any work or product based on this material.\n\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "merqury"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "marbl"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 89978,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 49414,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 16451,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marbl/merqury/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "arangrhie",
          "type": "User"
        },
        "date_created": "2021-04-14T02:59:07Z",
        "date_published": "2021-04-14T03:01:30Z",
        "description": "This is Merqury v1.3, compatible and tested with [Meryl v1.3](https://github.com/marbl/meryl).\r\n\r\nDownload the release source file and extract. No additional compiling or building needed.\r\nSimply add MERQURY as a path variable and we are good to go.\r\n\r\n```shell\r\nwget https://github.com/marbl/merqury/archive/v1.3.tar.gz\r\ntar -zxvf v1.3.tar.gz\r\ncd merqury-1.3\r\nexport MERQURY=$PWD\r\n```\r\nAdd installation dir paths for dependent tools if modules for them are not available: `bedtools`, `samtools`, and `Rscript` to your environment (`~/.bash_profile` or `~/.profile`). source it.\r\n\r\nIn case your computation environment modules aren't compatible, edit $MERQURY/util/util.sh's `check_module` to always echo 1.\r\n\r\nRelease note\r\n* Meryl has much improved in multi-threading and memory management. This will help getting ~3x speed up, especially for the meryl counting and set operations used in Merqury.\r\n* IGV `.tdf` files are no longer supported. Instead, wiggle (`.wig`) files are generated.\r\n* Using new meryl syntax.\r\n* Splitting fastq files for kmer counting is deprecated.\r\n* Force R to use cairo engine for plotting to avoid font gobbling and weird plotting issues.\r\n* Minor updates in help messages.",
        "html_url": "https://github.com/marbl/merqury/releases/tag/v1.3",
        "name": "Merqury v1.3",
        "release_id": 41389929,
        "tag": "v1.3",
        "tarball_url": "https://api.github.com/repos/marbl/merqury/tarball/v1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/marbl/merqury/releases/41389929",
        "value": "https://api.github.com/repos/marbl/merqury/releases/41389929",
        "zipball_url": "https://api.github.com/repos/marbl/merqury/zipball/v1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "arangrhie",
          "type": "User"
        },
        "date_created": "2020-08-06T02:03:44Z",
        "date_published": "2020-08-06T02:25:42Z",
        "description": "This is Merqury v1.1, an updated version of v1.0 with a few handy features and bug fixes.\r\n\r\nThis version is compatible and tested with `Meryl v1.0`.\r\n\r\nDownload the release source file and extract. No additional compiling or building needed.\r\nSimply add MERQURY as a path variable and we are good to go.\r\n\r\n```shell\r\nwget https://github.com/marbl/merqury/archive/v1.1.tar.gz\r\ntar -zxvf v1.1.tar.gz\r\ncd merqury-1.1\r\nexport MERQURY=$PWD\r\n```\r\nAdd installation dir paths for dependent tools if modules for them are not available: `bedtools`, `samtools`, `igvtools`, and `Rscript` to your environment (`~/.bash_profile` or `~/.profile`). source it.\r\n\r\nNew features\r\n* Per sequence entry QV\r\n* Get number of falsely duplicated k-mers\r\n* Additional script to convert bed / hapmers to bigWig\r\n\r\nBug fixes\r\n* Use union-sum instead of union in eval/qv.sh\r\n* Link meryl dbs peroperly\r\n* Lift SLURM dependency\r\n\r\nThanks to everyone who reported bugs here on github or through personal communications.\r\n",
        "html_url": "https://github.com/marbl/merqury/releases/tag/v1.1",
        "name": "Merqury v1.1",
        "release_id": 29390347,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/marbl/merqury/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/marbl/merqury/releases/29390347",
        "value": "https://api.github.com/repos/marbl/merqury/releases/29390347",
        "zipball_url": "https://api.github.com/repos/marbl/merqury/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "arangrhie",
          "type": "User"
        },
        "date_created": "2020-03-24T01:41:24Z",
        "date_published": "2020-03-24T20:58:08Z",
        "description": "This version was used to generate the plots and statistics in the [preprint](https://www.biorxiv.org/content/10.1101/2020.03.15.992941v1):\r\n\r\nArang Rhie, Brian P. Walenz, Sergey Koren, Adam M. Phillippy, Merqury: reference-free quality and phasing assessment for genome assemblies, bioRxiv (2020). doi: https://doi.org/10.1101/2020.03.15.992941\r\n\r\nThis version is compatible and tested with [Meryl v1.0](https://github.com/marbl/meryl/releases/tag/v1.0).\r\n\r\nDownload the release source file and extract. No additional compiling or building needed.\r\nSimply add MERQURY as a path variable and we are good to go.\r\n\r\n```shell\r\nwget https://github.com/marbl/merqury/archive/v1.0.tar.gz\r\ntar -zxvf merqury-1.0.tar.gz\r\ncd merqury\r\nexport MERQURY=$PWD\r\n```\r\nAdd installation dir paths for dependent tools if modules for them are not available: `bedtools`, `samtools`, `igvtools`, and `Rscript` to your environment (`~/.bash_profile` or `~/.profile`). `source` it.\r\n",
        "html_url": "https://github.com/marbl/merqury/releases/tag/v1.0",
        "name": "Merqury v1.0",
        "release_id": 24826802,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/marbl/merqury/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/marbl/merqury/releases/24826802",
        "value": "https://api.github.com/repos/marbl/merqury/releases/24826802",
        "zipball_url": "https://api.github.com/repos/marbl/merqury/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency",
        "parent_header": [
          "Merqury"
        ],
        "type": "Text_excerpt",
        "value": "* gcc 10.2.0 or higher (for installing Meryl)\n* [Meryl v1.4.1](https://github.com/marbl/meryl/releases/tag/v1.4.1)\n* Java run time environment (JRE)\n* R with argparse, ggplot2, and scales (recommend R 4.0.3+)\n* bedtools\n* samtools\n\n\nNote that igvtools is no longer used. The `.tdf` files are replaced with `.wig` files, compatable to IGV and UCSC genome browser.\n\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run",
        "parent_header": [
          "Merqury"
        ],
        "type": "Text_excerpt",
        "value": "* !! Merqury assumes all meryl dbs (dirs) are named with `.meryl`. !!\n\nOn a single machine:\n```\nln -s $MERQURY/merqury.sh\t\t# Link merqury\n./merqury.sh <read-db.meryl> [<mat.meryl> <pat.meryl>] <asm1.fasta> [asm2.fasta] <out>\n\nUsage: merqury.sh <read-db.meryl> [<mat.meryl> <pat.meryl>] <asm1.fasta> [asm2.fasta] <out>\n\t<read-db.meryl>\t: k-mer counts of the read set\n\t<mat.meryl>\t\t: k-mer counts of the maternal haplotype (ex. mat.only.meryl or mat.hapmer.meryl)\n\t<pat.meryl>\t\t: k-mer counts of the paternal haplotype (ex. pat.only.meryl or pat.hapmer.meryl)\n\t<asm1.fasta>\t: Assembly fasta file (ex. pri.fasta, hap1.fasta or maternal.fasta)\n\t[asm2.fasta]\t: Additional fasta file (ex. alt.fasta, hap2.fasta or paternal.fasta)\n\t*asm1.meryl and asm2.meryl will be generated. Avoid using the same names as the hap-mer dbs\n\t<out>\t\t: Output prefix\n```\n`< >` : required  \n`[ ]` : optional\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:12:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 280
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Version supporting homopolymer compressed hapmers for Verkko (Recommended)",
        "parent_header": [
          "Merqury",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Only the latest Merqury version supports the `compressed` option used in Verkko.\n\n* Meryl  \nGet a working [Meryl](https://github.com/marbl/meryl) in your `PATH`.\nDownload Meryl release: https://github.com/marbl/meryl/releases/tag/v1.4.1\n```shell\ntar -xJf meryl-1.4.*.tar.xz\ncd meryl-1.4.1/bin\nexport PATH=$pwd:$PATH\n```\n\nIf the binary doesn't work, download the source and compile:\n```shell\ngit clone https://github.com/marbl/meryl.git\ncd meryl/src\nmake -j 24\nexport PATH=/path/to/meryl/\u2026/bin:$PATH\n```\nSee if we get help message with `meryl`.\n\n* Merqury\n```shell\ngit clone https://github.com/marbl/merqury.git\ncd merqury\nexport MERQURY=$PWD\n```\nOther dependency:\n* Java run time environment (JRE)\n* R with argparse, ggplot2, and scales (recommend R 4.0.3+)\n* bedtools\n* samtools\n\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tips for helps",
        "parent_header": [
          "Merqury"
        ],
        "type": "Text_excerpt",
        "value": "Run each script without any parameters if not sure what to do.\nFor example, `./trio/switch_error.sh` will give a help message and quit.\n\nFollowing wiki pages have more detailed examples.\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "Merqury"
        ],
        "type": "Text_excerpt",
        "value": "Below is showing examples how to run Merqury using the prebuilt meryl dbs on a. thaliana F1 hybrid.\nThe fasta files are the trio-binned assemblies from [Koren et al](https://doi.org/10.1038/nbt.4277).\n\n```shell\n### Download assemblies ###\nwget https://gembox.cbcb.umd.edu/triobinning/athal_COL.fasta\nwget https://gembox.cbcb.umd.edu/triobinning/athal_CVI.fasta\n\n### Download prebuilt meryl dbs ###\n# read.meryl of the F1 hybrid between COL-0 and CVI-0\nwget https://obj.umiacs.umd.edu/marbl_publications/merqury/athal/a_thal.k18.meryl.tar.gz\n# hap-mers for COL-0 haplotype\nwget https://obj.umiacs.umd.edu/marbl_publications/merqury/athal/a_thal.col0.hapmer.meryl.tar.gz\n# hap-mers for CVI-0 haplotype\nwget https://obj.umiacs.umd.edu/marbl_publications/merqury/athal/a_thal.cvi0.hapmer.meryl.tar.gz\n\n# Untar\nfor gz in *.tar.gz\ndo\n    tar -zxf $gz\ndone\n\n# Run merqury\n$MERQURY/merqury.sh F1.k18.meryl col0.hapmer.meryl cvi0.hapmer.meryl athal_COL.fasta athal_CVI.fasta test\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. I have one assembly (pseudo-haplotype or mixed-haplotype)",
        "parent_header": [
          "Merqury",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "```shell\n# I don't have the hap-mers\n$MERQURY/merqury.sh read-db.meryl asm1.fasta out_prefix\n# Using the example above\n$MERQURY/merqury.sh F1.k18.meryl athal_COL.fasta test-1\n\n# I have the hap-mers\n$MERQURY/merqury.sh read-db.meryl mat.meryl pat.meryl asm1.fasta out_prefix\n# Using the example above\n$MERQURY/merqury.sh F1.k18.meryl col0.hapmer.meryl cvi0.hapmer.meryl athal_COL.fasta test-1\n```\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. I have two assemblies (diploid)",
        "parent_header": [
          "Merqury",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "```shell\n# I don't have the hap-mers\n$MERQURY/merqury.sh read-db.meryl asm1.fasta asm2.fasta out_prefix\n# Using the example above\n$MERQURY/merqury.sh F1.k18.meryl athal_COL.fasta athal_CVI.fasta test-2\n\n# I have the hap-mers\n$MERQURY/merqury.sh read-db.meryl mat.meryl pat.meryl asm1.fasta asm2.fasta out_prefix\n# Using the example above\n$MERQURY/merqury.sh F1.k18.meryl col0.hapmer.meryl cvi0.hapmer.meryl athal_COL.fasta athal_CVI.fasta test-2\n```\n\n* Note there is no need to run merqury per-assemblies. Give two fasta files, Merqury generates stats for each and combined.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to parallelize",
        "parent_header": [
          "Merqury",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "Merqury starts with `eval/spectra_cn.sh`.\nWhen hap-mers are provided, merqury runs modules under `trio/` in addition to `eval/spectra_cn.sh`.\n\n\nThe following can run at the same time. Modules with dependency are followed by arrows (->).\n* `eval/spectra_cn.sh` -> `trio/spectra_hap.sh`\n* `trio/hap_blob.sh`\n* `trio/phase_block.sh` per assembly -> `trio/block_n_stats.sh`\n\n\nMeryl, the k-mer counter inside, uses the maximum cpus available.\nSet `OMP_NUM_THREADS=24` for example to use 24 threads.\n\nOn slurm environment, simply run:\n```\nln -s $MERQURY/_submit_merqury.sh\t# Link merqury\n./_submit_merqury.sh <read-db.meryl> [<mat.meryl> <pat.meryl>] <asm1.fasta> [asm2.fasta] <out>\n```\nChange the `sbatch` to match your environment. (ex. partition)\n\n"
      },
      "source": "https://raw.githubusercontent.com/marbl/merqury/master/README.md",
      "technique": "header_analysis"
    }
  ]
}