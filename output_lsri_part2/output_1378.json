{
  "application_domain": [
    {
      "confidence": 17.07,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/admislf/MINN-DTI"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-09T03:12:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-15T02:58:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Effective drug-target interaction prediction with mutual interaction neural network"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9309726183166577,
      "result": {
        "original_header": "MINN-DTI",
        "type": "Text_excerpt",
        "value": "* Source code for the paper \"Effective drug-target interaction prediction with mutual interaction neural network\". \n* MINN-DTI is a model for drug-target interaction (DTI) prediction. MINN-DTI combines an interacting-transformer module (called Interformer) with an improved Communicative Message Passing Neural Network (CMPNN) (called Inter-CMPNN) to better capture the two-way impact between drugs and targets, which are represented by molecular graph and distance map respectively. \n![MINN-DTI](image/Fig.1.jpg)\n* The code was built based on [DrugVQA](https://github.com/prokia/drugVQA), [CMPNN](https://github.com/SY575/CMPNN) and [transformerCPI](https://github.com/lifanchen-simm/transformerCPI). Thanks a lot for their code sharing!\n \n"
      },
      "source": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9595461542219459,
      "result": {
        "original_header": "Dataset",
        "type": "Text_excerpt",
        "value": "All data used in this paper are publicly available and consistent with that used by DrugVQA , which can be accessed here : [DrugVQA](https://github.com/prokia/drugVQA).\n \n"
      },
      "source": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/admislf/MINN-DTI/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/admislf/MINN-DTI/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "admislf/MINN-DTI"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Effective drug-target interaction prediction with mutual interaction neural network"
      },
      "source": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Data and file directory preparation",
        "parent_header": [
          "Effective drug-target interaction prediction with mutual interaction neural network",
          "Usage",
          "Testing on datasets uesd in this paper"
        ],
        "type": "Text_excerpt",
        "value": "* Before training a model on the datasets uesd in this paper, you must prepare data and file directory as follows (take DUD-E as an example):\n  * 1. Select or create your local data directory for the DUD-E dataset, such as `data/DUD-E`.\n  * 2. Download `data/DUDE/contactMap` and `data/DUDE/dataPre` directories including proetin contact maps, SMIELS and labels from [DrugVQA repository](https://github.com/admislf/drugVQA/tree/master/data/DUDE).\n  * 3. Put the downloaded `contactMap` and `dataPre` folders in your data directory(`data/DUD-E`)"
      },
      "source": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Set arguments",
        "parent_header": [
          "Effective drug-target interaction prediction with mutual interaction neural network",
          "Usage",
          "Testing on datasets uesd in this paper"
        ],
        "type": "Text_excerpt",
        "value": "* All default arguments are provided in the [model/data.py](./model/data.py) for training.\n* You can modify the [model/data.py](./model/data.py) directly to set up your model\n* The following arguments must be set according to your data directory\n```python\n# Path of training data file\ntrainFoldPath = '../data/DUDE/dataPre/DUDE-foldTrain1'\n# Directory of protein contact maps\ncontactPath = '../data/DUDE/contactMap'\n# Path of the protein contact map dict file\ncontactDictPath = '../data/DUDE/dataPre/DUDE-contactDict'\n```\n"
      },
      "source": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/admislf/MINN-DTI/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/image/Fig.1.jpg"
      },
      "source": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MINN-DTI"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "admislf"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 48025,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run your training",
        "parent_header": [
          "Effective drug-target interaction prediction with mutual interaction neural network",
          "Usage",
          "Training on datasets uesd in this paper"
        ],
        "type": "Text_excerpt",
        "value": "* Run any one command below using [model/main.py](./model/main.py) to train a model, model files will be saved in `model_pkl/my/`\n```shell\n$ python model/main.py\n# Specify GPU\n$ CUDA_VISIBLE_DEVICES=0 python model/main.py\n# Running in the background\n$ nohup python model/main.py > train.log 2>&1 &\n$ CUDA_VISIBLE_DEVICES=0 nohup python model/main.py > train.log 2>&1 &\n```"
      },
      "source": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run your testing",
        "parent_header": [
          "Effective drug-target interaction prediction with mutual interaction neural network",
          "Usage",
          "Testing on datasets uesd in this paper"
        ],
        "type": "Text_excerpt",
        "value": "* Run any one command below using [model/mainTest.py](./model/mainTest.py) to test your models, results including AUC and other indicators will be written in `test.log`\n```shell\n# Running in the background\n# Setting model file: ../model_pkl/my/DUDE-fold-h0501-235.pkl \n$ nohup python model/mainTest.py .py --checkpoint_path ../model_pkl/my/DUDE-fold-h0501-235.pkl 2>&1 > test.log\n# Specify GPU\n$ CUDA_VISIBLE_DEVICES=0 nohup python model/mainTest.py .py --checkpoint_path ../model_pkl/my/DUDE-fold-h0501-235.pkl 2>&1 > test.log\n```"
      },
      "source": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 14:12:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Training on independent datasets",
        "parent_header": [
          "Effective drug-target interaction prediction with mutual interaction neural network",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* You can train your model on your own datasets Follow the steps above.\n* The only thing you need to do is organize your data in the format used here, you have to:\n  * Prepare a training data file like [this file](https://raw.githubusercontent.com/admislf/drugVQA/master/data/DUDE/dataPre/DUDE-foldTrain1)\n  * Prepare a protein contact map dict file like [this file](https://github.com/admislf/drugVQA/blob/master/data/DUDE/dataPre/DUDE-contactDict)\n  * Prepare protein contact maps like [this file](https://raw.githubusercontent.com/admislf/drugVQA/master/data/DUDE/contactMap/abl1_2f4jA_full)\n  * Specify the path of the above files in [model/data.py](./model/data.py) as `Set arguments` in `Training on datasets uesd in this paper` section bove\n"
      },
      "source": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Testing or predicting on independent datasets",
        "parent_header": [
          "Effective drug-target interaction prediction with mutual interaction neural network",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* To test or predict on independent datasets you need to organize your data in the format used here:\n   * Prepare protein contact maps and contact map dict file as above\n   * Prepare a test list of target names separated by spaces(named mytest here)\n   * Put lists of active SMILES and decoy SMILES named XXX_actives_final.ism and XXX_decoys_final.ism (XXX is target name in test list `mytest`) of targets in `active_smile` and `decoy_smile` folds Separately with one SMILES per line (named active_smile and decoy_smile), put them all in active_smile for prediction task.\n* Modify the following arguments in [model/dataTest.py](./model/dataTest.py)\n```python\n# Path of test list file\ntestFoldPath = '../data/DUDE/dataPre/mytest'\n# Directory of protein contact maps\ncontactPath = '../data/DUDE/contactMap'\n# Path of the protein contact map dict file\ncontactDictPath = '../data/DUDE/dataPre/DUDE-contactDict'\n# Directory of SMILES file of active or decoy molecules\nDECOY_PATH = '../data/DUDE/decoy_smile'\nACTIVE_PATH = '../data/DUDE/active_smile'\n```\n* Run any one command below using [model/mainTest.py](./model/mainTest.py) to test your models, testing and predicting results including predicting results of each sample will be written in `mytest.log`\n```shell\n# Running in the background\n# Setting model file: ../model_pkl/my/DUDE-fold-h0501-235.pkl \n$ nohup python model/mainTest.py .py --checkpoint_path ../model_pkl/my/DUDE-fold-h0501-235.pkl 2>&1 > mytest.log\n# Specify GPU\n$ CUDA_VISIBLE_DEVICES=0 nohup python model/mainTest.py .py --checkpoint_path ../model_pkl/my/DUDE-fold-h0501-235.pkl 2>&1 > mytest.log\n```\n"
      },
      "source": "https://raw.githubusercontent.com/admislf/MINN-DTI/main/README.md",
      "technique": "header_analysis"
    }
  ]
}