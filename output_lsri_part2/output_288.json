{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JFFleming/RCFV_Reader"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-08T19:57:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-08T19:58:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RCFV reader is a new software to quickly calculate normalised relative compositional frequency variability."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8835187780400932,
      "result": {
        "original_header": "RCFV Reader is a new software to quickly calculate normalised relative compositional frequency variability.",
        "type": "Text_excerpt",
        "value": "If you don't have cpan, you can get it here:\nhttps://www.cpan.org/\nIt's a really useful way to get access to a whole range of accessible modules for perl \n==================================================================================================================================================================\nRCFV Reader, James F. Fleming & Torsten H Struck, 2022.\nWelcome to RCFV Reader. RCFV Reader accepts FASTA files as input, and then outputs 6 files.\nTo run RCFV Reader on nucleotide data, input the command as follows: \nfor amino acid data, input the command like this: \nthe 6 output files are:\n- RCFV.txt - this file contains the total RCFV and nRCFV of the entire dataset.\n- csRCFV.txt - this file contains a list of the character-specific RCFVs of your input dataset\n- ncsRCFV.txt - as per csRCFV.txt, but with ncsRCFV values\n- tRCFV.txt - this file contains a list of the taxon-specific RCFVs of your input dataset\n- ntRCFV.txt - as per tRCFV.txt, but with ntRCFV values\n- Frequencies.txt - this file contains the per taxon character frequencies, and the mean per taxon character frequencies across the dataset (as used by RCFV, NOT the total dataset character frequencies) \n"
      },
      "source": "https://raw.githubusercontent.com/JFFleming/RCFV_Reader/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JFFleming/RCFV_Reader/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JFFleming/RCFV_Reader/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JFFleming/RCFV_Reader"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RCFV_Reader"
      },
      "source": "https://raw.githubusercontent.com/JFFleming/RCFV_Reader/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9037878889176238,
      "result": {
        "original_header": "RCFV Reader is a new software to quickly calculate normalised relative compositional frequency variability.",
        "type": "Text_excerpt",
        "value": "==================================================================================================================================================================\nINSTALLATION\nIn addition to perl, RCFV Reader uses the cpan module FAST::Bio::SeqIO\nYou can install this module using: \nIf you don't have cpan, you can get it here:\nhttps://www.cpan.org/\nIt's a really useful way to get access to a whole range of accessible modules for perl \nperl RCFVReader.pl dna \\<filename\\> \\<prefix for output files\\> \nperl RCFVReader.pl protein \\<filename\\> \\<prefix for output files\\> \n"
      },
      "source": "https://raw.githubusercontent.com/JFFleming/RCFV_Reader/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JFFleming/RCFV_Reader/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RCFV_Reader"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "JFFleming"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 21831,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JFFleming/RCFV_Reader/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:04:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}