{
  "application_domain": [
    {
      "confidence": 31.27,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "PhylDiag"
        ],
        "type": "Text_excerpt",
        "value": "* Joseph Lucas: conceptualisation and implementation of phylDiag\n* Hugues Roest Crollius: supervision\n* Lucas Tittmann: improved the clustering of tandem duplicates\n* Nga thi thuy Nguyen: optimisation of the core algorithm of PhylDiag with cython\n* Matthieu Muffato: implementation several python functions in LibsDyogen\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite as",
        "parent_header": [
          "PhylDiag"
        ],
        "type": "Text_excerpt",
        "value": "Lucas JM, Roest Crollius H (2017) High precision detection of conserved segments from synteny blocks. PLoS ONE 12(7): e0180198. https://doi.org/10.1371/journal.pone.0180198\n\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DyogenIBENS/PhylDiag"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contacts",
        "parent_header": [
          "PhylDiag"
        ],
        "type": "Text_excerpt",
        "value": "* [Joseph Lucas](jlucas@ens.fr)\n* [Hugues Roest Crollius](hrc@ens.fr)\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contribute",
        "parent_header": [
          "PhylDiag"
        ],
        "type": "Text_excerpt",
        "value": "If you want to contribute to this deposit please\n1. fork it\n2. create your feature branch: `git checkout -b my-new-feature`\n3. commit your changes: `git commit -am 'Add some feature'`\n4. push to the branch: `git push origin my-new-feature`\n5. submit a pull request\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-05-13T14:38:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-28T19:20:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "From the comparison of two extant genomes and corresponding gene families, PhylDiag detects conserved segments, i.e. segments of chromosomes unbroken during evolution."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9913920645144024,
      "result": {
        "original_header": "Link between synteny blocks and conserved segments",
        "type": "Text_excerpt",
        "value": "*Conserved segments* can be considered as a specific type of *synteny blocks*, with a threshold between micro and macro-rearrangements equal to 0 ancestral genes.\nFor this reason you may see some *conserved segments* being named more generally *synteny blocks* in the code, or with the extension *.sbs.\n \n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9253477418752055,
      "result": {
        "original_header": "Update",
        "type": "Text_excerpt",
        "value": "\n**Please ensure that the versions of PylDiag and LibsDyogen share the same tagged version or correspond to their last commits.**\n \n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9486113427963623,
      "result": {
        "original_header": "Roadmap",
        "type": "Text_excerpt",
        "value": "1. Optimise the computation of the homology matrix with the \"sort-join\" algorithm of \"step2\" (page 3) \n2. Draw matrices of homologies with [Cairo](https://www.cairographics.org/)\n \n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/DyogenIBENS/PhylDiag/wiki"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DyogenIBENS/PhylDiag/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DyogenIBENS/PhylDiag/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DyogenIBENS/PhylDiag"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PhylDiag"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/checkPhylDiagIntegrity.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/INSTALL.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/src/analysis/viewSomeSyntenies.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/src/postprocessing/processingSteps_Mm_Gg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/src/postprocessing/listOfDifficultSyntenies.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/src/postprocessing/processingSteps.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/src/postprocessing/ADHORE/prepareADHoReDataFromOurData.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/19742670"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/doc/WMH_Hs_Mm.png"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/doc/MH_Hs_X.130-245_Mm_X.20-150_CD10.png"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation using Docker",
        "parent_header": [
          "PhylDiag"
        ],
        "type": "Text_excerpt",
        "value": "Using Docker, you should be able to install PhylDiag on [Linux distributions, MacOS and Windows (7 or later) through docker](https://blog.codeship.com/docker-for-windows-linux-and-mac/). (Tested using Windows 10 and Linux)\n(NB: if you use a Debian distribution, you may prefer to read next section for a more native installation.)\n\nFirst, install [docker](https://docs.docker.com/engine/installation/).\n\nThen, download the Dockerfile, at the root of the Github deposit of PhylDiag, into ~/Downloads\n```bash\nwget https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/Dockerfile -P ~/Downloads\n```\nMove into the folder containing the Dockerfile and build the image (let's name it \"phyldiagi\")\n```bash\ncd ~/Downloads\ndocker build -t phyldiagi ./\n```\n(NB: There is no need to install LibsDyogen, Docker will do it after reading the Dockerfile. Building the image may take some time: the output image will contain i-ADHoRe 3.0, Cyntenator and homology teams, in addition to PhylDiag.)\n\nThen:\n1. Create a container (\"phyldiagc\") from the image\n2. Share Input/Output folders between host and container:\n    * input: `INDIR` on the host and `/IN` in container\n    * output: `OUTDIR` on the host and `/OUT` in container\n3. Start a bash shell in the container\nMake these 3 actions with, for instance\n```bash\nINDIR=${PWD} && OUTDIR=${HOME}/phyldiag_results\ndocker run --name phyldiagc -v ${INDIR}:/IN -v ${OUTDIR}:/OUT -ti phyldiagi bash\n```\n\nFrom the new shell, you can use all executables installed in the container to process data from /IN/ to /OUT/, for instance:\n```bash\nPhylDiag/src/phylDiag.py /IN/Homo.sapiens.genome.bz2 /IN/Mus.musculus.genome.bz2 /IN/Euarchontoglires.families.bz2 > /OUT/res.sbs\n```\nExit the container with `exit`.\n\nLater you can go back inside the container with:\n```bash\ndocker start -i phyldiagc\n```\n\nIf you are on Windows:\n1. Make sure that Docker is activated and that it uses Hyper-V; by default it should be the case\n2. Start windows Powershell\n3. Change directories with backslashes instead of slashes (e.g. cd `.\\path\\folder\\containingDockerfile\\`)\n4. Once you are in the folder of the dockerfile, build the image with `docker build .\\`\n5. Run the image with `docker run --name phyldiagc -v /c/Users/<user>/Desktop:/IN -it phyldiagi /bin/bash`, with <user>, your user name\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation on a Debian distribution",
        "parent_header": [
          "PhylDiag"
        ],
        "type": "Text_excerpt",
        "value": "[Install the LibsDyogen library first.](https://github.com/DyogenIBENS/LibsDyogen)\nFrom now on we assume that the path to the folder LibsDyogen is in the PYTHONPATH.\n\nThe easiest way to install PhylDiag is to launch the remote script INSTALL.sh hosted on github.\nThis script will clone the github deposit itself.\nThe installation will be set in /home/${USER}/Libs/PhylDiag.\n\nInstall curl, if you don't have it\n```\nsudo apt-get update\nsudo apt-get install curl\n```\nUse curl to execute the remote file INSTALL.sh hosted on github\n```\nbash <(curl -s https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/INSTALL.sh)\n```\n\nIf it did not work, follow the next instructions.\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Detailed installation guidelines",
        "parent_header": [
          "PhylDiag",
          "Installation on a Debian distribution"
        ],
        "type": "Text_excerpt",
        "value": "Choose a path for the parent folder of PhylDiag (here it is /home/<user>/Libs)\n```PATH_PARENT_PHYLDIAG=\"/home/${USER}/Libs\"\nmkdir -p ${PATH_PARENT_PHYLDIAG}\ncd ${PATH_PARENT_PHYLDIAG}\nPATH_PHYLDIAG=${PATH_PARENT_PHYLDIAG}/PhylDiag\n```\nClone the PhylDiag deposit\n```\ngit clone https://github.com/DyogenIBENS/PhylDiag ${PATH_PHYLDIAG}\n```\nIf necessary give execution rights\n```\nchmod +x ${PATH_PHYLDIAG}/src/*.py\nchmod +x ${PATH_PHYLDIAG}/src/analysis/*.py\nchmod +x ${PATH_PHYLDIAG}/src/postprocessing/*.py\n```\n\nIt should be installed.\nYou can verify that everything works properly with some tests\n```\ncd PhylDiag\nbash ./checkPhylDiagIntegrity.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9979970116742952,
      "result": {
        "original_header": "Update",
        "type": "Text_excerpt",
        "value": "If you want to keep PhylDiag up to date, update LibsDyogen first (see [the Update section of LibsDyogen](https://raw.githubusercontent.com/DyogenIBENS/LibsDyogen/master/README.md)). \nThen\n```\ncd ${PATH_LIBSDYOGEN}\ngit pull\n```\nThis will upgrade your local git deposit to the last commit. \nIf you want a more stable version, after `git pull`, you can downgrade to the latest tagged version (=stable release)\n1. Get tags from the github deposit `git fetch --tags`\n2. Get the latest tag name ``latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)``\n3. Checkout the latest tag `git checkout $latestTag` \nAfter `git fetch --tags`, you can also switch to any anterior tagged version\n1. List all tagged versions: `git tag -l`\n2. Checkout to the version you want: `git checkout <tagName>` \n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DyogenIBENS/PhylDiag/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "PhylDiag"
        ],
        "type": "Text_excerpt",
        "value": "This code may be freely distributed and modified under the terms of the GNU General Public License version 3 (GPL v3)\nand the CeCILL licence version 2 of the CNRS. These licences are contained in the files:\n* LICENSE-GPL.txt (http://www.gnu.org/licenses/gpl-3.0-standalone.html)\n* LICENCE-CeCILL.txt (http://www.cecill.info/licences/Licence_CeCILL_V2-en.html)\n\nCopyright for this code is held jointly by the Dyogen (DYnamic and Organisation of GENomes) team\nof the Institut de Biologie de l'Ecole Normale Sup\u00e9rieure (IBENS) 46 rue d'Ulm Paris, and the individual authors.\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PhylDiag"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "DyogenIBENS"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 225713,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 35530,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 7341,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 4772,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 3522,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DyogenIBENS",
          "type": "User"
        },
        "date_created": "2017-07-03T18:30:45Z",
        "date_published": "2017-07-03T18:51:51Z",
        "html_url": "https://github.com/DyogenIBENS/PhylDiag/releases/tag/v2.0.0-beta1",
        "name": "PhylDiag at the time of publication of \"High precision detection of conserved segments from synteny blocks\"",
        "release_id": 6916678,
        "tag": "v2.0.0-beta1",
        "tarball_url": "https://api.github.com/repos/DyogenIBENS/PhylDiag/tarball/v2.0.0-beta1",
        "type": "Release",
        "url": "https://api.github.com/repos/DyogenIBENS/PhylDiag/releases/6916678",
        "value": "https://api.github.com/repos/DyogenIBENS/PhylDiag/releases/6916678",
        "zipball_url": "https://api.github.com/repos/DyogenIBENS/PhylDiag/zipball/v2.0.0-beta1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "DyogenIBENS",
          "type": "User"
        },
        "date_created": "2017-06-08T22:57:54Z",
        "date_published": "2017-06-08T23:10:59Z",
        "description": "Version corresponding to the final version of the article \"High precision detection of conserved segments from synteny blocks\" J.mex Lucas and H. Roest Crollius",
        "html_url": "https://github.com/DyogenIBENS/PhylDiag/releases/tag/2.0.0-alpha",
        "name": "PhylDiag for the article \"High precision detection of conserved segments from synteny blocks\"",
        "release_id": 6655702,
        "tag": "2.0.0-alpha",
        "tarball_url": "https://api.github.com/repos/DyogenIBENS/PhylDiag/tarball/2.0.0-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/DyogenIBENS/PhylDiag/releases/6655702",
        "value": "https://api.github.com/repos/DyogenIBENS/PhylDiag/releases/6655702",
        "zipball_url": "https://api.github.com/repos/DyogenIBENS/PhylDiag/zipball/2.0.0-alpha"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "PhylDiag",
          "Installation on a Debian distribution"
        ],
        "type": "Text_excerpt",
        "value": "Core dependencies\n* LibsDyogen\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:43:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "PhylDiag",
        "parent_header": [
          "PhylDiag",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "[![DOI](https://zenodo.org/badge/19742670.svg)](https://zenodo.org/badge/latestdoi/19742670)\n\nFrom the comparison of two extant genomes and corresponding gene families, PhylDiag detects conserved segments, i.e. segments of chromosomes unbroken during evolution.\n\n**Inputs**\n* two extant *genomes*, G1 and G2\n* *a set of gene families*, F\n\n**Outputs**\n* *conserved segments*\n\nExample of\n* genome:  data/Homo.sapiens.genome\n* set of families: data/Euarchontoglires.families\n* conserved segments: res/Homo.sapiens_Mus.musculus_fEuarchontoglires.sbs\n\n(phylDiag automatically uncompresses files with extensions \\*.bz2)\n\nGene families can be computed from a forest of phylogenetic gene trees, see https://github.com/DyogenIBENS/LibsDyogen.\n\nA genome is a set of chromosomes.\nA chromosome is a list of genes.\nA gene is a pair (gene name, transcription orientation).\n\nF, the set of gene families, is an associative array that links, for each family,\n* the family name (**key**)\n* to the set of names of the descendant genes (**values**)\n\nThe name of a gene family is often the name of the ancestral gene, at the root of the gene family.\n\nPhylDiag can also return *synteny blocks*, if\n* identification of micro-rearrangements,\n* identification of mono-genic conserved segments\n\nare disabled (--no-imr and --no-imcs).\n\nPhylDiag is explained in more details in two publications\n1. [PhylDiag : identifying complex synteny blocks that include tandem duplications using phylogenetic gene trees](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-15-268)\n2. [High precision detection of conserved segments from synteny blocks\"](https://doi.org/10.1371/journal.pone.0180198)\n\nand in a thesis manuscript in french\n\n3. [\u00c9tude de l\u2019\u00e9volution de l\u2019ordre des g\u00e8nes de vert\u00e9br\u00e9s par simulation](https://tel.archives-ouvertes.fr/tel-01398369/document)\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "PhylDiag Viewer",
        "parent_header": [
          "PhylDiag",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "This viewer draw homology matrices with conserved segments.\n\n```\nsrc/phylDiagViewer.py --help\n```\nreturns\n```\nusage: phylDiagViewer.py [-h] [-m MINCHRLEN]\n                         [-f {None,InBothGenomes,InFamilies}]\n                         [-t TANDEMGAPMAX] [-d {MD,ED,DPD,CD}] [-g GAPMAX]\n                         [--imr | --no-imr] [--imcs | --no-imcs] [--mmg MMG]\n                         [--truncation | --no-truncation]\n                         [--truncationMax TRUNCATIONMAX] [-v]\n                         [--ROI1 chr1:beg1-end1] [--ROI2 chr2:beg2-end2]\n                         [--withSbs | --withoutSbs] [-s INSBS] [-i] [-b] [-r]\n                         [-a SCALERECTS] [--considerAllComps] [-l] [-o OUTSBS]\n                         G1 G2 F IMAGE\n\nGraphical visualisation of synteny blocks in homology matrices\n\npositional arguments:\n  G1                    genome1\n  G2                    genome2\n  F                     set of gene families\n  IMAGE                 path to the returned image.svg\n\noptional arguments:\n  -h, --help            show this help message and exit\n\n  ... (same as with phylDiag)\n\n  --ROI1 chr1:beg1-end1\n                        region of interest (ROI) on the first genome (default:\n                        None)\n  --ROI2 chr2:beg2-end2\n                        region of interest (ROI) on the second genome\n                        (default: None)\n  --withSbs             draw sbs in the homology matrix (default: True)\n  --withoutSbs\n  -s INSBS, --inSbs INSBS\n                        synteny blocks to draw (*.sbs) (default: None)\n  -i, --withSbIds       draw ids of synteny blocks (default: False)\n  -b, --geneIdxsToTbIdxs\n                        convert gene idxs to tandem block idxs (default:\n                        False)\n  -r, --chrsInTbs       draw chromosomes in tandem blocks (after collapsing\n                        clusters of tandem duplicates) (default: False)\n  -a SCALERECTS, --scaleRects SCALERECTS\n                        scale factor of rectangle widths, if they are too\n                        small increase it (default: 1.0)\n  --onlyROIcomp         consider only comparisons of both ROIs (change the\n                        filtering) (default: False)\n  -l, --liveView        turn on direct view with firefox as soon as the\n                        computation is finished (default: False)\n  -o OUTSBS, --outSbs OUTSBS\n                        information about drawn sbs (default: res/sbs.txt)\n\nWarning: with --withoutSbs it may not return the desired homology matrix\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Whole genome comparison",
        "parent_header": [
          "PhylDiag",
          "Usage",
          "PhylDiag Viewer"
        ],
        "type": "Text_excerpt",
        "value": "Draw the homology matrix of the comparison of the human and the mouse genomes\n```\nsrc/phylDiagViewer.py data/Homo.sapiens.genome.bz2 data/Mus.musculus.genome.bz2 data/Euarchontoglires.families.bz2 --tandemGapMax=5 --gapMax=5 res/WMH_Hs_Mm.svg --scaleRects=40\n```\nThe output image can be seen with firefox.\n<a>\n  <img src=\"doc/WMH_Hs_Mm.png\" width=\"75%\">\n</a>\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Comparison of two regions of interest (ROI)",
        "parent_header": [
          "PhylDiag",
          "Usage",
          "PhylDiag Viewer"
        ],
        "type": "Text_excerpt",
        "value": "A region of interest is a segment of one chromosome, for instance the section between the 100th gene and the 200th gene of chromosome X in the first genome (--ROI1=X:100-200).\nAnother example: '4:45-80' means chromosome 4 from the 45th gene to the 80th gene.\n```\na=Euarchontoglires\ns1=Homo.sapiens\ns2=Mus.musculus\nc1=X\nr1=\"130-245\"\nc2=X\nr2=\"20-150\"\ndm=\"CD\"\ngm=10\nsuffix=Hs_${c1}.${r1}_Mm_${c2}.${r2}_${dm}${gm}\nsrc/phylDiagViewer.py data/${s1}.genome.bz2 data/${s2}.genome.bz2 data/${a}.families.bz2 --distanceMetric=${dm} --gapMax=${gm} --ROI1=$c1:$r1 --ROI2=$c2:$r2 res/MH_${suffix}.svg --outSbs=res/${suffix}.sbs.txt --onlyROIcomp\n```\n<a>\n  <img src=\"doc/MH_Hs_X.130-245_Mm_X.20-150_CD10.png\" width=\"75%\">\n</a>\n\nA ROI may be a whole chromosome, e.g. 'X:1-~' is the ROI of chromosome X from the first gene to the last gene, ~.\n\nCompute the Matrix of Homologies (MH) of the human X chromosome compared to the mouse X chromosome\n```\nsrc/phylDiagViewer.py data/Homo.sapiens.genome.bz2 data/Mus.musculus.genome.bz2 data/Euarchontoglires.families.bz2 --ROI1=X:1-~ --ROI2=X:1-~ res/MH.svg --outSbs=res/sbs.txt\n```\n\nIt is also possible to draw the Matrix of Homology Packs (MHP), with the option --chrsInTbs. The MHP is the MH after filtering genomes and collapsing tandem duplicates.\n```\nsrc/phylDiagHomologyMatrixViewer.py data/Homo.sapiens.genome.bz2 data/Mus.musculus.genome.bz2 data/Euarchontoglires.families.bz2 --ROI1=X:1-~ --ROI2=X:1-~ --chrsInTbs ./res/MHP.svg --outSbs=./res/syntenyBlocksDrawerMHP.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DyogenIBENS/PhylDiag/master/README.md",
      "technique": "header_analysis"
    }
  ]
}