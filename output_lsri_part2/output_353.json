{
  "application_domain": [
    {
      "confidence": 33.09,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/germannp/yalla"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-10-29T10:43:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-03T21:52:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Spheroid models of morphogenesis for the GPU."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9483590364545299,
      "result": {
        "original_header": "ya||a",
        "type": "Text_excerpt",
        "value": "ya||a is yet another parallel agent-based model for morphogenesis, like the following branching process: \nya||a extends the spheroid model by the addition of spin-like polarities to simulate epithelial sheets and tissue polarity using pair-wise interactions only. This design is simple and lends itself to parallelization and we implemented it together with recent models for protrusions and migration for GPUs for high performance. For further information see [10.1016/j.cels.2019.02.007](https://doi.org/10.1016/j.cels.2019.02.007). \nThe models can be compiled using [CUDAs](https://developer.nvidia.com/cuda-downloads) `$ nvcc -std=c++11 -arch=sm_XX model.cu` on Linux and macOS without further dependencies. The resulting executable can be run with `$ ./a.out` and produces [vtk files](http://www.vtk.org/wp-content/uploads/2015/04/file-formats.pdf) that can be visualized for instance with [ParaView](http://www.paraview.org/). The model  [`examples/springs.cu`](examples/springs.cu) is a good starting point to learn more. \nya||a is maintained at [github.com/germannp/yalla](https://github.com/germannp/yalla) and is freely available under the [MIT license](LICENSE).\n \n"
      },
      "source": "https://raw.githubusercontent.com/germannp/yalla/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/germannp/yalla/wiki"
      },
      "source": "https://raw.githubusercontent.com/germannp/yalla/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/germannp/yalla/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/germannp/yalla/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "germannp/yalla"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ya||a"
      },
      "source": "https://raw.githubusercontent.com/germannp/yalla/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/germannp/yalla/master/branching.gif"
      },
      "source": "https://raw.githubusercontent.com/germannp/yalla/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/germannp/yalla/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "agent-based-modeling, center-dynamics, developmental-biology, morphogenesis, simulation-framework, spheroid-model"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017-2018 European Molecular Biology Laboratory\nCopyright (c) 2015-2017 Fundaci\u00f3 Centre de Regulaci\u00f3 Gen\u00f2mica\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/germannp/yalla/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yalla"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "germannp"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Cuda",
        "size": 119963,
        "type": "Programming_language",
        "value": "Cuda"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 337,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/germannp/yalla/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "germannp",
          "type": "User"
        },
        "date_created": "2019-02-02T14:56:15Z",
        "date_published": "2019-02-02T15:03:37Z",
        "description": "ya||a is yet another parallel agent-based model for morphogenesis. It is several orders of magnitude faster than conventional models, because it runs on GPUs and because it has been designed for performance: Previously only complex and therefore computationally expensive models could simulate both mesenchyme and epithelium. We chose to extend the simple spheroid model by the addition of spin-like polarities to simulate epithelial sheets and tissue polarity. We also incorporate recently developed models for protrusions and migration. ya||a is written in concise, plain CUDA/C++ and available under the MIT license.\r\n\r\nThis release was published as https://doi.org/10.1016/j.cels.2019.02.007.",
        "html_url": "https://github.com/germannp/yalla/releases/tag/v1.0",
        "name": "ya||a 1.0",
        "release_id": 15331988,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/germannp/yalla/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/germannp/yalla/releases/15331988",
        "value": "https://api.github.com/repos/germannp/yalla/releases/15331988",
        "zipball_url": "https://api.github.com/repos/germannp/yalla/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:22:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 38
      },
      "technique": "GitHub_API"
    }
  ]
}