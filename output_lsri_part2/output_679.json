{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xavierdidelot/DetectImports"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-01T13:48:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-23T11:58:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Detection of imports in a dated phylogeny"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "`DetectImports` is a R package aimed at distinguishing imported cases\nfrom locally acquired cases within a geographically limited genomic\nsample of an infectious disease. The input is a dated phylogeny of local\ngenomes only, as can be build using `BEAST`, `treedater` or\n`BactDating`. The main output is an estimated probability of importation\nfor each case in the dated phylogeny.\n"
      },
      "source": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xavierdidelot/DetectImports/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xavierdidelot/DetectImports/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xavierdidelot/DetectImports/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xavierdidelot/DetectImports"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Introduction"
      },
      "source": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/man/figures/unnamed-chunk-4-1.png"
      },
      "source": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/man/figures/unnamed-chunk-5-1.png"
      },
      "source": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/man/figures/unnamed-chunk-6-1.png"
      },
      "source": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "You can install `DetectImports` directly from github with the commands:\n\n``` r\ndevtools::install_github(\"xavierdidelot/DetectImports\")\n```\n\nThe package can then be loaded using:\n\n``` r\nlibrary(DetectImports)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xavierdidelot/DetectImports/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Xavier Didelot\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DetectImports"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "xavierdidelot"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 49733,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Stan",
        "size": 2355,
        "type": "Programming_language",
        "value": "Stan"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "xavierdidelot",
          "type": "User"
        },
        "date_created": "2024-02-01T08:44:00Z",
        "date_published": "2024-02-01T08:45:25Z",
        "description": "Version 0.9.2",
        "html_url": "https://github.com/xavierdidelot/DetectImports/releases/tag/v0.9.2",
        "name": "Version 0.9.2",
        "release_id": 139456786,
        "tag": "v0.9.2",
        "tarball_url": "https://api.github.com/repos/xavierdidelot/DetectImports/tarball/v0.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/xavierdidelot/DetectImports/releases/139456786",
        "value": "https://api.github.com/repos/xavierdidelot/DetectImports/releases/139456786",
        "zipball_url": "https://api.github.com/repos/xavierdidelot/DetectImports/zipball/v0.9.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "`DetectImports` depends on [Stan](https://mc-stan.org/) through CmdStan.\nAlthough [other options might\nexist](https://mc-stan.org/docs/cmdstan-guide/cmdstan-installation.html),\nfor instance using Conda, the simplest option is to install CmdStan via\nthe R package [CmdStanR](https://mc-stan.org/cmdstanr/). You can do so\nwith the commands\n\n``` r\ninstall.packages(\"cmdstanr\", repos = c(\"https://mc-stan.org/r-packages/\", getOption(\"repos\")))\nlibrary(cmdstanr)\ninstall_cmdstan()\n```\n\nThe last command will download and compile all the missing dependencies.\n"
      },
      "source": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:35:13",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick example",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "First we load and plot a dated tree stored in a Newick file. For this\nexample we will use the file `example.nwk` which is distributed within\nthe package `DetectImports`:\n\n``` r\nlibrary(ape)\npath=system.file(\"extdata\", \"example.nwk\", package = \"DetectImports\")\ntree=read.tree(path)\nplot(tree,show.tip.label=F)\naxisPhylo(1)\n```\n\n![](man/figures/unnamed-chunk-4-1.png)\n\nWe are now ready to detect the imports in this tree:\n\n``` r\nlibrary(DetectImports)\nset.seed(0) #For reproducibility\nres=detectImports(tree)\nplot(res)\n```\n\n![](man/figures/unnamed-chunk-5-1.png)\n\nThe plotting function for the results of `DetectImports` has a `type`\nparameter which by default is set to `\"scatter\"`. So the last command\nwill produce a scatterplot of the coalescent intervals for each sequence\nas a function of time, with the sequences corresponding to imports\ncoloured in red. By changing the `type` to `\"tree\"`, one will get a plot\nof the original tree with, once again, imported sequences coloured in\nred:\n\n``` r\nplot(res,type=\"tree\")\n```\n\n![](man/figures/unnamed-chunk-6-1.png)\n\nHowever, that is not all; sequences that have been propagating locally\nbut descend from originally imported sequences will also be coloured \u2014\nthis time, in blue.\n"
      },
      "source": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Advanced examples",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "For more advanced examples of use, see the\n[vignettes](https://github.com/xavierdidelot/DetectImports/tree/master/vignettes).\n"
      },
      "source": "https://raw.githubusercontent.com/xavierdidelot/DetectImports/master/README.Rmd",
      "technique": "header_analysis"
    }
  ]
}