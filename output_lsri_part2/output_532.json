{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "DeepRMSD+Vina"
        ],
        "type": "Text_excerpt",
        "value": "If you find our scripts useful, please consider citing the following paper:\n\n    @article{wang2023fully,\n      title={A fully differentiable ligand pose optimization framework guided by deep learning and a traditional scoring function},\n      author={Wang, Zechen and Zheng, Liangzhen and Wang, Sheng and Lin, Mingzhi and Wang, Zhihao and Kong, Adams Wai-Kin and Mu, Yuguang and Wei, Yanjie and Li, Weifeng},\n      journal={Briefings in Bioinformatics},\n      volume={24},\n      number={1},\n      pages={bbac520},\n      year={2023},\n      publisher={Oxford University Press}\n      }\n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Wang, Zechen and Zheng, Liangzhen and Wang, Sheng and Lin, Mingzhi and Wang, Zhihao and Kong, Adams Wai-Kin and Mu, Yuguang and Wei, Yanjie and Li, Weifeng",
        "format": "bibtex",
        "title": "A fully differentiable ligand pose optimization framework guided by deep learning and a traditional scoring function",
        "type": "Text_excerpt",
        "value": "@article{wang2023fully,\n    publisher = {Oxford University Press},\n    year = {2023},\n    pages = {bbac520},\n    number = {1},\n    volume = {24},\n    journal = {Briefings in Bioinformatics},\n    author = {Wang, Zechen and Zheng, Liangzhen and Wang, Sheng and Lin, Mingzhi and Wang, Zhihao and Kong, Adams Wai-Kin and Mu, Yuguang and Wei, Yanjie and Li, Weifeng},\n    title = {A fully differentiable ligand pose optimization framework guided by deep learning and a traditional scoring function},\n}"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zchwang/DeepRMSD-Vina_Optimization"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "DeepRMSD+Vina"
        ],
        "type": "Text_excerpt",
        "value": "Liangzhen Zheng, Shanghai Zelixir Biotech Company Ltd, astrozheng@gmail.com</p>\nZechen Wang, Shandong University, wangzch97@163.com</p>\n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-27T08:35:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-07T01:10:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepRMSD+Vina is a computational framework that integrates ligand binding pose optimization and screening."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9976221450312254,
      "result": {
        "original_header": "DeepRMSD+Vina",
        "type": "Text_excerpt",
        "value": "This algorithm is based on deep learning and a classical scoring function (Vina score) and is designed to optimize ligand conformations.  \n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9487027359480232,
      "result": {
        "original_header": "1. Generate datasets",
        "type": "Text_excerpt",
        "value": "Firstly, generate the \".pkl\" file containing features and labels in advance before training. We provide the \"generate_features.py\" script in the \"retrain\" directory for creating the required features and labels for DeepRMSD. You can run: \n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9476393956572045,
      "result": {
        "original_header": "2. Training",
        "type": "Text_excerpt",
        "value": "\"train_file\" and \"valid_file\" represent the training set and validation set, respectively, generated in the previous step.\n \n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zchwang/DeepRMSD-Vina_Optimization/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zchwang/DeepRMSD-Vina_Optimization/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "zchwang/DeepRMSD-Vina_Optimization"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepRMSD+Vina"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/run_pose_optimization.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/scoring/run_scoring.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/models/figure1.png"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "DeepRMSD+Vina"
        ],
        "type": "Text_excerpt",
        "value": "    pytorch >= 1.10\n    conda install -c conda-forge spyrmsd\n    conda install numpy pandas\n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Prepare structural files for proteins and ligands.",
        "parent_header": [
          "DeepRMSD+Vina",
          "Run optimization"
        ],
        "type": "Text_excerpt",
        "value": "The algorithm simultaneously optimizes multiple poses of a ligand, which must be generated by the same docking program and placed in the same directory in PDBQT format. The PDBQT files for proteins and ligands can be generated by MGLTools. The detailed process is as follows.\n\n    pythonsh prepare_receptor4.py -r protein.pdb -U lps -o protein.pdbqt\n    pythonsh prepare_ligand4.py -l ligand.mol2 -U lps -o ligand.pdbqt \n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Prepare the input file with a pdb code, a protein PDBQT file and the directory where the ligand poses (PDBQT file) are located written on each line, separated by a space.",
        "parent_header": [
          "DeepRMSD+Vina",
          "Run optimization"
        ],
        "type": "Text_excerpt",
        "value": "The content of the input file is as follows\n    \n    1gpn ./samples/1gpn/1gpn_protein_atom_noHETATM.pdbqt samples/1gpn/decoys\n    1syi ./samples/1syi/1syi_protein_atom_noHETATM.pdbqt samples/1syi/decoys\n    "
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9893679972440875,
      "result": {
        "original_header": "2. Training",
        "type": "Text_excerpt",
        "value": "We provide the \"train.py\" script in the \"retrain\" directory. You can run the following command to retrain DeepRMSD: \n    python train.py \\\n\t-train_file $train_file \\\n\t-valid_file $valid_file \\\n\t-device cuda:0 \n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8633384686319391,
      "result": {
        "original_header": "DeepRMSD+Vina",
        "type": "Text_excerpt",
        "value": "<img src=\"models/figure1.png\">\n \n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8331428751477549,
      "result": {
        "original_header": "1. Generate datasets",
        "type": "Text_excerpt",
        "value": "    python generate_features.py -inp inputs.dat -out data_label.pkl  \n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8780246853878331,
      "result": {
        "original_header": "2. Training",
        "type": "Text_excerpt",
        "value": "We provide the \"train.py\" script in the \"retrain\" directory. You can run the following command to retrain DeepRMSD: \n    python train.py \\\n\t-train_file $train_file \\\n\t-valid_file $valid_file \\\n\t-device cuda:0 \n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zchwang/DeepRMSD-Vina_Optimization/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepRMSD-Vina_Optimization"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "zchwang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 152025,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1286,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Run the optimization framework with default parameters included in scripts.",
        "parent_header": [
          "DeepRMSD+Vina",
          "Run optimization"
        ],
        "type": "Text_excerpt",
        "value": "    bash run_pose_optimization.sh inputs.dat\n\nFinally, the program outputs the optimized ligand conformation (\"final_optimized_cnfr.pdb\") and the final score. In addition, the conformation changes and scores during optimization are recorded in the \"optimized_traj.pdb\" and \"opt_data.csv\" files, respectively.\n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "The scoring components are placed in the \"scoring\" directory. You can execute the following command to perform scoring using DeepRMSD+Vina.",
        "parent_header": [
          "DeepRMSD+Vina",
          "Only using DeepRMSD+Vina for scoring"
        ],
        "type": "Text_excerpt",
        "value": "    python scripts/run.py \\\n\t-rec_fpath $rec_fpath \\   \n\t-pose_fpath $pose_fpath \\ \n\t-mean_std_file ../models/r6-r1_0.3-2.0nm_train_mean_std.csv \\\n\t-model ../models/bestmodel_cpu.pth \\\n\t-out_fpath $out_fpath\n\nwhere rec_fpath, pose_fpath, and out_fpath represent the paths for the input protein pdbqt file, ligand pdbqt file, and the file where the scores will be stored, respectively. You can also directly run the \"run_scoring.sh\" file as follows:\n    \n    bash run_scoring.sh $rec_fpath $pose_fpath $out_fpath\n\nHere is a simple example to test this process, as follows:\n\n    bash run_scoring.sh samples/1bcu_protein_noHETATM.pdbqt samples/1bcu_decoys.pdbqt out.csv\n"
      },
      "source": "https://raw.githubusercontent.com/zchwang/DeepRMSD-Vina_Optimization/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:03:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 36
      },
      "technique": "GitHub_API"
    }
  ]
}