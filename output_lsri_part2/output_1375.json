{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zrmacc/MGMM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-08-25T17:49:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-03T03:29:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Missingness Aware Gaussian Mixture Models"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compact Example",
        "parent_header": [
          "Missingness Aware Gaussian Mixture Models"
        ],
        "type": "Text_excerpt",
        "value": "\n```r\nset.seed(101)\nlibrary(MGMM)\n\n# Parameter settings.\nmean_list <- list(\n  c(1, 1),\n  c(-1, -1)\n)\ncov_list <- list(\n  matrix(c(1, -0.5, -0.5, 1), nrow = 2),\n  matrix(c(1, 0.5, 0.5, 1), nrow = 2)\n)\n\n# Generate data.\ndata <- rGMM(\n  n = 1e3, \n  d = 2, \n  k = 2, \n  miss = 0.1, \n  means = mean_list, \n  covs = cov_list\n)\n\n# Original data.\nhead(data)\n```\n\n```\n##           y1          y2\n## 1  1.6512855  2.60621938\n## 2 -0.5721069          NA\n## 2 -2.0045376 -2.31888263\n## 2 -0.6229388 -1.51543968\n## 1  2.0258413  0.06921658\n## 2 -1.3476380 -1.51915826\n```\n\n```r\n# Choose cluster number.\nchoose_k <- ChooseK(\n  data,\n  k0 = 2,\n  k1 = 4,\n  boot = 10,\n  maxit = 10,\n  eps = 1e-4,\n  report = TRUE\n)\n```\n\n```\n## Cluster size 2 complete. 11 fit(s) succeeded.\n## Cluster size 3 complete. 11 fit(s) succeeded.\n## Cluster size 4 complete. 11 fit(s) succeeded.\n```\n\n```r\n# Cluster number recommendations. \nshow(choose_k$Choices)\n```\n\n```\n##   Metric k_opt   Metric_opt k_1se   Metric_1se\n## 1    BIC     4 2285.4269195     2 2340.4441587\n## 2    CHI     4    4.5081110     4    4.5081110\n## 3    DBI     2    0.7818011     2    0.7818011\n## 4    SIL     2    0.4785951     2    0.4785951\n```\n\n```r\n# Estimation.\nfit <- FitGMM(\n  data,\n  k = 2,\n  maxit = 10\n)\n```\n\n```\n## Objective increment:  11.1 \n## Objective increment:  2.39 \n## Objective increment:  1.57 \n## Objective increment:  1.08 \n## Objective increment:  0.91 \n## Objective increment:  0.745 \n## Objective increment:  0.617 \n## Objective increment:  0.507 \n## Objective increment:  0.416 \n## Objective increment:  0.34 \n## 10 update(s) performed without reaching tolerance limit.\n```\n\n```r\n# Estimated means. \nshow(fit@Means)\n```\n\n```\n## [[1]]\n##        y1        y2 \n## -1.056071 -1.070412 \n## \n## [[2]]\n##        y1        y2 \n## 0.9437473 0.9513797\n```\n\n```r\n# Estimated covariances. \nshow(fit@Covariances)\n```\n\n```\n## [[1]]\n##           y1        y2\n## y1 0.9447484 0.5201638\n## y2 0.5201638 0.9611714\n## \n## [[2]]\n##            y1         y2\n## y1  0.9973684 -0.4489898\n## y2 -0.4489898  0.9728258\n```\n\n```r\n# Cluster assignments. \nhead(fit@Assignments)\n```\n\n```\n##   Assignments      Entropy\n## 1           2 7.957793e-02\n## 2           1 8.426200e-01\n## 2           1 8.629837e-07\n## 2           1 7.790894e-03\n## 1           2 8.451183e-02\n## 2           1 4.521627e-04\n```\n\n```r\n# Deterministic imputation.\nhead(fit@Completed)\n```\n\n```\n##           y1          y2\n## 1  1.6512855  2.60621938\n## 2 -0.5721069 -0.14379539\n## 2 -2.0045376 -2.31888263\n## 2 -0.6229388 -1.51543968\n## 1  2.0258413  0.06921658\n## 2 -1.3476380 -1.51915826\n```\n\n```r\n# Stochastic imputation.\nimp <- GenImputation(fit)\nhead(imp)\n```\n\n```\n##           y1          y2\n## 1  1.6512855  2.60621938\n## 2 -0.5721069  0.88613853\n## 2 -2.0045376 -2.31888263\n## 2 -0.6229388 -1.51543968\n## 1  2.0258413  0.06921658\n## 2 -1.3476380 -1.51915826\n```\n"
      },
      "source": "https://raw.githubusercontent.com/zrmacc/MGMM/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9897316344942094,
      "result": {
        "original_header": "Missingness Aware Gaussian Mixture Models",
        "type": "Text_excerpt",
        "value": "This package performs estimation and inference for Gaussian Mixture Models (GMMs) where the input data may contain missing values. Rather than imputing missing values before fitting the GMM, this package uses an extended EM algorithm to obtain the true maximum likelihood estimates of all model parameters given the observed data. In particular `MGMM` performs the following tasks: \n* Maximum likelihood estimation of cluster means, covariances, and proportions.\n* Calculation of cluster membership probabilities and maximum a posteriori classification of the input vectors. \n* Deterministic completion of the input data, by imputing missing elements to their posterior means, and stochastic completion of the input data, by drawing missing elements from the fitted GMM. \nThe method is detailed in [Fitting Gaussian mixture models on incomplete data](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9158227/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/zrmacc/MGMM/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9883927465325142,
      "result": {
        "original_header": "Main Functions",
        "type": "Text_excerpt",
        "value": "* `FitGMM` estimates model parameters, performs classification and imputation.\n* `rGMM` simulates observations from a GMM, potentially with missingness. \n* `ChooseK` provides guidance on choosing the number of clusters. \n* `GenImputation` performs stochastic imputation for multiple imputation-based inference.\n \n"
      },
      "source": "https://raw.githubusercontent.com/zrmacc/MGMM/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8160993324202018,
      "result": {
        "original_header": "Vignette",
        "type": "Text_excerpt",
        "value": "Additional examples and details may be found [here](https://github.com/zrmacc/MGMM/tree/master/vignettes/Vignette.pdf).\n \n"
      },
      "source": "https://raw.githubusercontent.com/zrmacc/MGMM/master/README.html",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zrmacc/MGMM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zrmacc/MGMM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "zrmacc/MGMM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Missingness Aware Gaussian Mixture Models"
      },
      "source": "https://raw.githubusercontent.com/zrmacc/MGMM/master/README.html",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zrmacc/MGMM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MGMM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "zrmacc"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 89280,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 9772,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zrmacc/MGMM/master/README.html"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zrmacc/MGMM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zrmacc",
          "type": "User"
        },
        "date_created": "2024-07-03T03:29:20Z",
        "date_published": "2024-07-03T03:35:18Z",
        "description": "Added an optional ridge term `lambda`. If `lambda > 0`, an identity matrix scaled by `lambda` is added to the covariance matrices of all components both during initialization and estimation to ensure positive definiteness.\r\n",
        "html_url": "https://github.com/zrmacc/MGMM/releases/tag/v1.0.1.2",
        "name": "v1.0.1.2",
        "release_id": 163721249,
        "tag": "v1.0.1.2",
        "tarball_url": "https://api.github.com/repos/zrmacc/MGMM/tarball/v1.0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/zrmacc/MGMM/releases/163721249",
        "value": "https://api.github.com/repos/zrmacc/MGMM/releases/163721249",
        "zipball_url": "https://api.github.com/repos/zrmacc/MGMM/zipball/v1.0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zrmacc",
          "type": "User"
        },
        "date_created": "2023-04-27T15:29:34Z",
        "date_published": "2023-04-27T15:34:53Z",
        "description": "Correcting an issue where `FitGMM` would fail when applied to 1d data. ",
        "html_url": "https://github.com/zrmacc/MGMM/releases/tag/v1.0.1",
        "name": "v1.0.1",
        "release_id": 101143390,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/zrmacc/MGMM/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/zrmacc/MGMM/releases/101143390",
        "value": "https://api.github.com/repos/zrmacc/MGMM/releases/101143390",
        "zipball_url": "https://api.github.com/repos/zrmacc/MGMM/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 14:12:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Compact Example",
        "parent_header": [
          "Missingness Aware Gaussian Mixture Models"
        ],
        "type": "Text_excerpt",
        "value": "\n```r\nset.seed(101)\nlibrary(MGMM)\n\n# Parameter settings.\nmean_list <- list(\n  c(1, 1),\n  c(-1, -1)\n)\ncov_list <- list(\n  matrix(c(1, -0.5, -0.5, 1), nrow = 2),\n  matrix(c(1, 0.5, 0.5, 1), nrow = 2)\n)\n\n# Generate data.\ndata <- rGMM(\n  n = 1e3, \n  d = 2, \n  k = 2, \n  miss = 0.1, \n  means = mean_list, \n  covs = cov_list\n)\n\n# Original data.\nhead(data)\n```\n\n```\n##           y1          y2\n## 1  1.6512855  2.60621938\n## 2 -0.5721069          NA\n## 2 -2.0045376 -2.31888263\n## 2 -0.6229388 -1.51543968\n## 1  2.0258413  0.06921658\n## 2 -1.3476380 -1.51915826\n```\n\n```r\n# Choose cluster number.\nchoose_k <- ChooseK(\n  data,\n  k0 = 2,\n  k1 = 4,\n  boot = 10,\n  maxit = 10,\n  eps = 1e-4,\n  report = TRUE\n)\n```\n\n```\n## Cluster size 2 complete. 11 fit(s) succeeded.\n## Cluster size 3 complete. 11 fit(s) succeeded.\n## Cluster size 4 complete. 11 fit(s) succeeded.\n```\n\n```r\n# Cluster number recommendations. \nshow(choose_k$Choices)\n```\n\n```\n##   Metric k_opt   Metric_opt k_1se   Metric_1se\n## 1    BIC     4 2285.4269195     2 2340.4441587\n## 2    CHI     4    4.5081110     4    4.5081110\n## 3    DBI     2    0.7818011     2    0.7818011\n## 4    SIL     2    0.4785951     2    0.4785951\n```\n\n```r\n# Estimation.\nfit <- FitGMM(\n  data,\n  k = 2,\n  maxit = 10\n)\n```\n\n```\n## Objective increment:  11.1 \n## Objective increment:  2.39 \n## Objective increment:  1.57 \n## Objective increment:  1.08 \n## Objective increment:  0.91 \n## Objective increment:  0.745 \n## Objective increment:  0.617 \n## Objective increment:  0.507 \n## Objective increment:  0.416 \n## Objective increment:  0.34 \n## 10 update(s) performed without reaching tolerance limit.\n```\n\n```r\n# Estimated means. \nshow(fit@Means)\n```\n\n```\n## [[1]]\n##        y1        y2 \n## -1.056071 -1.070412 \n## \n## [[2]]\n##        y1        y2 \n## 0.9437473 0.9513797\n```\n\n```r\n# Estimated covariances. \nshow(fit@Covariances)\n```\n\n```\n## [[1]]\n##           y1        y2\n## y1 0.9447484 0.5201638\n## y2 0.5201638 0.9611714\n## \n## [[2]]\n##            y1         y2\n## y1  0.9973684 -0.4489898\n## y2 -0.4489898  0.9728258\n```\n\n```r\n# Cluster assignments. \nhead(fit@Assignments)\n```\n\n```\n##   Assignments      Entropy\n## 1           2 7.957793e-02\n## 2           1 8.426200e-01\n## 2           1 8.629837e-07\n## 2           1 7.790894e-03\n## 1           2 8.451183e-02\n## 2           1 4.521627e-04\n```\n\n```r\n# Deterministic imputation.\nhead(fit@Completed)\n```\n\n```\n##           y1          y2\n## 1  1.6512855  2.60621938\n## 2 -0.5721069 -0.14379539\n## 2 -2.0045376 -2.31888263\n## 2 -0.6229388 -1.51543968\n## 1  2.0258413  0.06921658\n## 2 -1.3476380 -1.51915826\n```\n\n```r\n# Stochastic imputation.\nimp <- GenImputation(fit)\nhead(imp)\n```\n\n```\n##           y1          y2\n## 1  1.6512855  2.60621938\n## 2 -0.5721069  0.88613853\n## 2 -2.0045376 -2.31888263\n## 2 -0.6229388 -1.51543968\n## 1  2.0258413  0.06921658\n## 2 -1.3476380 -1.51915826\n```\n"
      },
      "source": "https://raw.githubusercontent.com/zrmacc/MGMM/master/README.html",
      "technique": "header_analysis"
    }
  ]
}