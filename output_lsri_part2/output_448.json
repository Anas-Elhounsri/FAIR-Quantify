{
  "application_domain": [
    {
      "confidence": 17.59,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Citation**",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**"
        ],
        "type": "Text_excerpt",
        "value": "> He, B., Xiao, Y., Liang, H. et al. ASGARD is A Single-cell Guided Pipeline to\nAid Repurposing of Drugs. *Nat Commun* 14, 993 (2023).\nhttps://doi.org/10.1038/s41467-023-36637-3\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Generate tissue specific drug references from GSE70138 and GSE92742",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "Prepare Drug Referecne Library"
        ],
        "type": "Text_excerpt",
        "value": "Unzip downloaded files, revise the Your_local_path and run the following code:\n```\nlibrary('Asgard')\n\n#Please replace Your_local_path with your real local folder\n\nPrepareReference(cell.info=\"GSE70138_Broad_LINCS_cell_info_2017-04-28.txt\",\n                 gene.info=\"GSE70138_Broad_LINCS_gene_info_2017-03-06.txt\",\n                 GSE70138.sig.info = \"GSE70138_Broad_LINCS_sig_info_2017-03-06.txt\",\n                 GSE92742.sig.info = \"GSE92742_Broad_LINCS_sig_info.txt\",\n                 GSE70138.gctx = \"GSE70138_Broad_LINCS_Level5_COMPZ_n118050x12328_2017-03-06.gctx\",\n                 GSE92742.gctx = \"GSE92742_Broad_LINCS_Level5_COMPZ.MODZ_n473647x12328.gctx\",\n                 Output.Dir = \"DrugReference/\"\n)\n\n#Note: the file names here maybe different after unzipping.\n#Please note that it takes more than one hour to produce drug references in a standard computer with RAM>64GB.\n```\nPlease use '?PrepareReference' for more help.\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lanagarmire/Asgard"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-17T15:09:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T09:38:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download L1000 Connectivity Map perturbational profiles GSE70138 and GSE92742 from GEO",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "Prepare Drug Referecne Library"
        ],
        "type": "Text_excerpt",
        "value": "<p>Method 1: click file names below </p>\n\n[GSE70138_Broad_LINCS_cell_info_2017-04-28.txt](https://ftp.ncbi.nlm.nih.gov/geo/series/GSE70nnn/GSE70138/suppl/GSE70138_Broad_LINCS_cell_info_2017-04-28.txt.gz)\n\n[GSE70138_Broad_LINCS_Level5_COMPZ_n118050x12328_2017-03-06.gctx](https://ftp.ncbi.nlm.nih.gov/geo/series/GSE70nnn/GSE70138/suppl/GSE70138_Broad_LINCS_Level5_COMPZ_n118050x12328_2017-03-06.gctx.gz)\n\n[GSE70138_Broad_LINCS_sig_info_2017-03-06.txt](https://ftp.ncbi.nlm.nih.gov/geo/series/GSE70nnn/GSE70138/suppl/GSE70138_Broad_LINCS_sig_info_2017-03-06.txt.gz)\n\n[GSE70138_Broad_LINCS_gene_info_2017-03-06.txt](https://ftp.ncbi.nlm.nih.gov/geo/series/GSE70nnn/GSE70138/suppl/GSE70138_Broad_LINCS_gene_info_2017-03-06.txt.gz)\n\n[GSE92742_Broad_LINCS_cell_info.txt](https://ftp.ncbi.nlm.nih.gov/geo/series/GSE92nnn/GSE92742/suppl/GSE92742_Broad_LINCS_cell_info.txt.gz)\n\n[GSE92742_Broad_LINCS_Level5_COMPZ.MODZ_n473647x12328.gctx](https://ftp.ncbi.nlm.nih.gov/geo/series/GSE92nnn/GSE92742/suppl/GSE92742_Broad_LINCS_Level5_COMPZ.MODZ_n473647x12328.gctx.gz)\n\n[GSE92742_Broad_LINCS_sig_info.txt](https://ftp.ncbi.nlm.nih.gov/geo/series/GSE92nnn/GSE92742/suppl/GSE92742_Broad_LINCS_sig_info.txt.gz)\n\nor Method 2: run following commands in linux\n```\nwget https://ftp.ncbi.nlm.nih.gov/geo/series/GSE70nnn/GSE70138/suppl/GSE70138_Broad_LINCS_cell_info_2017-04-28.txt.gz\nwget https://ftp.ncbi.nlm.nih.gov/geo/series/GSE70nnn/GSE70138/suppl/GSE70138_Broad_LINCS_Level5_COMPZ_n118050x12328_2017-03-06.gctx.gz\nwget https://ftp.ncbi.nlm.nih.gov/geo/series/GSE70nnn/GSE70138/suppl/GSE70138_Broad_LINCS_sig_info_2017-03-06.txt.gz\nwget https://ftp.ncbi.nlm.nih.gov/geo/series/GSE70nnn/GSE70138/suppl/GSE70138_Broad_LINCS_gene_info_2017-03-06.txt.gz\nwget https://ftp.ncbi.nlm.nih.gov/geo/series/GSE92nnn/GSE92742/suppl/GSE92742_Broad_LINCS_cell_info.txt.gz\nwget https://ftp.ncbi.nlm.nih.gov/geo/series/GSE92nnn/GSE92742/suppl/GSE92742_Broad_LINCS_Level5_COMPZ.MODZ_n473647x12328.gctx.gz\nwget https://ftp.ncbi.nlm.nih.gov/geo/series/GSE92nnn/GSE92742/suppl/GSE92742_Broad_LINCS_sig_info.txt.gz\n```"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lanagarmire/ASGARD/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lanagarmire/Asgard/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lanagarmire/Asgard"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/prep_files.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/asgard_pipeline.png"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
        "type": "Text_excerpt",
        "value": "Using scRNA-seq data, Asgard repurposes drugs and predicts personalized drug\ncombinations to address the cellular heterogeneity of patients. \n\n![image](asgard_pipeline.png)\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install devtools if you don't have it",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```\ninstall.packages('devtools')\n```"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install recommended packages",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n    \nBiocManager::install(c(\"SingleR\",\"limma\",\"cmapR\",\"celldex\"))\n\ninstall.packages('Seurat')\n\n#If you can't install a package with above commands, try to download the gz file and install it locally.\n\n#Take celldex package as an example:\n\n#Downlaod the source package of celldex in linux\nwget https://bioconductor.org/packages/release/data/experiment/src/contrib/celldex_1.0.0.tar.gz\n\n#Start R\nR\n\n#Install celldex from the local source package\ninstall.packages('celldex_1.0.0.tar.gz')\n\n#Note: some dependency packages require R version newer than 4.0\n\n```"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Asgard",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```\ndevtools::install_github(\"lanagarmire/Asgard\")\n```"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Load Asgard",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```\nlibrary('Asgard')\n```"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can run Asgard via Docker. First, install Docker for your platform.\n\n```\ndocker run --rm -v `pwd`:/home/rstudio/Asgard -p 8787:8787 -it lanagarmire/asgard:1.0.0\n```\n\nThis will mount the directory that you are currently working in so it is accessible by the Docker container.\n\nYou can then open a browser and navigate to 127.0.0.1:8787, put in \"rstudio\" as the username and \ncopy the password from the terminal. You will want to change the working directory to \"/home/rstudio/Asgard\".\n\nTo build the DrugReference, you will need a large amount of RAM (64GB).\n\nUpon completion, you can press ^C in the terminal to quit the rstudio server.\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**Step 1: Load single-cell RNA-seq data**",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**"
        ],
        "type": "Text_excerpt",
        "value": "Download datasets GSE113197 and GSE123926 from GEO before running this script.\n\nHuman Breast Cancer Epithelial Cells (GSE123926):\n[GSE123926_RAW.tar](https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE123926&format=file) \n\nNormal Human Breast Epithelial Cells (GSE113197):\n[GSE113197_RAW.tar](https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE113197&format=file) \n\n```R\nlibrary('Seurat')\n\n# Load cells' cell type annotations for GSE113197\ncell_types_file <- paste0(\n\t\"https://raw.githubusercontent.com/lanagarmire/\"\n\t\"Single-cell-drug-repositioning/master/Drug/Normal_celltype.txt\"\n)\ncell_types <- read.table(file=celltypes, header=TRUE, check.names=FALSE)\n\n# Cell type of interest\ncell_types_names <- c(\n  \t\"Luminal_L2_epithelial_cells\", \"Luminal_L1.1_epithelial_cells\", \n    \"Luminal_L1.2_epithelial_cells\", \"Basal_epithelial_cells\"\n)\n\n# Load normal sample Ind5 from GSE113197 dataset \ndata <- read.table(file=\"GSM3099847_Ind5_Expression_Matrix.txt\", \n                   header=TRUE, check.names=FALSE)\nrow.names(data) <- data[, 1]\ndata <- data[, -1]\nind5_cells <- subset(cell_type, sample==\"Ind5\" & celltype %in% celltypes_names)\ncommon <- intersect(colnames(data), rownames(ind5_cells))\ndata <- data[, common]\n\nmetadata = data.frame(\n\tind5_celltypes,\n\tcell = colnames(data),\n\ttype = \"normal\"\n)\nepithelial2 <- CreateSeuratObject(counts=data, project=\"Epithelial\", min.cells=3, \n\t\t\t\t\t\t\t\t  min.features=200, meta.data=metada)\n\n#Load normal sample Ind6 from GSE113197 dataset\ndata <- read.table(file=\"GSM3099848_Ind6_Expression_Matrix.txt\", header=TRUE,\n\t\t\t\t   check.names=FALSE)\nrow.names(data) <- data[, 1]\ndata <- data[, -1]\nind6_cells <- subset(celltype,sample==\"Ind6\" & celltype %in% c(\"Luminal_L2_epithelial_cells\",\"Luminal_L1.1_epithelial_cells\", \"Luminal_L1.2_epithelial_cells\", \"Basal_epithelial_cells\"))\ncommon <- intersect(colnames(data), rownames(celltype3))\ndata<-data[,common]\nEpithelial3 <- CreateSeuratObject(counts = data, project = \"Epithelial\", min.cells = 3, min.features = 200,meta.data=data.frame(celltype3,cell=colnames(data),type=\"Normal\"))\n\n#Load normal sample Ind7 from GSE113197 dataset\ndata<-read.table(file=\"GSM3099849_Ind7_Expression_Matrix.txt\",header = T,check.names=FALSE)\nrow.names(data)<-data[,1]\ndata<-data[,-1]\ncelltype4<-subset(celltype,sample==\"Ind7\" & celltype %in% c(\"Luminal_L2_epithelial_cells\",\"Luminal_L1.1_epithelial_cells\", \"Luminal_L1.2_epithelial_cells\", \"Basal_epithelial_cells\"))\ncommon <- intersect(colnames(data), rownames(celltype4))\ndata<-data[,common]\nEpithelial4 <- CreateSeuratObject(counts = data, project = \"Epithelial\", min.cells = 3, min.features = 200,meta.data=data.frame(celltype4,cell=colnames(data),type=\"Normal\"))\n\n#Load cancer sample PDX110 from GSE123926 dataset\nTNBC_PDX.data<- Read10X(data.dir = \"GSM3516947_PDX110\")\nTNBC.PDX2 <- CreateSeuratObject(counts = TNBC_PDX.data, project = \"TNBC\", min.cells = 3, min.features = 200, meta.data=data.frame(row.names=colnames(TNBC_PDX.data), cell=colnames(TNBC_PDX.data), sample=\"PDX-110\",type=\"TNBC.PDX\"))\n\n#Load cancer sample PDX322 from GSE123926 dataset\nTNBC_PDX.data<- Read10X(data.dir = \"GSM3516948_PDX322\")\nTNBC.PDX3 <- CreateSeuratObject(counts = TNBC_PDX.data, project = \"TNBC\", min.cells = 3, min.features = 200, meta.data=data.frame(row.names=colnames(TNBC_PDX.data), cell=colnames(TNBC_PDX.data), sample=\"PDX-332\",type=\"TNBC.PDX\"))\n\n\n```\n\n#### Step 2"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single-cell alignment",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```R \nSC.list <- list(\n\tTNBC.PDX2 = TNBC.PDX2,\n\tTNBC.PDX3 = TNBC.PDX3,\n\tEpithelial2 = Epithelial2,\n\tEpithelial3 = Epithelial3,\n\tEpithelial4 = Epithelial4\n)\nCellCycle = TRUE #Set it TRUE if you want to do Cell Cycle Regression\nanchor.features=2000\n\nfor (i in 1:length(SC.list)) {\n    SC.list[[i]] <- NormalizeData(SC.list[[i]], verbose = FALSE)\n    SC.list[[i]] <- FindVariableFeatures(SC.list[[i]], selection.method = \"vst\",\n                           nfeatures = anchor.features, verbose = FALSE)\n}\n    SC.anchors <- FindIntegrationAnchors(object.list = SC.list,anchor.features = anchor.features, dims = 1:15)\n    SC.integrated <- IntegrateData(anchorset = SC.anchors, dims = 1:15)\n    DefaultAssay(SC.integrated) <- \"integrated\"\n    if (CellCycle) {\n\t\t##Cell Cycle Regression\n\t\ts.genes <- cc.genes$s.genes\n\t\tg2m.genes <- cc.genes$g2m.genes\n\t\tSC.integrated <- CellCycleScoring(SC.integrated, s.features = s.genes, g2m.features = g2m.genes, set.ident = TRUE)\n\t\tSC.integrated <- ScaleData(SC.integrated, vars.to.regress = c(\"S.Score\", \"G2M.Score\"), features = rownames(SC.integrated))\n\t\tSC.integrated <- RunPCA(SC.integrated, npcs = 15, verbose = FALSE)\n    }\n\telse {\n\t\t##Run the standard workflow for visualization and clustering\n\t\tSC.integrated <- ScaleData(SC.integrated, verbose = FALSE)\n\t\tSC.integrated <- RunPCA(SC.integrated, npcs = 15, verbose = FALSE)\n    }\n    ##t-SNE and Clustering\n    SC.integrated <- RunUMAP(SC.integrated, reduction = \"pca\", dims = 1:15)\n    SC.integrated <- FindNeighbors(SC.integrated, reduction = \"pca\", dims = 1:15)\n    SC.integrated <- FindClusters(SC.integrated, algorithm = 1, resolution = 0.4)\n\n    ##Cell Type Annotation, set by.CellType=TRUE if you want to annotate cell  type.\n    by.CellType=FALSE\n    if(by.CellType == TRUE){\n     data <- as.matrix(SC.integrated@assays$RNA@data)\n     hpca.se <- HumanPrimaryCellAtlasData()\n     pred.hpca <- SingleR(test = data, ref = hpca.se, assay.type.test=1, labels = hpca.se$label.main)\n     cell.label <- data.frame(row.names = row.names(pred.hpca),celltype=pred.hpca$labels)\n     if(length(SC.integrated@meta.data$celltype)>0){\n      SC.integrated@meta.data$celltype <- cell.label$celltype\n     }else{\n       SC.integrated@meta.data <- cbind(SC.integrated@meta.data,cell.label)\n     }\n     new.cells <- data.frame()\n     for(i in unique(SC.integrated$seurat_clusters)){\n      sub.data <- subset(SC.integrated,seurat_clusters==i)\n      temp <- table(sub.data@meta.data$celltype)\n      best.cell <- names(which(temp==temp[which.max(temp)]))\n      cells.temp <- data.frame(cell.id=row.names(sub.data@meta.data),celltype=best.cell)\n      new.cells <- rbind(new.cells,cells.temp)\n     }\n     cell.meta <- SC.integrated@meta.data\n     cell.id <- rownames(cell.meta)\n     row.names(new.cells) <- new.cells[,1]\n     new.cells <- new.cells[cell.id,]\n     SC.integrated@meta.data$celltype <- new.cells$celltype\n    }else{\n     SC.integrated@meta.data$celltype <- paste0(\"C\",as.numeric(SC.integrated@meta.data$seurat_clusters))\n    }\n\n#Change sample names\nsample<-SC.integrated@meta.data$sample\nsample[which(sample==\"Ind5\")]<-\"Normal1\"\nsample[which(sample==\"Ind6\")]<-\"Normal2\"\nsample[which(sample==\"Ind7\")]<-\"Normal3\"\nSC.integrated@meta.data$sample<-sample\n\n#Visualize alignment result\nDimPlot(SC.integrated, reduction = \"umap\", split.by = \"sample\",group.by = \"celltype\")\n```"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single-cell comparison",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```\n#Case sample names\nCase=c(\"PDX-110\",\"PDX-332\")\n\n#Control sample names\nControl=c(\"Normal1\",\"Normal2\",\"Normal3\")\n\n\n#Get differential gene expression profiles for every cell type (or cluster if without annotation) from Limma\nlibrary('limma')\nDefaultAssay(SC.integrated) <- \"RNA\"\nset.seed(123456)\nGene.list <- list()\nC_names <- NULL\nfor(i in unique(SC.integrated@meta.data$celltype)){\n     Idents(SC.integrated) <- \"celltype\"\n     c_cells <- subset(SC.integrated, celltype == i)\n     Idents(c_cells) <- \"type\"\n     Samples=c_cells@meta.data\n     Controlsample <- row.names(subset(Samples,sample %in% Control))\n     Casesample <- row.names(subset(Samples,sample %in% Case))\n     if(length(Controlsample)>min.cells & length(Casesample)>min.cells){\n      expr <- as.matrix(c_cells@assays$RNA@data)\n      new_expr <- as.matrix(expr[,c(Casesample,Controlsample)])\n      new_sample <- data.frame(Samples=c(Casesample,Controlsample),type=c(rep(\"Case\",length(Casesample)),rep(\"Control\",length(Controlsample))))\n      row.names(new_sample) <- paste(new_sample$Samples,row.names(new_sample),sep=\"_\")\n      expr <- new_expr\n      bad <- which(rowSums(expr>0)<3)\n      expr <- expr[-bad,]\n      mm <- model.matrix(~0 + type, data = new_sample)\n      fit <- lmFit(expr, mm)\n      contr <- makeContrasts(typeCase - typeControl, levels = colnames(coef(fit)))\n      tmp <- contrasts.fit(fit, contrasts = contr)\n      tmp <- eBayes(tmp)\n      C_data <- topTable(tmp, sort.by = \"P\",n = nrow(tmp))\n      C_data_for_drug <- data.frame(row.names=row.names(C_data),score=C_data$t,adj.P.Val=C_data$adj.P.Val,P.Value=C_data$P.Value)\n      Gene.list[[i]] <- C_data_for_drug\n      C_names <- c(C_names,i)\n     }\n}\nnames(Gene.list) <- C_names\n\n#Get differential genes from Seurat (Wilcoxon Rank Sum test)\nlibrary('Seurat')\nDefaultAssay(SC.integrated) <- \"RNA\"\nset.seed(123456)\nGene.list <- list()\nC_names <- NULL\nfor(i in unique(SC.integrated@meta.data$celltype)){\n  Idents(SC.integrated) <- \"celltype\"\n  c_cells <- subset(SC.integrated, celltype == i)\n  Idents(c_cells) <- \"type\"\n  C_data <- FindMarkers(c_cells, ident.1 = \"TNBC.PDX\", ident.2 = \"Normal\")\n  C_data_for_drug <- data.frame(row.names=row.names(C_data),score=C_data$avg_logFC,adj.P.Val=C_data$p_val_adj,P.Value=C_data$p_val) ##for Seurat version > 4.0, please use avg_log2FC instead of avg_logFC\n  Gene.list[[i]] <- C_data_for_drug\n  C_names <- c(C_names,i)\n}\nnames(Gene.list) <- C_names\n\n#Get differential genes from DESeq2 method\nlibrary('Seurat')\nDefaultAssay(SC.integrated) <- \"RNA\"\nset.seed(123456)\nGene.list <- list()\nC_names <- NULL\nfor(i in unique(SC.integrated@meta.data$celltype)){\n  Idents(SC.integrated) <- \"celltype\"\n  c_cells <- subset(SC.integrated, celltype == i)\n  Idents(c_cells) <- \"type\"\n  C_data <- FindMarkers(c_cells, ident.1 = \"TNBC.PDX\", ident.2 = \"Normal\", test.use = \"DESeq2\")\n  C_data_for_drug <- data.frame(row.names=row.names(C_data),score=C_data$avg_logFC,adj.P.Val=C_data$p_val_adj,P.Value=C_data$p_val) ##for Seurat version > 4.0, please use avg_log2FC instead of avg_logFC\n  Gene.list[[i]] <- C_data_for_drug\n  C_names <- c(C_names,i)\n}\nnames(Gene.list) <- C_names\n\n#Get differential genes from EdgeR\nlibrary('edgeR')\nCase=c(\"PDX-110\",\"PDX-332\")\nControl=c(\"Normal1\",\"Normal2\",\"Normal3\")\nDefaultAssay(SC.integrated) <- \"RNA\"\nset.seed(123456)\nmin.cells=3 # The minimum number of cells for a cell type. A cell type is omitted if it has less cells than the minimum number.\nGene.list <- list()\nC_names <- NULL\nfor(i in unique(SC.integrated@meta.data$celltype)){\n  Idents(SC.integrated) <- \"celltype\"\n  c_cells <- subset(SC.integrated, celltype == i)\n  Idents(c_cells) <- \"type\"\n  Samples=c_cells@meta.data\n  Controlsample <- row.names(subset(Samples,sample %in% Control))\n  Casesample <- row.names(subset(Samples,sample %in% Case))\n  if(length(Controlsample)>min.cells & length(Casesample)>min.cells){\n    expr <- as.matrix(c_cells@assays$RNA@data)\n    new_expr <- as.matrix(expr[,c(Casesample,Controlsample)])\n    new_sample <- data.frame(Samples=c(Casesample,Controlsample),type=c(rep(\"Case\",length(Casesample)),rep(\"Control\",length(Controlsample))))\n    row.names(new_sample) <- paste(new_sample$Samples,row.names(new_sample),sep=\"_\")\n    expr <- new_expr\n    bad <- which(rowSums(expr>0)<3)\n    expr <- expr[-bad,]\n    group <- new_sample$type\n    dge <- DGEList(counts=expr, group=group)\n    group_edgeR <- factor(group,levels = c(\"Control\",\"Case\"))\n    design <- model.matrix(~ group_edgeR)\n    dge <- estimateDisp(dge, design = design)\n    fit <- glmFit(dge, design)\n    res <- glmLRT(fit)\n    C_data <- res$table\n    C_data_for_drug <- data.frame(row.names=row.names(C_data),score=C_data$logFC,adj.P.Val=p.adjust(C_data$PValue,method = \"BH\"),P.Value=C_data$PValue)\n    Gene.list[[i]] <- C_data_for_drug\n    C_names <- c(C_names,i)\n  }\n}\nnames(Gene.list) <- C_names\n```\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Mono-drug repurposing for every cell type",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```R\nlibrary('Asgard')\n\n#Load tissue specific drug reference produced by PrepareReference function as mentioned above. Please select proper tissue accroding to the disease.\nmy_gene_info<-read.table(file=\"DrugReference/breast_gene_info.txt\",sep=\"\\t\",header = T,quote = \"\")\nmy_drug_info<-read.table(file=\"DrugReference/breast_drug_info.txt\",sep=\"\\t\",header = T,quote = \"\")\ndrug.ref.profiles = GetDrugRef(drug.response.path = 'DrugReference/breast_rankMatrix.txt',\n                               probe.to.genes = my_gene_info, \n                               drug.info = my_drug_info)\n\n#Repurpose mono-drugs for every cell type                               \nDrug.ident.res = GetDrug(gene.data = Gene.list, \n                        drug.ref.profiles = drug.ref.profiles, \n                        repurposing.unit = \"drug\", \n                        connectivity = \"negative\", \n                        drug.type = \"FDA\")\n                       \n```\nUse '?GetDrug' for more help\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 5: Estimation of drug score",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "Calculate drug score using information from all or a subset of clusters. Use \n`?DrugScore` for more help.\n\n```R\nlibrary('Asgard')\nlibrary('Seurat')\n\n# Change the following two lines with the paths on your computer\ngse92742_gctx_path <- \"GSE92742_Broad_LINCS_Level5_COMPZ.MODZ_n473647x12328.gctx\"\ngse70138_gctx_path <- \"GSE70138_Broad_LINCS_Level5_COMPZ_n118050x12328_2017-03-06.gctx\"\n\ncell_metadata <- SC.integrated@meta.data\ncell_metadata$cluster <- SC.integrated@meta.data$celltype\n\nDrug.score <- DrugScore(cell_metadata, cluster_degs = Gene.list, \n                        cluster_drugs = Drug.ident.res, tissue = \"breast\", \n                        case = Case, gse92742_gctx_path = gse92742_gctx_path, \n                        gse70138_gctx_path = gse70138_gctx_path)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 6: Select mono-drug therapies",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```\nlibrary('Asgard')\nlibrary('Seurat')\n\n#Select drug using drug socre\nlibrary(Hmisc)\nFinal.drugs<-subset(Drug.score,Drug.therapeutic.score>quantile(Drug.score$Drug.therapeutic.score, 0.99,na.rm=T) & FDR <0.05)\n\n\n#Select drug for individual clusters\nFinal.drugs<-TopDrug(SC.integrated=SC.integrated,\n                   Drug.data=Drug.ident.res,\n                   Drug.FDR=0.1,\n                   FDA.drug.only=TRUE,\n                   Case=Case.samples,\n                   DrugScore=FALSE\n)\n\n```"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Drug combination analysis",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```\nlibrary('Asgard')\nlibrary('Seurat')\n\nGSE92742.gctx.path=\"GSE92742_Broad_LINCS_Level5_COMPZ.MODZ_n473647x12328.gctx\"\nGSE70138.gctx.path=\"GSE70138_Broad_LINCS_Level5_COMPZ_n118050x12328_2017-03-06.gctx\"\nDrug.combinations<-DrugCombination(SC.integrated=SC.integrated,\n                      Gene.data=Gene.list,\n                      Drug.data=Drug.ident.res,\n                      Drug.FDR=0.1,\n                      FDA.drug.only=TRUE,\n                      Combined.drugs=2,\n                      Case=Case,\n                      Tissue=\"breast\",\n                      GSE92742.gctx=GSE92742.gctx.path,\n                      GSE70138.gctx=GSE70138.gctx.path)\n```\nPlease use '?DrugCombination' for more help.\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Select drug combination therapies",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```\nlibrary('Asgard')\nFinal.combinations<-TopCombination(Drug.combination=Drug.combinations,\n                   Combination.FDR=0.1,\n                   Min.combination.score=1\n)\n```\nDemo codes using real datasets are available at: https://github.com/lanagarmire/Single-cell-drug-repositioning\n\nIf you have further questions or comments, please contact Dr.Bing He: hbing@umich.edu or hebinghb@gmail.com\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lanagarmire/Asgard/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# PolyForm Noncommercial License 1.0.0\n\n<https://polyformproject.org/licenses/noncommercial/1.0.0>\n\n## Acceptance\n\nIn order to get any license under these terms, you must agree\nto them as both strict obligations and conditions to all\nyour licenses.\n\n## Copyright License\n\nThe licensor grants you a copyright license for the\nsoftware to do everything you might do with the software\nthat would otherwise infringe the licensor's copyright\nin it for any permitted purpose.  However, you may\nonly distribute the software according to [Distribution\nLicense](#distribution-license) and make changes or new works\nbased on the software according to [Changes and New Works\nLicense](#changes-and-new-works-license).\n\n## Distribution License\n\nThe licensor grants you an additional copyright license\nto distribute copies of the software.  Your license\nto distribute covers distributing the software with\nchanges and new works permitted by [Changes and New Works\nLicense](#changes-and-new-works-license).\n\n## Notices\n\nYou must ensure that anyone who gets a copy of any part of\nthe software from you also gets a copy of these terms or the\nURL for them above, as well as copies of any plain-text lines\nbeginning with `Required Notice:` that the licensor provided\nwith the software.  For example:\n\n> Required Notice: Copyright Yoyodyne, Inc. (http://example.com)\n\n## Changes and New Works License\n\nThe licensor grants you an additional copyright license to\nmake changes and new works based on the software for any\npermitted purpose.\n\n## Patent License\n\nThe licensor grants you a patent license for the software that\ncovers patent claims the licensor can license, or becomes able\nto license, that you would infringe by using the software.\n\n## Noncommercial Purposes\n\nAny noncommercial purpose is a permitted purpose.\n\n## Personal Uses\n\nPersonal use for research, experiment, and testing for\nthe benefit of public knowledge, personal study, private\nentertainment, hobby projects, amateur pursuits, or religious\nobservance, without any anticipated commercial application,\nis use for a permitted purpose.\n\n## Noncommercial Organizations\n\nUse by any charitable organization, educational institution,\npublic research organization, public safety or health\norganization, environmental protection organization,\nor government institution is use for a permitted purpose\nregardless of the source of funding or obligations resulting\nfrom the funding.\n\n## Fair Use\n\nYou may have \"fair use\" rights for the software under the\nlaw. These terms do not limit them.\n\n## No Other Rights\n\nThese terms do not allow you to sublicense or transfer any of\nyour licenses to anyone else, or prevent the licensor from\ngranting licenses to anyone else.  These terms do not imply\nany other licenses.\n\n## Patent Defense\n\nIf you make any written claim that the software infringes or\ncontributes to infringement of any patent, your patent license\nfor the software granted under these terms ends immediately. If\nyour company makes such a claim, your patent license ends\nimmediately for work on behalf of your company.\n\n## Violations\n\nThe first time you are notified in writing that you have\nviolated any of these terms, or done anything with the software\nnot covered by your licenses, your licenses can nonetheless\ncontinue if you come into full compliance with these terms,\nand take practical steps to correct past violations, within\n32 days of receiving notice.  Otherwise, all your licenses\nend immediately.\n\n## No Liability\n\n***As far as the law allows, the software comes as is, without\nany warranty or condition, and the licensor will not be liable\nto you for any damages arising out of these terms or the use\nor nature of the software, under any kind of legal claim.***\n\n## Definitions\n\nThe **licensor** is the individual or entity offering these\nterms, and the **software** is the software the licensor makes\navailable under these terms.\n\n**You** refers to the individual or entity agreeing to these\nterms.\n\n**Your company** is any legal entity, sole proprietorship,\nor other kind of organization that you work for, plus all\norganizations that have control over, are under the control of,\nor are under common control with that organization.  **Control**\nmeans ownership of substantially all the assets of an entity,\nor the power to direct its management and policies by vote,\ncontract, or otherwise.  Control can be direct or indirect.\n\n**Your licenses** are all the licenses granted to you for the\nsoftware under these terms.\n\n**Use** means anything you do with the software requiring one\nof your licenses.\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Asgard"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lanagarmire"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 41316,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1534,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1070,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 309,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lanagarmire",
          "type": "User"
        },
        "date_created": "2021-11-12T01:37:46Z",
        "date_published": "2023-01-30T03:51:53Z",
        "description": "This release contains all the code related to ASGARD.",
        "html_url": "https://github.com/lanagarmire/Asgard/releases/tag/v1.0.0",
        "name": "ASGARD: A Single-cell Guided Pipeline to Aid Repurposing of Drugs",
        "release_id": 90632126,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/lanagarmire/Asgard/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/lanagarmire/Asgard/releases/90632126",
        "value": "https://api.github.com/repos/lanagarmire/Asgard/releases/90632126",
        "zipball_url": "https://api.github.com/repos/lanagarmire/Asgard/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Hardware requirements**",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**System Requirements**"
        ],
        "type": "Text_excerpt",
        "value": "Asgard package requires only a standard computer with enough RAM (>64GB) to\nsupport the in-memory operations.\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**Software requirements**",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**System Requirements**"
        ],
        "type": "Text_excerpt",
        "value": "The package has been tested on the following systems:\n```\nWindows 10\nCentOS Linux 7\n```\n\nRequired R packages:\n```\nSeurat\nlimma\ncmapR\nSingleR\ncelldex\n```"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contact",
    "description",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:42:49",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 40
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
        "type": "Text_excerpt",
        "value": "Using scRNA-seq data, Asgard repurposes drugs and predicts personalized drug\ncombinations to address the cellular heterogeneity of patients. \n\n![image](asgard_pipeline.png)\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Load Asgard",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```\nlibrary('Asgard')\n```"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can run Asgard via Docker. First, install Docker for your platform.\n\n```\ndocker run --rm -v `pwd`:/home/rstudio/Asgard -p 8787:8787 -it lanagarmire/asgard:1.0.0\n```\n\nThis will mount the directory that you are currently working in so it is accessible by the Docker container.\n\nYou can then open a browser and navigate to 127.0.0.1:8787, put in \"rstudio\" as the username and \ncopy the password from the terminal. You will want to change the working directory to \"/home/rstudio/Asgard\".\n\nTo build the DrugReference, you will need a large amount of RAM (64GB).\n\nUpon completion, you can press ^C in the terminal to quit the rstudio server.\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**Step 1: Load single-cell RNA-seq data**",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**"
        ],
        "type": "Text_excerpt",
        "value": "Download datasets GSE113197 and GSE123926 from GEO before running this script.\n\nHuman Breast Cancer Epithelial Cells (GSE123926):\n[GSE123926_RAW.tar](https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE123926&format=file) \n\nNormal Human Breast Epithelial Cells (GSE113197):\n[GSE113197_RAW.tar](https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE113197&format=file) \n\n```R\nlibrary('Seurat')\n\n# Load cells' cell type annotations for GSE113197\ncell_types_file <- paste0(\n\t\"https://raw.githubusercontent.com/lanagarmire/\"\n\t\"Single-cell-drug-repositioning/master/Drug/Normal_celltype.txt\"\n)\ncell_types <- read.table(file=celltypes, header=TRUE, check.names=FALSE)\n\n# Cell type of interest\ncell_types_names <- c(\n  \t\"Luminal_L2_epithelial_cells\", \"Luminal_L1.1_epithelial_cells\", \n    \"Luminal_L1.2_epithelial_cells\", \"Basal_epithelial_cells\"\n)\n\n# Load normal sample Ind5 from GSE113197 dataset \ndata <- read.table(file=\"GSM3099847_Ind5_Expression_Matrix.txt\", \n                   header=TRUE, check.names=FALSE)\nrow.names(data) <- data[, 1]\ndata <- data[, -1]\nind5_cells <- subset(cell_type, sample==\"Ind5\" & celltype %in% celltypes_names)\ncommon <- intersect(colnames(data), rownames(ind5_cells))\ndata <- data[, common]\n\nmetadata = data.frame(\n\tind5_celltypes,\n\tcell = colnames(data),\n\ttype = \"normal\"\n)\nepithelial2 <- CreateSeuratObject(counts=data, project=\"Epithelial\", min.cells=3, \n\t\t\t\t\t\t\t\t  min.features=200, meta.data=metada)\n\n#Load normal sample Ind6 from GSE113197 dataset\ndata <- read.table(file=\"GSM3099848_Ind6_Expression_Matrix.txt\", header=TRUE,\n\t\t\t\t   check.names=FALSE)\nrow.names(data) <- data[, 1]\ndata <- data[, -1]\nind6_cells <- subset(celltype,sample==\"Ind6\" & celltype %in% c(\"Luminal_L2_epithelial_cells\",\"Luminal_L1.1_epithelial_cells\", \"Luminal_L1.2_epithelial_cells\", \"Basal_epithelial_cells\"))\ncommon <- intersect(colnames(data), rownames(celltype3))\ndata<-data[,common]\nEpithelial3 <- CreateSeuratObject(counts = data, project = \"Epithelial\", min.cells = 3, min.features = 200,meta.data=data.frame(celltype3,cell=colnames(data),type=\"Normal\"))\n\n#Load normal sample Ind7 from GSE113197 dataset\ndata<-read.table(file=\"GSM3099849_Ind7_Expression_Matrix.txt\",header = T,check.names=FALSE)\nrow.names(data)<-data[,1]\ndata<-data[,-1]\ncelltype4<-subset(celltype,sample==\"Ind7\" & celltype %in% c(\"Luminal_L2_epithelial_cells\",\"Luminal_L1.1_epithelial_cells\", \"Luminal_L1.2_epithelial_cells\", \"Basal_epithelial_cells\"))\ncommon <- intersect(colnames(data), rownames(celltype4))\ndata<-data[,common]\nEpithelial4 <- CreateSeuratObject(counts = data, project = \"Epithelial\", min.cells = 3, min.features = 200,meta.data=data.frame(celltype4,cell=colnames(data),type=\"Normal\"))\n\n#Load cancer sample PDX110 from GSE123926 dataset\nTNBC_PDX.data<- Read10X(data.dir = \"GSM3516947_PDX110\")\nTNBC.PDX2 <- CreateSeuratObject(counts = TNBC_PDX.data, project = \"TNBC\", min.cells = 3, min.features = 200, meta.data=data.frame(row.names=colnames(TNBC_PDX.data), cell=colnames(TNBC_PDX.data), sample=\"PDX-110\",type=\"TNBC.PDX\"))\n\n#Load cancer sample PDX322 from GSE123926 dataset\nTNBC_PDX.data<- Read10X(data.dir = \"GSM3516948_PDX322\")\nTNBC.PDX3 <- CreateSeuratObject(counts = TNBC_PDX.data, project = \"TNBC\", min.cells = 3, min.features = 200, meta.data=data.frame(row.names=colnames(TNBC_PDX.data), cell=colnames(TNBC_PDX.data), sample=\"PDX-332\",type=\"TNBC.PDX\"))\n\n\n```\n\n#### Step 2"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single-cell alignment",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```R \nSC.list <- list(\n\tTNBC.PDX2 = TNBC.PDX2,\n\tTNBC.PDX3 = TNBC.PDX3,\n\tEpithelial2 = Epithelial2,\n\tEpithelial3 = Epithelial3,\n\tEpithelial4 = Epithelial4\n)\nCellCycle = TRUE #Set it TRUE if you want to do Cell Cycle Regression\nanchor.features=2000\n\nfor (i in 1:length(SC.list)) {\n    SC.list[[i]] <- NormalizeData(SC.list[[i]], verbose = FALSE)\n    SC.list[[i]] <- FindVariableFeatures(SC.list[[i]], selection.method = \"vst\",\n                           nfeatures = anchor.features, verbose = FALSE)\n}\n    SC.anchors <- FindIntegrationAnchors(object.list = SC.list,anchor.features = anchor.features, dims = 1:15)\n    SC.integrated <- IntegrateData(anchorset = SC.anchors, dims = 1:15)\n    DefaultAssay(SC.integrated) <- \"integrated\"\n    if (CellCycle) {\n\t\t##Cell Cycle Regression\n\t\ts.genes <- cc.genes$s.genes\n\t\tg2m.genes <- cc.genes$g2m.genes\n\t\tSC.integrated <- CellCycleScoring(SC.integrated, s.features = s.genes, g2m.features = g2m.genes, set.ident = TRUE)\n\t\tSC.integrated <- ScaleData(SC.integrated, vars.to.regress = c(\"S.Score\", \"G2M.Score\"), features = rownames(SC.integrated))\n\t\tSC.integrated <- RunPCA(SC.integrated, npcs = 15, verbose = FALSE)\n    }\n\telse {\n\t\t##Run the standard workflow for visualization and clustering\n\t\tSC.integrated <- ScaleData(SC.integrated, verbose = FALSE)\n\t\tSC.integrated <- RunPCA(SC.integrated, npcs = 15, verbose = FALSE)\n    }\n    ##t-SNE and Clustering\n    SC.integrated <- RunUMAP(SC.integrated, reduction = \"pca\", dims = 1:15)\n    SC.integrated <- FindNeighbors(SC.integrated, reduction = \"pca\", dims = 1:15)\n    SC.integrated <- FindClusters(SC.integrated, algorithm = 1, resolution = 0.4)\n\n    ##Cell Type Annotation, set by.CellType=TRUE if you want to annotate cell  type.\n    by.CellType=FALSE\n    if(by.CellType == TRUE){\n     data <- as.matrix(SC.integrated@assays$RNA@data)\n     hpca.se <- HumanPrimaryCellAtlasData()\n     pred.hpca <- SingleR(test = data, ref = hpca.se, assay.type.test=1, labels = hpca.se$label.main)\n     cell.label <- data.frame(row.names = row.names(pred.hpca),celltype=pred.hpca$labels)\n     if(length(SC.integrated@meta.data$celltype)>0){\n      SC.integrated@meta.data$celltype <- cell.label$celltype\n     }else{\n       SC.integrated@meta.data <- cbind(SC.integrated@meta.data,cell.label)\n     }\n     new.cells <- data.frame()\n     for(i in unique(SC.integrated$seurat_clusters)){\n      sub.data <- subset(SC.integrated,seurat_clusters==i)\n      temp <- table(sub.data@meta.data$celltype)\n      best.cell <- names(which(temp==temp[which.max(temp)]))\n      cells.temp <- data.frame(cell.id=row.names(sub.data@meta.data),celltype=best.cell)\n      new.cells <- rbind(new.cells,cells.temp)\n     }\n     cell.meta <- SC.integrated@meta.data\n     cell.id <- rownames(cell.meta)\n     row.names(new.cells) <- new.cells[,1]\n     new.cells <- new.cells[cell.id,]\n     SC.integrated@meta.data$celltype <- new.cells$celltype\n    }else{\n     SC.integrated@meta.data$celltype <- paste0(\"C\",as.numeric(SC.integrated@meta.data$seurat_clusters))\n    }\n\n#Change sample names\nsample<-SC.integrated@meta.data$sample\nsample[which(sample==\"Ind5\")]<-\"Normal1\"\nsample[which(sample==\"Ind6\")]<-\"Normal2\"\nsample[which(sample==\"Ind7\")]<-\"Normal3\"\nSC.integrated@meta.data$sample<-sample\n\n#Visualize alignment result\nDimPlot(SC.integrated, reduction = \"umap\", split.by = \"sample\",group.by = \"celltype\")\n```"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single-cell comparison",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```\n#Case sample names\nCase=c(\"PDX-110\",\"PDX-332\")\n\n#Control sample names\nControl=c(\"Normal1\",\"Normal2\",\"Normal3\")\n\n\n#Get differential gene expression profiles for every cell type (or cluster if without annotation) from Limma\nlibrary('limma')\nDefaultAssay(SC.integrated) <- \"RNA\"\nset.seed(123456)\nGene.list <- list()\nC_names <- NULL\nfor(i in unique(SC.integrated@meta.data$celltype)){\n     Idents(SC.integrated) <- \"celltype\"\n     c_cells <- subset(SC.integrated, celltype == i)\n     Idents(c_cells) <- \"type\"\n     Samples=c_cells@meta.data\n     Controlsample <- row.names(subset(Samples,sample %in% Control))\n     Casesample <- row.names(subset(Samples,sample %in% Case))\n     if(length(Controlsample)>min.cells & length(Casesample)>min.cells){\n      expr <- as.matrix(c_cells@assays$RNA@data)\n      new_expr <- as.matrix(expr[,c(Casesample,Controlsample)])\n      new_sample <- data.frame(Samples=c(Casesample,Controlsample),type=c(rep(\"Case\",length(Casesample)),rep(\"Control\",length(Controlsample))))\n      row.names(new_sample) <- paste(new_sample$Samples,row.names(new_sample),sep=\"_\")\n      expr <- new_expr\n      bad <- which(rowSums(expr>0)<3)\n      expr <- expr[-bad,]\n      mm <- model.matrix(~0 + type, data = new_sample)\n      fit <- lmFit(expr, mm)\n      contr <- makeContrasts(typeCase - typeControl, levels = colnames(coef(fit)))\n      tmp <- contrasts.fit(fit, contrasts = contr)\n      tmp <- eBayes(tmp)\n      C_data <- topTable(tmp, sort.by = \"P\",n = nrow(tmp))\n      C_data_for_drug <- data.frame(row.names=row.names(C_data),score=C_data$t,adj.P.Val=C_data$adj.P.Val,P.Value=C_data$P.Value)\n      Gene.list[[i]] <- C_data_for_drug\n      C_names <- c(C_names,i)\n     }\n}\nnames(Gene.list) <- C_names\n\n#Get differential genes from Seurat (Wilcoxon Rank Sum test)\nlibrary('Seurat')\nDefaultAssay(SC.integrated) <- \"RNA\"\nset.seed(123456)\nGene.list <- list()\nC_names <- NULL\nfor(i in unique(SC.integrated@meta.data$celltype)){\n  Idents(SC.integrated) <- \"celltype\"\n  c_cells <- subset(SC.integrated, celltype == i)\n  Idents(c_cells) <- \"type\"\n  C_data <- FindMarkers(c_cells, ident.1 = \"TNBC.PDX\", ident.2 = \"Normal\")\n  C_data_for_drug <- data.frame(row.names=row.names(C_data),score=C_data$avg_logFC,adj.P.Val=C_data$p_val_adj,P.Value=C_data$p_val) ##for Seurat version > 4.0, please use avg_log2FC instead of avg_logFC\n  Gene.list[[i]] <- C_data_for_drug\n  C_names <- c(C_names,i)\n}\nnames(Gene.list) <- C_names\n\n#Get differential genes from DESeq2 method\nlibrary('Seurat')\nDefaultAssay(SC.integrated) <- \"RNA\"\nset.seed(123456)\nGene.list <- list()\nC_names <- NULL\nfor(i in unique(SC.integrated@meta.data$celltype)){\n  Idents(SC.integrated) <- \"celltype\"\n  c_cells <- subset(SC.integrated, celltype == i)\n  Idents(c_cells) <- \"type\"\n  C_data <- FindMarkers(c_cells, ident.1 = \"TNBC.PDX\", ident.2 = \"Normal\", test.use = \"DESeq2\")\n  C_data_for_drug <- data.frame(row.names=row.names(C_data),score=C_data$avg_logFC,adj.P.Val=C_data$p_val_adj,P.Value=C_data$p_val) ##for Seurat version > 4.0, please use avg_log2FC instead of avg_logFC\n  Gene.list[[i]] <- C_data_for_drug\n  C_names <- c(C_names,i)\n}\nnames(Gene.list) <- C_names\n\n#Get differential genes from EdgeR\nlibrary('edgeR')\nCase=c(\"PDX-110\",\"PDX-332\")\nControl=c(\"Normal1\",\"Normal2\",\"Normal3\")\nDefaultAssay(SC.integrated) <- \"RNA\"\nset.seed(123456)\nmin.cells=3 # The minimum number of cells for a cell type. A cell type is omitted if it has less cells than the minimum number.\nGene.list <- list()\nC_names <- NULL\nfor(i in unique(SC.integrated@meta.data$celltype)){\n  Idents(SC.integrated) <- \"celltype\"\n  c_cells <- subset(SC.integrated, celltype == i)\n  Idents(c_cells) <- \"type\"\n  Samples=c_cells@meta.data\n  Controlsample <- row.names(subset(Samples,sample %in% Control))\n  Casesample <- row.names(subset(Samples,sample %in% Case))\n  if(length(Controlsample)>min.cells & length(Casesample)>min.cells){\n    expr <- as.matrix(c_cells@assays$RNA@data)\n    new_expr <- as.matrix(expr[,c(Casesample,Controlsample)])\n    new_sample <- data.frame(Samples=c(Casesample,Controlsample),type=c(rep(\"Case\",length(Casesample)),rep(\"Control\",length(Controlsample))))\n    row.names(new_sample) <- paste(new_sample$Samples,row.names(new_sample),sep=\"_\")\n    expr <- new_expr\n    bad <- which(rowSums(expr>0)<3)\n    expr <- expr[-bad,]\n    group <- new_sample$type\n    dge <- DGEList(counts=expr, group=group)\n    group_edgeR <- factor(group,levels = c(\"Control\",\"Case\"))\n    design <- model.matrix(~ group_edgeR)\n    dge <- estimateDisp(dge, design = design)\n    fit <- glmFit(dge, design)\n    res <- glmLRT(fit)\n    C_data <- res$table\n    C_data_for_drug <- data.frame(row.names=row.names(C_data),score=C_data$logFC,adj.P.Val=p.adjust(C_data$PValue,method = \"BH\"),P.Value=C_data$PValue)\n    Gene.list[[i]] <- C_data_for_drug\n    C_names <- c(C_names,i)\n  }\n}\nnames(Gene.list) <- C_names\n```\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Mono-drug repurposing for every cell type",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```R\nlibrary('Asgard')\n\n#Load tissue specific drug reference produced by PrepareReference function as mentioned above. Please select proper tissue accroding to the disease.\nmy_gene_info<-read.table(file=\"DrugReference/breast_gene_info.txt\",sep=\"\\t\",header = T,quote = \"\")\nmy_drug_info<-read.table(file=\"DrugReference/breast_drug_info.txt\",sep=\"\\t\",header = T,quote = \"\")\ndrug.ref.profiles = GetDrugRef(drug.response.path = 'DrugReference/breast_rankMatrix.txt',\n                               probe.to.genes = my_gene_info, \n                               drug.info = my_drug_info)\n\n#Repurpose mono-drugs for every cell type                               \nDrug.ident.res = GetDrug(gene.data = Gene.list, \n                        drug.ref.profiles = drug.ref.profiles, \n                        repurposing.unit = \"drug\", \n                        connectivity = \"negative\", \n                        drug.type = \"FDA\")\n                       \n```\nUse '?GetDrug' for more help\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 5: Estimation of drug score",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "Calculate drug score using information from all or a subset of clusters. Use \n`?DrugScore` for more help.\n\n```R\nlibrary('Asgard')\nlibrary('Seurat')\n\n# Change the following two lines with the paths on your computer\ngse92742_gctx_path <- \"GSE92742_Broad_LINCS_Level5_COMPZ.MODZ_n473647x12328.gctx\"\ngse70138_gctx_path <- \"GSE70138_Broad_LINCS_Level5_COMPZ_n118050x12328_2017-03-06.gctx\"\n\ncell_metadata <- SC.integrated@meta.data\ncell_metadata$cluster <- SC.integrated@meta.data$celltype\n\nDrug.score <- DrugScore(cell_metadata, cluster_degs = Gene.list, \n                        cluster_drugs = Drug.ident.res, tissue = \"breast\", \n                        case = Case, gse92742_gctx_path = gse92742_gctx_path, \n                        gse70138_gctx_path = gse70138_gctx_path)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 6: Select mono-drug therapies",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```\nlibrary('Asgard')\nlibrary('Seurat')\n\n#Select drug using drug socre\nlibrary(Hmisc)\nFinal.drugs<-subset(Drug.score,Drug.therapeutic.score>quantile(Drug.score$Drug.therapeutic.score, 0.99,na.rm=T) & FDR <0.05)\n\n\n#Select drug for individual clusters\nFinal.drugs<-TopDrug(SC.integrated=SC.integrated,\n                   Drug.data=Drug.ident.res,\n                   Drug.FDR=0.1,\n                   FDA.drug.only=TRUE,\n                   Case=Case.samples,\n                   DrugScore=FALSE\n)\n\n```"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Drug combination analysis",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```\nlibrary('Asgard')\nlibrary('Seurat')\n\nGSE92742.gctx.path=\"GSE92742_Broad_LINCS_Level5_COMPZ.MODZ_n473647x12328.gctx\"\nGSE70138.gctx.path=\"GSE70138_Broad_LINCS_Level5_COMPZ_n118050x12328_2017-03-06.gctx\"\nDrug.combinations<-DrugCombination(SC.integrated=SC.integrated,\n                      Gene.data=Gene.list,\n                      Drug.data=Drug.ident.res,\n                      Drug.FDR=0.1,\n                      FDA.drug.only=TRUE,\n                      Combined.drugs=2,\n                      Case=Case,\n                      Tissue=\"breast\",\n                      GSE92742.gctx=GSE92742.gctx.path,\n                      GSE70138.gctx=GSE70138.gctx.path)\n```\nPlease use '?DrugCombination' for more help.\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Select drug combination therapies",
        "parent_header": [
          "**Asgard: A Single-cell Guided pipeline to Aid Repurposing of Drugs**",
          "**Drug Repurposing**",
          "**Step 1: Load single-cell RNA-seq data**"
        ],
        "type": "Text_excerpt",
        "value": "```\nlibrary('Asgard')\nFinal.combinations<-TopCombination(Drug.combination=Drug.combinations,\n                   Combination.FDR=0.1,\n                   Min.combination.score=1\n)\n```\nDemo codes using real datasets are available at: https://github.com/lanagarmire/Single-cell-drug-repositioning\n\nIf you have further questions or comments, please contact Dr.Bing He: hbing@umich.edu or hebinghb@gmail.com\n"
      },
      "source": "https://raw.githubusercontent.com/lanagarmire/ASGARD/main/README.md",
      "technique": "header_analysis"
    }
  ]
}