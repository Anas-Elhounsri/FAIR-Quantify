{
  "application_domain": [
    {
      "confidence": 25.19,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "type": "Text_excerpt",
        "value": "Szolek, A, Schubert, B, Mohr, C, Sturm, M, Feldhahn, M, and Kohlbacher, O (2014).\nOptiType: precision HLA typing from next-generation sequencing data\nBioinformatics, 30(23):3310-6.\n"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FRED-2/OptiType"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "Andr\u00e1s Szolek  \nszolek@informatik.uni-tuebingen.de  \nUniversity of T\u00fcbingen, Applied Bioinformatics,  \nCenter for Bioinformatics, Quantitative Biology Center,  \nand Dept. of Computer Science,  \nSand 14, 72076 T\u00fcbingen, Germany\n\n"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-05-07T12:08:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-30T19:48:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Precision HLA typing from next-generation sequencing data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "OptiType is a novel HLA genotyping algorithm based on integer linear\nprogramming, capable of producing accurate 4-digit HLA genotyping predictions\nfrom NGS data by simultaneously selecting all major and minor HLA Class I alleles.\n\n"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8887559116849564,
      "result": {
        "type": "Text_excerpt",
        "value": "Precision HLA typing from next-generation sequencing data \nAuthors: Andr\u00e1s Szolek, Benjamin Schubert, Christopher Mohr  \nDate: April 2014  \nVersion: 1.3.3  \nLicense: OptiType is released under a three-clause BSD license \n"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/FRED-2/OptiType/wiki"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FRED-2/OptiType/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 74
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FRED-2/OptiType/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FRED-2/OptiType"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FRED-2/OptiType/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation via Docker",
        "type": "Text_excerpt",
        "value": "1. Install Docker on your computer and make sure it works.\n\n2. Call `docker pull fred2/optitype` which will download the Docker image.\n\n3. You can use the image as followes:\n\n`docker run -v /path/to/data/folder:/data/ -t fred2/optitype -i input1 [input2] (-r|-d) -o /data/`\n\nOptiType uses the CBC-Solver and RazerS3 internally with one thread if no other configuration file is provided. RazerS3's binary can be found at `/usr/local/bin` within the Docker image. \n"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation from Source",
        "type": "Text_excerpt",
        "value": "1. Install all required software and libraries from the first list.\n\n2. Include SAMtools and your ILP solver in your `PATH` environment variable.\nThey both have to be globally accessible every time you run OptiType, so make\nthem permanent (put in in your `.bashrc` or similar shell startup script).\n\n3. Add HDF5's `lib` directory to your `LD_LIBRARY_PATH`. Make sure it's\npermanent too.\n\n4. Create and activate a Python virtual environment with the package\n[virtualenv](https://virtualenv.pypa.io/en/latest/). This will automatically\ninstall the package manager `pip` which you will need for the next steps.\nAlways run OptiType from this virtual environment.\n\n5. Install NumPy, Pyomo, Pysam and Matplotlib with\nthe following commands:\n\n    ```\n    pip install numpy\n    pip install pyomo\n    pip install pysam\n    pip install matplotlib\n    ```\n\n6. Create a new environment variable containing the path to your HDF5\ninstallation. It doesn't have to be permanent, but it has to be accessible\nwhen you install PyTables. On the bash shell it would be\n`export HDF5_DIR=/path/to/hdf5-1.8.15`\n\n7. Install PyTables, Pandas and Future with\n\n    ```\n    pip install tables\n    pip install pandas\n    pip install future\n    ```\n\n8. Create a configuration file following `config.ini.example`. You will find\nall necessary instructions in there. OptiType will look for the configuration\nfile at `config.ini` in the same directory by default, but you can put it\nanywhere and pass it with the `-c` option when running OptiType.\n\n"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FRED-2/OptiType/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) Andr\u00e1s Szolek, Benjamin Schubert, and Christopher Mohr -- Eberhard Karls University Tuebingen April 2014.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the {organization} nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OptiType"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "FRED-2"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 81967,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 3169,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andras86",
          "type": "User"
        },
        "date_created": "2020-09-15T10:27:36Z",
        "date_published": "2020-09-15T10:42:30Z",
        "html_url": "https://github.com/FRED-2/OptiType/releases/tag/v1.3.5",
        "name": "Fixed potential output collisions",
        "release_id": 31320213,
        "tag": "v1.3.5",
        "tarball_url": "https://api.github.com/repos/FRED-2/OptiType/tarball/v1.3.5",
        "type": "Release",
        "url": "https://api.github.com/repos/FRED-2/OptiType/releases/31320213",
        "value": "https://api.github.com/repos/FRED-2/OptiType/releases/31320213",
        "zipball_url": "https://api.github.com/repos/FRED-2/OptiType/zipball/v1.3.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andras86",
          "type": "User"
        },
        "date_created": "2020-04-14T09:43:36Z",
        "date_published": "2020-04-14T11:16:20Z",
        "html_url": "https://github.com/FRED-2/OptiType/releases/tag/v1.3.4",
        "name": "Release for bioconda integration",
        "release_id": 25482062,
        "tag": "v1.3.4",
        "tarball_url": "https://api.github.com/repos/FRED-2/OptiType/tarball/v1.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/FRED-2/OptiType/releases/25482062",
        "value": "https://api.github.com/repos/FRED-2/OptiType/releases/25482062",
        "zipball_url": "https://api.github.com/repos/FRED-2/OptiType/zipball/v1.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andras86",
          "type": "User"
        },
        "date_created": "2020-04-06T08:25:13Z",
        "date_published": "2020-04-06T08:26:13Z",
        "html_url": "https://github.com/FRED-2/OptiType/releases/tag/v1.3.3",
        "name": "Pyhton 2.7 configparser and pandas deprecations fixed",
        "release_id": 25226335,
        "tag": "v1.3.3",
        "tarball_url": "https://api.github.com/repos/FRED-2/OptiType/tarball/v1.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/FRED-2/OptiType/releases/25226335",
        "value": "https://api.github.com/repos/FRED-2/OptiType/releases/25226335",
        "zipball_url": "https://api.github.com/repos/FRED-2/OptiType/zipball/v1.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andras86",
          "type": "User"
        },
        "date_created": "2018-07-03T13:02:44Z",
        "date_published": "2018-07-03T13:04:54Z",
        "html_url": "https://github.com/FRED-2/OptiType/releases/tag/v1.3.2",
        "name": "Including output prefix option",
        "release_id": 11757994,
        "tag": "v1.3.2",
        "tarball_url": "https://api.github.com/repos/FRED-2/OptiType/tarball/v1.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/FRED-2/OptiType/releases/11757994",
        "value": "https://api.github.com/repos/FRED-2/OptiType/releases/11757994",
        "zipball_url": "https://api.github.com/repos/FRED-2/OptiType/zipball/v1.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "b-schubert",
          "type": "User"
        },
        "date_created": "2017-06-19T15:36:31Z",
        "date_published": "2017-08-24T14:36:53Z",
        "html_url": "https://github.com/FRED-2/OptiType/releases/tag/v1.3.1",
        "name": "v1.3.1 HDF5 link fixes Docker support",
        "release_id": 7510400,
        "tag": "v1.3.1",
        "tarball_url": "https://api.github.com/repos/FRED-2/OptiType/tarball/v1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/FRED-2/OptiType/releases/7510400",
        "value": "https://api.github.com/repos/FRED-2/OptiType/releases/7510400",
        "zipball_url": "https://api.github.com/repos/FRED-2/OptiType/zipball/v1.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andras86",
          "type": "User"
        },
        "date_created": "2017-01-19T14:26:51Z",
        "date_published": "2017-03-15T13:27:43Z",
        "html_url": "https://github.com/FRED-2/OptiType/releases/tag/v1.2.1",
        "release_id": 5752837,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/FRED-2/OptiType/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/FRED-2/OptiType/releases/5752837",
        "value": "https://api.github.com/repos/FRED-2/OptiType/releases/5752837",
        "zipball_url": "https://api.github.com/repos/FRED-2/OptiType/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "b-schubert",
          "type": "User"
        },
        "date_created": "2016-09-02T07:45:34Z",
        "date_published": "2016-09-02T07:48:02Z",
        "description": " Python 3 support\n",
        "html_url": "https://github.com/FRED-2/OptiType/releases/tag/v1.2",
        "release_id": 4036236,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/FRED-2/OptiType/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/FRED-2/OptiType/releases/4036236",
        "value": "https://api.github.com/repos/FRED-2/OptiType/releases/4036236",
        "zipball_url": "https://api.github.com/repos/FRED-2/OptiType/zipball/v1.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "OptiType uses the following software and libraries:\n\n1. [Python 2.7](https://www.python.org/)\n2. [RazerS 3.4](http://www.seqan.de/projects/razers/)\n3. [SAMtools 1.2](http://www.htslib.org/)\n4. [HDF5 1.8.15](https://www.hdfgroup.org/HDF5/)\n5. [CPLEX 12.5](http://www-01.ibm.com/software/commerce/optimization/cplex-optimizer/)\n   or other Pyomo-supported ILP solver ([GLPK](https://www.gnu.org/software/glpk/), \n   [CBC](https://projects.coin-or.org/Cbc), ...)\n\nAnd the following Python modules:\n\n1. NumPy 1.9.3\n2. Pyomo 4.2\n3. PyTables 3.2.2\n4. Pandas 0.16.2\n5. Pysam 0.8.3\n6. Matplotlib 1.4.3\n7. Future 0.15.2\n\nNote: CPLEX has a proprietary license but is free for academic use. See IBM's\n[academic initiative.](http://www-304.ibm.com/ibm/university/academic/pub/page/academic_initiative)\n"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:31:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 183
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "Optional step zero: you might want to filter your sequencing data for\nHLA reads. Should you have to re-run OptiType multiple times on the same sample\n(different settings, etc.) it could save you time if instead of giving OptiType\nthe full, multi-gigabyte sequencing data multiple times, you would rather give\nit the relevant reads only, on the order of megabytes.\n\nYou can use any read mapper to do this step, although we suggest you use RazerS3.\nIts only drawback is that due to way RazerS3 was designed, it loads all reads\ninto memory, which could be a problem on older, low-memory computing nodes.\n\nMake sure to filter your files correctly depending on whether you have DNA\n(exome, WGS) or RNA-Seq data. The reference fasta files are\n`data/hla_reference_dna.fasta` and `data/hla_reference_rna.fasta` respectively.\nBelow is an example for DNA sequencing data:\n\n```\n>razers3 -i 95 -m 1 -dr 0 -o fished_1.bam /path/to/OptiType/data/hla_reference_dna.fasta sample_1.fastq\n\n>samtools bam2fq fished_1.bam > sample_1_fished.fastq\n\n>rm fished_1.bam\n```\n\nIf you have paired-end data, repeat this with the second ends' fastq file as well.\nNote: it's important that you filter the two ends individually. Don't use the\nread mapper's paired-end capabilities.\n\nAfter the optional filtering, OptiType can be called as follows:\n```\n>python /path/to/OptiTypePipeline.py -i sample_fished_1.fastq [sample_fished_2.fastq]\n                    (--rna | --dna) [--beta BETA] [--enumerate N]\n                    [-c CONFIG] [--verbose] --outdir /path/to/out_dir/\n```\n\nThis will produce a time-stamped directory inside the specified output directory\ncontaining a CSV file with the predicted optimal (and if enumerated, sub-optimal)\nHLA genotype, and a pdf file containing a coverage plot of the predicted alleles\nfor diagnostic purposes.\n\n```\n>python OptiTypePipeline.py --help  \n\nusage: OptiType [-h] --input FQ [FQ] (--rna | --dna) [--beta B]\n                [--enumerate N] --outdir OUTDIR [--verbose] [--config CONFIG]\n\nOptiType: 4-digit HLA typer\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --input FQ [FQ], -i FQ [FQ]\n                        .fastq file(s) (fished or raw) or .bam files stored\n                        for re-use, generated by an earlier OptiType run. One\n                        file: single-end mode, two files: paired-end mode.\n  --rna, -r             Use with RNA sequencing data.\n  --dna, -d             Use with DNA sequencing data.\n  --beta B, -b B        The beta value for for homozygosity detection (see\n                        paper). Default: 0.009. Handle with care.\n  --enumerate N, -e N   Number of enumerations. OptiType will output the\n                        optimal solution and the top N-1 suboptimal solutions\n                        in the results CSV. Default: 1\n  --outdir OUTDIR, -o OUTDIR\n                        Specifies the out directory to which all files should\n                        be written.\n  --prefix PREFIX, -p PREFIX\n                        Specifies prefix of output files\n  --verbose, -v         Set verbose mode on.\n  --config CONFIG, -c CONFIG\n                        Path to config file. Default: config.ini in the same\n                        directory as this script\n```\n\nFurthermore, depending on your settings in `config.ini` you can choose to keep\nthe bam files OptiType produces when all-mapping reads against the reference:\nthese will be stored in the output directory of your current run.\n\nThen, if you want to re-run OptiType on the same sample, you can give it those\nintermediate `.bam` files as input instead of `.fastq` files, and spare on the\nmapping part of the pipeline. Note: these `.bam` files have nothing to do with\nthose produced during the filtering/fishing step.\n\n"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Test examples",
        "type": "Text_excerpt",
        "value": "DNA data (paired end):\n```\npython OptiTypePipeline.py -i ./test/exome/NA11995_SRR766010_1_fished.fastq ./test/exome/NA11995_SRR766010_2_fished.fastq --dna -v -o ./test/exome/\n```\n\nRNA data (paired end):\n```\npython OptiTypePipeline.py -i ./test/rna/CRC_81_N_1_fished.fastq ./test/rna/CRC_81_N_2_fished.fastq --rna -v -o ./test/rna/\n```\n"
      },
      "source": "https://raw.githubusercontent.com/FRED-2/OptiType/master/README.md",
      "technique": "header_analysis"
    }
  ]
}