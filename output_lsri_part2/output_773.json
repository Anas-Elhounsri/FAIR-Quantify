{
  "application_domain": [
    {
      "confidence": 18.62,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - family-names: Sachs\n    given-names: Christian Carsten\n    orcid: https://orcid.org/0000-0001-8848-5775\n\n  - family-names: Ruzaeva\n    given-names: Karina\n    orcid: https://orcid.org/0000-0003-3610-0989\n\n  - family-names: Seiffarth\n    given-names: Johannes\n    orcid: https://orcid.org/0000-0002-2087-9847\n\n  - family-names: Wiechert\n    given-names: Wolfgang\n    orcid: https://orcid.org/0000-0001-8501-0694\n\n  - family-names: Berkels\n    given-names: Benjamin\n    orcid: https://orcid.org/0000-0002-6969-187X\n\n  - family-names: N\u00f6h\n    given-names: Katharina\n    orcid: https://orcid.org/0000-0002-5407-2275\nversion: 1.0.0\ntitle: \"CellSium\"\ndoi: 10.5281/zenodo.6193033\n\npreferred-citation:\n  title: \"CellSium: versatile cell simulator for microcolony ground truth generation\"\n  type: article\n  journal: Bioinformatics Advances\n  month: 8\n  year: 2022\n  doi: 10.1093/bioadv/vbac053\n  volume: 2\n  issue: 1\n  authors:\n    - family-names: Sachs\n      given-names: Christian Carsten\n      orcid: https://orcid.org/0000-0001-8848-5775\n  \n    - family-names: Ruzaeva\n      given-names: Karina\n      orcid: https://orcid.org/0000-0003-3610-0989\n  \n    - family-names: Seiffarth\n      given-names: Johannes\n      orcid: https://orcid.org/0000-0002-2087-9847\n  \n    - family-names: Wiechert\n      given-names: Wolfgang\n      orcid: https://orcid.org/0000-0001-8501-0694\n  \n    - family-names: Berkels\n      given-names: Benjamin\n      orcid: https://orcid.org/0000-0002-6969-187X\n  \n    - family-names: N\u00f6h\n      given-names: Katharina\n      orcid: https://orcid.org/0000-0002-5407-2275"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/modsim/CellSium"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-14T10:17:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-03T16:05:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CellSium \u2013 Cell Simulator for microfluidic microcolonies"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8947402063178631,
      "result": {
        "original_header": "CellSium Readme",
        "type": "Text_excerpt",
        "value": "CellSium - *Cell* *Si*\\ mulator for *micro*\\ fluidic *m*\\ icrocolonies \n"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://cellsium.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/modsim/cellsium/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/modsim/cellsium/main/examples/Embedding.ipynb"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/examples/Embedding.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/modsim/CellSium/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "modsim/CellSium"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CellSium Readme"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/modsim/cellsium/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "",
        "parent_header": [
          "CellSium Readme",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "CellSium is a cell simulator developed for the primary application of generating realistically looking images of bacterial microcolonies, which may serve as ground truth for machine learning training processes.\n\nPublication\n###########\n\nIf you use CellSium within scientific research, we ask you to cite our publication:\n\n    Sachs CC, Ruzaeva K, Seiffarth J, Wiechert W, Berkels B, N\u00f6h K (2022)\n    CellSium: versatile cell simulator for microcolony ground truth generation\n    Bioinformatics Advances, Volume 2, Issue 1, 2022, vbac053, doi: 10.1093/bioadv/vbac053\n\nIt is available on the *Bioinformatics Advances* homepage at `DOI: 10.1093/bioadv/vbac053 <https://doi.org/10.1093/bioadv/vbac053>`.\n\nDocumentation\n#############\n\nThe documentation to CellSium can be built using `Sphinx <https://www.sphinx-doc.org/>`_, or be found readily built at `Read the Docs <https://cellsium.readthedocs.io/en/latest/>`_.\n\nLicense\n#######\n\nCellSium is available under the BSD license (see LICENSE.rst / license section).\n"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "CellSium Readme"
        ],
        "type": "Text_excerpt",
        "value": "Installation using pip\n######################\n\nCellSium can be installed via pip, ideally create and activate an environment beforehand to install CellSium in.\n\n.. code-block:: bash\n\n    > python -m pip install cellsium\n\nInstallation using conda\n########################\n\nCellSium is available in the modsim Anaconda channel as well, using packages from the conda-forge channel. It can be\ninstalled with the following commands:\n\n.. code-block:: bash\n\n    > conda install -c modsim -c conda-forge -y cellsium\n"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.990281345375157,
      "result": {
        "original_header": "CellSium Readme",
        "type": "Text_excerpt",
        "value": ".. image:: https://img.shields.io/pypi/v/cellsium.svg\n   :target: https://pypi.python.org/pypi/cellsium \n.. image:: https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat\n   :target: https://cellsium.readthedocs.io/en/latest/ \n.. image:: https://github.com/modsim/CellSium/actions/workflows/python-test.yml/badge.svg\n   :target: https://github.com/modsim/CellSium/actions/workflows/python-test.yml \n.. image:: https://codecov.io/gh/modsim/CellSium/branch/main/graph/badge.svg?token=L36RQXYBW7\n    :target: https://codecov.io/gh/modsim/CellSium \n.. image:: https://img.shields.io/badge/Docker-image-green?logo=docker\n   :target: https://github.com/modsim/CellSium/pkgs/container/cellsium \n.. image:: https://img.shields.io/pypi/l/cellsium.svg\n   :target: https://opensource.org/licenses/BSD-2-Clause \n.. figure:: https://raw.githubusercontent.com/modsim/CellSium/animation/output.gif\n    :align: center \n"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9296697489014362,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "An alternative to installing CellSium locally is running it via Docker. To run CellSium without interactive (GUI) elements, the following Docker command can be used, with parameters to CellSium being appended. \n    > docker run --tty --interactive --rm --volume `pwd`:/data --user `id -u` ghcr.io/modsim/cellsium \nTo use interactive (GUI) elements such as the :code:`PlotRenderer`, an X server must be reachable; under Linux the following command can be used: \n    > docker run --tty --interactive --rm --volume `pwd`:/data --user `id -u` --env DISPLAY=$DISPLAY --volume /tmp/.X11-unix:/tmp/.X11-unix ghcr.io/modsim/cellsium\n \n"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9998911367041913,
      "result": {
        "type": "Text_excerpt",
        "value": ".. If you read this on hub.docker.com, maybe visit the github page https://github.com/modsim/cellsium \n"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8486798794095296,
      "result": {
        "original_header": "CellSium Readme",
        "type": "Text_excerpt",
        "value": "    CellSium example simulation result \n"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/modsim/CellSium/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause \"Simplified\" License",
        "spdx_id": "BSD-2-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-2-clause",
        "value": "https://api.github.com/licenses/bsd-2-clause"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CellSium"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "modsim"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 181537,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1683,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/modsim/cellsium/main/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "csachs",
          "type": "User"
        },
        "date_created": "2022-09-11T10:41:38Z",
        "date_published": "2022-09-11T10:45:20Z",
        "html_url": "https://github.com/modsim/CellSium/releases/tag/v1.0.0",
        "release_id": 76825101,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/modsim/CellSium/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/modsim/CellSium/releases/76825101",
        "value": "https://api.github.com/repos/modsim/CellSium/releases/76825101",
        "zipball_url": "https://api.github.com/repos/modsim/CellSium/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "csachs",
          "type": "User"
        },
        "date_created": "2021-10-24T22:45:52Z",
        "date_published": "2022-02-20T22:07:34Z",
        "description": "Initial release candidate for version 1.0.0.",
        "html_url": "https://github.com/modsim/CellSium/releases/tag/v1.0.0rc1",
        "name": "v1.0.0rc1",
        "release_id": 60005801,
        "tag": "v1.0.0rc1",
        "tarball_url": "https://api.github.com/repos/modsim/CellSium/tarball/v1.0.0rc1",
        "type": "Release",
        "url": "https://api.github.com/repos/modsim/CellSium/releases/60005801",
        "value": "https://api.github.com/repos/modsim/CellSium/releases/60005801",
        "zipball_url": "https://api.github.com/repos/modsim/CellSium/zipball/v1.0.0rc1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:57:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "CellSium Readme"
        ],
        "type": "Text_excerpt",
        "value": "Once installed, run CellSium via :code:`python -m cellsium`, specifying the desired entrypoint and options, such as outputs.\nCellSium is built modular, various output modules can be activated simultaneously. To get an overview of the available options,\nuse the :code:`--help` switch. Furthermore, the main mode of setting tunable parameters are so called *tunables*, which can\nbe set from the command line using the :code:`-t` switches. A list of tunables can be shown using the :code:`--tunables-show` argument.\n\n.. code-block:: bash\n\n    > python -m cellsium --help\n    usage: __main__.py [-v] [-q] [-c CELL] [-p] [-w] [-o OUTPUT] [-h] [-m MODULE]\n                   [--Output {COCOOutput,CsvOutput,FluorescenceRenderer,GenericMaskOutput,JsonPickleSerializer,MeshOutput,NoisyUnevenIlluminationPhaseContrast,PhaseContrastRenderer,PlainRenderer,PlotRenderer,QuickAndDirtyTableDumper,SvgRenderer,TiffOutput,TrackMateXML,UnevenIlluminationPhaseContrast,YOLOOutput}]\n                   [--PlacementSimulation {Box2D,Chipmunk,NoPlacement}] [-t TUNABLE] [--tunables-show] [--tunables-load TUNABLES_LOAD] [--tunables-save TUNABLES_SAVE]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -o OUTPUT, --output-file OUTPUT\n      -w, --overwrite\n      -p, --prefix\n      -c CELL, --cell CELL\n      -q, --quiet\n      -v, --verbose\n      -m MODULE, --module MODULE\n      --Output {COCOOutput,CsvOutput,FluorescenceRenderer,GenericMaskOutput,JsonPickleSerializer,MeshOutput,NoisyUnevenIlluminationPhaseContrast,PhaseContrastRenderer,PlainRenderer,PlotRenderer,QuickAndDirtyTableDumper,SvgRenderer,TiffOutput,TrackMateXML,UnevenIlluminationPhaseContrast,YOLOOutput}\n      --PlacementSimulation {Box2D,Chipmunk,NoPlacement}\n      -t TUNABLE, --tunable TUNABLE\n      --tunables-show\n      --tunables-load TUNABLES_LOAD\n      --tunables-save TUNABLES_SAVE\n\n\nYou can for example run a default simulation by just starting CellSium, the results will be shown interactively using matplotlib:\n\n.. code-block:: bash\n\n    > python -m cellsium\n\nFor more in-depth usage examples, please see the examples section of the documentation.\n"
      },
      "source": "https://raw.githubusercontent.com/modsim/cellsium/main/README.rst",
      "technique": "header_analysis"
    }
  ]
}