{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/datalowe/synr"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-18T18:22:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-06T14:53:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An R package for handling synesthesia consistency test data. Explore, validate and summarize data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9986859933449297,
      "result": {
        "original_header": "synr <img src=\"man/figures/synr_logo.png\" align=\"right\" width=\"120\" />",
        "type": "Text_excerpt",
        "value": "This is an [R](https://www.r-project.org/) package for working with data resulting from [grapheme-color synesthesia](https://en.wikipedia.org/wiki/Grapheme%E2%80%93color_synesthesia)-related [consistency tests](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4118597/#S4title). synr provides tools for exploring test data, including visualizing a single participant's data, and applying summarizing functions such as calculating [color variation/consistency scores](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4118597/#S4title) or classifying participant data as valid or invalid.\n \n"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/datalowe/synr/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/datalowe/synr/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "datalowe/synr"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "synr "
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://app.travis-ci.com/datalowe/synr.svg?branch=master"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/datalowe/synr/main/man/figures/example_consistency_plot.png"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "synr <img src=\"man/figures/synr_logo.png\" align=\"right\" width=\"120\" />"
        ],
        "type": "Text_excerpt",
        "value": "synr is available [on CRAN](https://cran.r-project.org/package=synr), meaning you can simply:\n\n```r\ninstall.packages('synr')\n```\n\nNote that this will also install packages that synr depends on unless you already have them (`dbscan`, `data.table` and `ggplot2`).\n"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999754688027108,
      "result": {
        "original_header": "Feedback",
        "type": "Text_excerpt",
        "value": "If you have any suggestions on improvements you are very welcome to directly raise issues or commit code improvements to the github repository at https://github.com/datalowe/synr.\n \n"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/datalowe/synr/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "data-cleaning, synesthesia"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "YEAR: 2024\nCOPYRIGHT HOLDER: Lowe Wilsson\n"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/datalowe/synr/main/man/figures/synr_logo.png"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "synr"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "datalowe"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 134415,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/datalowe/synr/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:41:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "synr <img src=\"man/figures/synr_logo.png\" align=\"right\" width=\"120\" />"
        ],
        "type": "Text_excerpt",
        "value": "Once data are in an appropriately formatted data frame/tibble ('long format' - see vignettes for more information), everything starts with rolling up participant data into a 'ParticipantGroup' object with `create_participantgroup_widedata`:\n\n```r\nlibrary(synr)\n\npgroup <- create_participantgroup(\n    formatted_df, # data frame/tibble to use, with data in 'long format'\n    n_trials_per_grapheme=3, # number of trials that grapheme was used for\n    participant_col_name=\"participant_id\", # name of column which holds participant ID's\n    symbol_col_name='symbol', # name of column which holds grapheme symbol strings\n    color_col_name='color', # rname of column which holds response color HEX codes\n    color_space_spec = \"Luv\" # color space to use for all calculations with participant group\n)\n```\n\nUsing the resulting object (`pgroup`), you can call various methods. A few examples follow.\n"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example group-level method: get_mean_consistency_scores",
        "parent_header": [
          "synr <img src=\"man/figures/synr_logo.png\" align=\"right\" width=\"120\" />",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "`pgroup$get_mean_consistency_scores(symbol_filter=LETTERS)` would return a vector of [CIELUV](https://en.wikipedia.org/wiki/CIELUV)-based consistency scores, using only data from trials involving capital letters.\n"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example group-level method: check_valid_get_twcv_scores",
        "parent_header": [
          "synr <img src=\"man/figures/synr_logo.png\" align=\"right\" width=\"120\" />",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "`pgroup$check_valid_get_twcv_scores(symbol_filter=0:9)` would return a data frame which describes classifications of all participant data, where each data set is classified as 'invalid' or 'valid', based largely on [DBSCAN clustering](https://en.wikipedia.org/wiki/DBSCAN). This may be used to identify participants who varied their responses too little, e. g. by responding with an orange color on every trial.\n"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example participant-level method: get_plot",
        "parent_header": [
          "synr <img src=\"man/figures/synr_logo.png\" align=\"right\" width=\"120\" />",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "`pgroup$participants[[1]]$get_plot(symbol_filter=LETTERS)` would produce a bar plot of per-grapheme consistency scores for a single participant, using only data from trials involving capital letters. You can see an example below.\n\n<img src=\"man/figures/example_consistency_plot.png\" width=\"400\" alt=\"Example bar plot of grapheme-level consistency scores\">\n"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Detailed usage information",
        "parent_header": [
          "synr <img src=\"man/figures/synr_logo.png\" align=\"right\" width=\"120\" />",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "More details on required data format and how to use the above functions and more can be found in the [package's vignettes](https://datalowe.github.io/synr/articles/), some of which are also included in the package itself (run `help(synr)` to find them). Additional information is available in the following article:\n\n> Wilsson, L., van Leeuwen, T.M. & Neufeld, J. synr: An R package for handling synesthesia consistency test data. Behav Res 55, 4086\u20134098 (2023). https://doi.org/10.3758/s13428-022-02007-y\n"
      },
      "source": "https://raw.githubusercontent.com/datalowe/synr/main/README.md",
      "technique": "header_analysis"
    }
  ]
}