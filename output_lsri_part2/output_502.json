{
  "application_domain": [
    {
      "confidence": 0.8008144782322437,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eirikhoye/airr_tools"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-05T13:53:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-09T09:48:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9904218725899848,
      "result": {
        "type": "Text_excerpt",
        "value": "Overview of files in the repository.\n```\ndata/\n- rearrangements/     Directory with adaptive ImmunoSEQ rearrangement .tsv files for each sample.\n- SampleOverview.tsv  Contains sequencing metadata for each sample, and the amount of input gDNA.\n- metadata.xlsx       Clinical metadata relevant for the analysis. Also specifies which patient was sampled multiple times.\n- qcReport.tsv        Quality control report for each sample, including coverage. Coverage is average number of reads per rearranged DNA template. Samples with coverage < 5 were discarded from clonality analysis.\n- graph_params/       Directory with data related to graph parameters and analysis\n- graphs/             Directory with graphs generated with scripts/run_imnet.py\n- McPAS/              Directory containing the search results in McPAS, a repository of TCR sequences with known pathogen associations. \n\nhill_div/ \n- directory contains tsv files output from the Hill_Diversity_v2.R script\n\nenvs/\n- contain yaml files for conda virtual environments needed to run scripts. Also needed for snakemake rules.\n\nscripts/\n- Hill_Diversity_v2.R  R script for generating Hill Diversity and evenness profiles. Run with snakemake.\n- concat_Hill.R        Concatenate diversity and evenness output into tidy dataframe. Run with snakemake.\n- run_imnet.py         Create graphs from ImmunoSEQ rearrangement files in data/rearrangements.\n- powerlaw.R           Script for calculating powerlaw fit from clonal degree distribution.\n- global_params.py     Calculate global graph parameters from .graphml file.\n- local_params.py      Calculate local graph parameters from .graphml file.\n- Rearrangement_to_single_files.py  Split ImmunoSEQ rearrangement dataframe into individual files for each sequencing sample.\n- Some additional deprecated scripts kept for future reference, but not used in the analysis.\n\nR_markdowns/\n- Contains R markdowns used to generate figures used in the paper. Note this was the actual file used, \n  some filepaths will have to be changed to your local directory structure.\n\nMcPAS-TCR.csv         Database of TCR sequences with kown pathology associations.\nSnakeFile             Script with snakemake rules for generating Hill diversity profiles\nconfig.yaml           Config file for SnakeFile\n\n```\nBecause generating diversity profiles can be time consuming, it is a good idea to run them through a snakemake workflow script, so each sample only has to be run once, regardless of whether additional samples are added to the analysis. \nThese plots provide a detailed view of the clonal frequency distribution of a T cell receptor repertoire. At low values of q (x-axis), the diversity curve is mainly influenced the absolute number of unique clones, while at higher values, diversity is primarily influenced by the most prevalent clones. Another way to interpret the curves is that, while the left part reflects the absolute number of unique clones, the further and more rapidly the curve drops at increasing values of q, the more skewed the clonal frequency distripution is in favour of a small number of very abundant clones. The evenness profile on the right is normalized by the total number of clones.\nFor generating levenshtein distance based graphs from the clonal sequences in a repertoire, it is best to use imnet, which paralelizes the job. The memory required to create sequential levenshtein distance matrixes scales exponentially, therefore analyzing networks from greater than 10000 sequences can be difficult without paralellization.  \nThis outputs graphs in the .graphml format. Graph visualization software such as gephi can be used to generate visualizations of these networks: \n"
      },
      "source": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eirikhoye/airr_tools/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eirikhoye/airr_tools/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "eirikhoye/airr_tools"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Install snakemake, follow:"
      },
      "source": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/figures/zenodo.7614598.svg"
      },
      "source": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/figures/hill_div_even.png"
      },
      "source": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/figures/LD_graph.png"
      },
      "source": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999945673608,
      "result": {
        "type": "Text_excerpt",
        "value": "First, ensure that the rearrangement files are organized as one file per sample in the data/rearrangements directory. If you have all rearrangements merged into a single file, you can unmerge them in the same directory using: \n```\npython scripts/Rearrangement_to_single_files.py </path/to/rearrangements_dir/> <rearrangements_filename.tsv>\n```\nTo run the snakemake script, first install and activate a conda environment containing snakemake library, then use the following command:\nBASH3*\nTo produce publication quality figures, use:\nBASH4*\n![Image](figures/hill_div_even.png)  \nTo set up imnet for network analysis, do:\n```\n# First create venv with \nvirtualenv -p /usr/bin/python3.6 venv\nsource venv/bin/activate\npip install imnet pyspark\npip install findspark\npip install imnet\n\n# must edit venv/lib/python3.6/site-packages/imnet/process_strings.py\n# replace all instances of  idxs = range(nstrings)  to idxs = list(range(nstrings))\n\n# First activate venv and make sure pyspark environment is set:\nsource venv/bin/activate\nexport PYSPARK_PYTHON=/home/jcdenton/imnet/venv/bin/python3.6\nexport PYSPARK_DRIVER_PYTHON=/home/jcdenton/imnet/venv/bin/python3.6\n\n# To create clonal sequence based graphs, use:\npyhton scripts/run_imnet.py <path/to/rearrangement.tsv> <name_outfile>\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/eirikhoye/airr_tools/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) [2022] [Eirik H\u00f8ye]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "airr_tools"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "eirikhoye"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 5611445,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 31741,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 9197,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://snakemake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/eirikhoye/airr_tools/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "eirikhoye",
          "type": "User"
        },
        "date_created": "2023-02-06T15:03:54Z",
        "date_published": "2023-02-07T08:40:52Z",
        "description": "This is the repository for the data and code used in the paper T cell receptor sequencing reveals chemotherapy-driven clonal expansion in colorectal liver metastasis\"",
        "html_url": "https://github.com/eirikhoye/airr_tools/releases/tag/v1.0",
        "name": "Public data and code",
        "release_id": 91567857,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/eirikhoye/airr_tools/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/eirikhoye/airr_tools/releases/91567857",
        "value": "https://api.github.com/repos/eirikhoye/airr_tools/releases/91567857",
        "zipball_url": "https://api.github.com/repos/eirikhoye/airr_tools/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:56:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}