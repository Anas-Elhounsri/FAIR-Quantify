{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CMU-SAFARI/FastRemap"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-06T15:26:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-18T07:52:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FastRemap, a C++ tool for quickly remapping reads between genome assemblies based on the commonly used CrossMap tool. Link to paper: https://arxiv.org/pdf/2201.06255.pdf"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9141124595424709,
      "result": {
        "original_header": "FastRemap:",
        "type": "Text_excerpt",
        "value": "Remapping tools are used to quickly and efficiently remap genomic data (e.g.,\nread data sets) that had been previously mapped to one reference, to another\nreference. Remapping tools become more and more relevant with the explosion of\navailable genetic data sets and references, as traditional methods for mapping\n(e.g., read mapping) will have difficulty keeping pace with the computational\nrequirements. The state-of-the-art remapping tool, CrossMap \\[1\\], is widely\nused but has its shortcomings in performance and end-to-end genome analysis,\nthat we address with FastRemap. From our evaluation, we find that FastRemap\nprovides up to a 7.19x speedup, uses as low as 61.7% of the peak memory\nconsumption, and enables end-to-end downstream analysis compared to CrossMap.  \nThe initial release of FastRemap is described in the following paper:\n> Jeremie S. Kim, Can Firtina, Meryem Banu Cavlak, Damla Senol Cali, Can Alkan, Onur Mutlu.\n> \"[**FastRemap: A Tool for Quickly Remapping Reads between Genome Assemblies**](https://arxiv.org/pdf/2201.06255.pdf)\".\n> Preprint in _arXiv_, Jan 17, 2022. \n## FastRemap:\n    - Currently only supports BAM, SAM, and BED files as input \n    - if not using gcc 10 or higher, can use the following library: https://github.com/tcbrindle/span\n \n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8829152570459491,
      "result": {
        "original_header": "To replicate results in the paper:",
        "type": "Text_excerpt",
        "value": "Install and run [CrossMap](https://github.com/liguowang/CrossMap) and FastRemap on \nthe publicly available DNA-seq read sets:\n- human NA12878 illumina read data set (ERR194147 and ERR262997)\n- C. elegans N2 illumina read data set (SRR3536210)\n- yeast S288C illumina read data set (ERR1938683)  \nUsing the linux time command, get and write all runtime and memory stats output\nfiles to subdirectories ./evaluation/CrossMap and ./evaluation/FastRemap\n(depending on which tool was used), e.g.,: \n``` bash\n/usr/bin/time -v -p -o ./evaluation/FastRemap/sacCer1_sacCer2.time FastRemap -f bam -c sacCer1ToSacCer2.over.chain -i sacCer1_ERR1938683.bam -u fastremap_sacCer1_sacCer2_unmapped.bed -o fastremap_sacCer1_sacCer2.bam\n/usr/bin/time -v -p -o ./evaluation/crossmap/sacCer1_sacCer2.time CrossMap.py bam sacCer1ToSacCer2.over.chain sacCer1_ERR1938683.bam > crossmap_sacCer1_sacCer2.bam \n```  \n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CMU-SAFARI/FastRemap/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CMU-SAFARI/FastRemap/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CMU-SAFARI/FastRemap"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FastRemap: A Tool for Quickly Remapping Reads between Genome Assemblies"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9997632443080138,
      "result": {
        "original_header": "FastRemap:",
        "type": "Text_excerpt",
        "value": "## FastRemap:\n    - Currently only supports BAM, SAM, and BED files as input \n    - if not using gcc 10 or higher, can use the following library: https://github.com/tcbrindle/span\n \n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999987395682,
      "result": {
        "original_header": "To clone:",
        "type": "Text_excerpt",
        "value": "```bash\ngit clone --recurse-submodules https://github.com/CMU-SAFARI/FastRemap.git FastRemap \n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9874154748088668,
      "result": {
        "original_header": "zlib:",
        "type": "Text_excerpt",
        "value": "```bash\nFastRemap/zlib$ ./configure\nFastRemap/zlib$ make\n``` \n### FastRemap: \nmay need to use '-lstdc++fs' in LDFLAGS depending on compiler / system. \n```bash\nFastRemap$ make \n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9772109750946811,
      "result": {
        "original_header": "To replicate results in the paper:",
        "type": "Text_excerpt",
        "value": "Using the relevant reference genomes (Genome Sequence Files; \\*.fa) and chain files (LiftOver\nfiles; \\*.over.chain) at the [UCSC Genome Browser\nSite](https://hgdownload.soe.ucsc.edu/downloads.html) \n- human (hg16, hg17, hg18, hg19, hg38) \n- C. elegans (ce2, ce4, ce6, ce10, ce11) \n- yeast (sacCer1, sacCer2, sacCer3)  \nFinally run the plotting script under the evaluation subdirectory: \n```bash\ncd evaluation \npython plot_runtime.py \n``` \n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9439180657191485,
      "result": {
        "original_header": "To validate and compare two SAM outputs:",
        "type": "Text_excerpt",
        "value": "```bash\npython ./validation/compare_outputs.py [input sam file 1] [input sam file 2] \n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8777635376840043,
      "result": {
        "original_header": "To replicate results in the paper:",
        "type": "Text_excerpt",
        "value": "Finally run the plotting script under the evaluation subdirectory: \n```bash\ncd evaluation \npython plot_runtime.py \n``` \n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CMU-SAFARI/FastRemap/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License\n\nCopyright (c) 2018-     Dana-Farber Cancer Institute\n              2017-2018 Broad Institute, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FastRemap"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CMU-SAFARI"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 97662,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 10914,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 1054,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 769,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 515,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/2201.06255.pdf"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "canfirtina",
          "type": "User"
        },
        "date_created": "2022-06-10T17:47:56Z",
        "date_published": "2022-06-11T09:39:33Z",
        "description": "The initial stable release of FastRemap.",
        "html_url": "https://github.com/CMU-SAFARI/FastRemap/releases/tag/v1.0.0",
        "name": "FastRemap-1.0.0",
        "release_id": 69209820,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/CMU-SAFARI/FastRemap/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/CMU-SAFARI/FastRemap/releases/69209820",
        "value": "https://api.github.com/repos/CMU-SAFARI/FastRemap/releases/69209820",
        "zipball_url": "https://api.github.com/repos/CMU-SAFARI/FastRemap/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "To run:",
        "parent_header": [
          "FastRemap: A Tool for Quickly Remapping Reads between Genome Assemblies"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n./FastRemap -f [file type] -c [chain file] -i [input file] -u [output unmapped file] -o [output file]\n```\n\nRequired arguments: \n- [file_type]:            bam, sam, or bed file depending on input file\n- [chain file]:           chain file (https://genome.ucsc.edu/goldenPath/help/chain.html) describes regions of similarity between references\n- [input file]:           file containing elements to be remapped based on chain file\n- [output unmapped file]: file containing all the elements that couldnt be remapped from the input file based on the provided chain file\n- [output file]:          file containing all the remapped elements from the input file\n\noptional arguments\n- --append-tags (-a) to append tags in output bam file \n- --mean (-m) to set insert size \n- --stdev (-s) to set insert_size_stdev\n- --times (-t) to set insert_size_fold \n\nBAM test using the small sample files in test_data folder \n- input / output files should be paths relative to the current directory. \n- e.g.,\n```bash\n./FastRemap -f bam -c test_data/ce6ToCe10.over.chain -i test_data/little.bam -u test.unmapped -o test.out\n```\n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:15:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Printing the help message",
        "parent_header": [
          "FastRemap: A Tool for Quickly Remapping Reads between Genome Assemblies"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n./FastRemap -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker Support",
        "parent_header": [
          "FastRemap: A Tool for Quickly Remapping Reads between Genome Assemblies"
        ],
        "type": "Text_excerpt",
        "value": "- [DockerHub](https://hub.docker.com/r/alkanlab/fastremap) \n- Dockerfile in top of the tree \n\n"
      },
      "source": "https://raw.githubusercontent.com/CMU-SAFARI/FastRemap/main/README.md",
      "technique": "header_analysis"
    }
  ]
}