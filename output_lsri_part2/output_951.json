{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References:",
        "type": "Text_excerpt",
        "value": "* [Doster E, et al. \"MEGARes 2.0: a database for classification of antimicrobial drug, biocide and metal resistance determinants in metagenomic sequence data.\" NAR 2019](https://academic.oup.com/nar/article/48/D1/D561/5624973)\n* [Marini S., et al. \"Protease target prediction via matrix factorization.\" Bioinformatics (2018).](https://doi.org/10.1093/bioinformatics/bty746)\n* [Vitali F., et al. \"Patient similarity by joint matrix trifactorization to identify subgroups in acute myeloid leukemia.\" JAMIA Open (2018).](https://doi.org/10.1093/jamiaopen/ooy008)\n"
      },
      "source": "https://raw.githubusercontent.com/smarini/AMR-meta/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/smarini/AMR-meta"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-17T19:56:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-27T04:14:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kmer- and matrix-factorization-based classifier for metagenomics data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.997703678142188,
      "result": {
        "original_header": "AMR-meta",
        "type": "Text_excerpt",
        "value": "AMR-meta is a machine-learning method to predict class-specific antimicrobial resistance (AMR) in metagenomics short read pairs (FASTQ). AMR-meta is an ensemble of AMR class-specific models based on [MEGARes](https://megares.meglab.org/) classes. AMR-meta is developed in Linux, ad utilizes Bash, C++, and R.\n \n"
      },
      "source": "https://raw.githubusercontent.com/smarini/AMR-meta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8971782757231628,
      "result": {
        "original_header": "Principles",
        "type": "Text_excerpt",
        "value": "AMR-meta is based on multiple binary models, one per AMR class. Each class has _two_ models\n* one based on _k_-mers and LASSO logistic regression\n* one based on metafeatures (obtained by _k_-mers matrix factorization) and ridge logistic regression\n \n"
      },
      "source": "https://raw.githubusercontent.com/smarini/AMR-meta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8986620348612496,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "For each short read pair, AMR-meta will output a probability for each model of the read pair of being labeled as resistant. An example of output file is the following: \nHere, each line corresponds to a read pair in the input fastq files (same order).\n \n"
      },
      "source": "https://raw.githubusercontent.com/smarini/AMR-meta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9826669408599409,
      "result": {
        "original_header": "A thank you note",
        "type": "Text_excerpt",
        "value": "The AMR-meta team is deeply thankful to [Alberto Riva](https://github.com/albertoriva) and [UF ICBR](https://biotech.ufl.edu/) for kindly hosting the AMR-meta Singularity image.\n \n"
      },
      "source": "https://raw.githubusercontent.com/smarini/AMR-meta/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/smarini/AMR-meta/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/smarini/AMR-meta/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "smarini/AMR-meta"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AMR-meta"
      },
      "source": "https://raw.githubusercontent.com/smarini/AMR-meta/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/smarini/AMR-meta/main/AMR-meta.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Makefile",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "To install AMR-meta, download this repository and run:\n```\nmake\n```\nAMR-meta uses the following R packages: `Matrix`, `stringr`, `glmnet`. AMR-meta will check if these R packages are installed before running.\n"
      },
      "source": "https://raw.githubusercontent.com/smarini/AMR-meta/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Singularity",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "AMR-meta is available as a [Singularity](https://github.com/sylabs/singularity/releases) container, downloadable from [http://genome.ufl.edu/download/amrmeta.sif](http://genome.ufl.edu/download/amrmeta.sif).\n"
      },
      "source": "https://raw.githubusercontent.com/smarini/AMR-meta/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/smarini/AMR-meta/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "MIT License",
        "parent_header": [
          "A thank you note"
        ],
        "type": "Text_excerpt",
        "value": "Copyright (c) [2021] [Simone Marini et al.]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/smarini/AMR-meta/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AMR-meta"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "smarini"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 3137,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 3133,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2726,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 164,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/smarini/AMR-meta/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:37:49",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "```\n./AMR-meta.sh -a FASTQ_R1 -b FASTQ_R2 -o OUT_DIR -p NCORES\n\t-a\tshort read R1 file [fastq]\n        -b\tshort read R2 file [fastq]\n        -o\toutput directory, defaults to output\n        -p\t# of cores for parallel computing, defaults to 1\n        \nSingularity:\nsingularity run amrmeta.sif -a FASTQ_R1 -b FASTQ_R2 -o OUT_DIR -p NCORES\n\n        examples of use:\n        ./AMR-meta.sh -a data/example/example_R1.fastq \\\n                -b data/example/example_R2.fastq \\\n                -o output \\\n                -p 4\n                \n        singularity run amrmeta.sif -a data/example/example_R1.fastq \\\n                -b data/example/example_R2.fastq \\\n                -o output \\\n                -p 4\n```\n"
      },
      "source": "https://raw.githubusercontent.com/smarini/AMR-meta/main/README.md",
      "technique": "header_analysis"
    }
  ]
}