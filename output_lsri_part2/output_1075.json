{
  "application_domain": [
    {
      "confidence": 35.03,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PolynomialQian/CCLD-Net"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-15T06:03:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-24T01:28:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.99102208487333,
      "result": {
        "original_header": "Preface",
        "type": "Text_excerpt",
        "value": "This repo contains the source code and prediction maps of our ***CCLDNet*** and ***CCLDNet\\****. \n \n"
      },
      "source": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.985849909362084,
      "result": {
        "original_header": "Update",
        "type": "Text_excerpt",
        "value": ":fire: **Update 2022/09/08** :fire: Our paper is now accepted by Computerized Medical Imaging and Graphics (CMIG). ([PDF](https://doi.org/10.1016/j.compmedimag.2022.102110))\n \n"
      },
      "source": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8357625861850383,
      "result": {
        "original_header": "Dataset",
        "type": "Text_excerpt",
        "value": "* Datasets in use:  \n"
      },
      "source": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/QianChen98/CCLD-Net/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PolynomialQian/CCLD-Net/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PolynomialQian/CCLD-Net"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Boosting Medical Image Segmentation via Conditional-Synergistic Convolution and Lesion Decoupling"
      },
      "source": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8610089667036364,
      "result": {
        "original_header": "Dataset",
        "type": "Text_excerpt",
        "value": "\ud83d\udca1**Important tips**\ud83d\udca1 \n"
      },
      "source": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PolynomialQian/CCLD-Net/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 QianChen98\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CCLD-Net"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "PolynomialQian"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 93216,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "Boosting Medical Image Segmentation via Conditional-Synergistic Convolution and Lesion Decoupling",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Required packages are listed below:\n\n- `Ubuntu 16.04`\n- `python=3.7`\n- `pytorch>=1.7`\n- `cuda>=10.1`\n"
      },
      "source": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:06:15",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Repo clone",
        "parent_header": [
          "Boosting Medical Image Segmentation via Conditional-Synergistic Convolution and Lesion Decoupling",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ngit clone https://github.com/QianChen98/CCLD-Net.git\ncd CCLDNet\n```\n"
      },
      "source": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Inference",
        "parent_header": [
          "Boosting Medical Image Segmentation via Conditional-Synergistic Convolution and Lesion Decoupling",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* Download the pre-trained weights and save them as `./model_save/name/last.pth` (e.g. `./model_save/EndoScene_CCLDNet/last.pth` )\n\n  * `large` means the pre-trained weights for ***CCLDNet\\****\n  * EndoScene_CCLDNet ([Baidu Cloud](https://pan.baidu.com/s/1P4OvVfzpfVbP3ZvOAG9xaQ), Fetch code: c4ed)\n  * EndoScene_CCLDNet_large ([Baidu Cloud](https://pan.baidu.com/s/1mW4gqlCCX3TDKvkUtbVNXA), Fetch code: nqys)\n  * CVC_Kva_CCLDNet ([Baidu Cloud](https://pan.baidu.com/s/1wV2wnFfkzk_Lsb2olQUacQ), Fetch code: z42k)\n  * CVC_Kva_CCLDNet_large ([Baidu Cloud](https://pan.baidu.com/s/1wxnKzx-HMxVMmpI2p29FBg), Fetch code: af2o)\n  * ISIC_2018_CCLDNet ([Baidu Cloud](https://pan.baidu.com/s/1bOpFkgme7bZeG9b-CuoS5g), Fetch code: lmyp)\n  * ISIC_2018_CCLDNet_large ([Baidu Cloud](https://pan.baidu.com/s/1Ja_0IRDLUqlVxjpKbQmJZQ), Fetch code: abi8)\n\n* Run the following command for testing: \n ```bash\n\n  # EndoScene\n python test.py --model_path ./model_save/EndoScene_CCLDNet/last.pth --swin_type base --crossnum endo --data_dir ./data/TrainDataset_Endo\n python test.py --model_path ./model_save/EndoScene_CCLDNet_large/last.pth --swin_type large --crossnum endo --data_dir ./data/TrainDataset_Endo\n  # CVC_Kva\n  python test.py --model_path ./model_save/CVC_Kva_CCLDNet/last.pth --swin_type base --crossnum CVC --data_dir ./data/TrainDataset_CVC_Kva\n python test.py --model_path ./model_save/CVC_Kva_CCLDNet_large/last.pth --swin_type large --crossnum CVC --data_dir ./data/TrainDataset_CVC_Kva\n  # ISIC_2018\n  python test.py --model_path ./model_save/ISIC_2018_CCLDNet/last1.pth --swin_type base --crossnum CA1 --data_dir ./data/TrainDataset_ISIC_2018\n python test.py --model_path ./model_save/ISIC_2018_CCLDNet_large/last1.pth --swin_type large --crossnum CA1 --data_dir ./data/TrainDataset_ISIC_2018\n...\n python test.py --model_path ./model_save/ISIC_2018_CCLDNet/last5.pth --swin_type base --crossnum CA5 --data_dir ./data/TrainDataset_ISIC_2018\n python test.py --model_path ./model_save/ISIC_2018_CCLDNet_large/last5.pth --swin_type large --crossnum CA5 --data_dir ./data/TrainDataset_ISIC_2018\n ```\n* Note that for researchers training with multiple GPUs, remember to add `--multi_load` to the inference command during testing.\n"
      },
      "source": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Training",
        "parent_header": [
          "Boosting Medical Image Segmentation via Conditional-Synergistic Convolution and Lesion Decoupling",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* Run the following command for training (Note that the `type_name` below can be either `base` or `large`.): \n  ```bash\n  \n  # EndoScene\n  python train.py --crossnum 'endo' --swin_type [type_name]  --data_dir ./data/TrainDataset_Endo  \n  \n  # CVC_Kva\n  python train.py --crossnum 'CVC' --swin_type [type_name]  --data_dir ./data/TrainDataset_CVC_Kva  \n  \n  # ISIC_2018\n  python train.py --crossnum 'CA1' --swin_type [type_name]  --data_dir ./data/TrainDataset_2018\n  ...  \n  python train.py --crossnum 'CA5' --swin_type [type_name]  --data_dir ./data/TrainDataset_2018\n  ```\n"
      },
      "source": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Result",
        "parent_header": [
          "Boosting Medical Image Segmentation via Conditional-Synergistic Convolution and Lesion Decoupling",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "  * Qualitative performance\n\n    Quantitative results in terms of Dice coefficient (Dice), Accuracy (Acc), Specificity (Spe), Jaccard index (Jac), Sensitivity (Sen) and mean absolute error (MAE). [Six datasets](#Dataset) are employed. For brevity, values in the table below are in the form of `CCLDNet|CCLDNet*`.\n\n| Dataset                | Dice           | Jac            | Spe            | Acc            | Sen          | MAE        |\n| ---------------------- | -------------- | -------------- | -------------- | -------------- | ------------ | ---------- |\n| EndoScene (912 pairs)  | 88.51 \\| 89.22 | 82.52 \\| 83.36 | 99.67 \\| 99.66 | 97.55 \\| 97.65 | 87.67\\|88.47 | 2.31\\|2.21 |\n| ClinicDB (612 pairs)   | 93.89 \\| 94.02 | 89.56 \\| 89.26 | 99.63 \\| 99.51 | 99.39 \\| 99.34 | 95.09\\|94.57 | 0.49\\|0.54 |\n| Kvasir (1000 pairs)    | 91.73 \\| 92.28 | 86.97 \\| 87.78 | 99.03 \\| 99.20 | 97.99 \\| 98.02 | 90.65\\|91.39 | 1.71\\|1.66 |\n| ColonDB (380 pairs)    | 78.64 \\| 79.80 | 71.29 \\| 72.55 | 98.88 \\| 98.95 | 96.93 \\| 96.90 | 81.64\\|83.07 | 2.79\\|2.83 |\n| EndoScene (300 pairs)  | 87.92 \\| 90.75 | 80.97 \\| 83.96 | 99.36 \\| 99.59 | 99.22 \\| 99.45 | 95.46\\|95.64 | 0.65\\|0.48 |\n| ETIS (196 pairs)       | 78.64 \\| 77.53 | 71.34 \\| 70.15 | 98.69 \\| 98.99 | 98.42 \\| 98.71 | 85.95\\|84.62 | 1.37\\|1.12 |\n| ISIC 2018 (2594 pairs) | 90.97 \\| 91.15 | 84.72 \\| 84.99 | 97.65 \\| 97.68 | 96.72 \\| 96.76 | 91.56\\|91.69 | 2.65\\|2.58 |\n\n* Downloading links of our result maps:\n\n  * CCLDNet: [Baidu Cloud](https://pan.baidu.com/s/1xq-aGZ0ENBMkhknuQghtpA) (Fetch code: ussf)\n  * CCLDNet_large: [Baidu Cloud](https://pan.baidu.com/s/1qH0UtwDehx-v0TUT_OR5jQ) (Fetch code: qpw3) \n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/QianChen98/CCLD-Net/main/README.md",
      "technique": "header_analysis"
    }
  ]
}