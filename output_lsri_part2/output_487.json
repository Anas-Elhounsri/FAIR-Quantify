{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CBIGR/SUBATOMIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-20T13:50:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-06T12:58:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The SUbgraph BAsed mulTI-OMIcs Clustering (SUBATOMIC) framework infers interpretable modules with a specific topology."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9621068759615707,
      "result": {
        "original_header": "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
        "type": "Text_excerpt",
        "value": "The subgraph based multi-omics clustering (SUBATOMIC) framework is a methodology to integrate, cluster and annotate networks into functional modules.\nInteraction networks can be of any interaction type and contain directed or directed edges such as transcription factor (TF)-target networks, miRNA-target networks or protein-protein interaction networks as long as they have a common set of shared nodes. \nSUBATOMIC first integrates all networks into one multi-edge network and decomposes it into two- and three-node subgraphs using ISMAGS. The resulting subgraphs are further categorized according to their type (ALL, COM, COR, COP, CIR, FBU, FB2U) and clustered into modules using the hyperedge clustering algorithm SCHype. The resulting modules contain a high density of subgraphs and are further characterized with the functional enrichment method GOATOOLS. Connections in between modules as well as between modules and regulators are statistically investigated in the superview analysis to preserve the larger network context. Static modules can be further integrated with condition-specific expression data to study dynamic modules. \n**Here you can find the Snakemake pipeline.  \nA Docker version of the SUBATOMIC pipeline is available: https://hub.docker.com/repository/docker/cbigr/subatomic** \n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CBIGR/SUBATOMIC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CBIGR/SUBATOMIC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CBIGR/SUBATOMIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/figures/dag_example_tree_cores.svg"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation and start",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "The pipeline can be started calling:  \n```snakemake -s Integrated_Pipeline --configfile config_test_hsapiens_toyNet.yaml --cores 3```\n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9162792462945425,
      "result": {
        "original_header": "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
        "type": "Text_excerpt",
        "value": "**Here you can find the Snakemake pipeline.  \nA Docker version of the SUBATOMIC pipeline is available: https://hub.docker.com/repository/docker/cbigr/subatomic** \n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CBIGR/SUBATOMIC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, bioinformatics-pipeline, modules, multi-omics, network-analysis, networks"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SUBATOMIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CBIGR"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 151205,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 47927,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 4329,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "python packages should be seen as recommendations, since the pipeline might also \nwork with slightly different versions.  \n\n- Python >3.6  \n  - numpy 1.20.2  \n   - pandas 1.2.4  \n   - itertools   \n   - subprocess  \n   - re  \n   - shutil  \n   - GOATOOLS 1.0.15  \n- Snakemake 6.1.2   \n- R > 4.0.0  \n   - igraph   \n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Required and optional input files",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "1. ```go-basic.obo```  \n\n- Required for functional enrichment with GOATOOLS  \n- Located in the base folder next to 'Integrated_Pipeline'\n- Latest version can be obtained from [GENEONTOLOGY](http://geneontology.org/docs/download-ontology/)\n2. ```Hsapiens_goa_ensembl.gaf```  \n\n- Required for functional enrichment with GOATOOLS  \n- Latest version can be obtained from [GENEONTOLOGY_annotations](http://geneontology.org/docs/download-go-annotations/)\n- Need to match the identifiers of the input network (already done for the toy example)\n\n3. ```Hsapens_subgraphs.csv```  \n\n- Plane list of all subgraphs without header\n- Due to symmetric reasons, some subgraphs can be redundant. From a set of equivalent subgraphs, only one should be kept\n- List can be self defined or generated using the utility script generate_motif_list.py that gives a non-redundant list of motifs given the network letters\n\n4. ```Hsapiens_goa_ensembl.gaf```  \n\n- File containing all edges from the integrated multi-edge network\n- No header, content:\n  - First column contains node_1 (in case of directed interactions - the regulatory factors)\n  - Second column contains node_2 (in case of directed interactions - the targets)\n  - Third column contains the letter representing the network to which this interaction belongs\n- Networks can only contain **either** directed **or** undirected edges, but no mix of both\n\n5. ```Hsapiens_background_genes_ensembl.csv```\n\n- Optional, no header, plane list of identifier used as background for functional enrichment analysis\n- Here: a large number of protein coding genes in *H. sapiens*\n\n6. ```Hsapiens_functional_description.csv```\n\n- File containing a mapping of identifiers to gene names as well as an optional short description of the gene function\n- Header, content:\n  - First column: Primary identifier, which is also used in the interaction file\n  - Second column: External gene name\n  - Third column: Potential alternative identifier or gene name\n  - Fourth column: Functional description\n\n7. ```Hsapiens_miRNAs.csv```\n\n- Plane file containing the identifiers of all miRNAs\n- Used in the superview analysis\n\n8. ```Hsapiens_TFs.csv```\n\n- Plane file containing the identifiers of all transcription factors\n- Used in the superview analysis\n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuration file",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "Check the config file ```config_test_hsapiens_toyNet.yaml```.  \nFor the toy example, settings are already done.  \n\n- Set all path variables:  \n  - **interaction**: *string*,  path + filename to interaction file\n  - **subgraph_type**: *string*, path + filename to file containing all subgraphs to be investigated\n  - **Functional_Description**: *string*: path + filename to functional description file\n  - **Transcription_Factors**: *string*,  path + filename to list of transcription factors\n  - **GO_ASSOCIATIONS**: *string*, path + filename to GO annotation file\n  - **scripts**: *string*, path to script folder\n  - **output_folder_name**: *string*, any name for an analysis run\n  - **directed_interactions**, *list*, letters indicating networks containing exclusively directed_interactions\n  - **undirected_interactions**, *list*, letters indicating networks containing exclusively undirected_interactions\n  - **miRNA_interactions**: *list*, letters indicating the network containing miRNA-target interactions\n  - **homolog_interactions**: *list*, letters indicating networks containing undirected homologous interactions  \n  - **modules**: *list*, choice from \"ALL\", \"COR\", \"COP\", \"CIR\", \"FBU\", \"FB2U\" and \"FFL\" - specifies the modules included in the analysis\n  - **schype_edge_weigt**: *int*, weight parameter for SCHYPE - higher values than 1 give more emphasis to the edges in the node-to-edge ratio\n  - **goatools_pvalue**: *float*, threshold p-value for gene enrichment analysis\n  -  **call_R**: *string*, command how to call R from the command line (e.g. R)\n  -  **cores**: *int*, number of cores used for the parallelization of superview. Careful: cores have to be submitted again calling snakemake with --cores. The number of cores specified here needs to be <= the number of --cores.\n  - **annotation_background**: *string*, choice that should be taken as background for the functional enrichment analysis. Three options are available:\n      - path + name to a list of gene identifiers that will serve as background\n      - \"ModuleType\": all genes of a module type e.g. all genes contained in all CIR modules\n      - \"ALL\": all genes in the input network\n  - **superview_background**: *string*, choice that should be taken as background distribution for the suberview z-score calculation. Two options are available:\n    - \"network\": all interactions of a specific interaction type e.g. H -- RECOMMENDED \n    - \"module\": all interactions of a specific interaction type within a specific type of module e.g. H in CIR \n    "
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the toy example",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "For testing purposes we created a smaller network (toy_Net). We selected up to k modules from the SUBATOMIC run  based on the full network and \nre-created an interaction file containing only genes involved in this modules (for k=5). This toy net can then be used to \ntest the pipeline using only a  small amount of time. However, we also provide the ```Hsapiens_interaction_file.csv``` containing the network used in the publication. **Important:** The implementation of GOATOOLS is very greedy for space, thus when annotating even a few modules with 3 cores as done in this example,  the RAM demand can go > 32 GB. \n1. Clone the repository \n2. Go to the base folder and unzip the go-basic.obo file with  \n```tar -xzf go-basic.obo.tar.gz``` \n3. Go to example_data/Hsapiens_M1/ and unzip the GAF file with\n```tar -xzf Hsapiens_goa_ensembl.gaf.tar.gz```\n4. Adapt the config file. For this example, all parameters are set and the example is run on 3 cores\n5. Go to the SUBATOMIC folder and run\n```snakemake -s Integrated_Pipeline --configfile config_test_hsapiens_toyNet.yaml --cores 3```\nIn case you want to rerun the entire pipeline, you need to delete the ```Logs``` \nfile in the run folder as well as the hidden .snakemake folder \n6. Investigate the results\n\n - All output results can be found in the folder specified in the config file\n - A list and short description of the most important output files can be found\n in the following section \n\n7. Visualization with Cytoscpae\n\n- Start Cytoscape\n- Open the folder ```/data/human_network/final_networks/Hsapiens/MotifClusters/SCHYPE/SCHype*/```\n- The network is contained in the ```edges.nnf file```. Open this file  in Cytoscape (e.g. drag and drop it to the network file area)\n- The annotation for this network is included in ```NodeAttributes.noa```.  Open this file  in Cytoscape (e.g. drag and drop it to the table files section)\n- The Cytoscape style is included in the folder ```Cytoscape``` and called ```cytoscape_style.xml```. Import the style sheet by opening the ```File``` tab, ```Import``` and ```Styles from File```. This has to be done only once for each combination of directed and undirected network letters.\n- Select all networks, right-click on ```Apply Style``` and select the imported style. Under the tab Style and Labels, it is possible to change the IDs to gene names. \n- Hint: Cytoscape sometimes introduces errors while importing by renaming all listed modules two indices higher (e.g. COR_2 instead of COR_0). In the node table view however, the correct naming is shown. Moreover it is  recommended to only load smaller selections of modules at a time to not overload Cytoscape.\n\n8. Contextualization\n\n- It is possible to contextualize the data with the hypoxia dataset \n- For visualization of module expression, open the R script ```VisualizeHypoxia.R```\nin the ```utility_scripts``` folder and adapt the working directory in line 11 to the location of the SUBATOMIC repository\n- The path to input and output files should be set already for running the hypoxia data visualization as described in the paper\n- Visualizations are saved at the location ```Hsapiens/contextualization_hypoxia/```\n- Next, one can use the ```calculate_contextualization_scores.py``` script to calculate nPCC, ECD and activity scores\n- To calculate values for this example, go to the SUBATOMIC folder and call: \n```python utility_scripts/calculate_contextualization_scores.py -expression example_data/hypoxia/GSE53012_expression.tsv -out Hsapiens/contextualization_scores/ -activity -ECD -nPCC -clusters Hsapiens/SCHYPE/ -sampling_k 20 -pvalues example_data/hypoxia/hypoxia_p-values_PC_3_mapped.csv -meta example_data/hypoxia/hypoxia_ECD_meta.csv```\n\n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Important output files",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "In the following, we describe the content of all folders. However, most files are intermediate files. We therefore provide a list of the most \nimportant result files that come handy while exploring in depth the generated modules:\n\n- ```Cytoscape/cytoscape_style.xml```\n- ```GOATOOLS/Enrichment_Modules.csv```\n- ```MotifClusters/SCHYPE/SCHype{module_name}/cluster.cla```\n- ```MotifClusters/SCHYPE/SCHype{module_name}/edges.nnf```\n- ```MotifClusters/SCHYPE/SCHype{module_name}/NodeAttributes.noa```\n- ```MotifClusters/Superview/{module type}.csv```\n- ```MotifClusters/Superview/miRNA.csv```\n- ```MotifClusters/Superview/RF.csv```\n- ```MotifClusters/Superview/Module_RF_stats.csv```\n- ```MotifClusters/Superview/TF_miRNA_target_stats.csv```\n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Overview of all generated output files",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "  \n1. ```2nodemotifs```  \n\n- Folder\n- List of two node motifs found\n- Columns:\n  - First node\n  - Second node\n  - Type\n- Calculated for DD2 (two self-pointing directed interactions)\n- Calculated for DU2 (two self-pointing interactions, one directed, one undirected)\n\n2. ```3nodemotifs```  \n\n- Folder\n- Contains the preprocessed output of ISMAGS for each motif that was searched for\n- First line indicates number of motifs found\n\n3. ```Cytoscape```\n\n- Folder\n- Contains the 'cytoscape_style.xml', which is an importable style in Cytoscape\n- File is created based on the set of undirected and directed nework letters\n- Edge colors per network letter can also be changed in this file\n\n4. ```GOATOOLS```\n\n- Folder\n- Contains a subfolder per module\n- Each subfolder contains intermediate results from the parallelized functional enrichment analysis\n- Important files \n  - ```Enrichment_Modules.csv```\n  - Contains all significant functional enrichments per module\n  - Columns\n    - **group**: module type\n    - **module_no**: module number\n    - **p-value-rank**: per module, what is the term with lowest p-value, second lowest p-value ...\n    - **log2foldRatio**: log2 of fold change to indicate strength of enrichment\n    - **Remaining**: all remaining columns are default output of GOATOOLS\n    \n5. ```goatools-main```\n\n- Folder\n- Intermediate results for functional enrichment\n- Not relevant for final result\n\n6. ```Interactions```\n\n- Folder\n- Contains a file for each interaction type:  ```{output_folder_name}_{network letter}_{d|u}.txt```\n- Formatted network files used as input for ISMAGS subgraph search\n\n7. ```MotifClusters```\n\n- Folder\n- Subfolder ```ModuleViewer``` \n- Subfolder ```SCHYPE``` contains the clustered modules and related information split up for each module type ```SCHype{module_name}```\n  - ```cluster.cla```\n  - Summary information per cluster\n  - Columns\n    - **Cluster**: name of the module\n    - **NrEdges**: number of edges contained in cluster\n    - **PerHOM**: percentage of homologous edges\n  -  ```cluster.eda```\n  - Assigns each interaction to a cluster\n  - Columns\n    - First node (e.g. transcription factor)\n    - Type of interaction (e.g. R)\n    - Second node (e.g. target gene)\n    - Assigned cluster\n  - ```ClusteringCoefficient.txt```\n  - Information about the clustering coefficient per module. A value of 1 indicates a fully connected graph.\n  - Columns\n    - Module name\n    - Clustering coefficient\n  - ```Data_ALL.txt```\n  - Summarizes some more general information per cluster \n  - Columns\n    - **Module**: name of the module\n    - **Comments**: annotated comments if they exist\n    - **nrTF**: number of transcription factors in the module\n    - **nrGO**: number of GO annotated terms in the module\n    - **nrInCluster**: number of genes in the cluster\n  - ```edges.nnf```\n    - Network file for import into Cytoscape\n  - ```edges.sif```\n    - Simple interaction format showing edges and the edge type as extra information\n    - Columns\n      - Source node\n      - Interaction type \n      - Target node\n  - ```NodeAttributes.noa```\n  - Attribute file that can be imported into Cytoscape to annotate modules\n  - Information is based on the ```functional_description.csv``` input file\n  Columns\n    - **Accession_Number**: Gene ID\n    - **FuncName**: Name of the gene\n    - **Type**: transcription factor, miRNA or gene\n    - **TF_type**: family or type of transcription factor\n    - **Has_GO**: information whether the gene is annotated with GO-terms\n    \n\n8. ```parallel```\n\n- Folder\n- Internal folder containing a split of modules into bins for parallelization\n- Not relevant as result\n\n\n9. ```SCHYPE```\n\n- Folder\n- Contains the primary output of SCHYpe clustering and some intermediate files\n- Subfolder ```SCHYPE``` contains the clustered modules and related information split up for each module type ```SCHype{module_name}```\n  - ```ALLEDGES.txt```\n  -  Contains all egdes and their association to a module\n    - Columns\n      - Number of modules\n      - Source node\n      - Edge type, letter indicates interaction type, upper and lower case indicate edge directions\n      - Target node\n  - ```*.edges.txt```\n  - Contain all three node motifs\n  - Columns\n    - Module number\n    - First node\n    - Second node\n    - Third node\n  - ```*.nodes.txt```\n    - List for each node to which module it belongs\n    - Columns\n      - Node\n      - Module number\n  - ```Motifs.txt```\n    - List of subgraphs included in all modules of a certain type\n    - Columns\n      - First node\n      - Second node\n      - Third node\n  - ```MotifsType.txt```\n    - List of subgraphs and their subgraph type\n    - Columns\n      - First node\n      - Second node\n      - Third node\n      - Motif type\n      \n10. ```Superview```\n\n- Folder\n- Contains the result of the superview analysis\n- ```{module type}.csv```\n  - Contain all pairs of modules and their interactions\n  - Columns\n    - **module1**: module type of first module in comparison\n    - **module1_nr**: module number of first module in comparison\n    - **module1_size**: module size of first module in comparison\n    - **module2**: module type of second module in comparison\n    - **module2_nr**: module number of second module in comparison\n    - **module2_size**: module size of second module in comparison  \n    - **{Network_letter}_count**: number of interactions between modules originating from a certain network\n    - **{Network_letter}_z-score**: z-score against a comparison of 1000 random modules of the same size \n    - **{Network_letter}_pvalue**: 1 - CDF of z-score\n  - ```miRNA.csv and RF.csv```\n  - Summary file of interactions between each regulator and target module\n  - Columns\n    - **Group**: either miRNA or transcription factor (RF = Regulatory Factor)\n    - **regulator_name**: identifier of regulator\n    - **module2**: module type of  module in comparison\n    - **module2_nr**: module number of  module in comparison\n    - **module1_size**: module size of  module in comparison\n    - **{Network_letter}_count**: number of interactions between regulator and module originating from a certain network\n    - **{Network_letter}_fraction**: fraction of nodes in the module targeted by a regulator of from a certain network\n    - **SumCount**: all counts over all interaction types\n    - **fraction**: fraction of nodes in the module targeted by a regulator     \n  - ```Module_RF_stats.csv```\n  - Overview per module to summarize how many regulators target this module\n  - Columns\n    - **Module**: module name\n    - **count_RF**: count how many transcription factors target a module\n    - **total_RF**: count how many transcription factors were included in the multi-edge network\n    - **percentage_RF**: percentage how many transcription factors are targeting a module\n    - **count_miRNA**: count how many miRNA target a module\n    - **total_miRNA**: count how many miRNA were included in the multi-edge network\n    - **percentage_miRNA**: percentage how many miRNA are targeting a module\n  - ```TF_miRNA_target_stats.csv```\n  - Overview per module to summarize how many modules are targeted by a specific transcription factor or miRNA\n  - Columns\n    - **RF**: ID of the regulator\n    - **type**: type of regulator, either transcription factor or miRNA\n    - **count**: number of targeted modules\n    - **total**: total number of modules\n    - **percentage**: percentage of modules covered compared to the total number of modules      \n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input, output and arguments to calculate contextualization scores",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "separately.\n\n- Call\n  - ```python utility_scripts/calculate_contextualization_scores.py [options and flags]```\n- Possible flags\n  - ```-expression```: set path and name of file containing expression data\n  - ```-pvalues```: set path and name of file containing deferentially expressed p-values\n  - ```-meta```: set path and name of file containing meta data for ECD scores\n  - ```-clusters```: set path to the SCHYPE output folder (containing SCHypeALL, SCHypeCIR etc.)\n  - ```-out```: set path were to store the results\n  - ```-nPCC```: Flag that enables nPCC calculation -no argument needed\n  - ```-ECD```: Flag that enables ECD calculation - no argument needed\n  - ```-activity```: Flag that enables module activity calculation -no argument needed  \n  - ```-sampling_k```: Integer value indicating the iterations for random sampling\n  \n- Input files\n  - ```expression file```\n    - Contains the expression data \n    - Columns: samples\n    - Rows: genes\n    - Separator: tab\n  - ```p-value file```\n    - Contains p-values per gene in the expression file - missing p-values are set at 1\n    - Header: True\n    - First column: gene identifier \n    - Second column: p-value\n  - ```clusters```    \n    - Modules as produced by the SUBATOMIC pipeline\n  - ```-meta```\n    - Contains meta information about the experiment \n    - Header: True\n    - First column: Sample header in the expression file\n    - Second column: Experiment identifier if multiple experiments are tested - each experiment is processed individually\n    - Third column: Names or identifier of different experimental conditions. Needs to include control conditions. At least three control and three condition samples need to be provided.\n    - Fifth column: A 0 or 1 indicator to mark experimental conditions - control conditions are marked with 1\n- Output files\n  - ```ECD.csv```\n    - **module**: name of module\n    - **experiment**: number of experiment\n    - **condition**: name of condition\n    - **length_module**: number of nodes in the module\n    - **mean_dPCC**: mean differential Pearson correlation in the module between control and experimental conditions\n- Required flags per analyses\n  - Calculate ECD score\n    - ```-clusters```\n    - ```-expression```\n    - ```-sampling_k```\n    - ```-meta```\n  - Calculate nPCC\n    - ```-clusters```\n    - ```-expression```\n    - ```-sampling_k``` \n  - Calculate module activity\n    - ```-clusters```\n    - ```-pvalues```\n    - ```-sampling_k```     \n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:52:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation and start",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "The pipeline can be started calling:  \n```snakemake -s Integrated_Pipeline --configfile config_test_hsapiens_toyNet.yaml --cores 3```\n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required and optional input files",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "1. ```go-basic.obo```  \n\n- Required for functional enrichment with GOATOOLS  \n- Located in the base folder next to 'Integrated_Pipeline'\n- Latest version can be obtained from [GENEONTOLOGY](http://geneontology.org/docs/download-ontology/)\n2. ```Hsapiens_goa_ensembl.gaf```  \n\n- Required for functional enrichment with GOATOOLS  \n- Latest version can be obtained from [GENEONTOLOGY_annotations](http://geneontology.org/docs/download-go-annotations/)\n- Need to match the identifiers of the input network (already done for the toy example)\n\n3. ```Hsapens_subgraphs.csv```  \n\n- Plane list of all subgraphs without header\n- Due to symmetric reasons, some subgraphs can be redundant. From a set of equivalent subgraphs, only one should be kept\n- List can be self defined or generated using the utility script generate_motif_list.py that gives a non-redundant list of motifs given the network letters\n\n4. ```Hsapiens_goa_ensembl.gaf```  \n\n- File containing all edges from the integrated multi-edge network\n- No header, content:\n  - First column contains node_1 (in case of directed interactions - the regulatory factors)\n  - Second column contains node_2 (in case of directed interactions - the targets)\n  - Third column contains the letter representing the network to which this interaction belongs\n- Networks can only contain **either** directed **or** undirected edges, but no mix of both\n\n5. ```Hsapiens_background_genes_ensembl.csv```\n\n- Optional, no header, plane list of identifier used as background for functional enrichment analysis\n- Here: a large number of protein coding genes in *H. sapiens*\n\n6. ```Hsapiens_functional_description.csv```\n\n- File containing a mapping of identifiers to gene names as well as an optional short description of the gene function\n- Header, content:\n  - First column: Primary identifier, which is also used in the interaction file\n  - Second column: External gene name\n  - Third column: Potential alternative identifier or gene name\n  - Fourth column: Functional description\n\n7. ```Hsapiens_miRNAs.csv```\n\n- Plane file containing the identifiers of all miRNAs\n- Used in the superview analysis\n\n8. ```Hsapiens_TFs.csv```\n\n- Plane file containing the identifiers of all transcription factors\n- Used in the superview analysis\n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuration file",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "Check the config file ```config_test_hsapiens_toyNet.yaml```.  \nFor the toy example, settings are already done.  \n\n- Set all path variables:  \n  - **interaction**: *string*,  path + filename to interaction file\n  - **subgraph_type**: *string*, path + filename to file containing all subgraphs to be investigated\n  - **Functional_Description**: *string*: path + filename to functional description file\n  - **Transcription_Factors**: *string*,  path + filename to list of transcription factors\n  - **GO_ASSOCIATIONS**: *string*, path + filename to GO annotation file\n  - **scripts**: *string*, path to script folder\n  - **output_folder_name**: *string*, any name for an analysis run\n  - **directed_interactions**, *list*, letters indicating networks containing exclusively directed_interactions\n  - **undirected_interactions**, *list*, letters indicating networks containing exclusively undirected_interactions\n  - **miRNA_interactions**: *list*, letters indicating the network containing miRNA-target interactions\n  - **homolog_interactions**: *list*, letters indicating networks containing undirected homologous interactions  \n  - **modules**: *list*, choice from \"ALL\", \"COR\", \"COP\", \"CIR\", \"FBU\", \"FB2U\" and \"FFL\" - specifies the modules included in the analysis\n  - **schype_edge_weigt**: *int*, weight parameter for SCHYPE - higher values than 1 give more emphasis to the edges in the node-to-edge ratio\n  - **goatools_pvalue**: *float*, threshold p-value for gene enrichment analysis\n  -  **call_R**: *string*, command how to call R from the command line (e.g. R)\n  -  **cores**: *int*, number of cores used for the parallelization of superview. Careful: cores have to be submitted again calling snakemake with --cores. The number of cores specified here needs to be <= the number of --cores.\n  - **annotation_background**: *string*, choice that should be taken as background for the functional enrichment analysis. Three options are available:\n      - path + name to a list of gene identifiers that will serve as background\n      - \"ModuleType\": all genes of a module type e.g. all genes contained in all CIR modules\n      - \"ALL\": all genes in the input network\n  - **superview_background**: *string*, choice that should be taken as background distribution for the suberview z-score calculation. Two options are available:\n    - \"network\": all interactions of a specific interaction type e.g. H -- RECOMMENDED \n    - \"module\": all interactions of a specific interaction type within a specific type of module e.g. H in CIR \n    "
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the toy example",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "For testing purposes we created a smaller network (toy_Net). We selected up to k modules from the SUBATOMIC run  based on the full network and \nre-created an interaction file containing only genes involved in this modules (for k=5). This toy net can then be used to \ntest the pipeline using only a  small amount of time. However, we also provide the ```Hsapiens_interaction_file.csv``` containing the network used in the publication. **Important:** The implementation of GOATOOLS is very greedy for space, thus when annotating even a few modules with 3 cores as done in this example,  the RAM demand can go > 32 GB. \n1. Clone the repository \n2. Go to the base folder and unzip the go-basic.obo file with  \n```tar -xzf go-basic.obo.tar.gz``` \n3. Go to example_data/Hsapiens_M1/ and unzip the GAF file with\n```tar -xzf Hsapiens_goa_ensembl.gaf.tar.gz```\n4. Adapt the config file. For this example, all parameters are set and the example is run on 3 cores\n5. Go to the SUBATOMIC folder and run\n```snakemake -s Integrated_Pipeline --configfile config_test_hsapiens_toyNet.yaml --cores 3```\nIn case you want to rerun the entire pipeline, you need to delete the ```Logs``` \nfile in the run folder as well as the hidden .snakemake folder \n6. Investigate the results\n\n - All output results can be found in the folder specified in the config file\n - A list and short description of the most important output files can be found\n in the following section \n\n7. Visualization with Cytoscpae\n\n- Start Cytoscape\n- Open the folder ```/data/human_network/final_networks/Hsapiens/MotifClusters/SCHYPE/SCHype*/```\n- The network is contained in the ```edges.nnf file```. Open this file  in Cytoscape (e.g. drag and drop it to the network file area)\n- The annotation for this network is included in ```NodeAttributes.noa```.  Open this file  in Cytoscape (e.g. drag and drop it to the table files section)\n- The Cytoscape style is included in the folder ```Cytoscape``` and called ```cytoscape_style.xml```. Import the style sheet by opening the ```File``` tab, ```Import``` and ```Styles from File```. This has to be done only once for each combination of directed and undirected network letters.\n- Select all networks, right-click on ```Apply Style``` and select the imported style. Under the tab Style and Labels, it is possible to change the IDs to gene names. \n- Hint: Cytoscape sometimes introduces errors while importing by renaming all listed modules two indices higher (e.g. COR_2 instead of COR_0). In the node table view however, the correct naming is shown. Moreover it is  recommended to only load smaller selections of modules at a time to not overload Cytoscape.\n\n8. Contextualization\n\n- It is possible to contextualize the data with the hypoxia dataset \n- For visualization of module expression, open the R script ```VisualizeHypoxia.R```\nin the ```utility_scripts``` folder and adapt the working directory in line 11 to the location of the SUBATOMIC repository\n- The path to input and output files should be set already for running the hypoxia data visualization as described in the paper\n- Visualizations are saved at the location ```Hsapiens/contextualization_hypoxia/```\n- Next, one can use the ```calculate_contextualization_scores.py``` script to calculate nPCC, ECD and activity scores\n- To calculate values for this example, go to the SUBATOMIC folder and call: \n```python utility_scripts/calculate_contextualization_scores.py -expression example_data/hypoxia/GSE53012_expression.tsv -out Hsapiens/contextualization_scores/ -activity -ECD -nPCC -clusters Hsapiens/SCHYPE/ -sampling_k 20 -pvalues example_data/hypoxia/hypoxia_p-values_PC_3_mapped.csv -meta example_data/hypoxia/hypoxia_ECD_meta.csv```\n\n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Important output files",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "In the following, we describe the content of all folders. However, most files are intermediate files. We therefore provide a list of the most \nimportant result files that come handy while exploring in depth the generated modules:\n\n- ```Cytoscape/cytoscape_style.xml```\n- ```GOATOOLS/Enrichment_Modules.csv```\n- ```MotifClusters/SCHYPE/SCHype{module_name}/cluster.cla```\n- ```MotifClusters/SCHYPE/SCHype{module_name}/edges.nnf```\n- ```MotifClusters/SCHYPE/SCHype{module_name}/NodeAttributes.noa```\n- ```MotifClusters/Superview/{module type}.csv```\n- ```MotifClusters/Superview/miRNA.csv```\n- ```MotifClusters/Superview/RF.csv```\n- ```MotifClusters/Superview/Module_RF_stats.csv```\n- ```MotifClusters/Superview/TF_miRNA_target_stats.csv```\n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Overview of all generated output files",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "  \n1. ```2nodemotifs```  \n\n- Folder\n- List of two node motifs found\n- Columns:\n  - First node\n  - Second node\n  - Type\n- Calculated for DD2 (two self-pointing directed interactions)\n- Calculated for DU2 (two self-pointing interactions, one directed, one undirected)\n\n2. ```3nodemotifs```  \n\n- Folder\n- Contains the preprocessed output of ISMAGS for each motif that was searched for\n- First line indicates number of motifs found\n\n3. ```Cytoscape```\n\n- Folder\n- Contains the 'cytoscape_style.xml', which is an importable style in Cytoscape\n- File is created based on the set of undirected and directed nework letters\n- Edge colors per network letter can also be changed in this file\n\n4. ```GOATOOLS```\n\n- Folder\n- Contains a subfolder per module\n- Each subfolder contains intermediate results from the parallelized functional enrichment analysis\n- Important files \n  - ```Enrichment_Modules.csv```\n  - Contains all significant functional enrichments per module\n  - Columns\n    - **group**: module type\n    - **module_no**: module number\n    - **p-value-rank**: per module, what is the term with lowest p-value, second lowest p-value ...\n    - **log2foldRatio**: log2 of fold change to indicate strength of enrichment\n    - **Remaining**: all remaining columns are default output of GOATOOLS\n    \n5. ```goatools-main```\n\n- Folder\n- Intermediate results for functional enrichment\n- Not relevant for final result\n\n6. ```Interactions```\n\n- Folder\n- Contains a file for each interaction type:  ```{output_folder_name}_{network letter}_{d|u}.txt```\n- Formatted network files used as input for ISMAGS subgraph search\n\n7. ```MotifClusters```\n\n- Folder\n- Subfolder ```ModuleViewer``` \n- Subfolder ```SCHYPE``` contains the clustered modules and related information split up for each module type ```SCHype{module_name}```\n  - ```cluster.cla```\n  - Summary information per cluster\n  - Columns\n    - **Cluster**: name of the module\n    - **NrEdges**: number of edges contained in cluster\n    - **PerHOM**: percentage of homologous edges\n  -  ```cluster.eda```\n  - Assigns each interaction to a cluster\n  - Columns\n    - First node (e.g. transcription factor)\n    - Type of interaction (e.g. R)\n    - Second node (e.g. target gene)\n    - Assigned cluster\n  - ```ClusteringCoefficient.txt```\n  - Information about the clustering coefficient per module. A value of 1 indicates a fully connected graph.\n  - Columns\n    - Module name\n    - Clustering coefficient\n  - ```Data_ALL.txt```\n  - Summarizes some more general information per cluster \n  - Columns\n    - **Module**: name of the module\n    - **Comments**: annotated comments if they exist\n    - **nrTF**: number of transcription factors in the module\n    - **nrGO**: number of GO annotated terms in the module\n    - **nrInCluster**: number of genes in the cluster\n  - ```edges.nnf```\n    - Network file for import into Cytoscape\n  - ```edges.sif```\n    - Simple interaction format showing edges and the edge type as extra information\n    - Columns\n      - Source node\n      - Interaction type \n      - Target node\n  - ```NodeAttributes.noa```\n  - Attribute file that can be imported into Cytoscape to annotate modules\n  - Information is based on the ```functional_description.csv``` input file\n  Columns\n    - **Accession_Number**: Gene ID\n    - **FuncName**: Name of the gene\n    - **Type**: transcription factor, miRNA or gene\n    - **TF_type**: family or type of transcription factor\n    - **Has_GO**: information whether the gene is annotated with GO-terms\n    \n\n8. ```parallel```\n\n- Folder\n- Internal folder containing a split of modules into bins for parallelization\n- Not relevant as result\n\n\n9. ```SCHYPE```\n\n- Folder\n- Contains the primary output of SCHYpe clustering and some intermediate files\n- Subfolder ```SCHYPE``` contains the clustered modules and related information split up for each module type ```SCHype{module_name}```\n  - ```ALLEDGES.txt```\n  -  Contains all egdes and their association to a module\n    - Columns\n      - Number of modules\n      - Source node\n      - Edge type, letter indicates interaction type, upper and lower case indicate edge directions\n      - Target node\n  - ```*.edges.txt```\n  - Contain all three node motifs\n  - Columns\n    - Module number\n    - First node\n    - Second node\n    - Third node\n  - ```*.nodes.txt```\n    - List for each node to which module it belongs\n    - Columns\n      - Node\n      - Module number\n  - ```Motifs.txt```\n    - List of subgraphs included in all modules of a certain type\n    - Columns\n      - First node\n      - Second node\n      - Third node\n  - ```MotifsType.txt```\n    - List of subgraphs and their subgraph type\n    - Columns\n      - First node\n      - Second node\n      - Third node\n      - Motif type\n      \n10. ```Superview```\n\n- Folder\n- Contains the result of the superview analysis\n- ```{module type}.csv```\n  - Contain all pairs of modules and their interactions\n  - Columns\n    - **module1**: module type of first module in comparison\n    - **module1_nr**: module number of first module in comparison\n    - **module1_size**: module size of first module in comparison\n    - **module2**: module type of second module in comparison\n    - **module2_nr**: module number of second module in comparison\n    - **module2_size**: module size of second module in comparison  \n    - **{Network_letter}_count**: number of interactions between modules originating from a certain network\n    - **{Network_letter}_z-score**: z-score against a comparison of 1000 random modules of the same size \n    - **{Network_letter}_pvalue**: 1 - CDF of z-score\n  - ```miRNA.csv and RF.csv```\n  - Summary file of interactions between each regulator and target module\n  - Columns\n    - **Group**: either miRNA or transcription factor (RF = Regulatory Factor)\n    - **regulator_name**: identifier of regulator\n    - **module2**: module type of  module in comparison\n    - **module2_nr**: module number of  module in comparison\n    - **module1_size**: module size of  module in comparison\n    - **{Network_letter}_count**: number of interactions between regulator and module originating from a certain network\n    - **{Network_letter}_fraction**: fraction of nodes in the module targeted by a regulator of from a certain network\n    - **SumCount**: all counts over all interaction types\n    - **fraction**: fraction of nodes in the module targeted by a regulator     \n  - ```Module_RF_stats.csv```\n  - Overview per module to summarize how many regulators target this module\n  - Columns\n    - **Module**: module name\n    - **count_RF**: count how many transcription factors target a module\n    - **total_RF**: count how many transcription factors were included in the multi-edge network\n    - **percentage_RF**: percentage how many transcription factors are targeting a module\n    - **count_miRNA**: count how many miRNA target a module\n    - **total_miRNA**: count how many miRNA were included in the multi-edge network\n    - **percentage_miRNA**: percentage how many miRNA are targeting a module\n  - ```TF_miRNA_target_stats.csv```\n  - Overview per module to summarize how many modules are targeted by a specific transcription factor or miRNA\n  - Columns\n    - **RF**: ID of the regulator\n    - **type**: type of regulator, either transcription factor or miRNA\n    - **count**: number of targeted modules\n    - **total**: total number of modules\n    - **percentage**: percentage of modules covered compared to the total number of modules      \n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input, output and arguments to calculate contextualization scores",
        "parent_header": [
          "SUBATOMIC:    SUbgraph BAsed mulTi-OMIcs Clustering",
          "How to run SUBATOMIC: Toy example"
        ],
        "type": "Text_excerpt",
        "value": "separately.\n\n- Call\n  - ```python utility_scripts/calculate_contextualization_scores.py [options and flags]```\n- Possible flags\n  - ```-expression```: set path and name of file containing expression data\n  - ```-pvalues```: set path and name of file containing deferentially expressed p-values\n  - ```-meta```: set path and name of file containing meta data for ECD scores\n  - ```-clusters```: set path to the SCHYPE output folder (containing SCHypeALL, SCHypeCIR etc.)\n  - ```-out```: set path were to store the results\n  - ```-nPCC```: Flag that enables nPCC calculation -no argument needed\n  - ```-ECD```: Flag that enables ECD calculation - no argument needed\n  - ```-activity```: Flag that enables module activity calculation -no argument needed  \n  - ```-sampling_k```: Integer value indicating the iterations for random sampling\n  \n- Input files\n  - ```expression file```\n    - Contains the expression data \n    - Columns: samples\n    - Rows: genes\n    - Separator: tab\n  - ```p-value file```\n    - Contains p-values per gene in the expression file - missing p-values are set at 1\n    - Header: True\n    - First column: gene identifier \n    - Second column: p-value\n  - ```clusters```    \n    - Modules as produced by the SUBATOMIC pipeline\n  - ```-meta```\n    - Contains meta information about the experiment \n    - Header: True\n    - First column: Sample header in the expression file\n    - Second column: Experiment identifier if multiple experiments are tested - each experiment is processed individually\n    - Third column: Names or identifier of different experimental conditions. Needs to include control conditions. At least three control and three condition samples need to be provided.\n    - Fifth column: A 0 or 1 indicator to mark experimental conditions - control conditions are marked with 1\n- Output files\n  - ```ECD.csv```\n    - **module**: name of module\n    - **experiment**: number of experiment\n    - **condition**: name of condition\n    - **length_module**: number of nodes in the module\n    - **mean_dPCC**: mean differential Pearson correlation in the module between control and experimental conditions\n- Required flags per analyses\n  - Calculate ECD score\n    - ```-clusters```\n    - ```-expression```\n    - ```-sampling_k```\n    - ```-meta```\n  - Calculate nPCC\n    - ```-clusters```\n    - ```-expression```\n    - ```-sampling_k``` \n  - Calculate module activity\n    - ```-clusters```\n    - ```-pvalues```\n    - ```-sampling_k```     \n"
      },
      "source": "https://raw.githubusercontent.com/CBIGR/SUBATOMIC/master/README.md",
      "technique": "header_analysis"
    }
  ]
}