{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PacificBiosciences/pbmm2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-11-12T13:19:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-12T03:08:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A minimap2 frontend for PacBio native data formats"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9141781130378503,
      "result": {
        "type": "Text_excerpt",
        "value": "<h1 align=\"center\"><img width=\"200px\" src=\"img/pbmm2.png\"/></h1>\n<h1 align=\"center\">pbmm2</h1>\n<p align=\"center\">A minimap2 SMRT wrapper for PacBio data:\nnative PacBio data in \u21e8 native PacBio BAM out.</p> \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9976874075042942,
      "result": {
        "original_header": "Availability",
        "type": "Text_excerpt",
        "value": "_pbmm2_ is a SMRT C++ wrapper for [minimap2](https://github.com/lh3/minimap2)'s C API.\nIts purpose is to support native PacBio in- and output, provide sets of\nrecommended parameters, generate sorted output on-the-fly, and postprocess alignments.\nSorted output can be used directly for polishing using GenomicConsensus,\nif BAM has been used as input to _pbmm2_.\nBenchmarks show that _pbmm2_ outperforms BLASR in sequence identity,\nnumber of mapped bases, and especially runtime. _pbmm2_ is the official\nreplacement for BLASR. \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9382695765820745,
      "result": {
        "type": "Text_excerpt",
        "value": "Please refer to our [official pbbioconda page](https://github.com/PacificBiosciences/pbbioconda)\nfor information on Installation, Support, License, Copyright, and Disclaimer. \n### Typical workflows\n```\nA. Generate index file for reference and reuse it to align reads\n  $ pbmm2 index ref.fasta ref.mmi --preset SUBREAD\n  $ pbmm2 align ref.mmi movie.subreads.bam ref.movie.bam --preset SUBREAD\n\nB. Align reads and sort on-the-fly, with 4 alignment and 2 sort threads\n  $ pbmm2 align ref.fasta movie.subreads.bam ref.movie.bam --preset SUBREAD --sort -j 4 -J 2\n\nC. Align reads, sort on-the-fly, and create PBI\n  $ pbmm2 align ref.fasta movie.subreadset.xml ref.movie.alignmentset.xml --preset SUBREAD --sort\n\nD. Omit output file and stream BAM output to stdout\n  $ pbmm2 align hg38.mmi movie1.subreadset.xml --preset SUBREAD | samtools sort > hg38.movie1.sorted.bam\n\nE. Align CCS fastq input and sort output\n  $ pbmm2 align ref.fasta movie.Q20.fastq ref.movie.bam --sort --rg '@RG\\tID:myid\\tSM:mysample'\n``` \n**Notes:**\n - If you use an index file, you can't override parameters `-k`, `-w`, nor `-u` in `pbmm2 align`!\n - Minimap2 parameter `-H` (homopolymer-compressed k-mer) is always on for _SUBREAD_ and _UNROLLED_ presets and can be disabled with `-u`.\n - You can also use existing minimap2 `.mmi` files in `pbmm2 align`. \n### Align\nThe output argument is optional. If not provided, BAM output is streamed to stdout.\n```\nUsage: pbmm2 align [options] <ref.fa|xml|mmi> <in.bam|xml|fa|fq> [out.aligned.bam|xml]\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9404933112021233,
      "result": {
        "original_header": "Sorting",
        "type": "Text_excerpt",
        "value": "Temporary files during sorting are stored in the current working directory,\nunless explicitly defined with environment variable `TMPDIR`.\nThe path used for temporary files is also printed if `--log-level DEBUG` is set. \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9475757428867676,
      "result": {
        "type": "Text_excerpt",
        "value": "Benchmarks on human data have shown that 4 sort threads are recommended, but no more\nthan 8 threads can be effectively leveraged, even with 70 cores used for alignment.\nIt is recommended to provide more memory to each of a few sort threads, to avoid disk IO pressure,\nthan providing less memory to each of many sort threads. \n#### FASTA/Q input\nIn addition to native PacBio BAM input, reads can also be provided in FASTA\nand FASTQ formats, as shown above. \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9213499169362935,
      "result": {
        "original_header": "pbmm2",
        "type": "Text_excerpt",
        "value": "All three reference file formats `.fasta`, `.referenceset.xml`, and `.mmi` can be combined with FASTA/Q input. \n### Which minimap2 version is used? \n### When are `pbi` files created?\nWhenever the output is of type `xml`, a `pbi` file is being generated. \n### When are BAM index files created?\nFor sorted output via `--sort`, a `bai` file is being generated per default.\nYou can switch to `csi` for larger genomes with `--bam-index CSI` or skip\nindex generation completely with `--bam-index NONE`. \n### What are parameter sets and how can I override them?\nPer default, _pbmm2_ uses recommended parameter sets to simplify the plethora\nof possible combinations. For this, we currently offer:\n```\nAlignment modes of --preset:\n    - \"SUBREAD\"       -k 19 -w 19    -o 5 -O 56 -e 4 -E 1 -A 2 -B 5 -z 400 -Z 50  -r 2000   -g 5000\n    - \"CCS\" or \"HIFI\" -k 19 -w 19 -u -o 6 -O 26 -e 2 -E 1 -A 1 -B 4 -z 400 -Z 50  -r 2000   -g 5000\n    - \"ISOSEQ\"        -k 15 -w 5  -u -o 2 -O 32 -e 1 -E 0 -A 1 -B 2 -z 200 -Z 100 -r 200000 -g 2000 -C 5 -G 200000\n    - \"UNROLLED\"      -k 15 -w 15    -o 2 -O 32 -e 1 -E 0 -A 1 -B 2 -z 200 -Z 100 -r 2000   -g 10000\n  Default [\"CCS\"]\n```\nIf you want to override any of the parameters of your chosen set,\nplease use the respective options:\n```\n  -k   k-mer size (no larger than 28). [-1]\n  -w   Minimizer window size. [-1]\n  -u   Disable homopolymer-compressed k-mer (compression is active for SUBREAD & UNROLLED presets).\n  -A   Matching score. [-1]\n  -B   Mismatch penalty. [-1]\n  -z   Z-drop score. [-1]\n  -Z   Z-drop inversion score. [-1]\n  -r   Bandwidth used in chaining and DP-based alignment. [-1]\n  -g   Stop chain enlongation if there are no minimizers in N bp. [-1]\n```\nFor the piece-wise linear gap penalties, use the following overrides, whereas\na k-long gap costs min{o+k*e,O+k*E}:\n```\n  -o,--gap-open-1     Gap open penalty 1. [-1]\n  -O,--gap-open-2     Gap open penalty 2. [-1]\n  -e,--gap-extend-1   Gap extension penalty 1. [-1]\n  -E,--gap-extend-2   Gap extension penalty 2. [-1]\n  -L,--lj-min-ratio   Long join flank ratio. [-1]\n```\nFor `ISOSEQ`, you can override additional parameters:\n```\n  -G                  Max intron length (changes -r). [-1]\n  -C                  Cost for a non-canonical GT-AG splicing. [-1]\n  --no-splice-flank   Do not prefer splice flanks GT-AG.\n  ```\n \nIf you have suggestions for our default parameters or ideas for a new\nparameter set, please open a GitHub issue! \n - soft clipping with `-Y`\n - long cigars for tag `CG` with `-L`\n - `X/=` cigars instead of `M` with `--eqx`\n - no overlapping query intervals with [repeated matches trimming](README.md#what-is-repeated-matches-trimming)\n - no secondary alignments are produced with `--secondary=no` \n### What sequence identity filters does _pbmm2_ offer?\nThe idea of removing spurious or low-quality alignments is straightforward,\nbut the exact definition of a threshold is tricky and\nvaries between tools and applications. More [on sequence identity](https://lh3.github.io/2018/11/25/on-the-definition-of-sequence-identity)\nfrom Heng Li.\\\n_pbmm2_ offers following filters:\n  1. `--min-concordance-perc`, legacy [mapped concordance](#how-do-you-define-identity) filter, inherited from its predecessor BLASR (hidden option)\n  2. `--min-id-perc`, a [sequence identity percentage](#how-do-you-define-identity) filter defined as the BLAST identity (hidden option)\n  3. `--min-gap-comp-id-perc`, a [gap-compressed sequence identity](#how-do-you-define-gap-compressed-identity) filter accounting insertions and deletions as single events only (default) \nBy default, (3) is set to 70%, (1) and (2) are deactivated.\nThe problem with (1) the mapped concordance filter is that it also removes\nbiological structural variations, such as true insertions and deletions\nw.r.t. used reference; it is only appropriate if applied to resequencing\ndata of haploid organisms.\nThe (2) sequence identity is the BLAST identity, a very natural metric for filtering.\nThe (3) gap-compressed sequence identity filter is very similar to (2),\nbut accounts insertions and deletions as single events only and\nis the fairest metric when it comes to assess the actual error rate.\\\nAll three filters are combined with `AND`, meaning an alignment has to pass all\nthree thresholds. \n### How do you define mapped concordance?\nThe `--min-concordance-perc` option, whereas concordance is defined as\n```\n    100 - 100 * (#Deletions + #Insertions + #Mismatches) / (AlignEndInRead - AlignStartInRead)\n```\n \nwill remove alignments that do not pass the provided threshold in percent.\\\nYou can deactivate this filter with `--min-concordance-perc 0`. \n\n### How do you define identity?\nThe `--min-id-perc` option, whereas sequence identity is defined as the BLAST identity\n```\n    100 * #Matches / (#Matches + #Mismatches + #Deletions + #Insertions)\n```\n \nwill remove alignments that do not pass the provided threshold in percent.\\\nYou can deactivate this filter with `--min-id-perc 0`. \n### How do you define gap-compressed identity?\nThe `--min-gap-comp-id-perc, -y` option, whereas gap-compressed identity is defined as\n```\n    100 * #Matches / (#Matches + #Mismatches + #DeletionEvents + #InsertionEvents)\n```\n \nwill remove alignments that do not pass the provided threshold in percent.\\\nThis is the default filter.\nYou can deactivate this filter with `--min-gap-comp-id-perc 0`. \n### What is repeated matches trimming?\nA repeated match is, when the same query interval is shared between a primary\nand supplementary alignment. This can happen for translocations, where breakends\nshare the same flanking sequence:\n<img width=\"1000px\" src=\"img/repeated_matches_bnd.png\"/> \nAnd sometimes, when a LINE gets inserted, the flanks are/get duplicated leading\nto complicated alignments, where we see a split read sharing a duplication.\nThe inserted region itself, mapping to a random other LINE in the reference\ngenome, may also share sequence similarity to the flanks:\n<img width=\"1000px\" src=\"img/repeated_matches_line.png\"/> \nTo get the best alignments, minimap2 decides that two alignments may use up to\n50% (default) of the same query bases. This does not work for PacBio, because we\nsee _pbmm2_ as a _blasr_ replacement and require that a single base may never be\naligned twice. Minimap2 offers a feature to enforce a query interval overlap\nto 0%. What happens now if a query interval gets used in two alignments,\none or both get flagged as secondary and get filtered.\nThis leads to yield loss and more importantly missing SVs in the alignment. \nPapers like [this](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-015-0670-9)\npresent dynamic programming approaches to find the optimal split to\nuniquely map query intervals, while maximizing alignment scores. We don't have\nper base alignment scores available, thus our approach is much simpler.\nWe align the read, find overlapping query intervals, and trim non-primary alignments\nin order as provided by minimap2; trimming here means that _pbmm2_ rewrites the cigar\nand the reference coordinates on-the-fly. This allows us to increase number\nof mapped bases, slightly reduce identity, but boost SV recall rate. \n### Why is the output different from BLASR?\nAs for any two alignments of the same data with different mappers, alignments\nwill differ. This is because of many reasons, but mainly a combination of\ndifferent scoring functions and seeding techniques. \n### How does sorting work?\nWe integrated `samtools sort` code into _pbmm2_ to use it as on-the-fly sorting.\nThis allows _pbmm2_ to skip writing unaligned BAM as output and thus save\none round-trip of writing and reading unaligned BAM to disk, minimizing disk IO\npressure. \n### Is `pbmm2 unsorted` + `samtools sort` faster than `pbmm2 --sort`?\nThis highly depends on your filesystem.\nOur tests are showing that there is no clear winner;\nruntimes differ up to 10% in either directions, depending on read length distribution,\ngenome length and complexity, disk IO pressure, and possibly further unknown factors.\nFor very small genomes post-alignment sorting is faster,\nbut for larger genomes like rice or human on-the-fly sorting is faster.\nKeep in mind, scalability is not only about runtime, but also disk IO pressure. \n### Can I get alignment statistics?\nIf you use `--log-level INFO`, after alignment is done, you get following\nalignment metrics:\n```\nMapped Reads: 1529671\nAlignments: 3087717\nMapped Bases: 28020786811\nMean Sequence Identity: 88.4%\nMax Mapped Read Length : 122989\nMean Mapped Read Length : 35597.9\n```\n### Is there any benchmark information, like timings and peak memory consumption?\nIf you use `--log-level INFO`, after alignment is done, you get following\ntiming and memory information:\n```\nIndex Build/Read Time: 22s 327ms\nAlignment Time: 5s 523ms\nSort Merge Time: 344ms 927us\nBAI Generation Time: 150ms\nPBI Generation Time: 161ms 120us\nRun Time: 28s 392ms\nCPU Time: 39s 653ms\nPeak RSS: 12.5847 GB\n```\n### Can I get progress output?\nIf you use `--log-level DEBUG`, you will following reports:\n```\n#Reads, #Aln, #RPM: 1462688, 2941000, 37393\n#Reads, #Aln, #RPM: 1465877, 2948000, 37379\n#Reads, #Aln, #RPM: 1469103, 2955000, 37350\n```\n \nThat is: \n* number of reads processed,\n* number of alignments generated,\n* reads per minute processed. \n### Can I perform unrolled alignment?\nIf you are interested in unrolled alignments that is, align the full-length\nZMW read or the HQ region of a ZMW against an unrolled template, please use\n`--zmw` or `--hqregion` with `*.subreadset.xml` as input that contains\none `*.subreads.bam` and one `*.scraps.bam` file. Keep in mind, to unroll the\nreference on your own.\nThis is beta feature and still in development. \n### How can I set the sample name?\nYou can override the sample name (SM field in RG tag) for all read groups\nwith `--sample`.\nIf not provided, sample names derive from the dataset input with order of\nprecedence: SM field in input read group, biosample name, well sample name, `UnnamedSample`.\nIf the input is a BAM file and `--sample` has not been used, the SM field will\nbe populated with `UnnamedSample`. \n### Is there a way to only align one subread per ZMW?\nUsing `--median-filter`, only the subread closest to the median subread length\nper ZMW is being aligned.\nPreferably, full-length subreads flanked by adapters are chosen. \n### What is `--collapse-homopolymers`?\nThe idea behind `--collapse-homopolymers` is to collapse any two or more\nconsecutive bases of the same type. In this mode, the reference is collapsed and\nwritten to disk with the same prefix as your output alignment and appended\nwith suffix `.ref.collapsed.fasta`. In addition, each read is collapsed\nbefore alignment. This mode cannot be combined with `.mmi` input. \n * 1.13.0:\n   * Update minimap2 to version 2.26 \n * 1.10.0:\n   * Allow reverse-complemented unaligned records as input\n   * Allow infix, but not flanking, spaces in sample name\n   * Do not allow overwriting input files\n   * Store number of mismatches, tag NM \n * 1.8.0:\n   * Add support for *.fsa files \n * 1.7.0:\n   * Set `TLEN`, for information only\n   * Trim insertions, deletions, and mismatches from the alignment flanks \n * 1.5.0:\n   * Hide `--min-concordance-perc` and `--min-id-perc`\n   * Change default identity filter to `--min-gap-comp-id-perc` \n * 1.3.0:\n   * New internal features for HiFi assembly\n   * htslib 1.10 support \n * 1.2.1:\n   * Abort if input fofn contains non-existing files\n   * Add new filters `--min-id-perc` and `--min-gap-comp-id-perc`\n   * Updated CLI UX\n   * Add `-g` to control minimap2's `max_gap`\n   * Add `--bam-index` \n * 1.1.0:\n   * Add support for gzipped FASTA and FASTQ\n   * Allow multiple input files via `.fofn`\n   * Add `--collapse-homopolymers`\n   * Use `TMPDIR` env variable to set path for temporary files\n   * Minor memory leak fix, if you used the API directly \n * 0.12.0:\n   * Enable `--unmapped` to add unmapped records to output\n   * Add repeated matches trimming\n   * Add BAI for sorted output\n   * Allow `0` value overrides\n   * Abort if insufficient memory is available for sorting \n * 0.11.0:\n   * Change input argument order\n   * Library API access\n   * Add fasta/q input support\n   * Add `--lj-min-ratio`, `--rg`, `--split-by-sample`, `--strip`\n   * Fix `SA` tag\n   * Fix BAM header for idempotence \n * 0.10.1:\n   * Idempotence. Alignment of alignments results in identical alignments\n   * Use different technique to get tmpfile pipe\n   * Median filter does not log to DEBUG \n## Acknowledgements\nMany thanks to Heng Li for a pleasant API experience and\nto Lance Hepler for the initial idea and code. \n## Disclaimer\nTHIS WEBSITE AND CONTENT AND ALL SITE-RELATED SERVICES, INCLUDING ANY DATA, ARE PROVIDED \"AS IS,\" WITH ALL FAULTS, WITH NO REPRESENTATIONS OR WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTIES OF MERCHANTABILITY, SATISFACTORY QUALITY, NON-INFRINGEMENT OR FITNESS FOR A PARTICULAR PURPOSE. YOU ASSUME TOTAL RESPONSIBILITY AND RISK FOR YOUR USE OF THIS SITE, ALL SITE-RELATED SERVICES, AND ANY THIRD PARTY WEBSITES OR APPLICATIONS. NO ORAL OR WRITTEN INFORMATION OR ADVICE SHALL CREATE A WARRANTY OF ANY KIND. ANY REFERENCES TO SPECIFIC PRODUCTS OR SERVICES ON THE WEBSITES DO NOT CONSTITUTE OR IMPLY A RECOMMENDATION OR ENDORSEMENT BY PACIFIC BIOSCIENCES.\n \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PacificBiosciences/pbmm2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PacificBiosciences/pbmm2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/img/repeated_matches_bnd.png"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/img/repeated_matches_line.png"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999810531511493,
      "result": {
        "original_header": "Availability",
        "type": "Text_excerpt",
        "value": "## Availability\nLatest version can be installed via bioconda package `pbmm2`. \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9522737795983256,
      "result": {
        "type": "Text_excerpt",
        "value": "## Latest Version\nVersion **1.13.1**: [Full changelog here](#full-changelog) \n### Align\nThe output argument is optional. If not provided, BAM output is streamed to stdout.\n```\nUsage: pbmm2 align [options] <ref.fa|xml|mmi> <in.bam|xml|fa|fq> [out.aligned.bam|xml]\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9987607411236054,
      "result": {
        "original_header": "Sorting",
        "type": "Text_excerpt",
        "value": "Temporary files during sorting are stored in the current working directory,\nunless explicitly defined with environment variable `TMPDIR`.\nThe path used for temporary files is also printed if `--log-level DEBUG` is set. \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997278958450861,
      "result": {
        "type": "Text_excerpt",
        "value": "| Input                                     | Output                                 |GC | Preset   |\n| ------------------------------------------| -------------------------------------- |:-:| :------: |\n| `.bam` (aligned or unaliged)              | `.bam`                                 | Y |          |\n| `.fasta` / `.fa` / `.fasta.gz` / `.fa.gz` | `.bam`                                 | N |          |\n| `.fastq` / `.fq` / `.fastq.gz` / `.fq.gz` | `.bam`                                 | N |          |\n| `.Q20.fastq` / `Q20.fastq.gz`             | `.bam`                                 | N | `CCS`    |\n| `bam.fofn`                                | `.bam`                                 | N |          |\n| `fasta.fofn`                              | `.bam`                                 | N |          |\n| `fastq.fofn`                              | `.bam`                                 | N |          |\n| `.subreadset.xml`                         | `.bam` \\ `.alignmentset.xml`           | Y |          |\n| `.consensusreadset.xml`                   | `.bam` \\ `.consensusalignmentset.xml`  | Y | `CCS`    |\n| `.transcriptset.xml`                      | `.bam` \\ `.transcriptalignmentset.xml` | Y | `ISOSEQ` | \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9621008399332258,
      "result": {
        "original_header": "pbmm2",
        "type": "Text_excerpt",
        "value": "will remove alignments that do not pass the provided threshold in percent.\\\nYou can deactivate this filter with `--min-concordance-perc 0`. \nwill remove alignments that do not pass the provided threshold in percent.\\\nYou can deactivate this filter with `--min-id-perc 0`. \n### How do you define gap-compressed identity?\nThe `--min-gap-comp-id-perc, -y` option, whereas gap-compressed identity is defined as\n```\n    100 * #Matches / (#Matches + #Mismatches + #DeletionEvents + #InsertionEvents)\n```\n \nwill remove alignments that do not pass the provided threshold in percent.\\\nThis is the default filter.\nYou can deactivate this filter with `--min-gap-comp-id-perc 0`. \nWe recommend to use on-the-fly sorting via `pbmm2 align --sort`. \n * 1.14.0:\n   * Add option `--include-fail-reads` for datasets \n * 1.13.0:\n   * Update minimap2 to version 2.26 \n * 1.9.0:\n   * Print dependency versions\n   * Set unaligned MAPQ to 0 \n * 1.5.0:\n   * Hide `--min-concordance-perc` and `--min-id-perc`\n   * Change default identity filter to `--min-gap-comp-id-perc` \n * 1.1.0:\n   * Add support for gzipped FASTA and FASTQ\n   * Allow multiple input files via `.fofn`\n   * Add `--collapse-homopolymers`\n   * Use `TMPDIR` env variable to set path for temporary files\n   * Minor memory leak fix, if you used the API directly \n * 1.0.0:\n   * First stable release, included in SMRT Link v7.0\n   * Minor documentation changes \n * 0.12.0:\n   * Enable `--unmapped` to add unmapped records to output\n   * Add repeated matches trimming\n   * Add BAI for sorted output\n   * Allow `0` value overrides\n   * Abort if insufficient memory is available for sorting \n * 0.11.0:\n   * Change input argument order\n   * Library API access\n   * Add fasta/q input support\n   * Add `--lj-min-ratio`, `--rg`, `--split-by-sample`, `--strip`\n   * Fix `SA` tag\n   * Fix BAM header for idempotence \n * 0.9.0:\n   * Add `--sort`\n   * Add `--preset ISOSEQ`\n   * Add `--median-filter` \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8157437757486801,
      "result": {
        "type": "Text_excerpt",
        "value": "#### Sorting\nSorted output can be generated using `--sort`. \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.817948107964042,
      "result": {
        "original_header": "pbmm2",
        "type": "Text_excerpt",
        "value": "#### Multiple input files\n_pbmm2_ supports the `.fofn` file type (File Of File Names), containing the same\ndatatype. Supported are `.fofn` files with FASTA, FASTQ, or BAM. \n * 0.10.0:\n   * Add `--preset CCS`\n   * Allow disabling of homopolymer-compressed k-mer `-u`\n   * Adjust concordance metric to be identical to SMRT Link\n   * Add reference fasta to dataset output\n   * Output run timings and peak memory\n   * Change CLI UX\n   * No overlapping query intervals\n   * Use BioSample or WellSample name from input dataset\n   * Drop fake @SQ checksum\n   * Add `SA` tag \n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause Clear License",
        "spdx_id": "BSD-3-Clause-Clear",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause-clear",
        "value": "https://api.github.com/licenses/bsd-3-clause-clear"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2017-2018, Pacific Biosciences of California, Inc.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted (subject to the limitations in the\ndisclaimer below) provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above\n   copyright notice, this list of conditions and the following\n   disclaimer in the documentation and/or other materials provided\n   with the distribution.\n\n * Neither the name of Pacific Biosciences nor the names of its\n   contributors may be used to endorse or promote products derived\n   from this software without specific prior written permission.\n\nNO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE\nGRANTED BY THIS LICENSE. THIS SOFTWARE IS PROVIDED BY PACIFIC\nBIOSCIENCES AND ITS CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED\nWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL PACIFIC BIOSCIENCES OR ITS\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\nUSE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/img/pbmm2.png"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pbmm2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "PacificBiosciences"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 200157,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 193584,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Raku",
        "size": 105813,
        "type": "Programming_language",
        "value": "Raku"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Meson",
        "size": 9286,
        "type": "Programming_language",
        "value": "Meson"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 190,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 148,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pacbiofileformats.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/PacificBiosciences/pbmm2/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "armintoepfer",
          "type": "User"
        },
        "date_created": "2024-06-11T10:45:35Z",
        "date_published": "2024-06-11T10:46:55Z",
        "description": "Early access",
        "html_url": "https://github.com/PacificBiosciences/pbmm2/releases/tag/v1.14.99",
        "name": "Version 1.14.99",
        "release_id": 159854759,
        "tag": "v1.14.99",
        "tarball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/tarball/v1.14.99",
        "type": "Release",
        "url": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/159854759",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/159854759",
        "zipball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/zipball/v1.14.99"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "armintoepfer",
          "type": "User"
        },
        "date_created": "2023-09-25T14:17:09Z",
        "date_published": "2023-11-07T09:40:59Z",
        "description": "This has no code changes to 1.13.0",
        "html_url": "https://github.com/PacificBiosciences/pbmm2/releases/tag/v1.13.1",
        "name": "Version 1.13.1",
        "release_id": 128284669,
        "tag": "v1.13.1",
        "tarball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/tarball/v1.13.1",
        "type": "Release",
        "url": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/128284669",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/128284669",
        "zipball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/zipball/v1.13.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "armintoepfer",
          "type": "User"
        },
        "date_created": "2023-08-14T07:29:57Z",
        "date_published": "2023-08-14T07:32:12Z",
        "description": "Version 1.13.0",
        "html_url": "https://github.com/PacificBiosciences/pbmm2/releases/tag/v1.13.0",
        "name": "Version 1.13.0",
        "release_id": 117116034,
        "tag": "v1.13.0",
        "tarball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/tarball/v1.13.0",
        "type": "Release",
        "url": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/117116034",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/117116034",
        "zipball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/zipball/v1.13.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "armintoepfer",
          "type": "User"
        },
        "date_created": "2023-06-09T08:06:32Z",
        "date_published": "2023-06-09T08:27:44Z",
        "html_url": "https://github.com/PacificBiosciences/pbmm2/releases/tag/v1.12.0",
        "release_id": 107948727,
        "tag": "v1.12.0",
        "tarball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/tarball/v1.12.0",
        "type": "Release",
        "url": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/107948727",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/107948727",
        "zipball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/zipball/v1.12.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "derekwbarnett",
          "type": "User"
        },
        "date_created": "2021-08-09T12:57:13Z",
        "date_published": "2021-09-23T19:51:18Z",
        "description": "SMRT Link v10.2 release",
        "html_url": "https://github.com/PacificBiosciences/pbmm2/releases/tag/v1.7.0",
        "name": "Version 1.7.0",
        "release_id": 50161886,
        "tag": "v1.7.0",
        "tarball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/tarball/v1.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/50161886",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/50161886",
        "zipball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/zipball/v1.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "armintoepfer",
          "type": "User"
        },
        "date_created": "2020-09-22T12:36:49Z",
        "date_published": "2020-09-23T09:42:08Z",
        "description": "SMRT Link v10 release",
        "html_url": "https://github.com/PacificBiosciences/pbmm2/releases/tag/v1.4.0",
        "name": "Version 1.4.0",
        "release_id": 31694152,
        "tag": "v1.4.0",
        "tarball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/tarball/v1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/31694152",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/31694152",
        "zipball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/zipball/v1.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "armintoepfer",
          "type": "User"
        },
        "date_created": "2020-02-18T15:48:46Z",
        "date_published": "2020-02-18T15:49:56Z",
        "html_url": "https://github.com/PacificBiosciences/pbmm2/releases/tag/v1.2.1",
        "name": "Version 1.2.1",
        "release_id": 23772056,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/23772056",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/23772056",
        "zipball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "armintoepfer",
          "type": "User"
        },
        "date_created": "2020-02-17T11:30:56Z",
        "date_published": "2020-02-18T09:12:17Z",
        "html_url": "https://github.com/PacificBiosciences/pbmm2/releases/tag/v1.2.0",
        "name": "Version 1.2.0",
        "release_id": 23758105,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/23758105",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/23758105",
        "zipball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "armintoepfer",
          "type": "User"
        },
        "date_created": "2019-09-09T10:25:36Z",
        "date_published": "2023-01-10T10:45:28Z",
        "description": "Version 1.10.0",
        "html_url": "https://github.com/PacificBiosciences/pbmm2/releases/tag/v1.10.0",
        "name": "Version 1.10.0",
        "release_id": 88427351,
        "tag": "v1.10.0",
        "tarball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/tarball/v1.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/88427351",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/88427351",
        "zipball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/zipball/v1.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "armintoepfer",
          "type": "User"
        },
        "date_created": "2019-02-25T09:25:41Z",
        "date_published": "2022-04-19T11:53:22Z",
        "html_url": "https://github.com/PacificBiosciences/pbmm2/releases/tag/v1.9.0",
        "name": "Version 1.9.0",
        "release_id": 64728363,
        "tag": "v1.9.0",
        "tarball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/tarball/v1.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/64728363",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/64728363",
        "zipball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/zipball/v1.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "armintoepfer",
          "type": "User"
        },
        "date_created": "2018-09-19T14:16:32Z",
        "date_published": "2022-03-01T09:16:31Z",
        "html_url": "https://github.com/PacificBiosciences/pbmm2/releases/tag/v1.8.0",
        "name": "Version 1.8.0",
        "release_id": 60687453,
        "tag": "v1.8.0",
        "tarball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/tarball/v1.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/60687453",
        "value": "https://api.github.com/repos/PacificBiosciences/pbmm2/releases/60687453",
        "zipball_url": "https://api.github.com/repos/PacificBiosciences/pbmm2/zipball/v1.8.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:26:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 170
      },
      "technique": "GitHub_API"
    }
  ]
}