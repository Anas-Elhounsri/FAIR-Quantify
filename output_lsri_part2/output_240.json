{
  "application_domain": [
    {
      "confidence": 42.1,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# YAML 1.2\n---\nabstract: \"Word2Vec based similarity measure of mass spectrometry data.\"\nauthors:\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Huber\n    given-names: Florian\n    orcid: \"https://orcid.org/0000-0002-3535-9406\"\n  -\n    affiliation: \"Wageningen University and Research\"\n    family-names: Hooft\n    name-particle: van der\n    given-names: Justin J. J.\n    orcid: \"https://orcid.org/0000-0002-9340-5511\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Spaaks\n    given-names: Jurriaan H.\n    orcid: \"https://orcid.org/0000-0002-7064-4069\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Diblen\n    given-names: Faruk\n    orcid: \"https://orcid.org/0000-0002-0989-929X\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Verhoeven\n    given-names: Stefan\n    orcid: \"https://orcid.org/0000-0002-5821-2060\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Geng\n    given-names: Cunliang\n    orcid: \"https://orcid.org/0000-0002-1409-8358\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Meijer\n    given-names: Christiaan\n    orcid: \"https://orcid.org/0000-0002-5529-5761\"\n  -\n    affiliation: \"University of Glasgow\"\n    family-names: Rogers\n    given-names: Simon\n    orcid: \"https://orcid.org/0000-0003-3578-4477\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Belloum\n    given-names: Adam\n    orcid: \"https://orcid.org/0000-0001-6306-6937\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: Spreeuw\n    given-names: Hanno\n    orcid: \"https://orcid.org/0000-0002-5057-0322\"\n  -\n    affiliation: \"Netherlands eScience Center\"\n    family-names: de Jonge\n    given-names: Niek\n    orcid: \"https://orcid.org/0000-0002-3054-6210\"\n  -\n    affiliation: \"ICS, Masaryk University\"\n    family-names: Skoryk\n    given-names: Maksym\n    orcid: \"https://orcid.org/0000-0003-2056-8018\"\n\ncff-version: \"1.1.0\"\nkeywords:\n  - Word2Vec\n  - \"similarity measures\"\n  - \"mass spectrometry\"\nlicense: \"Apache-2.0\"\nmessage: \"If you use this software, please cite it using these metadata.\"\nrepository-code: \"https://github.com/iomega/spec2vec\"\ntitle: spec2vec\n...\n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/iomega/spec2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing guidelines\n\nWe welcome any kind of contribution to our software, from simple comment or question to a full fledged [pull request](https://help.github.com/articles/about-pull-requests/). Please read and follow our [Code of Conduct](CODE_OF_CONDUCT.rst).\n\nA contribution can be one of the following cases:\n\n1. you have a question;\n1. you think you may have found a bug (including unexpected behavior);\n1. you want to make some kind of change to the code base (e.g. to fix a bug, to add a new feature, to update documentation);\n1. you want to make a new release of the code base.\n\nThe sections below outline the steps in each case.\n\n## You have a question\n\n1. use the search functionality [here](https://github.com/iomega/spec2vec/issues) to see if someone already filed the same issue;\n1. if your issue search did not yield any relevant results, make a new issue;\n1. apply the \"Question\" label; apply other labels when relevant.\n\n## You think you may have found a bug\n\n1. use the search functionality [here](https://github.com/iomega/spec2vec/issues) to see if someone already filed the same issue;\n1. if your issue search did not yield any relevant results, make a new issue, making sure to provide enough information to the rest of the community to understand the cause and context of the problem. Depending on the issue, you may want to include:\n    - the [SHA hashcode](https://help.github.com/articles/autolinked-references-and-urls/#commit-shas) of the commit that is causing your problem;\n    - some identifying information (name and version number) for dependencies you're using;\n    - information about the operating system;\n1. apply relevant labels to the newly created issue.\n\n## You want to make some kind of change to the code base\n\n1. (**important**) announce your plan to the rest of the community *before you start working*. This announcement should be in the form of a (new) issue;\n1. (**important**) wait until some kind of consensus is reached about your idea being a good idea;\n1. if needed, fork the repository to your own Github profile and create your own feature branch off of the latest master commit. While working on your feature branch, make sure to stay up to date with the master branch by pulling in changes, possibly from the 'upstream' repository (follow the instructions [here](https://help.github.com/articles/configuring-a-remote-for-a-fork/) and [here](https://help.github.com/articles/syncing-a-fork/));\n1. make sure the existing tests still work by running ``python setup.py test``;\n1. add your own tests (if necessary);\n1. update or expand the documentation;\n1. update the `CHANGELOG.md` file with change;\n1. [push](http://rogerdudler.github.io/git-guide/>) your feature branch to (your fork of) the spec2vec repository on GitHub;\n1. create the pull request, e.g. following the instructions [here](https://help.github.com/articles/creating-a-pull-request/).\n\nIn case you feel like you've made a valuable contribution, but you don't know how to write or run tests for it, or how to generate the documentation: don't let this discourage you from making the pull request; we can help you! Just go ahead and submit the pull request, but keep in mind that you might be asked to append additional commits to your pull request.\n\n## You want to make a new release of the code base\n\nTo create release you need write permission on the repository.\n\n1. Check author list in `citation.cff` and `.zenodo.json` files\n1. Bump the version using `bump2version <major|minor|patch>`. For example, `bump2version major` will increase major version numbers everywhere its needed (code, meta, etc.) in the repo.\n1. Update the `CHANGELOG.md` to include changes made\n1. Goto [GitHub release page](https://github.com/iomega/spec2vec/releases)\n1. Press draft a new release button\n1. Fill version, title and description field\n1. Press the Publish Release button\n\nA GitHub action will run which will publish the new version to [anaconda](https://anaconda.org/nlesc/spec2vec).\nAlso a Zenodo entry will be made for the release with its own DOI.\n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "type": "Text_excerpt",
        "value": "If you want to contribute to the development of spec2vec,\nhave a look at the `contribution guidelines <CONTRIBUTING.md>`_.\n\n*******\nLicense\n*******\n\nCopyright (c) 2023, Netherlands eScience Center & D\u00fcsseldorf University of Applied Sciences\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*******\nCredits\n*******\n\nThis package was created with `Cookiecutter\n<https://github.com/audreyr/cookiecutter>`_ and the `NLeSC/python-template\n<https://github.com/NLeSC/python-template>`_.\n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-13T13:35:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-29T21:58:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Word2Vec based similarity measure of mass spectrometry data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9362616130212597,
      "result": {
        "type": "Text_excerpt",
        "value": "################################################################################\nspec2vec\n################################################################################\n**Spec2vec** is a novel spectral similarity score inspired by a natural language processing\nalgorithm -- Word2Vec. Where Word2Vec learns relationships between words in sentences,\n**spec2vec** does so for mass fragments and neutral losses in MS/MS spectra.\nThe spectral similarity score is based on spectral embeddings learnt\nfrom the fragmental relationships within a large set of spectral data.  \nIf you use **spec2vec** for your research, please cite the following references: \n(and if you use **matchms** as well:\nF. Huber, S. Verhoeven, C. Meijer, H. Spreeuw, E. M. Villanueva Castilla, C. Geng, J.J.J. van der Hooft, S. Rogers, A. Belloum, F. Diblen, J.H. Spaaks, (2020). \"matchms - processing and similarity evaluation of mass spectrometry data\". Journal of Open Source Software, 5(52), 2411, https://doi.org/10.21105/joss.02411 ) \n\n***********************\nDocumentation for users\n***********************\nFor more extensive documentation `see our readthedocs <https://spec2vec.readthedocs.io/en/latest/>`_ or get started with our `spec2vec introduction tutorial <https://blog.esciencecenter.nl/build-a-mass-spectrometry-analysis-pipeline-in-python-using-matchms-part-ii-spec2vec-8aa639571018>`_.\n \n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8096440308289973,
      "result": {
        "original_header": "Versions",
        "type": "Text_excerpt",
        "value": "Since version `0.5.0` Spec2Vec uses `gensim >= 4.0.0` which should make it faster and more future proof. Model trained with older versions should still be importable without any issues. If you had scripts that used additional gensim code, however, those might occationally need some adaptation, see also the `gensim documentation on how to migrate your code <https://github.com/RaRe-Technologies/gensim/wiki/Migrating-from-Gensim-3.x-to-4>`_. \n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9968289940699464,
      "result": {
        "original_header": "Glossary of terms",
        "type": "Text_excerpt",
        "value": "   * - Term\n     - Description\n   * - adduct / addition product\n     - During ionization in a mass spectrometer, the molecules of the injected compound break apart\n       into fragments. When fragments combine into a new compound, this is known as an addition\n       product, or adduct.  `Wikipedia <https://en.wikipedia.org/wiki/Adduct>`__\n   * - GNPS\n     - Knowledge base for sharing of mass spectrometry data (`link <https://gnps.ucsd.edu/ProteoSAFe/static/gnps-splash.jsp>`__).\n   * - InChI / :code:`INCHI`\n     - InChI is short for International Chemical Identifier. InChIs are useful\n       in retrieving information associated with a certain molecule from a\n       database.\n   * - InChIKey / InChI key / :code:`INCHIKEY`\n     - An indentifier for molecules. For example, the InChI key for carbon\n       dioxide is :code:`InChIKey=CURLTUGMZLYLDI-UHFFFAOYSA-N` (yes, it\n       includes the substring :code:`InChIKey=`).\n   * - MGF File / Mascot Generic Format\n     - A plan ASCII file format to store peak list data from a mass spectrometry experiment. Links: `matrixscience.com <http://www.matrixscience.com/help/data_file_help.html#GEN>`__,\n       `fiehnlab.ucdavis.edu <https://fiehnlab.ucdavis.edu/projects/lipidblast/mgf-files>`__.\n   * - parent mass / :code:`parent_mass`\n     - Actual mass (in Dalton) of the original compound prior to fragmentation.\n       It can be recalculated from the precursor m/z by taking\n       into account the charge state and proton/electron masses.\n   * - precursor m/z / :code:`precursor_mz`\n     - Mass-to-charge ratio of the compound targeted for fragmentation.\n   * - SMILES\n     - A line notation for describing the structure of chemical species using\n       short ASCII strings. For example, water is encoded as :code:`O[H]O`,\n       carbon dioxide is encoded as :code:`O=C=O`, etc. SMILES-encoded species may be converted to InChIKey `using a resolver like this one <https://cactus.nci.nih.gov/chemical/structure>`__. The Wikipedia entry for SMILES is `here <https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system>`__. \n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8835189076146123,
      "result": {
        "original_header": "Conda package",
        "type": "Text_excerpt",
        "value": "Publishing to PyPI will trigger the creation of a `pull request on the bioconda recipes repository <https://github.com/bioconda/bioconda-recipes/pulls?q=is%3Apr+is%3Aopen+spec2vec>`_\nOnce the PR is merged the new version of matchms will appear on `https://anaconda.org/bioconda/spec2vec <https://anaconda.org/bioconda/spec2vec>`_  \n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://spec2vec.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/iomega/spec2vec/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/iomega/spec2vec/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iomega/spec2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "\nPrerequisites:  \n\n- Python 3.7, 3.8, or 3.9  \n- Recommended: Anaconda\n\nWe recommend installing spec2vec from Anaconda Cloud with\n\n.. code-block:: console\n\n  conda create --name spec2vec python=3.8\n  conda activate spec2vec\n  conda install --channel bioconda --channel conda-forge spec2vec\n\nAlternatively, spec2vec can also be installed using ``pip``. When using spec2vec together with ``matchms`` it is important to note that only the Anaconda install will make sure that also ``rdkit`` is installed properly, which is requried for a few matchms filter functions (it is not required for any spec2vec related functionalities though).\n\n.. code-block:: console\n\n  pip install spec2vec\n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9915316534471136,
      "result": {
        "type": "Text_excerpt",
        "value": "|GitHub Badge|\n|License Badge|\n|Conda Badge| |Pypi Badge| |Research Software Directory Badge|\n|Zenodo Badge|\n|CII Best Practices Badge| |Howfairis Badge| \n.. |GitHub Badge| image:: https://img.shields.io/badge/github-repo-000.svg?logo=github&labelColor=gray&color=blue\n   :target: https://github.com/iomega/spec2vec\n   :alt: GitHub Badge \n.. |License Badge| image:: https://img.shields.io/github/license/iomega/spec2vec\n   :target: https://github.com/iomega/spec2vec\n   :alt: License Badge \n.. |Conda Badge| image:: https://img.shields.io/conda/v/bioconda/spec2vec?color=blue\n   :target: https://bioconda.github.io/recipes/spec2vec/README.html\n   :alt: Conda Badge (Bioconda) \n.. |Pypi Badge| image:: https://img.shields.io/pypi/v/spec2vec?color=blue\n   :target: https://pypi.org/project/spec2vec/\n   :alt: spec2vec on PyPI \n.. |CII Best Practices Badge| image:: https://bestpractices.coreinfrastructure.org/projects/3967/badge\n   :target: https://bestpractices.coreinfrastructure.org/projects/3967\n   :alt: CII Best Practices Badge\n   \n.. |Howfairis Badge| image:: https://img.shields.io/badge/fair--software.eu-%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F-green\n   :target: https://fair-software.eu\n   :alt: Howfairis Badge \n.. |ReadTheDocs Badge| image:: https://readthedocs.org/projects/spec2vec/badge/?version=latest\n    :alt: Documentation Status\n    :scale: 100%\n    :target: https://spec2vec.readthedocs.io/en/latest/?badge=latest \n.. |Sonarcloud Quality Gate Badge| image:: https://sonarcloud.io/api/project_badges/measure?project=iomega_spec2vec&metric=alert_status\n   :target: https://sonarcloud.io/dashboard?id=iomega_spec2vec\n   :alt: Sonarcloud Quality Gate \n.. |Sonarcloud Coverage Badge| image:: https://sonarcloud.io/api/project_badges/measure?project=iomega_spec2vec&metric=coverage\n   :target: https://sonarcloud.io/component_measures?id=iomega_spec2vec&metric=Coverage&view=list\n   :alt: Sonarcloud Coverage \n.. |GitHub Workflow Status| image:: https://img.shields.io/github/actions/workflow/status/matchms/spec2vec/CI_build.yml?branch=master\n   :target: https://img.shields.io/github/workflow/status/iomega/spec2vec/CI%20Build\n   :alt: GitHub Workflow Status \n\n***********************\nDocumentation for users\n***********************\nFor more extensive documentation `see our readthedocs <https://spec2vec.readthedocs.io/en/latest/>`_ or get started with our `spec2vec introduction tutorial <https://blog.esciencecenter.nl/build-a-mass-spectrometry-analysis-pipeline-in-python-using-matchms-part-ii-spec2vec-8aa639571018>`_.\n \n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999914831686306,
      "result": {
        "original_header": "Versions",
        "type": "Text_excerpt",
        "value": "Since version `0.5.0` Spec2Vec uses `gensim >= 4.0.0` which should make it faster and more future proof. Model trained with older versions should still be importable without any issues. If you had scripts that used additional gensim code, however, those might occationally need some adaptation, see also the `gensim documentation on how to migrate your code <https://github.com/RaRe-Technologies/gensim/wiki/Migrating-from-Gensim-3.x-to-4>`_. \n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9424471007333818,
      "result": {
        "original_header": "Glossary of terms",
        "type": "Text_excerpt",
        "value": "   * - Term\n     - Description\n   * - adduct / addition product\n     - During ionization in a mass spectrometer, the molecules of the injected compound break apart\n       into fragments. When fragments combine into a new compound, this is known as an addition\n       product, or adduct.  `Wikipedia <https://en.wikipedia.org/wiki/Adduct>`__\n   * - GNPS\n     - Knowledge base for sharing of mass spectrometry data (`link <https://gnps.ucsd.edu/ProteoSAFe/static/gnps-splash.jsp>`__).\n   * - InChI / :code:`INCHI`\n     - InChI is short for International Chemical Identifier. InChIs are useful\n       in retrieving information associated with a certain molecule from a\n       database.\n   * - InChIKey / InChI key / :code:`INCHIKEY`\n     - An indentifier for molecules. For example, the InChI key for carbon\n       dioxide is :code:`InChIKey=CURLTUGMZLYLDI-UHFFFAOYSA-N` (yes, it\n       includes the substring :code:`InChIKey=`).\n   * - MGF File / Mascot Generic Format\n     - A plan ASCII file format to store peak list data from a mass spectrometry experiment. Links: `matrixscience.com <http://www.matrixscience.com/help/data_file_help.html#GEN>`__,\n       `fiehnlab.ucdavis.edu <https://fiehnlab.ucdavis.edu/projects/lipidblast/mgf-files>`__.\n   * - parent mass / :code:`parent_mass`\n     - Actual mass (in Dalton) of the original compound prior to fragmentation.\n       It can be recalculated from the precursor m/z by taking\n       into account the charge state and proton/electron masses.\n   * - precursor m/z / :code:`precursor_mz`\n     - Mass-to-charge ratio of the compound targeted for fragmentation.\n   * - SMILES\n     - A line notation for describing the structure of chemical species using\n       short ASCII strings. For example, water is encoded as :code:`O[H]O`,\n       carbon dioxide is encoded as :code:`O=C=O`, etc. SMILES-encoded species may be converted to InChIKey `using a resolver like this one <https://cactus.nci.nih.gov/chemical/structure>`__. The Wikipedia entry for SMILES is `here <https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system>`__. \n\n****************************\nDocumentation for developers\n**************************** \nInstallation\n============ \nTo install spec2vec, do: \n  git clone https://github.com/iomega/spec2vec.git\n  cd spec2vec\n  conda env create --file conda/environment-dev.yml\n  conda activate spec2vec-dev\n  pip install --editable . \n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9668905528566364,
      "result": {
        "original_header": "Conda package",
        "type": "Text_excerpt",
        "value": "The conda packaging is handled by a `recipe at Bioconda <https://github.com/bioconda/bioconda-recipes/blob/master/recipes/spec2vec/meta.yaml>`_. \nPublishing to PyPI will trigger the creation of a `pull request on the bioconda recipes repository <https://github.com/bioconda/bioconda-recipes/pulls?q=is%3Apr+is%3Aopen+spec2vec>`_\nOnce the PR is merged the new version of matchms will appear on `https://anaconda.org/bioconda/spec2vec <https://anaconda.org/bioconda/spec2vec>`_  \n\nTo remove spec2vec package from the active environment: \n  conda remove spec2vec \n\nTo remove spec2vec environment: \n  conda env remove --name spec2vec\n \n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/iomega/spec2vec/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fuzzy-matching, fuzzy-search, mass-spectrometry, word2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "spec2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "iomega"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 86895,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 795,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 634,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://matchms.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "florian-huber",
          "type": "User"
        },
        "date_created": "2023-01-09T12:47:37Z",
        "date_published": "2023-01-19T09:17:49Z",
        "description": "# matchms 0.8.0\r\n\r\n### Changed\r\n\r\n- Minor changes to make tests pass with new matchms versions (>=0.18.0). It should nearly always be backward compatible though.\r\n- Now dependency requirement is set to `matchms>=0.14.0`",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.8.0",
        "name": "0.8.0",
        "release_id": 89515166,
        "tag": "0.8.0",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/89515166",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/89515166",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "florian-huber",
          "type": "User"
        },
        "date_created": "2023-01-06T19:26:52Z",
        "date_published": "2023-01-06T19:27:30Z",
        "description": "# Spec2Vec 0.7.0\r\n\r\n### Added\r\n\r\n- added `spec2vec.serialization` subpackage to import and export `Word2Vec` models to/from disk without Pickle \r\n  (via `import_model` and `export_model` respectively) [#80](https://github.com/iomega/spec2vec/pull/80)\r\n\r\n### Changed\r\n\r\n- bumped **gensim** version to `>=4.2.0` in dependencies [#84](https://github.com/iomega/spec2vec/pull/84)\r\n\r\n### Fixed\r\n\r\n- updated Code examples in documentation to recent changes in matchms.",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.7.0",
        "name": "0.7.0",
        "release_id": 88160722,
        "tag": "0.7.0",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/88160722",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/88160722",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "florian-huber",
          "type": "User"
        },
        "date_created": "2022-02-04T09:56:23Z",
        "date_published": "2022-02-04T10:00:07Z",
        "description": "# Spec2Vec 0.6.0\r\n\r\nMain changes are the addition of proper logging and the changed handling of spectra with peaks (=words) missing in the model. Missing words will no longer raise exceptions but cause warnings and the return of empty embeddings if the percentage of missing words is above `allowed_missing_percentage`.\r\n\r\n### Added\r\n\r\n- Logging (replacing former print statements) including options to write logs to file [#73](https://github.com/iomega/spec2vec/pull/73)\r\n- Now supports Python 3.9 (including CI test runs) [#40](https://github.com/iomega/spec2vec/issues/40)\r\n\r\n### Changed\r\n\r\n- missing words percentage above the `allowed_missing_percentage` no longer causes an expection but only leads to raising a warning [#73](https://github.com/iomega/spec2vec/pull/73)\r\n- default setting for `allowed_missing_percentage` to 10.0 to be less strict on model coverage [#72](https://github.com/iomega/spec2vec/pull/72)\r\n\r\n### Fixed\r\n\r\n- Can now also handle spectra in which no peak is known to the model (will return warning + empty vector) [#73](https://github.com/iomega/spec2vec/pull/73)",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.6.0",
        "name": "0.6.0",
        "release_id": 58673261,
        "tag": "0.6.0",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/58673261",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/58673261",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "florian-huber",
          "type": "User"
        },
        "date_created": "2021-06-18T08:59:40Z",
        "date_published": "2021-06-18T09:17:40Z",
        "description": "This release is about moving from gensim 3.8 to gensim >= 4.0.0. This might give some performance improvements, but most of all it will be more future proof. It comes, however, with a few changes to the gensim API that might also influence some Spec2Vec scripts. In most cases things should work as before, but if issues arise, please first check the [gensim information on how to migrate](https://github.com/RaRe-Technologies/gensim/wiki/Migrating-from-Gensim-3.x-to-4).\r\n\r\n## Changed\r\n\r\n- Spec2Vec is now using gensim >= 4.0.0 [#62](https://github.com/iomega/spec2vec/pull/62)",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.5.0",
        "name": "0.5.0",
        "release_id": 44851905,
        "tag": "0.5.0",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/44851905",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/44851905",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "florian-huber",
          "type": "User"
        },
        "date_created": "2021-02-22T10:29:30Z",
        "date_published": "2021-02-22T10:46:57Z",
        "description": "This releases expands the API and makes it possible to compute Spec2Vec similarities without the need to first create `SpectrumDocument` objects from `Spectrum` objects (will now be done as part of `Spec2Vec`).\r\n\r\n## Changed\r\n\r\n- refactored `Spec2Vec` to now accept `Spectrum` or `SpectrumDocument` as input [#51](https://github.com/iomega/spec2vec/issues/51)\r\n\r\n## Fixed\r\n\r\n- updated and fixed code examples  [#51](https://github.com/iomega/spec2vec/issues/51)\r\n- updated and fixed attribute typing [#51](https://github.com/iomega/spec2vec/issues/51)",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.4.0",
        "name": "0.4.0",
        "release_id": 38415153,
        "tag": "0.4.0",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/38415153",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/38415153",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "florian-huber",
          "type": "User"
        },
        "date_created": "2021-02-10T14:05:14Z",
        "date_published": "2021-02-10T14:07:10Z",
        "description": "Mostly an attempt to solve an issue with the macOS conda workflow.\r\n\r\n### Changed\r\n\r\n- update required numba version to >=0.51 to avoid issues between numba and numpy [#55](https://github.com/iomega/spec2vec/pull/55)",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.3.4",
        "name": "0.3.4",
        "release_id": 37863083,
        "tag": "0.3.4",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/37863083",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/37863083",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "florian-huber",
          "type": "User"
        },
        "date_created": "2021-02-09T17:19:19Z",
        "date_published": "2021-02-09T17:20:46Z",
        "description": "### Added\r\n\r\n- Metadata getter method for `SpectrumDocument` [#50](https://github.com/iomega/spec2vec/pull/50)\r\n- Implement `is_symmetric=True` option for `Spec2Vec.matrix` method [#53](https://github.com/iomega/spec2vec/pull/53)\r\n\r\n### Changed\r\n\r\n- Change default for `n_decimals` parameter from 1 to 2 [#50](https://github.com/iomega/spec2vec/pull/50)",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.3.3",
        "name": "0.3.3",
        "release_id": 37813998,
        "tag": "0.3.3",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/37813998",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/37813998",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "florian-huber",
          "type": "User"
        },
        "date_created": "2020-12-03T18:51:52Z",
        "date_published": "2020-12-03T19:06:04Z",
        "description": "### Changed\r\n\r\n- Add optional progress bar for spec2vec.matrix() calculations (default is False) [#43](https://github.com/iomega/spec2vec/pull/43)",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.3.2",
        "name": "0.3.2",
        "release_id": 34781671,
        "tag": "0.3.2",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/34781671",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/34781671",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "florian-huber",
          "type": "User"
        },
        "date_created": "2020-09-23T08:39:47Z",
        "date_published": "2020-09-23T08:43:27Z",
        "description": "### Changed\r\n\r\n- Implement faster, numba-based cosine similarity function [#29](https://github.com/iomega/spec2vec/pull/29)",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.3.1",
        "name": "0.3.1",
        "release_id": 31691699,
        "tag": "0.3.1",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/31691699",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/31691699",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "florian-huber",
          "type": "User"
        },
        "date_created": "2020-09-16T19:02:06Z",
        "date_published": "2020-09-16T20:10:59Z",
        "description": "### Main changes for user\r\n\r\n- use matchms.calculate_scores() instead of matchms.calculate_scores_parallel()\r\n- use spec2vec.Spec2Vec instead of spec2vec.Spec2VecParallel\r\n- use spec2vec.Spec2Vec.matrix(references, queries) instead of spec2vec.Spec2VecParallel(references, queries)\r\n\r\n### Added\r\n\r\n- Support for Python 3.8 [#35](https://github.com/iomega/spec2vec/pull/35)\r\n\r\n### Changed\r\n\r\n- Refactored Spec2Vec class to provide .pair() and .matrix() methods [#35](https://github.com/iomega/spec2vec/pull/35)\r\n\r\n### Removed\r\n\r\n- Spec2VecParallel (is now included as Spec2Vec.matrix()) [#35](https://github.com/iomega/spec2vec/pull/35)\r\n",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.3.0",
        "name": "0.3.0",
        "release_id": 31420175,
        "tag": "0.3.0",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/31420175",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/31420175",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "florian-huber",
          "type": "User"
        },
        "date_created": "2020-06-18T09:31:13Z",
        "date_published": "2020-06-18T10:13:59Z",
        "description": "Word2Vec based similarity measure of mass spectrometry data.\r\n\r\n### Added\r\n\r\n- Wrapper for training a gensim word2vec model [#13](https://github.com/iomega/spec2vec/tree/13-gensim-wrapper)\r\n- Basic logger for word2vec model training [#11](https://github.com/iomega/spec2vec/issues/11)\r\n\r\n### Changed\r\n\r\n- Extend spec2vec similarity calculation to handle missing words [#9](https://github.com/iomega/spec2vec/issues/9)\r\n- Extend documentation and given code examples [#15](https://github.com/iomega/spec2vec/issues/15)\r\n- Updated the integration test to work with matchms 0.4.0 [#7](https://github.com/iomega/spec2vec/issues/7)",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.2.0",
        "name": "0.2.0",
        "release_id": 27671986,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/27671986",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/27671986",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fdiblen",
          "type": "User"
        },
        "date_created": "2020-06-02T13:58:00Z",
        "date_published": "2020-06-02T13:59:58Z",
        "description": "Word2Vec based similarity measure of mass spectrometry data.",
        "html_url": "https://github.com/iomega/spec2vec/releases/tag/0.1.0",
        "name": "0.1.0",
        "release_id": 27137905,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/iomega/spec2vec/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/iomega/spec2vec/releases/27137905",
        "value": "https://api.github.com/repos/iomega/spec2vec/releases/27137905",
        "zipball_url": "https://api.github.com/repos/iomega/spec2vec/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:54:28",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 60
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "Below a code example of how to process a large data set of reference spectra to\ntrain a word2vec model from scratch. Spectra are converted to documents using ``SpectrumDocument`` which converts spectrum peaks into \"words\" according to their m/z ratio (for instance \"peak@100.39\"). A new word2vec model can then trained using ``train_new_word2vec_model`` which will set the training parameters to spec2vec defaults unless specified otherwise. Word2Vec models learn from co-occurences of peaks (\"words\") across many different spectra.\nTo get a model that can give a meaningful representation of a set of\ngiven spectra it is desirable to train the model on a large and representative\ndataset.\n\n.. code-block:: python\n\n    import os\n    import matchms.filtering as msfilters\n    from matchms.importing import load_from_mgf\n    from spec2vec import SpectrumDocument\n    from spec2vec.model_building import train_new_word2vec_model\n\n    def spectrum_processing(s):\n        \"\"\"This is how one would typically design a desired pre- and post-\n        processing pipeline.\"\"\"\n        s = msfilters.default_filters(s)\n        s = msfilters.add_parent_mass(s)\n        s = msfilters.normalize_intensities(s)\n        s = msfilters.reduce_to_number_of_peaks(s, n_required=10, ratio_desired=0.5, n_max=500)\n        s = msfilters.select_by_mz(s, mz_from=0, mz_to=1000)\n        s = msfilters.add_losses(s, loss_mz_from=10.0, loss_mz_to=200.0)\n        s = msfilters.require_minimum_number_of_peaks(s, n_required=10)\n        return s\n\n    # Load data from MGF file and apply filters\n    spectrums = [spectrum_processing(s) for s in load_from_mgf(\"reference_spectrums.mgf\")]\n\n    # Omit spectrums that didn't qualify for analysis\n    spectrums = [s for s in spectrums if s is not None]\n\n    # Create spectrum documents\n    reference_documents = [SpectrumDocument(s, n_decimals=2) for s in spectrums]\n\n    model_file = \"references.model\"\n    model = train_new_word2vec_model(reference_documents, iterations=[10, 20, 30], filename=model_file,\n                                     workers=2, progress_logger=True)\n\nOnce a word2vec model has been trained, spec2vec allows to calculate the similarities\nbetween mass spectrums based on this model. In cases where the word2vec model was\ntrained on data different than the data it is applied for, a number of peaks (\"words\")\nmight be unknown to the model (if they weren't part of the training dataset). To\naccount for those cases it is important to specify the ``allowed_missing_percentage``,\nas in the example below.\n\n.. code-block:: python\n\n    import gensim\n    from matchms import calculate_scores\n    from spec2vec import Spec2Vec\n\n    # query_spectrums loaded from files using https://matchms.readthedocs.io/en/latest/api/matchms.importing.load_from_mgf.html\n    query_spectrums = [spectrum_processing(s) for s in load_from_mgf(\"query_spectrums.mgf\")]\n\n    # Omit spectrums that didn't qualify for analysis\n    query_spectrums = [s for s in query_spectrums if s is not None]\n\n    # Import pre-trained word2vec model (see code example above)\n    model_file = \"references.model\"\n    model = gensim.models.Word2Vec.load(model_file)\n\n    # Define similarity_function\n    spec2vec_similarity = Spec2Vec(model=model, intensity_weighting_power=0.5,\n                                   allowed_missing_percentage=5.0)\n\n    # Calculate scores on all combinations of reference spectrums and queries\n    scores = calculate_scores(reference_documents, query_spectrums, spec2vec_similarity)\n\n    # Find the highest scores for a query spectrum of interest\n    best_matches = scores.scores_by_query(query_documents[0], sort=True)[:10]\n\n    # Return highest scores\n    print([x[1] for x in best_matches])\n\n"
      },
      "source": "https://raw.githubusercontent.com/iomega/spec2vec/master/README.rst",
      "technique": "header_analysis"
    }
  ]
}