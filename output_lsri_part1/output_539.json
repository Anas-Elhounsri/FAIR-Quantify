{
  "application_domain": [
    {
      "confidence": 0.9794305201078737,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying"
        ],
        "type": "Text_excerpt",
        "value": "If you use GGCAT in your research, please cite the following article:\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://doi.org/10.1101/2022.10.24.513174\">GGCAT</a>",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Citing"
        ],
        "type": "Text_excerpt",
        "value": "> Extremely-fast construction and querying of compacted and colored de Bruijn graphs with GGCAT\n> Andrea Cracco, Alexandru I. Tomescu\n> Genome Research gr.277615.122; doi: https://doi.org/10.1101/gr.277615.122\n\nIf you use a matchtigs/eulertigs output, please also cite the following articles:\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://doi.org/10.1101/2021.12.15.472871\">Matchtigs</a>",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Citing",
          "<a href=\"https://doi.org/10.1101/2022.10.24.513174\">GGCAT</a>"
        ],
        "type": "Text_excerpt",
        "value": "> Matchtigs: minimum plain text representation of kmer sets\n> Sebastian Schmidt, Shahbaz Khan, Jarno Alanko, Alexandru I. Tomescu\n> bioRxiv 2021.12.15.472871; doi: https://doi.org/10.1101/2021.12.15.472871\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://doi.org/10.4230/LIPIcs.WABI.2022.2\">Eulertigs</a>",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Citing",
          "<a href=\"https://doi.org/10.1101/2022.10.24.513174\">GGCAT</a>"
        ],
        "type": "Text_excerpt",
        "value": "> Eulertigs: minimum plain text representation of k-mer sets without repetitions in linear time\n> Sebastian Schmidt and Jarno N. Alanko\n> WABI 2022. [10.4230/LIPIcs.WABI.2022.2](https://doi.org/10.4230/LIPIcs.WABI.2022.2).\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/algbio/ggcat"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-20T11:03:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-26T08:55:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Compacted and colored de Bruijn graph construction and querying"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9973238364743987,
      "result": {
        "original_header": "GGCAT - compacted and colored de Bruijn graph construction and querying",
        "type": "Text_excerpt",
        "value": "GGCAT is a tool for building compacted (and optionally colored) de Bruijn graphs from raw sequencing data or for merging multiple existing cDBG in a single graph. It also supports sequence queryies to either a colored or non-colored graph (i.e. number/percentage of present kmers).\n \n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9569339862338817,
      "result": {
        "original_header": "Experimental API",
        "type": "Text_excerpt",
        "value": "GGCAT has an experimental API for Rust and C++.\n \n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9006049093784562,
      "result": {
        "original_header": "Rust",
        "type": "Text_excerpt",
        "value": "Add a dependency to the crates/api/ crate to use it in your project.\nCheck crates/api/example for usage examples.\n \n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/algbio/ggcat/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/algbio/ggcat/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "algbio/ggcat"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GGCAT - compacted and colored de Bruijn graph construction and querying"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/algbio/ggcat/main/conda/build.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Building minimum-plain text representations of kmer sets",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Tool usage",
          "Build a new graph"
        ],
        "type": "Text_excerpt",
        "value": "Unitigs are a plain-text representation of the set of kmers in the input reads / genomes, but not of minimum size. GGCAT integrates the [matchtigs & eulertigs](https://github.com/algbio/matchtigs) libraries. These libraries assume a set of maximal unitigs as input, and compute such minimum representations, allowing or forbidding repetitions of kmers, respectively. To build greedy matchtigs, use the `-g` flag; to build eulertigs, use the `--eulertigs` flag; to build a greedy version of eulertigs, use the `--pathtigs` flag.\n\nHere are all listed the available options for graph building:\n\n```\n> ggcat build --help\nUSAGE:\n\tggcat build [FLAGS] [OPTIONS] [--] [input]...\n\nFLAGS:\n\t-c, --colors                            Enable colors\n\t\t--eulertigs                         Generate eulertigs instead of maximal unitigs\n\t-f, --forward-only                      Treats reverse complementary kmers as different\n\t-e, --generate-maximal-unitigs-links    Generate maximal unitigs connections references, in BCALM2 format\n\t\t\t\t\t\t\t\t\t\t\tL:<+/->:<other id>:<+/->\n\t-g, --greedy-matchtigs                  Generate greedy matchtigs instead of maximal unitigs\n\t-h, --help                              Prints help information\n\t\t--keep-temp-files                   Keep intermediate temporary files for debugging purposes\n\t\t--pathtigs                          Generate pathtigs instead of maximal unitigs\n\t-p, --prefer-memory                     Use all the given memory before writing to disk\n\t-V, --version                           Prints version information\n\nOPTIONS:\n\t-b, --buckets-count-log <buckets-count-log>                              The log2 of the number of buckets\n\t-d, --colored-input-lists <colored-input-lists>...\n\t-w, --hash-type <hash-type>\n\t\t\tHash type used to identify kmers [default: Auto]\n\n\t-l, --input-lists <input-lists>...                                       The lists of input files\n\t\t--intermediate-compression-level <intermediate-compression-level>\n\t\t\tThe level of lz4 compression to be used for the intermediate files\n\n\t-k <klen>                                                                Specifies the k-mers length [default: 32]\n\t\t--last-step <last-step>                                               [default: BuildUnitigs]\n\t-m, --memory <memory>                                                    Maximum memory usage (GB) [default: 2]\n\t-s, --min-multiplicity <min-multiplicity>\n\t\t\tMinimum multiplicity required to keep a kmer [default: 2]\n\n\t\t--mlen <mlen>\n\t\t\tOverrides the default m-mers (minimizers) length\n\n\t-o, --output-file <output-file>                                           [default: output.fasta.lz4]\n\t\t--step <step>                                                         [default: MinimizerBucketing]\n\t-t, --temp-dir <temp-dir>\n\t\t\tDirectory for temporary files (default .temp_files) [default: .temp_files]\n\n\t-j, --threads-count <threads-count>                                       [default: 16]\n\nARGS:\n\t<input>...    The input files\n```\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying"
        ],
        "type": "Text_excerpt",
        "value": "At the moment building from source is the only option to install the tool.\nTo build the tool the Rust stable (>= 1.75) toolchain is required, and can be downloaded with the following commands:\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Linux/Mac",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\nrustup toolchain install stable\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Follow the instructions at the site:\nhttps://rustup.rs/\n\nThe building process was not tested on windows, but it should work with minor tweaks.\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Additional opt-in features",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Additional features can be enabled by specifying them in the command line while building/installing GGCAT (ex. --features \"feature1,feature2\"):\n\n- **kmer-counters**: Adds kmer abundance for each unitig, in a BCALM2 compatible format. If enabled GGCAT uses more memory while building colored graphs\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Building",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Then the tool can be installed with the commands:\n\n```\ngit clone https://github.com/algbio/ggcat --recursive\ncd ggcat/\ncargo install --path crates/cmdline/ --locked\n```\n\nthe binary is automatically copied to `$HOME/.cargo/bin`\n\nTo launch the tool directly from the command line, the above directory should be added to the `$PATH` variable.\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9401915821258053,
      "result": {
        "original_header": "Rust",
        "type": "Text_excerpt",
        "value": "Add a dependency to the crates/api/ crate to use it in your project.\nCheck crates/api/example for usage examples.\n \n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9142591907701517,
      "result": {
        "original_header": "C++",
        "type": "Text_excerpt",
        "value": "Run the makefile inside crates/capi/ggcat-cpp-api to build the library.\nCheck crates/capi/ggcat-cpp-api/example for usage examples.\n \n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/algbio/ggcat/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, bioinformatics-pipeline, de-novo-assembly, debruijn-graph, genome-assembly, rust, sequencing"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Andrea Cracco, Alexandru I. Tomescu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ggcat"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "algbio"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Rust",
        "size": 700753,
        "type": "Programming_language",
        "value": "Rust"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 73597,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 851,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 274,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Guilucand",
          "type": "User"
        },
        "date_created": "2023-02-22T10:15:49Z",
        "date_published": "2023-02-23T10:09:53Z",
        "description": "First pre-release of GGCAT, the tool implementing the algorithm described in _Extremely-fast construction and querying of compacted and colored de Bruijn graphs with GGCAT_\r\n\r\nThis version was used to produce the results shown in the article.\r\n\r\nPublication: https://www.biorxiv.org/content/10.1101/2022.10.24.513174v2",
        "html_url": "https://github.com/algbio/ggcat/releases/tag/v1.0_beta.1",
        "name": "GGCAT v1.0_beta.1",
        "release_id": 93417956,
        "tag": "v1.0_beta.1",
        "tarball_url": "https://api.github.com/repos/algbio/ggcat/tarball/v1.0_beta.1",
        "type": "Release",
        "url": "https://api.github.com/repos/algbio/ggcat/releases/93417956",
        "value": "https://api.github.com/repos/algbio/ggcat/releases/93417956",
        "zipball_url": "https://api.github.com/repos/algbio/ggcat/zipball/v1.0_beta.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:07:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 73
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Build a new graph",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Tool usage"
        ],
        "type": "Text_excerpt",
        "value": "To build a new graph with a specified k of some input files, run:\n\n```\nggcat build -k <k_value> -j <threads_count> <input_files> -o <output_file>\n```\n\nOr if you have a file with a list of input files:\n\n```\nggcat build -k <k_value> -j <threads_count> -l <input_files_list> -o <output_file>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Building a colored graph",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Tool usage",
          "Build a new graph"
        ],
        "type": "Text_excerpt",
        "value": "To build a colored graph, add the `-c` flag to the above commands\n\nBy default the color name is equal to the file name, this behavior can be overridden\nby specifying color names with associated input files in a separate file, and by passing it to ggcat with the `-d` flag. The color and file in each line should be separated by one `<TAB>` character.\n\nExample `color_mapping.in`:\n\n```\ncolor1\tfile1.fa\ncolor2\tfile2.fa\ncolor2\tfile3.fa\ncolor1\tdir/file4.fa\ncolor3\tdir2/file5.fa\n```\n\nThen the graph can be built with the command:\n\n```\nggcat build -k <k_value> -j <threads_count> -c -d color_mapping.in -o <output_file>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Building links",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Tool usage",
          "Build a new graph"
        ],
        "type": "Text_excerpt",
        "value": "To build links between maximal unitigs in BCALM2 like format, use the `-e` flag\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Querying a graph",
        "parent_header": [
          "GGCAT - compacted and colored de Bruijn graph construction and querying",
          "Tool usage"
        ],
        "type": "Text_excerpt",
        "value": "To query an uncolored graph use the command:\n\n```\nggcat query -k <k_value> -j <threads_count> <input-graph> <input-query>\n```\n\nThe provided k value must match the one used for graph construction.\nTo query a colored graph use the command:\n\n```\nggcat query --colors -k <k_value> -j <threads_count> <input-graph> <input-query>\n```\n\nThe tool automatically searches for the colormap file associated with the\ninput graph, that must have the same name as the graph with extension '.colors.dat'\n\nThe colors in the output are by default represented by an integer, to recover a mapping between the integers\nand the color filenames, use the command `ggcat dump-colors <colormap> <output_file>`.\n\nIf you instead want the color file names to be written directly in the query output (leading to a potentially much bigger output file),\npass the option `-f JsonLinesWithNames`.\n\nHere are listed all the available options for graph querying:\n\n```\n> ggcat query --help\nUSAGE:\n    ggcat query [FLAGS] [OPTIONS] <input-graph> <input-query> --kmer-length <kmer-length>\n\nFLAGS:\n    -c, --colors             Enable colors\n    -f, --forward-only       Treats reverse complementary kmers as different\n    -h, --help               Prints help information\n        --keep-temp-files    Keep intermediate temporary files for debugging purposes\n    -p, --prefer-memory      Use all the given memory before writing to disk\n    -V, --version            Prints version information\n\nOPTIONS:\n    -b, --buckets-count-log <buckets-count-log>                              The log2 of the number of buckets\n        --colored-query-output-format <colored-query-output-format>          \n    -w, --hash-type <hash-type>\n            Hash type used to identify kmers [default: Auto]\n\n        --intermediate-compression-level <intermediate-compression-level>\n            The level of lz4 compression to be used for the intermediate files\n\n    -k, --kmer-length <kmer-length>                                          Specifies the k-mers length\n    -m, --memory <memory>\n            Maximum suggested memory usage (GB) The tool will try use only up to this GB of memory to store temporary\n            files without writing to disk. This usage does not include the needed memory for the processing steps. GGCAT\n            can allocate extra memory for files if the current memory is not enough to complete the current operation\n            [default: 2]\n        --minimizer-length <minimizer-length>\n            Overrides the default m-mers (minimizers) length\n\n    -o, --output-file-prefix <output-file-prefix>                             [default: output]\n    -x, --step <step>                                                         [default: MinimizerBucketing]\n    -t, --temp-dir <temp-dir>\n            Directory for temporary files (default .temp_files) [default: .temp_files]\n\n    -j, --threads-count <threads-count>                                       [default: 16]\n\nARGS:\n    <input-graph>    The input graph\n    <input-query>    The input query as a .fasta file\n```\n"
      },
      "source": "https://raw.githubusercontent.com/algbio/ggcat/main/README.md",
      "technique": "header_analysis"
    }
  ]
}