{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ytabatabaee/CASTLES"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-08-10T14:47:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-28T01:42:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Coalescent-Aware Species Tree Length Estimation in Substitution-units"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9372594736067715,
      "result": {
        "original_header": "CASTLES",
        "type": "Text_excerpt",
        "value": "**CASTLES** is a method for estimating branch lengths of a given species tree from estimated gene trees in the unit of expected number of substitutions per sequence site (substitution units), that addresses gene tree heterogeneity due to incomplete lineage sorting (ILS), as modeled by the multi-species coalescent (MSC) model.  \nThe CASTLES algorithm is described in the following paper: \nDatasets and results from this study are available in [CASTLES-paper](https://github.com/ytabatabaee/CASTLES-paper/tree/main) repository.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9931089948031567,
      "result": {
        "original_header": "Integrated inside ASTER (NEW)",
        "type": "Text_excerpt",
        "value": "An improved version of CASTLES that also handles gene duplication and loss (called **CASTLES-Pro**) is now integerated inside the species tree estimation software [ASTER](https://github.com/chaoszhang/ASTER). We recommend using ASTER directly to get SU branch lengths on trees produced by [ASTRAL](https://github.com/chaoszhang/ASTER/blob/master/tutorial/astral.md), [ASTRAL-Pro](https://github.com/chaoszhang/ASTER/blob/master/tutorial/astral-pro.md), or on a fixed input species tree topology. \n \n"
      },
      "source": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9975783403427824,
      "result": {
        "original_header": "Additional Files",
        "type": "Text_excerpt",
        "value": "- An old documentation of CASTLES is available [here](https://github.com/ytabatabaee/CASTLES/blob/main/OLD-README.md).\n- A modified version of the simulation software [SimPhy](https://github.com/adamallo/SimPhy) that produces species trees with SU branch lenghts is available in [simulation_files](https://github.com/ytabatabaee/CASTLES/tree/main/simulation_files).\n- Some useful scripts for comparing branch lengths of two species trees are available in [scripts](https://github.com/ytabatabaee/CASTLES/tree/main/scripts).\n- See [su_branch_calcs.nb](https://github.com/ytabatabaee/CASTLES/blob/main/su_branch_calcs.nb) for theoretical derivations of SU branch lengths under the MSC.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ytabatabaee/CASTLES/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ytabatabaee/CASTLES/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ytabatabaee/CASTLES"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CASTLES"
      },
      "source": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/simulation_files/quartet_simulations.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/simulation_files/get-bl.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/simulation_files/postsim.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/simulation_files/simulations.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/simulation_files/summarize.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/simulation_files/redo-old-simulations.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ytabatabaee/CASTLES/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "branch-length-estimation, coalescent, gene-trees, species-trees"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 Yasamin Tabatabaee\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CASTLES"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ytabatabaee"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Mathematica",
        "size": 1010652,
        "type": "Programming_language",
        "value": "Mathematica"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 63714,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 8150,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ytabatabaee",
          "type": "User"
        },
        "date_created": "2023-10-27T01:30:48Z",
        "date_published": "2023-10-27T01:40:02Z",
        "html_url": "https://github.com/ytabatabaee/CASTLES/releases/tag/v1.3.0",
        "name": "CASTLES v1.3.0",
        "release_id": 126875507,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/ytabatabaee/CASTLES/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ytabatabaee/CASTLES/releases/126875507",
        "value": "https://api.github.com/repos/ytabatabaee/CASTLES/releases/126875507",
        "zipball_url": "https://api.github.com/repos/ytabatabaee/CASTLES/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:37:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage Instructions",
        "parent_header": [
          "CASTLES"
        ],
        "type": "Text_excerpt",
        "value": "Follow the installation instructions on [ASTER](https://github.com/chaoszhang/ASTER) repository and download ASTER (>= v1.16.2.4). Using the following compilation, ASTRAL and ASTRAL-Pro by default produce species trees with SU branch lengths. See [ASTRAL tutorial](https://github.com/chaoszhang/ASTER/blob/master/tutorial/astral.md) and [ASTRAL-Pro tutorial](https://github.com/chaoszhang/ASTER/blob/master/tutorial/astral-pro.md) for more information."
      },
      "source": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compilation",
        "parent_header": [
          "CASTLES",
          "Usage Instructions"
        ],
        "type": "Text_excerpt",
        "value": "For **single-copy** gene trees, use the following command to compile ASTER\n```\n$ g++ -D ASTRALIV -std=gnu++11 -march=native -Ofast -pthread src/astral.cpp -o bin/astral4\n```\nFor **multi-copy** gene trees, use the following command for compilation\n```\n$ g++ -D CASTLES -std=gnu++11 -march=native -Ofast -pthread src/astral-pro.cpp -o bin/astral-pro2\n```"
      },
      "source": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Estimating branch lengths",
        "parent_header": [
          "CASTLES",
          "Usage Instructions"
        ],
        "type": "Text_excerpt",
        "value": "**Arguments**\n```\nRequired\n -i,  --input        input gene trees in newick format       \n -o,  --output       output species tree with SU branch lengths\nOptional\n -i,  --genelength   average gene sequence length [default: 1000]   \n -o,  --root         outgroup name\n -a,  --mapping      list of gene name to taxon name maps\n -c,  --constraint   species tree to score \n```\nTo infer a species tree using ASTRAL with SU branch lengths, use the following command:\n```\n$ bin/astral4 -i <gene-tree-path> -o <output-path> [--root <outgroup-name>] [--genelength <gene-length>]\n```\nTo infer branch lengths on a **fixed** input species tree topology, use the scoring option `-C -c <species-tree-path>`:\n```\n$ bin/astral4 -i <gene-tree-path> -C -c <species-tree-path> -o <output-path> [--root <outgroup-name>] [--genelength <gene-length>]\n```\nTo infer branch lengths using ASTRAL-Pro, use the following command:\n```\n$ bin/astral-pro2 -i <gene-tree-path > [-C -c <species-tree-path>] -o <output-path> [--root <outgroup-name>] [--genelength <gene-length>]\n```\nIf an **outgroup** is known, it is recommded to specify it using the option `--root`. Additionally, if the average **gene sequence length** that was used to infer the input gene trees is approximately known, it can be set with `--genelength`. The default value for this parameter is 1000.\n"
      },
      "source": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Handling multiple individuals per species",
        "parent_header": [
          "CASTLES",
          "Usage Instructions",
          "Estimating branch lengths"
        ],
        "type": "Text_excerpt",
        "value": "When there are multiple individuals per species and the individual names do not match the species names, use the following command\n```\n$ bin/astral4 -i <gene-tree-path> [-C -c <species-tree-path>] -a <name_map> -o <output-path>\n```\nwhere the `name_map` file contains maps from individual names to species names in the following format\n```\nindividual_name1    species_name1\nindividual_name2    species_name2\nindividual_name3    species_name3\n...\n```"
      },
      "source": "https://raw.githubusercontent.com/ytabatabaee/CASTLES/main/README.md",
      "technique": "header_analysis"
    }
  ]
}