{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/interactivereport/scRNAsequest"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-03-15T19:20:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-31T14:15:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9985298287340806,
      "result": {
        "original_header": "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
        "type": "Text_excerpt",
        "value": "**Fig. 1. Overview of the scRNASequest workflow.** User provides single-cell or single-nucleus RNA-seq gene expression matrix (h5 or MEX) from Cell Ranger and sample metadata to the semi-automated workflow, scRNASequest. It generates basic quality control (QC) [Bookdown]() reports and allows users to choose from popular data harmonization tools such as [Harmony](https://www.nature.com/articles/s41592-019-0619-0), [LIGER](https://www.cell.com/cell/fulltext/S0092-8674(19)30504-5), and [Seurat](https://www.cell.com/cell/fulltext/S0092-8674(19)30559-8) to remove batch effects. [Azimuth](https://www.cell.com/cell/fulltext/S0092-8674(21)00583-3) reference-based cell label transfer is enabled as optional to perform cell type identification. Cluster- or cell-type-specific multi-sample multi-condition single cell level DE analysis is by default performed through [NEBULA](https://www.nature.com/articles/s42003-021-02146-6). Finally, an h5ad file will be generated to be loaded into the [cellxgene VIP](https://www.biorxiv.org/content/10.1101/2020.08.28.270652v2.full) framework or [CellDepot](https://www.sciencedirect.com/science/article/pii/S0022283621006665) single-cell data management system for interactive visualization and analysis. The main script for the analysis is [scAnalyzer](https://interactivereport.github.io/scRNAsequest/tutorial/docs/running-the-pipeline.html#initial-scanalyzer-run). Five additional scripts are also included in the scRNASequest pipeline suite: [scRMambient](https://interactivereport.github.io/scRNAsequest/tutorial/docs/additional-tools.html#scrmambient), [scTool](https://interactivereport.github.io/scRNAsequest/tutorial/docs/additional-tools.html#sctool), [scRef](https://interactivereport.github.io/scRNAsequest/tutorial/docs/reference-building.html), [sc2celldepot](https://interactivereport.github.io/scRNAsequest/tutorial/docs/celldepot-publishing.html), and [scDEG](https://interactivereport.github.io/scRNAsequest/tutorial/docs/additional-tools.html#scdeg). \n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9189685076998027,
      "result": {
        "original_header": "4. Output",
        "type": "Text_excerpt",
        "value": "A full description of output files can be seen [here](https://github.com/interactivereport/scRNAsequest/blob/main/src/file.description.yml).\n \n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9289318432102462,
      "result": {
        "original_header": "5. Differential expression (DE) analysis",
        "type": "Text_excerpt",
        "value": "The DE analysis in this pipeline is designed to compare **\u201calt\u201d** and **\u201cref\u201d** cells from **\u201cgroup\u201d** within each entry of **\u201ccluster\u201d** considering **\u201csample\u201d** variations. The **\u201cgroup\u201d** variable should contain conditions to compare, such as Mutant v.s. Control. Thus, this pipeline is designed to loop through each cluster, and perform DE analysis between **\u201calt\u201d** v.s. **\u201cref\u201d**. \nIn the first example, we would like to run DE analysis between **\u2018Female\u2019** and **\u2018Male\u2019** for each cluster annotated by **predicted.celltype1**(Created by reference-based label transfer, setting ref_name in the config.yml file). The first column assigns a name to the current comparison. In the second column, we input the header name **library_id**, which annotates the data sources. Then we add **predicted.celltype1** in the *cluster* column, which allows the pipeline to loop through each cluster in **predicted.celltype1**. The *group* column contains the header name storing the comparison groups, and here we use the **Sex** annotation. Each time, the pipeline can only compare two conditions, such as **\u2018Female\u2019** and **\u2018Male\u2019**. If the group column contains more groups, please list them as multiple lines in the DEGinfo.csv file. \nWe can also add covariates if needed, but this is optional. \nPlease refer to the [full tutorial](https://interactivereport.github.io/scRNAsequest/tutorial/docs/differential-expression-de-analysis.html) for more details related to DE analysis.\n \n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9326128987805674,
      "result": {
        "original_header": "6. Cellxgene VIP visualization",
        "type": "Text_excerpt",
        "value": "scRNASequest pipeline generates an h5ad file that is fully compatible with Cellxgene VIP for data analysis and visualization.  \nYou can 'Sign in as Guest' and navigate this demo data. First, make sure you select the optimal embedding using the button at the botton of the plot. We recommend **'Liger_umap'** as the embedding for visualization. We can also see that categorical variables are shown on the left, while numeric variables are listed on the right. You can use the drop-shape button to highlight each variable on the plot. \nPlease refer to the [GitHub website](https://github.com/interactivereport/cellxgene_VIP) and [Online tutorial](https://interactivereport.github.io/cellxgene_VIP/tutorial/docs/) for more details related to the Cellxgene VIP platform.\n \n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8310592581964928,
      "result": {
        "original_header": "7. CellDepot data management and publishing",
        "type": "Text_excerpt",
        "value": "Please refer to this tutorial to manage and publish the project using CellDepot: https://interactivereport.github.io/CellDepot/bookdown/docs/. \n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/interactivereport/scRNASequest/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/interactivereport/scRNAsequest/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "interactivereport/scRNAsequest"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/install.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://interactivereport.github.io/scRNAsequest/tutorial/images/UMAP.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Installation",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing"
        ],
        "type": "Text_excerpt",
        "value": "We provide two methods to install scRNASequest. The first one uses [Conda](https://docs.conda.io/en/latest/), and the second one uses [Docker](https://www.docker.com/). We have tested both methods on Linux servers; however, if you are a Mac user, please use the Docker method.\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1.1 Installation using Conda",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
          "1. Installation"
        ],
        "type": "Text_excerpt",
        "value": "First, please make sure you have [Conda](https://docs.conda.io/en/latest/) installed, or, [Anaconda](https://docs.anaconda.com/anaconda/install/index.html)/[Miniconda](https://docs.conda.io/en/latest/miniconda.html) installed:\n\n```\nwhich conda\n# Your conda path will be returned\n```\n\nThen, we choose a directory and install scRNASequest by downloading the source code from GitHub.\n\nThe directory you choose here will be the future directory of this pipeline.\n\n```\n# Go to the directory you choose. This tutorial uses $HOME (~) directory as an example:\ncd ~\ngit clone https://github.com/interactivereport/scRNASequest.git\ncd scRNASequest\n\n# Install scRNASequest conda environment\n# Before running this, please make sure you have conda installed before\n# This step will take a while, usually between 30min to 1h depending on the internet speed\n# Thank you for your patience\nbash install.sh\n\n# The .env will be created under the src directory\nls ~/scRNASequest/src/.env\n\n# Now the pipeline scripts under the scRNASequest folder can be used\n# Users can add the scRNASequest directory to the environment permanently\n# by editing ~/.bash_profile or ~/.bashrc\nvim ~/.bash_profile\n# Add the full path of the scRNASequest directory to $PATH.\n# In our example, this will be: ~/scRNASequest\nPATH=$PATH:~/scRNASequest\n# Close the vim text editor and source the file\nsource ~/.bash_profile\n\n#To verify the installation, type the main program name, and the following message will show up:\nscAnalyzer\n\n#Output:\n=====\nPlease set the sys.yml in ~/scRNASequest.\nAn example is '~/scRNASequest/src/sys_example.yml'.\n=====\n```\n\nYou got the above message because the `sys.yml` file is missing under the pipeline `src` directory (in our case, ~/scRNASequest/src/). \n\nPlease copy the sys_example.yml template there first:\n\n```\ncp ~/scRNASequest/src/sys_example.yml ~/scRNASequest/src/sys.yml\n```\n\nThen, fill in the following required items. These directories will be used to host final results (.h5ad files) of the pipeline as well as the reference files for cell type label transfer.\n\nSince we have `cellxgenedir` and `ref` directories created under the `demo` directory, we use them here:\n\n```\ncelldepotDir: ~/scRNASequest/demo/cellxgenedir.  # the absolute path to the cellxgene VIP host folder, where the h5ad files will be copied to for cellxgene VIP\nrefDir: ~/scRNASequest/demo/ref   # the absolute path to the Seurat reference folder if building reference is desired\n```\n\nYou may fill in the Cellxgene VIP server path after installing Cellxgene VIP later, but this is not required for running the pipeline. We leave this empty here.\n\n```\ncelldepotHttp: # the cellxgene host (with --dataroot option) link  http://HOST:PORT/d/\n```\n\nYou may change the information in the sys.yml file later, following the [full tutorial here](https://interactivereport.github.io/scRNAsequest/tutorial/docs/installation.html#configure-sys.yml-file).\n\nThen type the name of the main program, `scAnalyzer` again:\n\n```\n***** 2023-03-14 14:48:13 *****\n###########\n## scRNAsequest: https://github.com/interactivereport/scRNAsequest.git\n## Pipeline Path: /mnt/depts/dept04/compbio/projects/ndru_projects/Software/scRNAsequest\n## Pipeline Date: 2023-03-01 10:10:55 -0500\n## git HEAD: d067bfd6dc056597d046a45f3b3b927dd122dd82\n###########\n\nscAnalyzer /path/to/a/DNAnexus/download/folder === or === scAnalyzer /path/to/a/config/file\n\nThe config file will be generated automatically when a DNAnexus download folder is provided\nAvailable reference data:\n\thuman_cortex: more information @ https://azimuth.hubmapconsortium.org/references/\nIf one of the above can be used as a reference for your datasets, please update the config file with the name in 'ref_name'.\n\nPowered by None\n------------\n```\nThe installation was successful if you see the above message.\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1.2 Installation through Docker",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
          "1. Installation"
        ],
        "type": "Text_excerpt",
        "value": "We provide a Docker image here: https://hub.docker.com/repository/docker/sunyumail93/scrnasequest/general. Users can pull this image to build a container, which has been tested on both Linux and Mac systems. This will take roughly 10 minutes to set up.\n\nWe also provide a [Dockerfile](https://github.com/interactivereport/scRNAsequest/blob/main/Dockerfile) if you would like to build the image from scratch using the `docker build` command, which takes ~30 min.\n\nFirst, please make sure Docker has been installed and can be recognized through the command line:\n\n```\nwhich docker\n# Your docker path will be returned\n```\n\nGo to the directory you choose. This tutorial uses $HOME (~) directory as an example:\n```\ncd ~\ngit clone https://github.com/interactivereport/scRNASequest.git\ncd scRNASequest\n```\n\nThen we pull the docker image. This step takes ~10 min.\n```\ndocker pull sunyumail93/scrnasequest\n```\n\nInitiate the docker container. This command uses -v to map the `demo` directory under scRNASequest to `/demo` in the container:\n\n```\ndocker run -v `pwd`/demo:/demo -d sunyumail93/scrnasequest\n```\nThe above command prepars for the demo run in section 2.2. You can mount any directory containing your data to the Docker container using the syntax old_dir:container_dir.\n\nVerify your container:\n```\ndocker container ls\n\n#Results:\nCONTAINER ID   IMAGE                      COMMAND                  CREATED          STATUS          PORTS     NAMES\n4e0f3a40ce1d   sunyumail93/scrnasequest   \"/bin/sh -c 'while t\u2026\"   54 seconds ago   Up 52 seconds             interesting_lewin\n```\nThe last column is the <container_name>, and it will be used in the following steps.\n\nNow we launch the main program of this pipeline. In our example, <container_name> is interesting_lewin. Please substitute to yours:\n```\ndocker exec -t -i <container_name> scAnalyzer\n\n#Output:\n=====\nPlease set the sys.yml in /home/scRNASequest/src.\nAn example is '/home/scRNASequest/src/sys_example.yml'.\n=====\n```\n\nThis is because the sys.yml configuration file is missing under the src directory. There is a sys.yml file prepared for running the demo data (see section 2.2), and you can copy it to the pipeline src directory using the command below. It will work for future analysis also. However, you may change the information in the sys.yml file later, following the [full tutorial here](https://interactivereport.github.io/scRNAsequest/tutorial/docs/installation.html#configure-sys.yml-file). Please note that both '/demo/sys.yml' and '/home/scRNASequest/src' directories are in the container, rather than in your file system.\n\n```\ndocker exec -t -i <container_name> cp /demo/sys.yml /home/scRNASequest/src/\n```\n\nNow we run this command again, and we will see the pipeline message printed out, same as the one at the end of section 1.1:\n\n```\ndocker exec -t -i <container_name> scAnalyzer\n```\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.1 Data preparation",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
          "3. Quick start"
        ],
        "type": "Text_excerpt",
        "value": "This pipeline accepts [**h5**](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/advanced/h5_matrices) or [**MTX**](https://kb.10xgenomics.com/hc/en-us/articles/115000794686-How-is-the-MEX-format-used-for-the-gene-barcode-matrices) (an mtx file and associated barcodes file as well as a features file) containing cell count information [after running Cell Ranger](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/output/overview). You can also include the Cell Ranger QC results: DataPrefix.metrics_summary.csv, but this is optional. When you use downloaded data from NCBI/GEO, it may be necessary to rename the files.\n\nAn example of **h5** input file hierarchy, using data from [E-MTAB-11115](https://www.ebi.ac.uk/biostudies/arrayexpress/studies/E-MTAB-11115):\n\n```\nE-MTAB-11115/\n    \u251c\u2500\u2500 5705STDY8058280.raw_feature_bc_matrix.h5\n    \u251c\u2500\u2500 5705STDY8058280.metrics_summary.csv\n    \u251c\u2500\u2500 5705STDY8058281.raw_feature_bc_matrix.h5\n    \u251c\u2500\u2500 5705STDY8058281.metrics_summary.csv\n    \u251c\u2500\u2500 5705STDY8058282.raw_feature_bc_matrix.h5\n    \u251c\u2500\u2500 5705STDY8058282.metrics_summary.csv\n    \u251c\u2500\u2500 5705STDY8058283.raw_feature_bc_matrix.h5\n    \u251c\u2500\u2500 5705STDY8058283.metrics_summary.csv\n    \u251c\u2500\u2500 5705STDY8058284.raw_feature_bc_matrix.h5\n    \u251c\u2500\u2500 5705STDY8058284.metrics_summary.csv\n    \u251c\u2500\u2500 5705STDY8058285.raw_feature_bc_matrix.h5\n    \u2514\u2500\u2500 5705STDY8058285.metrics_summary.csv\n```\n\nAn example of **MTX** input file hierarchy, using data from [GSE185538](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE185538). Files under each separate directory must follow the naming criteria: **barcodes.tsv.gz**, **features.tsv.gz**, and **matrix.mtx.gz**:\n\n```\nGSE185538/\n    \u251c\u2500\u2500 GSM5617891_snRNA_FCtr\n        \u251c\u2500\u2500 barcodes.tsv.gz\n        \u251c\u2500\u2500 features.tsv.gz\n        \u2514\u2500\u2500 matrix.mtx.gz\n    \u251c\u2500\u2500 GSM5617892_snRNA_FEcig\n        \u251c\u2500\u2500 barcodes.tsv.gz\n        \u251c\u2500\u2500 features.tsv.gz\n        \u2514\u2500\u2500 matrix.mtx.gz\n    \u251c\u2500\u2500 GSM5617893_snRNA_MCtr\n        \u251c\u2500\u2500 barcodes.tsv.gz\n        \u251c\u2500\u2500 features.tsv.gz\n        \u2514\u2500\u2500 matrix.mtx.gz\n    \u2514\u2500\u2500 GSM5617894_snRNA_MEcig\n        \u251c\u2500\u2500 barcodes.tsv.gz\n        \u251c\u2500\u2500 features.tsv.gz\n        \u2514\u2500\u2500 matrix.mtx.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.3 Prepare the sampleMeta.csv file",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
          "3. Quick start"
        ],
        "type": "Text_excerpt",
        "value": "The empty **sampleMeta.csv** file contains three preset column headers that can be recognized by the pipeline: \n\n- **Sample_Name** is used to provide a simplified sample name.\n- **h5path** is for the full data path. If the inputs are h5 files, this would be the full path of each file. However, for MTX inputs, this should be the path to the data directory, where three data files are stored.\n- **metapath** is for cell annotation information, which is optional [(See more details about the annotation file)](https://interactivereport.github.io/scRNAsequest/tutorial/docs/data-preparation.html#public-data-in-h5-format). If you don't have this information, you can delete it from the sampleMeta.csv\n\nUsers can add more meta information to this sampleMeta.csv. Here are two examples:\n\n```\n#Example 1, for h5 data\nSample_Name,h5path,Sex,Age\n5705STDY8058280,~/E-MTAB-11115/5705STDY8058280_filtered_feature_bc_matrix.h5,Female,56d\n5705STDY8058281,~/E-MTAB-11115/5705STDY8058281_filtered_feature_bc_matrix.h5,Female,56d\n5705STDY8058282,~/E-MTAB-11115/5705STDY8058282_filtered_feature_bc_matrix.h5,Female,56d\n5705STDY8058283,~/E-MTAB-11115/5705STDY8058283_filtered_feature_bc_matrix.h5,Male,56d\n5705STDY8058284,~/E-MTAB-11115/5705STDY8058284_filtered_feature_bc_matrix.h5,Male,56d\n5705STDY8058285,~/E-MTAB-11115/5705STDY8058285_filtered_feature_bc_matrix.h5,Male,56d\n\n#Example 2, for MTX data\nSample_Name,h5path,Treatment,Sex\nFCtr,~/GSE185538/GSM5617891_snRNA_FCtr,Control,Female\nFEcig,~/GSE185538/GSM5617892_snRNA_FEcig,EcTreated,Female\nMCtr,~/GSE185538/GSM5617893_snRNA_MCtr,Control,Male\nMEcig,~/GSE185538/GSM5617894_snRNA_MEcig,EcTreated,Male\n```\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.4 Prepare the config.yml file",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
          "3. Quick start"
        ],
        "type": "Text_excerpt",
        "value": "This **config.yml** file contains critical configuration parameters to run the pipeline. Please use the following template as an example to prepare this file: [**config.yml**](https://github.com/interactivereport/scRNAsequest/blob/main/src/template.yml).\n\nSome tips:\n\n- **ref_name**: If left blank, the pipeline won't run reference-based cell type annotation. Users can provide an RDS or H5ad file following [Azimuth reference file format](https://github.com/satijalab/azimuth/wiki/Azimuth-Reference-Format) or download from [Azimuth references website](https://azimuth.hubmapconsortium.org/references/). To build a reference, use the `scRef` script from our pipeline [(See more details)](https://interactivereport.github.io/scRNAsequest/tutorial/docs/reference-building.html).\n- **gene_group**: You can define your own gene groups to run QC. If the \"**rm: False**\" is set to False, gene counts will be checked, and cells will be filtered out based on the \"cutoff\" percentage. To completely eliminate contaminating genes, such as mitochondria genes, set \"**rm: True**\".\n- **runAnalysis: False**: Run analysis means performing data integration and DE analysis. If set to False, the pipeline will only run the initial QC step, which allows users to examine whether the default cell filtering cutoffs are adequate. If they look good, set it to True to run the whole pipeline.\n- **overwrite: False**: Set to True if you rerun the pipeline and want to overwrite the previous results.\n- **DEG_desp**: Path to the DE configuration file. If the file is empty, it won't perform any analysis. See section 3 about how to fill in this file.\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9909168112675681,
      "result": {
        "original_header": "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
        "type": "Text_excerpt",
        "value": "Tutorial: https://interactivereport.github.io/scRNAsequest/tutorial/docs/index.html \nPublication: https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-023-09332-2 \n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9817910867567856,
      "result": {
        "original_header": "5. Differential expression (DE) analysis",
        "type": "Text_excerpt",
        "value": "We can also add covariates if needed, but this is optional. \n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9932341190059506,
      "result": {
        "original_header": "6. Cellxgene VIP visualization",
        "type": "Text_excerpt",
        "value": "https://apps.bxgenomics.com/scrnaview/app/core/app_project_launcher.php?ID=422 \n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9787549484745484,
      "result": {
        "original_header": "7. CellDepot data management and publishing",
        "type": "Text_excerpt",
        "value": "Please refer to this tutorial to manage and publish the project using CellDepot: https://interactivereport.github.io/CellDepot/bookdown/docs/. \n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8094380056405803,
      "result": {
        "original_header": "4. Output",
        "type": "Text_excerpt",
        "value": "After running the above steps, you will see a series of files generated. The main results include:\n```\noutputdir\n    \u251c\u2500\u2500 QC/                                  # QC plots\n    \u251c\u2500\u2500 raw/                                 # Raw h5ad files before and after cell filtering\n    \u251c\u2500\u2500 Liger/                               # Liger results\n    \u251c\u2500\u2500 sctHarmony/                          # Harmony results\n    \u251c\u2500\u2500 SeuratRef/                           # Seurat results\n    \u251c\u2500\u2500 SeuratRPCA/                          # SeuratRPCA results\n    \u251c\u2500\u2500 evaluation/                          # kBET and Silhouette plots\n    \u251c\u2500\u2500 project_name_BookdownReport.tar.gz   # Bookdown report\n    \u251c\u2500\u2500 project_name.h5ad                    # Final h5ad file including all integration results\n    \u251c\u2500\u2500 project_name_raw_added.h5ad          # This h5ad also contains raw UMI counts\n    ...\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8529281108427351,
      "result": {
        "original_header": "6. Cellxgene VIP visualization",
        "type": "Text_excerpt",
        "value": "We processed an example dataset here: \n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/interactivereport/scRNAsequest/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://interactivereport.github.io/scRNAsequest/images/Cover.png"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scRNAsequest"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "interactivereport"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 238561,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 129654,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 10387,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 825,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 172,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Run a demo dataset",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing"
        ],
        "type": "Text_excerpt",
        "value": "We provide a demo dataset under the `demo` directory. This demo uses two snRNA-seq data from [GSE185538](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE185538) to run through the main steps, including QC, data integration ([SCTransform](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-019-1874-1), then [Harmony](https://www.nature.com/articles/s41592-019-0619-0)), [Seurat reference mapping](https://satijalab.org/seurat/articles/integration_mapping.html), and evaluation of integration ([kBET](https://www.nature.com/articles/s41592-018-0254-1) and [silhouette](https://ieeexplore.ieee.org/document/9260048)). To save time, the differential expression analysis won't be performed, and the DEGinfo.csv file is empty.\n\nThis demo run contains two downsampled snRNA-seq data from the original study, and will take ~15-20 minutes to finish. Please note that to speed up the run, we used stringent QC cutoffs, which eliminated many cells. After running the scAnalyzer command, output files will be generated under the `demo` directory on your computer.\n\nAlso, we provided config.yml, sampleMeta.csv and DEGinfo.csv files for running this demo so you can run the `scAnalyzer` command directly. For your own dataset, please follow section 3.2 to generate the template of these files first.\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2.1 Demo run for Conda",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
          "2. Run a demo dataset"
        ],
        "type": "Text_excerpt",
        "value": "All necessary files for this demo have been prepared under the `demo` directory. \n\nContinuing from section 1.1, we assume that the pipeline was installed in: ~/scRNASequest.\n\nFirst, we set up the config file (~/scRNASequest/demo/config.yml) by pointing these parameters to your directory because the default directory was /demo, and other lines don't need to be changed:\n\n```\n...\nref_name: ~/scRNASequest/demo/ref/rat_cortex_ref.rds   # choose one from scAnalyzer call without argument\noutput: ~/scRNASequest/demo                            # output path   \n...\nsample_meta: ~/scRNASequest/demo/sampleMeta.csv\n...\nDEG_desp: ~/scRNASequest/demo/DEGinfo.csv              # for DEG analysis\n...\n```\n\nAccordingly, we modify the sampleMeta.csv file by providing the full path to .h5 files by adding '~/scRNASequest':\n\n```\nSample_Name,h5path,Sex\nRatFemaleCigarette,~/scRNASequest/demo/data/RatFemaleCigarette.filtered_feature_bc_matrix.h5,Female\nRatMaleCigarette,~/scRNASequest/demo/data/RatMaleCigarette.filtered_feature_bc_matrix.h5,Male\n```\n\nThen execute the following command:\n\n```\nscAnalyzer ~/scRNASequest/demo/config.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2.2 Demo run for Docker",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
          "2. Run a demo dataset"
        ],
        "type": "Text_excerpt",
        "value": "After following section 1.2 to set up the pipeline, we are ready to run this demo:\n\n```\ndocker exec -t -i <container_name> scAnalyzer /demo/config.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:19:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Run a demo dataset",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing"
        ],
        "type": "Text_excerpt",
        "value": "We provide a demo dataset under the `demo` directory. This demo uses two snRNA-seq data from [GSE185538](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE185538) to run through the main steps, including QC, data integration ([SCTransform](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-019-1874-1), then [Harmony](https://www.nature.com/articles/s41592-019-0619-0)), [Seurat reference mapping](https://satijalab.org/seurat/articles/integration_mapping.html), and evaluation of integration ([kBET](https://www.nature.com/articles/s41592-018-0254-1) and [silhouette](https://ieeexplore.ieee.org/document/9260048)). To save time, the differential expression analysis won't be performed, and the DEGinfo.csv file is empty.\n\nThis demo run contains two downsampled snRNA-seq data from the original study, and will take ~15-20 minutes to finish. Please note that to speed up the run, we used stringent QC cutoffs, which eliminated many cells. After running the scAnalyzer command, output files will be generated under the `demo` directory on your computer.\n\nAlso, we provided config.yml, sampleMeta.csv and DEGinfo.csv files for running this demo so you can run the `scAnalyzer` command directly. For your own dataset, please follow section 3.2 to generate the template of these files first.\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2.1 Demo run for Conda",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
          "2. Run a demo dataset"
        ],
        "type": "Text_excerpt",
        "value": "All necessary files for this demo have been prepared under the `demo` directory. \n\nContinuing from section 1.1, we assume that the pipeline was installed in: ~/scRNASequest.\n\nFirst, we set up the config file (~/scRNASequest/demo/config.yml) by pointing these parameters to your directory because the default directory was /demo, and other lines don't need to be changed:\n\n```\n...\nref_name: ~/scRNASequest/demo/ref/rat_cortex_ref.rds   # choose one from scAnalyzer call without argument\noutput: ~/scRNASequest/demo                            # output path   \n...\nsample_meta: ~/scRNASequest/demo/sampleMeta.csv\n...\nDEG_desp: ~/scRNASequest/demo/DEGinfo.csv              # for DEG analysis\n...\n```\n\nAccordingly, we modify the sampleMeta.csv file by providing the full path to .h5 files by adding '~/scRNASequest':\n\n```\nSample_Name,h5path,Sex\nRatFemaleCigarette,~/scRNASequest/demo/data/RatFemaleCigarette.filtered_feature_bc_matrix.h5,Female\nRatMaleCigarette,~/scRNASequest/demo/data/RatMaleCigarette.filtered_feature_bc_matrix.h5,Male\n```\n\nThen execute the following command:\n\n```\nscAnalyzer ~/scRNASequest/demo/config.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2.2 Demo run for Docker",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
          "2. Run a demo dataset"
        ],
        "type": "Text_excerpt",
        "value": "After following section 1.2 to set up the pipeline, we are ready to run this demo:\n\n```\ndocker exec -t -i <container_name> scAnalyzer /demo/config.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Quick start",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing"
        ],
        "type": "Text_excerpt",
        "value": "This is a quick start guide to run your own data using the pipeline. Please refer to the [**full tutorial**](https://interactivereport.github.io/scRNAsequest/tutorial/docs/index.html) for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.2 Generate templates of configuration files",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
          "3. Quick start"
        ],
        "type": "Text_excerpt",
        "value": "Users can initiate the pipeline by running the `scAnalyzer` script with a working directory, where future outputs will be generated.\n\n```\n#Example:\nscAnalyzer ~/Working_dir\n```\n\nThe output files include: **config.yml** (a template config file), **DEGinfo.csv** (a template for differential expression analysis), and an empty **sampleMeta.csv** file. The config.yml and sampleMeta.csv are required to run the pipeline, and the DEGinfo.csv is only required for the DE analysis. You can leave DEGinfo.csv empty (by default, just a header line there) currently.\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.5 Start the pipeline",
        "parent_header": [
          "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing",
          "3. Quick start"
        ],
        "type": "Text_excerpt",
        "value": "Now we have prepared the minimal files (Data files, sampleMeta.csv, and config.yml) to start the pipeline.\n\n- a. Initiate the analysis with `runAnalysis` in config.yml set to False\n\nHere, we pass the path to the config.yml file to run the pipeline:\n\n```\nscAnalyzer ~/Working_dir/config.yml\n```\n\nThis will only run the QC step and generate a [Bookdown report here](https://interactivereport.github.io/scRNAsequest/examples/E-MTAB-11115/bookdown/index.html).\n\n- b. Examine the QC parameters\n\nCheck the Bookdown report and adjust the filtering parameters if needed. Repeat this step until the filtering criteria are satisfied.\n\n- c. Run the full analysis\n\n```\n#Set config.yml:\n#runAnalysis: True\n#overwrite: True\n\n#Run the full analysis\nscAnalyzer ~/Working_dir/config.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/interactivereport/scRNASequest/main/README.md",
      "technique": "header_analysis"
    }
  ]
}