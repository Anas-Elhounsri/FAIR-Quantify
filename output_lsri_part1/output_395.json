{
  "application_domain": [
    {
      "confidence": 12.38,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9191186672334137,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/LewisResearchGroup/ProteomicsQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-04T22:32:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-06T12:29:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Quality Control Pipeline Server for Large-Cohort Quantitative Proteomics (TMT)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9946574862768482,
      "result": {
        "original_header": "**ProteomicsQC**: Quality Control Server for large-cohort quantitative proteomics using tandem-mass-tags (e.g. TMT11)",
        "type": "Text_excerpt",
        "value": "A quality control (QC) pipeline server for quantitative proteomics, automated processing, and interactive visualisations of QC results.\nThe server allows to setup multiple proteomics pipelines grouped by projects. \nThe user can drag and drop new RAW mass spectrometry files which are processed automatically. \nResults are visualized in an interactive dashboard and accessible via a RESTful API for third party applications and extensions.\nThe server can be started with a single command using `docker-compose`.\nUnderlying software is _MaxQuant_ and _RawTools_ for proteomics, _Django_ for the web-server and API and _Plotly/Dash_ for the interactive dashboard. \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9086546552088114,
      "result": {
        "original_header": "Limitations",
        "type": "Text_excerpt",
        "value": "The pipeline is restricted to single file setup which might conflict with the setup of some laboratories that split sample results into multiple files. The pipeline processes each file separately and independently.\n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9974643046160638,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "The server manages proteomics pipelines belonging to multiple projects. The server is mostly implemented in Python and is composed of several components such as a PostgreSQL database, a queuing system (Celery, Redis), a dashboard (Plotly-Dash) and an API (Django REST-Framwork). \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9979463673504516,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "1.  Different project spaces    \n2.  Setup of different pipelines (using MaxQuant and RawTools)\n3.  Upload .RAW files and automatic submission to a job queueing system\n4.  Data management of input and output files\n5.  User rights management\n6.  Data API for programmatic file submission and download of results\n7.  Dashboard for quality control (QC)\n8.  Anomaly detection with Isolation Forest and explainable AI using SHAP\n \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9887779092207591,
      "result": {
        "original_header": "Pipelines overview",
        "type": "Text_excerpt",
        "value": "The server has a simple static http frontend and admin view, generated with Django; and a dynamic and interactive dashboard implemented with Plotly-Dash. The Project detail-view, for example, shows and overview over all pipelines associated with the current project and the number of submitted files. \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9993142124113464,
      "result": {
        "original_header": "Admin view",
        "type": "Text_excerpt",
        "value": "Django is a popular web framework for building web applications in Python. The Django admin view is a built-in feature of Django that provides an easy-to-use interface for managing the application's data models. The admin view is automatically generated based on the models defined in the application's code, and allows administrators to perform CRUD (Create, Read, Update, and Delete) operations on the application's data. This way new projects, and pipelines can be setup. It also provides an overview over all results and raw files stored on the server and can be used for troubleshooting, if some runs are unsuccessful. \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9757093290377985,
      "result": {
        "original_header": "Dashboard",
        "type": "Text_excerpt",
        "value": "When the user drops a file to the web-upload page of a particular pipeline, it is automatically processed and the results are sent to the dashboard.\nHere, all quality control metrics can be visualized simultaneously in customized order, and the relationships between QC metrics can be plotted.\nTimelines of up to 60 quality control metrics can be viewed simultanously in one place.  \n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/LewisResearchGroup/ProteomicsQC/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/LewisResearchGroup/ProteomicsQC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/LewisResearchGroup/ProteomicsQC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LewisResearchGroup/ProteomicsQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ProteomicsQC: Quality Control Server for large-cohort quantitative proteomics using tandem-mass-tags (e.g. TMT11)"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/dockerfiles/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/dockerfiles/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/app/main/static/js/jquery-file-upload/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/app/main/static/js/jquery-file-upload/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/app/main/static/js/jquery-file-upload/server/php/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/app/main/static/js/jquery-file-upload/server/php/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/scripts/generate_config.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/./docs/img/workflow.png"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/./docs/img/Pipelines.png"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/./docs/img/example-admin-view.png"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/./docs/img/QC-barplot-small.jpg"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation\n## 1) Docker-compose\n\nThe server can be started with `docker-compose`. Therefore,\ndocker and docker-compose have to be installed on the host.\nThe server can also be used without docker-compose, \nif the postgres and redis servers are running already. \n\nFor official Docker installation instructions please visit:\n\nhttps://docs.docker.com/engine/install/ubuntu/\n\n\n## 2) Download the repository\n\n    git clone --recursive git@github.com:LSARP/ProteomicsQC.git ProteomicsQC\n    cd ProteomicsQC\n\n## 3) Create configuration file\n\n    ./scripts/generate_config.sh  # generates a .env file for configuration\n\n### Edit the .env file\n\n```\n# OMICS PIPELINES CONFIG\n\n## HOMPAGE SETTINGS\nHOME_TITLE=Your Hompage Title\nHOSTNAME=localhost:8080\nALLOWED_HOSTS=localhost\nCSRF_TRUSTED_ORIGINS=http://localhost\n\n## STORAGE\nDB=./data/db/\nDATALAKE=./data/datalake\nCOMPUTE=./data/compute\nMEDIA=./data/media\nSTATIC=./data/static\n\n## EMAIL SETTINGS\nEMAIL_HOST=smtp.gmail.com\nEMAIL_USE_TLS=True\nEMAIL_USE_SSL=False\nEMAIL_PORT=587\nEMAIL_HOST_USER=example@example.com\nEMAIL_HOST_PASSWORD=a-strong-password\nDEFAULT_FROM_EMAIL=noreply@example.com\n\n## CELERY\nCONCURRENCY=8  # Change this to control how many CPU's can be used for jobs\n\n## SECURITY KEYS\nSECRET_KEY=...\n\n```\n\n## 4) Initiate database\n\n    make init  # to start the server the first time\n\n## 5) Create an admin account\n\n    make createsuperuser\n\nAnd follow the instructions to provide an email address and \npassword.\n\n## 7) Run a development server (Optional)\n\n    make devel  # starts the production server on port 8080\n\nThe development server will run on [localhost:8000](localhost:8000).\n\n## 8) Run the server in production\n\n    make collectstatic  # The static url has to be setup with a remote proxy.\n    make serve  # starts the production server on port 8000\n\nYou can now navigate to [http://localhost:8080/admin](http://localhost:8080/admin) and login to the\nadmin account with the credentials you provided in step 5. To make this work you have to \nconfigure a remote server that exposes forwards traffic to ports 80 (http) or 443 (https)\nto port 8080 and back. We recommend using NGINX for this purpose.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/docs/installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "**ProteomicsQC**: Quality Control Server for large-cohort quantitative proteomics using tandem-mass-tags (e.g. TMT11)"
        ],
        "type": "Text_excerpt",
        "value": "This repository contains git submodules and should be cloned with:\n\n    git clone --recursive git@github.com:LewisResearchGroup/ProteomicsQC.git\n\nAfter cloning the repository a configuration file needs to be created and edited.\n\n    ./scripts/generate_config.sh  # generates a .env file for configuration\n\nThis will create the `.env` file in the root directory of ProteomicsQC.\n\n    #.env content\n    # OMICS PIPELINES CONFIG\n    \n    ## HOMPAGE SETTINGS\n    HOME_TITLE=ProteomicsQC\n    HOSTNAME=localhost\n    ALLOWED_HOSTS=localhost\n    \n    ## STORAGE\n    DATALAKE=./data/datalake\n    COMPUTE=./data/compute\n    MEDIA=./data/media\n    STATIC=./data/static\n    DB=./data/db\n    \n    ## EMAIL SETTINGS\n    EMAIL_HOST=smtp.gmail.com\n    EMAIL_USE_TLS=True\n    EMAIL_USE_SSL=False\n    EMAIL_PORT=587\n    EMAIL_HOST_USER=''\n    EMAIL_HOST_PASSWORD=''\n    DEFAULT_FROM_EMAIL=''\n    \n    ## CELERY\n    CONCURRENCY=8\n    \n    ##USERID\n    UID=1000:1000\n    \n    ## SECURITY KEYS\n    SECRET_KEY=\n\nThe storage section defines the relative or absolute paths to the file system of your server to store persistent data.\nImportantly, for production the location of the static folder should be exposed by your server under `https://your-url/static`, since\nDjango does not serve static files in production. We recommend using NGINX to serve the static files. \n\nTo enable email-notifications (e.g. for authentification, or password changes) from the server the EMAIL settings need to be updated with information from your email provider.\nIf you use your own domain to serve ProteomicsQC, you need to add it to the `ALLOWED_HOSTS` as a comma separated list:\n    \n    HOSTNAME=localhost\n    ALLOWED_HOSTS=localhost,your-url,your-internal-ip\n    OMICS_URL=http://localhost:8080\n\nYou can start the server with the following commands:\n\n    make init  # to start the server the first time\n\n    make devel  # starts a development server on port 8000\n    \n    make serve  # starts the production server on port 8080\n\n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/LewisResearchGroup/ProteomicsQC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "docker, proteomics, python"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                       Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2022] [Lewis Research Group]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/docs/img/ProteomicsQC.jpg"
      },
      "source": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ProteomicsQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "LewisResearchGroup"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 194108,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PHP",
        "size": 60228,
        "type": "Programming_language",
        "value": "PHP"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 40205,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 17393,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 6614,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1847,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1709,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 706,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LewisResearchGroup/ProteomicsQC/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:35:12",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}