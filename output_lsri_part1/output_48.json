{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mourisl/centrifuger"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-12T20:45:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T20:50:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Classifier for metagenomic sequences using FM-index with run-block compressed BWT."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8791081867739337,
      "result": {
        "original_header": "Centrifuger",
        "type": "Text_excerpt",
        "value": "Described in:  \n  Song, L., Langmead B.. Centrifuger: lossless compression of microbial genomes for efficient and accurate metagenomic sequence classification. Genome Biol. 2024 Apr 25;25(1):106. doi: 10.1186/s13059-024-03244-4. **Best Paper Award at RECOMB2024** \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.987867375254885,
      "result": {
        "original_header": "Create index for genomes from NCBI.",
        "type": "Text_excerpt",
        "value": "Centrifuger is an efficient taxonomic classification method that compares sequencing reads against a microbial genome database. It implemented a novel lossless compression method, run-block comprssed BWT, and other strategies to efficiently reduce the size of the microbial genome database like RefSeq. For example, Centrifuger can classify reads against the 2023 RefSeq prokaryotic genomes containing about 140G nucleotides using 43 GB memory. Despite running on a compressed data structure, Centrifuger is also highly efficient and can process a typical sequencing sample within an hour.  \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9918745554457599,
      "result": {
        "original_header": "Input/Output",
        "type": "Text_excerpt",
        "value": "The primary input to Centrifuger is the index of the genome database (-x), and gzipped or uncompressed read fastq files (-1/-2 for paired; -u for single-end). \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9510814949029546,
      "result": {
        "original_header": "Create index for genomes from NCBI.",
        "type": "Text_excerpt",
        "value": "The output is to stdout, with the TSV format as following:\n```\nreadID    seqID   taxID score      2ndBestScore    hitLength    queryLength numMatches\n1_1       MT019531.1     2697049   4225       0               80   80      1\n\nThe first column is the read ID from a raw sequencing read (e.g., 1_1 in the example).\nThe second column is the sequence ID of the genomic sequence, where the read is classified (e.g., MT019531.1).\nThe third column is the taxonomic ID of the genomic sequence in the second column (e.g., 2697049).\nThe fourth column is the score for the classification, which is the weighted sum of hits (e.g., 4225)\nThe fifth column is the score for the next best classification (e.g., 0).\nThe sixth column is the number of base pairs of the read that match the genomic sequence found by Centrifuger (e.g., 80) \nThe seventh column is the length of a read or the combined length of mate pairs (e.g., 80). \nThe eighth column is the number of classifications for this read, indicating how many assignments were made in the output (e.g.,1).\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9436130834636505,
      "result": {
        "original_header": "Practical notes",
        "type": "Text_excerpt",
        "value": "The folder \"indices\" contains information for creating index from other sources, like SILVA and GTDB. \n* #### 10x Genomics data and barcode-based single-cell data \nIf your input has barcode information, you can use \"--barcode\" to specify the barcode file and use \"--read-format\" to tell Centrifuger how to extract barcode information. The \"--read-format\" option can also specify the extraction for read1, read2 and UMI. The value for this argument is a comma-separated string, each field in the string is also a semi-comma-splitted string \nThe start and end are inclusive and -1 means the end of the read. You may use multiple fields to specify non-consecutive segments, e.g. bc:0:15,bc:32:-1. The strand is presented by '+' and '-' symbol, if '-' the barcode will be reverse-complemented after extraction. The strand symbol can be omitted if it is '+' and is ignored on r1 and r2. For example, when the barcode is in the first 16bp of read1, one can use the option `-1 read1.fq.gz -2 read2.fq.gz --barcode read1.fq.gz --read-format bc:0:15,r1:16:-1`. \nCentrifuger supports using wildcard in the -1 -2/-u option, so a typical way to run 10x Genomics single-end data is by: \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8685614877397685,
      "result": {
        "original_header": "10x Genomics data and barcode-based single-cell data",
        "type": "Text_excerpt",
        "value": "Moreover, Centrifuger can translate input cell barcodes to another set of barcodes. You can specify the translation file through the option --barcodeTranslate. The translation file is a two-column tsv/csv file with the translated barcode on the first column and the original barcode on the second column. This option also supports combinatorial barcoding, such as SHARE-seq. Centrifuger can translate each barcode segment provided in the second column to the ID in the first column and add \"-\" to concatenate the IDs in the output.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9425149372539956,
      "result": {
        "original_header": "Practical notes",
        "type": "Text_excerpt",
        "value": "The directory \"./example\" in this distribution contains files for building Centrifuger index and classification. Suppose you are in the example folder, and Centrifuger has been compiled with \"make\" command. \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.967789403347885,
      "result": {
        "original_header": "Create index for genomes from NCBI.",
        "type": "Text_excerpt",
        "value": "\n### What is Centrifuger? \nAn example of pre-built index containing human, bacteria, archea, and virus genomes from RefSeq plus SARS-CoV-2 variants from GenBank is available at [Zenodo](https://zenodo.org/records/10023239). Another pre-built index for [GTDB](https://gtdb.ecogenomic.org/) r220 is available at [Dropbox](https://www.dropbox.com/scl/fo/wtsermtdd62n1ttryuhwv/ADWTYiJA6Dh5gdbHmwC2nfo?rlkey=fgdpthjukcj1uhsjrcv35j927&dl=0). The default --bmax and --dcv option may be inefficient for building indexes for larger genome databases, please use --build-mem option to specify the rough estimation of the available memory. \n    Usage: ./centrifuger [OPTIONS] > classification.tsv\n      Required:\n        -x FILE: index prefix\n        -1 FILE -2 FILE: paired-end read\n          or\n        -u FILE: single-end read\n      Optional:\n        -t INT: number of threads [1]\n        -k INT: report upto <int> distinct, primary assignments for each read pair [1]\n        --un STR: output unclassified reads to files with the prefix of <str>, e.g. <str>_1/2.fq.gz\n        --cl STR: output classified reads to files with the prefix of <str>\n        --barcode STR: path to the barcode file\n        --UMI STR: path to the UMI file\n        --read-format STR: format for read, barcode and UMI files, e.g. r1:0:-1,r2:0:-1,bc:0:15,um:16:-1 for paired-end files with barcode and UMI\n        --min-hitlen INT: minimum length of partial hits [auto]\n        --hitk-factor INT: resolve at most <int>*k entries for each hit [40; use 0 for no restriction]\n        --merge-readpair: merge overlapped paired-end reads and trim adapters  \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mourisl/centrifuger/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mourisl/centrifuger/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mourisl/centrifuger"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Centrifuger"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "Centrifuger"
        ],
        "type": "Text_excerpt",
        "value": "1. Clone the [GitHub repo](https://github.com/mourisl/centrifuger), e.g. with `git clone https://github.com/mourisl/centrifuger.git`\n2. Run `make` in the repo directory\n\nYou will find the executable files in the downloaded directory. If you want to run Centrifuger without specifying the directory, you can either add the directory of Centrifuger to the environment variable PATH or create a soft link (\"ln -s\") of the file \"centrifuger\" to a directory in PATH.\n\nCentrifuger depends on [pthreads](http://en.wikipedia.org/wiki/POSIX_Threads). \n\nCentrifuger is also available from [Bioconda](https://anaconda.org/bioconda/centrifuger). You can install Centrifuger with `conda install -c conda-forge -c bioconda centrifuger`.\n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9599951607711773,
      "result": {
        "original_header": "Practical notes",
        "type": "Text_excerpt",
        "value": "You can use \"centrifuger-download\" to download reference sequences from NCBI. The following two commands download the NCBI taxonomy to taxonomy/ in the current directory, and all complete archaeal, bacterial and viral genomes to library/. \nTo add human (taxonomy ID 9606) or mouse (taxonomy ID 10090) genome to the downloaded files, you can use the following command \n\t# human: T2T-CHM13\n\t./centrifuger-download -o library -d \"vertebrate_mammalian\" -t 9606 refseq >> seqid.map\n\t# human: hg38 reference genome\n\t./centrifuger-download -o library -d \"vertebrate_mammalian\" -a \"Chromosome\" -t 9606 -c 'reference genome' refseq\t\n\t# mouse\n\t./centrifuger-download -o library -d \"vertebrate_mammalian\" -a \"Chromosome\" -t 10090 -c 'reference genome' refseq >> seqid.map \nTo build the index, first put the downloaded files in a list (this part is different from Centrifuge, where the files need to be concatendated) and then run centrifuger-build:\n\t\n\tls library/*/*.fna.gz > file.list # use *_dustmasked.fna.gz as the file list if using dustmasker in centrifuger-download  \n\t## build centrifuger index with 4 threads on a server with 300GB memory\n\t./centrifuger-build -t 4 --conversion-table seqid2taxid.map \\\n\t\t--taxonomy-tree taxonomy/nodes.dmp --name-table taxonomy/names.dmp \\\n\t\t-l file.list -o refseq_abv --build-mem 240G\n\t\nAfter building the index, all but the refseq_abv.[1234].cfr index files may be removed. \n\t./centrifuger -x cfr_idx -u \"path_to_10x_fastqs/*_R2_*.fastq.gz\" --barcode \"path_to_10x_fastqs/*_R1_*.fastq.gz\" --UMI \"path_10x_fastqs/*_R1_*.fastq.gz\" --read-format bc:0:15,um:16:-1 --barcode-whitelist cellranger_folder/cellranger-cs/VERSION/lib/python/cellranger/barcodes/3M-february-2018.txt.gz [other options] \nThe exact options depend on your 10x Genomics kit. The quotes around the paths with wildcard  are necessary. \nThe directory \"./example\" in this distribution contains files for building Centrifuger index and classification. Suppose you are in the example folder, and Centrifuger has been compiled with \"make\" command. \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9930303049642868,
      "result": {
        "original_header": "Create index for genomes from NCBI.",
        "type": "Text_excerpt",
        "value": "### Install \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9672944782779794,
      "result": {
        "original_header": "Install",
        "type": "Text_excerpt",
        "value": "1. Clone the [GitHub repo](https://github.com/mourisl/centrifuger), e.g. with `git clone https://github.com/mourisl/centrifuger.git`\n2. Run `make` in the repo directory \nYou will find the executable files in the downloaded directory. If you want to run Centrifuger without specifying the directory, you can either add the directory of Centrifuger to the environment variable PATH or create a soft link (\"ln -s\") of the file \"centrifuger\" to a directory in PATH. \nCentrifuger depends on [pthreads](http://en.wikipedia.org/wiki/POSIX_Threads).  \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9010533143501818,
      "result": {
        "original_header": "Create index for genomes from NCBI.",
        "type": "Text_excerpt",
        "value": "Centrifuger is also available from [Bioconda](https://anaconda.org/bioconda/centrifuger). You can install Centrifuger with `conda install -c conda-forge -c bioconda centrifuger`. \n#### Build index \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8340113322298838,
      "result": {
        "original_header": "Practical notes",
        "type": "Text_excerpt",
        "value": "\t./centrifuger-download -o taxonomy taxonomy\n\t./centrifuger-download -o library -d \"archaea,bacteria,viral\" refseq > seqid2taxid.map \n### Example \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8138728258744183,
      "result": {
        "original_header": "Build index",
        "type": "Text_excerpt",
        "value": "    Usage: ./centrifuger-build [OPTIONS]\n      Required:\n        -r FILE: reference sequence file (can use multiple -r to specify more than one input file)\n            or\n        -l FILE: list of reference sequence file stored in <file>, one sequence file per row. Can include the taxonomy ID mapping information in the second column.\n        --taxonomy-tree FILE: taxonomy tree, i.e., nodes.dmp file\n        --name-table FILE: name table, i.e., names.dmp file\n      Optional:\n        --conversion-table FILE: seqID to taxID conversion file\n          When not set, expect -l option and the -l file should have two columns as \"file taxID\"\n        -o STRING: output prefix [centrifuger]\n        -t INT: number of threads [1]\n        --build-mem STR: automatic infer bmax and dcv to match memory constraints, can use T,G,M,K to specify the memory size [not used]\n        --bmax INT: block size for blockwise suffix array sorting [16777216]\n        --dcv INT: difference cover period [4096]\n        --offrate INT: SA/offset is sampled every (2^<int>) BWT chars [4]\n        --subset-tax INT: only consider the subset of input genomes under taxonomy node <int> [0] \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mourisl/centrifuger/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 Li Song\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "centrifuger"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mourisl"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 540165,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 32764,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 22237,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 15101,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 14304,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 3431,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mourisl",
          "type": "User"
        },
        "date_created": "2024-06-26T17:08:47Z",
        "date_published": "2024-07-01T17:30:55Z",
        "description": "- Support creating the index for GTDB (https://github.com/mourisl/centrifuger/tree/master/indices#gtdb)\r\n  - A pre-built index for GTDB r220 representative genomes is available at: https://www.dropbox.com/scl/fo/wtsermtdd62n1ttryuhwv/ADWTYiJA6Dh5gdbHmwC2nfo?rlkey=fgdpthjukcj1uhsjrcv35j927&dl=0\r\n- Fix a serious bug in the silva-download.pl script \r\n- Support the file to tax ID mapping through the \"-l\" option. This removes the need to create the sequence ID to tax ID mapping file\r\n- Improve the index building efficiency\r\n- When calculating the LCA, force the assignment to the root if it goes beyond the superkingdom level (#9 ) \r\n- Fix a serious bug in centrifuger-download when multi-threading (#8 )",
        "html_url": "https://github.com/mourisl/centrifuger/releases/tag/v1.0.4",
        "name": "Centrifuger v1.0.4",
        "release_id": 162598153,
        "tag": "v1.0.4",
        "tarball_url": "https://api.github.com/repos/mourisl/centrifuger/tarball/v1.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/mourisl/centrifuger/releases/162598153",
        "value": "https://api.github.com/repos/mourisl/centrifuger/releases/162598153",
        "zipball_url": "https://api.github.com/repos/mourisl/centrifuger/zipball/v1.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mourisl",
          "type": "User"
        },
        "date_created": "2024-05-13T17:05:45Z",
        "date_published": "2024-05-13T17:09:25Z",
        "description": "- Add the options to specify read sequences, barcode, and UMI, to work with barcode-based single-cell data.\r\n- Update the \"Makefile\" in the indices folder to work with the contaminants sequence database.",
        "html_url": "https://github.com/mourisl/centrifuger/releases/tag/v1.0.3",
        "name": "Centrifuger v1.0.3",
        "release_id": 155548449,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/mourisl/centrifuger/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/mourisl/centrifuger/releases/155548449",
        "value": "https://api.github.com/repos/mourisl/centrifuger/releases/155548449",
        "zipball_url": "https://api.github.com/repos/mourisl/centrifuger/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mourisl",
          "type": "User"
        },
        "date_created": "2024-03-20T15:09:14Z",
        "date_published": "2024-04-06T20:30:23Z",
        "description": "- Improve index building time-efficiency by implementing the Larrson-Sadakane algorithm for sorting suffix array elements of the difference cover\r\n- Add the option to internal merge read pairs and remove adaptors, which could be useful for short fragment size data sets\r\n- Improved running efficiency using a medium number of threads",
        "html_url": "https://github.com/mourisl/centrifuger/releases/tag/v1.0.2",
        "name": "Centrifuger v1.0.2",
        "release_id": 150067869,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/mourisl/centrifuger/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/mourisl/centrifuger/releases/150067869",
        "value": "https://api.github.com/repos/mourisl/centrifuger/releases/150067869",
        "zipball_url": "https://api.github.com/repos/mourisl/centrifuger/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mourisl",
          "type": "User"
        },
        "date_created": "2024-01-26T00:02:23Z",
        "date_published": "2024-02-08T14:56:51Z",
        "description": "- Add the script to download and prepare Silva database\r\n- Improve the speed when using many threads (>12)\r\n- Fix several internal parameters to be more consistent with Centrifuge\r\n",
        "html_url": "https://github.com/mourisl/centrifuger/releases/tag/v1.0.1",
        "name": "Centrifuger v1.0.1",
        "release_id": 140564104,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/mourisl/centrifuger/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/mourisl/centrifuger/releases/140564104",
        "value": "https://api.github.com/repos/mourisl/centrifuger/releases/140564104",
        "zipball_url": "https://api.github.com/repos/mourisl/centrifuger/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mourisl",
          "type": "User"
        },
        "date_created": "2023-11-19T00:31:14Z",
        "date_published": "2023-11-19T00:32:19Z",
        "description": "Initial release",
        "html_url": "https://github.com/mourisl/centrifuger/releases/tag/v1.0.0",
        "name": "Centrifuger v1.0.0",
        "release_id": 130179131,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/mourisl/centrifuger/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/mourisl/centrifuger/releases/130179131",
        "value": "https://api.github.com/repos/mourisl/centrifuger/releases/130179131",
        "zipball_url": "https://api.github.com/repos/mourisl/centrifuger/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:04:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 42
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "parent_header": [
          "Centrifuger"
        ],
        "type": "Text_excerpt",
        "value": "Create a [GitHub issue](https://github.com/mourisl/centrifuger/issues). \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Build index",
        "parent_header": [
          "Centrifuger",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "    Usage: ./centrifuger-build [OPTIONS]\n      Required:\n        -r FILE: reference sequence file (can use multiple -r to specify more than one input file)\n            or\n        -l FILE: list of reference sequence file stored in <file>, one sequence file per row. Can include the taxonomy ID mapping information in the second column.\n        --taxonomy-tree FILE: taxonomy tree, i.e., nodes.dmp file\n        --name-table FILE: name table, i.e., names.dmp file\n      Optional:\n        --conversion-table FILE: seqID to taxID conversion file\n          When not set, expect -l option and the -l file should have two columns as \"file taxID\"\n        -o STRING: output prefix [centrifuger]\n        -t INT: number of threads [1]\n        --build-mem STR: automatic infer bmax and dcv to match memory constraints, can use T,G,M,K to specify the memory size [not used]\n        --bmax INT: block size for blockwise suffix array sorting [16777216]\n        --dcv INT: difference cover period [4096]\n        --offrate INT: SA/offset is sampled every (2^<int>) BWT chars [4]\n        --subset-tax INT: only consider the subset of input genomes under taxonomy node <int> [0]\n\nAn example of pre-built index containing human, bacteria, archea, and virus genomes from RefSeq plus SARS-CoV-2 variants from GenBank is available at [Zenodo](https://zenodo.org/records/10023239). Another pre-built index for [GTDB](https://gtdb.ecogenomic.org/) r220 is available at [Dropbox](https://www.dropbox.com/scl/fo/wtsermtdd62n1ttryuhwv/ADWTYiJA6Dh5gdbHmwC2nfo?rlkey=fgdpthjukcj1uhsjrcv35j927&dl=0). The default --bmax and --dcv option may be inefficient for building indexes for larger genome databases, please use --build-mem option to specify the rough estimation of the available memory.\n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Classification",
        "parent_header": [
          "Centrifuger",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "    Usage: ./centrifuger [OPTIONS] > classification.tsv\n      Required:\n        -x FILE: index prefix\n        -1 FILE -2 FILE: paired-end read\n          or\n        -u FILE: single-end read\n      Optional:\n        -t INT: number of threads [1]\n        -k INT: report upto <int> distinct, primary assignments for each read pair [1]\n        --un STR: output unclassified reads to files with the prefix of <str>, e.g. <str>_1/2.fq.gz\n        --cl STR: output classified reads to files with the prefix of <str>\n        --barcode STR: path to the barcode file\n        --UMI STR: path to the UMI file\n        --read-format STR: format for read, barcode and UMI files, e.g. r1:0:-1,r2:0:-1,bc:0:15,um:16:-1 for paired-end files with barcode and UMI\n        --min-hitlen INT: minimum length of partial hits [auto]\n        --hitk-factor INT: resolve at most <int>*k entries for each hit [40; use 0 for no restriction]\n        --merge-readpair: merge overlapped paired-end reads and trim adapters \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "Centrifuger"
        ],
        "type": "Text_excerpt",
        "value": "The directory \"./example\" in this distribution contains files for building Centrifuger index and classification. Suppose you are in the example folder, and Centrifuger has been compiled with \"make\" command.\n\n* Build index:\n```\n../centrifuger-build -r ref.fa --taxonomy-tree nodes.dmp --name-table names.dmp --conversion-table ref_seqid.map -o cfr_ref_idx\n```  \nAfter running the above command, you shall see the index file \"cfr_ref_idx.*.cfr\" in the example folder.\n\n* Classification\n```\n../centrifuger -1 example_1.fq -2 example_2.fq -x cfr_ref_idx > output.tsv\n```\nThe output.tsv should be similar to the example_class.out file in the folder. \n"
      },
      "source": "https://raw.githubusercontent.com/mourisl/centrifuger/master/README.md",
      "technique": "header_analysis"
    }
  ]
}