{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/plhhnu/CellDialog"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-21T04:38:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-25T09:08:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CellDialog: A computational framework for ligand-receptor-mediated cell-cell communication analysis"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9763914598447236,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "* Ligand-receptor data is available at [uniprot](https://www.uniprot.org/), [GEO](https://www.ncbi.nlm.nih.gov/geo/). \n* Single-cell RNA sequencing data can be downloaded from the [GEO database](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi). (melanoma (accession code:GSE72056), head and neck squamous cell carcinomas (HNSCC) (accession code: GSE103322), and  colorectal cancer (CRC) (accession code: GSE81861)). \n"
      },
      "source": "https://raw.githubusercontent.com/plhhnu/CellDialog/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/plhhnu/CellDialog/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/plhhnu/CellDialog/main/Basic_Tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/plhhnu/CellDialog/main/Basic_Tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/plhhnu/CellDialog/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "plhhnu/CellDialog"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/plhhnu/CellDialog/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999802003258282,
      "result": {
        "original_header": "Package Environment",
        "type": "Text_excerpt",
        "value": "Install Python 3.9.15 for running this code. And these packages should be satisfied:\n* seaborn >= 0.12.0\n* pandas >= 1.5.3\n* numpy >= 1.25.2\n* scikit-learn >= 1.2.1\n* matplotlib >= 3.7.2\n* xgboost == 1.6.2\n* lightgbm == 3.3.0\n* KTBoost == 0.2.2\n* gpboost == 0.7.10 \n"
      },
      "source": "https://raw.githubusercontent.com/plhhnu/CellDialog/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9904922261848966,
      "result": {
        "original_header": "Hardware Environment",
        "type": "Text_excerpt",
        "value": "This code was run on a computer with the following specifications:\n* CPU: AMD EPYC 7302\n* Memory: 256GB DDR4\n* GPU: GeForce RTX 2080 Ti \nHowever, the minimal requirements for running this protocol are:\n* CPU: Intel Core i7-11800H\n* Memory: 16GB DDR4\n* GPU: NVIDIA GeForce RTX 3050Ti\n* Storage: At least 10GB available\n \n"
      },
      "source": "https://raw.githubusercontent.com/plhhnu/CellDialog/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/plhhnu/CellDialog/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/plhhnu/CellDialog/main/overview_CellDialog.png"
      },
      "source": "https://raw.githubusercontent.com/plhhnu/CellDialog/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CellDialog"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "plhhnu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 255124,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 67539,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 4455,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/plhhnu/CellDialog/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:36:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic Tutorial",
        "type": "Text_excerpt",
        "value": "See a [Basic tutorial](https://github.com/Xwhut/CellDialog/blob/main/Basic_Tutorial.ipynb) how to Use a Cell-Cell Communication Analysis Computing Framework Based on Ligand Receptor and Single Cell RNA Sequencing Data (CellDialog).\nThe tutorial with the test data takes minutes to complete!  \nThe following is also a brief introduction to Usage.\n"
      },
      "source": "https://raw.githubusercontent.com/plhhnu/CellDialog/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "* scRNA-seq data: Each column is a normalised gene/protein expression profile of a cell type or an individual cell. An example snapshot of the abundance matrix is shown below. And the scRNA-seq data was processed by  code/Processing_scRNA-seq_data.py\n\n||cell_type_0|cell_type_1|cell_type_2|...|\n|-:|:-:|:-:|:-:|:-|\n|**Gene1**|1.56|2.84|53|...|\n|**Gene2**|13|3.2|42.4|...|\n|**Gene3**|0.245|0|0.66|...|\n|...|...|...|...|...|\n\n1. First, run the model, the default 5 fold cross-validation, get LRI pairs. Or the user can user-specified LRI database directly, skip this step to the second step.\n```\n\npython code/CellDialog.py\n\n```\n2. The second step, Run **the three-point estimation method**, including [(cell expression)(expression product)(expression thresholding)]. (Note: the user-specified database only needs to replace the **LRI.csv** file and the corresponding format in the file.)\n- Ligand-Receptor Interactions \uff1aThe interaction data should be represented as a two-column table, with the **first column** containing **ligands** and the **second column** containing **receptors** (as in the following example). \n\n|Ligand|Receptor|\n|-:|:-|\n|LIGAND1|RECEPTOR1|\n|LIGAND2|RECEPTOR2|\n|LIGAND3|RECEPTOR2|\n|LIGAND4|RECEPTOR3|\n|LIGAND4|RECEPTOR4|\n|...|...|...|\n\n```\n\npython example/The_three-point_estimation_method.py\n\n```\n3. Finally, output the strength of cell-cell communication.\n"
      },
      "source": "https://raw.githubusercontent.com/plhhnu/CellDialog/main/README.md",
      "technique": "header_analysis"
    }
  ]
}