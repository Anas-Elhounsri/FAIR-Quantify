{
  "application_domain": [
    {
      "confidence": 18.24,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\n\ntitle: \"pydfc\"\n\nversion: 1.0.2\n\nabstract:\n  \"An implementation of several well-known dynamic Functional Connectivity assessment methods.\"\n\nmessage: \"If you use this software, please cite it as below.\"\n\nrepository-code: \"https://github.com/neurodatascience/dFC.git\"\n\n\ncontact:\n  - affiliation: \"McGill University, Qu\u00e9bec, Canada\"\n    email: mohammad.torabi@mail.mcgill.ca\n    family-names: Torabi\n    given-names: Mohammad\n\nauthors:\n  - family-names: \"Torabi\"\n    given-names: \"Mohammad\"\n    orcid: \"https://orcid.org/0000-0002-4429-8481\"\n    affiliation: Biological and Biomedical Engineering program, McGill University, Qu\u00e9bec, Canada\"\n\nlicense: MIT\n\nkeywords:\n  - dynamic functional connectivity\n  - analytical flexibility\n  - neuroimaging\n  - reproducibility\n"
      },
      "source": "https://raw.githubusercontent.com/neurodatascience/dFC/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/neurodatascience/dFC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-21T20:59:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-18T18:23:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An implementation of several well-known dynamic Functional Connectivity assessment methods."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.924815677415301,
      "result": {
        "original_header": "pydfc",
        "type": "Text_excerpt",
        "value": "An implementation of several well-known dynamic Functional Connectivity (dFC) assessment methods. \nThe ``dFC_methods_demo.ipynb`` illustrates how to load data and apply each of the dFC methods implemented in the ``pydfc`` toolbox individually.\nThe ``multi_analysis_demo.ipynb`` illustrates how to use the ``pydfc`` toolbox to apply multiple dFC methods at the same time on a dataset and compare their results. \nFor more details about the implemented methods and the comparison analysis see `our paper <https://doi.org/10.1093/gigascience/giae009>`_. \n"
      },
      "source": "https://raw.githubusercontent.com/neurodatascience/dFC/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/neurodatascience/dFC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/neurodatascience/dFC/main/dFC_methods_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/neurodatascience/dFC/main/dFC_methods_demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/neurodatascience/dFC/main/multi_analysis_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/neurodatascience/dFC/main/multi_analysis_demo.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/neurodatascience/dFC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "neurodatascience/dFC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pydfc"
      },
      "source": "https://raw.githubusercontent.com/neurodatascience/dFC/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999999999574,
      "result": {
        "original_header": "pydfc",
        "type": "Text_excerpt",
        "value": "Simply install ``pydfc`` using the following steps:\n  * ``conda create --name pydfc_env python=3.11``\n  * ``conda activate pydfc_env``\n  * ``pip install pydfc`` \n"
      },
      "source": "https://raw.githubusercontent.com/neurodatascience/dFC/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999942001097901,
      "result": {
        "type": "Text_excerpt",
        "value": ".. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.10161176.svg\n    :target: https://zenodo.org/doi/10.5281/zenodo.10161176\n.. image:: https://img.shields.io/pypi/v/pydfc.svg\n    :target: https://pypi.org/project/pydfc/\n    :alt: Pypi Package \n"
      },
      "source": "https://raw.githubusercontent.com/neurodatascience/dFC/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/neurodatascience/dFC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 Mohammad Torabi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/neurodatascience/dFC/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dFC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "neurodatascience"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 4396709,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 527445,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/neurodatascience/dFC/main/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mtorabi59",
          "type": "User"
        },
        "date_created": "2024-02-11T20:44:21Z",
        "date_published": "2024-02-11T22:06:37Z",
        "description": "Release 1.0.3 of `pydfc` toolbox.\r\n\r\n### HIGHLIGHTS\r\n______________________________________\r\n\r\n- You can easily install the toolbox by following the instructions in `README.rst`.\r\n- The `dFC_methods_demo.ipynb` illustrates how to assess dFC using each of the methods implemented in the toolbox.\r\n- The `multi_analysis_demo.ipynb` illustrates how to use the toolbox for applying multiple dFC methods together and assessing analytical flexibility.",
        "html_url": "https://github.com/neurodatascience/dFC/releases/tag/v1.0.3",
        "name": "Release 1.0.3",
        "release_id": 141548893,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/neurodatascience/dFC/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/neurodatascience/dFC/releases/141548893",
        "value": "https://api.github.com/repos/neurodatascience/dFC/releases/141548893",
        "zipball_url": "https://api.github.com/repos/neurodatascience/dFC/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mtorabi59",
          "type": "User"
        },
        "date_created": "2024-01-11T12:53:05Z",
        "date_published": "2024-01-11T12:59:23Z",
        "description": "Release 1.0.2 of `pydfc` toolbox.\r\n\r\n### HIGHLIGHTS\r\n______________________________________\r\n\r\n- You can easily install the toolbox by following the instructions in `README.rst`.\r\n- The `dFC_methods_demo.ipynb` illustrates how to assess dFC using each of the methods implemented in the toolbox.\r\n- The `multi_analysis_demo.ipynb` illustrates how to use the toolbox for applying multiple dFC methods together and assessing analytical flexibility.",
        "html_url": "https://github.com/neurodatascience/dFC/releases/tag/v1.0.2",
        "name": "Release 1.0.2",
        "release_id": 136658130,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/neurodatascience/dFC/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/neurodatascience/dFC/releases/136658130",
        "value": "https://api.github.com/repos/neurodatascience/dFC/releases/136658130",
        "zipball_url": "https://api.github.com/repos/neurodatascience/dFC/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mtorabi59",
          "type": "User"
        },
        "date_created": "2023-11-28T03:13:05Z",
        "date_published": "2023-11-28T03:32:51Z",
        "description": "Release 1.0.1 of `pydfc` toolbox.\r\n\r\n### HIGHLIGHTS\r\n______________________________________\r\n\r\n- You can easily install the toolbox by following the instructions in `README.rst`.\r\n- The `dFC_methods_demo.ipynb` illustrates how to assess dFC using each of the methods implemented in the toolbox.\r\n- The `multi_analysis_demo.ipynb` illustrates how to use the toolbox for applying multiple dFC methods together and assessing analytical flexibility.",
        "html_url": "https://github.com/neurodatascience/dFC/releases/tag/v1.0.1",
        "name": "Release 1.0.1",
        "release_id": 131667642,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/neurodatascience/dFC/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/neurodatascience/dFC/releases/131667642",
        "value": "https://api.github.com/repos/neurodatascience/dFC/releases/131667642",
        "zipball_url": "https://api.github.com/repos/neurodatascience/dFC/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mtorabi59",
          "type": "User"
        },
        "date_created": "2023-11-20T00:28:48Z",
        "date_published": "2023-11-20T17:31:13Z",
        "description": "The first release of `pydfc` toolbox.\r\n\r\n### HIGHLIGHTS\r\n______________________________________\r\n\r\n- You can easily install the toolbox by following the instructions in `README.rst`.\r\n- The `dFC_methods_demo.ipynb` illustrates how to assess dFC using each of the methods implemented in the toolbox.\r\n- The `multi_analysis_demo.ipynb` illustrates how to use the toolbox for applying multiple dFC methods together and assessing analytical flexibility.",
        "html_url": "https://github.com/neurodatascience/dFC/releases/tag/v1.0.0",
        "name": "Release 1.0.0",
        "release_id": 130465074,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/neurodatascience/dFC/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/neurodatascience/dFC/releases/130465074",
        "value": "https://api.github.com/repos/neurodatascience/dFC/releases/130465074",
        "zipball_url": "https://api.github.com/repos/neurodatascience/dFC/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:34:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ]
}