{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "SNVstory"
        ],
        "type": "Text_excerpt",
        "value": "If you use SNVstory in your research, please consider citing our paper:\nhttps://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-024-05703-y\n\n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nch-igm/snvstory"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-20T19:48:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-23T07:10:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Rapid and accurate ancestry inference using SNVs."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8079577977511593,
      "result": {
        "original_header": "SNVstory",
        "type": "Text_excerpt",
        "value": "Rapid and accurate ancestry inference using single nucleotide variants.\n \n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9867783094375432,
      "result": {
        "original_header": "UMAP",
        "type": "Text_excerpt",
        "value": "SNVstory also outputs a UMAP transformation of the user input sample (in black) on each set of training samples (color labeled by continent). The interactive plots are saved to .html files (see ./assets). A hover tool is used to display the country and population of nearby training samples. \n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8571167448337116,
      "result": {
        "original_header": "Feature Importance",
        "type": "Text_excerpt",
        "value": "The feature importance anaysis is executed separately, and requires micromamba/conda for installation. \nFeature importance requires your single/multi-sample VCF as input and will run on all samples in the VCF.\n```bash\n(snvstoryfeats)$ python Feature_importance.py --help\nusage: Feature_importance.py [-h] [-b] [-s] [-i] vcf output resource_dir {hg19,hg38}\n\nCalculate feature importance aggregated to genes and cytolocations. Returns two .npz files with shap values. Optionally create summary plots.\n\npositional arguments:\n  vcf                   Path to input VCF file.\n  output                Output folder to write results. Will exit if folder exists.\n  resource_dir          Path to resource directory.\n  {hg19,hg38}           Genome version (hg19 or hg38) of input vcf.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -b, --bar-plot        Flag to indicate whether to create mean(|SHAP val|) bar plot. All samples in the VCF are aggregated together.\n  -s, --stacked-bar-plot\n                        Flag to indicate whether to create stacked bar plot. All samples in the VCF are aggregated together.\n  -i, --ideogram-plot   Flag to indicate whether to create mean(|SHAP val|) bar plot. This will create a separate plot for each sample in the VCF.\n\n```\nRun the following example with the single sample VCF in the resources directory.\n```bash\npython Feature_importance.py ../dev/data/resource_dir/feature_importance/HG00096.example.vcf.gz test_output/ ../dev/data/resource_dir/ hg38 -b -s -i\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nch-igm/snvstory/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nch-igm/snvstory/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nch-igm/snvstory"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SNVstory"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nch-igm/snvstory/main/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nch-igm/snvstory/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nch-igm/snvstory/main/assets/ExampleAncestryReport.svg"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nch-igm/snvstory/main/assets/Example_1kGP_umap.png"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "SNVstory",
          "Feature Importance"
        ],
        "type": "Text_excerpt",
        "value": "Build SNVstory.\n```bash\ncd snvstory\ndocker-compose build\n```\n\nCopy the resources into a location the container can find. This step will take some time, but only needs to be copied once.\n```bash\naws s3 sync s3://igm-public-dropbox/snvstory/resource_dir/ dev/data/resource_dir/ --no-sign-request\n```\n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.996465667371255,
      "result": {
        "original_header": "Execution",
        "type": "Text_excerpt",
        "value": "SNVstory is executed with Docker by running the following on the terminal. Make sure Docker Destop is running or this command will not work.\n```bash\ndocker-compose run ancestry <arguments>\n``` \n\nRun to see all possible arguments:\n```bash\ndocker-compose run ancestry --help\n``` \nExample run with VCF on s3.\n```bash\ndocker-compose run ancestry \\\n    --path s3://path-to-input-file \\\n    --resource \"/data/resource_dir\" \\\n    --output-dir s3://path-to-output-directory \\\n    --genome-ver 38 \\\n    --mode WES\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9992393820446471,
      "result": {
        "original_header": "Feature Importance",
        "type": "Text_excerpt",
        "value": "The feature importance anaysis is executed separately, and requires micromamba/conda for installation. \n### Installation\n```bash\ncd Feature_Importance\nmicromamba create -f config/snvstoryfeats.yml\nmicromamba activate snvstoryfeats\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8739269977200281,
      "result": {
        "original_header": "Execution",
        "type": "Text_excerpt",
        "value": "\nRun to see all possible arguments:\n```bash\ndocker-compose run ancestry --help\n``` \nExample run with VCF on s3.\n```bash\ndocker-compose run ancestry \\\n    --path s3://path-to-input-file \\\n    --resource \"/data/resource_dir\" \\\n    --output-dir s3://path-to-output-directory \\\n    --genome-ver 38 \\\n    --mode WES\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8646054277379946,
      "result": {
        "original_header": "Feature Importance",
        "type": "Text_excerpt",
        "value": "Feature importance requires your single/multi-sample VCF as input and will run on all samples in the VCF.\n```bash\n(snvstoryfeats)$ python Feature_importance.py --help\nusage: Feature_importance.py [-h] [-b] [-s] [-i] vcf output resource_dir {hg19,hg38}\n\nCalculate feature importance aggregated to genes and cytolocations. Returns two .npz files with shap values. Optionally create summary plots.\n\npositional arguments:\n  vcf                   Path to input VCF file.\n  output                Output folder to write results. Will exit if folder exists.\n  resource_dir          Path to resource directory.\n  {hg19,hg38}           Genome version (hg19 or hg38) of input vcf.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -b, --bar-plot        Flag to indicate whether to create mean(|SHAP val|) bar plot. All samples in the VCF are aggregated together.\n  -s, --stacked-bar-plot\n                        Flag to indicate whether to create stacked bar plot. All samples in the VCF are aggregated together.\n  -i, --ideogram-plot   Flag to indicate whether to create mean(|SHAP val|) bar plot. This will create a separate plot for each sample in the VCF.\n\n```\nRun the following example with the single sample VCF in the resources directory.\n```bash\npython Feature_importance.py ../dev/data/resource_dir/feature_importance/HG00096.example.vcf.gz test_output/ ../dev/data/resource_dir/ hg38 -b -s -i\n```\n \nThe following samples should be created in the output directory:\n```\ntest_output/\n\u251c\u2500\u2500 HG00096_ideogram.png\n\u251c\u2500\u2500 Top_20_genes.png\n\u251c\u2500\u2500 Top_20_genes_stacked_label.png\n\u251c\u2500\u2500 shap_cyto.npz\n\u2514\u2500\u2500 shap_gene.npz\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nch-igm/snvstory/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2023, Computational Genomics Group\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "snvstory"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "nch-igm"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 102240,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 882,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "SNVstory"
        ],
        "type": "Text_excerpt",
        "value": "SNVstory requires Docker to run. Download and install [Docker Desktop](https://docs.docker.com/get-docker/).\n\nYou will also need the AWS Command Line Interface to download the resources needed to run the models. Please follow the installation instructions for [AWS CLI Version 2](https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html).\n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:29:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Ancestry Report",
        "parent_header": [
          "SNVstory",
          "Output"
        ],
        "type": "Text_excerpt",
        "value": "SNVstory returns a .csv report which includes the probabilities of each label. A .pdf is also returned, which summarizes these model probabilities in dot plots. The subcontinental model probabilities are weighted by the corresponding continental model result. \n\nE.g., in the following example case the gnomAD continental probability for the 'eas' label is 0, so the gnomAD East Asian subcontinental model probabilities are multiplied by 0 in the dot plot.\n\n\n![Example Report](assets/ExampleAncestryReport.svg)\n\n"
      },
      "source": "https://raw.githubusercontent.com/nch-igm/snvstory/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}