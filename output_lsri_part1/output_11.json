{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TBLabFJD/PARROT-FJD"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-06T14:04:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-02T12:52:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "(P)ipeline of (A)nalysis and (R)esearch of (R)are diseases (O)ptimized in (T)blab-Fundaci\u00f3n Jim\u00e9nez D\u00edaz. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9986890962740097,
      "result": {
        "original_header": "PARROT-FJD",
        "type": "Text_excerpt",
        "value": "Pipeline of Analysis and Research of Rare diseases Optimized in Tblab - Fundaci\u00f3n Jim\u00e9nez D\u00edaz. This is a germline variant calling pipeline implemented in Nextflow which performs mapping, SNV/INDEL calling and annotation, and CNV calling and annotation for targeted sequencing (gene panels and WES) and whole genome sequencing. \n<p align=\"center\">\n  <img width=\"500\" height=\"600\" src=\"https://github.com/TBLabFJD/PARROT-FJD/assets/48798983/3fc59e2f-ce9d-4812-9279-37fa4801c404\")\n\">\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TBLabFJD/PARROT-FJD/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TBLabFJD/PARROT-FJD/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TBLabFJD/PARROT-FJD"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PARROT-FJD"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/basespace_docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/basespace_docker/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/bioinfotools_docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/bioinfotools_docker/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/manta_docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/manta_docker/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/convading_docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/convading_docker/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/annotsv_docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/annotsv_docker/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/bwa_samtools_docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/dockerfiles/bwa_samtools_docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/SNVcalling.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/checkproject.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/SNVfiltering.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/BAMpreprocessing.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/combinedGVCF.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/mergeGVCF.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/VEPannotation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/genotyping.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/pruebas_vep_and_installation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/annotateTargets.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/CNV_tsv2vcf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/genotypeRefinement.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/mosdepth.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/LOH.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/mapping.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/tasks/removeDirs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/cnv_exomes/run_codex2_exomedepth.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/cnv_exomes/run_gCNVgatk.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/cnv_exomes/run_XHMM.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/cnv_exomes/XHMM/XHMM.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/cnv_exomes/exomeDepth/exomeDepthWES.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/cnv_exomes/CODEX2/codex2WES.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/cnv_exomes/gCNV_gatk/gCNV_gatk.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/AutoMap/AutoMap_v1.2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/AutoMap/Scripts/trimming.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/AutoMap/Scripts/common_analysis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/AutoMap/Scripts/extend.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/AutoMap/Resources/merge_repeats.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/tasks/AutoMap/Archive/AutoMap_v1.0.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/assets/48798983/3fc59e2f-ce9d-4812-9279-37fa4801c404"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9954017468423147,
      "result": {
        "original_header": "Versions",
        "type": "Text_excerpt",
        "value": "GATK 4.4.0.0\nVEP release 105\ndeepvariant v1.4.0\nannotsv 3.1.1\nmanta 1.6.0\nBWA 0.7.17-r1198-dirty\nbcftools 1.15\nbedtools 2.27.1\nR version 4.2.3\npython 3.6\n \n"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TBLabFJD/PARROT-FJD/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "PARROT-FJD"
        ],
        "type": "Text_excerpt",
        "value": "PARROT-FJD source code is provided under the [**Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)**](https://creativecommons.org/licenses/by-nc-sa/4.0/). PARROT-FJD includes several third party packages provided under other open source licenses, please check them for additional details.\n\n[![Licencia de Creative Commons](https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png)](http://creativecommons.org/licenses/by-nc-sa/4.0/)\n"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PARROT-FJD"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "TBLabFJD"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 264333,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 189563,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 176229,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 157027,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 75646,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 6569,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run this pipeline",
        "parent_header": [
          "PARROT-FJD"
        ],
        "type": "Text_excerpt",
        "value": "The different tasks previously mention are divided into different workflows which are specified usig the `--analysis` flag followed by the corresponding letters:\n - D (Download): It downloads the FASTQ files from BaseSpace. If CNV calling or no samples are specified all samples from a project will be downloaded. \n - M (Mapping): Specified FASTQ files from a directory (or the ones downloaded) are mapped into analysis-ready BAM files.\n - S (SNV/INDEL calling): Specified BAM files (or the ones just mapped) are used for SNV and INDEL calling using GATK by default. Dragen and DeepVariant are also available. The variant caller can be selected with the parameter `--vc_tools`. The options are: \n     - `gatk`: Haplotypecaller\n     - `dragen`\n     - `deepvariant`\n     - `all` (equivalent to: gatk,dragen,deepvariant). Using this option, resulting vcfs will be merged into a single-sample VCF (single VCFs from each variant caller are also available)\n   More than one tool can be chosen using \",\" (`--vc_tools gatk,dragen`)\n - A (Annotation of SNVs and INDELS). Specified VCF files from a directory (or the ones just generated in the SNV/INDEL calling step) are annotated and transformed into a TSV file.\n - C (CNV calling and annotation). Specified BAM files (or the ones just mapped) are used for CNV calling using Exomedepth, Convading, Panelcn.mops and GATK, and annotation using AnnotSV. In the case of analycing WGS (`--capture G`) the variant calling used is Manta.\n\nMapping and variant calling processes can be parallelized to speed up the analysis. These option can be activated using the parameters `--parallel_mapping true` and `--parallel_calling true`.\n\n`--parallel_mapping true`: FASTP will be executed to split FASTQ files in three chunks that will be mapped in parallel.   \n`--parallel_calling true`: BAM file will be split by chromosomes in smaller BAM files that will be processed in parallel. \n\nFor using this options, using `--cpus-per-task=44` is recommended. \n\nYou can generate and keep a cram file out of your bam, when running either MS or just S. The cram is generated inside the out folder: /out/cram/. By default: --keep_cram false\n`--keep_cram true`: generate and keep cram file\n\nYou can use cram file as input using the option `--alignment_file=\"cram\"`. \n\nYou can generate the mosdepth bed file from your bam, when running either MS or just S. The bed is generated inside the out folder: /out/qc/mosdepth_cov/. By default: --mosdepth_bed false\n`--mosdepth_bed true`: generate the mosdepth.bed file needed to update the db of allele frequencies. \n\nYou need to define with what technique your data was generated: WES, WGS or CES. By default is WES\n\t`--technique WES` : My data is/are WES samples\n\nWhen you use the D (Download option) you need to specify the path to your \"bs\" software is:\nbs is the BaseSpace Sequence Hub CLI software.\nTo download the software visit the lik and follow instructions: https://developer.basespace.illumina.com/docs/content/documentation/cli/cli-overview\nAfter downloading you need to authenticate with your basespace account running the following command: bs auth\nAfter authentication you can already run PARROT-FJD with the D (download option) by specifying where your \"bs\" software is stored.\nExample: TBLAB -> --baseuser /home/graciela/bin/\nExample: UAM -> --baseuser /lustre/home/graciela/\n\n`--baseuser /lustre/home/graciela/ `: download fastqs from basespace for graciela when running in UAM\n\nThere are different profiles available depending on the reference release to use, where to run it, and type of contenerization:\n\nMandatory to choose one:\n - hg19: use the reference genome hg19\n - hg38: use the reference genome hg38\n\nMandatory to choose one:\n - tblabserver: run pipeline in the server just for the canonical chromosomes\n - tblabserver_allcontigs: run pipeline in the server just for all contigs\n - uam: run pipeline in the CCC (UAM) just for the canonical chromosomes\n - uam_allcontigs: run pipeline in the CCC (UAM) just for all contigs\n\nMandatory to choose one:\n - docker: run pipeline using docker containers\n - singularity: run pipeline using singularity containers\n\nMandatory when running in the CCC (UAM):\n - batch: run pipeline in for slurm executor in the CCC (UAM)\n\n\nProfiles to use in the CCC (UAM): \n - `-profile hg19,singularity,uam,batch` \n - `-profile hg38,singularity,uam,batch`\n - `-profile hg19,singularity,uam_allcontigs,batch` \n - `-profile hg38,singularity,uam_allcontigs,batch`\n\nProfiles to use in the server:\n - `-profile hg19,singularity,tblabserver` \n - `-profile hg38,singularity,tblabserver`\n - `-profile hg19,docker,tblabserver` \n - `-profile hg38,docker,tblabserver`\n - `-profile hg19,singularity,tblabserver_allcontigs` \n - `-profile hg38,singularity,tblabserver_allcontigs`\n - `-profile hg19,docker,tblabserver_allcontigs` \n - `-profile hg38,docker,tblabserver_allcontigs`\n\nCheck the file nexflow.config to see the description of all arguments.\n"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 22:56:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "PARROT-FJD"
        ],
        "type": "Text_excerpt",
        "value": "Perform a complete analysis from downloading samples from Basespace to SNV/INDEL and CNV calling and annotation.\n```\nnextflow run /home/gonzalo/nextflowtest/NextVariantFJD/main.nf \\\n-profile hg38,singularity,tblabserver --analysis DMSAC \\\n--input project_name \\\n--output /output/path/ \\\n--bed /path/to/captured/regions.bed \\\n-with-report report.html\n```\n\n\nPerform an analysis from mapping to SNV/INDEL calling and annotation.\n```\nnextflow run /home/gonzalo/nextflowtest/NextVariantFJD/main.nf \\\n-profile hg38,singularity,tblabserver --analysis MSA \\\n--input /input/path/to/fastq/ \\\n--output /output/path/ \\\n-with-report report.html\n```\n\n\nPerform a complete analysis from downloading samples from Basespace to SNV/INDEL and CNV calling and annotation. Variant calling analysis is performed to a subset of samples and genes.\n```\nnextflow run /home/gonzalo/nextflowtest/NextVariantFJD/main.nf \\\n-profile hg38,singularity,tblabserver --analysis DMSAC \\\n--input project_name \\\n--output /output/path/ \\\n--bed /path/to/captured/regions.bed \\\n--samples /path/to/samplefile.txt \\\n--genelist /path/to/genelist.txt \\\n-with-report report.html\n```\n\n\nPerform a SNV/INDEL calling and annotation analysis. Variant calling analysis is performed to a subset of samples. Genes are prioritized using genelista and glowgenes.\n```\nnextflow run /home/gonzalo/nextflowtest/NextVariantFJD/main.nf \\\n-profile hg38,singularity,tblabserver --analysis SA \\\n--input /input/path/to/vcfs/ \\\n--output /output/path/ \\\n--samples /path/to/samplefile.txt \\\n--genelist /path/to/genelist.txt \\\n--glowgenes /path/to/glowgenes_result.txt \\\n-with-report report.html\n```\n"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/PARROT-FJD/main/main.nf"
      },
      "technique": "file_exploration"
    }
  ]
}