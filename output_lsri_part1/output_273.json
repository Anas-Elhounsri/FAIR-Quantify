{
  "application_domain": [
    {
      "confidence": 15.54,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "@ARTICLE{Schwengers2021-fd,\ntitle = \"Bakta: rapid and standardized annotation of bacterial genomes via alignment-free sequence identification\",\nauthor = \"Schwengers, Oliver and Jelonek, Lukas and Dieckmann, Marius Alfred and Beyvers, Sebastian and Blom, Jochen and Goesmann, Alexander\",\nabstract = \"Command-line annotation software tools have continuously gained popularity compared to centralized online services due to the worldwide increase of sequenced bacterial genomes. However, results of existing command-line software pipelines heavily depend on taxon-specific databases or sufficiently well annotated reference genomes. Here, we introduce Bakta, a new command-line software tool for the robust, taxon-independent, thorough and, nonetheless, fast annotation of bacterial genomes. Bakta conducts a comprehensive annotation workflow including the detection of small proteins taking into account replicon metadata. The annotation of coding sequences is accelerated via an alignment-free sequence identification approach that in addition facilitates the precise assignment of public database cross-references. Annotation results are exported in GFF3 and International Nucleotide Sequence Database Collaboration (INSDC)-compliant flat files, as well as comprehensive JSON files, facilitating automated downstream analysis. We compared Bakta to other rapid contemporary command-line annotation software tools in both targeted and taxonomically broad benchmarks including isolates and metagenomic-assembled genomes. We demonstrated that Bakta outperforms other tools in terms of functional annotations, the assignment of functional categories and database cross-references, whilst providing comparable wall-clock runtimes. Bakta is implemented in Python 3 and runs on MacOS and Linux systems. It is freely available under a GPLv3 license at https://github.com/oschwengers/bakta. An accompanying web version is available at https://bakta.computational.bio.\",\njournal = \"Microbial genomics\",\nvolume =  7,\nnumber =  11,\nmonth =  nov,\nyear =  2021,\nlanguage = \"en\",\nissn = \"2057-5858\",\npmid = \"34739369\",\ndoi = \"10.1099/mgen.0.000685\"\n}\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/CITATION.bib",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids"
        ],
        "type": "Text_excerpt",
        "value": "If you use Bakta in your research, please cite this paper:\n> Schwengers O., Jelonek L., Dieckmann M. A., Beyvers S., Blom J., Goesmann A. (2021). Bakta: rapid and standardized annotation of bacterial genomes via alignment-free sequence identification. Microbial Genomics, 7(11). https://doi.org/10.1099/mgen.0.000685\n\nBakta is *standing on the shoulder of giants* taking advantage of many great software tools and databases. If you find any of these useful for your research, please cite these primary sources, as well.\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tools",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids",
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "- tRNAscan-SE 2.0 <https://doi.org/10.1093/nar/gkab688>\n- Aragorn <https://doi.org/10.1093/nar/gkh152>\n- Infernal <https://doi.org/10.1093/bioinformatics/btt509>\n- PilerCR <https://doi.org/10.1186/1471-2105-8-18>\n- Pyrodigal <https://doi.org/10.21105/joss.04296> Prodigal <https://doi.org/10.1186/1471-2105-11-119>\n- Diamond <https://doi.org/10.1038/s41592-021-01101-x>\n- BLAST+ <https://doi.org/10.1186/1471-2105-10-421>\n- PyHMMER <https://doi.org/10.21105/joss.04296> HMMER <https://doi.org/10.1371/journal.pcbi.1002195>\n- AMRFinderPlus <https://doi.org/10.1038/s41598-021-91456-0>\n- DeepSig <https://doi.org/10.1093/bioinformatics/btx818>\n- Circos <https://doi.org/10.1101/gr.092759.109>\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Databases",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids",
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "- Rfam: <https://doi.org/10.1002/cpbi.51>\n- Mob-suite: <https://doi.org/10.1099/mgen.0.000206>\n- DoriC: <https://doi.org/10.1093/nar/gky1014>\n- AntiFam: <https://doi.org/10.1093/database/bas003>\n- UniProt: <https://doi.org/10.1093/nar/gky1049>\n- RefSeq: <https://doi.org/10.1093/nar/gkx1068>\n- COG: <https://doi.org/10.1093/bib/bbx117>\n- KEGG: <https://doi.org/10.1093/bioinformatics/btz859>\n- PHROG: <https://doi.org/10.1093/nargab/lqab067>\n- AMRFinder: <https://doi.org/10.1128/AAC.00483-19>\n- ISFinder: <https://doi.org/10.1093/nar/gkj014>\n- Pfam: <https://doi.org/10.1093/nar/gky995>\n- VFDB: <https://doi.org/10.1093/nar/gky1080>\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\noliver.schwengers@cb.jlug.de.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\n[https://www.contributor-covenant.org/version/2/0/code_of_conduct.html][v2.0].\n\nCommunity Impact Guidelines were inspired by \n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available \nat [https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.0]: https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/oschwengers/bakta"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-15T23:08:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T19:16:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Rapid & standardized annotation of bacterial genomes, MAGs & plasmids"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids",
          "Genome plots"
        ],
        "type": "Text_excerpt",
        "value": "- **Comprehensive & taxonomy-independent database**\nBakta provides a large and taxonomy-independent database using UniProt's entire [UniRef](https://www.uniprot.org/uniref/) protein sequence cluster universe. Thus, it achieves favourable annotations in terms of sensitivity and specificity along the broad continuum ranging from well-studied species to unknown genomes from MAGs.\n\n- **Protein sequence identification**\nBakta exactly identifies known identical protein sequences (**IPS**) from RefSeq and UniProt allowing the fine-grained annotation of gene alleles (`AMR`) or closely related but distinct protein families. This is achieved via an alignment-free sequence identification (**AFSI**) approach using full-length `MD5` protein sequence hash digests.\n\n- **Fast**\nThis AFSI approach substantially accellerates the annotation process by avoiding computationally expensive homology searches for identified genes. Thus, Bakta can annotate a typical bacterial genome in 10 &plusmn;5 min on a laptop, plasmids in a couple of seconds/minutes.\n\n- **Database cross-references**\nFostering the [FAIR](https://www.go-fair.org/fair-principles) principles, Bakta exploits its AFSI approach to annotate CDS with database cross-references (**dbxref**) to RefSeq (`WP_*`), UniRef100 (`UniRef100_*`) and UniParc (`UPI*`). By doing so, IPS allow the surveillance of distinct gene alleles and streamlining comparative analysis as well as posterior (external) annotations of `putative` & `hypothetical` protein sequences which can be mapped back to existing CDS via these exact & stable identifiers (*E. coli* gene [ymiA](https://www.uniprot.org/uniprot/P0CB62) [...more](https://www.uniprot.org/help/dubious_sequences)). Currently, Bakta identifies ~214.8 mio, ~199 mio and ~161 mio distinct protein sequences from UniParc, UniRef100 and RefSeq, respectively. Hence, for certain genomes, up to 99 % of all CDS can be identified this way, skipping computationally expensive sequence alignments.\n\n- **FAIR annotations**\nTo provide standardized annotations adhearing to FAIR principles, Bakta utilizes a versioned custom annotation database comprising UniProt's [UniRef100 & UniRef90](https://www.uniprot.org/uniref/) protein clusters (FAIR -> [DOI](http://dx.doi.org/10.1038/s41597-019-0180-9)/[DOI](https://doi.org/10.1093/nar/gkaa1100)) enriched with dbxrefs (`GO`, `COG`, `EC`) and annotated by specialized niche databases. For each DB version we provide a comprehensive log file of all imported sequences and annotations.\n\n- **Small proteins / short open reading frames**\nBakta detects and annotates small proteins/short open reading frames (**sORF**) which are not predicted by tools like `Prodigal`.\n\n- **Expert annotation systems**\nTo provide high quality annotations for certain proteins of higher interest, *e.g.* AMR & VF genes, Bakta includes & merges different expert annotation systems. Currently, Bakta uses NCBI's AMRFinderPlus for AMR gene annotations as well as an generalized protein sequence expert system with distinct coverage, identity and priority values for each sequence, currenlty comprising the [VFDB](http://www.mgc.ac.cn/VFs/main.htm) as well as NCBI's [BlastRules](https://ftp.ncbi.nih.gov/pub/blastrules/).\n\n- **Comprehensive workflow**\nBakta annotates ncRNA cis-regulatory regions, oriC/oriV/oriT and assembly gaps as well as standard feature types: tRNA, tmRNA, rRNA, ncRNA genes, CRISPR, CDS and pseudogenes.\n\n- **GFF3 & INSDC conform annotations**\nBakta writes GFF3 and INSDC-compliant (Genbank & EMBL) annotation files ready for submission (checked via [GenomeTools GFF3Validator](http://genometools.org/cgi-bin/gff3validator.cgi), [table2asn_GFF](https://www.ncbi.nlm.nih.gov/genbank/genomes_gff/#run) and [ENA Webin-CLI](https://github.com/enasequence/webin-cli) for GFF3 and EMBL file formats, respectively for representative genomes of all ESKAPE species).\n\n- **Bacteria & plasmids only**\nBakta was designed to annotate bacteria (isolates & MAGs) and plasmids, only. This decision by design has been made in order to tweak the annotation process regarding tools, preferences & databases and to streamline further development & maintenance of the software.\n\n- **Reasoning**\nBy annotating bacterial genomes in a standardized, taxonomy-independent, high-throughput and local manner, Bakta aims at a well-balanced tradeoff between fully featured but computationally demanding pipelines like [PGAP](https://github.com/ncbi/pgap) and rapid highly customizable offline tools like [Prokka](https://github.com/tseemann/prokka). Indeed, Bakta is heavily inspired by Prokka (kudos to [Torsten Seemann](https://github.com/tseemann)) and many command line options are compatible for the sake of interoperability and user convenience. Hence, if Bakta does not fit your needs, please consider trying Prokka.\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9968612273737004,
      "result": {
        "original_header": "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids",
        "type": "Text_excerpt",
        "value": "Bakta is a tool for the rapid & standardized annotation of bacterial genomes and plasmids from both isolates and MAGs. It provides **dbxref**-rich, **sORF**-including and taxon-independent annotations in machine-readable `JSON` & bioinformatics standard file formats for automated downstream analysis.\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9613928742464835,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "Bakta accepts bacterial genomes and plasmids (complete / draft assemblies) in (zipped) fasta format. For a full description of how further genome information can be provided and workflow customizations can be set, please have a look at the [Usage](#usage) section or this [manual](https://bakta.readthedocs.io/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.947661825980497,
      "result": {
        "original_header": "Replicon meta data table",
        "type": "Text_excerpt",
        "value": "To fine-tune the very details of each sequence in the input fasta file, Bakta accepts a replicon meta data table provided in `csv` or `tsv` file format: `--replicons <file.tsv>`. Thus, complete replicons within partially completed draft assemblies can be marked & handled as such, *e.g.* detection & annotation of features spanning sequence edges. \nFor each input sequence recognized via the `original locus id` a `new locus id`, the replicon `type` and the `topology` as well a `name` can be explicitly set. \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9740685390952413,
      "result": {
        "original_header": "User-provided regions",
        "type": "Text_excerpt",
        "value": "Bakta accepts pre-annotated (*a priori*), user-provided feature regions via `--regions` in either GFF3 or GenBank format. These regions supersede all de novo-predicted regions, but are equally subject to the internal functional annotation process. Currently, only `CDS` are supported. A maximum overlap with *de novo*-predicted CDS of 30 bp is allowed. If you would like to provide custom functional annotations, you can provide these via `--proteins` which is described in the following section.\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9847975257991938,
      "result": {
        "original_header": "User-provided protein sequences",
        "type": "Text_excerpt",
        "value": "Protein sequences provided in short Fasta or GenBank format are searched with default thresholds of 90%, 80% and 80% for minimal identity, query and subject coverage, respectively.\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8646454507719592,
      "result": {
        "original_header": "RNAs",
        "type": "Text_excerpt",
        "value": "Bakta distinguishes ncRNA genes and (cis-regulatory) regions in order to enable the distinct handling thereof during the annotation process, *i.e.* feature overlap detection. \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9516392827983013,
      "result": {
        "original_header": "Coding sequences",
        "type": "Text_excerpt",
        "value": "The structural prediction is conducted via Pyrodigal and complemented by a custom detection of sORF < 30 aa. In addition, superseding regions of pre-predicted CDS can be provided via `--regions`. \nTo rapidly identify known protein sequences with exact sequence matches and to conduct a comprehensive annotations, Bakta utilizes a compact read-only SQLite database comprising protein sequence digests and pre-assigned annotations for millions of known protein sequences and clusters. \n- **UPS**: unique protein sequences identified via length and MD5 hash digests (100% coverage & 100% sequence identity)\n- **IPS**: identical protein sequences comprising seeds of UniProt's UniRef100 protein sequence clusters\n- **PSC**: protein sequences clusters comprising seeds of UniProt's UniRef90 protein sequence clusters\n- **PSCC**: protein sequences clusters of clusters comprising annotations of UniProt's UniRef50 protein sequence clusters \n1. De novo-prediction via Pyrodigal respecting sequences' completeness (distinct prediction for complete replicons and uncompleted contigs)\n2. Discard spurious CDS via AntiFam\n3. Detect translational exceptions (selenocysteines)\n4. Import of superseding user-provided CDS regions (optional)\n5. Detection of UPSs via MD5 digests and lookup of related IPS and PCS\n6. Sequence alignments of remainder via Diamond vs. PSC (query/subject coverage=0.8, identity=0.5)\n7. Assignment to UniRef90 or UniRef50 clusters if alignment hits achieve identities larger than 0.9 or 0.5, respectively\n8. Execution of expert systems:\n   - AMR: AMRFinderPlus\n   - Expert proteins: NCBI BlastRules, VFDB\n   - User proteins (optionally via `--proteins <Fasta/GenBank>`)\n9. Prediction of signal peptides (optionally via `--gram <+/->`)\n10. Detection of pseudogenes:\n   1. Search for reference PCSs using `hypothetical` CDS as seed sequences\n   2. Translated alignment (blastx) of reference PCSs against up-/downstream-elongated CDS regions\n   3. Analysis of translated alignments and detection of pseudogenization causes & effects\n11. Combination of IPS, PSC, PSCC and expert system information favouring more specific annotations and avoiding redundancy \nCDS without IPS or PSC hits as well as those without gene symbols or product descriptions different from `hypothetical` will be marked as `hypothetical`. \n1. Detection of Pfam domains, repeats & motifs\n2. Calculation of protein sequence statistics, *i.e.* molecular weight, isoelectric point \n1. Custom sORF detection & extraction with amino acid lengths < 30 aa\n2. Apply strict feature type-dependent overlap filters\n3. discard spurious sORF via AntiFam\n4. Detection of UPS via MD5 hashes and lookup of related IPS\n5. Sequence alignments of remainder via Diamond vs. an sORF subset of PSCs (coverage=0.9, identity=0.9)\n6. Exclude sORF without sufficient annotation information\n7. Prediction of signal peptides (optionally via `--gram <+/->`) \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9770441220965469,
      "result": {
        "original_header": "Miscellaneous",
        "type": "Text_excerpt",
        "value": "1. Gaps: in-mem detection & annotation of sequence gaps\n2. oriC/oriV/oriT: Blast+ (cov=0.8, id=0.8) vs. [MOB-suite](https://github.com/phac-nml/mob-suite) oriT & [DoriC](http://tubic.org/doric/public/index.php) oriC/oriV sequences. Annotations of ori regions take into account overlapping Blast+ hits and are conducted based on a majority vote heuristic. Region edges are fuzzy - use with caution!\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9388177264391123,
      "result": {
        "original_header": "Database",
        "type": "Text_excerpt",
        "value": "The Bakta database comprises a set of AA & DNA sequence databases as well as HMM & covariance models.\nAt its core Bakta utilizes a compact read-only SQLite DB storing protein sequence digests, lengths, pre-assigned annotations and dbxrefs of UPS, IPS and PSC from: \nThis allows the exact protein sequences identification via MD5 digests & sequence lengths as well as the rapid subsequent lookup of related information. Protein sequence digests are checked for hash collisions while the DB creation process. IPS & PSC have been comprehensively pre-annotated integrating annotations & database *dbxrefs* from: \nTo provide high quality annotations for distinct protein sequences of high importance (AMR, VF, *etc*) which cannot sufficiently be covered by the IPS/PSC approach, Bakta provides additional expert systems. For instance, AMR genes, are annotated via NCBI's AMRFinderPlus.\nAn expandable alignment-based expert system supports the incorporation of high quality annotations from multiple sources. This currenlty comprises NCBI's BlastRules as well as VFDB and will be complemented with more expert annotation sources over time. Internally, this expert system is based on a Diamond DB comprising the following information in a standardized format: \nTo provide FAIR annotations, the database releases are SemVer versioned (w/o patch level), *i.e.* `<major>.<minor>`. For each version we provide a comprehensive log file tracking all imported sequences as well as annotations thereof. The DB schema is represented by the `<major>` digit and automatically checked at runtime by Bakta in order to ensure compatibility. Content updates are tracked by the `<minor>` digit. \nAs this taxonomic-untargeted database is fairly demanding in terms of storage consumption, we also provide a lightweight DB type providing all non-coding feature information but only PSCC information from UniRef50 clusters for CDS. If download bandwiths or storage requirements become an issue or if shorter runtimes are favored over more-specific annotation, the `light` DB will do the job. \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9564905202058821,
      "result": {
        "original_header": "Genome Submission",
        "type": "Text_excerpt",
        "value": "Most genomes annotated with Bakta should be ready-to-submid to INSDC member databases GenBank and ENA. As a first step, please register your BioProject (e.g. PRJNA123456) and your locus_tag prefix (*e.g.* ESAKAI).\n```bash\n# annotate your genome in `--compliant` mode:\n$ bakta --db <db-path> -v --genus Escherichia --species \"coli O157:H7\" --strain Sakai --complete --compliant --locus-tag ESAKAI test/data/GCF_000008865.2.fna.gz\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8662195697345453,
      "result": {
        "original_header": "Protein bulk annotation",
        "type": "Text_excerpt",
        "value": "For the direct bulk annotation of protein sequences aside from the genome, Bakta provides a dedicated CLI entry point `bakta_proteins`: \n### Usage\n```bash\nusage: bakta_proteins [--db DB] [--output OUTPUT] [--prefix PREFIX] [--force] [--proteins PROTEINS] [--help] [--verbose] [--debug] [--threads THREADS] [--tmp-dir TMP_DIR] [--version] <input>\n\nRapid & standardized annotation of bacterial genomes, MAGs & plasmids\n\npositional arguments:\n  <input>               Protein sequences in (zipped) fasta format\n\nInput / Output:\n  --db DB, -d DB        Database path (default = <bakta_path>/db). Can also be provided as BAKTA_DB environment variable.\n  --output OUTPUT, -o OUTPUT\n                        Output directory (default = current working directory)\n  --prefix PREFIX, -p PREFIX\n                        Prefix for output files\n  --force, -f           Force overwriting existing output folder\n\nAnnotation:\n  --proteins PROTEINS   Fasta file of trusted protein sequences for annotation\n\nGeneral:\n  --help, -h            Show this help message and exit\n  --verbose, -v         Print verbose information\n  --debug               Run Bakta in debug mode. Temp data will not be removed.\n  --threads THREADS, -t THREADS\n                        Number of threads to use (default = number of available CPUs)\n  --tmp-dir TMP_DIR     Location for temporary files (default = system dependent auto detection)\n  --version, -V         show program's version number and exit\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9738019411091412,
      "result": {
        "original_header": "Genome plots",
        "type": "Text_excerpt",
        "value": "Bakta allows the creation of circular genome plots via [Circos](http://circos.ca). Plots are generated as part of the default workflow and saved as `PNG` and `SVG` files. In addition to the default workflow, Bakta provides a dedicated CLI entry point `bakta_plot`: \nIt accepts the results of a former annotation process in JSON format and allows the selection of distinct sequences, either denoted by their `FASTA` identifiers or sequential number starting by 1. Colors for each feature type can be adopted via a simple configuration file in `YAML` format, *e.g.* [config.yaml](config.yaml). Currently, two default plot types are supported, *i.e.* `features` and `cog`. Examples for chromosomes and plasmids are provided in [here](examples/) \nCurrently, there are two types of plots: `features` (the default) and `cog`. In default mode (`features`), all features are plotted on two rings representing the forward and reverse strand from outer to inner, respectively using the following feature colors: \nIn addition, both plot types share two innermost GC content and GC skew rings. The first ring represents the GC content per sliding window over the entire sequence(s) in green (`#33a02c`) and red `#e31a1c` representing GC above and below average, respectively. The 2nd ring represents the GC skew in orange (`#fdbf6f`) and blue (`#1f78b4`). The GC skew gives hints on a replicon's replication bubble and hence, on the completeness of the assembly. On a complete & circular bacterial chromosome, you normally see two inflection points at the origin of replication and at its opposite region -> [Wikipedia](https://en.wikipedia.org/wiki/GC_skew)\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9883910276729977,
      "result": {
        "original_header": "Auxiliary scripts",
        "type": "Text_excerpt",
        "value": "Often, the usage of Bakta is a necessary upfront task followed by deeper analyses implemented in custom scripts. In [scripts](scripts) we'd like to collect & offer a pool of scripts addressing common tasks: \n- `collect-annotation-stats.py`: Collect annotation stats for a cohort of genomes and print a condensed `TSV`.\n- `extract-region.py`: Extract genome features within a given genomic range and export them as `GFF3`, `Embl`, `Genbank`, `FAA` and `FFN` \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9712080621440426,
      "result": {
        "original_header": "Web version",
        "type": "Text_excerpt",
        "value": "This interactive web application provides an interactive genome browsers, aggregated feature counts and a searchable data table with detailed information on each predicted feature as well as dbxref-linked records to public databases. \nOf note, this web application can also be used to visualize offline annotation results conducted by using the command line version. Therefore, the web application provides an offline viewer accepting JSON result files which are parsed and visualized locally within the browser without sending any data to the server.\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9918507476721106,
      "result": {
        "original_header": "Issues and Feature Requests",
        "type": "Text_excerpt",
        "value": "Bakta is new and like in every software, expect some bugs lurking around. So, if you run into any issues with Bakta, we'd be happy to hear about it.\nTherefore, please, execute bakta in debug mode (`--debug`) and do not hesitate to file an issue including as much information as possible: \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bakta.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Database download",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Bakta requires a mandatory database which is publicly hosted at Zenodo: [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.4247252.svg)](https://doi.org/10.5281/zenodo.4247252)\nWe provide 2 types: `full` and `light`. To get best annotation results and to use all features, we recommend using the `full` (default). If you seek for maximum runtime performance or if download time/storage requirements are an issue, please try the `light` version. Further information is provided in the [database](#database) section below.\n\nList available DB versions (available as either `full` or `light`):\n\n```bash\nbakta_db list\n...\n```\n\nTo download the most recent compatible database version we recommend to use the internal database download & setup tool:\n\n```bash\nbakta_db download --output <output-path> --type [light|full]\n```\n\nOf course, the database can also be downloaded manually:\n\n```bash\nwget https://zenodo.org/record/10522951/files/db-light.tar.gz\ntar -xzf db-light.tar.gz\nrm db-light.tar.gz\n```\n\nIf required, or desired, the AMRFinderPlus DB can also be updated manually:\n\n```bash\namrfinder_update --force_update --database db-light/amrfinderplus-db/\n```\n\nIf you're using bakta on Docker:\n\n```bash\ndocker run -v /path/to/desired-db-path:/db --entrypoint /bin/bash oschwengers/bakta:latest -c \"bakta_db download --output /db --type [light|full]\"\n```\n\nAs an additional data repository backup, we provide the most recent database version via our institute servers: [full](https://jlubox.uni-giessen.de/getlink/fiKeyT1huWv9vW5cXKYkZXYB/db.tar.gz), [light](https://jlubox.uni-giessen.de/getlink/fiG6AHmHA94t4v2r2vwW91WB/db-light.tar.gz). However, the bandwith is limited. Hence, please use it with caution and only if Zenodo might be temporarily uncreachable or slow. In these cases, please also download the AMRFinderPlus database as indicated above.\n\nUpdate an existing database:\n\n```bash\nbakta_db update --db <existing-db-path> [--tmp-dir <tmp-directory>]\n```\n\nUpdate using Docker:\n\n```bash\ndocker run -v /path/to/desired-db-path:/db --entrypoint /bin/bash oschwengers/bakta:latest -c \"bakta_db update --db /db/db-[light|full]\"\n```\n\nThe database path can be provided either via parameter (`--db`) or environment variable (`BAKTA_DB`):\n\n```bash\nbakta --db <db-path> genome.fasta\n\nexport BAKTA_DB=<db-path>\nbakta genome.fasta\n```\n\nFor system-wide setups, the database can also be copied to the Bakta base directory:\n\n```bash\ncp -r db/ <bakta-installation-dir>\n```\n\nAs Bakta takes advantage of AMRFinderPlus for the annotation of AMR genes, AMRFinder is required to setup its own internal databases in a `<amrfinderplus-db>` subfolder within the Bakta database `<db-path>`, once via `amrfinder_update --force_update --database <db-path>/amrfinderplus-db/`. To ease this process we recommend to use Bakta's internal download procedure.\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/oschwengers/bakta/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQ",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids"
        ],
        "type": "Text_excerpt",
        "value": "- **AMRFinder fails**\nIf AMRFinder constantly crashes even on fresh setups and Bakta's database was downloaded manually, then AMRFinder needs to setup its own internal database. This is required only once: `amrfinder_update --force_update --database <bakta-db>/amrfinderplus-db`. You could also try Bakta's internal database download logic automatically taking care of this: `bakta_db download --output <bakta-db>`\n\n- **DeepSig not found in Conda environment**\nFor the prediction of signal predictions, Bakta uses DeepSig that is currently not available for MacOS. Therefore, we decided to exclude DeepSig from Bakta's default Conda dependencies because otherwise it would not be installable on MacOS systems. On Linux systems it can be installed via `conda install -c conda-forge -c bioconda python=3.8 deepsig`.\n\n- **Nice, but I'm mising XYZ...**\nBakta is quite new and we're keen to constantly improve it and further expand its feature set. In case there's anything missing, please do not hesitate to open an issue and ask for it!\n\n- **Bakta is running too long without CPU load... why?**\nBakta takes advantage of an SQLite DB which results in high storage IO loads. If this DB is stored on a remote / network volume, the lookup of IPS/PSC annotations might take a long time. In these cases, please, consider moving the DB to a local volume or hard drive.\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 53
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/oschwengers/bakta/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "oschwengers/bakta"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oschwengers/bakta/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oschwengers/bakta/main/bakta-docker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oschwengers/bakta/main/bakta-podman.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oschwengers/bakta/main/db-scripts/buid-db.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.4247252"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.4247252"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.4770026"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.4247252"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids"
        ],
        "type": "Text_excerpt",
        "value": "Bakta can be installed via BioConda, Docker, Singularity and Pip. However, we encourage to use [Conda](https://conda.io/projects/conda/en/latest/user-guide/install/index.html) or [Docker](https://www.docker.com/get-started)/[Singularity](https://sylabs.io/singularity) to automatically install all required 3rd party dependencies.\n\nIn all cases a mandatory [database](#database-download) must be downloaded.\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BioConda",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nconda install -c conda-forge -c bioconda bakta\n```\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Podman (Docker)",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "We maintain a Docker image `oschwengers/bakta` providing an entrypoint, so that containers can be used like an executable:\n\n```bash\npodman pull oschwengers/bakta\npodman run oschwengers/bakta --help\n```\n\nInstallation instructions and get-started guides: Podman [docs](https://podman.io/docs). For further convenience, we provide a shell script (`bakta-podman.sh`) handling Podman related parameters (volume mounting, user IDs, etc):\n\n```bash\nbakta-podman.sh --db <db-path> --output <output-path> <input>\n```\n\nFor experienced users and full functionality (`bakta_db` & `bakta_proteins`), an image without entrypoint might be a better option. For these cases, please use one of the [Biocontainer](https://quay.io/repository/biocontainers/bakta?tab=tags) images:\n\n```bash\nexport CONTAINER=\"quay.io/biocontainers/bakta:1.8.2--pyhdfd78af_0\"\npodman run -it --rm $CONTAINER bakta --help\npodman run -it --rm $CONTAINER bakta_db --help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pip",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```bash\npython3 -m pip install --user bakta\n```\n\nBakta requires the following 3rd party software tools which must be installed and executable to use the full set of features:\n\n- tRNAscan-SE (2.0.8) <https://doi.org/10.1101/614032> <http://lowelab.ucsc.edu/tRNAscan-SE>\n- Aragorn (1.2.38) <http://dx.doi.org/10.1093/nar/gkh152> <http://130.235.244.92/ARAGORN>\n- INFERNAL (1.1.4) <https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtt509> <http://eddylab.org/infernal>\n- PILER-CR (1.06) <https://doi.org/10.1186/1471-2105-8-18> <http://www.drive5.com/pilercr>\n- Pyrodigal (2.1.0) <https://doi.org/10.21105/joss.04296> <https://github.com/althonos/pyrodigal>\n- PyHMMER (0.10.0) <https://doi.org/10.21105/joss.04296> <https://github.com/althonos/pyhmmer>\n- Diamond (2.0.14) <https://doi.org/10.1038/nmeth.3176> <https://github.com/bbuchfink/diamond>\n- Blast+ (2.12.0) <https://www.ncbi.nlm.nih.gov/pubmed/2231712> <https://blast.ncbi.nlm.nih.gov>\n- AMRFinderPlus (3.10.23) <https://github.com/ncbi/amr>\n- DeepSig (1.2.5) <https://doi.org/10.1093/bioinformatics/btx818>\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999950836432573,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "- `<prefix>.tsv`: annotations as simple human readble TSV\n- `<prefix>.gff3`: annotations & sequences in GFF3 format\n- `<prefix>.gbff`: annotations & sequences in (multi) GenBank format\n- `<prefix>.embl`: annotations & sequences in (multi) EMBL format\n- `<prefix>.fna`: replicon/contig DNA sequences as FASTA\n- `<prefix>.ffn`: feature nucleotide sequences as FASTA\n- `<prefix>.faa`: CDS/sORF amino acid sequences as FASTA\n- `<prefix>.hypotheticals.tsv`: further information on hypothetical protein CDS as simple human readble tab separated values\n- `<prefix>.hypotheticals.faa`: hypothetical protein CDS amino acid sequences as FASTA\n- `<prefix>.json`: all (internal) annotation & sequence information as JSON\n- `<prefix>.txt`: summary as TXT\n- `<prefix>.png`: circular genome annotation plot as PNG\n- `<prefix>.svg`: circular genome annotation plot as SVG \nThe `<prefix>` can be set via `--prefix <prefix>`. If no prefix is set, Bakta uses the input file prefix. \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9410860595033244,
      "result": {
        "original_header": "Database",
        "type": "Text_excerpt",
        "value": "Latest database version: 5.1\nDB types: \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999280005963487,
      "result": {
        "original_header": "Genome Submission",
        "type": "Text_excerpt",
        "value": "Most genomes annotated with Bakta should be ready-to-submid to INSDC member databases GenBank and ENA. As a first step, please register your BioProject (e.g. PRJNA123456) and your locus_tag prefix (*e.g.* ESAKAI).\n```bash\n# annotate your genome in `--compliant` mode:\n$ bakta --db <db-path> -v --genus Escherichia --species \"coli O157:H7\" --strain Sakai --complete --compliant --locus-tag ESAKAI test/data/GCF_000008865.2.fna.gz\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "GenBank",
        "type": "Text_excerpt",
        "value": "Genomes are submitted to GenBank via Fasta (`.fna`) and SQN files. Therefore, `.sqn` files can be created with NCBI's new [table2asn](https://ftp.ncbi.nlm.nih.gov/asn1-converters/by_program/table2asn/) tool via Bakta's `.gff3` files.\nPlease, have a look at the [documentation]((https://www.ncbi.nlm.nih.gov/genbank/genomes_gff)) and have all additional files (template.txt) prepared:\n```bash\n# download table2asn for Linux\n$ wget https://ftp.ncbi.nlm.nih.gov/asn1-converters/by_program/table2asn/linux64.table2asn.gz\n$ gunzip linux64.table2asn.gz\n\n# or MacOS\n$ wget https://ftp.ncbi.nlm.nih.gov/asn1-converters/by_program/table2asn/mac.table2asn.gz\n$ gunzip mac.table2asn.gz\n\n$ chmod 755 linux64.table2asn.gz mac.table2asn.gz\n\n# create the SQN file:\n$ linux64.table2asn -M n -J -c w -t template.txt -V vbt -l paired-ends -i GCF_000008865.2.fna -f GCF_000008865.2.gff3 -o GCF_000008865.2.sqn -Z\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999998927319269,
      "result": {
        "original_header": "ENA",
        "type": "Text_excerpt",
        "value": "Genomes are submitted to ENA as EMBL (`.embl`) files via EBI's [Webin-CLI](https://ena-docs.readthedocs.io/en/latest/submit/general-guide/webin-cli.html) tool.\nPlease have all additional files (manifest.tsv, chrom-list.tsv) prepared as described [here](https://ena-docs.readthedocs.io/en/latest/submit/fileprep/assembly.html#flat-file).\n```bash\n# download ENA Webin-CLI\n$ wget https://github.com/enasequence/webin-cli/releases/download/v4.0.0/webin-cli-4.0.0.jar\n\n$ gzip -k GCF_000008865.2.embl\n$ gzip -k chrom-list.tsv\n$ java -jar webin-cli-4.0.0.jar -submit -userName=<EMAIL> -password <PWD> -context genome -manifest manifest.tsv\n```\nExemplarey manifest.tsv and chrom-list.tsv files might look like:\n```bash\n$ cat chrom-list.tsv\nSTUDY    PRJEB44484\nSAMPLE    ERS6291240\nASSEMBLYNAME    GCF\nASSEMBLY_TYPE    isolate\nCOVERAGE    100\nPROGRAM    SPAdes\nPLATFORM    Illumina\nMOLECULETYPE    genomic DNA\nFLATFILE    GCF_000008865.2.embl.gz\nCHROMOSOME_LIST    chrom-list.tsv.gz\n\n$ cat chrom-list.tsv\ncontig_1    contig_1    circular-chromosome\ncontig_2    contig_2    circular-plasmid\ncontig_3    contig_3    circular-plasmid\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9952948989477026,
      "result": {
        "original_header": "Protein bulk annotation",
        "type": "Text_excerpt",
        "value": "Examples:\n```bash\nbakta_proteins --db <db-path> input.fasta\n\nbakta_proteins --db <db-path> --prefix test --output test --proteins special.faa --threads 8 input.fasta\n```\n \n### Usage\n```bash\nusage: bakta_proteins [--db DB] [--output OUTPUT] [--prefix PREFIX] [--force] [--proteins PROTEINS] [--help] [--verbose] [--debug] [--threads THREADS] [--tmp-dir TMP_DIR] [--version] <input>\n\nRapid & standardized annotation of bacterial genomes, MAGs & plasmids\n\npositional arguments:\n  <input>               Protein sequences in (zipped) fasta format\n\nInput / Output:\n  --db DB, -d DB        Database path (default = <bakta_path>/db). Can also be provided as BAKTA_DB environment variable.\n  --output OUTPUT, -o OUTPUT\n                        Output directory (default = current working directory)\n  --prefix PREFIX, -p PREFIX\n                        Prefix for output files\n  --force, -f           Force overwriting existing output folder\n\nAnnotation:\n  --proteins PROTEINS   Fasta file of trusted protein sequences for annotation\n\nGeneral:\n  --help, -h            Show this help message and exit\n  --verbose, -v         Print verbose information\n  --debug               Run Bakta in debug mode. Temp data will not be removed.\n  --threads THREADS, -t THREADS\n                        Number of threads to use (default = number of available CPUs)\n  --tmp-dir TMP_DIR     Location for temporary files (default = system dependent auto detection)\n  --version, -V         show program's version number and exit\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9993250065276817,
      "result": {
        "original_header": "Genome plots",
        "type": "Text_excerpt",
        "value": "Examples:\n```bash\nbakta_plot input.json\n\nbakta_plot --output test --prefix test --config config.yaml --sequences 1,2 input.json\n```\n \n### Usage\n```bash\nusage: bakta_plot [--config CONFIG] [--output OUTPUT] [--prefix PREFIX] [--sequences SEQUENCES] [--type {features,cog}] [--help] [--verbose] [--debug] [--tmp-dir TMP_DIR] [--version] <input>\n\nRapid & standardized annotation of bacterial genomes, MAGs & plasmids\n\npositional arguments:\n  <input>               Bakta annotations in JSON format\n\nInput / Output:\n  --config CONFIG, -c CONFIG\n                        Plotting configuration in YAML format\n  --output OUTPUT, -o OUTPUT\n                        Output directory (default = current working directory)\n  --prefix PREFIX, -p PREFIX\n                        Prefix for output files\n\nPlotting:\n  --sequences SEQUENCES\n                        Sequences to plot: comma separated number or name (default = all, numbers one-based)\n  --type {features,cog}\n                        Plot type: feature/cog (default = features)\n\nGeneral:\n  --help, -h            Show this help message and exit\n  --verbose, -v         Print verbose information\n  --debug               Run Bakta in debug mode. Temp data will not be removed.\n  --tmp-dir TMP_DIR     Location for temporary files (default = system dependent auto detection)\n  --version             show program's version number and exit\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8143543173749774,
      "result": {
        "original_header": "Auxiliary scripts",
        "type": "Text_excerpt",
        "value": "Of course, pull requests are welcome ;-)\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.959923878106046,
      "result": {
        "original_header": "Issues and Feature Requests",
        "type": "Text_excerpt",
        "value": "- a detailed description of the issue\n- command line output\n- log file (`<prefix>.log`)\n- result file (`<prefix>.json`) *if possible*\n- a reproducible example of the issue with an input file that you can share *if possible*\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8677982509526866,
      "result": {
        "original_header": "Replicon meta data table",
        "type": "Text_excerpt",
        "value": "Example: \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.88238858615211,
      "result": {
        "original_header": "Protein bulk annotation",
        "type": "Text_excerpt",
        "value": "Examples:\n```bash\nbakta_proteins --db <db-path> input.fasta\n\nbakta_proteins --db <db-path> --prefix test --output test --proteins special.faa --threads 8 input.fasta\n```\n \n### Usage\n```bash\nusage: bakta_proteins [--db DB] [--output OUTPUT] [--prefix PREFIX] [--force] [--proteins PROTEINS] [--help] [--verbose] [--debug] [--threads THREADS] [--tmp-dir TMP_DIR] [--version] <input>\n\nRapid & standardized annotation of bacterial genomes, MAGs & plasmids\n\npositional arguments:\n  <input>               Protein sequences in (zipped) fasta format\n\nInput / Output:\n  --db DB, -d DB        Database path (default = <bakta_path>/db). Can also be provided as BAKTA_DB environment variable.\n  --output OUTPUT, -o OUTPUT\n                        Output directory (default = current working directory)\n  --prefix PREFIX, -p PREFIX\n                        Prefix for output files\n  --force, -f           Force overwriting existing output folder\n\nAnnotation:\n  --proteins PROTEINS   Fasta file of trusted protein sequences for annotation\n\nGeneral:\n  --help, -h            Show this help message and exit\n  --verbose, -v         Print verbose information\n  --debug               Run Bakta in debug mode. Temp data will not be removed.\n  --threads THREADS, -t THREADS\n                        Number of threads to use (default = number of available CPUs)\n  --tmp-dir TMP_DIR     Location for temporary files (default = system dependent auto detection)\n  --version, -V         show program's version number and exit\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9238223860268355,
      "result": {
        "original_header": "Genome plots",
        "type": "Text_excerpt",
        "value": "Examples:\n```bash\nbakta_plot input.json\n\nbakta_plot --output test --prefix test --config config.yaml --sequences 1,2 input.json\n```\n \n### Usage\n```bash\nusage: bakta_plot [--config CONFIG] [--output OUTPUT] [--prefix PREFIX] [--sequences SEQUENCES] [--type {features,cog}] [--help] [--verbose] [--debug] [--tmp-dir TMP_DIR] [--version] <input>\n\nRapid & standardized annotation of bacterial genomes, MAGs & plasmids\n\npositional arguments:\n  <input>               Bakta annotations in JSON format\n\nInput / Output:\n  --config CONFIG, -c CONFIG\n                        Plotting configuration in YAML format\n  --output OUTPUT, -o OUTPUT\n                        Output directory (default = current working directory)\n  --prefix PREFIX, -p PREFIX\n                        Prefix for output files\n\nPlotting:\n  --sequences SEQUENCES\n                        Sequences to plot: comma separated number or name (default = all, numbers one-based)\n  --type {features,cog}\n                        Plot type: feature/cog (default = features)\n\nGeneral:\n  --help, -h            Show this help message and exit\n  --verbose, -v         Print verbose information\n  --debug               Run Bakta in debug mode. Temp data will not be removed.\n  --tmp-dir TMP_DIR     Location for temporary files (default = system dependent auto detection)\n  --version             show program's version number and exit\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/oschwengers/bakta/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "annotation, bacteria, bacterial-genomes, bioinformatics, genome-annotation, mag, metagenome-assembled-genomes, microbial-genomics, plasmids"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bakta"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "oschwengers"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/bakta/"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 559323,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 23800,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Common Workflow Language",
        "size": 8138,
        "type": "Programming_language",
        "value": "Common Workflow Language"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 4738,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2315,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 485,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://ena-docs.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2024-07-17T21:05:14Z",
        "date_published": "2024-07-18T07:45:37Z",
        "description": "This is the fourth v1.9 patch release (v1.9.4).\r\n\r\n# Fixes\r\n- Fixed CDS gene translation in meta mode: #301 (Thanks @ohickl)\r\n- Fixed the CRISPR parser for short (<10 nt) spacer sequences: #299 #302 (Thanks @ohickl)\r\n- Fixed Pyrodigal and Pyhmmer version detection: #294  (Thanks @EricDeveaud)\r\n\r\n# Improvements\r\n- Skip certain genes in user-provided regions: #288 #303 (Thanks @Dx-wmc)",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.9.4",
        "name": "v1.9.4",
        "release_id": 165877278,
        "tag": "v1.9.4",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.9.4",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/165877278",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/165877278",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.9.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2024-03-08T09:12:52Z",
        "date_published": "2024-03-08T09:13:09Z",
        "description": "This is the third v1.9 patch release (v1.9.3).\r\n\r\n# Fixes\r\n- fixed a regex in the CRISPR parser skipping spacers in some special cases: c7478033265ccb2218582f9d3121825dbf7ce91a #265 (Thanks @ZarulHanifah)\r\n- fixed wrong Piler-CR CRISPR array stop position omitting the last spacer: #276\r\n- tmp. pinned Diamond version to `v2.1.8` due to an upstream bug: 0dd84fb60d9fc03c280287af1d237da2fd7d74db\r\n\r\n# Improvements\r\n- added parent ID to CRISPR repeat/spacer features in GFF3 outputs: ae71c09199981004db8c870d198e8ce11b2e60f8",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.9.3",
        "name": "v1.9.3",
        "release_id": 145430195,
        "tag": "v1.9.3",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.9.3",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/145430195",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/145430195",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.9.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2024-01-23T14:28:05Z",
        "date_published": "2024-01-23T14:29:54Z",
        "description": "This is the second v1.9 patch release (v1.9.2).\r\n\r\n# Fixes\r\n- Changed tRNA pseudogene type to unknown in INSDC compliant mode: https://github.com/oschwengers/bakta/commit/bb8366aa9856994eca6687fd5325f09b278b4e6d\r\n- Updated DB build scripts for v5.1: #270\r\n- Allow uneven number of CRISPR spacers/repeats: #265 #267 https://github.com/oschwengers/bakta/commit/7c1a7e88cf3e2c56174e9aa3ab39374ee53c3011 (Thanks @ZarulHanifah, @marade)\r\n- Fixed wrong complete sequence inference for some cases: https://github.com/oschwengers/bakta/commit/231788bfb3a98dfcd1f2668e9d0a0b36f670a1b0 https://github.com/oschwengers/bakta/commit/24a43b9d137cc0d210f6a98ed526b3cc63d66e7e\r\n- Fixed minor issues with DB downloads/updates: https://github.com/oschwengers/bakta/commit/4d609de8a2b553fcbd43b57222edfcc04a65362a https://github.com/oschwengers/bakta/commit/1a0413c6562a26b71b343701fdb28141dad4eb18 https://github.com/oschwengers/bakta/commit/ff836d166be82ebe6216b7961e65a68132c5df50",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.9.2",
        "name": "v1.9.2",
        "release_id": 138133052,
        "tag": "v1.9.2",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/138133052",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/138133052",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2023-11-29T10:44:44Z",
        "date_published": "2023-11-29T10:48:43Z",
        "description": "This is the first v1.9 patch release (v1.9.1).\r\n\r\n## Fixes\r\n\r\n- Fixed a Python `KeyError` when both `--regions` and `--keep-contig-headers` are used: d3d7a98973e61d4f8fc5625ea41ee4984be4ec60 (Thanks @thorellk)\r\n- Fixed a bzip2 error in the Docker build process: 73ac39dd2bc3ee1063648ebc57322de038c37218 (Thanks @lukasjelonek)",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.9.1",
        "name": "v1.9.1 ",
        "release_id": 131727315,
        "tag": "v1.9.1",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/131727315",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/131727315",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2023-11-27T16:45:40Z",
        "date_published": "2023-11-27T16:59:31Z",
        "description": "This is the ninth minor release (v1.9) introducing user-provided feature regions and various minor improvements.\r\n\r\nCompatible database scheme version: 5\r\n\r\n## New features\r\n* Support _a priori_ user-provided feature regions via `--regions` either in Genbank or GFF3 format (currently, only `CDS` features are supported). CDS coordinates are imported, supersede _de novo_ predicted `CDS`, and are subject to the regular internal annotation workflow. To provide functional annotation, as well use `--proteins`: #216 #245 #247 #250 #259 (Thanks @marade @PengfanZhang @simone-pignotti @thorellk)\r\n\r\n## Improvements\r\n* Extract & export CRISPR spacer & repeat sequences: #171 #249 (Thanks @alexweisberg)\r\n* Add support for Pyrodigal v3: #240  #244 (Thanks @jsgounot)\r\n* Replace HMMER with PyHMMER: #219 (Thanks @jhahnfeld)\r\n* Re-activate parallel pyrodigal gene prediction: #252 (Thanks @althonos)\r\n* Introduce auxiliary scripts: #246 #251 (Thanks @AhmedElsherbini)\r\n* Add Podman wrapper script: bd50faabfe7a2cbad7c63f453baae854503a9d46\r\n* Update dependencies to latest versions: 3260441ed181176c71e39125cb58a1e0df69b7dc 33c02f92305c51d3741172d3851bedc7463f83c8 a1d2ffeb465cc9afbb124fe903a877b3ef562d22 b2656722dd5199416b308291c6c7188ccd4f9f58 1a2c48ee177800e21d3ff3e2356fc253407ecd65\r\n\r\n## Fixes\r\n* Fix PyPI CD: #231\r\n* Add missing `--force` parameter to Docker wrapper script: f39434ed670d1310a144df9defcd3f556e36ffbf\r\n* Fix wrong runtime report: #243 \r\n\r\n**Full Changelog**: https://github.com/oschwengers/bakta/compare/v1.8.2...v1.9.0",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.9.0",
        "name": "v1.9 - Here's my region of interest",
        "release_id": 131528877,
        "tag": "v1.9.0",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/131528877",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/131528877",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2023-08-24T15:02:56Z",
        "date_published": "2023-08-24T15:03:16Z",
        "description": "This is the second v1.8 patch release (v1.8.2).\r\n\r\nImprovements:\r\n- Replacd HMMER by PyHMMER: https://github.com/oschwengers/bakta/commit/3415e89924dc3699651cc959414f3c7bd5954de7 (Thanks @jhahnfeld)\r\n- Refactored & improved CI scripts\r\n- Refactored the code\r\n- Tweaked code to expand required BioPython versions: https://github.com/oschwengers/bakta/commit/6a88c4bbbd2b2f2c7a7fb30f9de4bd2a67a980c0 (Thanks @alexweisberg)\r\n- Deactivated `--force` parameter for the current working directory`: https://github.com/oschwengers/bakta/commit/a039bece7a8d76ed0d5cb1eeb94dd01b63d4403d\r\n- Added Pyrodigal to dependency checks: https://github.com/oschwengers/bakta/commit/17bcfc99c48f5c221ee94e5259d52ab0074ad41a\r\n\r\nBug Fixes:\r\n- Fixed and improved the CWL wrapper: #221 #229 #230 (Thanks @bartns & @jjkoehorst)",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.8.2",
        "name": "v1.8.2",
        "release_id": 118576444,
        "tag": "v1.8.2",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.8.2",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/118576444",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/118576444",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.8.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2023-06-01T08:50:58Z",
        "date_published": "2023-06-01T09:02:10Z",
        "description": "This is the first v1.8 patch release (v1.8.1) catching up an overlooked PR.\r\n\r\nImprovements:\r\n- Added all valid expert system hits to the final `dbxrefs` and `JSON` results: #198 #199 (Thanks @davidtong28) \r\n\r\nImportant:\r\n#199 introduced a breaking change in the JSON data structure of the `feature->expert` section. `expert` was changed from a dictionary (`expert system` -> `hit`) to a flat list of expert hits now having a new `type` field.",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.8.1",
        "name": "v1.8.1",
        "release_id": 105646352,
        "tag": "v1.8.1",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/105646352",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/105646352",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2023-05-30T14:56:46Z",
        "date_published": "2023-05-30T14:57:46Z",
        "description": "This is the eighth minor release (v1.8) introducing a new output option and various minor improvements.\r\n\r\nCompatible database scheme version: 5\r\n\r\nImprovements:\r\n- Introduced a new `--force` option explicitly allowing to overwrite existing data: #200 (Thanks @Dx-wmc)\r\n- Increased sensitivity of protein sequence expert system: #197 (Thanks @davidtong28)\r\n- Improved compatibility of FNA output with NCBI Bankit Submission: #201 (Thanks @menickname)\r\n- Improved `--plasmid` parameter functionality: #201 https://github.com/oschwengers/bakta/commit/426bfd39c1f83cf8ed240b61be2b867452bcf573\r\n- Introduced output of `bakta_proteins` full annotation results as JSON: #204 (Thanks @Rridley7)\r\n- Refactored QC and description of imported genome sequences: https://github.com/oschwengers/bakta/commit/af835b4313d3cb5931d68616d71d0d2623d13afc\r\n\r\nFixes:\r\n- Fixed rare occasions of wrong `5'` / `3'` (\"prime\") characters in product descriptions: #215 (Thanks @axbazin)",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.8.0",
        "name": "v1.8 - May the --force (parameter) be with you",
        "release_id": 105377008,
        "tag": "v1.8.0",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/105377008",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/105377008",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2023-02-24T14:53:45Z",
        "date_published": "2023-02-24T15:18:25Z",
        "description": "This is the seventh minor release (v1.7) introducing a lightweight database version, various gene symbol improvements, and a metagenome mode.\r\n\r\nCompatible database scheme version: 5\r\n\r\nNew features:\r\n- Introduced a lightweight database version: https://github.com/oschwengers/bakta/pull/196 (Thanks @tseemann))\r\n- Introduced an operon gene symbol harmonization feature: https://github.com/oschwengers/bakta/pull/190\r\n- Introduced a simple metagenome mode: https://github.com/oschwengers/bakta/issues/191\r\n- Added IS transposase to protein expert system: https://github.com/oschwengers/bakta/issues/10\r\n\r\nImprovements:\r\n- Improved CDS gene symbols: https://github.com/oschwengers/bakta/issues/186\r\n- Amended tRNA & rRNA gene symbols: https://github.com/oschwengers/bakta/issues/192\r\n- Amended uppercase ncRNA gene symbols: https://github.com/oschwengers/bakta/issues/194\r\n- Added model IDs and dbxrefs to expert annotation systems: https://github.com/oschwengers/bakta/issues/183 (Thanks @davidtong28)\r\n- Updated to Pyrodigal v2.1.0 fixing a bug in the SD motif-detection on reverse contig edges: https://github.com/oschwengers/bakta/commit/599fe709a090331ab6fb7bd3398a5a8ca9899688\r\n\r\nFixes:\r\n- Fixed system-wide db path stored in software volume: https://github.com/oschwengers/bakta/pull/177 (Thanks @standage)",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.7.0",
        "name": "v1.7 - Lightweight database & harmonized gene symbols",
        "release_id": 92533240,
        "tag": "v1.7.0",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/92533240",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/92533240",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2022-12-06T09:29:34Z",
        "date_published": "2022-12-06T09:30:52Z",
        "description": "This is the first v1.6 patch release (v1.6.1) fixing 2 bugs.\r\n\r\nImprovements:\r\n- Deactivated Circos' max contig limit: https://github.com/oschwengers/bakta/commit/0962df7243002875e8126aac85dd55b05034bdb6\r\n\r\nBug fixes:\r\n- Fixed P(y)rodigal `meta` mode for short sequences and provided training files: https://github.com/oschwengers/bakta/issues/175 (Thanks @pimarin)\r\n- Fixed an unbound variable in `bakta_plot`: https://github.com/oschwengers/bakta/issues/174 (Thanks @Rridley7)\r\n",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.6.1",
        "name": "v1.6.1",
        "release_id": 85113512,
        "tag": "v1.6.1",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/85113512",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/85113512",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2022-11-24T12:50:16Z",
        "date_published": "2022-11-24T13:48:15Z",
        "description": "This is the sixth minor release (v1.6) introducing the creation of circular genome/plasmid plots and fixing false *de novo* gene predictions by Prodigal.\r\n\r\nCompatible database scheme version: 4\r\n\r\nNew features:\r\n- Creation of circular genome/plasmid plots using Circos: https://github.com/oschwengers/bakta/issues/163 https://github.com/oschwengers/bakta/pull/166\r\n\r\nImprovements:\r\n- Replace [Prodigal](https://github.com/hyattpd/Prodigal) by [pyrodigal](https://github.com/althonos/pyrodigal) fixing false gene prediction scores on reverse strands: https://github.com/oschwengers/bakta/issues/149 https://github.com/oschwengers/bakta/pull/165 (Thanks @jhahnfeld, @althonos)\r\n- Improve `tRNA` product descriptions including anticodons: https://github.com/oschwengers/bakta/issues/170 https://github.com/oschwengers/bakta/pull/173 (Thanks @acvill)\r\n\r\nFixes:\r\n- Fix issues with IUPAC ambiguity codes on tRNA prediction using tRNAscan-SE: https://github.com/oschwengers/bakta/issues/150",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.6.0",
        "name": "v1.6 - Draw me a genome, using P(y)rodigal",
        "release_id": 84094772,
        "tag": "v1.6.0",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/84094772",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/84094772",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2022-09-20T12:54:45Z",
        "date_published": "2022-09-20T12:58:34Z",
        "description": "This is the first v1.5 patch release (v1.5.1) fixing a crucial bug causing Diamond runtime errors during the pseudogene detection step. A patch upgrade is highly recommended!\r\n\r\nImprovements:\r\n- Added a `--debug` option in order to keep temporary files for debugging purposes: #137 #141 (Thanks @EricDeveaud)\r\n- Bakta now obeys the number of available CPUs instead of mere CPU counts on Linux: #135 #139 (Thanks @EricDeveaud)\r\n- The Docker image now allows the direct execution of Bakta via Singularity's `exec` mode in Nextflow: #138 #144 (Thanks @rujinlong & @lukasjelonek)\r\n\r\nBug fixes:\r\n- Fixed an `IndexError` during the pseudogene detection: #130 #133 (Thanks @samnooij & @jhahnfeld)\r\n- Fixed an off-by-1 error: #131 (Thanks @jhahnfeld)",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.5.1",
        "name": "v1.5.1",
        "release_id": 77386796,
        "tag": "v1.5.1",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/77386796",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/77386796",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2022-08-30T15:32:11Z",
        "date_published": "2022-08-30T15:52:33Z",
        "description": "This is the fifth minor release (v1.5) introducing the detection of pseudogenes and KEGG Kofams, along with several improvements.\r\n\r\nCompatible database scheme version: 4\r\n\r\nNew features:\r\n- detection of CDS pseudogenes: #4 (Thanks @jhahnfeld)\r\n- pre-annotation of PSCs with KEGG's Kofams also massively increasing the number of available E.C. numbers: #9 \r\n\r\nImprovements:\r\n- pre-annotation of PSCs with NCBI's NCBIfams leading to many improved functional annotations: https://github.com/oschwengers/bakta/commit/e268df28e848fcc28c318062d6be70421245d5d7 #102 (Thanks @hkaspersen)\r\n- add CI tests for species / strain parameters: https://github.com/oschwengers/bakta/commit/a98670bad4a6fafd547a791f2f08de412525b929\r\n- revert oriCVT inference tags in compliant mode: https://github.com/oschwengers/bakta/commit/4f31ab41bf97373d9483a7708ba4d2b16697dea7\r\n- improve the functional pre-annotation: https://github.com/oschwengers/bakta/commit/46e645a9d20084ad9e784467ebea971c87223837 https://github.com/oschwengers/bakta/commit/de55d305d61e6f8fdb6926761a111c4d02b670c4 https://github.com/oschwengers/bakta/commit/1893220081b4f8452b0ab0337fb3973c41b9a538 https://github.com/oschwengers/bakta/commit/183557432c582df8c6c714fd166b58eb33972a57\r\n",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.5.0",
        "name": "v1.5 - Pseudogenes, they're coming...",
        "release_id": 75795169,
        "tag": "v1.5.0",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/75795169",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/75795169",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2022-06-09T09:47:13Z",
        "date_published": "2022-06-09T09:47:51Z",
        "description": "This is the second v1.4 patch release (v1.4.2) fixing wrong EC annotations in compliant mode.\r\n\r\nImprovements:\r\n- added GFF3 inference tags in compliant mode for ncRNA region, CRISPR, oriC, oriV, oriT: https://github.com/oschwengers/bakta/commit/85c9c4215fed5ffa7e7e846270db1ecec41c9a37 https://github.com/oschwengers/bakta/commit/d81d9b73667a8ed96d78b246a02e70d7f94b8922 https://github.com/oschwengers/bakta/commit/a5b31af772593f2a63cc8acd0433ba9465bfa8dc\r\n- improved chromosome/plasmid auto detection: https://github.com/oschwengers/bakta/commit/9a83055a586a025e5f3e673ff09175f95504aede\r\n- refactored code: https://github.com/oschwengers/bakta/commit/606c23742362bfa2dcd755dbec461f45a69d152e https://github.com/oschwengers/bakta/commit/21e647038932ed8426afcca7245d5bcdeee0f31d https://github.com/oschwengers/bakta/commit/b36172c274e2c187aacba19b79434f25d611576c \r\n\r\nBug fixes:\r\n- fixed EC_number annotation in compliant mode: https://github.com/oschwengers/bakta/commit/2960e6bdac1bc35a36d8696a91eb5db335ec27fa",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.4.2",
        "name": "v1.4.2",
        "release_id": 69035639,
        "tag": "v1.4.2",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/69035639",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/69035639",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2022-05-17T11:48:36Z",
        "date_published": "2022-05-17T11:49:24Z",
        "description": "This is the first v1.4 patch release (v1.4.1) fixing a tiny simple but critical bug causing all imported contigs being treated as complete sequences. A patch upgrade is highly recommended!\r\n\r\nImprovements:\r\n- removed trailing asterik chars on AA import https://github.com/oschwengers/bakta/issues/97: https://github.com/oschwengers/bakta/commit/a447f327a4b7344883c1154e12ba7287ff8d86a2\r\n- caught AA bulk annotation import errors https://github.com/oschwengers/bakta/issues/97: https://github.com/oschwengers/bakta/commit/58cedf148a847e946f21f2115b69244eba1cd692\r\n\r\nBug fixes:\r\n- fixed fasta import contig attribute types https://github.com/oschwengers/bakta/issues/108\r\n- fixed dnaA/repA revisions https://github.com/oschwengers/bakta/issues/108 (Thanks @conmeehan)\r\n\r\n",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.4.1",
        "name": "v1.4.1",
        "release_id": 67065925,
        "tag": "v1.4.1",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/67065925",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/67065925",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2022-03-22T15:51:04Z",
        "date_published": "2022-03-22T15:55:20Z",
        "description": "This is the fourth minor release (v1.4) introducing the detection of translational exceptions and protein bulk annotations.\r\n\r\nCompatible database scheme version: 3\r\n\r\nNew features:\r\n- detection & annotation of selenocysteine translational exceptions: #100 \r\n- support for protein bulk annotations (direct annotation of proteins w/o genomes): #101 (Thanks @conmeehan)\r\n\r\nImprovements:\r\n- maintainability improvements like Python type hints code refactorings: #96 https://github.com/oschwengers/bakta/commit/943485c12fc60a0f07f2b72c38dae43c25e21155\r\n- added a large(r) genome test dataset and a corresponding Nextflow script: https://github.com/oschwengers/bakta/commit/32e0f9e847f2b39abef58d3c3e694a4146d03f1e\r\n- add more CI tests: https://github.com/oschwengers/bakta/commit/ce2c68f972029e7b7b11782cb18c5b2fd199f653 https://github.com/oschwengers/bakta/commit/4549f2582ec6f7388fa6f6ad177ea288c1066a1c\r\n\r\nBug fixes:\r\n- fixed molecular weight in hypothetical tsv output https://github.com/oschwengers/bakta/commit/d83c1b8fa1604a98b36710d14c96514150a8e998\r\n\r\nAnd of course all improvements and bug fixes from all v1.3.x patch releases.",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.4.0",
        "name": "v1.4 - Some exceptional translations",
        "release_id": 62460340,
        "tag": "v1.4.0",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/62460340",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/62460340",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2022-02-07T11:06:18Z",
        "date_published": "2022-02-07T11:09:04Z",
        "description": "This is the third v1.3 patch release (v1.3.3).\r\n\r\nThis is a quick fix reverting an `alive-progress` version bump to `v2.1.0` that is not available via Conda. Sorry for any inconvenience caused.\r\n\r\nBug fixes:\r\n- fixed a file permission issue on bakta_db update: https://github.com/oschwengers/bakta/commit/de42d3fad5cbe574b6c2b7a643ea246c247a2017\r\n- pinned `alive-progress` version to `v1.6.2` to fix potential API errors: https://github.com/oschwengers/bakta/commit/dbc79acc40b3999da916f2aaa319e2de3c432db0 https://github.com/oschwengers/bakta/commit/60ac3ed02537628bb9264d18e16080e4a9ee5b54",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.3.3",
        "name": "v1.3.3",
        "release_id": 58879503,
        "tag": "v1.3.3",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/58879503",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/58879503",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2022-02-07T08:43:43Z",
        "date_published": "2022-02-07T09:36:39Z",
        "description": "This is the second v1.3 patch release (v1.3.2).\r\n\r\nBug fixes:\r\n- fixed a file permission issue on bakta_db update: https://github.com/oschwengers/bakta/commit/de42d3fad5cbe574b6c2b7a643ea246c247a2017\r\n- bumped alive-progress version to >=v2.1.0 to fix potential API errors: https://github.com/oschwengers/bakta/commit/dbc79acc40b3999da916f2aaa319e2de3c432db0",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.3.2",
        "name": "v1.3.2",
        "release_id": 58871240,
        "tag": "v1.3.2",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/58871240",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/58871240",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2022-01-31T15:58:01Z",
        "date_published": "2022-01-31T15:58:41Z",
        "description": "This is the first v1.3 patch release (v1.3.1).\r\n\r\nBug fixes:\r\n- fixed the locus-tag checks: use a more relaxed format as default and INSDC restrictions on `--compliant`: https://github.com/oschwengers/bakta/commit/e2651c3c7c85efbbceacff1ac28482b3c636b536 (Thanks @taylorreiter)\r\n- skip `/pseudo` annotated genes in `--proteins`-provided GenBank files: https://github.com/oschwengers/bakta/commit/0f0165d0909ef26be29477751db301e68754f233 (Thanks Charlotte Reuschel)",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.3.1",
        "name": "v1.3.1",
        "release_id": 58348335,
        "tag": "v1.3.1",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/58348335",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/58348335",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2022-01-24T07:17:06Z",
        "date_published": "2022-01-24T07:33:24Z",
        "description": "This is the third minor release (v1.3) introducing a new feature and many improvements and bug fixes.\r\n\r\nCompatible database scheme version: 3\r\n\r\nNew features:\r\n- prediction of signal peptides via [DeepSig](https://github.com/BolognaBiocomp/deepsig): #32  (Thanks @Anna-Rehm)\r\n\r\nImprovements:\r\n- provide summary with genome & annotation statistics as `.txt` file: #88 (Thanks @hkaspersen)\r\n- accept user provided proteins in GenBank format: #89 (Thanks @Tonny-zhou)\r\n- removed alignment gaps (`-`) in input sequences: #87 (Thanks @RotimiDada)\r\n- improved sORF overlap filter runtime performance: https://github.com/oschwengers/bakta/commit/cb204fbe52539abd92059b67b08b5f3352dea0b0\r\n- improved outputs: https://github.com/oschwengers/bakta/commit/76e07a4db073bf839a2280e8fad1951d44e6c9e8 https://github.com/oschwengers/bakta/commit/90bfe99c65565036c0943e70fd9daa4d2321f610\r\n- added more checks & tests: https://github.com/oschwengers/bakta/commit/b779e1fda82302e9156af0c1be9a7285e263c21d https://github.com/oschwengers/bakta/commit/4e6c35d3177977e9cec9bcf6cc86116f55cdd590 https://github.com/oschwengers/bakta/commit/f4103f09b7dc6edb49164e82a83a9b931d42eee6 https://github.com/oschwengers/bakta/commit/08ebb037bca1e976d102fe293d775a70b80ebd36 https://github.com/oschwengers/bakta/commit/1672a876141711f22d1cc8dd930a6f397458616d https://github.com/oschwengers/bakta/commit/26a8ed2f30eff456b808f62b0646039f566ff3b7\r\n- added `--gram` to CWL file: https://github.com/oschwengers/bakta/commit/22463196c55bb93f20f6161ade76512a0bb36b2e\r\n\r\nBug fixes:\r\n- fixed tmRNA predictions that cross sequence origins: #90 (Thanks @LuisFF)\r\n- moved oriC/T/V product to Note in INSDC and compliant GFF3 outputs: https://github.com/oschwengers/bakta/commit/2f5cb1dae8da57c6d00dfbe66c0b3d48769b128e https://github.com/oschwengers/bakta/commit/716302e63b66c34a0e30bcea83c8818b6a0d2255 https://github.com/oschwengers/bakta/commit/5e1a0d831fa4d948aa459a5b8340f2a18afa2a6c\r\n- fixed sequence description on Fasta import: https://github.com/oschwengers/bakta/commit/bfdf67f53ed0e3995a4cdaa8c227e12c9b122848\r\n- fixed Fasta import log error: https://github.com/oschwengers/bakta/commit/52096727d857d44e98cfbb821094dbc8853b4a8b\r\n- fixed EDAM out types in CWL file: https://github.com/oschwengers/bakta/commit/a1a0ad116f1a0e8133aa41877f3b67af599820a6\r\n\r\nAnd of course all improvements and bug fixes from all v1.2.x patch releases.",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.3.0",
        "name": "v1.3 - Quo vadis, protein?",
        "release_id": 57573513,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/57573513",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/57573513",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2021-11-30T10:17:34Z",
        "date_published": "2021-11-30T10:26:18Z",
        "description": "This is the 4th v1.2 patch release (v1.2.4) fixing a database download issue.\r\n\r\nBug fixes:\r\n- fixed the database download/update logic by restoring an accidentally removed URL: https://github.com/oschwengers/bakta/commit/247a0475ecd7570e094e6c85f15c2f8893e88369 (Thanks @andreaniml)",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.2.4",
        "name": "v1.2.4",
        "release_id": 54309021,
        "tag": "v1.2.4",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/54309021",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/54309021",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2021-11-25T14:10:39Z",
        "date_published": "2021-11-25T14:20:06Z",
        "description": "This is the third v1.2 patch release (v1.2.3) providing some minor improvements and a bug fix.\r\n\r\nCompatible database scheme version: v3\r\n\r\nImprovements:\r\n- added several CI argument tests: https://github.com/oschwengers/bakta/commit/e26b5f56d1aa02563bc71ca6d6b9700c181c07fa https://github.com/oschwengers/bakta/commit/f5c57efd63fb2bdbfb9185fc765299652fdb159c https://github.com/oschwengers/bakta/commit/af20f66b133d5fc70eaaae04af4099eaa737c2c0 https://github.com/oschwengers/bakta/commit/dfc9a66cbec94727a4da10badbf8b688f91cff35 https://github.com/oschwengers/bakta/commit/a37b5b54237a046f655c1b95049cb17d80c8a65c\r\n- added locus and locus-tag prefix argument checks: https://github.com/oschwengers/bakta/commit/842437b5050a23afbb5ce6c6708cae18d94efb77 https://github.com/oschwengers/bakta/commit/31fd72e7881aa23ad2c51496729ca0550b894540 https://github.com/oschwengers/bakta/commit/c530e4c1ad8bd0ba68c6302e04a507df546f4170 https://github.com/oschwengers/bakta/commit/8e27f6834beb4b028eacd8d0954237a15195755c https://github.com/oschwengers/bakta/commit/8c58851acebd01fc33e09dd291049e00384c1e60\r\n- polished readme and error messages \r\n- added citation information\r\n\r\nBug fixes:\r\n- fixed the creation of a user defined tmp directory: https://github.com/oschwengers/bakta/commit/753e6e80d49ddfe285f6225c8f3347877bafe526",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.2.3",
        "name": "v1.2.3",
        "release_id": 54078178,
        "tag": "v1.2.3",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/54078178",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/54078178",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2021-10-18T13:21:09Z",
        "date_published": "2021-10-18T13:22:14Z",
        "description": "This is the second v1.2 patch release (v1.2.2) providing a couple of improvements and bug fixes.\r\n\r\nCompatible database scheme version: v3\r\n\r\nImprovements:\r\n- set BLAST_USAGE_REPORT environment variable to `false` forestalling `blastn` to hang for 90 secs if no internet connection is available\r\n- add a check for duplicated input sequence IDs: https://github.com/oschwengers/bakta/commit/888bb9b06bda62f88d8a93e0dfbd85eb7cf50e3e (Thanks @joyn-sromero)\r\n- add further SQLite URI parameters to improve read-only access: https://github.com/oschwengers/bakta/commit/e658a2ea2e0f48434eade93198d9c6c346480cb2\r\n- synchronize Conda environment dependencies and runtime dependency version checks: https://github.com/oschwengers/bakta/commit/95ef71fd40dbeb471a3c45e04bc389ccf2ca08df https://github.com/oschwengers/bakta/commit/c516656661eaedaa933c1689a0ec6dd4ddc8267b\r\n- add AMRFinder protein hits to dbxref outputs: https://github.com/oschwengers/bakta/commit/505a2ce8743eb227e8422567f779d6d3c46b33b3\r\n\r\nBug fixes:\r\n- fix `NA` issue on HMM-only AMRFinder hits: https://github.com/oschwengers/bakta/commit/71e2dac3c17136e55c258dff8cf2cfe700b2c670 https://github.com/oschwengers/bakta/commit/e9ff01cead6524c4c96a09fec1d8bd7df144d23e (Thanks @taylorreiter)",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.2.2",
        "name": "v1.2.2",
        "release_id": 51539661,
        "tag": "v1.2.2",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/51539661",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/51539661",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2021-09-30T11:45:32Z",
        "date_published": "2021-09-30T11:47:55Z",
        "description": "This is the first patch release (v1.2.1) merely fixing a wrong former version tag (v1.1.2).",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.2.1",
        "name": "v1.2.1",
        "release_id": 50543870,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/50543870",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/50543870",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2021-09-30T10:20:39Z",
        "date_published": "2021-09-30T10:43:18Z",
        "description": "This is the second minor release (v1.2.0) introducing user provided proteins as well as many improvements.\r\n\r\nCompatible database scheme version: 3 v3.0\r\n\r\nNew features:\r\n- introduce `--proteins` accepting a user provided set of trusted protein sequences: https://github.com/oschwengers/bakta/commit/992d9295ab1e11ab12d5e7fd80e60d41db610b77 https://github.com/oschwengers/bakta/commit/1541f1059b0b99de9d5677e2f55683e53650f2b9 https://github.com/oschwengers/bakta/commit/691646defc0388571675deb4ebbec73fe0e45ce2 (Thanks to @Tonny-zhou)\r\n\r\nImprovements:\r\n- revise Dbxrefs for UniParc & UniRef: https://github.com/oschwengers/bakta/commit/02b5dc8d9453f5fe704d48405660ff592e7d9e02\r\n- revise truncated dnaA/repA genes on rotated replicon sequences: https://github.com/oschwengers/bakta/commit/0c4ad10f29988cd616d94b3515a293569d4169e1 (Thanks to Jochen Blom)\r\n- assign locus tags to gene features only: https://github.com/oschwengers/bakta/commit/c1e1c0584ab18abaa205ad8c9536cb1fad8f1f26\r\n- extract nt seqs for ncrna-regions: https://github.com/oschwengers/bakta/commit/f77e308ec2b51e162ba603df67637b78d012c985\r\n- generate unique feature IDs used as ID in GFF3: https://github.com/oschwengers/bakta/commit/df32038309228443e4bc714b0f572a19abb8a82d\r\n- add products to oriC/oriV/oriT features: https://github.com/oschwengers/bakta/commit/2eabd93c4435bb8abd98b6d5dfde07b5b395691d\r\n- reduce numbers of `similar to aa sequence` inference qualifiers in INSDC outputs to 1: https://github.com/oschwengers/bakta/commit/16401da73b76ab6c7228511875742cc82e4cdaf4\r\n- improve and fix CWL file: https://github.com/oschwengers/bakta/commit/6776ca790242d9c6e96850d4f5beaa2eff1d826c https://github.com/oschwengers/bakta/commit/1d18e7740fc6cb378c80a144caaa00ad2085fa36 https://github.com/oschwengers/bakta/commit/5c80d15a3609d13b4280fb97ad2247d450e35eec\r\n- exrtact & store Pfam HMM hits on hypothetical proteins: https://github.com/oschwengers/bakta/commit/2ba985a15cfeb9d07e8517a37ae003ead4e1fa7c\r\n",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.2.0",
        "name": "v1.2.0 - User provided proteins arrived ...",
        "release_id": 50539627,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/50539627",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/50539627",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2021-09-01T14:39:29Z",
        "date_published": "2021-09-01T14:50:41Z",
        "description": "This is the first v1.1 patch release (v1.1.1) providing a couple of improvements and minor bug fixes.\r\n\r\nCompatible database scheme version: v3\r\n\r\nImprovements:\r\n- added a revision & refinement logic for gene symbols: https://github.com/oschwengers/bakta/commit/539137be5cd82b7b01960b09f1a69e2a6536ae17\r\n- added further CDS product revision rules: https://github.com/oschwengers/bakta/commit/f8ec2aa69c9b01da542e0cd49a4878bb6281be3f https://github.com/oschwengers/bakta/commit/1fcca891087e16d0ab5b6844ac21a230901e09d4 https://github.com/oschwengers/bakta/commit/8915af7d5fc81e5e7d306bbc8e1e18ca4c717b10 https://github.com/oschwengers/bakta/commit/626981bb9a385f890c8f817f45d7d31e75d8f50b https://github.com/oschwengers/bakta/commit/321391b1d0a336541c03732a28c95e99ca4dc0b6 https://github.com/oschwengers/bakta/commit/0d93c2fd0edf1affa22c172fbe87045bc16ec16f https://github.com/oschwengers/bakta/issues/69 (Thanks @michoug)\r\n\r\nBug fixes:\r\n- fixed AMRFinderDB issue in docker shell script: https://github.com/oschwengers/bakta/commit/e8253616dd37ad55ff61df64a7494253351692a2\r\n- fixed `None` values of CDS `rbs_motif` attributes: https://github.com/oschwengers/bakta/commit/0727b2551207e1bf57514f3824572f004a11fd9e\r\n- skip CDS annotation if no CDS are predicted: https://github.com/oschwengers/bakta/commit/3787e01a2e44eb5c80d6a19d8350a6bce3732415\r\n- fix several CDS product revision rules",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.1.1",
        "name": "v1.1.1",
        "release_id": 48794625,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/48794625",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/48794625",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2021-08-23T21:33:05Z",
        "date_published": "2021-08-23T21:33:24Z",
        "description": "This is the first minor release (v1.1) introducing several new features, many improvements and countless bug fixes.\r\n\r\nCompatible database scheme version: 3 v3.0\r\n\r\nNew features:\r\n- add new `--compliant` option for INSDC genome submissions: https://github.com/oschwengers/bakta/issues/69 (Thanks @michoug)\r\n- introduce PSCCs (UniRef50) as a fallback if PSCs (UniRef90) are not detected, greatly improving the annotation of less represented species and metagenome-assembled genomes (MAGs): https://github.com/oschwengers/bakta/commit/84c808fb343cadb36b4afdbdd56dbf416b7512e3\r\n- export nucleotide sequences: https://github.com/oschwengers/bakta/issues/57 (Thanks @mcroxen)\r\n- revise suspect CDS product names: https://github.com/oschwengers/bakta/commit/f85970b7a9b6a55336b91570955777c062f03852\r\n\r\nImprovements:\r\n- various improvements and fixes in GFF3, GenBank and EMBL files to adhere to INSDC specs: https://github.com/oschwengers/bakta/issues/69\r\n- improve internal DB download: https://github.com/oschwengers/bakta/commit/bdd665aa87bcb14d7ddaba22744b45f9b700b74a\r\n- use Diamond version v2.0.11 and its `--fast` option: https://github.com/oschwengers/bakta/commit/c82f4e21aae75ecc8d48146aab8499c5967d8b1b https://github.com/oschwengers/bakta/commit/19c95d802cd038500e53fdfa30353420c89f5480 (Thanks to @bbuchfink for https://github.com/bbuchfink/diamond/issues/419)\r\n- use stable CLI progress library [alive-progress](https://github.com/rsalmei/alive-progress) https://github.com/oschwengers/bakta/commit/0ac56256dda51e16fabce08b4500048bd1ea5d79\r\n- improve GFF3 output regarding GFF3 specs: https://github.com/oschwengers/bakta/commit/697121f6192bbee883b3102578891d2de6beb2db\r\n- store AMRFinderPlus DB within the Bakta DB directory: https://github.com/oschwengers/bakta/commit/04ff7b00c0b4b71738072710355a45a8f9fa8137 (Thanks to @LuisFF)\r\n- redirect BAKTA-TMP directory to AMRFinderPlus to prevent stale files: https://github.com/oschwengers/bakta/commit/26f81fcc82e1001ce2021011fcbb40416a9c11c2\r\n- detect & mark tmRNA on sequence edges: https://github.com/oschwengers/bakta/commit/782f640f920368216920f9bf8d0ff4f219c3d91d\r\n- adhere to translation table in tmRNA prediction: https://github.com/oschwengers/bakta/commit/450d6b7224469e4bf39cbad9ac24d3e9e3dbc9f1\r\n\r\nBug fixes:\r\n- fix var name in Docker shell script: https://github.com/oschwengers/bakta/commit/e6bab09dba5ff9ea478242edb6b2863e5dd2e122 (Thanks @joyn-sromero) \r\n- fix inflated blastn thread numbers: https://github.com/oschwengers/bakta/commit/e9073e188c5888701bbcf5ab800058d191384463 (Thanks @LuisFF)\r\n- fix location of features on sequence edges: https://github.com/oschwengers/bakta/commit/34873e7bb91984a34d43d69bf2eb9b24573ab289\r\n- fix BLAST+ tool name in GFF3: https://github.com/oschwengers/bakta/commit/efff065f212f9a627995291b0590f8bc6e55b9fb\r\nand many more ...",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.1",
        "name": "v1.1 - INSDC submission & annotation of MAGs: Hey! Ho! Let's go",
        "release_id": 48285481,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/48285481",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/48285481",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2021-06-30T11:00:11Z",
        "date_published": "2021-06-30T11:01:11Z",
        "description": "This is the fourth v1.0 patch release (v1.0.4) fixing a couple of minor bugs and adding further minor improvements.\r\n\r\nCompatible database scheme version: v2.0\r\n\r\nBug fixes:\r\n- fixed an hmmsearch error if no CDS/sORF remain as hypotheticals: https://github.com/oschwengers/bakta/commit/9d4fc71672bf394d871209276c628641aa3b31e4 (Thanks Matthew Croxen)\r\n- fixed a threadpool issue upon single core executions: https://github.com/oschwengers/bakta/commit/631fac67f5d3831ea108a4b1990a2e825274cbc1\r\n\r\nImprovements:\r\n- added GFF3 feature IDs to features w/o `locus_tag`: https://github.com/oschwengers/bakta/commit/08b8eae6fd35140b461db2717261d9015aa2abcb (Thanks @ZarulHanifah #54)\r\n- add clipping of UniParc DB prefixes: https://github.com/oschwengers/bakta/commit/c861af8c86ea2eba1db0a55c6a3bc030d4f45c4e (Thanks Jochen Blom)\r\n",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.0.4",
        "name": "v1.0.4",
        "release_id": 45482179,
        "tag": "v1.0.4",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/45482179",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/45482179",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2021-06-09T20:04:41Z",
        "date_published": "2021-06-09T20:12:28Z",
        "description": "This is the 3rd v1.0 patch release (v1.0.3).\r\n\r\nCompatible database scheme version: v2.0\r\n\r\nBug fixes:\r\n- activated the lookup of `PSC` if all CDS/sORF are identified as `IPS` which led to large amounts of false `hypotheticals`: https://github.com/oschwengers/bakta/commit/12df1af41ce7f92259551570eff399d76de5e1b3\r\n\r\nImprovements:\r\n- skip further analysis of spurious CDS/sORF: https://github.com/oschwengers/bakta/commit/f22e114234750957054ee4e94fef77309b74acc3\r\n",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.0.3",
        "name": "v1.0.3",
        "release_id": 44372581,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/44372581",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/44372581",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "oschwengers",
          "type": "User"
        },
        "date_created": "2021-06-08T19:25:25Z",
        "date_published": "2021-06-08T19:39:16Z",
        "description": "This is the second v1.0 patch release (v1.0.2) fixing a couple of minor bugs and adding further minor improvements.\r\n\r\nCompatible database scheme version: v2.0\r\n\r\nBug fixes:\r\n- fix a JSON NaN serialization issue: https://github.com/oschwengers/bakta/commit/f8ff6b96b9c92cc54a9ed253e56252179e16dc6e (Thanks @lukasjelonek )\r\n- fix calculation of mol weight and isoelectric points for hypotheticals: https://github.com/oschwengers/bakta/commit/b443e54dd66d2c7e2b6bdd9cbfdca242259952ba\r\n- fix duplicated annotation of `ncRNA region` features: https://github.com/oschwengers/bakta/commit/30df23cf4b09728c6e9fde07d14c4d84d9b8e1cc\r\n\r\nImprovements:\r\n- accept ambiguity NT codes in input fasta files: https://github.com/oschwengers/bakta/commit/d4f615bca6d529dda08f97ea235f80fc1b755279\r\n- add more tests: https://github.com/oschwengers/bakta/commit/d8e67c0ee60daf56259b2aa357f39764ad050faf (Thanks @Anna-Rehm )\r\n- only write INSDC chromosome tags only on explicit names: https://github.com/oschwengers/bakta/commit/efaf5cf593195eb5c33bd3b24964112b3c68a7e9\r\n- write locus tag based GFF3 IDs to CRISPR and oriC/oriT/oriV: https://github.com/oschwengers/bakta/commit/04ed19535d79a3c3b5f9f6682d2659270f21fac4 https://github.com/oschwengers/bakta/commit/7a8242efa7b0be0fb145910a00a5858dcd7d3880 (Thanks @ZarulHanifah https://github.com/oschwengers/bakta/issues/54)",
        "html_url": "https://github.com/oschwengers/bakta/releases/tag/v1.0.2",
        "name": "v1.0.2",
        "release_id": 44303086,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/oschwengers/bakta/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/oschwengers/bakta/releases/44303086",
        "value": "https://api.github.com/repos/oschwengers/bakta/releases/44303086",
        "zipball_url": "https://api.github.com/repos/oschwengers/bakta/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:07:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 432
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids"
        ],
        "type": "Text_excerpt",
        "value": "Simple:\n\n```bash\nbakta --db <db-path> genome.fasta\n```\n\nExpert: verbose output writing results to *results* directory with *ecoli123* file `prefix` and *eco634* `locus tag` using an existing prodigal training file, using additional replicon information and 8 threads:\n\n```bash\nbakta --db <db-path> --verbose --output results/ --prefix ecoli123 --locus-tag eco634 --prodigal-tf eco.tf --replicons replicon.tsv --threads 8 genome.fasta\n```\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Bakta: rapid &amp; standardized annotation of bacterial genomes, MAGs &amp; plasmids",
          "Genome plots"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nusage: bakta [--db DB] [--min-contig-length MIN_CONTIG_LENGTH] [--prefix PREFIX] [--output OUTPUT] [--force]\n             [--genus GENUS] [--species SPECIES] [--strain STRAIN] [--plasmid PLASMID]\n             [--complete] [--prodigal-tf PRODIGAL_TF] [--translation-table {11,4,25}] [--gram {+,-,?}]\n             [--locus LOCUS] [--locus-tag LOCUS_TAG] [--locus-tag-increment {1,5,10}] [--keep-contig-headers] [--compliant]\n             [--replicons REPLICONS] [--regions REGIONS] [--proteins PROTEINS] [--meta]\n             [--skip-trna] [--skip-tmrna] [--skip-rrna] [--skip-ncrna] [--skip-ncrna-region]\n             [--skip-crispr] [--skip-cds] [--skip-pseudo] [--skip-sorf] [--skip-gap] [--skip-ori] [--skip-plot]\n             [--help] [--verbose] [--debug] [--threads THREADS] [--tmp-dir TMP_DIR] [--version]\n             <genome>\n\nRapid & standardized annotation of bacterial genomes, MAGs & plasmids\n\npositional arguments:\n  <genome>              Genome sequences in (zipped) fasta format\n\nInput / Output:\n  --db DB, -d DB        Database path (default = <bakta_path>/db). Can also be provided as BAKTA_DB environment variable.\n  --min-contig-length MIN_CONTIG_LENGTH, -m MIN_CONTIG_LENGTH\n                        Minimum contig size (default = 1; 200 in compliant mode)\n  --prefix PREFIX, -p PREFIX\n                        Prefix for output files\n  --output OUTPUT, -o OUTPUT\n                        Output directory (default = current working directory)\n  --force, -f           Force overwriting existing output folder (except for current working directory)\n\nOrganism:\n  --genus GENUS         Genus name\n  --species SPECIES     Species name\n  --strain STRAIN       Strain name\n  --plasmid PLASMID     Plasmid name\n\nAnnotation:\n  --complete            All sequences are complete replicons (chromosome/plasmid[s])\n  --prodigal-tf PRODIGAL_TF\n                        Path to existing Prodigal training file to use for CDS prediction\n  --translation-table {11,4,25}\n                        Translation table: 11/4/25 (default = 11)\n  --gram {+,-,?}        Gram type for signal peptide predictions: +/-/? (default = ?)\n  --locus LOCUS         Locus prefix (default = 'contig')\n  --locus-tag LOCUS_TAG\n                        Locus tag prefix (default = autogenerated)\n  --locus-tag-increment {1,5,10}\n                        Locus tag increment: 1/5/10 (default = 1)\n\n  --keep-contig-headers\n                        Keep original contig headers\n  --compliant           Force Genbank/ENA/DDJB compliance\n  --replicons REPLICONS, -r REPLICONS\n                        Replicon information table (tsv/csv)\n  --regions REGIONS     Path to pre-annotated regions in GFF3 or Genbank format (regions only, no functional annotations).\n  --proteins PROTEINS   Fasta file of trusted protein sequences for CDS annotation\n  --meta                Run in metagenome mode. This only affects CDS prediction.\n\nWorkflow:\n  --skip-trna           Skip tRNA detection & annotation\n  --skip-tmrna          Skip tmRNA detection & annotation\n  --skip-rrna           Skip rRNA detection & annotation\n  --skip-ncrna          Skip ncRNA detection & annotation\n  --skip-ncrna-region   Skip ncRNA region detection & annotation\n  --skip-crispr         Skip CRISPR array detection & annotation\n  --skip-cds            Skip CDS detection & annotation\n  --skip-pseudo         Skip pseudogene detection & annotation\n  --skip-sorf           Skip sORF detection & annotation\n  --skip-gap            Skip gap detection & annotation\n  --skip-ori            Skip oriC/oriT detection & annotation\n  --skip-plot           Skip generation of circular genome plots\n\nGeneral:\n  --help, -h            Show this help message and exit\n  --verbose, -v         Print verbose information\n  --debug               Run Bakta in debug mode. Temp data will not be removed.\n  --threads THREADS, -t THREADS\n                        Number of threads to use (default = number of available CPUs)\n  --tmp-dir TMP_DIR     Location for temporary files (default = system dependent auto detection)\n  --version             show program's version number and exit\n```\n"
      },
      "source": "https://raw.githubusercontent.com/oschwengers/bakta/main/README.md",
      "technique": "header_analysis"
    }
  ]
}