{
  "application_domain": [
    {
      "confidence": 20.7,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "IDSL_MINT<img src='MINT_educational_files/Figures/IDSL_MINT-logo.png' width=\"280px\" align=\"right\" />"
        ],
        "type": "Text_excerpt",
        "value": "[1] Fakouri Baygi, S., Barupal, D.K. [IDSL_MINT: a deep learning framework to predict molecular fingerprints from mass spectra](https://doi.org/10.1186/s13321-024-00804-5). *Journal of Cheminformatics*, **2024**, *16(8)*.\n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/idslme/IDSL_MINT"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-07-11T15:31:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-01T21:30:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Deep Learning Framework to Interpret Raw Mass Spectrometry (m/z) Data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9926458189687027,
      "result": {
        "original_header": "IDSL_MINT<img src='MINT_educational_files/Figures/IDSL_MINT-logo.png' width=\"280px\" align=\"right\" />",
        "type": "Text_excerpt",
        "value": "\n**IDSL_MINT: Mass spectra INTerpretation** by the [**Integrated Data Science Laboratory for Metabolomics and Exposomics (IDSL.ME)**](https://www.idsl.me) is a transformative mass spectrometry data processing framework. This innovative approach for mass spectrometry data processing has been constructed upon the transformer models delineated in the seminal paper, [*'Attention is all you need'*](https://arxiv.org/abs/1706.03762). **IDSL_MINT** has been meticulously engineered to predict molecular fingerprint descriptors and structures from MS/MS spectra in addition to forecasting MS/MS spectra from canonical SMILES. A key distinguishing feature of **IDSL_MINT** is its compatibility with any reference MS/MS data in ***.msp*** format to tailor **IDSL_MINT** models for various applications. \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9948070667426627,
      "result": {
        "original_header": "Features of IDSL_MINT",
        "type": "Text_excerpt",
        "value": "1) Parameter selection for training and prediction through user-friendly and well-documented [**YAML** files](https://github.com/idslme/IDSL_MINT/tree/main/YAML)\n2) Compatibility with *.msp* file formats.\n3) Compatibility with various fingerprint descriptor methods.\n4) Supports beam search inferencing.\n5) Utilizes the power of the transformer model architecture.\n6) Device-agnostic processing.\n \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9624597802066389,
      "result": {
        "original_header": "Workflow",
        "type": "Text_excerpt",
        "value": "The **IDSL_MINT** framework encapsulates three transformative approaches to deeply interpret mass spectrometry data. Each of these methodologies can be effectively managed using designated model configuration `yaml` files. In the training step, weights of **IDSL_MINT** models are stored and updated in a designated directory on the decreasing trajectory of the training loss value to ensure optimal performance and accuracy. The [`yaml`](https://github.com/idslme/IDSL_MINT/tree/main/YAML) files are easy to update and model configuration is significantly simplified and commented. After configuring the model in the designated `yaml` file, run the below bash command to perform calculations. The **IDSL_MINT** package can automatically detect types of `yaml` file to run training or inference operations. \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9488833517999988,
      "result": {
        "original_header": "Important tips:",
        "type": "Text_excerpt",
        "value": "- **IDSL_MINT** can extract information from `comment: ` and `comments: ` entries in ***.msp*** files which enables this platform to process MoNA, GNPS, and other public library with any pre-treatment requirements. \n- In case multiple similar headers are present in a MSP block, the one with the longest content is selected for parsing. \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9735297043054144,
      "result": {
        "original_header": "IDSL_MINT: Translating MS/MS Spectra into Molecular Fingerprints",
        "type": "Text_excerpt",
        "value": "\n**IDSL_MINT** includes a method to translate MS/MS spectra into molecular fingerprint descriptors. This method offers the option to calculate fingerprints using the [Extended-connectivity fingerprints (ECFPs)](https://doi.org/10.1021/ci100050t) or [MACCS Keys](https://doi.org/10.1021/ci200081k) RDKit methods from InChI and SMILES row entries. Another option to obtain molecular fingerprints is to parse the MSP files for the user-provided fingerprints. The following is an example of an Aspirin MSP block with custom fingerprint bits. \n\n`Fingerprint` row entries may be in any line in MSP blocks between `Name` and `Num Peaks` rows, and fingerprint bits must be dash-separated. This example represented Avalon fingerprint bits with `nBits = 4096` for Aspirin MS/MS spectra. \nA [colab notebook](https://colab.research.google.com/drive/16A-Hw6S_04nxlopp7yefZkVB5Aakcodu#scrollTo=E4o1pG-tZNDR) was presented to demonstrate the performance of **IDSL_MINT** in training and predicting molecular fingerprint descriptors using MS/MS data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9629183778518506,
      "result": {
        "original_header": "IDSL_MINT: Translating MS/MS Spectra into Canonical SMILES",
        "type": "Text_excerpt",
        "value": "\nIn this approach, InChI and SMILES row entries in the MSP blocks are converted into canonical SMILES using [RDKit](https://www.rdkit.org). Next, standard canonical SMILES are tokenized using a method similar to [RXNFP](https://rxn4chemistry.github.io/rxnfp). As long as InChI and SMILES row entries present in the MSP blocks are available, this approach may be used to train an **IDSL_MINT** model. \nA [colab notebook](https://colab.research.google.com/drive/1UUZwCpI4b0adHZ3y4JTRDPlin-KAWIvQ#scrollTo=RbAS-ZFPVOqM) was presented to demonstrate the performance of **IDSL_MINT** in training and predicting canonical SMILES using MS/MS data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9842242012429714,
      "result": {
        "original_header": "IDSL_MINT: Transforming Fingerprints into MS/MS Fragments",
        "type": "Text_excerpt",
        "value": "This method is designed to translate fingerprints into MS/MS fragments using a transformer model. This approach contrasts with previous methods that predict fragment mass from fingerprints.  \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/idslme/IDSL_MINT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/drive/16A-Hw6S_04nxlopp7yefZkVB5Aakcodu#scrollTo=E4o1pG-tZNDR"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/drive/1UUZwCpI4b0adHZ3y4JTRDPlin-KAWIvQ#scrollTo=RbAS-ZFPVOqM"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/idslme/IDSL_MINT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "idslme/IDSL_MINT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IDSL_MINT"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "IDSL_MINT<img src='MINT_educational_files/Figures/IDSL_MINT-logo.png' width=\"280px\" align=\"right\" />"
        ],
        "type": "Text_excerpt",
        "value": "1. Installation of Prerequisites:\n    \n    a. Install [PyTorch](https://pytorch.org/get-started/locally) according to your system configurations. **IDSL_MINT** is device-agnostic and fully supports `cuda` GPU processing.\n\n    b. Install [RDKit](https://www.rdkit.org/docs/Install.html).\n\n2. Install the package:\n\n\t2.1. Option 1: `pip`\n\t\n\t- `pip install git+https://github.com/idslme/IDSL_MINT`\n\t- `pip install IDSL_MINT`\n    \n\t2.2. Option 2: `conda`\n\n\t- `git clone https://github.com/idslme/IDSL_MINT.git`\n\t- `cd IDSL_MINT`\n\t- `conda env create -f environment.yml`\n\t- `conda activate IDSL_MINT`\n\t- `pip install -e .`\n\n3. Update the Python PATH:\n\n\t`export PATH=\"root/.local/bin:$PATH\"` --> root directory should be your system root directory.\n\n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8230456647435039,
      "result": {
        "original_header": "Important tips:",
        "type": "Text_excerpt",
        "value": "- MSP blocks must include `PrecursorMZ: ` row entries. \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8157351017570257,
      "result": {
        "original_header": "Workflow",
        "type": "Text_excerpt",
        "value": "    MINT_workflow --yaml /path/to/yaml/file\n \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8830787039334665,
      "result": {
        "original_header": "IDSL_MINT: Translating MS/MS Spectra into Molecular Fingerprints",
        "type": "Text_excerpt",
        "value": "To train an **IDSL_MINT** model with molecular fingerprint descriptors, download and fill a [MINT_MS2FP_trainer.yaml](https://github.com/idslme/IDSL_MINT/tree/main/YAML/MINT_MS2FP_trainer.yaml) file. Similarly, for model prediction, use [MINT_MS2FP_predictor.yaml](https://github.com/idslme/IDSL_MINT/tree/main/YAML/MINT_MS2FP_predictor.yaml) file. \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8894603168708722,
      "result": {
        "original_header": "IDSL_MINT: Translating MS/MS Spectra into Canonical SMILES",
        "type": "Text_excerpt",
        "value": "To train an **IDSL_MINT** model to predict molecular structures from MS/MS spectra, download and fill a [MINT_MS2SMILES_trainer.yaml](https://github.com/idslme/IDSL_MINT/tree/main/YAML/MINT_MS2SMILES_trainer.yaml) file. Likewise, for model prediction, use [MINT_MS2SMILES_predictor.yaml](https://github.com/idslme/IDSL_MINT/tree/main/YAML/MINT_MS2SMILES_predictor.yaml) file. \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8894603168708722,
      "result": {
        "original_header": "IDSL_MINT: Transforming Fingerprints into MS/MS Fragments",
        "type": "Text_excerpt",
        "value": "To train an **IDSL_MINT** model to predict MS/MS spectra from molecular structures, download and fill a [MINT_FP2MS_trainer.yaml](https://github.com/idslme/IDSL_MINT/tree/main/YAML/MINT_FP2MS_trainer.yaml) file. Likewise, for model prediction, use [MINT_FP2MS_predictor.yaml](https://github.com/idslme/IDSL_MINT/tree/main/YAML/MINT_FP2MS_predictor.yaml) file.\n \n"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/idslme/IDSL_MINT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cheminformatics, lipidomics, mass-spectrometry, metabolomics, molecular-fingerprints, msms, python3, pytorch, rdkit, small-molecule, transformer, untargeted-metabolomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IDSL_MINT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "idslme"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 192590,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1706.03762"
      },
      "source": "https://raw.githubusercontent.com/idslme/IDSL_MINT/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:20:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ]
}