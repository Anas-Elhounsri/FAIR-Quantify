{
  "application_domain": [
    {
      "confidence": 26.13,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/p-koo/evoaug-tf"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-02T11:05:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-30T18:38:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Evolution-inspired data augmentations for TensorFlow-based models for regulatory genomics"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9241898808483145,
      "result": {
        "original_header": "EvoAug-TF",
        "type": "Text_excerpt",
        "value": "Evolution-inspired data augmentations for TensorFlow-based models for regulatory genomics ([paper](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-023-02941-w)). For more information, see documentation on [EvoAug-TF.ReadTheDocs.io](https://evoaug-tf.readthedocs.io/en/latest/index.html). \n \n"
      },
      "source": "https://raw.githubusercontent.com/p-koo/evoaug-tf/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://evoaug-tf.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/p-koo/evoaug-tf/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/p-koo/evoaug-tf/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/p-koo/evoaug-tf/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "p-koo/evoaug-tf"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EvoAug-TF"
      },
      "source": "https://raw.githubusercontent.com/p-koo/evoaug-tf/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install:",
        "parent_header": [
          "EvoAug-TF"
        ],
        "type": "Text_excerpt",
        "value": "```\npip install evoaug-tf\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/p-koo/evoaug-tf/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/p-koo/evoaug-tf/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 Yiyang Yu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/p-koo/evoaug-tf/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "evoaug-tf"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "p-koo"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 27510,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/p-koo/evoaug-tf/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies:",
        "parent_header": [
          "EvoAug-TF"
        ],
        "type": "Text_excerpt",
        "value": "```\ntensorflow 2.11.0+cu114\nnumpy 1.21.6\n```\n"
      },
      "source": "https://raw.githubusercontent.com/p-koo/evoaug-tf/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:14:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "EvoAug-TF"
        ],
        "type": "Text_excerpt",
        "value": "```python\nimport os\nfrom evoaug_tf import evoaug, augment\nimport tensorflow as tf\nfrom tensorflow import keras\n\nkeras.backend.clear_session()\n\nmodel_func = \"DEFINE KERAS MODEL\"\ninput_shape = (L,A) <-- DEFINE L, A and input_shape should be first arguments to model_func (eg. model = model_func(input_shape))\naugment_list = [\n    augment.RandomDeletion(delete_min=0, delete_max=30),\n    augment.RandomRC(rc_prob=0.5),\n    augment.RandomInsertion(insert_min=0, insert_max=20),\n    augment.RandomTranslocation(shift_min=0, shift_max=20),\n    augment.RandomNoise(noise_mean=0, noise_std=0.3),\n    augment.RandomMutation(mutate_frac=0.05)\n]\n\n\nmodel = evoaug.RobustModel(model_func, input_shape, augment_list=augment_list, max_augs_per_seq=1, hard_aug=True)\n\nmodel.compile(keras.optimizers.Adam(learning_rate=0.001, weight_decay=1e-6), #weight_decay\n            loss='mse',\n            metrics=[Spearman, pearson_r]) # additional track metric\n            \n\n# set up callbacks\nes_callback = keras.callbacks.EarlyStopping(monitor='val_loss',\n                                            patience=10,\n                                            verbose=1,\n                                            mode='min',\n                                            restore_best_weights=True)\n\nreduce_lr = keras.callbacks.ReduceLROnPlateau(monitor='val_loss',\n                                                factor=0.1,\n                                                patience=5, \n                                                min_lr=1e-7,\n                                                mode='min',\n                                                verbose=1)\n\n# pre-train model with augmentations\nmodel.fit(x_train, y_train,\n                epochs=100,\n                batch_size=100,\n                shuffle=True,\n                validation_data=(x_valid, y_valid),\n                callbacks=[es_callback, reduce_lr])\n\nsave_path = os.path.join(output_dir, exp_name+\"_aug.h5\")\nmodel.save_weights(save_path)\n\n# set up fine-tuning\nfinetune_optimizer = keras.optimizers.Adam(learning_rate=0.0001, weight_decay=1e-6)\nmodel.finetune_mode(optimizer=finetune_optimizer)\n\n\n# set up callbacks\nes_callback = keras.callbacks.EarlyStopping(monitor='test_pearson_r (Dev)',\n                                            patience=5,\n                                            verbose=1,\n                                            mode='max',\n                                            restore_best_weights=True)\n\n# train model\nmodel.fit(x_train, y_train,\n                epochs=finetune_epochs,\n                batch_size=batch_size,\n                shuffle=True,\n                validation_data=(x_valid, y_valid),\n                callbacks=[es_callback])\n\nsave_path = os.path.join(output_dir, exp_name+\"_finetune.h5\")\nmodel.save_weights(save_path)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/p-koo/evoaug-tf/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example on Google Colab:",
        "parent_header": [
          "EvoAug-TF"
        ],
        "type": "Text_excerpt",
        "value": "- Example DeepSTARR analysis: https://colab.research.google.com/drive/11TA02v-azuqAIV5s3sCbWTH-C5W7_KMA \n- Example ChIP-seq analysis: https://colab.research.google.com/drive/1fzpH2Qv8RFNzMvIDRJUGnUTaacFMIJBV\n"
      },
      "source": "https://raw.githubusercontent.com/p-koo/evoaug-tf/main/README.md",
      "technique": "header_analysis"
    }
  ]
}