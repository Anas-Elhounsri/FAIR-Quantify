{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CAnBioNet/TkNA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-12T18:18:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-13T21:09:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CAnBioNet/TkNA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CAnBioNet/TkNA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CAnBioNet/TkNA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TkNA"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Format data and set statistical thresholds",
        "parent_header": [
          "TkNA",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Data must be formatted in the format specified in the TkNA manuscript.\n"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CAnBioNet/TkNA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TkNA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CAnBioNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 278432,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "macovskym",
          "type": "User"
        },
        "date_created": "2024-01-09T21:08:29Z",
        "date_published": "2024-01-09T21:11:01Z",
        "description": "## Fixes\r\n - Add check that configured thresholds for percent agreement is within the range of validity (0.5, 1]\r\n - Rename columns in correlation CSV to use more general terminology\r\n - Upgrade requirements to resolve vulnerabilities in older versions of fonttools\r\n - Update expected output for example datasets",
        "html_url": "https://github.com/CAnBioNet/TkNA/releases/tag/v1.2.1",
        "name": "Version 1.2.1",
        "release_id": 136396852,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/CAnBioNet/TkNA/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/CAnBioNet/TkNA/releases/136396852",
        "value": "https://api.github.com/repos/CAnBioNet/TkNA/releases/136396852",
        "zipball_url": "https://api.github.com/repos/CAnBioNet/TkNA/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "macovskym",
          "type": "User"
        },
        "date_created": "2023-12-28T23:06:42Z",
        "date_published": "2023-12-28T23:10:46Z",
        "description": "## Features\r\n- Add config option `correlationCoefficientThresholds` to filter on correlation coefficients\r\n- Raise a more informative error when attempting to intake non-numeric data\r\n\r\n## Fixes\r\n- Fix crash that sometimes occurred when calculating BiBC in `calc_network_properties.py`\r\n- Add workaround for `xarray` issue that could cause a crash during reconstruction when certain measurable types were entirely filtered out\r\n- Explicitly handle treatments specified in config file not being present in data before reconstruction and raise an exception rather than crashing\r\n- Explicitly handle there being no edges in the final network before attempting to write edge CSV and print warning rather than crashing\r\n- Fix some arguments to `calc_network_properties.py` not being marked as required\r\n- Upgrade requirements to resolve vulnerabilities in older versions of Pillow\r\n- Misc. fixes and refactoring for subsampling",
        "html_url": "https://github.com/CAnBioNet/TkNA/releases/tag/v1.2.0",
        "name": "Version 1.2.0",
        "release_id": 135320394,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/CAnBioNet/TkNA/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/CAnBioNet/TkNA/releases/135320394",
        "value": "https://api.github.com/repos/CAnBioNet/TkNA/releases/135320394",
        "zipball_url": "https://api.github.com/repos/CAnBioNet/TkNA/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "newmanno",
          "type": "User"
        },
        "date_created": "2023-10-29T10:28:23Z",
        "date_published": "2023-10-30T14:27:27Z",
        "description": "Webtool version 1 release\r\n\r\n- also fixed crashes that would occur when running `assess_network.py`",
        "html_url": "https://github.com/CAnBioNet/TkNA/releases/tag/v1.1.1",
        "name": "Version 1.1.1",
        "release_id": 127194992,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/CAnBioNet/TkNA/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/CAnBioNet/TkNA/releases/127194992",
        "value": "https://api.github.com/repos/CAnBioNet/TkNA/releases/127194992",
        "zipball_url": "https://api.github.com/repos/CAnBioNet/TkNA/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "macovskym",
          "type": "User"
        },
        "date_created": "2023-07-22T06:10:37Z",
        "date_published": "2023-07-22T06:11:16Z",
        "description": "Changelog:\r\n - Upgrade requirements to resolve vulnerabilities in older versions of some packages:\r\n   - `Pillow` upgraded from 9.0.0 to 9.3.0\r\n   - `NumPy` upgraded from 1.22.0 to 1.22.2\r\n - Correct descriptions of script arguments in `README`\r\n - Clarify warning message in `assess_network.py`",
        "html_url": "https://github.com/CAnBioNet/TkNA/releases/tag/v1.1.0",
        "name": "Version 1.1.0",
        "release_id": 113180932,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/CAnBioNet/TkNA/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/CAnBioNet/TkNA/releases/113180932",
        "value": "https://api.github.com/repos/CAnBioNet/TkNA/releases/113180932",
        "zipball_url": "https://api.github.com/repos/CAnBioNet/TkNA/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "macovskym",
          "type": "User"
        },
        "date_created": "2023-07-22T02:50:19Z",
        "date_published": "2023-07-22T02:52:26Z",
        "html_url": "https://github.com/CAnBioNet/TkNA/releases/tag/v1.0.0",
        "name": "Version 1.0.0",
        "release_id": 113177000,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/CAnBioNet/TkNA/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/CAnBioNet/TkNA/releases/113177000",
        "value": "https://api.github.com/repos/CAnBioNet/TkNA/releases/113177000",
        "zipball_url": "https://api.github.com/repos/CAnBioNet/TkNA/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "macovskym",
          "type": "User"
        },
        "date_created": "2023-07-22T02:45:08Z",
        "date_published": "2023-07-22T02:47:55Z",
        "html_url": "https://github.com/CAnBioNet/TkNA/releases/tag/v0.1.0",
        "name": "Version 0.1.0",
        "release_id": 113176921,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/CAnBioNet/TkNA/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/CAnBioNet/TkNA/releases/113176921",
        "value": "https://api.github.com/repos/CAnBioNet/TkNA/releases/113176921",
        "zipball_url": "https://api.github.com/repos/CAnBioNet/TkNA/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "description",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:02:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "TkNA",
          "Usage",
          "16. Plot density/contour plot of distributions of top nodes in a random network and overlay the nodes from the actual reconstructed network"
        ],
        "type": "Text_excerpt",
        "value": "**NB:** If you have not already set up a conda environment and cloned the repo, please complete the steps in `Creating a conda environment.txt` before running the following commands.\n\nNote that script paths are given relative to the top-level repository directory.\n"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Normalize data",
        "parent_header": [
          "TkNA",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Data should be normalized prior to running TkNA. Examples of normalization methods can be found in the TkNA manuscript.\n"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example command",
        "parent_header": [
          "TkNA",
          "Usage",
          "16. Plot density/contour plot of distributions of top nodes in a random network and overlay the nodes from the actual reconstructed network"
        ],
        "type": "Text_excerpt",
        "value": "```\npython reconstruction/intake_data.py --data-dir ./project_folder/input/ --out-file ./project_folder/output/all_data_and_metadata.zip\n```\n"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Inputs",
        "parent_header": [
          "TkNA",
          "Usage",
          "16. Plot density/contour plot of distributions of top nodes in a random network and overlay the nodes from the actual reconstructed network"
        ],
        "type": "Text_excerpt",
        "value": " - `--data-dir`: Path to the directory containing all experimental file(s), metadata file(s), and config file(s)\n - `--out-file`: path to file (with `.zip` extension) that will be created\n"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Outputs",
        "parent_header": [
          "TkNA",
          "Usage",
          "15. Create abundance plots"
        ],
        "type": "Text_excerpt",
        "value": "A single `.zip` file containing most information required for the next step\n"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "TkNA",
          "Usage",
          "11. Create random networks"
        ],
        "type": "Text_excerpt",
        "value": " - `network_infomap_partition.csv`: CSV file containing the name of the node in column 1 and the subnetwork number it was assigned in column 2. \n"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Inputs and arguments",
        "parent_header": [
          "TkNA",
          "Usage",
          "10. Calculate network topology parameters (e.g. degree, BiBC, etc.)"
        ],
        "type": "Text_excerpt",
        "value": " - `--network`: `The path to the network file, either in .pickle or .csv format\n - `--network-format`: Format of the network file; Either use 'pickle' or 'csv' (must be in .csv format and have 'partner1' and 'partner2' as the headers for the two node columns, e.g. the network_output_comp.csv from to_csv.py)\n - `--map`: CSV file with the name of the node in the first column and its data type in the second column\n - `--out-dir`: Path to the directory to output results to\n\n#### Output\n - `network_louvain_partition.csv`: CSV file containing the name of the node in column 1 and the subnetwork number it was assigned in column 2. \n"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "8. Perform functional enrichment analysis for groups of nodes (OPTIONAL)",
        "parent_header": [
          "TkNA",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Functional enrichment of the resulting partitions can be performed using the methods mentioned in the TkNA manuscript.\n"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "9. Find the distance (shortest path) between two pathways (OPTIONAL)",
        "parent_header": [
          "TkNA",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Pathways closer to one another potentially interact more than those that are further away.\n\n#### Usage\n```\npython ./analysis/find_all_shortest_paths_bw_subnets.py --network <file.pickle> --network-format <format> --map <map.csv> --node-groups <group1> <group2> --out-dir <directory> \n```\n\n#### Example command\n```\npython ./analysis/find_all_shortest_paths_bw_subnets.py --network ./project_folder/output/network_output/network_output_comp.csv --network-format csv --map ./project_folder/input/type_map.csv --node-groups microbe pheno --out-dir ./project_folder/output/network_output/\n```\n\n#### Inputs and arguments\n - `--network`: The path to the network file, either in .pickle or .csv format\n - `--network-format`: Format of the network file; Either use 'pickle' with the network.pickle file output made by assess_network.py (if network was reconstructed using the TkNA pipeline) or 'csv' if the network was reconstructed using an alternative pipeline (must be in .csv format and have 'partner1' and 'partner2' as the headers for the two node columns\n - `--map`: CSV file with the name of the node in the first column and its data type in the second column\n - `--out-dir`: Path to the directory to output results to\n\n#### Output\n - `shortest_path_bw_<group1>_and_<group2>_results.csv`: CSV file containing the name of each node in each pair in columns 1 and 2, as well as the shortest path length between that pair in column 3 and the number of shortest paths for the pair in column 4.\n"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example command:",
        "parent_header": [
          "TkNA",
          "Usage",
          "10. Calculate network topology parameters (e.g. degree, BiBC, etc.)"
        ],
        "type": "Text_excerpt",
        "value": "```\npython ./analysis/calc_network_properties.py --network ./project_folder/output/network_output/network_output_comp.csv --bibc --bibc-groups node_types --bibc-calc-type rbc --map ./project_folder/input/type_map.csv --node-groups microbe pheno --out-dir ./project_folder/output/network_output/\n```\n\n#### Inputs and arguments\n - `--network`: The network file in CSV format containing the reconstructed network. Must have columns called 'partner1' and 'partner2'.\n - `--bibc`: Flag for whether to compute Bipartite Betweenness Centrality (BiBC). This is highly recommended and also required for future steps\n - `--bibc-groups`: Choice for what to compute BiBC on, either distinct groups (node_types) or on the two most modular regions of the network (found using the Louvain method)\n - `--bibc-calc-type`: Choice for whether to normalize based on the number of nodes in each group (rbc) or not (bibc)\n - `--node-map`: CSV file containing the name of nodes in the first column and the type of the node (gene, phenotype, microbe, etc.) in the second column\n - `--node-groups`: Required if node_types is specified for --bibc-groups. It\u2019s the two groups of nodes to calculate BiBC/RBC on. The types must be present in the --node-map file\n - `--out-dir`: Path to the directory to output results to\n\n#### Output\n - `network_properties.txt`: Tab-delimited .txt file of calculated network properties\n - `subnetwork_properties.txt`: Tab-delimited .txt file of calculated subnetwork properties\n - `node_properties.txt`: Tab-delimited .txt file of calculated node properties\n"
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Default outputs",
        "parent_header": [
          "TkNA",
          "Usage",
          "16. Plot density/contour plot of distributions of top nodes in a random network and overlay the nodes from the actual reconstructed network"
        ],
        "type": "Text_excerpt",
        "value": " - `degree_distribution_dotplot.png`: Distribution of the number of nodes which each degree in the network\n - `<propx>_v_<propy>_distribution.png`: A dot plot of user-specified node properties\n - `<propx>_v_<propy>_distribution_<node_type>_nodes_only.png`: Same as previous plot, but with just the nodes from each data type. There will be one plot produced for each data type\n - `<propx>_v_<propy>_distribution_top_<top-num>_nodes.png`: Same as the second plot, but zoomed in on the top nodes\n - `<propx>_v_<propy>_distribution_top_<top-num-per-type>_nodes_<data_type>_only.png`: same as third plot, but zoomed in on the top nodes per data type.\n - `inputs_for_downstream_plots.pickle`: contains information for future commands\n "
      },
      "source": "https://raw.githubusercontent.com/CAnBioNet/TkNA/main/README.md",
      "technique": "header_analysis"
    }
  ]
}