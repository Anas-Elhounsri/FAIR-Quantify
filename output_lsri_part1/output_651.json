{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/shz9/viprs"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-08-21T04:59:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-16T08:04:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Variational Inference of Polygenic Risk Scores"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9976146778809165,
      "result": {
        "original_header": "`viprs`: Variational Inference of Polygenic Risk Scores",
        "type": "Text_excerpt",
        "value": "\n`viprs` is a python package that implements variational inference techniques to estimate the posterior distribution \nof variant effect sizes conditional on the GWAS summary statistics. The package is designed to be fast and accurate, \nand to provide a variety of options for the user to customize the inference process.\nHighlighted features: \n* The coordinate ascent algorithms are written in `C/C++` and `cython` for improved speed and efficiency.\n* The code is written in object-oriented form, allowing the user to extend and \nexperiment with existing implementations.\n* Different priors on the effect size: Spike-and-slab, Sparse mixture, etc.\n* We also provide scripts for different hyperparameter tuning strategies, including: \nGrid search, Bayesian optimization, Bayesian model averaging.\n* Easy and straightforward interfaces for computing PRS from fitted models.\n* Implementation for a wide variety of evaluation metrics for both binary and continuous phenotypes. \n"
      },
      "source": "https://raw.githubusercontent.com/shz9/viprs/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/shz9/viprs/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/shz9/viprs/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shz9/viprs/master/notebooks/height_example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/shz9/viprs/master/notebooks/height_example.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/shz9/viprs/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "shz9/viprs"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "viprs: Variational Inference of Polygenic Risk Scores"
      },
      "source": "https://raw.githubusercontent.com/shz9/viprs/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The `viprs` software is written in `C/C++` and `Cython/Python3` and is designed to be fast and accurate.\nThe software is designed to be used in a variety of computing environments, including local workstations, \nshared computing environments, and cloud-based computing environments. Because of the dependencies on `C/C++`, you need \nto ensure that a `C/C++` Compiler (with appropriate flags) is present on your system.\n\n## Requirements\n\nBuilding the `viprs` package requires the following dependencies:\n\n* `python` (>=3.8)\n* `C/C++` Compilers\n* `cython`\n* `numPy` \n* `pkg-config`\n* `sciPy` (>=1.5.4)\n\nTo take full advantage of the **parallel processing** capabilities of the package, you will also need to make sure that \nthe following packages/libraries are available:\n\n* `OpenMP` \n* `BLAS`\n\n### Setting up the environment with `conda`\n\nIf you can use `Anaconda` or `miniconda` to manage your Python environment, we **recommend** using them to create \na new environment with the required dependencies as follows:\n\n```bash\npython_version=3.11  # Change python version here if needed\nconda create --name \"viprs_env\" -c anaconda -c conda-forge python=$python_version compilers pkg-config openblas -y\nconda activate viprs_env\n```\n\nUsing `conda` to setup and manage your environment is especially *recommended* if you have trouble compiling \nthe `C/C++` extensions on your system.\n\n## Installation\n\n### Using `pip`\n\nThe package is available for easy installation via the Python Package Index (`pypi`) can \nbe installed using `pip`:\n\n```bash\npython -m pip install viprs>=0.1\n```\n\n### Building from source\n\nYou may also build the package from source, by cloning the repository and \nrunning the `make install` command:\n\n```bash\ngit clone https://github.com/shz9/viprs.git\ncd viprs\nmake install\n```\n\n### Using a virtual environment\n\nIf you wish to use `viprs` on a shared computing environment or cluster, \nit is recommended that you install the package in a virtual environment. Here's a quick \nexample of how to install `viprs` on a SLURM-based cluster:\n\n```bash\nmodule load python/3.8\npython3 -m venv viprs_env  # Assumes venv is available\nsource viprs_env/bin/activate\npython -m pip install --upgrade pip\npython -m pip install viprs>=0.1\n```\n\n### Using `Docker` containers\n\nIf you are using `Docker` containers, you can build a container with the `viprs` package \nand all its dependencies by downloading the relevant `Dockerfile` from the \n[repository](https://github.com/shz9/viprs/tree/master/containers) and building it \nas follows:\n\n```bash\n# Build the docker image:\ndocker build -f cli.Dockerfile -t viprs-cli .\n# Run the container in interactive mode:\ndocker run -it viprs-cli /bin/bash\n# Test that the package installed successfully:\nviprs_fit -h\n```\n\nWe plan to publish pre-built `Docker` images on `DockerHub` in the future.\n"
      },
      "source": "https://raw.githubusercontent.com/shz9/viprs/master/docs/installation.md",
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/shz9/viprs/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gwas, medicine, pgs, polygenic-risk-scores, prs, variational-inference"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2024 Shadi Zabad, McGill University\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/shz9/viprs/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "viprs"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "shz9"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 238274,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 165171,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 35378,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 23486,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2908,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1369,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 864,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shz9/viprs/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "shz9",
          "type": "User"
        },
        "date_created": "2024-04-25T18:09:04Z",
        "date_published": "2024-04-25T18:32:46Z",
        "description": "### Changed\r\n\r\n- Fixed bugs in the E-Step benchmarking script.\r\n- Re-wrote the logic for finding BLAS libraries in the `setup.py` script. :crossed_fingers:\r\n- Fixed bugs in CI / GitHub Actions scripts.\r\n\r\n### Added\r\n\r\n- `Dockerfile`s for both `cli` and `jupyter` modes.",
        "html_url": "https://github.com/shz9/viprs/releases/tag/v0.1.1",
        "name": "v0.1.1",
        "release_id": 152864556,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/shz9/viprs/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/shz9/viprs/releases/152864556",
        "value": "https://api.github.com/repos/shz9/viprs/releases/152864556",
        "zipball_url": "https://api.github.com/repos/shz9/viprs/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "shz9",
          "type": "User"
        },
        "date_created": "2024-04-08T00:37:40Z",
        "date_published": "2024-04-08T00:59:54Z",
        "description": "A large scale restructuring of the code base to improve efficiency and usability.\r\n\r\n### Changed\r\n\r\n- Moved plotting script to its own separate module.\r\n- Updated some method names / commandline flags to be consistent throughout.\r\n- Updated the `VIPRS` class to allow for more flexibility in the optimization process.\r\n- Removed the `VIPRSAlpha` model for now. This will be re-implemented in the future, \r\nusing better interfaces / data structures.\r\n- Moved all hyperparameter search classes/models to their own directory.\r\n- Restructured the `viprs_fit` commandline script to make the code cleaner, \r\ndo better sanity checking, and introduce process parallelism over chromosomes.\r\n\r\n### Added\r\n\r\n- Basic integration testing with `pytest` and GitHub workflows.\r\n- Documentation for the entire package using `mkdocs`.\r\n- Integration testing / automating building with GitHub workflows.\r\n- New self-contained implementation of E-Step in `Cython` and `C++`.\r\n  - Uses `OpenMP` for parallelism across chunks of variants.\r\n  - Allows for de-quantization on the fly of the LD matrix.\r\n  - Uses BLAS linear algebra operations where possible.\r\n  - Allows model fitting with only \r\n- Benchmarking scripts (`benchmark_e_step.py`) to compare computational performance of different implementations.\r\n- Added functionality to allow the user to track time / memory utilization in `viprs_fit`.\r\n- Added `OptimizeResult` class to keep track of the info/parameters of EM optimization.\r\n- New evaluation metrics\r\n  - `pseudo_metrics` has been moved to its own module to allow for more flexibility in evaluation.\r\n  - New evaluation metrics for binary traits: `nagelkerke_r2`, `mcfadden_r2`, \r\n  `cox_snell_r2` `liability_r2`, `liability_probit_r2`, `liability_logit_r2`.\r\n  - New function to compute standard errors / test statistics for all R-Squared metrics.\r\n",
        "html_url": "https://github.com/shz9/viprs/releases/tag/v0.1.0",
        "name": "v0.1.0",
        "release_id": 150130956,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/shz9/viprs/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/shz9/viprs/releases/150130956",
        "value": "https://api.github.com/repos/shz9/viprs/releases/150130956",
        "zipball_url": "https://api.github.com/repos/shz9/viprs/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:31:48",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ]
}