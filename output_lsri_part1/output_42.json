{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/malabz/TPMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-08-02T13:20:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-23T13:07:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "\u2699\ufe0fTPMA: a two pointers meta-alignment tool to ensemble different nucleic acid multiple sequence alignment results"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9589243712234616,
      "result": {
        "original_header": "TPMA: a two pointers meta-alignment tool to ensemble different nucleic acid multiple sequence alignment results",
        "type": "Text_excerpt",
        "value": "TPMA is a tool written in C++20 for combining and refining multiple MSA results using a two-pointer algorithm. It runs on Linux.\n \n"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9094714036617162,
      "result": {
        "original_header": "\ud83d\udccdReminder",
        "type": "Text_excerpt",
        "value": "1. Currently TPMA is **ONLY** available for DNA/RNA. \n2. The application of TPMA assumes that the sequences' IDs within the MSAs are unique.\n(E.g. Due to the excessively long length of the sequence IDs in the original data set, Clustal format(the default output format of ClustalW2/PCMA/POA/T-Coffee) may truncate the IDs, resulting in consistent IDs in the alignment output that TPMA cannot process. If the IDs in the original data are too long, we suggest manually renumbering them before using MSA software).\n3. Convert Clustal format to FASTA format using tool: [aln2fasta](https://github.com/malabz/MSATOOLS/tree/main/format-converter)\n4. TPMA will sort the sequences, but we recommend that the input sequences be in the same order as the original file.\n5. TPMA will remove any bad characters that are present in the input data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8896615667944533,
      "result": {
        "original_header": "\ud83d\udd16Citation",
        "type": "Text_excerpt",
        "value": "If you use this software, please cite: \n"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8103653927864546,
      "result": {
        "original_header": "\ud83d\udc4bContacts",
        "type": "Text_excerpt",
        "value": "More tools and infomation can visit our [github](https://github.com/malabz).\n \n"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/malabz/TPMA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/malabz/TPMA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "malabz/TPMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TPMA: a two pointers meta-alignment tool to ensemble different nucleic acid multiple sequence alignment results"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999932787681084,
      "result": {
        "original_header": "\ud83d\udda5\ufe0fEnvironment",
        "type": "Text_excerpt",
        "value": "System|GCC version\n:---:|:---:\nOSX|clang 13.0.0\nLinux|GCC 9.4.0\nWSL|GCC 9.4.0\n \n"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/malabz/TPMA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "meta-alignment, multiple-sequence-alignment, refinement"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 MALABZ_UESTC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TPMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "malabz"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 22866,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 430,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 350,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:03:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1.1 OSX/Linux/WSL(Windows Subsystem for Linux ) - from Anaconda",
        "parent_header": [
          "TPMA: a two pointers meta-alignment tool to ensemble different nucleic acid multiple sequence alignment results",
          "\ud83d\udd28Installation and Usage"
        ],
        "type": "Text_excerpt",
        "value": "1.Install WSL for Windows. Instructional video [1](https://www.youtube.com/watch?v=X-DHaQLrBi8&t=5s) or [2](http://lab.malab.cn/%7Etfr/1.mp4) (Copyright belongs to the original work).\n\n2.Download and install Anaconda. Download Anaconda for different systems [here](https://www.anaconda.com/products/distribution#Downloads). Instructional video of anaconda installation [1](https://www.youtube.com/watch?v=AshsPB3KT-E) or [2](http://lab.malab.cn/%7Etfr/Install_anaconda_in_Linux.mp4) (Copyright belongs to the original work).\n\n3.Install TPMA.\n```bash\n#1 Create and activate a conda environment for TPMA\nconda create -n tpma_env\nconda activate tpma_env\n\n#2 Add channels to conda\nconda config --add channels malab\n\n#3 Install TPMA\nconda install -c malab tpma\n\n#4 Test TPMA\ntpma -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1.2 OSX/Linux/WSL(Windows Subsystem for Linux ) - from the source code",
        "parent_header": [
          "TPMA: a two pointers meta-alignment tool to ensemble different nucleic acid multiple sequence alignment results",
          "\ud83d\udd28Installation and Usage"
        ],
        "type": "Text_excerpt",
        "value": "1. Download and Compile the source code. (Make sure your version of gcc >= 9.4.0 or clang >= 13.0.0)\n```shell\n#1 Download\ngit clone https://github.com/malabz/TPMA.git\n\n#2 Open the folder\ncd TPMA\n\n#3 Compile\nmake\n\n#4 Test TPMA\n./tpma -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2 Usage",
        "parent_header": [
          "TPMA: a two pointers meta-alignment tool to ensemble different nucleic acid multiple sequence alignment results",
          "\ud83d\udd28Installation and Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\n./tpma -a <initial_alignments_list> -r <raw_data> -o <output>\n   -a is used to specify the paths of all initial alignments to be merged\n   -r is used to specify the path of raw data, a file in FASTA format\n   -o is used to specify the output for TPMA result, a file in FASTA format\n   -h print help message\n```\n"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Information about the <a href=\"https://github.com/malabz/TPMA/tree/main/data\">test dataset</a>",
        "parent_header": [
          "TPMA: a two pointers meta-alignment tool to ensemble different nucleic acid multiple sequence alignment results",
          "\ud83d\udd2cTest dataset and the use case"
        ],
        "type": "Text_excerpt",
        "value": "Dataset|Sequences Num|Repeats Num|Avg Length|Similarity\n:---:|:---:|:---:|:---:|:---:\nmt genomes|30|4|about 16568bp|The average similarity is about 99.7%\nHVS-II|10|10|about 365bp|The average similarity is about 98.6%\n16S rRNA|100|8|about 1440bp|The average similarity is about 74.6%\n23S rRNA|64|10|about 3113bp|The average similarity is about 92.7%\nSARS-CoV-2_20200301|39|4|about 29858bp|The average similarity is about 99.8%\nSARS-CoV-2_20200417|100|4|about 27623bp|The average similarity is about 85.3%\n16s simu|100|3|about 1550bp|14 sets of data with different similarities (99%, 98%, 97%, 96%, 95%, 94%, 93%, 92%, 91%, 90%, 85%, 80%, 75%, 70%)\n23s simu|100|3|about 3900bp|14 sets of data with different similarities (99%, 98%, 97%, 96%, 95%, 94%, 93%, 92%, 91%, 90%, 85%, 80%, 75%, 70%)\nCIPRES-128|255|10|about 1550bp|The average similarity is about 80%\nCIPRES-256|511|10|about 1550bp|The average similarity is about 80%\n\n"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. The use case",
        "parent_header": [
          "TPMA: a two pointers meta-alignment tool to ensemble different nucleic acid multiple sequence alignment results",
          "\ud83d\udd2cTest dataset and the use case"
        ],
        "type": "Text_excerpt",
        "value": "```shell\n# Download data\nwget http://lab.malab.cn/~zyx/tools/TPMA/data/16s_rRNA.tar.gz\n\n# Unzip data\ntar -zxvf 16s_rRNA.tar.gz\n\n# Get the folder path\ncd 16s_rRNA\n\n# Run TPMA\n./tpma -a msa_results/16s_rRNA_100seq_rep1/16s_rRNA_100seq_rep1_clustalw2.fasta msa_results/16s_rRNA_100seq_rep1/16s_rRNA_100seq_rep1_mafft.fasta msa_results/16s_rRNA_100seq_rep1/16s_rRNA_100seq_rep1_muscle3.fasta msa_results/16s_rRNA_100seq_rep1/16s_rRNA_100seq_rep1_tcoffee.fasta -r raw_data/16s_rRNA_100seq_rep1.fasta -o 16s_rRNA_100seq_rep1_tpma_c4.fasta \n```"
      },
      "source": "https://raw.githubusercontent.com/malabz/TPMA/main/README.md",
      "technique": "header_analysis"
    }
  ]
}