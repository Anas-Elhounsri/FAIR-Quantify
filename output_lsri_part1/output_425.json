{
  "application_domain": [
    {
      "confidence": 24.06,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yuxuanliao/DeepPIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-09-01T03:43:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-23T12:28:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9955281673223548,
      "result": {
        "original_header": "DeepPIC",
        "type": "Text_excerpt",
        "value": "This is the code repo for the paper *Highly Automatic and Universal Approach for Extracting Features from LC-MS Data Using Deep Learning*. We developed a deep learning-based pure ion chromatogram method (DeepPIC) for extracting PICs from raw data files directly and automatically. The DeepPIC method has already been integrated into the KPIC2 framework. The combination can provide the entire pipeline from raw data to discriminant models for metabolomic datasets. \n"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8972938281178183,
      "result": {
        "original_header": "Others",
        "type": "Text_excerpt",
        "value": "The following files are in the [others](others) folder:\n- [metabolomics.py](others/metabolomics.py). the code for the OPLS-DA scores plot, permutation test, biomarkers selection and hierarchical cluster analysis\n- [quantitative.py](others/quantitative.py). evaluate the quantitative ability of feature extraction methods\n- [XCMS.R](others/XCMS.R). the code for XCMS to detect peaks\n- *[Simulation](others/Simulation)*:\n    - [mssimulator.py](others/Simulation/mssimulator.py). define some functions for generating the simulated LC-MS files\n    - [simulated_mm48.py](others/Simulation/simulated_mm48.py). generate the simulated MM48 dataset\n     \n"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.925208214212204,
      "result": {
        "original_header": "Dataset",
        "type": "Text_excerpt",
        "value": "The dataset with 200 input-label pairs used to train, validate, and test the DeepPIC model is in the [dataset](dataset) folder. As the model and the data exceeded the limits, we have uploaded the optimized model and the datasets (MM48, simulated MM48, quantitative, metabolomics and different instrumental datasets) to [Github release page](https://github.com/yuxuanliao/DeepPIC/releases).\n \n"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yuxuanliao/DeepPIC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/extract.ipynb"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/extract.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/Integration_into_KPIC2.ipynb"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/Integration_into_KPIC2.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/train.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yuxuanliao/DeepPIC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yuxuanliao/DeepPIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepPIC"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "DeepPIC"
        ],
        "type": "Text_excerpt",
        "value": "**1.** Install [Anaconda](https://www.anaconda.com) for python 3.8.13.\n\n**2.** Install [R 4.2.1](https://mirrors.tuna.tsinghua.edu.cn/CRAN).\n\n**3.** Install KPIC2 in R language.\n\nThe method of installing KPIC2 can refer to https://github.com/hcji/KPIC2.\n- First install the depends of KPIC2.\n\t```shell\n  install.packages(c(\"BiocManager\", \"devtools\", \"Ckmeans.1d.dp\", \"Rcpp\", \"RcppArmadillo\", \"mzR\", \"parallel\", \"shiny\", \"plotly\", \"data.table\", \"GA\", \"IRanges\",  \"dbscan\", \"randomForest\"))\n  BiocManager::install(c(\"mzR\",\"ropls\"))\n\t```\n- Then, download the source package of KPIC2 at [url](https://github.com/hcji/KPIC2/releases) and install the package locally.\n\n**4.** Create environment and install main packages.\n\n- Open commond line, create environment.\n\t```shell\n  conda create --name DeepPIC python=3.8.13\n  conda activate DeepPIC\n\t```\n- Clone the repository and enter.\n\t```shell\n  git clone https://github.com/yuxuanliao/DeepPIC.git\n  cd DeepPIC\n\t```\n- Install main packages in [requirements.txt](https://github.com/yuxuanliao/DeepPIC/blob/main/requirements.txt) with following commands.\n  ```shell\n  python -m pip install -r requirements.txt\n\t```\n- Set environment variables for calling R language using rpy2.\n\n  R_HOME represents the installation location of the R language.\n  \n  R_USER represents the installation location of the rpy2 package.\n  ```shell\n  setx \"R_HOME\" \"C:\\Program Files\\R\\R-4.2.1\"\n  setx \"R_USER\" \"C:\\Users\\yxliao\\anaconda3\\Lib\\site-packages\\rpy2\"\n\t```\n\n## DeepPIC\nThe following files are in the [DeepPIC](DeepPIC) folder:\n- [train.py](DeepPIC/train.py). for model training\n- [extract.py](DeepPIC/extract.py). extract PICs from raw LC-MS files\n- [predict.py](DeepPIC/predict.py). define the IoU metric for PICs and evalute the DeepPIC model\n"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yuxuanliao/DeepPIC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2022, yuxuanliao\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/Workflow of the DeepPIC method.png"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepPIC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yuxuanliao"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 134042,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 67127,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 8056,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yuxuanliao",
          "type": "User"
        },
        "date_created": "2022-09-01T05:03:14Z",
        "date_published": "2022-09-01T06:29:32Z",
        "description": "The optimized model and the datasets (MM48, simulated MM48, quantitative, metabolomics and different instrumental datasets) have been uploaded. In addition, the 182 PICs in the Parasite dataset are re-labelled.",
        "html_url": "https://github.com/yuxuanliao/DeepPIC/releases/tag/v1.0.0",
        "name": "model and data",
        "release_id": 75983148,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/yuxuanliao/DeepPIC/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/yuxuanliao/DeepPIC/releases/75983148",
        "value": "https://api.github.com/repos/yuxuanliao/DeepPIC/releases/75983148",
        "zipball_url": "https://api.github.com/repos/yuxuanliao/DeepPIC/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:42:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "DeepPIC"
        ],
        "type": "Text_excerpt",
        "value": "The example code for model training is included in the [train.ipynb](train.ipynb).\n\nThe example code for feature extraction is included in the [extract.ipynb](extract.ipynb).\n\nThe example code for integrating DeepPIC into KPIC2 to implement the whole process of metabolomics processing is included in the [Integration_into_KPIC2.ipynb](Integration_into_KPIC2.ipynb).\n"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Start from raw LC-MS dataset to discriminant model",
        "parent_header": [
          "DeepPIC"
        ],
        "type": "Text_excerpt",
        "value": "By running [extract.py](DeepPIC/extract.py), user can use DeepPIC to extract PICs from each LC-MS file in the metabolomics dataset. The whole process of metabolomics processing can be implemented by running [KPIC2.py](KPIC2/KPIC2.py) directly. Please refer to [extract.ipynb](extract.ipynb) and [Integration_into_KPIC2.ipynb](Integration_into_KPIC2.ipynb) for details. Thus, you can use DeepPIC+KPIC2 to process your data.\n"
      },
      "source": "https://raw.githubusercontent.com/yuxuanliao/DeepPIC/main/README.md",
      "technique": "header_analysis"
    }
  ]
}