{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "HDXer",
          "**Tutorials**",
          "Copyright"
        ],
        "type": "Text_excerpt",
        "value": "Project based on the \n[Computational Molecular Science Python Cookiecutter](https://github.com/molssi/cookiecutter-cms) version 1.1.\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age,\nbody size, disability, ethnicity, gender identity and expression, level of\nexperience, nationality, personal appearance, race, religion, or sexual\nidentity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\nMoreover, project maintainers will strive to offer feedback and advice to\nensure quality and consistency of contributions to the code.  Contributions\nfrom outside the group of project maintainers are strongly welcomed but the\nfinal decision as to whether commits are merged into the codebase rests with\nthe team of project maintainers.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an\nappointed representative at an online or offline event. Representation of a\nproject may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at 'richard.bradshaw@kcl.ac.uk, fabrizio.marinelli@nih.gov'. The project team will\nreview and investigate all complaints, and will respond in a way that it deems\nappropriate to the circumstances. The project team is obligated to maintain\nconfidentiality with regard to the reporter of an incident. Further details of\nspecific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 1.4, available at\n[http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Lucy-Forrest-Lab/HDXer"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to contribute\n\nWe welcome contributions from external contributors, and this document\ndescribes how to merge code changes into this HDXer. \n\n## Getting Started\n\n* Make sure you have a [GitHub account](https://github.com/signup/free).\n* [Fork](https://help.github.com/articles/fork-a-repo/) this repository on GitHub.\n* On your local machine,\n  [clone](https://help.github.com/articles/cloning-a-repository/) your fork of\n  the repository.\n\n## Making Changes\n\n* Add some really awesome code to your local fork.  It's usually a [good\n  idea](http://blog.jasonmeridth.com/posts/do-not-issue-pull-requests-from-your-master-branch/)\n  to make changes on a\n  [branch](https://help.github.com/articles/creating-and-deleting-branches-within-your-repository/)\n  with the branch name relating to the feature you are going to add.\n* When you are ready for others to examine and comment on your new feature,\n  navigate to your fork of HDXer on GitHub and open a [pull\n  request](https://help.github.com/articles/using-pull-requests/) (PR). Note that\n  after you launch a PR from one of your fork's branches, all\n  subsequent commits to that branch will be added to the open pull request\n  automatically.  Each commit added to the PR will be validated for\n  mergability, compilation and test suite compliance; the results of these tests\n  will be visible on the PR page.\n* If you're providing a new feature, you must add test cases and documentation.\n* When the code is ready to go, make sure you run the test suite using pytest.\n* When you're ready to be considered for merging, check the \"Ready to go\"\n  box on the PR page to let the HDXer devs know that the changes are complete.\n  The code will not be merged until this box is checked, the continuous\n  integration returns checkmarks,\n  and multiple core developers give \"Approved\" reviews.\n\n# Additional Resources\n\n* [General GitHub documentation](https://help.github.com/)\n* [PR best practices](http://codeinthehole.com/writing/pull-requests-and-other-good-practices-for-teams-using-github/)\n* [A guide to contributing to software packages](http://www.contribution-guide.org)\n* [Thinkful PR example](http://www.thinkful.com/learn/github-pull-request-tutorial/#Time-to-Submit-Your-First-PR)\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/.github/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-03-06T12:27:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T00:19:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HDXer is a package to compute Hydrogen-Deuterium exchange data from biomolecular simulations, compare to experiment, and perform ensemble refinement to fit a structrual ensemble to the experimental data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**Introduction**",
        "parent_header": [
          "HDXer"
        ],
        "type": "Text_excerpt",
        "value": "***HDXer*** is a Python package that can be used to:\n- Compute Hydrogen-Deuterium exchange (HDX) data from an atomistic ensemble of protein structures (e.g. from molecular dynamics simulations)\n- Reweight a candidate ensemble by applying a maximum-entropy biasing scheme, so that the computed HDX data conform to a target experimental set of HDX-MS data, within a defined level of error\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8851532961029602,
      "result": {
        "original_header": "**Testing**",
        "type": "Text_excerpt",
        "value": "After you've carried out the steps above, we recommend that you run the functional tests provided with HDXer to check for a successful installation. You can also use this as an opportunity to check your Bash and Conda environments have been successfully created.  \nThe tests will take roughly 60 seconds to complete. All tests should pass. If you encounter any failures, you can check the output of the tests in the folder where they're stored (```$HDXER_PATH/HDXer/tests/data/tmp_test_output```) to help determine the cause of the error. If the failure persists and you believe there's a problem with HDXer, please contact the developers or raise an issue on this GitHub repository. \n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Lucy-Forrest-Lab/HDXer/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Lucy-Forrest-Lab/HDXer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/tutorials/notebooks/01_data_prep.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/tutorials/notebooks/01_data_prep.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/tutorials/notebooks/05_heatmap.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/tutorials/notebooks/05_heatmap.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/tutorials/notebooks/02_calc_hdx.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/tutorials/notebooks/02_calc_hdx.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/tutorials/notebooks/04_decision_plot.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/tutorials/notebooks/04_decision_plot.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/tutorials/notebooks/03_reweighting.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/tutorials/notebooks/03_reweighting.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Lucy-Forrest-Lab/HDXer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Lucy-Forrest-Lab/HDXer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HDXer"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/devtools/travis-ci/before_install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/tutorials/BPTI/BPTI_calc_hdx/run_calc_hdx.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Installation**",
        "parent_header": [
          "HDXer"
        ],
        "type": "Text_excerpt",
        "value": "You should run all the code shown below on terminal using Bash. Bash is a command language interpreter that's already available on Linux/Mac operating systems. See the [Bash tutorial](https://linuxconfig.org/bash-scripting-tutorial-for-beginners) if you are not familiar with Bash.\n\nIf you are using a Windows computer, you will have to download and use [Git for Windows](https://git-scm.com/download/win) instead of a terminal. Git for Windows will let you use both Bash and git on a Windows computer.\n\n<br>\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python 3",
        "parent_header": [
          "HDXer",
          "**Installation**"
        ],
        "type": "Text_excerpt",
        "value": "For Python 3, we recommend *Anaconda Python 3.x version*, a free and open-source distribution that comes with useful standard Python libraries. You will be able to download, access, and manage Python packages more effectively by using conda, a package manager within *Anaconda*. *Ananconda Python 3.x version* can be downloaded from the [Anaconda website](https://www.anaconda.com/distribution/#download-section).\n\n[A user guide for Anaconda](https://docs.anaconda.com/anaconda/user-guide/getting-started/) and [Conda cheat sheet](https://docs.conda.io/projects/conda/en/latest/_downloads/843d9e0198f2a193a3484886fa28163c/conda-cheatsheet.pdf) are great resources if you are new to using *Anaconda* and want to learn more about it.\n\n<br>\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "git",
        "parent_header": [
          "HDXer",
          "**Installation**"
        ],
        "type": "Text_excerpt",
        "value": "*git* is a free and open-source distributed version-control system. \n\nAgain, if you are using a Windows computer, download [Git for Windows](https://git-scm.com/download/win). Some operating systems (e.g. MacOS or Linux) may have *git* installed already. You can check this by running the following command:\n\n```bash\ngit --version\n```\n\nIf there is no *git* available on your computer, you can install it using conda, or your operating system's package manager.\n\n```bash\nconda install -c conda-forge git\n```\n\nIf you encounter errors at this point, or using the ```conda``` commands below, you may need to update your ```$PATH``` environment variable and/or initialize ```conda``` on your system. The *Anaconda* package will usually provide an initialization script for this purpose, for example, on Windows available in:\n```\n~/Anaconda/etc/profile.d/conda.sh\n```\nYou can call this script or other initialization command in your ```~/.bashrc``` file (for example, by running ```echo \". ~/Anaconda/etc/profile.d/conda.sh\" >> ~/.bashrc```)  to make sure it's run every time you open a new Bash terminal. Check out the *Anaconda* documentation for your filesystem if you continue to have problems, as ```conda``` commands are required for the remaining parts of the installation.\n\n<br>\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*HDXer* Python Package",
        "parent_header": [
          "HDXer",
          "**Installation**"
        ],
        "type": "Text_excerpt",
        "value": "Download the *HDXer* Python package using git clone.\n\n```bash\ngit clone https://github.com/Lucy-Forrest-Lab/HDXer\n```\n\nOnce the *HDXer* Python package is downloaded, create a new conda environment that includes all of the dependencies.\n\n```bash\ncd HDXer\nconda env create -f HDXER_ENV.yml\n```\n\nEvery time you use *HDXer*, you have to activate the *HDXER_ENV* using conda activate.\n\n```bash\nconda activate HDXER_ENV\n```\n\nWithin the *HDXER_ENV* environment, you have all the dependencies available to install the *HDXer* Python package to your Python environment. *HDXer* is still in development, so we recommend installing the package in 'editable' mode, using either pip:\n\n```bash\ncd ..\npip install -e HDXer\n```\n\nor conda:\n\n```bash\ncd ..\nconda develop HDXer\n```\n\nInstalling in 'editable' mode will allow you to pull updates directly from this Github repository to your local *HDXer* installation, without having to reinstall the package.\n\nNow, you finished installing the *HDXer* Python package. Let's add the path to the *HDXer* directory as in your *.bashrc* and/or *.bash_profile*. The *HDXer* directory will be used throughout the tutorials and referred to as \\$HDXER_PATH.\n\n```bash\ncd HDXer\n\necho -e \"\\nexport HDXER_PATH='${PWD}'\" >| ~/.HDXER_PATH_variable\n\ngrep -qxF \"if [ -f ~/.HDXER_PATH_variable ]; then source ~/.HDXER_PATH_variable; fi\" ~/.bashrc || echo -e \"if [ -f ~/.HDXER_PATH_variable ]; then source ~/.HDXER_PATH_variable; fi\" >> ~/.bashrc\nsource ~/.bashrc\n\ngrep -qxF \"if [ -f ~/.HDXER_PATH_variable ]; then source ~/.HDXER_PATH_variable; fi\" ~/.bash_profile || echo -e \"if [ -f ~/.HDXER_PATH_variable ]; then source ~/.HDXER_PATH_variable; fi\" >> ~/.bash_profile\nsource ~/.bash_profile\n```\n\nYou can easily access the *HDXer* directory using the \\$HDXER_PATH variable. For example, to move to the *HDXer* directory, you simply have to type the following command on terminal:\n\n```bash\ncd $HDXER_PATH\n```\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9936780528176967,
      "result": {
        "original_header": "**Testing**",
        "type": "Text_excerpt",
        "value": "After you've carried out the steps above, we recommend that you run the functional tests provided with HDXer to check for a successful installation. You can also use this as an opportunity to check your Bash and Conda environments have been successfully created.  \nFirst, check the folder ```$HDXER_PATH/HDXer/tests/data/tmp_test_output``` is empty. This is where the test outputs will be stored, so remove any files from previous test runs before running the tests anew. Then, to run the tests, open a new Bash shell and type:\n```bash\ncd $HDXER_PATH\nconda activate HDXER_ENV\npytest -v\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8692890436433087,
      "result": {
        "original_header": "**Testing**",
        "type": "Text_excerpt",
        "value": "First, check the folder ```$HDXER_PATH/HDXer/tests/data/tmp_test_output``` is empty. This is where the test outputs will be stored, so remove any files from previous test runs before running the tests anew. Then, to run the tests, open a new Bash shell and type:\n```bash\ncd $HDXER_PATH\nconda activate HDXER_ENV\npytest -v\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Lucy-Forrest-Lab/HDXer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\nCopyright 2020 Richard T. Bradshaw, Fabrizio Marinelli\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the\nfollowing conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following\ndisclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\nproducts derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HDXer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Lucy-Forrest-Lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 377812,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 89583,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2134,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Promela",
        "size": 529,
        "type": "Programming_language",
        "value": "Promela"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://jupyterlab.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Requirements**",
        "parent_header": [
          "HDXer"
        ],
        "type": "Text_excerpt",
        "value": "- [git](https://git-scm.com/downloads)\n- [NumPy](https://numpy.org/)\n- [MDTraj](http://mdtraj.org/1.9.3/)\n- [matplotlib](https://matplotlib.org)\n- [pytest](https://docs.pytest.org/en/stable)\n- [JupyterLab](https://jupyterlab.readthedocs.io/en/stable/getting_started/overview.html)\n- [HDXer](https://github.com/Lucy-Forrest-Lab/HDXer)\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:34:15",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Tutorials**",
        "parent_header": [
          "HDXer"
        ],
        "type": "Text_excerpt",
        "value": "The tutorials for the ***HDXer*** are available in a series of easy-to-follow Jupyter notebooks. These notebooks can be viewed within the [GitHub page](https://github.com/Lucy-Forrest-Lab/HDXer/tree/master/tutorials) or with Jupyter Lab. You will be able to run code interactively within each notebook using Jupyter Lab. Run the following commands on terminal to access the notebooks using Jupyter Lab:\n\n```bash\ncd $HDXER_PATH/tutorials/notebooks\njupyter lab\n```\n\nIn the *notebooks/* directory, there are five Jupyter notebooks.\n\n- 01_data_prep.ipynb\n- 02_calc_hdx.ipynb\n- 03_reweighting.ipynb\n- 04_decision_plot.ipynb\n- 05_heatmap.ipynb\n\nThese notebooks will walk you through how to run ***HDXer*** and how to analyze the results with an example application of both HDX calculations and ensemble reweighting.\n\nN.B. As per the Jupyter website, the Jupyter Notebook aims to support the latest versions of these browsers:\n\n- Chrome\n- Safari\n- Firefox\n\nUp to date versions of Opera and Edge may also work, but if they don\u2019t, please use one of the supported browsers.\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Copyright",
        "parent_header": [
          "HDXer",
          "**Tutorials**"
        ],
        "type": "Text_excerpt",
        "value": "Copyright (c) 2020, 2021, Richard T. Bradshaw, Fabrizio Marinelli, Paul Suhwan Lee\n\n"
      },
      "source": "https://raw.githubusercontent.com/Lucy-Forrest-Lab/HDXer/master/README.md",
      "technique": "header_analysis"
    }
  ]
}