{
  "application_domain": [
    {
      "confidence": 0.9580149000372616,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Sun, Peter and Marohn, John A.",
        "doi": "10.1063/5.0155617",
        "format": "bibtex",
        "title": "mmodel: A Workflow Framework to Accelerate the Development of Experimental Simulations",
        "type": "Text_excerpt",
        "url": "https://pubs.aip.org/jcp/article/159/4/044801/2904249/mmodel-A-workflow-framework-to-accelerate-the",
        "value": "@article{Sun2023jul,\n    url = {https://pubs.aip.org/jcp/article/159/4/044801/2904249/mmodel-A-workflow-framework-to-accelerate-the},\n    doi = {10.1063/5.0155617},\n    pages = {044801},\n    number = {4},\n    volume = {159},\n    journal = {The Journal of Chemical Physics},\n    month = {Jul},\n    year = {2023},\n    author = {Sun, Peter and Marohn, John A.},\n    title = {mmodel: A Workflow Framework to Accelerate the Development of Experimental Simulations},\n}"
      },
      "source": "https://raw.githubusercontent.com/marohn-group/mmodel/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Marohn-Group/mmodel"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-13T02:15:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-22T21:43:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Modular modeling framework for nonlinear scientific models"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9485324313055684,
      "result": {
        "original_header": "mmodel",
        "type": "Text_excerpt",
        "value": "*mmodel* is a lightweight and modular model-building framework\nfor small-scale and nonlinear models. The package aims to solve\nscientific program prototyping and distribution difficulties, making\nit easier to create modular, fast, and user-friendly packages. \nFor using *mmodel* in a complex scientific workflow, please refer to\nthe `mrfmsim <https://marohn-group.github.io/mrfmsim-docs/overview.html>`__\non how *mmodel* improves the development of magnetic resonance force\nmicroscopy (MRFM) experiments.\n \n"
      },
      "source": "https://raw.githubusercontent.com/marohn-group/mmodel/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9019514046694216,
      "result": {
        "original_header": "Quickstart",
        "type": "Text_excerpt",
        "value": "To create a nonlinear model that has the result of\n`(x + y)log(x + y, base)`: \nThe graph is defined using grouped edges (the *NetworkX* syntax of edge\nthe definition also works.) \nThe functions are then added to node attributes. The order of definition\nis node_name, node_func, output, input (if different from original function),\nand modifiers. \nTo define the model, the name, graph, and handler need to be specified. Additional\nparameters include modifiers, descriptions, and returns lists. The input parameters\nof the model are determined based on the node information. \nOne key feature of ``mmodel`` that differs from other workflows is modifiers, \nwhich modify callables post-definition. Modifiers work on both the node level\nand model level. \n\nWe can inspect the loop node as well as the new model. \n\nUse the ``visualize`` method to draw the graph. For a graph, a simple diagram\nwith only node names shown, and for a model, the diagram shows detailed\nnode and model information. Customized plotting objects can be created\nusing the Visualizer class. \n"
      },
      "source": "https://raw.githubusercontent.com/marohn-group/mmodel/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/marohn-group/mmodel/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Marohn-Group/mmodel"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mmodel"
      },
      "source": "https://raw.githubusercontent.com/marohn-group/mmodel/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "mmodel"
        ],
        "type": "Text_excerpt",
        "value": "Graphviz installation\n^^^^^^^^^^^^^^^^^^^^^\n\nTo view the graph, Graphviz needs to be installed:\n`Graphviz Installation <https://graphviz.org/download/>`_\nFor Windows installation, please choose \"add Graphviz to the\nsystem PATH for all users/current users\" during the setup.\n\nFor macOS systems, sometimes `brew install` results\nin an unexpected installation path, it is recommended to install\nwith conda::\n\n    conda install -c conda-forge pygraphviz\n\nMModel installation\n^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block::\n\n    pip install mmodel\n\nDevelopment installation\n^^^^^^^^^^^^^^^^^^^^^^^^\nMModel uses `poetry <https://python-poetry.org/docs/>`_ as\nthe build system. The package works with both pip and poetry\ninstallation.\n\nTo install dependencies for \"test\" and \"docs\"::\n\n    pip install .[test] .[docs]\n\nTo run the tests in different Python environments and cases \n(py310, py311, coverage and docs)::\n\n    tox\n\nTo create the documentation, run under the \"/docs\" directory::\n\n    make html\n\nCiting *mmdoel*\n^^^^^^^^^^^^^^^^^^\nThe work was `published <https://pubs.aip.org/aip/jcp/article/159/4/\n044801/2904249/mmodel-A-workflow-framework-to-accelerate-the>`_ in the Journal \nof Chemical Physics. \n\nBibTex::\n\n    @article{Sun2023jul,\n      title = {mmodel: A Workflow Framework to Accelerate the Development of Experimental Simulations},\n      author = {Sun, Peter and Marohn, John A.},\n      year = {2023},\n      month = {Jul},\n      journal = {The Journal of Chemical Physics},\n      volume = {159},\n      number = {4},\n      pages = {044801},\n      doi = {10.1063/5.0155617},\n      url = {https://pubs.aip.org/jcp/article/159/4/044801/2904249/mmodel-A-workflow-framework-to-accelerate-the}\n    }\n\n\n.. |GitHub version| image:: https://badge.fury.io/gh/peterhs73%2FMModel.svg\n   :target: https://github.com/Marohn-Group/mmodel\n\n.. |PyPI version shields.io| image:: https://img.shields.io/pypi/v/mmodel.svg\n   :target: https://pypi.python.org/pypi/mmodel/\n\n.. |PyPI pyversions| image:: https://img.shields.io/pypi/pyversions/mmodel.svg\n\n.. |Unittests| image:: https://github.com/Marohn-Group/mmodel/actions/workflows/tox.yml/badge.svg\n    :target: https://github.com/Marohn-Group/mmodel/actions\n\n.. |Docs| image:: https://img.shields.io/badge/Documentation--brightgreen.svg\n    :target: https://github.com/Marohn-Group/mmodel-docs/\n\n.. |DOI| image:: https://img.shields.io/badge/DOI-10.1063/5.0155617-blue.svg\n    :target: https://doi.org/10.1063/5.0155617\n"
      },
      "source": "https://raw.githubusercontent.com/marohn-group/mmodel/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.999956538412825,
      "result": {
        "original_header": "mmodel",
        "type": "Text_excerpt",
        "value": "|GitHub version| |PyPI version shields.io| |PyPI pyversions| |Unittests|\n|DOI| \n"
      },
      "source": "https://raw.githubusercontent.com/marohn-group/mmodel/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9258466655863731,
      "result": {
        "original_header": "Quickstart",
        "type": "Text_excerpt",
        "value": "    # define note objects\n    node_objects = [\n        Node(\"add\", np.add, [\"x\", \"y\"], \"sum_xy\"),\n        Node(\"log\", math.log,  [\"sum_xy\", \"log_base\"], \"log_xy\"),\n        Node(\"function node\", func, output=\"result\"),\n    ] \n.. .. |br| raw:: html\n    \n..     <br/> \n    looped_G = G.replace_subgraph(\n        H,\n        Node(\"loop_node\", loop_node, output=\"looped_z\", modifiers=[loop_input(\"log_base\")]),\n    )\n    looped_G.name = \"looped_graph\" \n"
      },
      "source": "https://raw.githubusercontent.com/marohn-group/mmodel/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8733627889226833,
      "result": {
        "original_header": "Quickstart",
        "type": "Text_excerpt",
        "value": "    import math\n    import numpy as np \n    example_model = Model(\"example_model\", G, handler=MemHandler, doc=\"Test model.\") \n    Test model. \n.. .. image:: example.png\n..   :width: 300\n..   :alt: example model graph \n    from mmodel.modifier import loop_input \n    >>> print(looped_model)\n    looped_model(log_base, x, y)\n    returns: looped_z\n    graph: looped_graph\n    handler: MemHandler\n    \n    >>> print(looped_model.get_node_object(\"loop_node\"))\n    submodel(log_base, sum_xy)\n    return: looped_z\n    functype: <class 'mmodel.model.Model'>\n    modifiers:\n    - loop_input('log_base') \n"
      },
      "source": "https://raw.githubusercontent.com/marohn-group/mmodel/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MModel is distributed with the 3-clause BSD license.::\n\n    Copyright (C) 2022 - 2024\n    Peter Sun <hs859@cornell.edu>\n    John Marohn <jam99@cornell.edu>\n    All rights reserved.\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions are\n    met:\n\n    * Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\n        copyright notice, this list of conditions and the following\n        disclaimer in the documentation and/or other materials provided\n        with the distribution.\n\n    * Neither the name of the NetworkX Developers nor the names of its\n        contributors may be used to endorse or promote products derived\n        from this software without specific prior written permission.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n    \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n    OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n    DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/marohn-group/mmodel/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mmodel"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Marohn-Group"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 127157,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/marohn-group/mmodel/main/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterhs73",
          "type": "User"
        },
        "date_created": "2024-01-31T19:23:38Z",
        "date_published": "2024-01-31T19:29:41Z",
        "description": "# [0.7.0]\r\n\r\nSignificant changes made to internal APIs. Only Python >= 3.10 are supported.\r\nThe signature binding behavior is rewritten to reduce node overhead.\r\n\r\n## Changed\r\n\r\n- Reduce the amount of signature binding behavior to reduce node overhead.\r\n    - The internal function calls are keyword only.\r\n    - The ``Model`` and ``Node`` class instance calls\r\n      can be positional or keyword arguments with proper binding and error\r\n      messages.\r\n- Change Python requirement to 3.10.\r\n- Change ``ModelGraph`` to ``Graph``.\r\n- Change ``draw`` module to ``visualizer`` module.\r\n- - Change node definition to ``Node`` object.\r\n- Change the plotting diagram method to ``visualize`` and use \"outfile\" to export.\r\n- Custom metadata and plotting are through ``MetadataFormatter``\r\n  and ``Visualizer`` class objects.\r\n- Node function parameters are positional or keyword arguments\r\n  instead of keyword only.\r\n- Default values can only be applied to Model class objects.\r\n- Change Model \"description\" attribute to \"doc\".\r\n- ``Node.edit``, ``Graph.edit_node``, ``Model.edit``, and ``Model.edit_node``\r\n  methods to modify and generate new nodes, graphs, and model objects.\r\n- Handler's additional arguments are supplied as a dictionary using\r\n  \"handler_kwargs\" parameter when instantiating ``Model`` object.\r\n- ``loop_modifier`` adds \"_loop\" to the function signature parameter.\r\n- Improved node exception messages.\r\n- Change the edge attribute from \"var\" to \"output\".\r\n- Change attribute undefined message.\r\n\r\n## Removed\r\n\r\n- Remove ``shorcut`` module.\r\n\r\n## Added\r\n\r\n- Add ``node`` module for node definition.\r\n- Add ``signature`` module for function signature operations.\r\n- Add \"inputs\" length checking during node definition.\r\n- Add ``order`` attribute to the ``Model`` class to show the node execution order.",
        "html_url": "https://github.com/Marohn-Group/mmodel/releases/tag/v0.7.0",
        "name": "v0.7.0",
        "release_id": 139383012,
        "tag": "v0.7.0",
        "tarball_url": "https://api.github.com/repos/Marohn-Group/mmodel/tarball/v0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Marohn-Group/mmodel/releases/139383012",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/releases/139383012",
        "zipball_url": "https://api.github.com/repos/Marohn-Group/mmodel/zipball/v0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterhs73",
          "type": "User"
        },
        "date_created": "2023-06-24T15:16:40Z",
        "date_published": "2023-06-24T15:19:15Z",
        "description": "# [0.6.2] - 2023-06-23\r\n\r\n## Changed\r\n\r\n- `set_node_object` accepts additional keyword arguments.\r\n- Allow ``modifier_shortcut`` to change the model name.\r\n- Change PYPI development status to beta.",
        "html_url": "https://github.com/Marohn-Group/mmodel/releases/tag/v0.6.2",
        "name": "v0.6.2",
        "release_id": 109783937,
        "tag": "v0.6.2",
        "tarball_url": "https://api.github.com/repos/Marohn-Group/mmodel/tarball/v0.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/Marohn-Group/mmodel/releases/109783937",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/releases/109783937",
        "zipball_url": "https://api.github.com/repos/Marohn-Group/mmodel/zipball/v0.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterhs73",
          "type": "User"
        },
        "date_created": "2023-04-19T05:45:43Z",
        "date_published": "2023-04-19T05:46:13Z",
        "description": "# [0.6.1] - 2023-4-18\r\n\r\n## Fixed\r\n\r\n- Fix issue #14, where the escaped \"\\\\n\" does not display correctly in the graphviz dot graph.",
        "html_url": "https://github.com/Marohn-Group/mmodel/releases/tag/v0.6.1",
        "name": "v0.6.1",
        "release_id": 100001622,
        "tag": "v0.6.1",
        "tarball_url": "https://api.github.com/repos/Marohn-Group/mmodel/tarball/v0.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Marohn-Group/mmodel/releases/100001622",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/releases/100001622",
        "zipball_url": "https://api.github.com/repos/Marohn-Group/mmodel/zipball/v0.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterhs73",
          "type": "User"
        },
        "date_created": "2023-04-18T00:39:40Z",
        "date_published": "2023-04-18T00:41:39Z",
        "description": "# [0.6.0] - 2023-4-17\r\n\r\nVersion 0.6.0 is a major update with a new Model and modifier API.\r\nThe new API aims to simplify the model definitions and allow for external\r\nPython decorators.\r\n\r\n## Changed\r\n\r\n- The \"handler\" argument in the Model class takes the handler class, and additional\r\n  parameters are passed to the Model class as keyword arguments.\r\n- The modifiers are now defined as proper decorators to facilitate the\r\n  integration with decorators from other Python libraries.\r\n- The \"modifier\" argument in the ModelGraph and Model class takes the modifier\r\n  after the argument definition.\r\n- Modifier naming change to simplify the definition.\r\n- Node object definition allows user-defined attributes.\r\n\r\n## Added\r\n\r\n- Add shortcut module.\r\n- Add the lambda parser that attempts to extract lambda function expression.\r\n- Add ``profile_time`` modifier.\r\n- Add metadata parsing ability to modifiers.",
        "html_url": "https://github.com/Marohn-Group/mmodel/releases/tag/v0.6.0",
        "name": "v0.6.0",
        "release_id": 99833146,
        "tag": "v0.6.0",
        "tarball_url": "https://api.github.com/repos/Marohn-Group/mmodel/tarball/v0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Marohn-Group/mmodel/releases/99833146",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/releases/99833146",
        "zipball_url": "https://api.github.com/repos/Marohn-Group/mmodel/zipball/v0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterhs73",
          "type": "User"
        },
        "date_created": "2023-03-30T20:02:53Z",
        "date_published": "2023-03-30T20:04:40Z",
        "description": "# [0.5.2] - 2023-3-30\r\n\r\n## Fixed\r\n\r\n- Fix the issue where ``deepcopy`` does not copy the \"_parser\" attribute. (Issue #6)\r\n- Fix the inconsistency of format in metadata when the object doesn't have a name. (Issue #4)\r\n\r\n## Changed\r\n\r\n- Change the subgraph from a view to a copy of the graph. (Issue #5) ",
        "html_url": "https://github.com/Marohn-Group/mmodel/releases/tag/v0.5.2",
        "name": "v0.5.2",
        "release_id": 97539215,
        "tag": "v0.5.2",
        "tarball_url": "https://api.github.com/repos/Marohn-Group/mmodel/tarball/v0.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/Marohn-Group/mmodel/releases/97539215",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/releases/97539215",
        "zipball_url": "https://api.github.com/repos/Marohn-Group/mmodel/zipball/v0.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterhs73",
          "type": "User"
        },
        "date_created": "2023-03-29T22:23:30Z",
        "date_published": "2023-03-29T22:25:29Z",
        "description": "# [0.5.1] - 2023-3-29\r\n\r\n## Fixed\r\n\r\n- Fix the issue ``modify_node`` doesn't remove the old modifiers.\r\n\r\n## Changed\r\n\r\n- Change \"executor\" to a private Model class attribute ``Model._executor``.\r\n- Change test node functions and docstring for consistency.\r\n- Change the \"full\" style to \"verbose\" in metadata and drawing methods.\r\n\r\n## Added\r\n\r\n- Add \"order\" attribute to the Model class to show the order of the execution.\r\n- Add \"metadata\" module to format metadata information.\r\n- Add graph information to model metadata.",
        "html_url": "https://github.com/Marohn-Group/mmodel/releases/tag/v0.5.1",
        "name": "v0.5.1",
        "release_id": 97398983,
        "tag": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/Marohn-Group/mmodel/tarball/v0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Marohn-Group/mmodel/releases/97398983",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/releases/97398983",
        "zipball_url": "https://api.github.com/repos/Marohn-Group/mmodel/zipball/v0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterhs73",
          "type": "User"
        },
        "date_created": "2023-03-16T00:02:51Z",
        "date_published": "2023-03-16T00:04:14Z",
        "description": "# [0.5.0] - 2023-3-15\r\n\r\nThe package is moved to `Marohn Group <https://github.com/Marohn-Group/mmodel>`_.\r\n\r\n## API Change\r\n\r\n- Change graph API where individual nodes can only have a single output.\r\n- Change node attribute \"base_func\" to \"_func\".\r\n- Change model attribute \"base_graph\" to \"graph\".\r\n- Change edge attribute \"val\" to \"var\".\r\n- Change ``view_node`` to ``node_metadata``.\r\n- Change ``util.modify_subgraph`` function to ``util.replace_subgraph``.\r\n- Change ``subgraph_by_parameters`` and ``subgraph_by_returns`` to\r\n  ``subnodes_by_inputs`` and ``subnodes_by_outputs``.\r\n- Change ``model_signature`` and ``model_returns`` to\r\n  ``modelgraph_signature`` and ``modelgraph_returns``\r\n  add both as methods in the graph class.\r\n- Change \"returns\" to \"output\". The value should be a string.\r\n- Parameter \"returns\" is a Model exclusive parameter that denotes the graph output.\r\n- Change ``Model.get_node_object`` to ``Model.get_node_func``, the base function is\r\n  returned.\r\n\r\n## Fixed\r\n\r\n- Fix the issue where modify subgraph cannot add inputs or modifiers.\r\n- Fix the issue in tests that node attributes are not compared in `graph_equal()`.\r\n- Fix the issue that the original graph freezes when creating a model.\r\n- Fix the inconsistency between node and model metadata.\r\n- Fix the issue that \"None\" is included in the returns list.\r\n\r\n## Changed\r\n\r\n- Model string output wraps each line at 80 characters.\r\n- ``signature_modifier`` can modify the function with \"kwargs\".\r\n- Default keyword argument does not show up in the model signature.\r\n- Model's graph checking generates more detailed exception messages.\r\n- Allow isolated graphs in the model (for single-node models).\r\n- The subgraph method of the graph is modified to create a subgraph with\r\n  inputs and outputs.\r\n- ``model.graph`` is a property method. A new copy of the graph is created\r\n  every time.\r\n- Specified inputs are no longer added to the modifier list, and the base function is\r\n  modified.\r\n- Model and graph drawing no longer take method as input. Instead, three style\r\n  options are given, plain, short, and full.\r\n\r\n## Added\r\n\r\n- Add graph modification when less than graph returns are specified.\r\n- Add \"__name__\" attribute to handler instance.\r\n- ``pos_signature_modifier`` allows for node objects to have positional-only parameters.\r\n- Graph node definition allows for built-in and numpy.ufunc functions.\r\n- Graph node inputs allow default value with a (parameter, default) tuple.\r\n- Add name attribute to Model.\r\n- Add export to graph and model's ``draw`` method.\r\n- Add a \"parser\" module that parses functions based on different types.\r\n- Add function documentation in metadata.\r\n- Add Python 3.11 testing with tox.",
        "html_url": "https://github.com/Marohn-Group/mmodel/releases/tag/v0.5.0",
        "name": "v0.5.0",
        "release_id": 95776623,
        "tag": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/Marohn-Group/mmodel/tarball/v0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Marohn-Group/mmodel/releases/95776623",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/releases/95776623",
        "zipball_url": "https://api.github.com/repos/Marohn-Group/mmodel/zipball/v0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterhs73",
          "type": "User"
        },
        "date_created": "2022-10-03T05:59:18Z",
        "date_published": "2022-10-03T06:00:10Z",
        "description": "[0.4.0] - 2022-10-3\r\n------------------------\r\n\r\nHandler API is rewritten.\r\n\r\n## Fixed\r\n\r\n- object str label aligns to the left for the graph and model\r\n- H5Handler can write objects to file\r\n- fix bug middle nodes output not included in the final output\r\n\r\n## Changed\r\n\r\n- ``set_node_object()`` allows for \"inputs\" parameter for adjusting node\r\n  function input parameters.\r\n- modifier functions from decorator to closure (both works)\r\n- modifier list contains the arguments when supplied\r\n- handler arguments are supplied with the handler class\r\n- draw graph method no longer has a default value\r\n- model docstring is tied to the model instead of the graph, use 'description'\r\n  for long docstring.\r\n- 'name' attribute required for Model instances\r\n- node execute exception message now includes node information\r\n- add \"returns\" parameter to Model\r\n\r\n## Added\r\n\r\n- custom dictionary `MemData`` as MemHandler's data instance\r\n- custom class `H5Data` as H5Handler's data instance\r\n\r\n## Removed\r\n\r\n- 'info' attribute no longer used in modifiers and handlers.\r\n- \"model\" and \"node\" no longer appended to model and node string output.",
        "html_url": "https://github.com/Marohn-Group/mmodel/releases/tag/v0.4.0",
        "name": "v0.4.0",
        "release_id": 78811894,
        "tag": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/Marohn-Group/mmodel/tarball/v0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Marohn-Group/mmodel/releases/78811894",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/releases/78811894",
        "zipball_url": "https://api.github.com/repos/Marohn-Group/mmodel/zipball/v0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterhs73",
          "type": "User"
        },
        "date_created": "2022-06-13T20:27:52Z",
        "date_published": "2022-06-13T20:42:26Z",
        "description": "# [0.3.1] - 2022-06-12\r\n\r\n## Fixed\r\n\r\n- Python minimum requirement to 3.8\r\n- duplicated test name\r\n\r\n## Added\r\n\r\n- add circleci as the CI tool\r\n",
        "html_url": "https://github.com/Marohn-Group/mmodel/releases/tag/v0.3.1",
        "name": "version 0.3.1",
        "release_id": 69338883,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/Marohn-Group/mmodel/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Marohn-Group/mmodel/releases/69338883",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/releases/69338883",
        "zipball_url": "https://api.github.com/repos/Marohn-Group/mmodel/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterhs73",
          "type": "User"
        },
        "date_created": "2022-06-13T03:37:33Z",
        "date_published": "2022-06-13T03:55:23Z",
        "description": "The initial release of mmodel.",
        "html_url": "https://github.com/Marohn-Group/mmodel/releases/tag/v0.3.0",
        "name": "mmodel v0.3.0",
        "release_id": 69263237,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/Marohn-Group/mmodel/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Marohn-Group/mmodel/releases/69263237",
        "value": "https://api.github.com/repos/Marohn-Group/mmodel/releases/69263237",
        "zipball_url": "https://api.github.com/repos/Marohn-Group/mmodel/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:10:45",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ]
}