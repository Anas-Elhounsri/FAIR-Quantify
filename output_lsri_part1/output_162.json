{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HuangLab-CBI/PhasiHunter"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-07-31T12:27:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-07-31T12:27:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9753378234049498,
      "result": {
        "original_header": "Update log",
        "type": "Text_excerpt",
        "value": "1.0.1 - 25/02/2024\n  1. Ignore unplaced scaffold, mitochondrial and plastid result\n  2. Fixed bugs that caused unexpected exit when using Ensemble or Phytozome reference.\n  3. Fix bugs in loading files with relative paths\n  4. Add a brief introduction about generating degradome map file \n \n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8444216714509787,
      "result": {
        "original_header": "Copyright",
        "type": "Text_excerpt",
        "value": "Copyright \u00a9 Crop Bioinformatics Group (CBI), College of Agricultural, Nanjing Agricultural University. \nFree for academic use. For commercial use, please contact us (huangji@njau.edu.cn) \n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HuangLab-CBI/PhasiHunter/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HuangLab-CBI/PhasiHunter/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HuangLab-CBI/PhasiHunter"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Table of contents"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/bin/preprocess.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/image/MainFig_600dpi.jpg"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/image/image.png"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "User guide",
        "type": "Text_excerpt",
        "value": "Welcome to phasihunter \ud83d\ude09\n\nA multithreaded program for mining phasiRNA regulation pathways based on multiple reference sequences.\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "PhasiHunter workflow",
        "parent_header": [
          "User guide"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"image/MainFig_600dpi.jpg\" alt=\"Image\" width=\"600\">\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Manual Installation",
        "parent_header": [
          "User guide",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Install all dependencies\n2. Clone phasihunter\n\n    `git clone https://github.com/HuangLab-CBI/PhasiHunter.git .`\n\n3. Setting enviroment variable in ~/.bashrc\n\n    `echo \"export PATH=\\$PATH:<phasihunter PATH> >> ~/.bashrc\"`\n\n    example:\n    \n    `echo \"export PATH=\\$PATH:/home/user/volumes/PhasiHunter >> ~/.bashrc\"`\n\n4. type `phasihunter -h` to check phasihunter whether installation correct. If phasiHunter is installed correctly you will see the following content.\n\n    ![Alt text](image/image.png)\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker image",
        "parent_header": [
          "User guide",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "**For convenience, we also provide a Docker image at `https://hub.docker.com/repository/docker/zacksfeng/phasihunter`**\n\nThe Docker image has been configured with all the dependencies required for running phasiHunter.\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda/mamba configure file",
        "parent_header": [
          "User guide",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "We also provide a conda/mamba environment configuration file. User can install all the required dependencies with command `conda/mamba create -f /foo/PhasiHunter/bin/env.yaml`\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Default config.yaml file",
        "parent_header": [
          "User guide",
          "Executing PhasiHunter with one-command module"
        ],
        "type": "Text_excerpt",
        "value": "**Some INPUT and OUTPUT still need modified when using.**\n```yaml\n# Please provide the full path to the input file\n\n# Configure the modules that need to be run\n# y means enable, n means disable\nRuning_module:\n  preprocess: y\n  phase: y\n  integration: y\n  visulization: y\n  initiator_prediction_and_verification:\n    target: y\n    initiator: y\n    deg: y\n  phasiRNA_target_prediction_and_verification:\n    phasiRNA_target: y\n    phasiRNA_deg: y\n\n# Configure the preprocess module\npreprocess:\n  # raw(mode): trim adaptor --> normalization --> length and abundance filter --> mapping\n  # clean(mode): normalization --> length and abundance filter --> mapping\n  # mapping(mode): mapping\n  mode: r # [r | c | m]\n\n  # for r mode: fastq file or fastq.gz file\n  # for c mode: fasta file or fasta.gz file\n  # for m mode: length and abundance filter fasta file\n  # ** INPUT ** \n  inputfile: /home/user/test_osa/SRR5049781.fastq.gz\n\n  # reference sequence fasta file\n  # ** INPUT ** \n  reference_fasta: # disable when index parameter enable, multiple sequence can provided here\n    # - /home/user/test_osa/oryza_sativa_cdna.fa\n    # - /home/user/test_osa/oryza_sativa_gdna.fa\n\n  # index prefix, reference_fasta option will be ignored when index enable, multiple index can provided here\n  # ** INPUT ** \n  index:\n    - /home/user/test_osa/index/oryza_sativa_cdna_index\n    - /home/user/test_osa/index/oryza_sativa_gdna_index\n\n  # outfile name, relative path is work for outputfile, but absolute path is still recommended. The number must be the same as the number of reference_fasta or indexs\n  # ** OUTPUT ** \n  outfile_name: \n    - /home/user/test_osa/SRR5049781_processed_cdna.map\n    - /home/user/test_osa/SRR5049781_processed_gdna.map\n\n  # adaptor trim parallel cores; <8 is recommend, only need in r mode\n  trim_adaptor_cores: 1\n\n  # bowtie parallel cores\n  bowtie_mapping_cores: 1\n\n  # max hits when mapping to ref sequence\n  bowtie_max_hits_cutoff: 10\n\n  # minimal sRNA reads length cutof\n  minimal_sRNA_length_cutoff: 19\n\n  # maxmial sRNA reads length cutoff\n  maxmial_sRNA_length_cutoff: 25\n\n  # sRNA reads cpm cutoff\n  sRNA_expression_cutoff: 1\n\n  # normalization base\n  library_normalization_base: 1000000\n\n\n# Configure the phase module\n# predicting with only one reference sequence or multiple reference sequences\nphase:\n  # map file based on reference transcriptome sequence\n  # ** INPUT ** \n  mapped_cdna_file: /home/user/test_osa/SRR5049781_processed_cdna.map\n\n  # map file based on reference genome sequence\n  # ** INPUT ** \n  mapped_gdna_file: /home/user/test_osa/SRR5049781_processed_gdna.map\n  \n  # map file based on full length transcriptome sequence\n  # ** INPUT ** \n  mapped_flnc_file:\n\n  # reference transcritome sequence, fasta file\n  # ** INPUT ** \n  cdna_fasta: /home/user/test_osa/oryza_sativa_cdna.fa\n\n  # reference genome sequence, fasta file\n  # ** INPUT ** \n  gdna_fasta: /home/user/test_osa/oryza_sativa_gdna.fa\n  \n  # full length transcriptome sequence, fasta file\n  # ** INPUT ** \n  flnc_fasta:\n\n  # sRNA file\n  # ** INPUT ** \n  sRNA_fa: /home/user/test_osa/SRR5049781_trimmed_format_filter.fa\n  \n  # allsiRNA cluster output\n  # ** OUTPUT ** \n  allsiRNA_cluster_output: /home/user/test_osa/phase_a.txt\n  \n  # phasiRNA cluster output file\n  # ** OUTPUT ** \n  phasiRNA_cluster_output: /home/user/test_osa/phase_o.txt\n  \n  # phasiRNA prediction method, h(hypergeometric test) | p(phase score) | b (both)\n  phasiRNA_prediction_method: b\n\n  # phasiRNA cluster island\n  phasiRNA_cluster_island: 5\n\n  # phase length\n  phase_length: 21\n  \n  # phase number\n  phase_number_cutoff: 4\n\n  # max hits when mapping to ref sequence\n  bowtie_max_hits_cutoff: 10\n\n  # parallel number\n  parallel_cores: 20\n\n  # pvalue cutoff, only function with h/b method applied\n  pvalue_cutoff: 0.001\n\n  # phase score cutoff, only function with p/b method applied\n  phase_score_cutoff: 15\n\n  # phase ratio cutoff, only function with p/b method applied\n  phase_ratio_cutoff: 0.4\n\n  # delete .phasiHuter_bowtieIndex, y|n\n  delete_index: y\n\n\n# Configure the integration module\nintegration:\n  # phase module phasiRNA_cluster_output\n  # ** INPUT ** \n  o_inputfile: /home/user/test_osa/phase_o.txt\n\n  # phase module allsiRNA_cluster_output\n  # ** INPUT ** \n  a_inputfile: /home/user/test_osa/phase_a.txt\n\n  # reference genome gff3 file\n  # ** INPUT ** \n  gff3: /home/user/test_osa/oryza_sativa_gdna.gff3\n\n  # y | n, whether exist gdna based PHAS Loci\n  gdna_based_PHAS_Loci: y\n\n  # integration phasiRNA cluster\n  # ** OUTPUT ** \n  integration_phasiRNA_cluster: /home/user/test_osa/integration_o.txt\n\n  # integration all siRNA cluste\n  # ** OUTPUT ** \n  integration_allsiRNA_cluster: /home/user/test_osa/integration_a.txt\n\n  # integration summary\n  # ** OUTPUT ** \n  integration_summary: /home/user/test_osa/integration_s.txt\n\n  # PHAS Loci information\n  # ** OUTPUT ** \n  integration_PHAS_Loci_info: /home/user/test_osa/integration_p.txt\n\n  # parallel number\n  parallel_cores: 1\n\n  # phase number\n  phase_number_cutoff: 4\n\n  # phase length\n  phase_length: 21\n\n  # pvalue cutoff\n  pvalue_cutoff: 0.001\n\n  # phasiRNA cluster island\n  phasiRNA_cluster_island: 5\n\n  # y | n, discard only P method result\n  discard_only_P_method_result: y\n\n  # full length transcript annotation file\n  flnc_annotation_file:\n\n\n# Configure the visulization module\nvisulization:\n  # integration module integration_phasiRNA_cluster\n  # ** INPUT ** \n  o_inputfile: /home/user/test_osa/integration_o.txt\n\n  # integration module integration_allsiRNA_cluster\n  # ** INPUT ** \n  a_inputfile: /home/user/test_osa/integration_a.txt\n\n  # integration integration_PHAS_Loci_info\n  # ** INPUT ** \n  p_inputfile: /home/user/test_osa/integration_p.txt\n\n  # alignment file\n  # ** OUTPUT ** \n  output_alignment_file: /home/user/test_osa/alignment.txt\n\n  # phasiRNA fasta file\n  # ** OUTPUT ** \n  output_phasiRNA_fa: /home/user/test_osa/phasiRNA.fa\n\n  # PHAS Gene fasta file, Format: >geneid/chr\\tphasiRNA_cluster_region(start end)\\tseq_region(start end)\n  # ** OUTPUT ** \n  output_PHAS_fa: /home/user/test_osa/PHAS.fa\n\n  # phase length\n  phase_length: 21\n\n  # the number for reducing the size of Y-axis\n  Y_axis: 10\n\n  # reference transcritome sequence, fasta file, enable cdna based phasiRNA.fa, PHAS.fa, Alignmen, Plot output\n  # ** INPUT ** \n  cdna_fasta: /home/user/test_osa/oryza_sativa_cdna.fa\n\n  # reference genome sequence, fasta file, enable gdna based phasiRNA.fa, PHAS.fa, Alignmen, Plot output\n  # ** INPUT ** \n  gdna_fasta: /home/user/test_osa/oryza_sativa_gdna.fa\n\n  # full length transcriptome sequence, fasta file, enable flnc based phasiRNA.fa, PHAS.fa, Alignmen, Plot output\n  # ** INPUT ** \n  flnc_fasta:\n\n  # plot cdna based phasiRNA cluster, y | n\n  plot_cdna_based_phasiRNA_cluster: y \n\n  # plot gdna based phasiRNA cluster, y | n\n  plot_gdna_based_phasiRNA_cluster: y\n\n  # plot flnc based phasiRNA cluster, y | n\n  plot_flnc_based_phasiRNA_cluster: n\n\n\n# Configure the target module\ntarget:\n  # query miRNA file, fasta format\n  # ** INPUT ** \n  query_fa: /home/user/test_osa/osa.miRbase.fa\n\n  # PHAS.fa/transcript.fa, fasta file\n  # ** INPUT ** \n  subject_fa: /home/user/test_osa/PHAS.fa\n\n  # output file\n  # ** OUTPUT ** \n  output: /home/user/test_osa/miR_target.txt\n\n  # max. total mispairs\n  total_misp: off\n\n  # max. seed mispairs\n  seed_misp: off\n\n  # score cutoff\n  score: 4\n\n  # eTM search \n  mimics: off\n\n  # eTM stringency, (0: strict, 1: relaxed)\n  mimics_str: 0\n\n  # fasta36 threads\n  threads: 10\n\n\n# Configure the initiator module\ninitiator:\n  # integration module integration_phasiRNA_cluster\n  # ** INPUT ** \n  i_input_file: /home/user/test_osa/integration_o.txt\n\n  # the target predicted by psRNAtarget server or target module\n  # ** INPUT ** \n  j_input_file: /home/user/test_osa/miR_target.txt\n\n  # integration module integration_PHAS_Loci_info\n  # ** INPUT ** \n  p_input_file: /home/user/test_osa/integration_p.txt\n\n  # the microRNA distance away to phase border, default=105(21) or 120 (24)\n  sRNA_distance: 5\n\n  # 21 or 24, the phase length of 21 or 24,\n  phase_length: 21\n\n  # 0 or 1, the position of cleavage at 10(0) or 9-11 (1)\n  cleavage_shift: 1\n\n  # outputfilename\n  # ** OUTPUT ** \n  outputfile: /home/user/test_osa/initiator.txt\n\n\n# Configure the deg module\ndeg:\n  # mapping file for degradome data mapping transcripts, by bowtie\n  # ** INPUT ** \n  inputfile: \n    - /home/user/test_osa/deg/GSM1040649_format_filter.map\n    - /home/user/test_osa/deg/GSM1040650_format_filter.map\n  \n  # miRNA sequences used for target prediction, fasta\n  # ** INPUT ** \n  query_fa: /home/user/test_osa/osa.miRbase.fa\n\n  # initiator module outputfile\n  # ** INPUT ** \n  STI_result: /home/user/test_osa/initiator.txt\n\n  # transcripts file, fasta\n  # ** INPUT ** \n  transcript_fa: /home/user/test_osa/oryza_sativa_cdna.fa\n\n  # matched map file with only matched records\n  # filename only, do not input directory\n  # ** OUTPUT ** \n  output: \n    - GSM1040649_MTI_deg.txt\n    - GSM1040650_MTI_deg.txt\n  \n  # if shifts=0 then cleaved exactly at pos.10\n  shift: 1\n\n  # minum number of degradome reads, int\n  minum_deg_abun: 0\n\n  # enable the plot function, y | n\n  T_plot: y\n\n  # y | n, use initiator output information\n  initiator: y\n\n  # 1,plot only category 1; 2, plot categories 1 and 2\n  plot_categories: 1\n\n  # output folder name, for exporting t-plot images and outputfile\n  plot_folder: MTI_deg\n\n  # library name\n  library:\n    - GSM1040649\n    - GSM1040650\n  \n  # only output cat_1 and cat_2 information\n  less: y\n\n\n# Configure the phasiRNA_target module\nphasiRNA_target:\n  # query phasiRNA file, fasta format\n  # ** INPUT ** \n  query_fa: /home/user/test_osa/phasiRNA.fa\n\n  # target file, fasta file\n  # ** INPUT ** \n  subject_fa: /home/user/test_osa/oryza_sativa_cdna.fa\n\n  # output file\n  # ** OUTPUT ** \n  output: /home/user/test_osa/phasiRNA_target.txt\n\n  # max. total mispairs\n  total_misp: off\n\n  # max. seed mispairs\n  seed_misp: off\n\n  # score cutoff\n  score: 4\n\n  # eTM search \n  mimics: off\n\n  # eTM stringency, (0: strict, 1: relaxed)\n  mimics_str: 0\n\n  # fasta36 threads\n  threads: 10\n\n\n# Configure the phasiRNA_deg module\nphasiRNA_deg:\n  # mapping file for degradome data mapping transcripts, by bowtie\n  # ** INPUT ** \n  inputfile: \n    - /home/user/test_osa/deg/GSM1040649_format_filter.map\n    - /home/user/test_osa/deg/GSM1040650_format_filter.map\n\n  # phasiRNA sequences used for target prediction, fasta\n  # ** INPUT ** \n  query_fa: /home/user/test_osa/phasiRNA.fa\n\n  # psRNATarget/target outputfile\n  # ** INPUT ** \n  STI_result: /home/user/test_osa/phasiRNA_target.txt\n\n  # transcripts file, fasta\n  # ** INPUT ** \n  transcript_fa: /home/user/test_osa/oryza_sativa_cdna.fa\n\n  # matched map file with only matched records\n  # filename only, do not input directory\n  # ** OUTPUT ** \n  output: \n    - GSM1040649_PTI_deg.txt\n    - GSM1040650_PTI_deg.txt\n  \n  # if shifts=0 then cleaved exactly at pos.10\n  shift: 1\n\n  # minum number of degradome reads, int\n  minum_deg_abun: 0\n\n  # enable the plot function, y | n\n  T_plot: y\n\n  # y | n, use initiator output information, for phasiRNA_deg, it must be n\n  initiator: n\n\n  # 1,plot only category 1; 2, plot categories 1 and 2\n  plot_categories: 1\n\n  # output folder name, for exporting t-plot images and outputfile\n  plot_folder: PTI_deg\n\n  # library name\n  library:\n    - GSM1040649\n    - GSM1040650\n\n  # only output cat_1 and cat_2 information\n  less: y\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to generate degradome mapping file",
        "parent_header": [
          "User guide",
          "Additional"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n# ATTENTION: The transcriptome index used for mapping degradome reads must correspond to the one utilized for predicting phasiRNAs\nphasihunter preprocess -m c -i <deg_clean.fa> -mh 10 -mi 0 -ma 100 -e 1 -n 1000000 -o <deg_clean.map> -in <transcriptome index>\n```"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "The main output file",
        "parent_header": [
          "User guide"
        ],
        "type": "Text_excerpt",
        "value": "- preprocess module\n  - preprocessed fasta file\n  - alignment file generated by bowtie\n- phase module\n  - redundant allsiRNA cluster output\n  \t- table header: gene, strand, sRNA_position, sRNA_abundance, sRNA_record, sRNA_sequence, sRNA_length, pvalue, phase_ratio, phase_number, phase_abundance, phase_score, marker\n  - redundant phasiRNA cluster output\n  \t- table header: PHAS_gene, strand, phasiRNA_position, phasiRNA_abundance, phasiRNA_record, phasiRNA_sequence, phasiRNA_length, pvalue, phase_ratio, phase_number, phase_abundance, phase_score, marker\n- integration module\n  - integrated PHAS loci information\n  - integration summary information\n  - integrated allsiRNA cluster output\n  \t- table header: gene, strand, sRNA_position, sRNA_abundance, sRNA_record, sRNA_sequence, sRNA_length, phase_ratio, phase_number, phase_abundance, phase_score, pvalue, gene_annotation, marker\n  - integrated phasiRNA cluster output\n  \t- table header: PHAS_gene, strand, phasiRNA_position, phasiRNA_abundance, phasiRNA_record, phasiRNA_sequence, phasiRNA_length, phase_ratio, phase_number, phase_abundance, phase_score, pvalue, PHAS_gene_annotation, marker\n- visulization module\n  - phasiRNA fasta file\n    - id description: recorder__PHAS_gene__position__abundance__strand__order\n  - PHAS loci fasta file\n    - id description: recorder__PHAS_gene__[start]\\_\\_[end]\\_\\_[extend_start]\\_\\_[extend_end]\\_\\_[marker]\n  - phasiRNA alignment result\n  - phasiRNA cluster plot\n- initiator_prediction_and_verification\n  - miRNA-PHAS_loci interaction output\n  - Predicted phase initiator output\n  - vertified phase initiator output with degradome data\n  - degradome verification t-plot\n- phasiRNA_target_prediction_and_verification\n  - phasiRNA-target interaction output\n  - vertified phasiRNA-target interaction with degradome data\n  - degradome verification t-plot\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HuangLab-CBI/PhasiHunter/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 HuangLab-CBI\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PhasiHunter"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "HuangLab-CBI"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 379929,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 17854,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 11466,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "User guide"
        ],
        "type": "Text_excerpt",
        "value": "phasihunter is a CLI program runing on linux platform. The correction runing of phasihunter depends on some existing softwares.\n- Bowtie (Langmead, et al., 2009. Genome Biol)\n- Biopython (Cock, et al., 2009. Bioinformatics)\n- Bedtools (Quinlan and Hall, 2010. Bioinformatics)\n- Dnapi (Tsuji and Weng, 2016. PloS One)\n- Trim_galore (https://github.com/FelixKrueger/TrimGalore)\n- Seqkit (Shen, et al., 2016. PloS One)\n- Perl5 (https://www.perl.org)\n- Fasta36 (Pearson and Lipman, 1988. Proc Natl Acad Sci U S A)\n- TarHunter (Ma, et al., 2018. Bioinformatics)\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Executing PhasiHunter with step-by-step submodules.",
        "parent_header": [
          "User guide"
        ],
        "type": "Text_excerpt",
        "value": "Parameter in < > means necessary; parameter in [ ] means optional\n\n1. Data pre-process\n```bash\nphasiHunter preprocess -m r -i /home/user/test_osa/SRR5049781.fastq.gz -mi 19 -ma 25 -e 1 -n 1000000 -o /home/user/test_osa/SRR5049781_processed_cdna.map -in /home/user/test_osa/index/oryza_sativa_cdna_index\n\nphasiHunter preprocess -m m -i /home/user/test_osa/SRR5049781_trimmed_format_filter.fa -mi 19 -ma 25 -e 1 -n 1000000 -o /home/user/test_osa/SRR5049781_processed_gdna.map -in /home/user/test_osa/index/oryza_sativa_gdna_index\n```\n\n- preprocess module usage\n\n```txt\nHelp messeage:\n  options: \n    # necessary options:\n    -m:  string --  mode: r | c | m;\n                    raw(mode): trim adaptor --> normalization --> length and abundance filter --> mapping\n                    clean(mode): normalization --> length and abundance filter --> mapping\n                    mapping(mode): mapping\n    -i:  file   --  for r mode: fastq file or fastq.gz file\n                    for c mode: fasta file or fasta.gz file\n                    for m mode: length and abundance filter fasta file\n    -r:  file   --  reference sequence fasta file\n    -in: string --  index prefix, -r option will be ignored when -in enable\n    -o:  outfile --  outfile name\n\n    # options with default value\n    -j:  int    --  adaptor trim parallel cores; <8 is recommend, only need in r mode, default=1\n    -bj: int    --  bowtie parallel cores; defalut=1\n    -mh: int    --  max hits when mapping to ref sequence, default=10\n    -mi: int    --  minimal sRNA reads length cutoff, default=19\n    -ma: int    --  maxmial sRNA reads length cutoff, default=25\n    -e:  float  --  sRNA reads cpm cutoff, default=1 \n    -n:  int    --  normalization base, default=1000000\n\n\n    # other\n    -v:         --  print version information\n    -h:         --  print help information\n```\n\n2. PhasiRNA and PHAS loci prediction\n```bash \nphasiHunter phase -cm /home/user/test_osa/SRR5049781_processed_cdna.map -c /home/user/test_osa/oryza_sativa_cdna.fa -gm /home/user/test_osa/SRR5049781_processed_gdna.map -g /home/user/test_osa/oryza_sativa_gdna.fa -fm None -f None -fa /home/user/test_osa/SRR5049781_trimmed_format_filter.fa -a /home/user/test_osa/phase_a.txt -o /home/user/test_osa/phase_o.txt -me b -il 5 -pl 21 -pn 4 -mh 10 -j 20 -pv 0.001 -ps 15 -pr 0.4 -cl y\n```\n- phase module usage\n```txt\nphase usage:\n  option:\n    -cm: file  --  map file based on reference transcriptome sequence\n    -c:  file  --  reference transcritome sequence, fasta file\n    -gm: file  --  map file based on reference genome sequence\n    -g:  file  --  reference genome sequence, fasta file\n    -fm: file  --  map file based on full length transcriptome sequence\n    -f:  file  --  full length transcriptome sequence, fasta file\n    -fa: file  --  sRNA file\n    -a:  out   --  allsiRNA cluster output file, default name is phase_a.txt\n    -o:  out   --  phasiRNA cluster output file, default name is phase_o.txt\n    -me: str   --  phasiRNA prediction method, h(hypergeometric test) | p(phase score) | b (both), default=b\n    -il: int   --  phasiRNA cluster island, default=5\n    -pl: int   --  phase length, 21 | 24, default=21\n    -pn: int   --  phase number, default=4\n    -mh: int   --  max hits when mapping to ref sequence, default=10\n    -j:  int   --  parallel number, default=1\n    -pv: float --  pvalue cutoff, default=0.001, only function with h/b method applied\n    -ps: float --  phase score cutoff, default=15, only function with p/b method applied\n    -pr: float --  phase ratio cutoff, default=0.4, only function with p/b method applied\n    -cl: str   --  delete .phasiHuter_bowtieIndex, y|n, default=y\n    -v:        --  print version information\n    -h:        --  print help information\n```\n\n3. PhasiRNA and PHAS loci result integration\n```bash\nphasiHunter integration -io /home/user/test_osa/phase_o.txt -ia /home/user/test_osa/phase_a.txt -an /home/user/test_osa/oryza_sativa_gdna.gff3 -g y -o /home/user/test_osa/integration_o.txt -a /home/user/test_osa/integration_a.txt -s /home/user/test_osa/integration_s.txt -po /home/user/test_osa/integration_p.txt -j 1 -pn 4 -pl 21 -pv 0.001 -il 5\n```\n- integration module usage\n```txt\nintegration usage:\n  option:\n    # necessary options:\n    -io: file  --  phase module -o output file\n    -ia: file  --  phase module -a output file\n    -an: file  --  reference genome gff3 file\n    -g:  str   --  y | n, whether exist gdna based PHAS Loci\n\n    # options with default value\n    -o:  out  --  integration phasiRNA cluster, default name is integration_o.txt\n    -a:  out  --  integration all siRNA cluster, default name is integration_a.txt\n    -s:  out  --  integration summary, default name is integration_s.txt\n    -po: out  --  PHAS Loci information, default name is integration_p.txt\n    -j:  int   --  parallel number, default=1\n    -pn: int   --  phase number, default=4\n    -pl: int   --  phase length, 21 | 24, default=21\n    -pv: float --  pvalue cutoff, default=0.001\n    -il: int   --  phasiRNA cluster island, default=5\n    -dp: str   -- y | n, discard only P method result, default=y\n\n    # optional options\n    -fn: file  --  full length transcript annotation file\n\n    # other\n    -v:       --  print version information\n    -h:       --  print help information\n```\n\n4. Print phasiRNA_cluster plot, phasiRNA.fa, PHAS.fa\n```bash\nphasiHunter visulization -io /home/user/test_osa/integration_o.txt -ia /home/user/test_osa/integration_a.txt -ip /home/user/test_osa/integration_p.txt -a /home/user/test_osa/alignment.txt -o /home/user/test_osa/phasiRNA.fa -p /home/user/test_osa/PHAS.fa -pl 21 -m 10 -c /home/user/test_osa/oryza_sativa_cdna.fa -g /home/user/test_osa/oryza_sativa_gdna.fa -f None -pc y -pg y -pf n\n```\n- visulization module usage\n```txt\nvisulization usage:\n  option:\n    # necessary options:\n    -io: file  --  integration -io outputfile\n    -ia: file  --  integration -ia outputfile\n    -ip: file  --  integration -po outputfile\n    -a:  out   --  alignment file, default name is alignment.txt\n    -o:  out   --  phasiRNA fasta file, default name is phasiRNA.fa\n    -p:  out   --  PHAS Gene fasta file; Format: >geneid/chr\\tphasiRNA_cluster_region(start end)\\tseq_region(start end), default name is PHAS.fa\n\n    # options with default value\n    -pl: int   --  phase length, 21 | 24, default=21\n    -m:  float  --  the number for reducing the size of Y-axis. default=10\n\n    # optional options\n    -c:  file  --  reference transcritome sequence, fasta file, enable cdna based phasiRNA.fa, PHAS.fa, Alignmen, Plot output\n    -g:  file  --  reference genome sequence, fasta file, enable gdna based phasiRNA.fa, PHAS.fa, Alignmen, Plot output\n    -f:  file  --  full length transcriptome sequence, fasta file, enable flnc based phasiRNA.fa, PHAS.fa, Alignmen, Plot output\n    -pc: str  --  plot cdna based phasiRNA cluster, y | n, defaut=y\n    -pg: str  --  plot gdna based phasiRNA cluster, y | n, defaut=y\n    -pf: str  --  plot flnc based phasiRNA cluster, y | n, defaut=y\n\n    # other\n    -v:        --  print version information\n    -h:        --  print help information\n```\n\n5. Initiator prediction and verification\n```bash \nphasiHunter target -q /home/user/test_osa/osa.miRbase.fa -b /home/user/test_osa/PHAS.fa -o /home/user/test_osa/miR_target.txt -T 10\n\nphasiHunter initiator -i /home/user/test_osa/integration_o.txt -j /home/user/test_osa/miR_target.txt -ip /home/user/test_osa/integration_p.txt -pd 5 -pl 21 -ps 1 -o /home/user/test_osa/initiator.txt\n\nphasiHunter deg -i /home/user/test_osa/deg/GSM1040649_format_filter.map -q /home/user/test_osa/osa.miRbase.fa -j /home/user/test_osa/initiator.txt -t /home/user/test_osa/oryza_sativa_cdna.fa -o GSM1040649_MTI_deg.txt -s 1 -m 0 -p y -in y -pl 1 -pf MTI_deg --lib GSM1040649 -less\n```\n\n- target module usage\n```txt\nUsage:\n    perl /home/user/volumes/PhasiHunter/bin/TarHunterL_Modified.pl -q <mir_file> -b <targ_file> -o <out_file> [Options]\n\nRequired arguments:\n    -q (--qmir):         query miRNA file\n    -b (--targ):         target file\n    -o (--output):       output file\n\nOptions:\n\n    -M (--total_misp):   max. total mispairs               [Default: off]\n    -m (--seed_misp):    max. seed mispairs                [Default: off]\n    -f (--score):        score cutoff                      [Default:  4 ]\n\n    -I (--mimics):       eTM search                        [Default: off]\n    -i (--mimics_str):   eTM stringency\n                        (0: strict, 1: relaxed)           [Default:  0 ]\n\n    -T (--threads):      FASTA threads                     [Default:  1 ]\n    -t (--tab):          tabular format output             [Default: off]\n    -h (--help):         help information\n\nDependencies:\n    fasta36    \n```\n\n- initiator module usage\n```txt\ninitiator option:\n  -i  [str]integration -o output\n  -j  [str]the target predicted by psRNAtarget server or target module\n  -ip [str]integration -po output\n  -pd [int]the microRNA distance away to phase border, default=105(21) or 120 (24), optional\n  -pl [int]21 or 24, the phase length of 21 or 24, default=21\n  -ps [int]0 or 1, the position of cleavage at 10(0) or 9-11 (1), default=1\n  -o  [str]outputfilename.\n  -h  print the version and details of the usage\n```\n\n- deg module usage\n```txt\n// function: vertified the sRNA - Target interaction with degradome data\n\n  options:\n  -i: <inputfilename>     --    mapping file for degradome data mapping transcripts, by bowtie\n  -q: <sRNA fasta>        --    small RNA sequences used for target prediction, fasta\n  -j: <inputfilename>     --    from psRNATarget batch download file or initiator output\n  -t: <inputfilename>     --    transcripts file, fasta\n  -o: <outputfilename>    --    matched map file with only matched records\n  -s: <shift_number>      --    if shifts=0 then cleaved exactly at pos.10, default=1\n  -m: <minum deg_num>     --    minum number of degradome reads, int, default=0\n  -p: <T-plot function>   --    enable the plot function, y | n, default='n' \n  -in: <bool>             --    y | n, use initiator output information\n  -pl [int]               --    1,plot only category 1; 2, plot categories 1 and 2, default=1\n  -pf [str]               --    output folder name, for exporting t-plot images and outputfile\n  --lib [str]             --    library name\n  -less                   --    only output cat_1 and cat_2 information\n\n  ***********************\n  //About the categories:\n  Cat #1, degradome read at the cleavage site is most abundant.\n  Cat #2, the read is less than the most abudant one, but higher than the median.\n  Cat #3, the read is less than the median, but high than 1\n  Cat #4, the read is identical or less than 1 (if degradome data is normalized)\n```\n\n6. PhasiRNA target prediction and verification\n```bash\nphasiHunter target -q /home/user/test_osa/phasiRNA.fa -b /home/user/test_osa/oryza_sativa_cdna.fa -o /home/user/test_osa/phasiRNA_target.txt -T 10\n\nphasiHunter deg -i /home/user/test_osa/deg/GSM1040649_format_filter.map -q /home/user/test_osa/phasiRNA.fa -j /home/user/test_osa/phasiRNA_target.txt -t /home/user/test_osa/oryza_sativa_cdna.fa -o GSM1040649_PTI_deg.txt -s 1 -m 0 -p y -in n -pl 1 -pf PTI_deg --lib GSM1040649 -less\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Executing PhasiHunter with one-command module",
        "parent_header": [
          "User guide"
        ],
        "type": "Text_excerpt",
        "value": "**One-command module usage**\n```txt\nOne command executing mode\n\nUsage: \n    phasiHunter run [-i] [config file]\n    phasiHunter run -d\n\noption:\n    -i: yaml format config file\n    -d: using the default config, defalut config file is /foo/PhasiHunter/bin/config.yaml\n    -h: print help information\n\nWARNIG: make sure choose the correct config file before run this command\n```"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Default config.yaml file",
        "parent_header": [
          "User guide",
          "Executing PhasiHunter with one-command module"
        ],
        "type": "Text_excerpt",
        "value": "**Some INPUT and OUTPUT still need modified when using.**\n```yaml\n# Please provide the full path to the input file\n\n# Configure the modules that need to be run\n# y means enable, n means disable\nRuning_module:\n  preprocess: y\n  phase: y\n  integration: y\n  visulization: y\n  initiator_prediction_and_verification:\n    target: y\n    initiator: y\n    deg: y\n  phasiRNA_target_prediction_and_verification:\n    phasiRNA_target: y\n    phasiRNA_deg: y\n\n# Configure the preprocess module\npreprocess:\n  # raw(mode): trim adaptor --> normalization --> length and abundance filter --> mapping\n  # clean(mode): normalization --> length and abundance filter --> mapping\n  # mapping(mode): mapping\n  mode: r # [r | c | m]\n\n  # for r mode: fastq file or fastq.gz file\n  # for c mode: fasta file or fasta.gz file\n  # for m mode: length and abundance filter fasta file\n  # ** INPUT ** \n  inputfile: /home/user/test_osa/SRR5049781.fastq.gz\n\n  # reference sequence fasta file\n  # ** INPUT ** \n  reference_fasta: # disable when index parameter enable, multiple sequence can provided here\n    # - /home/user/test_osa/oryza_sativa_cdna.fa\n    # - /home/user/test_osa/oryza_sativa_gdna.fa\n\n  # index prefix, reference_fasta option will be ignored when index enable, multiple index can provided here\n  # ** INPUT ** \n  index:\n    - /home/user/test_osa/index/oryza_sativa_cdna_index\n    - /home/user/test_osa/index/oryza_sativa_gdna_index\n\n  # outfile name, relative path is work for outputfile, but absolute path is still recommended. The number must be the same as the number of reference_fasta or indexs\n  # ** OUTPUT ** \n  outfile_name: \n    - /home/user/test_osa/SRR5049781_processed_cdna.map\n    - /home/user/test_osa/SRR5049781_processed_gdna.map\n\n  # adaptor trim parallel cores; <8 is recommend, only need in r mode\n  trim_adaptor_cores: 1\n\n  # bowtie parallel cores\n  bowtie_mapping_cores: 1\n\n  # max hits when mapping to ref sequence\n  bowtie_max_hits_cutoff: 10\n\n  # minimal sRNA reads length cutof\n  minimal_sRNA_length_cutoff: 19\n\n  # maxmial sRNA reads length cutoff\n  maxmial_sRNA_length_cutoff: 25\n\n  # sRNA reads cpm cutoff\n  sRNA_expression_cutoff: 1\n\n  # normalization base\n  library_normalization_base: 1000000\n\n\n# Configure the phase module\n# predicting with only one reference sequence or multiple reference sequences\nphase:\n  # map file based on reference transcriptome sequence\n  # ** INPUT ** \n  mapped_cdna_file: /home/user/test_osa/SRR5049781_processed_cdna.map\n\n  # map file based on reference genome sequence\n  # ** INPUT ** \n  mapped_gdna_file: /home/user/test_osa/SRR5049781_processed_gdna.map\n  \n  # map file based on full length transcriptome sequence\n  # ** INPUT ** \n  mapped_flnc_file:\n\n  # reference transcritome sequence, fasta file\n  # ** INPUT ** \n  cdna_fasta: /home/user/test_osa/oryza_sativa_cdna.fa\n\n  # reference genome sequence, fasta file\n  # ** INPUT ** \n  gdna_fasta: /home/user/test_osa/oryza_sativa_gdna.fa\n  \n  # full length transcriptome sequence, fasta file\n  # ** INPUT ** \n  flnc_fasta:\n\n  # sRNA file\n  # ** INPUT ** \n  sRNA_fa: /home/user/test_osa/SRR5049781_trimmed_format_filter.fa\n  \n  # allsiRNA cluster output\n  # ** OUTPUT ** \n  allsiRNA_cluster_output: /home/user/test_osa/phase_a.txt\n  \n  # phasiRNA cluster output file\n  # ** OUTPUT ** \n  phasiRNA_cluster_output: /home/user/test_osa/phase_o.txt\n  \n  # phasiRNA prediction method, h(hypergeometric test) | p(phase score) | b (both)\n  phasiRNA_prediction_method: b\n\n  # phasiRNA cluster island\n  phasiRNA_cluster_island: 5\n\n  # phase length\n  phase_length: 21\n  \n  # phase number\n  phase_number_cutoff: 4\n\n  # max hits when mapping to ref sequence\n  bowtie_max_hits_cutoff: 10\n\n  # parallel number\n  parallel_cores: 20\n\n  # pvalue cutoff, only function with h/b method applied\n  pvalue_cutoff: 0.001\n\n  # phase score cutoff, only function with p/b method applied\n  phase_score_cutoff: 15\n\n  # phase ratio cutoff, only function with p/b method applied\n  phase_ratio_cutoff: 0.4\n\n  # delete .phasiHuter_bowtieIndex, y|n\n  delete_index: y\n\n\n# Configure the integration module\nintegration:\n  # phase module phasiRNA_cluster_output\n  # ** INPUT ** \n  o_inputfile: /home/user/test_osa/phase_o.txt\n\n  # phase module allsiRNA_cluster_output\n  # ** INPUT ** \n  a_inputfile: /home/user/test_osa/phase_a.txt\n\n  # reference genome gff3 file\n  # ** INPUT ** \n  gff3: /home/user/test_osa/oryza_sativa_gdna.gff3\n\n  # y | n, whether exist gdna based PHAS Loci\n  gdna_based_PHAS_Loci: y\n\n  # integration phasiRNA cluster\n  # ** OUTPUT ** \n  integration_phasiRNA_cluster: /home/user/test_osa/integration_o.txt\n\n  # integration all siRNA cluste\n  # ** OUTPUT ** \n  integration_allsiRNA_cluster: /home/user/test_osa/integration_a.txt\n\n  # integration summary\n  # ** OUTPUT ** \n  integration_summary: /home/user/test_osa/integration_s.txt\n\n  # PHAS Loci information\n  # ** OUTPUT ** \n  integration_PHAS_Loci_info: /home/user/test_osa/integration_p.txt\n\n  # parallel number\n  parallel_cores: 1\n\n  # phase number\n  phase_number_cutoff: 4\n\n  # phase length\n  phase_length: 21\n\n  # pvalue cutoff\n  pvalue_cutoff: 0.001\n\n  # phasiRNA cluster island\n  phasiRNA_cluster_island: 5\n\n  # y | n, discard only P method result\n  discard_only_P_method_result: y\n\n  # full length transcript annotation file\n  flnc_annotation_file:\n\n\n# Configure the visulization module\nvisulization:\n  # integration module integration_phasiRNA_cluster\n  # ** INPUT ** \n  o_inputfile: /home/user/test_osa/integration_o.txt\n\n  # integration module integration_allsiRNA_cluster\n  # ** INPUT ** \n  a_inputfile: /home/user/test_osa/integration_a.txt\n\n  # integration integration_PHAS_Loci_info\n  # ** INPUT ** \n  p_inputfile: /home/user/test_osa/integration_p.txt\n\n  # alignment file\n  # ** OUTPUT ** \n  output_alignment_file: /home/user/test_osa/alignment.txt\n\n  # phasiRNA fasta file\n  # ** OUTPUT ** \n  output_phasiRNA_fa: /home/user/test_osa/phasiRNA.fa\n\n  # PHAS Gene fasta file, Format: >geneid/chr\\tphasiRNA_cluster_region(start end)\\tseq_region(start end)\n  # ** OUTPUT ** \n  output_PHAS_fa: /home/user/test_osa/PHAS.fa\n\n  # phase length\n  phase_length: 21\n\n  # the number for reducing the size of Y-axis\n  Y_axis: 10\n\n  # reference transcritome sequence, fasta file, enable cdna based phasiRNA.fa, PHAS.fa, Alignmen, Plot output\n  # ** INPUT ** \n  cdna_fasta: /home/user/test_osa/oryza_sativa_cdna.fa\n\n  # reference genome sequence, fasta file, enable gdna based phasiRNA.fa, PHAS.fa, Alignmen, Plot output\n  # ** INPUT ** \n  gdna_fasta: /home/user/test_osa/oryza_sativa_gdna.fa\n\n  # full length transcriptome sequence, fasta file, enable flnc based phasiRNA.fa, PHAS.fa, Alignmen, Plot output\n  # ** INPUT ** \n  flnc_fasta:\n\n  # plot cdna based phasiRNA cluster, y | n\n  plot_cdna_based_phasiRNA_cluster: y \n\n  # plot gdna based phasiRNA cluster, y | n\n  plot_gdna_based_phasiRNA_cluster: y\n\n  # plot flnc based phasiRNA cluster, y | n\n  plot_flnc_based_phasiRNA_cluster: n\n\n\n# Configure the target module\ntarget:\n  # query miRNA file, fasta format\n  # ** INPUT ** \n  query_fa: /home/user/test_osa/osa.miRbase.fa\n\n  # PHAS.fa/transcript.fa, fasta file\n  # ** INPUT ** \n  subject_fa: /home/user/test_osa/PHAS.fa\n\n  # output file\n  # ** OUTPUT ** \n  output: /home/user/test_osa/miR_target.txt\n\n  # max. total mispairs\n  total_misp: off\n\n  # max. seed mispairs\n  seed_misp: off\n\n  # score cutoff\n  score: 4\n\n  # eTM search \n  mimics: off\n\n  # eTM stringency, (0: strict, 1: relaxed)\n  mimics_str: 0\n\n  # fasta36 threads\n  threads: 10\n\n\n# Configure the initiator module\ninitiator:\n  # integration module integration_phasiRNA_cluster\n  # ** INPUT ** \n  i_input_file: /home/user/test_osa/integration_o.txt\n\n  # the target predicted by psRNAtarget server or target module\n  # ** INPUT ** \n  j_input_file: /home/user/test_osa/miR_target.txt\n\n  # integration module integration_PHAS_Loci_info\n  # ** INPUT ** \n  p_input_file: /home/user/test_osa/integration_p.txt\n\n  # the microRNA distance away to phase border, default=105(21) or 120 (24)\n  sRNA_distance: 5\n\n  # 21 or 24, the phase length of 21 or 24,\n  phase_length: 21\n\n  # 0 or 1, the position of cleavage at 10(0) or 9-11 (1)\n  cleavage_shift: 1\n\n  # outputfilename\n  # ** OUTPUT ** \n  outputfile: /home/user/test_osa/initiator.txt\n\n\n# Configure the deg module\ndeg:\n  # mapping file for degradome data mapping transcripts, by bowtie\n  # ** INPUT ** \n  inputfile: \n    - /home/user/test_osa/deg/GSM1040649_format_filter.map\n    - /home/user/test_osa/deg/GSM1040650_format_filter.map\n  \n  # miRNA sequences used for target prediction, fasta\n  # ** INPUT ** \n  query_fa: /home/user/test_osa/osa.miRbase.fa\n\n  # initiator module outputfile\n  # ** INPUT ** \n  STI_result: /home/user/test_osa/initiator.txt\n\n  # transcripts file, fasta\n  # ** INPUT ** \n  transcript_fa: /home/user/test_osa/oryza_sativa_cdna.fa\n\n  # matched map file with only matched records\n  # filename only, do not input directory\n  # ** OUTPUT ** \n  output: \n    - GSM1040649_MTI_deg.txt\n    - GSM1040650_MTI_deg.txt\n  \n  # if shifts=0 then cleaved exactly at pos.10\n  shift: 1\n\n  # minum number of degradome reads, int\n  minum_deg_abun: 0\n\n  # enable the plot function, y | n\n  T_plot: y\n\n  # y | n, use initiator output information\n  initiator: y\n\n  # 1,plot only category 1; 2, plot categories 1 and 2\n  plot_categories: 1\n\n  # output folder name, for exporting t-plot images and outputfile\n  plot_folder: MTI_deg\n\n  # library name\n  library:\n    - GSM1040649\n    - GSM1040650\n  \n  # only output cat_1 and cat_2 information\n  less: y\n\n\n# Configure the phasiRNA_target module\nphasiRNA_target:\n  # query phasiRNA file, fasta format\n  # ** INPUT ** \n  query_fa: /home/user/test_osa/phasiRNA.fa\n\n  # target file, fasta file\n  # ** INPUT ** \n  subject_fa: /home/user/test_osa/oryza_sativa_cdna.fa\n\n  # output file\n  # ** OUTPUT ** \n  output: /home/user/test_osa/phasiRNA_target.txt\n\n  # max. total mispairs\n  total_misp: off\n\n  # max. seed mispairs\n  seed_misp: off\n\n  # score cutoff\n  score: 4\n\n  # eTM search \n  mimics: off\n\n  # eTM stringency, (0: strict, 1: relaxed)\n  mimics_str: 0\n\n  # fasta36 threads\n  threads: 10\n\n\n# Configure the phasiRNA_deg module\nphasiRNA_deg:\n  # mapping file for degradome data mapping transcripts, by bowtie\n  # ** INPUT ** \n  inputfile: \n    - /home/user/test_osa/deg/GSM1040649_format_filter.map\n    - /home/user/test_osa/deg/GSM1040650_format_filter.map\n\n  # phasiRNA sequences used for target prediction, fasta\n  # ** INPUT ** \n  query_fa: /home/user/test_osa/phasiRNA.fa\n\n  # psRNATarget/target outputfile\n  # ** INPUT ** \n  STI_result: /home/user/test_osa/phasiRNA_target.txt\n\n  # transcripts file, fasta\n  # ** INPUT ** \n  transcript_fa: /home/user/test_osa/oryza_sativa_cdna.fa\n\n  # matched map file with only matched records\n  # filename only, do not input directory\n  # ** OUTPUT ** \n  output: \n    - GSM1040649_PTI_deg.txt\n    - GSM1040650_PTI_deg.txt\n  \n  # if shifts=0 then cleaved exactly at pos.10\n  shift: 1\n\n  # minum number of degradome reads, int\n  minum_deg_abun: 0\n\n  # enable the plot function, y | n\n  T_plot: y\n\n  # y | n, use initiator output information, for phasiRNA_deg, it must be n\n  initiator: n\n\n  # 1,plot only category 1; 2, plot categories 1 and 2\n  plot_categories: 1\n\n  # output folder name, for exporting t-plot images and outputfile\n  plot_folder: PTI_deg\n\n  # library name\n  library:\n    - GSM1040649\n    - GSM1040650\n\n  # only output cat_1 and cat_2 information\n  less: y\n```\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:36:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Demo data",
        "parent_header": [
          "User guide"
        ],
        "type": "Text_excerpt",
        "value": "**Download link**\n\n`https://cbi.njau.edu.cn/PhasiHunter_demo_data/test_osa.tar.gz`\n"
      },
      "source": "https://raw.githubusercontent.com/HuangLab-CBI/PhasiHunter/main/README.md",
      "technique": "header_analysis"
    }
  ]
}