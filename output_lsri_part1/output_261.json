{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite compleasm",
        "type": "Text_excerpt",
        "value": "If you use compleasm, please cite:\n\n> Neng Huang, Heng Li, compleasm: a faster and more accurate reimplementation of BUSCO. *Bioinformatics*, **39**, btad595, 2023. [doi:10.1093/bioinformatics/btad595][doi]\n\n\n\n\n[doi]: https://doi.org/10.1093/bioinformatics/btad595\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/huangnengCSU/compleasm"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-04T14:18:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-29T14:25:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A genome completeness evaluation tool based on miniprot"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output description",
        "parent_header": [
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "The assessment result by compleasm is saved in the file ```summary.txt``` in the output folder. These BUSCO genes are categorized into the following classes:   \n- **S** (**Single Copy Complete Genes**): The BUSCO genes that can be entirely aligned in the assembly, with only one copy present.  \n- **D** (**Duplicated Complete Genes**): The BUSCO genes that can be completely aligned in the assembly, with more than one copy present.\n- **F** (**Fragmented Genes, subclass 1**): The BUSCO genes which only a portion of the gene is present in the assembly, and the rest of the gene cannot be aligned.\n- **I** (**Fragmented Genes, subclass 2**): The BUSCO genes in which a section of the gene aligns to one position in the assembly, while the remaining part aligns to another position.\n- **M** (**Missing Genes**): The BUSCO genes with no alignment present in the assembly.\n\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Using `download` submodule to download lineage:",
        "parent_header": [
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "This will download the specified lineages and save to the specified folder.\n#### Usage:\n```angular2html\npython compleasm.py download [-h] [-L LIBRARY_PATH] lineages [lineages ...]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameters:",
        "parent_header": [
          "Running",
          "Using `download` submodule to download lineage:"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\npositional arguments:  \n  lineages                Specify the names of the BUSCO lineages to be downloaded. (e.g. eukaryota, primates, saccharomycetes etc.)\n\noptional arguments:\n  -L, --library_path      The destination folder to store the downloaded lineage files.\n                          If not specified, a folder named \"mb_downloads\" will be created on the current running path by default.\n```\n\n#### Example:\n```angular2html\npython compleasm.py download saccharomycetes primates brassicales -L /path/to/lineages_folder\n```\nor\n```angular2html\npython compleasm.py download saccharomycetes,primates,brassicales -L /path/to/lineages_folder\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/huangnengCSU/compleasm/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/huangnengCSU/compleasm/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "huangnengCSU/compleasm"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Compleasm is developed on python3.\n- Prequisites:  \n      [python3.*](https://www.python.org)  \n      [miniprot](https://github.com/lh3/miniprot)   \n      [hmmer](http://hmmer.org/)  \n      [sepp](https://github.com/smirarab/sepp)  \n- Dependencies:  \n  [pandas](https://pandas.pydata.org/docs/getting_started/install.html#installing-from-pypi)\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda Installation",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Compleasm can be installed with conda. If you don't have conda, please install [miniconda](https://docs.conda.io/en/latest/miniconda.html) or [anaconda](https://www.anaconda.com/products/individual) first. Then you can create a new environment with compleasm installed.\n```angular2html\nconda create -n <your_env_name> -c conda-forge -c bioconda compleasm\nconda activate <your_env_name>\ncompleasm -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker Installation",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Compleasm can be installed with docker. If you don't have docker, please install [docker](https://docs.docker.com/get-docker/) first. Then you can pull the docker image with compleasm installed.\n```angular2html\nVERSION=0.2.6\ndocker run huangnengcsu/compleasm:v${VERSION} compleasm -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Singularity Installation",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Compleasm can be installed with singularity. If you don't have singularity, please install [singularity](https://docs.sylabs.io/guides/3.9/user-guide/quick_start.html#quick-installation-steps) first. Then you can pull the singularity image with compleasm installed.\n```angular2html\nVERSION=0.2.6\nsingularity exec docker://huangnengcsu/compleasm:v${VERSION} compleasm -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Release Installation",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\nwget https://github.com/huangnengCSU/compleasm/releases/download/v0.2.6/compleasm-0.2.6_x64-linux.tar.bz2\ntar -jxvf compleasm-0.2.6_x64-linux.tar.bz2\ncompleasm_kit/compleasm.py -h\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install miniprot:",
        "parent_header": [
          "Installation",
          "Manual Installation"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\ngit clone https://github.com/lh3/miniprot\ncd miniprot && make\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install hmmer:",
        "parent_header": [
          "Installation",
          "Manual Installation"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\nwget http://eddylab.org/software/hmmer/hmmer.tar.gz \ntar zxf hmmer.tar.gz\ncd hmmer-3.3.2\n./configure --prefix /your/install/path\nmake\nmake check\nmake install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install sepp:",
        "parent_header": [
          "Installation",
          "Manual Installation"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\ngit clone https://github.com/smirarab/sepp.git\ncd sepp\npython setup.py config -c\npython setup.py install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/huangnengCSU/compleasm/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "compleasm"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "huangnengCSU"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 158491,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 284,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "huangnengCSU",
          "type": "User"
        },
        "date_created": "2024-03-18T15:07:02Z",
        "date_published": "2024-03-18T15:18:01Z",
        "description": "0.2.6",
        "html_url": "https://github.com/huangnengCSU/compleasm/releases/tag/v0.2.6",
        "name": "0.2.6",
        "release_id": 147060876,
        "tag": "v0.2.6",
        "tarball_url": "https://api.github.com/repos/huangnengCSU/compleasm/tarball/v0.2.6",
        "type": "Release",
        "url": "https://api.github.com/repos/huangnengCSU/compleasm/releases/147060876",
        "value": "https://api.github.com/repos/huangnengCSU/compleasm/releases/147060876",
        "zipball_url": "https://api.github.com/repos/huangnengCSU/compleasm/zipball/v0.2.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "huangnengCSU",
          "type": "User"
        },
        "date_created": "2024-01-12T19:18:40Z",
        "date_published": "2024-01-12T19:29:06Z",
        "description": "0.2.5",
        "html_url": "https://github.com/huangnengCSU/compleasm/releases/tag/v0.2.5",
        "name": "0.2.5",
        "release_id": 136886271,
        "tag": "v0.2.5",
        "tarball_url": "https://api.github.com/repos/huangnengCSU/compleasm/tarball/v0.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/huangnengCSU/compleasm/releases/136886271",
        "value": "https://api.github.com/repos/huangnengCSU/compleasm/releases/136886271",
        "zipball_url": "https://api.github.com/repos/huangnengCSU/compleasm/zipball/v0.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "huangnengCSU",
          "type": "User"
        },
        "date_created": "2023-12-18T19:13:58Z",
        "date_published": "2023-12-18T19:35:09Z",
        "description": "Add protein mode evaluation.",
        "html_url": "https://github.com/huangnengCSU/compleasm/releases/tag/v0.2.4",
        "name": "0.2.4",
        "release_id": 134373977,
        "tag": "v0.2.4",
        "tarball_url": "https://api.github.com/repos/huangnengCSU/compleasm/tarball/v0.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/huangnengCSU/compleasm/releases/134373977",
        "value": "https://api.github.com/repos/huangnengCSU/compleasm/releases/134373977",
        "zipball_url": "https://api.github.com/repos/huangnengCSU/compleasm/zipball/v0.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "huangnengCSU",
          "type": "User"
        },
        "date_created": "2023-06-09T18:51:41Z",
        "date_published": "2023-06-09T18:56:39Z",
        "description": "update to v0.2.2",
        "html_url": "https://github.com/huangnengCSU/compleasm/releases/tag/v0.2.2",
        "name": "v0.2.2",
        "release_id": 108023410,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/huangnengCSU/compleasm/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/huangnengCSU/compleasm/releases/108023410",
        "value": "https://api.github.com/repos/huangnengCSU/compleasm/releases/108023410",
        "zipball_url": "https://api.github.com/repos/huangnengCSU/compleasm/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "huangnengCSU",
          "type": "User"
        },
        "date_created": "2023-06-09T19:44:55Z",
        "date_published": "2023-06-09T19:46:42Z",
        "description": "miniBUSCO has been renamed as compleasm.\r\nGithub repository: https://github.com/huangnengCSU/compleasm",
        "html_url": "https://github.com/huangnengCSU/compleasm/releases/tag/fix_bioconda_recipe",
        "name": "Fix bioconda recipe",
        "release_id": 108039642,
        "tag": "fix_bioconda_recipe",
        "tarball_url": "https://api.github.com/repos/huangnengCSU/compleasm/tarball/fix_bioconda_recipe",
        "type": "Release",
        "url": "https://api.github.com/repos/huangnengCSU/compleasm/releases/108039642",
        "value": "https://api.github.com/repos/huangnengCSU/compleasm/releases/108039642",
        "zipball_url": "https://api.github.com/repos/huangnengCSU/compleasm/zipball/fix_bioconda_recipe"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "huangnengCSU",
          "type": "User"
        },
        "date_created": "2023-05-18T14:35:45Z",
        "date_published": "2023-05-18T14:47:46Z",
        "description": "This is version v0.2.1 of compleasm.",
        "html_url": "https://github.com/huangnengCSU/compleasm/releases/tag/v0.2.1",
        "name": "v0.2.1",
        "release_id": 103473619,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/huangnengCSU/compleasm/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/huangnengCSU/compleasm/releases/103473619",
        "value": "https://api.github.com/repos/huangnengCSU/compleasm/releases/103473619",
        "zipball_url": "https://api.github.com/repos/huangnengCSU/compleasm/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Main Modules:",
        "parent_header": [
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\nrun             Run compleasm including miniprot alignment and completeness evaluation\nanalyze         Evaluate genome completeness from provided miniprot alignment\ndownload        Download specified BUSCO lineage\nlist            List local or remote BUSCO lineages\nminiprot        Run miniprot alignment\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using `run` submodule to evaluate genome completeness from genome assembly:",
        "parent_header": [
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "This will download the specified lineage (or automatically search for the best lineage with autolineage mode), align the\nprotein sequences in the lineage file to the genome sequence with miniprot, and parse the miniprot alignment result to\nevaluate genome completeness."
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Important parameters:",
        "parent_header": [
          "Running",
          "Using `protein` submodule to assess the completeness of input proteins:"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\n  -a, --assembly_path        Input genome file in FASTA format\n  -o, --output_dir           The output folder\n  -t, --threads              Number of threads to use\n  -l, --lineage              Specify the name of the BUSCO lineage to be used. (e.g. eukaryota, primates, saccharomycetes etc.)\n  -L, --library_path         Folder path to download lineages or already downloaded lineages. \n                             If not specified, a folder named \"mb_downloads\" will be created on the current running path by default to store the downloaded lineage files.\n  -m, --mode                 The mode of evaluation. Default mode is busco. \n                             lite:  Without using hmmsearch to filtering protein alignment.\n                             busco: Using hmmsearch on all candidate predicted proteins to purify the miniprot alignment to improve accuracy.\n  --specified_contigs        Specify the contigs to be evaluated, e.g. chr1 chr2 chr3. If not specified, all contigs will be evaluated.\n  --outs                     output if score at least FLOAT*bestScore [0.95]\n  --miniprot_execute_path    Path to miniprot executable file. \n                             If not specified, compleasm will search for miniprot in the directory where compleasm.py is located, the current execution directory, and system environment variables.\n  --hmmsearch_execute_path   Path to hmmsearch executable file.\n                             If not specified, compleasm will search for hmmsearch in the directory where compleasm.py is located, the current execution directory, and system environment variables.\n  --autolineage              Automatically search for the best matching lineage without specifying lineage file.\n  --sepp_execute_path        Path to sepp executable file. This is required if you want to use the autolineage mode.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Threshold parameters:",
        "parent_header": [
          "Running",
          "Using `run` submodule to evaluate genome completeness from genome assembly:"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\n  --min_diff               The thresholds for the best matching and second best matching. default=0.2\n  --min_identity           The identity threshold for valid mapping results. default=0.4\n  --min_length_percent     The fraction of protein for valid mapping results. default=0.6\n  --min_complete           The length threshold for complete gene. default=0.9\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using `analyze` submodule to evaluate genome completeness from provided miniprot alignment:",
        "parent_header": [
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "This will directly parse the provided miniprot alignment result to evaluate genome completeness. The execute command of miniprot should be like `miniprot --trans -u -I --outs=0.95 --gff -t 8 ref-file protein.faa > output.gff`.\n#### Usage:\n```angular2html\npython compleasm.py analyze [-h] -g GFF -l LINEAGE -o OUTPUT_DIR [-t THREADS] [-L LIBRARY_PATH] \n                            [-m {lite,busco}] [--hmmsearch_execute_path HMMSEARCH_EXECUTE_PATH]\n                            [--specified_contigs SPECIFIED_CONTIGS [SPECIFIED_CONTIGS ...]] \n                            [--min_diff MIN_DIFF] [--min_identity MIN_IDENTITY] [--min_length_percent MIN_LENGTH_PERCENT] \n                            [--min_complete MIN_COMPLETE] [--min_rise MIN_RISE]\n```\n#### Important parameters:\n```angular2html\n  -g, --gff                 Miniprot output gff file\n  -l, --lineage             BUSCO lineage name\n  -o, --output_dir          Output analysis folder\n  -t, --threads             Number of threads to use\n  -L, --library_path        Folder path to stored lineages.\n  -m, --mode                The mode of evaluation. Default mode is fast. \n                            lite:  Without using hmmsearch to filtering protein alignment.\n                            busco: Using hmmsearch on all candidate predicted proteins to purify the miniprot alignment to improve accuracy.\n  --hmmsearch_execute_path  Path to hmmsearch executable\n                            If not specified, compleasm will search for hmmsearch in the directory where compleasm.py is located, the current execution directory, and system environment variables.\n  --specified_contigs       Specify the contigs to be evaluated, e.g. chr1 chr2 chr3. If not specified, all contigs will be evaluated.\n```\nThreshold parameters are same as `run` module.\n\n#### Example:\n```angular2html\n# analysis with miniprot output gff file\npython compleasm.py analyze -g miniprot.gff -o output_dir -l eukaryota -t 8\n\n# specify contigs\ncompleasm analyze -g miniprot.gff -o output_dir -l eukaryota -t 8 --specified_contigs chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameters:",
        "parent_header": [
          "Running",
          "Using `download` submodule to download lineage:"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\npositional arguments:  \n  lineages                Specify the names of the BUSCO lineages to be downloaded. (e.g. eukaryota, primates, saccharomycetes etc.)\n\noptional arguments:\n  -L, --library_path      The destination folder to store the downloaded lineage files.\n                          If not specified, a folder named \"mb_downloads\" will be created on the current running path by default.\n```\n\n#### Example:\n```angular2html\npython compleasm.py download saccharomycetes primates brassicales -L /path/to/lineages_folder\n```\nor\n```angular2html\npython compleasm.py download saccharomycetes,primates,brassicales -L /path/to/lineages_folder\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using `miniprot` submodule to run miniprot alignment:",
        "parent_header": [
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "This will run miniprot alignment and output the gff file.\n#### Usage:\n```angular2html\npython compleasm.py miniprot [-h] -a ASSEMBLY -p PROTEIN -o OUTDIR [-t THREADS] [--miniprot_execute_path MINIPROT_EXECUTE_PATH]\n```\n\n#### Important parameters:\n```angular2html\n  -a, --assembly             Input genome file in FASTA format\n  -p, --protein              Input protein file\n  -o, --outdir               Miniprot alignment output directory\n  -t, --threads              Number of threads to use\n  --outs                     output if score at least FLOAT*bestScore [0.95]\n  --miniprot_execute_path    Path to miniprot executable file. \n                             If not specified, compleasm will search for miniprot in the directory where compleasm.py is located, the current execution directory, and system environment variables.\n```\n\n#### Example:\n```angular2html\npython compleasm.py miniprot -a genome.fasta -p protein.faa -o output_dir -t 8\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using `protein` submodule to assess the completeness of input proteins:",
        "parent_header": [
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "This will evaluate the completeness of input proteins.\n#### Usage:\n```angular2html\npython compleasm.py protein [-h] -p PROTEINS -l LINEAGE -o OUTDIR [-t THREADS]\n                            [-L LIBRARY_PATH]\n                            [--hmmsearch_execute_path HMMSEARCH_EXECUTE_PATH]\n```\n\n#### Important parameters:\n\n```angular2html\n-p, --proteins             Input protein file\n-l, --lineage              BUSCO lineage name\n-o, --outdir               Output analysis folder\n-t, --threads              Number of threads to use\n-L, --library_path         Folder path to stored lineages\n--hmmsearch_execute_path   Path to hmmsearch executable.\n                           If not specified, compleasm will search for miniprot in the directory where compleasm.py is located, the current execution directory, and system environment variables.\n```\n\n#### Example:\n\n```angular2html\npython compleasm.py protein -p input.faa -l eukaryota -t 8 -o output_dir\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:04:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 174
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "type": "Text_excerpt",
        "value": "```sh\n# download compleasm and its dependencies (miniprot and hmmsearch)\nwget https://github.com/huangnengCSU/compleasm/releases/download/v0.2.6/compleasm-0.2.6_x64-linux.tar.bz2\ntar -jxvf compleasm-0.2.6_x64-linux.tar.bz2\n\n# Install pandas if necessary\npip3 install pandas                               # or conda install pandas\n\n# Run compleasm if lineage is known\ncompleasm_kit/compleasm.py download primates      # download data to mb_download/\ncompleasm_kit/compleasm.py run -t16 -l primates -a hg38.fa -o hg38-mb  # run the pipeline\n\n# Automatically detect lineage (requiring sepp)\nconda install -c bioconda sepp                    # if sepp hasn't been installed\ncompleasm_kit/compleasm.py run --autolineage -a hg38.fa -o hs38-mb  \n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Get compleasm:",
        "parent_header": [
          "Installation",
          "Manual Installation"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\ngit clone https://github.com/huangnengCSU/compleasm.git\n```\nYou can run the `compleasm.py` script directly or copy it to other locations then run it.\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage:",
        "parent_header": [
          "Running",
          "Using `protein` submodule to assess the completeness of input proteins:"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\npython compleasm.py run [-h] -a ASSEMBLY_PATH -o OUTPUT_DIR [-t THREADS] \n                        [-l LINEAGE] [-L LIBRARY_PATH] [-m {lite,busco}] [--specified_contigs SPECIFIED_CONTIGS [SPECIFIED_CONTIGS ...]] \n                        [--miniprot_execute_path MINIPROT_EXECUTE_PATH] [--hmmsearch_execute_path HMMSEARCH_EXECUTE_PATH] \n                        [--autolineage] [--sepp_execute_path SEPP_EXECUTE_PATH] \n                        [--min_diff MIN_DIFF] [--min_identity MIN_IDENTITY] [--min_length_percent MIN_LENGTH_PERCENT] \n                        [--min_complete MIN_COMPLETE] [--min_rise MIN_RISE]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example:",
        "parent_header": [
          "Running",
          "Using `protein` submodule to assess the completeness of input proteins:"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\n# with lineage specified\npython compleasm.py run -a genome.fasta -o output_dir -l eukaryota -t 8\n\n# autolineage mode\npython compleasm.py run -a genome.fasta -o output_dir -t 8 --autolineage\n\n# with custom specified already downloaded lineage folder\npython compleasm.py run -a genome.fasta -o output_dir -l eukaryota -t 8 -L /path/to/lineages_folder\n\n# specify contigs\npython compleasm.py run -a genome.fasta -o output_dir -l eukaryota -t 8 --specified_contigs chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using `list` submodule to show local or remote Busco lineages:",
        "parent_header": [
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "This will list the local or remote BUSCO lineages.\n#### Usage:\n```angular2html\npython compleasm.py list [-h] [--remote] [--local] [-L LIBRARY_PATH]\n```\n\n#### Important parameters:\n```angular2html\n  --remote             List remote BUSCO lineages\n  --local              List local BUSCO lineages\n  -L, --library_path   Folder path to stored lineages.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "Running",
          "Using `list` submodule to show local or remote Busco lineages:"
        ],
        "type": "Text_excerpt",
        "value": "```angular2html\n# list local lineages\npython compleasm.py list --local -L /path/to/lineages_folder\n\n# list remote lineages\npython compleasm.py list --remote\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/huangnengCSU/compleasm/0.2.6/README.md",
      "technique": "header_analysis"
    }
  ]
}