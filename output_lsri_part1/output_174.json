{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you decide to use MetalDock for any project, please cite the following paper: \n\n[https://doi.org/10.1021/acs.jcim.3c01582](https://doi.org/10.1021/acs.jcim.3c01582)\n"
      },
      "source": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MatthijsHak/MetalDock"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-15T07:54:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-26T12:45:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Dock organometallic compounds to proteins/DNA/biomolecules"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9899316214300575,
      "result": {
        "original_header": "MetalDock",
        "type": "Text_excerpt",
        "value": "MetalDock is a versatile open-source software docking tool designed to facilitate the docking of metal-organic complexes for various transtions metals with proteins, DNA, or other biomolecules. For detailed instructions on how to utilize MetalDock, we refer you to our [documentation](https://metaldock.readthedocs.io/en/latest/) page.   \n \n"
      },
      "source": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MatthijsHak/MetalDock/tree/main/docs/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://metaldock.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MatthijsHak/MetalDock/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MatthijsHak/MetalDock/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MatthijsHak/MetalDock"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MetalDock"
      },
      "source": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/examples/example_runs/no_vacancy_coordination_sphere/ADF/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/examples/example_runs/no_vacancy_coordination_sphere/GAUSSIAN/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/examples/example_runs/no_vacancy_coordination_sphere/ORCA/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/examples/example_runs/vacancy_coordination_sphere/ADF/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/examples/example_runs/vacancy_coordination_sphere/GAUSSIAN/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/examples/example_runs/vacancy_coordination_sphere/ORCA/run.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation\n\nTo install MetalDock correctly, please follow the instructions below:\n\n## Step 1: Create Conda Environment\n\nFirst, make sure you have Miniconda or Anaconda installed. If not, you can find installation instructions at [Miniconda](https://docs.conda.io/en/latest/miniconda.html).\n\nOnce you have Conda installed, create a new Conda environment named \"MetalDock\" and use Python 3.8:\n\n```bash\nconda create -n MetalDock python=3.8\n```\n\nActivate the \"MetalDock\" environment:\n\n```bash\nconda activate MetalDock\n```\n\n## Step 2: Install Required Packages \n\nNext, install several required packages using Conda and Pip:\n\n```bash\nconda install -c conda-forge openbabel\n```\n\n```bash\npip install ase==3.22.1 networkx numpy pandas pdb2pqr plams rdkit-pypi typing_extensions xtb\n```\n\n## Step 3: Clone MetalDock repository \n\nClone the MetalDock respository to your desired location.\n\n``` bash\ngit clone https://github.com/MatthijsHak/MetalDock\n```\n\n## Step 4: Setup QM environment variables\n\nMetalDock can run on three different quantum chemistry software packages:\n### ADF \nTo run ADF as QM engine the following environment variables need to be exported:\n``` bash\nexport AMSHOME=/full/path/to/ams/ams2022\nexport AMSBIN=$AMSHOME/bin\nexport AMSRESOURCES=$AMSHOME/atomicdata\nexport SCMLICENSE=$AMSHOME/license.txt\n```\n\nRelativistic effects with ZORA. For more infromation see [SCM](https://www.scm.com/doc/ADF/index.html) site.\n\n### Gaussian\nTo run Gaussian as QM engine the following environment variables need to be exported.\n``` bash\nexport g16root=/full/path/to/gaussian/g16\n```\n\nRelativistic effects with DKH. For more information see [Gaussian](https://gaussian.com/) site.\n\n### ORCA (free)\nCurrently, the latest ORCA 6.0.0 version is not supported, install ORCA 5.0.4 or lower to use MetalDock. To run ORCA as QM engine with correct parralelization the full path to the orca binary has to be exported with the following command:\n``` bash\nexport ASE_ORCA_COMMAND='/full/path/to/orca/orca PREFIX.inp > PREFIX.out'\n```\n\nRelativistic effects can be selected with input. For more infromation see [ORCA](https://www.orcasoftware.de/tutorials_orca/index.html) site.\n\n\n## Step 5: Add MetalDock to PATH\n\nIf you want to use MetalDock conventiely from any directory, you can add its executable to your PATH. Replace /user/directory/MetalDock with the actual path to your MetalDock installation directory:\n\n```bash\nexport PATH=$PATH:/user/defined/path/MetalDock\n```\n\nThis completes the installation process for MetalDock. You can now run metaldock by:\n\n```\nmetaldock -i input.ini \n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/docs/docs/installation.md",
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MatthijsHak/MetalDock/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 MatthijsHak\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MetalDock"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "MatthijsHak"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 174626,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MatthijsHak/MetalDock/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:38:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ]
}