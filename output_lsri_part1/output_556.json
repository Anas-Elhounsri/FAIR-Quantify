{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "- Daewon Lee, \"**LPF: a framework for exploring the wing color pattern formation of ladybird beetles in Python**\", [_Bioinformatics_, 39(7), btad430, July 2023](https://academic.oup.com/bioinformatics/article/39/7/btad430/7221539).\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cxinsys/lpf"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-03T11:04:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-02T19:03:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ladybird Pattern Formation (LPF)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "- LPF represents **Ladybird Pattern Formation**.\n- LPF is a framework for exploring the biological pattern formation exemplified by ladybird beetles.\n- LPF can be utilized as an educational framework for understanding biological dynamics, pattern formation, and complexity.\n\n\n<p align=\"center\">\n  <img src=\"assets/ladybird.gif\" alt=\"Drawing\" width=\"500px\"/>\n</p>\n\n<p align=\"center\">\n  <img src=\"assets/pattern.gif\" alt=\"Drawing\" width=\"500px\"/>\n</p>\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9910764195900517,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- Reaction-diffusion PDE models for the color pattern formation of ladybird beetles.\n- Evolutionary search based on [PyGMO](https://esa.github.io/pygmo2/) providing the concept of [island](https://esa.github.io/pygmo2/tutorials/using_island.html) and [archipelago](https://esa.github.io/pygmo2/tutorials/using_archipelago.html).\n- GPU optimization of the reaction-diffusion PDE solver for a batch of parameter sets based on [CuPy](https://cupy.dev/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cxinsys/lpf/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial05_evosearch.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial05_evosearch.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial03_solve_multi_paramsets.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial03_solve_multi_paramsets.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial02_visualize_single_morph.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial02_visualize_single_morph.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial04_create_movie.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial04_create_movie.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial01_solve_single_paramset.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial01_solve_single_paramset.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial06_evosearch_custom_targets.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/tutorials/tutorial06_evosearch_custom_targets.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cxinsys/lpf/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cxinsys/lpf"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/search/run_evosearch_conspicua.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/search/run_evosearch_spectabilis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/search/run_evosearch_axyridis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/search/run_evosearch_noconfig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/search/run_evosearch_ahexaspilota.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/search/run_evosearch_custom_targets_spectabilis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/search/run_evosearch_all.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/search/run_evopop_4gpus.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/search/run_evopop_4gpus_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/augmentation/run_augment_and_collect_4gpus.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/augmentation/run_augment_4gpus.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/assets/ladybird.gif"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/assets/pattern.gif"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "- :snake: [Anaconda](https://www.anaconda.com) is recommended to use and develop LPF.\n- :penguin: Linux distros are tested and recommended to use and develop LPF.\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Anaconda virtual environment",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "After installing anaconda, create a conda virtual environment for LPF.\nIn the following command, you can change the Python version\n(e.g.,`python=3.7` or `python=3.9`).\n\n```\nconda create -n lpf python=3.9\n```\n\nNow, we can activate our virtual environment for LPF as follows.\n\n```\nconda activate lpf\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Package installation",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "In the repository directory under the active anaconda environment, execute the following command.\n\n```\npython setup.py develop\n```\n\nAfter installing the package, we can update the package with `git pull` command.\nThis is why we install this package with `python setup.py develop` instead of `python setup.py install`.\n\n```\ngit pull\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Install PyTorch",
        "parent_header": [
          "Installation",
          "Dependency of the evolutionary search"
        ],
        "type": "Text_excerpt",
        "value": "Install PyTorch following the [official documentation](https://pytorch.org/).\n\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Install the packages in the requirements.",
        "parent_header": [
          "Installation",
          "Dependency of the evolutionary search"
        ],
        "type": "Text_excerpt",
        "value": "Install the packages in [requirements](https://github.com/cxinsys/lpf/blob/main/requirements.txt). \n\n```\npip install -r requirements.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Install PyGMO",
        "parent_header": [
          "Installation",
          "Dependency of the evolutionary search"
        ],
        "type": "Text_excerpt",
        "value": "Install PyGMO as follows.\n\n```\nconda install pygmo -c conda-forge\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cxinsys/lpf/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2022, Complex Intelligent Systems Lab.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/assets/logo.png"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lpf"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "cxinsys"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 765048,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 244722,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3688,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pillow.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency of the PDE solver",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": ":bulb: To optimize the solver for a batch of parameter sets based on GPU computing, install CuPy. However, if you want to use only the cpu, you can omit it.\n\n- [numpy](https://numpy.org/)\n- [scipy](https://scipy.org/)\n- [pillow](https://pillow.readthedocs.io/en/stable/)\n- [pyyaml](https://pyyaml.org/)\n- [cupy](https://cupy.dev/) (optional)\n\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency of the evolutionary search",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The order of installing the following packages is important to avoid version conflicts.\n\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Install the packages in the requirements.",
        "parent_header": [
          "Installation",
          "Dependency of the evolutionary search"
        ],
        "type": "Text_excerpt",
        "value": "Install the packages in [requirements](https://github.com/cxinsys/lpf/blob/main/requirements.txt). \n\n```\npip install -r requirements.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:11:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "type": "Text_excerpt",
        "value": "- [Tutorials](https://github.com/cxinsys/lpf/tree/main/tutorials).\n  "
      },
      "source": "https://raw.githubusercontent.com/cxinsys/lpf/main/README.md",
      "technique": "header_analysis"
    }
  ]
}