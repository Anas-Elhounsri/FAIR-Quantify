{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "VIBES"
        ],
        "type": "Text_excerpt",
        "value": "* Thanks for helping make VIBES happen!\n    * George Lesica\n    * Jeremiah Gaiser\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TravisWheelerLab/VIBES"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-24T20:06:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-02T23:12:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Viral Integrations in Bacterial genomES"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "VIBES"
        ],
        "type": "Text_excerpt",
        "value": "VIBES (**V**iral **I**ntegrations in **B**acterial g**E**nome**S**) is a Nextflow-based automated sequence similarity search pipeline that can search for prophage integrations in bacterial whole genome sequence, annotate bacterial and viral proteins, and produce interactive HTML visual output. Users provide VIBES with bacterial whole genome sequence to search in and prophage genomes to search for.\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9360828998465149,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "* Workflow automation with Nextflow\n* Dependency management via VIBES docker image\n* Prophage integration annotation with nhmmer\n* Bacterial gene annotation with Prokka\n* Viral gene annotation with FraHMMER and PHROGS\n* Output visualization with VIBES-SODA\n \n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Further Documentation",
        "parent_header": [
          "VIBES"
        ],
        "type": "Text_excerpt",
        "value": "* [Nextflow Documentation](https://www.nextflow.io/docs/latest/index.html)\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TravisWheelerLab/VIBES/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQ / Troubleshooting",
        "parent_header": [
          "VIBES"
        ],
        "type": "Text_excerpt",
        "value": "Coming Soon\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TravisWheelerLab/VIBES/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TravisWheelerLab/VIBES"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VIBES"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/build-diagram.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/build-container.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/readme_images/fig1_rough.png"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker/Singularity/Apptainer (Recommended)",
        "parent_header": [
          "VIBES",
          "Installation and Setup"
        ],
        "type": "Text_excerpt",
        "value": "1. [Install Java 11 or later](https://www.oracle.com/java/technologies/downloads/), if necessary\n2. [Install Nextflow](https://www.nextflow.io/docs/latest/getstarted.html#installation), if necessary\n3. Install your preferred container management software. Any one of these three should work (or you could install other software that can execute Docker images):\n    * [Docker](https://www.docker.com/get-started/)\n    * [Singularity](https://docs.sylabs.io/guides/3.0/user-guide/installation.html)\n    * [Apptainer](https://github.com/apptainer/apptainer/blob/main/INSTALL.md)\n    * Only one of the above needs to be installed to run VIBES via its Docker image\n4. [Install git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git), if necessary\n5. Clone the VIBES GitHub repo to your desired destination:\n\n    `git clone https://github.com/TravisWheelerLab/VIBES.git`\n6. Navigate to the default viral gene database directory and download:\n\n   `cd VIBES/nextflow_workflow/resources/db/`\n   \n   `wget https://zenodo.org/records/10372885/files/phrog_v4.bathmm`\n7. To run VIBES, enter the `VIBES/nextflow_workflow/` directory:\n\n    `cd VIBES/nextflow_workflow`\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Non-Container Installation",
        "parent_header": [
          "VIBES",
          "Installation and Setup"
        ],
        "type": "Text_excerpt",
        "value": "1. Install VIBES dependencies:\n* Python 3 (v3.8.10)\n* Perl (v5.30.0)\n* nhmmer (v3.3) and Easel (v0.48)\n* FraHMMER (v?)\n* Prokka (v1.14.6)\n2. [Install Java 11 or later](https://www.oracle.com/java/technologies/downloads/), if necessary\n3. [Install Nextflow](https://www.nextflow.io/docs/latest/getstarted.html#installation), if necessary\n4. [Install git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git), if necessary\n5. Clone the VIBES GitHub repo to your desired destination:\n\n    `git clone https://github.com/TravisWheelerLab/VIBES.git\n6. Navigate to the default viral gene database directory and download:\n\n   `cd VIBES/nextflow_workflow/resources/db/`\n   \n   `wget https://zenodo.org/records/10372885/files/phrog_v4.bathmm`\n7. To run VIBES, enter the `VIBES/nextflow_workflow/` directory:\n\n    `cd VIBES/nextflow_workflow`\n\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TravisWheelerLab/VIBES/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2024, Conner Copeland\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VIBES"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "TravisWheelerLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 392004,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 94962,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 51481,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 21410,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1441,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 357,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "traviswheeler",
          "type": "User"
        },
        "date_created": "2024-02-02T23:23:24Z",
        "date_published": "2024-03-17T04:50:22Z",
        "description": "First release, associated with manuscript publication",
        "html_url": "https://github.com/TravisWheelerLab/VIBES/releases/tag/v1.0.0",
        "name": "Version 1.0.0",
        "release_id": 146916608,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/TravisWheelerLab/VIBES/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/TravisWheelerLab/VIBES/releases/146916608",
        "value": "https://api.github.com/repos/TravisWheelerLab/VIBES/releases/146916608",
        "zipball_url": "https://api.github.com/repos/TravisWheelerLab/VIBES/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "More on nextflow run",
        "parent_header": [
          "VIBES",
          "Detailed Usage"
        ],
        "type": "Text_excerpt",
        "value": "`nextflow run workflow.nf -params-file your_params.yaml -profile your_profile` is the minimum necessary command to launch VIBES, but there are some other useful options worth knowing about:\n* `nextflow -log log_file.log run ...` will save a Nextflow log file\n* `nextflow run workflow.nf -w /path/to/some/dir/ ...` allows users to specify a work directory other than `VIBES/nextflow_workflow/work/`, where Nextflow stores the workflow cache\n* `nextflow run workflow.nf -with-report report_name.html ...` will generate an HTML report of pipeline resource usage after the workflow successfully completes.\n* `nextflow run workflow.nf -resume ...` instructs Nextflow to pick up where the last run of the pipeline left off, where possible. Allows restarting a crashed pipeline while retaining as much work as possible from the previous run.\n* For a list of all `nextflow run` options, and information on other Nextflow command line utilities, see the [Nextflow docs](https://www.nextflow.io/docs/latest/cli.html#run)\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "download",
    "requirements",
    "contact",
    "contributors",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:38:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "parent_header": [
          "VIBES"
        ],
        "type": "Text_excerpt",
        "value": "The VIBES workflow is managed by Nextflow and run via the `nextflow run` command. To invoke VIBES with `nextflow run`, the user must supply three necessary arguments:\n* A nextflow workflow file, in this case `workflow.nf` (found in `VIBES/nextflow_workflow`), that defines the VIBES workflow\n* A parameters file in .YAML format, which will contain values that might change from run to run (such as input file locations, where to store output, and which parts of the pipeline should be run)\n* A profile described in `nextflow.config` that specifies how Nextflow should run VIBES on your compute environment (Are you on an HPC managed by SLURM? Running VIBES locally on a laptop/desktop?)\n\nThese three components are supplied to Nextflow as follows: `nextflow run workflow.nf -params-file your_params.yaml -profile your_profile`. In general, `your_params.yaml` will be modified from run to run, `your_profile` will likely only be modified when you set VIBES up on a new compute system, and `workflow.nf` will be modified only when advanced users want to change how the VIBES workflow operates. The basics of setting up a parameters YAML file and a Nextflow profile are explored below.\n\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "parameters.yaml",
        "parent_header": [
          "VIBES",
          "Detailed Usage"
        ],
        "type": "Text_excerpt",
        "value": "The parameters file contains values that might change from run to run: Where to gather input files from, where output should be stored, input sequence type (dna/rna/amino), and which parts of the pipeline should be run. An example parameters file is provided with VIBES at `VIBES/nextflow_workflow/fixture_params.yaml` and includes all fields VIBES expects parameters files to provide.\n\nParameters files should be in YAML format, in which a variable is followed by a colon and then a value. For example, in this line `genome_files: ${projectDir}/../fixtures/5_full_bac_2_vir/*.fna` from `fixture_params.yaml`, `genome_files` is the variable name and `${projectDir}/../fixtures/5_full_bac_2_vir/*.fna` is the value assigned to the variable. **Changing variable names will result in VIBES crashing**, so only values should be changed unless the user also modifies `workflow.nf`.\n\nIn Nextflow parameters files, some environment variables can be accessed that can make it easier to reference files outside of the directory that Nextflow is being run in. `${projectDir}`, for instance, points Nextflow to the directory that `workflow.nf` is located in (in this case, `VIBES/nextflow_workflow/`). Using these environment variables to point to file path(s) is important since Nextflow runs each portion of the workflow from subdirectories in a `work/` directory, so relative file paths will not point to the correct locations unless they inlcude `${projectDir}` or `${launchDir}`.\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Profiles and nextflow.config",
        "parent_header": [
          "VIBES",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "Profiles tell Nextflow how it should try to run tasks in the workflow: should it use Docker or not? Should it submit jobs to a scheduler (i.e. SLURM) or run them itself? Essentially, profiles set default options for tasks across the VIBES workflow that hold unless specifically overwritten in a task definition. `VIBES/nextflow_workflow/nextflow.config` contains example profiles for the VIBES workflow and is where users should store their own profiles as needed.\n\nA couple of key profile options to pay attention to: `process.executor` allows users to set whether Nextflow should submit tasks to an executor like SLURM ([list of job managers supported by Nextflow)](https://www.nextflow.io/docs/latest/executor.html)) or run the tasks locally. Similarly, `docker.enabled` and `process.container` tell Nextflow to use Docker to run containers and sets the default container for all tasks to the value of `process.container`. `process.clusterOptions` will be an important profile setting for most users who run VIBES on a HPC environment- this setting appends its value to all commands submitted to a job manager (i.e. SLURM) and is a useful place to set cluster options such as partition or an account to be billed.\n\nFull profile documentation can be [found here.](https://www.nextflow.io/docs/latest/config.html?highlight=profile#config-profiles)\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Launching VIBES",
        "parent_header": [
          "VIBES",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "Once you've created a YAML file with your preferred parameters and a profile for your environment, you can launch VIBES with `nextflow run workflow.nf -params-file your_params.yaml -profile your_profile`. If you want to resume a run of VIBES after resolving whatever issue stopped it, you can resume the previous run by adding `-resume` to your `nextflow run` command (`nextflow run workflow.nf -params-file your_params.yaml -profile your_profile -resume`).\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Verifying VIBES",
        "parent_header": [
          "VIBES",
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "To verify that the workflow is working, we've included a test case in `test_input_output/test`:\n\nFrom `nextflow_workflow`, run the following command and compare `output` to `expected_output`:\n`nextflow run workflow.nf -params-file ../test_input_output/test/test.yaml -profile local_docker`\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuration Environment Variables",
        "parent_header": [
          "VIBES",
          "Detailed Usage",
          "parameters.yaml"
        ],
        "type": "Text_excerpt",
        "value": "In Nextflow parameters files, some environment variables can be accessed that can make it easier to reference files outside of the directory that Nextflow is being run in. `${projectDir}`, for instance, points Nextflow to the directory that `workflow.nf` is located in (in this case, `VIBES/nextflow_workflow/`). Using these environment variables to point to file path(s) is important since Nextflow runs each portion of the workflow from subdirectories in a `work/` directory, so relative file paths will not point to the correct locations unless they inlcude `${projectDir}` or `${launchDir}`.\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Nextflow Profile Eaxmples",
        "parent_header": [
          "VIBES",
          "Detailed Usage"
        ],
        "type": "Text_excerpt",
        "value": "Here, we inclue some example nextflow.config compute profiles. All of these examples are based heavily on the profiles I use to run the workflow. The local profiles should work for any local execution (at least on Unix) and the HPC profiles should work if the correct executor, container management software, and partition and account details are set up. Note that `--clusterOptions` will depend heavily on your particular system."
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "All Local, No Docker",
        "parent_header": [
          "VIBES",
          "Detailed Usage",
          "Nextflow Profile Eaxmples"
        ],
        "type": "Text_excerpt",
        "value": "This is the simplest case for a profile. It instructs Nextflow to run all operations locally, as local hardware resources allow:\n```\nprofiles {\n    local {\n        // Comments look like this! Here, we set the executor (what Nextflow submits operations to)\n        process.executor = 'local'\n    }\n}\n```"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Local, with Docker",
        "parent_header": [
          "VIBES",
          "Detailed Usage",
          "Nextflow Profile Eaxmples"
        ],
        "type": "Text_excerpt",
        "value": "Similar to the above case, but instructs Nextflow to run all operations inside of a Docker container. Note that this is equivalent to setting a default Docker container for the pipeline, and can be overwritten on a per-process basis in `workflow.nf`.\n```\nprofiles {\n    local_docker {\n        process.executor = 'local'\n        process.container = 'connercopeland/vibes-test-frahmmer:latest'\n        docker.enabled = true // this tells Nextflow to use Docker specifically to execute the container\n        params.programs_path = '/programs/' // this line should be deprecated\n    }\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Multiple Profiles: HPC with SLURM, HPC with SLURM and Docker/Singularity",
        "parent_header": [
          "VIBES",
          "Detailed Usage",
          "Nextflow Profile Eaxmples"
        ],
        "type": "Text_excerpt",
        "value": "This example shows how multiple profiles can be stored in `nextflow.config` and how profiles can be set up to operate on HPC systems.\n```\nprofiles {\n    gscc {\n        process.executor = 'slurm' // here, we tell Nextflow to submit operations via SLURM, rather than to run locally\n        process.clusterOptions = '--partition=list_of_partitions' // you can use this field to provide options like accounts to bill, partitions to use, etc\n    }\n\n    ua_hpc {\n        process.executor = 'slurm'\n        process.clusterOptions = '--partition=standard --account=account --ntasks=1'\n        process.container = 'connercopeland/vibes-test-frahmmer:latest'\n        singularity.enabled = true // Here we specify to run the container with Singularity, which is more popular on HPCs\n        process.scratch = true // ask nextflow to store intermediate fies on nodes instead of in /home, improving performance and reducing I/O\n        process.cache = 'deep' // sets Nextflow to cache based on input file contents, rather than input file path and date\n    }\n}\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/nextflow_workflow/workflow.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TravisWheelerLab/VIBES/main/nextflow_workflow/region_grab_workflow.nf"
      },
      "technique": "file_exploration"
    }
  ]
}