{
  "application_domain": [
    {
      "confidence": 17.32,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If using ResMiCo in your work, please cite:\n[ResMiCo: increasing the quality of metagenome-assembled genomes with deep learning](https://www.biorxiv.org/content/10.1101/2022.06.23.497335v1.abstract)\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/leylabmpi/resmico"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-05T06:57:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-29T23:34:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Identifying misassemblies via deep learning"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "ResMiCo is a deep learning model capable of detecting metagenome assembly errors. \nResMiCo's input is summary data derived from re-aligning reads against the putative \ngenomes. ResMiCo's output is a number betwen 0 and 1 representing the likelihood that a \nparticular genome was misassembled.\n\nThe tool is divided into two main parts:\n\n* **ResMiCo-SM**\n  * A snakemake pipeline for:\n    * creating feature tables from real-world assemblies\n\t  * input: >=1 fasta of contigs, along with associated Illumina paired-end reads\n    * generating train/test datasets from reference genomes\n  * See the [ResMiCo-SM README](./ResMiCo-SM/README.md)\n* **ResMiCo (DL)**\n  * A python package for misassembly detection via deep learning\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9786528369279562,
      "result": {
        "original_header": "Training",
        "type": "Text_excerpt",
        "value": "> We highly recommend using multiple GPUs for model training on large datasets, as done in the ResMiCo paper.\n  Training on CPUs with such large datasets is not feasbile.\n \n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/leylabmpi/ResMiCo/wiki"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/leylabmpi/ResMiCo/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/misc.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/misc.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/03_CAMI2_HMP-skin.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/03_CAMI2_HMP-skin.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/01_CAMI2_HMP-gut.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/01_CAMI2_HMP-gut.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/02_CAMI2_HMP-oral.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/02_CAMI2_HMP-oral.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/01a_CAMI2_HMP-gut_contigs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/01a_CAMI2_HMP-gut_contigs.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/05a_CAMI2_marine.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/05a_CAMI2_marine.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/06_CAMI2_genome-fraction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/06_CAMI2_genome-fraction.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/05b_CAMI2_plant_associated.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/05b_CAMI2_plant_associated.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/04_CAMI2_resmico_benchmarking.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/04_CAMI2_resmico_benchmarking.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/02b_CAMI2_HMP-gut_contig-check.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/02b_CAMI2_HMP-gut_contig-check.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/.ipynb_checkpoints/03_CAMI2_HMP-skin-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/.ipynb_checkpoints/03_CAMI2_HMP-skin-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/.ipynb_checkpoints/02_CAMI2_HMP-oral-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/04_CAMI/.ipynb_checkpoints/02_CAMI2_HMP-oral-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_n1000/01_n100_r30_test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_n1000/01_n100_r30_test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_n1000/00_n1000_r30_train-test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_n1000/00_n1000_r30_train-test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/02_n9000-rand/00_rich-depth_test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/02_n9000-rand/00_rich-depth_test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/02_n9000-rand/01_n9000-r10_train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/02_n9000-rand/01_n9000-r10_train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/02_n9000-rand/03_n9000-r10_diff-kmer.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/02_n9000-rand/03_n9000-r10_diff-kmer.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/02_n9000-rand/02_n9000-r10_test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/02_n9000-rand/02_n9000-r10_test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/00_n9000-r10_train_stats.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/00_n9000-r10_train_stats.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/gvis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/gvis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/01a_bam2feat_check_filtReads.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/01a_bam2feat_check_filtReads.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/02_bam2feat_check_reduced-feats.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/02_bam2feat_check_reduced-feats.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/02a_bam2feat_check_bt2-k10.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/02a_bam2feat_check_bt2-k10.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/01_bam2feat_check.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/00_dev/01_bam2feat_check.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/01_selecting_ref_genomes/01_GTDBr89.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/01_selecting_ref_genomes/01_GTDBr89.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/01_selecting_ref_genomes/03_GTDBr202.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/01_selecting_ref_genomes/03_GTDBr202.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/01_selecting_ref_genomes/03a_GTDBr202_intra-spec.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/01_selecting_ref_genomes/03a_GTDBr202_intra-spec.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/01_selecting_ref_genomes/02_GTDBr95_validation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/01_selecting_ref_genomes/02_GTDBr95_validation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03a_GTDBr95/02_n3900_r10_novel-family.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03a_GTDBr95/02_n3900_r10_novel-family.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03a_GTDBr95/01_n3900_r10_novel-genus.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03a_GTDBr95/01_n3900_r10_novel-genus.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/04_n9k_diff-kmer.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/04_n9k_diff-kmer.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/02_n9k_test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/02_n9k_test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/07_n9k_novel-family_test_insertSize.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/07_n9k_novel-family_test_insertSize.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/03_n9k_novel-family_test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/03_n9k_novel-family_test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/08_n9k-train_dataset_merge.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/08_n9k-train_dataset_merge.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/01a_n9k_train_CAMI-err.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/01a_n9k_train_CAMI-err.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/06_n2k_novel-family_intraSpec_test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/06_n2k_novel-family_intraSpec_test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/05_benchmark_summary.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/05_benchmark_summary.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/01b_n9k_train_large-insert.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/01b_n9k_train_large-insert.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/08a_n9k-train_dataset_check.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/08a_n9k-train_dataset_check.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/01_n9k_train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/01_n9k_train.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/01a_n9k_train_gb0.7.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/01a_n9k_train_gb0.7.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/01c_n9k_train_small-insert.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/01c_n9k_train_small-insert.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/01_n9k_train-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/01_n9k_train-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/04_n9k_diff-kmer-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/04_n9k_diff-kmer-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/02_n9k_test-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/02_n9k_test-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/03_n9k_novel-family_test-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/03_n9k_novel-family_test-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/01a_n9k_train_CAMI-err-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/01a_n9k_train_CAMI-err-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/01a_n9k_train_gb0.7-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/01_simulation_datasets/03b_GTDBr202/.ipynb_checkpoints/01a_n9k_train_gb0.7-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/06_sample_accessions.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/06_sample_accessions.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/05_insert_sizes.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/05_insert_sizes.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/05_TUK_MAGs/01_TUK_visconti_denovo_len1k.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/05_TUK_MAGs/01_TUK_visconti_denovo_len1k.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/05_TUK_MAGs/02_TUK_vadinCA11_denovo_len1k.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/05_TUK_MAGs/02_TUK_vadinCA11_denovo_len1k.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/06_tmdb/01_sample_select.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/06_tmdb/01_sample_select.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/06_tmdb/02_create_feature_tables.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/06_tmdb/02_create_feature_tables.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/08_mock-comm/BMock12_2mil.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/08_mock-comm/BMock12_2mil.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/08_mock-comm/MBARC-26_2mil.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/08_mock-comm/MBARC-26_2mil.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/04_animal-gut_MAGs/01_animal_MAGs_HiSeqRuns126-133-0138.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/04_animal-gut_MAGs/01_animal_MAGs_HiSeqRuns126-133-0138.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/04_animal-gut_MAGs/02_animal_denovo_len1k_n30.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/04_animal-gut_MAGs/02_animal_denovo_len1k_n30.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/04_animal-gut_MAGs/02a_animal_denovo_len1k_n100.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/04_animal-gut_MAGs/02a_animal_denovo_len1k_n100.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/03_UHGG_contig-gvis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/03_UHGG_contig-gvis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/01b_genome_select_round2.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/01b_genome_select_round2.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/02_denovo_LLMGQC_r100.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/02_denovo_LLMGQC_r100.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/02a_denovo_LLMGQC_r100-rep2.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/02a_denovo_LLMGQC_r100-rep2.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/debug.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/debug.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/00_test_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/00_test_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/01_genome_select.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/01_UHGG/01_genome_select.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/02_anx_MAGs/01_ResMiCo-SM.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/02_anx_MAGs/01_ResMiCo-SM.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/07_marmdb/01_sample_select.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/07_marmdb/01_sample_select.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/07_marmdb/02_create_feature_tables.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/07_marmdb/02_create_feature_tables.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/03_hubif_MAGs/01_Korean_ResMiCo-SM.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/06_version2/02_real_dataset_eval/03_hubif_MAGs/01_Korean_ResMiCo-SM.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/01_resmico-sm/01_ref_genomes/01_GTDBr89.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/01_resmico-sm/01_ref_genomes/01_GTDBr89.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/01_resmico-sm/01_ref_genomes/02_GTDBr95_validation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/01_resmico-sm/01_ref_genomes/02_GTDBr95_validation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/01_resmico-sm/02_GTDBr89_n9k-rand/01_train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/notebooks/01_resmico-sm/02_GTDBr89_n9k-rand/01_train.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/leylabmpi/resmico/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "leylabmpi/resmico"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Introduction"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/ResMiCo-SM/snakemake_sge.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/ResMiCo-SM/snakemake_lsf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/ResMiCo-SM/feature_extractor/third_party/gflags/src/gflags_completions.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/ResMiCo-SM/feature_extractor/third_party/spdlog/scripts/format.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/2468572/175315122-1ec3e6e3-419f-4154-af31-21b9dcb2e38f.png"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installing a binary distribution package\n\nNo official binary distribution packages are provided by the gflags developers.\nThere may, however, be binary packages available for your operating system.\nPlease consult also the package repositories of your Linux distribution.\n\nOn Debian/Ubuntu Linux, gflags can be installed using the following command:\n\n    sudo apt-get install libgflags-dev\n\nOn macOS, [Homebrew](https://brew.sh/) includes a formula for gflags:\n\n    brew install gflags\n\n\n# Compiling the source code with Bazel\n\nTo use gflags in a [Bazel](http://bazel.io) project, map it in as an external\ndependency by editing your WORKSPACE file:\n\n    git_repository(\n        name = \"com_github_gflags_gflags\",\n        commit = \"<INSERT COMMIT SHA HERE>\",\n        remote = \"https://github.com/gflags/gflags.git\",\n    )\n\nYou can then add `@com_github_gflags_gflags//:gflags` to the `deps` section of a\n`cc_binary` or `cc_library` rule, and `#include <gflags/gflags.h>` to include it\nin your source code.\n\n\n# Compiling the source code with vcpkg\n\nYou can download and install gflags using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    vcpkg install gflags\n\nThe gflags port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n\n# Compiling the source code with CMake\n\nThe build system of gflags is since version 2.1 based on [CMake](http://cmake.org).\nThe common steps to build, test, and install software are therefore:\n\n1. Extract source files.\n2. Create build directory and change to it.\n3. Run CMake to configure the build tree.\n4. Build the software using selected build tool.\n5. Test the built software.\n6. Install the built files.\n\nOn Unix-like systems with GNU Make as build tool, these build steps can be\nsummarized by the following sequence of commands executed in a shell,\nwhere ```$package``` and ```$version``` are shell variables which represent\nthe name of this package and the obtained version of the software.\n\n    $ tar xzf gflags-$version-source.tar.gz\n    $ cd gflags-$version\n    $ mkdir build && cd build\n    $ ccmake ..\n    \n      - Press 'c' to configure the build system and 'e' to ignore warnings.\n      - Set CMAKE_INSTALL_PREFIX and other CMake variables and options.\n      - Continue pressing 'c' until the option 'g' is available.\n      - Then press 'g' to generate the configuration files for GNU Make.\n    \n    $ make\n    $ make test    (optional)\n    $ make install (optional)\n\nIn the following, only gflags-specific CMake settings available to\nconfigure the build and installation are documented. Note that most of these\nvariables are for advanced users and binary package maintainers only.\nThey usually do not have to be modified.\n\n\nCMake Option                | Description\n--------------------------- | -------------------------------------------------------\nCMAKE_INSTALL_PREFIX        | Installation directory, e.g., \"/usr/local\" on Unix and \"C:\\Program Files\\gflags\" on Windows.\nBUILD_SHARED_LIBS           | Request build of dynamic link libraries.\nBUILD_STATIC_LIBS           | Request build of static link libraries. Implied if BUILD_SHARED_LIBS is OFF.\nBUILD_PACKAGING             | Enable binary package generation using CPack.\nBUILD_TESTING               | Build tests for execution by CTest.\nBUILD_NC_TESTS              | Request inclusion of negative compilation tests (requires Python).\nBUILD_CONFIG_TESTS          | Request inclusion of package configuration tests (requires Python).\nBUILD_gflags_LIBS           | Request build of multi-threaded gflags libraries (if threading library found).\nBUILD_gflags_nothreads_LIBS | Request build of single-threaded gflags libraries.\nGFLAGS_NAMESPACE            | Name of the C++ namespace to be used by the gflags library. Note that the public source header files are installed in a subdirectory named after this namespace. To maintain backwards compatibility with the Google Commandline Flags, set this variable to \"google\". The default is \"gflags\".\nGFLAGS_INTTYPES_FORMAT      | String identifying format of built-in integer types.\nGFLAGS_INCLUDE_DIR          | Name of headers installation directory relative to CMAKE_INSTALL_PREFIX.\nLIBRARY_INSTALL_DIR         | Name of library installation directory relative to CMAKE_INSTALL_PREFIX.\nINSTALL_HEADERS             | Request installation of public header files.\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/ResMiCo-SM/feature_extractor/third_party/gflags/INSTALL.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using pip (easyest, but works only on specific platforms)",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Resmico depends on tensorflow, pandas and numpy, each of which coming with its own host of \ndependency nightmares. We have created pip wheels for python 3.8, 3.9 and 3.10 for both Mac OS (x86) and relatively recent Linux versions \n(using glibc >= 2.31). :\n```bash\npip install resmico\n```\n**Note**: resmico depends on tensorflow, so it won't work on Mac machines with Apple silicon.\n\nIf you encounter the following error:\n```\nERROR: Could not find a version that satisfies the requirement ResMiCo (from versions: none)\nERROR: No matching distribution found for ResMiCo\n```\nyou may need to upgrade your pip version. Try running:\n```bash\npip install --upgrade pip\n```\nIf you encounter\n```\nERROR: Ignored the following versions that require a different python version: 1.0.12 Requires-Python >=3.8; 1.0.13 Requires-Python >=3.8; 1.1.0 Requires-Python >=3.8; 1.1.1 Requires-Python >=3.8; 1.2.0 Requires-Python >=3.8; 1.2.1 Requires-Python >=3.8; 1.2.2 Requires-Python >=3.8\nERROR: Could not find a version that satisfies the requirement ResMiCo (from versions: none)\nERROR: No matching distribution found for ResMiCo\n```\nyou need to create an environment with a Python version >=3.8 using e.g. conda:\n```bash\nconda create -n resmico python=3.8\nconda activate resmico\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From source using pip",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If none of the pip wheels is compatible with your system, you can still install resmico relatively easily by installing\nthe dependencies via conda (or mamba) and using `pip` to install resmico:\n```bash\ngit clone https://github.com/leylabmpi/resmico\nconda env create -n resmico -f resmico/environment.yml\nconda activate resmico\npip install resmico\n```\n\n\n> WARNING: the resmico bioconda recipe is currently set to an old version of\nresmico. That old version does not match the current user interface\n(e.g., lacks `resmico bam2feat`). So, we do not recommend using\nthe bioconda recipe for installing resmico at this time.\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9876293164426458,
      "result": {
        "original_header": "Working directory",
        "type": "Text_excerpt",
        "value": "```\nmkdir example1 && cd example1\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9537951919312543,
      "result": {
        "original_header": "Filter out contigs predicted to be misassembled",
        "type": "Text_excerpt",
        "value": "> You may need to adjust the `--score-cutoff` in order to filter some contigs\n \n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9906378717794132,
      "result": {
        "original_header": "Model evaluation",
        "type": "Text_excerpt",
        "value": "* One GPU (NVIDIA RTX A5000): 108 +/- 0.7 contigs per second\n* One CPU (AMD Epyc): 38.7 +/- 10.3 contigs per second \n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8596219801231416,
      "result": {
        "original_header": "Predict using the \"default\" model",
        "type": "Text_excerpt",
        "value": "Using the \"default\" resmico model from the Mineeva et al., 2022 manuscript.\nPrediction on the example test data.\nThis provides a comparison to our newly trained model.\n```\nresmico evaluate --n-procs 4 \\\n  --save-path predictions \\\n  --save-name default-model \\\n  --feature-files-path UHGG-n9_features/\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/leylabmpi/resmico/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, deep-learning, metagenome-assembly, metagenomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Nicholas Youngblut\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "resmico"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "leylabmpi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 31275816,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 459940,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 276204,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 137257,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 8695,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 6029,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 2660,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1345,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nick-youngblut",
          "type": "User"
        },
        "date_created": "2022-09-02T07:29:17Z",
        "date_published": "2022-09-02T07:31:23Z",
        "description": "Added pysam and sklearn to the list of dependencies.\r\nUpdated the dependency versions.",
        "html_url": "https://github.com/leylabmpi/resmico/releases/tag/1.1.1",
        "name": "Updated dependencies",
        "release_id": 76119161,
        "tag": "1.1.1",
        "tarball_url": "https://api.github.com/repos/leylabmpi/resmico/tarball/1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/leylabmpi/resmico/releases/76119161",
        "value": "https://api.github.com/repos/leylabmpi/resmico/releases/76119161",
        "zipball_url": "https://api.github.com/repos/leylabmpi/resmico/zipball/1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nick-youngblut",
          "type": "User"
        },
        "date_created": "2022-06-26T12:48:54Z",
        "date_published": "2022-06-26T12:51:47Z",
        "description": "Added `resmico bam2feat` subcommand for creating feature tables from fasta & bam files.\r\nUpdated the docs and CI accordingly",
        "html_url": "https://github.com/leylabmpi/resmico/releases/tag/1.1.0",
        "name": "Added bam2feat subcommand",
        "release_id": 70580332,
        "tag": "1.1.0",
        "tarball_url": "https://api.github.com/repos/leylabmpi/resmico/tarball/1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/leylabmpi/resmico/releases/70580332",
        "value": "https://api.github.com/repos/leylabmpi/resmico/releases/70580332",
        "zipball_url": "https://api.github.com/repos/leylabmpi/resmico/zipball/1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nick-youngblut",
          "type": "User"
        },
        "date_created": "2022-05-28T14:41:02Z",
        "date_published": "2022-05-28T14:44:38Z",
        "description": "Added filter subcommand to remove contigs predicted to be misassembled from a fasta of all contigs",
        "html_url": "https://github.com/leylabmpi/resmico/releases/tag/1.0.13",
        "name": "Added filter subcommand",
        "release_id": 68072965,
        "tag": "1.0.13",
        "tarball_url": "https://api.github.com/repos/leylabmpi/resmico/tarball/1.0.13",
        "type": "Release",
        "url": "https://api.github.com/repos/leylabmpi/resmico/releases/68072965",
        "value": "https://api.github.com/repos/leylabmpi/resmico/releases/68072965",
        "zipball_url": "https://api.github.com/repos/leylabmpi/resmico/zipball/1.0.13"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "danieldanciu",
          "type": "User"
        },
        "date_created": "2022-05-03T14:30:32Z",
        "date_published": "2022-05-14T16:09:29Z",
        "html_url": "https://github.com/leylabmpi/resmico/releases/tag/1.0.0",
        "name": "First Resmico Release",
        "release_id": 66880967,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/leylabmpi/resmico/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/leylabmpi/resmico/releases/66880967",
        "value": "https://api.github.com/repos/leylabmpi/resmico/releases/66880967",
        "zipball_url": "https://api.github.com/repos/leylabmpi/resmico/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the ResMiCo package tests",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Install `pytest` and `pytest-console-scripts`. For example:\n\n```\nmamba install pytest pytest-console-scripts\n```\n\nRun tests with `pytest`\n\n```\npytest -s --hide-run-results --script-launch-mode=subprocess ./resmico/tests/\n```\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:06:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "ResMiCo-SM snakemake pipeline",
        "parent_header": [
          "General usage"
        ],
        "type": "Text_excerpt",
        "value": "Use ResMiCo-SM for creating feature files from real data or simulate new data.\n\nSee the [ResMiCo-SM README](./ResMiCo-SM/README.md)\n\n> Note `resmico bam2feat` can also be used to create feature tables from\nreal data: contig fasta files & associated BAM files (mapped reads)\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "ResMiCo package",
        "parent_header": [
          "General usage"
        ],
        "type": "Text_excerpt",
        "value": "Main interface: `resmico -h`\n\nNote: Although `ResMiCo` can be run on a CPU, it is orders of magnitude\nslower than on a GPU, so we only recommend running on CPUs for testing. \n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Creating feature tables",
        "parent_header": [
          "General usage",
          "ResMiCo package"
        ],
        "type": "Text_excerpt",
        "value": "See `resmico bam2feat -h`\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Predicting with existing model",
        "parent_header": [
          "General usage",
          "ResMiCo package"
        ],
        "type": "Text_excerpt",
        "value": "See `resmico evaluate -h` \n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Filtering out misassembled contigs",
        "parent_header": [
          "General usage",
          "ResMiCo package"
        ],
        "type": "Text_excerpt",
        "value": "See `resmico filter -h`\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Training a new model",
        "parent_header": [
          "General usage",
          "ResMiCo package"
        ],
        "type": "Text_excerpt",
        "value": "See `resmico train -h` \n\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 1: predicting misassemblies with the \"default\" model",
        "type": "Text_excerpt",
        "value": "> If you already have metagenome reads mapped to your contigs,\nyou can process your own data much like in this example.\n\n> The model was trained with data produced via mapping Illumina\npaired-end reads with [Bowtie2](https://github.com/BenLangmead/bowtie2). \n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Get the example dataset",
        "parent_header": [
          "Example2: Training &amp; using a new model"
        ],
        "type": "Text_excerpt",
        "value": "The dataset consists of a few UHGG genomes (MAGs) and associated BAM files. \nThe BAM files were generated by using Bowtie2 to map the associated\nmetagenome paired-end reads (from which the MAGs were assembled) to the\nMAG contigs. \n\nSo, the input consists of fasta files (contigs) and BAM files (mapped reads).\n\nA simple tab-delimited table is used to map the fasta & BAM files.\n\n**Map file format:**\n\n    * A tab-delim table with the columns (any order is allowed): \n      * `Taxon` => name associated with the fasta file of contigs\n      * `Fasta` => path to the fasta file of contigs\n      * `Sample` => name associated with the BAM file \n      * `BAM` => path to the BAM file of reads mapped to the contigs in `Fasta`\n\nSee the `map.tsv` file for an example.\n\n```\nwget http://ftp.tue.mpg.de/ebio/projects/ResMiCo/UHGG-n9_bam2feat.tar.gz\nwget http://ftp.tue.mpg.de/ebio/projects/ResMiCo/UHGG-n9_bam2feat.md5\nmd5sum --check UHGG-n9_bam2feat.md5\ntar -pzxvf UHGG-n9_bam2feat.tar.gz && rm -f UHGG-n9_bam2feat.*\n```\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Convert BAM files to feature tables",
        "parent_header": [
          "Example 1: predicting misassemblies with the \"default\" model"
        ],
        "type": "Text_excerpt",
        "value": "Create a feature table for each sorted BAM file:\n\n```\nresmico bam2feat --outdir features UHGG-n9_bam2feat/map.tsv\n```\n\n> Note: the parameters are the same as used for creating\nthe \"default\" model from Mineeva et al., 2022, which is \ncritical for getting accurate predictions.\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Predict misassemblies",
        "parent_header": [
          "Example 1: predicting misassemblies with the \"default\" model"
        ],
        "type": "Text_excerpt",
        "value": "```\nresmico evaluate \\\n  --min-avg-coverage 0.01 \\\n  --save-path predictions \\\n  --save-name default-model \\\n  --dont-verify-insert-size \\\n  --feature-files-path features\n```\n\n> Note: `--min-avg-coverage` is set to \"0.01\" here due to the\nabnormally low coverage in these small example BAM files.\n**DO NOT** use such a low coverage cutoff with real data. In the experiments shown in the paper, it was set to 1.\n\n> Note: use `--dont-verify-insert-size` if you have already checked the insert size distribution range of your data once (inclusion criteria) and want to save some time at this run.\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Filter contigs",
        "parent_header": [
          "Example 1: predicting misassemblies with the \"default\" model"
        ],
        "type": "Text_excerpt",
        "value": "Filter out contigs predicted to be misassembled\n\n```\nresmico filter \\\n  --outdir filtered predictions/default-model.csv \\\n  UHGG-n9_bam2feat/*.fna.gz\n```\n\n> Note: change the `--score-cutoff` parameter to alter the number\nof contigs filtered.\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Training on the example train data",
        "parent_header": [
          "Example2: Training &amp; using a new model"
        ],
        "type": "Text_excerpt",
        "value": "Train a new model with the example train dataset.\n\n```\nresmico train --log-progress --n-procs 4 --n-epochs 2 \\\n  --save-path model-n10 --stats-file='' \\\n  --save-name genomes-n10 \\\n  --feature-files-path genomes-n10_features\n```\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorials",
        "type": "Text_excerpt",
        "value": "See the [wiki](https://github.com/leylabmpi/ResMiCo/wiki)\n"
      },
      "source": "https://raw.githubusercontent.com/leylabmpi/ResMiCo/master/README.md",
      "technique": "header_analysis"
    }
  ]
}