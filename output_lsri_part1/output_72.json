{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "To cite:",
        "parent_header": [
          "scPrisma",
          "Running the tests"
        ],
        "type": "Text_excerpt",
        "value": "```\r\n@article{karin2023scprisma,\r\n  title={sc{P}risma infers, filters and enhances topological signals in single-cell data using spectral template matching},\r\n  author={Karin, Jonathan and Bornfeld, Yonathan and Nitzan, Mor},\r\n  journal={Nature Biotechnology},\r\n  pages={1--10},\r\n  year={2023},\r\n  publisher={Nature Publishing Group US New York}\r\n}\r\n```\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Karin, Jonathan and Bornfeld, Yonathan and Nitzan, Mor",
        "format": "bibtex",
        "title": "sc{P}risma infers, filters and enhances topological signals in single-cell data using spectral template matching",
        "type": "Text_excerpt",
        "value": "@article{karin2023scprisma,\n    publisher = {Nature Publishing Group US New York},\n    year = {2023},\n    pages = {1--10},\n    journal = {Nature Biotechnology},\n    author = {Karin, Jonathan and Bornfeld, Yonathan and Nitzan, Mor},\n    title = {sc{P}risma infers, filters and enhances topological signals in single-cell data using spectral template matching},\n}"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nitzanlab/scPrisma"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "scPrisma"
        ],
        "type": "Text_excerpt",
        "value": "Jonathan Karin - jonathan.karin [at ] mail.huji.ac.il <br />\r\n[Forum](https://github.com/nitzanlab/scPrisma/discussions)\r\n"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-02T19:29:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-02T12:07:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scPrisma is a spectral analysis method, for pseudotime reconstruction, informative genes inference, filtering, and enhancement of underlying cyclic signals"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9991473935708894,
      "result": {
        "original_header": "scPrisma",
        "type": "Text_excerpt",
        "value": "scPrisma is a spectral analysis method, for pseudotime reconstruction, informative genes inference, filtering, and enhancement of underlying topological signals.\r\n![workflow](https://github.com/nitzanlab/scPrisma/blob/master/workflow.png?raw=true)\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9917483285183516,
      "result": {
        "original_header": " For reproducibility of scPrisma manuscript, please refer to:<br /> https://github.com/nitzanlab/scPrisma_notebooks",
        "type": "Text_excerpt",
        "value": "# scPrisma\r\nscPrisma is a spectral analysis method, for pseudotime reconstruction, informative genes inference, filtering, and enhancement of underlying topological signals.\r\n![workflow](https://github.com/nitzanlab/scPrisma/blob/master/workflow.png?raw=true)\r\n\r\n\r\n## Manuscript\r\n[Karin, J., Bornfeld, Y. & Nitzan, M. scPrisma infers, filters and enhances topological signals in single-cell data using spectral template matching. Nat Biotechnol (2023)](https://www.nature.com/articles/s41587-023-01663-5)\r\n\r\n\r\n## Getting Started\r\nFor documentation please refer to [scPrisma documentation](https://scprisma.readthedocs.io/en/latest/).\r\n\r\n\r\n## Tutorials\r\nFor tutorials, please refer to:[Tutorials](https://github.com/nitzanlab/scPrisma/tree/master/tutorials)\r\n\r\n\r\n## Reproducibility\r\n<h4> For reproducibility of scPrisma manuscript, please refer to:<br /> https://github.com/nitzanlab/scPrisma_notebooks</h4>\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nitzanlab/scPrisma/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://scprisma.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nitzanlab/scPrisma/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/tutorial_prior_knowledge_linear_and_cyclic_gpu.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/tutorial_prior_knowledge_linear_and_cyclic_gpu.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/general_matrix_enhancement_gpu.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/general_matrix_enhancement_gpu.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/general_matrix_filtering_gpu.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/general_matrix_filtering_gpu.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/hematopoietic_progenitors_reconstruction_with_partial_prior_knowledge_gpu.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/hematopoietic_progenitors_reconstruction_with_partial_prior_knowledge_gpu.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/tutorial_prior_knowledge_linear_and_cyclic-Copy1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/tutorial_prior_knowledge_linear_and_cyclic-Copy1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/tutorial_de_novo_reconstruction_gpu.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/gpu/tutorial_de_novo_reconstruction_gpu.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/cpu/tutorial_de_novo_reconstruction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/cpu/tutorial_de_novo_reconstruction.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/cpu/tutorial_prior_knowledge_linear_and_cyclic_cpu.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/cpu/tutorial_prior_knowledge_linear_and_cyclic_cpu.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/cpu/hematopoietic_progenitors_reconstruction_with_partial_prior_knowledge.ipynb"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/tutorials/cpu/hematopoietic_progenitors_reconstruction_with_partial_prior_knowledge.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nitzanlab/scPrisma/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nitzanlab/scPrisma"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scPrisma"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/workflow.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "scPrisma"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```sh\r\ngit clone https://github.com/nitzanlab/scPrisma.git\r\ncd scPrisma\r\npip install .\r\nFor running the gpu version install it like so pip install .\"[gpu]\"\r\n```\r\n<br />\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nitzanlab/scPrisma/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Jonathan Karin \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scPrisma"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "nitzanlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 12278620,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 223863,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the tests",
        "parent_header": [
          "scPrisma"
        ],
        "type": "Text_excerpt",
        "value": "\r\nI recommend creating two separate virtual environments for running the cpu/gpu test suite. On my laptop, I use conda but this can be replaced any other virtual environment manager of your choice.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the cpu only tests",
        "parent_header": [
          "scPrisma",
          "Running the tests"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\nconda create -n scprisma_cpu python=3.10\r\nconda activate scprisma_cpu\r\npip install .\r\npytest tests/cpu\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the gpu only tests",
        "parent_header": [
          "scPrisma",
          "Running the tests"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\nconda create -n scprisma_gpu python=3.10\r\nconda activate scprisma_gpu\r\npip install .[gpu]\r\npytest tests/gpu\r\n```\r"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:10:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "scPrisma"
        ],
        "type": "Text_excerpt",
        "value": "For documentation please refer to [scPrisma documentation](https://scprisma.readthedocs.io/en/latest/).\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorials",
        "parent_header": [
          "scPrisma"
        ],
        "type": "Text_excerpt",
        "value": "For tutorials, please refer to:[Tutorials](https://github.com/nitzanlab/scPrisma/tree/master/tutorials)\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/nitzanlab/scPrisma/master/README.md",
      "technique": "header_analysis"
    }
  ]
}