{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "type": "Text_excerpt",
        "value": "**scalepopgen** was mainly written by @BioInf2305 with contributions from @NPogo.\n\nMany thanks to `nf-core` community for their assistance and help in the development of this pipeline.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citations",
        "type": "Text_excerpt",
        "value": "\n\n\n\n\nNote that the CLI also generates a separate folder with the prefix **citation_**; this folder contains the relevant references in bibxtex format. These references should be cited in the manuscript. \n\nOther important list of references for the additional tools used by the pipeline can be found in the [`CITATIONS.md`](CITATIONS.md) file.\n\nThis pipeline uses code and infrastructure developed and maintained by the [nf-core](https://nf-co.re) community, reused here under the [MIT license](https://github.com/nf-core/tools/blob/master/LICENSE).\n\n> **The nf-core framework for community-curated bioinformatics pipelines.**\n>\n> Philip Ewels, Alexander Peltzer, Sven Fillinger, Harshil Patel, Johannes Alneberg, Andreas Wilm, Maxime Ulysse Garcia, Paolo Di Tommaso & Sven Nahnsen.\n>\n> _Nat Biotechnol._ 2020 Feb 13. doi: [10.1038/s41587-020-0439-x](https://dx.doi.org/10.1038/s41587-020-0439-x).\n"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Popgen48/scalepopgen"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# popgen48/scalepopgen: Contributing Guidelines\n\nHi there!\nMany thanks for taking an interest in improving popgen48/scalepopgen.\n\nWe try to manage the required tasks for popgen48/scalepopgen using GitHub issues, you probably came to this page when creating one.\nPlease use the pre-filled template to save time.\n\nHowever, don't be put off by this template - other more general issues and suggestions are welcome!\nContributions to the code are even more welcome ;)\n\n## Contribution workflow\n\nIf you'd like to write some code for popgen48/scalepopgen, the standard workflow is as follows:\n\n1. Check that there isn't already an issue about your idea in the [popgen48/scalepopgen issues](https://github.com/popgen48/scalepopgen/issues) to avoid duplicating work. If there isn't one already, please create one so that others know you're working on this\n2. [Fork](https://help.github.com/en/github/getting-started-with-github/fork-a-repo) the [popgen48/scalepopgen repository](https://github.com/popgen48/scalepopgen) to your GitHub account\n3. Make the necessary changes / additions within your forked repository following [Pipeline conventions](#pipeline-contribution-conventions)\n4. Use `nf-core schema build` and add any new parameters to the pipeline JSON schema (requires [nf-core tools](https://github.com/nf-core/tools) >= 1.10).\n5. Submit a Pull Request against the `dev` branch and wait for the code to be reviewed and merged\n\nIf you're not used to this workflow with git, you can start with some [docs from GitHub](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests) or even their [excellent `git` resources](https://try.github.io/).\n\n## Tests\n\nWhen you create a pull request with changes, [GitHub Actions](https://github.com/features/actions) will run automatic tests.\nTypically, pull-requests are only fully reviewed when these tests are passing, though of course we can help out before then.\n\nThere are typically two types of tests that run:\n\n### Lint tests\n\n`nf-core` has a [set of guidelines](https://nf-co.re/developers/guidelines) which all pipelines must adhere to.\nTo enforce these and ensure that all pipelines stay in sync, we have developed a helper tool which runs checks on the pipeline code. This is in the [nf-core/tools repository](https://github.com/nf-core/tools) and once installed can be run locally with the `nf-core lint <pipeline-directory>` command.\n\nIf any failures or warnings are encountered, please follow the listed URL for more documentation.\n\n### Pipeline tests\n\nEach `nf-core` pipeline should be set up with a minimal set of test-data.\n`GitHub Actions` then runs the pipeline on this data to ensure that it exits successfully.\nIf there are any failures then the automated tests fail.\nThese tests are run both with the latest available version of `Nextflow` and also the minimum required version that is stated in the pipeline code.\n\n## Patch\n\n:warning: Only in the unlikely and regretful event of a release happening with a bug.\n\n- On your own fork, make a new branch `patch` based on `upstream/master`.\n- Fix the bug, and bump version (X.Y.Z+1).\n- A PR should be made on `master` from patch to directly this particular bug.\n\n## Pipeline contribution conventions\n\nTo make the popgen48/scalepopgen code and processing logic more understandable for new contributors and to ensure quality, we semi-standardise the way the code and other contributions are written.\n\n### Adding a new step\n\nIf you wish to contribute a new step, please use the following coding standards:\n\n1. Define the corresponding input channel into your new process from the expected previous process channel\n2. Write the process block (see below).\n3. Define the output channel if needed (see below).\n4. Add any new parameters to `nextflow.config` with a default (see below).\n5. Add any new parameters to `nextflow_schema.json` with help text (via the `nf-core schema build` tool).\n6. Add sanity checks and validation for all relevant parameters.\n7. Perform local tests to validate that the new code works as expected.\n8. If applicable, add a new test command in `.github/workflow/ci.yml`.\n9. Update MultiQC config `assets/multiqc_config.yml` so relevant suffixes, file name clean up and module plots are in the appropriate order. If applicable, add a [MultiQC](https://https://multiqc.info/) module.\n10. Add a description of the output files and if relevant any appropriate images from the MultiQC report to `docs/output.md`.\n\n### Default values\n\nParameters should be initialised / defined with default values in `nextflow.config` under the `params` scope.\n\nOnce there, use `nf-core schema build` to add to `nextflow_schema.json`.\n\n### Default processes resource requirements\n\nSensible defaults for process resource requirements (CPUs / memory / time) for a process should be defined in `conf/base.config`. These should generally be specified generic with `withLabel:` selectors so they can be shared across multiple processes/steps of the pipeline. A nf-core standard set of labels that should be followed where possible can be seen in the [nf-core pipeline template](https://github.com/nf-core/tools/blob/master/nf_core/pipeline-template/conf/base.config), which has the default process as a single core-process, and then different levels of multi-core configurations for increasingly large memory requirements defined with standardised labels.\n\nThe process resources can be passed on to the tool dynamically within the process with the `${task.cpu}` and `${task.memory}` variables in the `script:` block.\n\n### Naming schemes\n\nPlease use the following naming schemes, to make it easy to understand what is going where.\n\n- initial process channel: `ch_output_from_<process>`\n- intermediate and terminal channels: `ch_<previousprocess>_for_<nextprocess>`\n\n### Nextflow version bumping\n\nIf you are using a new feature from core Nextflow, you may bump the minimum required version of nextflow in the pipeline with: `nf-core bump-version --nextflow . [min-nf-version]`\n\n### Images and figures\n\nFor overview images and other documents we follow the nf-core [style guidelines and examples](https://nf-co.re/developers/design_guidelines).\n\n## GitHub Codespaces\n\nThis repo includes a devcontainer configuration which will create a GitHub Codespaces for Nextflow development! This is an online developer environment that runs in your browser, complete with VSCode and a terminal.\n\nTo get started:\n\n- Open the repo in [Codespaces](https://github.com/popgen48/scalepopgen/codespaces)\n- Tools installed\n  - nf-core\n  - Nextflow\n\nDevcontainer specs:\n\n- [DevContainer config](.devcontainer/devcontainer.json)\n"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/.github/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-12-10T21:13:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-13T13:03:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "**scalepopgen** is a fully automated nextflow-based pipeline that takes **VCF** or **PLINK binary** files as input and apply a variety of open-source tools to carry out comprehensive population genomic analyses. Additionally, python and R scripts have been developed to combine and plot the results of analyses, which allows user to immediately get an impression about the genomic patterns of the analyzed samples. \n\n<p>Broadly, the pipeline consists of the following four \u201csub-workflows\u201d:</p>\n<ul>\n<li>filtering and basic statistics</li>\n<li>explore genetic structure</li>\n<li>phylogeny using treemix</li>\n<li>signatures of selection</li>\n</ul>\n<p>The sub-workflows can be used separately or in combination with each other.</p>\n\nThe pipeline can be run on any Linux operating system and require these three dependencies: Nextflow, Java and a software container or environment system such as `conda`, `mamba`, `singularity` or `docker`. Regarding the latter, we highly recommend using `mamba`. The pipeline can be run on both, local linux system as well as high performance computing (HPC) clusters. Note that the user only install the three dependencies listed above, while Nextflow automatically downloads the rest of the tools for the analyses.\n"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Popgen48/scalepopgen/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Popgen48/scalepopgen/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Popgen48/scalepopgen/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Popgen48/scalepopgen"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/assets/131758840/1e853c26-404d-43d5-b3fb-d7a1c9e879d4"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/assets/131758840/96936bd8-a3d6-46e9-814a-5119ef0eee4a"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/assets/131758840/d980e7bb-cddf-478a-9849-db40dd96c399"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/assets/131758840/2ff87f49-7a8d-40f3-b392-51e4c1afa92e"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Popgen48/scalepopgen/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) @BioInf2305\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scalepopgen"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Popgen48"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 197954,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 114161,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Groovy",
        "size": 25193,
        "type": "Programming_language",
        "value": "Groovy"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 17212,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 2695,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BioInf2305",
          "type": "User"
        },
        "date_created": "2024-02-16T23:01:35Z",
        "date_published": "2024-02-16T23:37:36Z",
        "html_url": "https://github.com/Popgen48/scalepopgen/releases/tag/v1.0.0",
        "name": "scalepopgen_1.0.0",
        "release_id": 142423783,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/Popgen48/scalepopgen/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Popgen48/scalepopgen/releases/142423783",
        "value": "https://api.github.com/repos/Popgen48/scalepopgen/releases/142423783",
        "zipball_url": "https://api.github.com/repos/Popgen48/scalepopgen/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 22:57:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributions and Support",
        "type": "Text_excerpt",
        "value": "If you would like to contribute to this pipeline, please see the [contributing guidelines](.github/CONTRIBUTING.md).\n\n"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "::: note\nIf you are new to Nextflow and nf-core, please refer to [this page](https://nf-co.re/docs/usage/installation) on how to set-up the Nextflow. Please, make sure to [test your setup](https://nf-co.re/docs/usage/introduction#how-to-run-a-pipeline) with `-profile test` before running the workflow on actual data.\n:::\n\nAfter successful installation of Nextflow, Java and one of the container systems, download the scalepopgen:\n\n```\ngit clone https://github.com/Popgen48/scalepopgen.git\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "INPUT FILES",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "All VCF files need to be splitted by the chromosomes and indexed with tabix. The VCF inputs should be listed in the comma-separated input sheet with the extension \".csv\" and the header row exactly like in the example below. Please note that the chromosome name must not contain any punctuation marks.\n\n**vcf_input.csv:**\n```\nchrom,vcf,vcf_idx\nchr1,chrom1.vcf.gz,chrom1.vcf.gz.tbi\nchr2,chrom2.vcf.gz,chrom2.vcf.gz.tbi\n```\nIn addition to the VCF input format, it is also necessary to prepare a sample map file of individuals and populations. Sample map has two tab-delimited columns without header line. In the first column are individual IDs and in the second are population IDs as demonstrated on the example below. It is also important that the name of the file ends with \".map\".\n\n**sample.map:**\n```\nind1  pop1\nind2  pop1\nind3  pop2\nind4  pop2\n```\n\nSimilarly for the PLINK binary files, user need to specify them in the comma-separated input sheet with the header row, but with the extension \".p.csv\".\n\n**plink_input.csv:**\n```\nprefix,bed,bim,fam\npopgen,popgen.bed,popgen.bim,popgen.fam\n```\n\n\nThe workflow implement a lot of programs and tools, which consequently means a lot of parameters that need to be determined and provided as the yml format file. In order to make it easier for the users, we developed a Command-Line Interface (CLI), which helps to specify options for each sub-workflow. In fact, we highly recommend the CLI for creating parameter file as it guides the user through various options and at the same time checks the input formats.\n\nThe CLI can be downloaded and installed with the following commands:\n\n```\ngit clone https://github.com/Popgen48/scalepopgen-cli.git\ncd scalepopgen-cli/\n#pip install --upgrade pip --> to update the version of pip \npip3 install --no-cache-dir -r requirements.txt --user\n```\n\nStart the CLI with:\n```\npython scalepopgen_cli.py\n```\n![grafik](https://github.com/Popgen48/scalepopgen/assets/131758840/1e853c26-404d-43d5-b3fb-d7a1c9e879d4)\n\nNavigate through different sub-workflows and their options.\n\n![grafik](https://github.com/Popgen48/scalepopgen/assets/131758840/96936bd8-a3d6-46e9-814a-5119ef0eee4a)\n![grafik](https://github.com/Popgen48/scalepopgen/assets/131758840/d980e7bb-cddf-478a-9849-db40dd96c399)\n\n\nOnce you select and specify the parameters according to analyses you want to perform, simply save them to YAML file and copy the path within the `-params-file` option.\n\n![CLI5](https://github.com/Popgen48/scalepopgen/assets/131758840/2ff87f49-7a8d-40f3-b392-51e4c1afa92e)\n\nNow, you can run the scalepopgen:\n\n```bash\nnextflow run scalepopgen/ \\\n   -profile <docker/singularity/conda/mamba> \\\n   -params-file <path/to/parameters.yml> \\\n   -qs <maximum number of processes>\n```\nNote that the CLI also generates a separate folder with the prefix **citation_**; this folder contains the relevant references in bibxtex format. These references should be cited in the manuscript. \n\nAfter git clone, to test the functionality, run the following Command with a small dataset\n\n```bash\nnextflow run scalepopgen/ \\\n   -profile test,<docker/singularity/conda/mamba> \\\n   -qs 10\n```\n\nTo reproduce the results discussed in the paper, \n\n```bash\nnextflow run scalepopgen/ \\\n   -profile test_full,<docker/singularity/conda/mamba> \\\n   -qs 10\n```\n\n\n::: warning\nCustom config files, including those provided by the Nextflow option `-c`, can be used to provide any other configuration, _**except for the parameters**_;\nsee [docs](https://nf-co.re/usage/configuration#custom-configuration-files).\n:::\n"
      },
      "source": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/workflows/scalepopgen.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/nf-core/admixture/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/nf-core/beagle5/beagle/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/nf-core/custom/dumpsoftwareversions/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/nf-core/estsfs/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/nf-core/shapeit5/phasecommon/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/nf-core/bcftools/split/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/nf-core/multiqc/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/nf-core/tabix/tabix/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/nf-core/tabix/bgziptabix/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/rscript/plot_tree/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/rscript/optm/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/treeemix/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/eigensoft/smartpca/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/eigensoft/convertf/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/vcftools/keep/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/vcftools/filter_sites/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/vcftools/remove/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/vcftools/concat/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/vcftools/selection/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/sweepfinder2/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/phylip/consense/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink2/filter_snps/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink2/export_ped/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink2/calc_pairwise_wfst/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink2/sample_counts/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink2/merge_bed/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink2/vcf/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink2/filter_samples/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink2/convert_bed_to_vcf/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink2/remove_custom_indi/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink2/indep-pairwise/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/imagemagik/convert/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/imagemagik/convert_append/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/create/estsfs_input/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/create/eigenstrat_par/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/create/sweepfinder_input/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/create/smartpca_par/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/split_map/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/convert/vcf2treemix/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/plot/admixture/q_mat/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/plot/admixture/cv_error/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/plot/average_maf/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/plot/selection_results/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/plot/average_het/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/plot/sample_stats/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/plot/pca/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/plot/1_min_ibs_dist/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/plot/pairwise_fst/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/python/collect/selection_results/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/selscan/norm/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/selscan/method/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/generate_colors/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/make_cluster_file/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/extract_sampleid/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/merge_treemix_inputs/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/prepare_recomb_map_selscan/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/merge_freq_files/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/split_fam_file/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/update_chrom_ids/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/modify_pheno_col_ped/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/prepare_new_map/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/add_contig_length/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/make_sample_map/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/prepare_fst_all_input/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/gawk/create_anc_files/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink/make_bed/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink/calc_1_min_ibs_dist/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/plink/calc_maf/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/modules/local/bgziptabix/main.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/filter_vcf.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/input_check.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/run_pca.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/run_vcftools.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/run_sweepfinder2.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/run_selscan.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/run_admixture.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/run_treemix.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/prepare_anc_files.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/calc_fst.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/calc_1_min_ibs_dist.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/filter_bed.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/phase_genotypes.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Popgen48/scalepopgen/master/subworkflows/local/prepare_indiv_report.nf"
      },
      "technique": "file_exploration"
    }
  ]
}