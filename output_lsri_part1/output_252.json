{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yolandalago/CIRCUST"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-01T07:22:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-02T07:51:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yolandalago/CIRCUST/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yolandalago/CIRCUST/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yolandalago/CIRCUST"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CIRCUST"
      },
      "source": "https://raw.githubusercontent.com/yolandalago/CIRCUST/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yolandalago/CIRCUST/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CIRCUST"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yolandalago"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 237794,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yolandalago/CIRCUST/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "description",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:01:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use",
        "type": "Text_excerpt",
        "value": "CIRCUST is achieved in R and is easy to use. \nThe code provided in this GitHub replicated the four steps described in CIRCUST paper (https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1011510).\n\nRun the R script named runCIRCURST.R to ,conduct the methodology.\nThe file matrixIn.RData is loaded on the R script and serves as example of unorderd post-mortem gene expression matrix.\nmatrixIn: gene expression matrix of size 56200X479 (genes X unordered samples/individuals) at a given tissue. Note that it is a real example, so it requires a reasonable amount of computational time.\n\nINPUTS, see CIRCUST paper for details: \n  - Expression matrix (matrixIn).\n  - Number of random selections of the genes at the TOP (K).\n  - Name tissue (nameTissue).\n  - Core clock gene names (coreG).\n\n0. Preparatory work.\nWhen you use our tool, you should source R source functions and install some R packages detailed. Run in the Rscrip:\n  source(\"functionGTEX_cores.R\")\n\n1. Preprocessing.\nRun the code line under this name in runCIRCURST.R to clean and normalize the data.\n\n2. Preliminary order.\nRun the code lines under this name in runCIRCURST.R to obtain a preliminary order based on the core clok gene. Note that the second element of the list obtained as output from basicOder_cores function provides CIRCUST estimates for the circadian phase time for each sample. In the code we usually refer to these values using the term \"esc\".\n\n3. TOP Rhythmic orderings.\nRun the code lines under this name in runCIRCURST.R to derive the tissue-specific TOP gene list and K circular orders based on K random selections. \n\n4. Robust Estimation.\nRun the code lines under this name in runCIRCURST.R to compute FMM predictions as functions of K circular ordering for the TOP genes. \n\nOUTPUT:\n  - Data frame with the FMM parameter estimations for TOP genes, k=1,...,K (outs).\n"
      },
      "source": "https://raw.githubusercontent.com/yolandalago/CIRCUST/main/README.md",
      "technique": "header_analysis"
    }
  ]
}