{
  "application_domain": [
    {
      "confidence": 48.63,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Licenses and Cites",
        "type": "Text_excerpt",
        "value": "\r\nLicense: [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](LICENSE)</br>\r\nCite the code on Zenodo: [![DOI](https://zenodo.org/badge/681572669.svg)](https://zenodo.org/badge/latestdoi/681572669)</br>\r\nCite as:\r\n```\r\nScribbleDom: Using Scribble-Annotated Histology Images to Identify Domains in Spatial Transcriptomics Data\r\nRahman, Mohammad Nuwaisir, Al Noman, Abdullah, Turza, Abir Mohammad, Abrar, Mohammed Abid, Samee, Md. Abul Hassan, and Rahman, M Saifur\r\n```\r\n"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/1alnoman/ScribbleDom"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-22T09:53:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-26T14:33:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A semi supervised approach to detect spatial domain in spatial transcriptomics data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9685325008308016,
      "result": {
        "original_header": "ScribbleDom",
        "type": "Text_excerpt",
        "value": "A method to find spatial domain from Spatial Transcriptomics data using scribble annotated histology image, or using \r\noutput of other possibly non-spatial spatial domain detection method (e.g. mclust).\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/1alnoman/ScribbleDom/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/1alnoman/ScribbleDom/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1alnoman/ScribbleDom"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ScribbleDom"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/run_other_visium.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/run_bcdc_ffpe.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/run_human_dlpfc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/run_other_st.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/run_melanoma.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/681572669"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/preprocessed_data/cancers/Melanoma/melanoma_manual_annotation.png"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "First set and activate your environment by using the following command:\r\n```\r\nconda env create -f environment.yml\r\nconda activate scribble_dom\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Manual annotation for melanoma st sample",
        "parent_header": [
          "Miscellaneous"
        ],
        "type": "Text_excerpt",
        "value": "We have generated a manual annotation for melanoma cancer dataset by Thrane et al. We used [ST Spot Detector](https://github.com/SpatialTranscriptomicsResearch/st_spot_detector) to map the spots to high resulation image's pixels. You will get the the csv file mapping the spot to the type of spot [here](preprocessed_data/cancers/Melanoma/manual_annotations.csv). In this ```.csv``` file the mapping corresponds to :</br></br>\r\n'0' : 'Stroma'</br>\r\n'1' : 'Lymphoid tissue'</br>\r\n'2' : 'Melanoma'</br>\r\n'3' : 'Unannotated by publisher'</br>\r\nNone : 'Unannotated for being in borders of 2 type'</br>\r\n\r\n![A mushroom-head robot](preprocessed_data/cancers/Melanoma/melanoma_manual_annotation.png 'Melanoma Manual Annotation')\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8180379716739284,
      "result": {
        "original_header": "Scribbles for other samples",
        "type": "Text_excerpt",
        "value": "Get the scribbles for other sample in the directory structure mentioned below:\r\n```\r\n.\r\n\u2514\u2500\u2500 {preprocessed_data_folder}/\r\n    \u2514\u2500\u2500 {dataset}/\r\n        \u2514\u2500\u2500 {samples[i]}/\r\n            \u2514\u2500\u2500 manual_scribble.csv\r\n            \u2514\u2500\u2500 manual_annotation.csv\r\n\r\n```\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/1alnoman/ScribbleDom/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023, Mohammad Nuwaisir Rahman, Abdullah Al Noman, Abir Mohammad Turza, Mohammed Abid Abrar, Md. Abul Hassan Samee, and M Saifur Rahman\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Licenses and Cites",
        "type": "Text_excerpt",
        "value": "\r\nLicense: [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](LICENSE)</br>\r\nCite the code on Zenodo: [![DOI](https://zenodo.org/badge/681572669.svg)](https://zenodo.org/badge/latestdoi/681572669)</br>\r\nCite as:\r\n```\r\nScribbleDom: Using Scribble-Annotated Histology Images to Identify Domains in Spatial Transcriptomics Data\r\nRahman, Mohammad Nuwaisir, Al Noman, Abdullah, Turza, Abir Mohammad, Abrar, Mohammed Abid, Samee, Md. Abul Hassan, and Rahman, M Saifur\r\n```\r\n"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ScribbleDom"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "1alnoman"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 92580187,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 50665,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 11075,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5927,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "1alnoman",
          "type": "User"
        },
        "date_created": "2023-09-30T00:28:22Z",
        "date_published": "2023-10-02T11:25:59Z",
        "description": "1.0.0.3 bugfix.",
        "html_url": "https://github.com/1alnoman/ScribbleDom/releases/tag/1.0.0.3",
        "name": "1.0.0.3",
        "release_id": 123315613,
        "tag": "1.0.0.3",
        "tarball_url": "https://api.github.com/repos/1alnoman/ScribbleDom/tarball/1.0.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/1alnoman/ScribbleDom/releases/123315613",
        "value": "https://api.github.com/repos/1alnoman/ScribbleDom/releases/123315613",
        "zipball_url": "https://api.github.com/repos/1alnoman/ScribbleDom/zipball/1.0.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "1alnoman",
          "type": "User"
        },
        "date_created": "2023-09-06T07:40:32Z",
        "date_published": "2023-09-22T08:25:23Z",
        "description": "Auto scribble generation bug fix",
        "html_url": "https://github.com/1alnoman/ScribbleDom/releases/tag/1.0.0.2",
        "name": "1.0.0.2",
        "release_id": 122167647,
        "tag": "1.0.0.2",
        "tarball_url": "https://api.github.com/repos/1alnoman/ScribbleDom/tarball/1.0.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/1alnoman/ScribbleDom/releases/122167647",
        "value": "https://api.github.com/repos/1alnoman/ScribbleDom/releases/122167647",
        "zipball_url": "https://api.github.com/repos/1alnoman/ScribbleDom/zipball/1.0.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "1alnoman",
          "type": "User"
        },
        "date_created": "2023-09-01T18:20:30Z",
        "date_published": "2023-09-01T18:23:08Z",
        "description": "Bug fix with auto_scribble_generator",
        "html_url": "https://github.com/1alnoman/ScribbleDom/releases/tag/1.0.0.1",
        "name": "1.0.0.1",
        "release_id": 119635393,
        "tag": "1.0.0.1",
        "tarball_url": "https://api.github.com/repos/1alnoman/ScribbleDom/tarball/1.0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/1alnoman/ScribbleDom/releases/119635393",
        "value": "https://api.github.com/repos/1alnoman/ScribbleDom/releases/119635393",
        "zipball_url": "https://api.github.com/repos/1alnoman/ScribbleDom/zipball/1.0.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "1alnoman",
          "type": "User"
        },
        "date_created": "2023-08-31T07:44:55Z",
        "date_published": "2023-08-31T07:46:36Z",
        "description": "Initial release for ScribbleDom",
        "html_url": "https://github.com/1alnoman/ScribbleDom/releases/tag/1.0.0.0",
        "name": "ScribbleDom 1.0.0.0",
        "release_id": 119393227,
        "tag": "1.0.0.0",
        "tarball_url": "https://api.github.com/repos/1alnoman/ScribbleDom/tarball/1.0.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/1alnoman/ScribbleDom/releases/119393227",
        "value": "https://api.github.com/repos/1alnoman/ScribbleDom/releases/119393227",
        "zipball_url": "https://api.github.com/repos/1alnoman/ScribbleDom/zipball/1.0.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "type": "Text_excerpt",
        "value": "Recommended OS: Linux</br>\r\nRecommended Python version: 3.10.6</br>\r\nRecommended R version: 4.3.1</br>\r\nRecommended conda version: 4.12.0\r\n\r\nTo ensure reproducibility, the following is done:\r\n```\r\ntorch.backends.cudnn.deterministic = True\r\ntorch.backends.cudnn.benchmark = False\r\n```\r\nNote that, you do not need to set these if you run the program in cpu instead of gpu.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run experiments with availabe data.",
        "type": "Text_excerpt",
        "value": "To run human breast cancer data :\r\n```\r\nchmod +x run_bcdc_ffpe.sh\r\n./run_bcdc_ffpe.sh\r\n```\r\nTo run melanoma cancer data :\r\n```\r\nchmod +x run_melanoma.sh\r\n./run_melanoma.sh\r\n```\r\nTo run human dlpfc cancer data :\r\n```\r\nchmod +x run_human_dlpfc.sh\r\n./run_human_dlpfc.sh\r\n```\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "step - 1:",
        "parent_header": [
          "To run other visium/st data"
        ],
        "type": "Text_excerpt",
        "value": " Prepear a ```config_mclust.json``` and a ```config_expert.json``` file. You will get an example in ```configs/bcdc/bcdc_config_expert.json``` file and prepear raw count matrix data.\r\n\r\n```json\r\n{\r\n    \"preprocessed_data_folder\" : \"preprocessed_data\",\r\n    \"matrix_represenation_of_ST_data_folder\" : \"matrix_representation_of_st_data\",\r\n    \"model_output_folder\" : \"model_outputs\",\r\n    \"final_output_folder\" : \"final_outputs\",\r\n\r\n    \"space_ranger_output_directory\" : \"raw_gene_x\",\r\n    \"dataset\": \"cancers\",\r\n    \"samples\": [\"bcdc_ffpe\"],\r\n    \"technology\": \"visium\",\r\n    \"n_pcs\": 15,\r\n    \"n_cluster_for_auto_scribble\": 2,\r\n    \"schema\": \"mclust\",\r\n\r\n    \"max_iter\": 300,\r\n    \"nConv\": 1,\r\n    \"seed_options\": [4],\r\n    \"alpha_options\": [0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95],\r\n    \"beta_options\": [0.25,0.3,0.35,0.4],\r\n    \"lr_options\": [0.1]\r\n}\r\n```\r\n1. \"dataset\" : Yous should give a name of your dataset for example here the name is \"cancers\". This is for internal file structure in our system.\r\n2. \"samples\" : You should give a name of the sample in your dataset. Here the sample is bcdc_ffpe. This is also for internal file structure in our system.\r\n3. \"technology\" : This can be visium/st for this pipeline.\r\n4. \"n_pcs\" : The number of principal components you want for your data.\r\n5. \"n_cluster_for_auto_scribble\" : This field is used for automatic scribble generation. Give number of cluster for mclust initialization of your data.\r\n6. \"schema\": This can be either expert/mclust to indicate use of expert generated scribble or automated scribble.\r\n7. \"space_ranger_output_directory\" : This field should contains the space ranger output for mat directory for count matrix data.\r\nThis directory structure is (for visum data):\r\n```\r\n.\r\n\u2514\u2500\u2500 {space_ranger_output_directory}/\r\n    \u2514\u2500\u2500 {dataset}/\r\n        \u2514\u2500\u2500 {samples[i]}/\r\n            \u251c\u2500\u2500 spatial/\r\n            \u2502   \u251c\u2500\u2500 tissue_positions_list.csv\r\n            \u2502   \u251c\u2500\u2500 scalefactors_json.json\r\n            \u2502   \u251c\u2500\u2500 tissue_hires_image.png\r\n            \u2502   \u2514\u2500\u2500 tissue_lowres_image.png\r\n            \u2514\u2500\u2500 {samples[i]}_filtered_feature_bc_matrix.h5\r\n```\r\nor (for st data):\r\n```\r\n.\r\n\u2514\u2500\u2500 {space_ranger_output_directory}/\r\n    \u2514\u2500\u2500 {dataset}/\r\n        \u2514\u2500\u2500 {samples[i]}/\r\n            \u2514\u2500\u2500 {samples[i]}.rds\r\n```\r\nFor example, for the json file shown above, the structure of space_ranger_output_directory should be:\r\n```\r\n.\r\n\u2514\u2500\u2500 raw_gene_x/\r\n    \u2514\u2500\u2500 cancers/\r\n        \u2514\u2500\u2500 bcdc_ffpe/\r\n            \u251c\u2500\u2500 spatial/\r\n            \u2502   \u251c\u2500\u2500 tissue_positions_list.csv\r\n            \u2502   \u251c\u2500\u2500 scalefactors_json.json\r\n            \u2502   \u251c\u2500\u2500 tissue_hires_image.png\r\n            \u2502   \u2514\u2500\u2500 tissue_lowres_image.png\r\n            \u2514\u2500\u2500 bcdc_ffpe_filtered_feature_bc_matrix.h5\r\n```\r\n\r\nother fileds can be as it is, for your config file.\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "step - 2:",
        "parent_header": [
          "To run other visium/st data"
        ],
        "type": "Text_excerpt",
        "value": "\r\nPreprocess the data. Finds the top 2000 highly variable genes and calculates principal components from raw Gene expression data. Also runs ```Mclust``` algorithm to create a automated scribble.\r\n\r\nFor visium data:\r\n```\r\nRscript get_genex_data_from_10x_h5.R config_mclust.json\r\n```\r\nFor st data:\r\n```\r\nRscript get_genex_data_from_rds_ST_data.R config_mclust.json\r\n```\r\nThis step will produce preprocessed data with principal components of spots, coordinates and mclust_backbone.csv as Automated Scribble in the folder below: \r\n```\r\n.\r\n\u2514\u2500\u2500 {preprocessed_data_folder}/\r\n    \u2514\u2500\u2500 {dataset}/\r\n        \u2514\u2500\u2500 {samples[i]}/\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "step - 3:",
        "parent_header": [
          "To run other visium/st data"
        ],
        "type": "Text_excerpt",
        "value": "Create a manual scribble (``manual_scribble.csv``) using [Loupe browser](https://support.10xgenomics.com/single-cell-gene-expression/software/visualization/latest/what-is-loupe-cell-browser) and a ```.cloupe``` file from [space ranger output](https://support.10xgenomics.com/spatial-gene-expression/software/pipelines/latest/output/aggr-overview) of your sample. You will get a video [tutorial](https://youtu.be/nRy9TszaduQ) here. Place the manual scribble (manual_scribble.csv) in the folder location: \r\n```\r\n.\r\n\u2514\u2500\u2500 {preprocessed_data_folder}/\r\n    \u2514\u2500\u2500 {dataset}/\r\n        \u2514\u2500\u2500 {samples[i]}/\r\n            \u2514\u2500\u2500 manual_scribble.csv\r\n\r\n```\r\nIf you don't generate ```manual_scribble.csv``` in this step, you will get the result from AutoScribbleDom only.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "step - 4:",
        "parent_header": [
          "To run other visium/st data"
        ],
        "type": "Text_excerpt",
        "value": "To run our pipeline run the commands below:-\r\nFor visium data:\r\n```\r\nchmod +x run_other_visium.sh\r\n./run_other_visium.sh config_expert.json config_mclust.json\r\n```\r\nFor st data:\r\n```\r\nchmod +x run_other_st.sh\r\n./run_other_st.sh config_expert.json config_mclust.json\r\n```\r\n\r\nhere config_expert.json and config_mclust.json are same as config.json file described above, with only difference of the scheme field, i.e.\r\n```json\r\n.\r\n.\r\n\"schema\": \"expert\",\r\n.\r\n.\r\n```\r\nin config_expert.json file. And\r\n\r\n\r\n```json\r\n.\r\n.\r\n\"schema\": \"mclust\",\r\n.\r\n.\r\n```\r\nin config_mclust.json file.\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "step - 5:",
        "parent_header": [
          "To run other visium/st data"
        ],
        "type": "Text_excerpt",
        "value": "Get the final output in final_outputs folder in\r\n```\r\n.\r\n\u2514\u2500\u2500 final_outputs/\r\n    \u2514\u2500\u2500 dataset/\r\n        \u2514\u2500\u2500 samples[i]/\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/1alnoman/ScribbleDom/1.0.0.3/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:51:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}