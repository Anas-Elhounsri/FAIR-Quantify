{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/emmamglass/reconstructor"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\nContributions are welcome, and they are greatly appreciated! Every little bit\nhelps, and credit will always be given.\n\n## Types of Contributions\n\n### Report Bugs\n\nIf you are reporting a bug, please include:\n\n* Your operating system name and version.\n* Any details about your local setup that might be helpful in troubleshooting.\n* Detailed steps to reproduce the bug.\n\n### Fix Bugs\n\nLook through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help\nwanted\" is open to whoever wants to implement it.\n\n### Implement Features\n\nLook through the GitHub issues for features. Anything tagged with \"enhancement\"\nand \"help wanted\" is open to whoever wants to implement it.\n\n### Write Documentation\n\nYou can never have enough documentation! Please feel free to contribute to any\npart of the documentation, such as the official docs, docstrings, or even\non the web in blog posts, articles, and such.\n\n### Submit Feedback\n\nIf you are proposing a feature:\n\n* Explain in detail how it would work.\n* Keep the scope as narrow as possible, to make it easier to implement.\n* Remember that this is a volunteer-driven project, and that contributions\n  are welcome :)\n\n## Get Started!\n\nReady to contribute? Here's how to set up `{{ cookiecutter.package_name|lower|replace(' ', '_')|replace('-', '_') }}` for local development.\n\n1. Download a copy of `{{ cookiecutter.package_name|lower|replace(' ', '_')|replace('-', '_') }}` locally.\n2. Install `{{ cookiecutter.package_name|lower|replace(' ', '_')|replace('-', '_') }}` using `poetry`:\n\n    ```console\n    $ poetry install\n    ```\n\n3. Use `git` (or similar) to create a branch for local development and make your changes:\n\n    ```console\n    $ git checkout -b name-of-your-bugfix-or-feature\n    ```\n\n4. When you're done making changes, check that your changes conform to any code formatting requirements and pass any tests.\n\n5. Commit your changes and open a pull request.\n\n## Pull Request Guidelines\n\nBefore you submit a pull request, check that it meets these guidelines:\n\n1. The pull request should include additional tests if appropriate.\n2. If the pull request adds functionality, the docs should be updated.\n3. The pull request should work for all currently supported operating systems and versions of Python.\n\n## Code of Conduct\n\nPlease note that the `{{ cookiecutter.package_name|lower|replace(' ', '_')|replace('-', '_') }}` project is released with a\nCode of Conduct. By contributing to this project you agree to abide by its terms.\n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/reconstructor/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-08-25T18:56:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-10T19:12:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This repository contains all source code in the reconstructor python package, installation instructions, important file dependencies, and benchmarking scores for reconstructor models. Reconstructor is a COBRApy compatible, automated GENRE building tool from gene fastas based on KEGG annotations."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.982292117571057,
      "result": {
        "original_header": "Reconstructor - Current Version: 1.1.0",
        "type": "Text_excerpt",
        "value": "This repository contains all source code in the Reconstructor Python package, important file dependencies, and benchmarking scores for Reconstructor models. Reconstructor is a COBRApy compatible, automated GENRE building tool from annotated aminoa acid .fasta files based on KEGG annotations. \n****Reconstructor is currently only compatible on MacOSX and Windows machines**** \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9246638014670383,
      "result": {
        "original_header": "/MEMOTE",
        "type": "Text_excerpt",
        "value": "Contains raw .html files for benchmarking scores for 10 representative Reconstructor models \nSee below in the __Supplementary Model Checks and Analyses__ at the bottom of the README for links to stable .html renderings of the MEMOTE scores and comparisons to other automatic model generation tools\n \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8059847751485724,
      "result": {
        "original_header": "/reconstructor",
        "type": "Text_excerpt",
        "value": "contains all package source code\n \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8649365282605761,
      "result": {
        "original_header": "MEMOTE Comparison of Reconstructor, ModelSEED, and CarveME GENREs",
        "type": "Text_excerpt",
        "value": "To view rendered .html MEMOTE benchmarking scores for Reconstructor models and the corresponding ModelSEED/CarveME models, use the links below:  \n__*Porphyromonas gingivalis:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/837.134.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/837.83MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/837.83C.html)  \n__*Bacillus amyloliquefaciens:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/1390.556.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/1390.556MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/1390.556C.html)  \n__*Citrobacter braakii:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/57706.84.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/57706.84MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/57706.84C.html)  \n__*Acinetobacter bereziniae:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/106648.24.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/106648.24MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/106648.24C.html)  \n__*Tropheryma whipplei:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/218496.4.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/218496.4MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/218496.4C.html)  \n__*Proteus mirabilis:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/529507.6.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/529507.6MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/529507.6C.html)  \n__*Clostridiodes difficile:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/699034.5.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/699034.5MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/699034.5C.html)  \n__*Campylobacter jejuni:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/1349827.3.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/1349827.3MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/1349827.3C.html)  \n__*Helicobacter pylori:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/1382925.3.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/1382925.3MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/1382925.3C.html)  \n__*Escherichia coli:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/2848143.3.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/2848143.3MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/2848143.3C.html)\n \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.980271990261149,
      "result": {
        "original_header": "/C_difficile_Media",
        "type": "Text_excerpt",
        "value": "This folder contains .sbml reconstrucitons for *C. difficile* on five different media conditions described below. These include a complete media (default reconstructor media if no media is defined), rich media (built into reconstructor), minimal media (built into reconstructor), *C. difficile* specific defined minimal media (user inputted), and a *C. difficile* specific defined enriched media (user inputted).  \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9880759885175038,
      "result": {
        "original_header": "User-Specified Universal Database Modification",
        "type": "Text_excerpt",
        "value": "The universal reaction database used in reconstructor is a modified version of the ModelSEED biochemistry database avaliable [here](https://github.com/ModelSEED/ModelSEEDDatabase). We generated the universal database using the __UniversalCreation.py__ script. We corrected poorly defined metabolite formulas and removed mass imbalanced reactions using the __curateuniversal.py__ script that is avaliable in this repository.   \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8773524924872775,
      "result": {
        "original_header": "Modifying existing metabolites",
        "type": "Text_excerpt",
        "value": "If you want to change the formula, of a specific metabolite formula you can do so like below\n```\nuniversal.metabolites.cpd17677_e.formula = 'C17H24O2'\n```\n```\nuniversal.metabolites.cpd17677_e.name = 'new_name'\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9607078191144872,
      "result": {
        "original_header": "Removing reactions and metabolites",
        "type": "Text_excerpt",
        "value": "Examples of removing metabolites and reactions from the universal database are shown below.  \nFor a reaction named rxn:\n```\nuniversal.remove_reactions(rxn)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.918059414329707,
      "result": {
        "original_header": "Additional Information",
        "type": "Text_excerpt",
        "value": "Thank you for your interest in Reconstructor. If you have any additional questions please email tfz5vy@virginia.edu. \nDistributed under the terms of the [MIT license](https://github.com/emmamglass/reconstructor/blob/main/reconstructor/LICENSE), \"reconstructor\" is free and open source software\n \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading DIAMOND on MacOS",
        "parent_header": [
          "Detailed Installation Guide:",
          "Download DIAMOND Aligner"
        ],
        "type": "Text_excerpt",
        "value": "You must first have the DIAMOND sequence aligner downloaded (__MUST BE >= VERSION 2.0.15__), installation instructions can be found here: [https://github.com/bbuchfink/diamond](https://github.com/bbuchfink/diamond)  \nIf you think you already have DIAMOND installed, you can check your version using the terminal command:\n```\ndiamond --version\n```\nYou can also download DIAMOND through homebrew (if you have homebrew installed) using the terminal command:\n```\nbrew install diamond\n```"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "DIAMOND on Windows",
        "parent_header": [
          "Detailed Installation Guide:",
          "Download DIAMOND Aligner"
        ],
        "type": "Text_excerpt",
        "value": "You do not need to install DIAMOND on your windows machine. A Windows executable function is already pre-packaged within the Reconstructor software.\n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/emmamglass/reconstructor/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/emmamglass/reconstructor/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "emmamglass/reconstructor"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Reconstructor - Current Version: 1.1.0"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "MacOSX",
        "parent_header": [
          "Quick Installation Guide (Must have Anancoda installed with Python 3.9):"
        ],
        "type": "Text_excerpt",
        "value": "In terminal....  \nInstall homebrew if you do not already have it installed by copying/pasting the following line into terminal (further instructions [here](https://brew.sh)):\n```\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\nDownload DIAMOND sequence aligner (Version >= 2.0.15) using homebrew:\n```\nbrew install diamond\n```\nInstall Reconstructor package using pip:\n```\npip install reconstructor\n```\nUse following command to download additional dependencies/run final installation checks (should take ~1hr to complete depending on your system):\n```\npython -m reconstructor --test yes\n```"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows",
        "parent_header": [
          "Quick Installation Guide (Must have Anancoda installed with Python 3.9):"
        ],
        "type": "Text_excerpt",
        "value": "Install Reconstructor package using CMD.exe prompt launched from Anaconda navigator:\n```\npip install reconstructor\n```\nUse following command to download additional dependencies/run final installation checks (hould take ~1hr to run depending on your system):\n```\npython -m reconstructor --test yes\n```"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "DIAMOND on Windows",
        "parent_header": [
          "Detailed Installation Guide:",
          "Download DIAMOND Aligner"
        ],
        "type": "Text_excerpt",
        "value": "You do not need to install DIAMOND on your windows machine. A Windows executable function is already pre-packaged within the Reconstructor software.\n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Reconstructor python package",
        "parent_header": [
          "Detailed Installation Guide:"
        ],
        "type": "Text_excerpt",
        "value": "This can be done via pip in terminal on Mac, or a CMD.exe Prompt launched from Anaconda Navigator in Widnows:\n\n```\npip install reconstructor\n```\n\n*You must be running >= Python 3.8*  \nTo determine your Python version you can use the following command:  \n```\npython --version\n```\n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9897787797330991,
      "result": {
        "original_header": "Reconstructor - Current Version: 1.1.0",
        "type": "Text_excerpt",
        "value": "This repository contains all source code in the Reconstructor Python package, important file dependencies, and benchmarking scores for Reconstructor models. Reconstructor is a COBRApy compatible, automated GENRE building tool from annotated aminoa acid .fasta files based on KEGG annotations. \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999997887699,
      "result": {
        "original_header": "MEMOTE Comparison of Reconstructor, ModelSEED, and CarveME GENREs",
        "type": "Text_excerpt",
        "value": "To view rendered .html MEMOTE benchmarking scores for Reconstructor models and the corresponding ModelSEED/CarveME models, use the links below:  \n__*Porphyromonas gingivalis:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/837.134.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/837.83MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/837.83C.html)  \n__*Bacillus amyloliquefaciens:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/1390.556.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/1390.556MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/1390.556C.html)  \n__*Citrobacter braakii:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/57706.84.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/57706.84MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/57706.84C.html)  \n__*Acinetobacter bereziniae:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/106648.24.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/106648.24MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/106648.24C.html)  \n__*Tropheryma whipplei:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/218496.4.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/218496.4MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/218496.4C.html)  \n__*Proteus mirabilis:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/529507.6.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/529507.6MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/529507.6C.html)  \n__*Clostridiodes difficile:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/699034.5.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/699034.5MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/699034.5C.html)  \n__*Campylobacter jejuni:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/1349827.3.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/1349827.3MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/1349827.3C.html)  \n__*Helicobacter pylori:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/1382925.3.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/1382925.3MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/1382925.3C.html)  \n__*Escherichia coli:*__ [Resonstructor](https://emmamglass.github.io/ReconstructorMEMOTE.io/2848143.3.redo.html) || [ModelSEED](https://emmamglass.github.io/ReconstructorMEMOTE.io/2848143.3MS.html) || [CarveME](https://emmamglass.github.io/ReconstructorMEMOTE.io/2848143.3C.html)\n \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999721632665,
      "result": {
        "original_header": "User-Specified Universal Database Modification",
        "type": "Text_excerpt",
        "value": "If you wish to modify the provided universal reaction database you must first locate the universal.pickle file that was downloaded during the reconstructor installation phase on your local computer. You can modify this file by running a python script. You must write this script yourself or use __curateuniversal.py__ as a template. You can then run this script in your command line. \n \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9939331187365904,
      "result": {
        "original_header": "Modifying existing metabolites",
        "type": "Text_excerpt",
        "value": "If you want to change the formula, of a specific metabolite formula you can do so like below\n```\nuniversal.metabolites.cpd17677_e.formula = 'C17H24O2'\n```\n```\nuniversal.metabolites.cpd17677_e.name = 'new_name'\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/emmamglass/reconstructor/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022, Matt Jenior, Emma Glass\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/reconstructor/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "reconstructor"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "emmamglass"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 42746892,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 55100,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://cobrapy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "emmamglass",
          "type": "User"
        },
        "date_created": "2022-08-25T19:34:14Z",
        "date_published": "2022-08-25T19:38:12Z",
        "description": "All file dependencies necessary for reconstructor python package",
        "html_url": "https://github.com/emmamglass/reconstructor/releases/tag/v0.0.1",
        "name": "v0.0.1",
        "release_id": 75386052,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/emmamglass/reconstructor/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/emmamglass/reconstructor/releases/75386052",
        "value": "https://api.github.com/repos/emmamglass/reconstructor/releases/75386052",
        "zipball_url": "https://api.github.com/repos/emmamglass/reconstructor/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies and loading universal.pickle",
        "parent_header": [
          "User-Specified Universal Database Modification"
        ],
        "type": "Text_excerpt",
        "value": "Begin your script with the following dependencies:\n```\nimport os\nimport cobra\nimport pickle\nimport argparse\nimport warnings\nimport symengine\nfrom random import shuffle\nfrom multiprocessing import cpu_count\nfrom sys import stdout\nfrom copy import deepcopy\nfrom subprocess import call\nfrom cobra.util import solver\nfrom cobra.manipulation.delete import *\n```\nThen, load your universal.pickle file using:  \n```\nfilename = '/universal.pickle'\nwith open(filename, 'rb') as f: universal = pickle.load(f)\n```\nNow you can freely add, change, or remove reactions and metabolites from the universal reaction database. You can add, remove, or modify reactions and metabolites from the universal database in the same way you would add, remove, or modify reactions and metabolites in a GENRE. Some examples of how to do this are below, but you can see further examples in the [cobrapy documentation](https://cobrapy.readthedocs.io/en/latest/building_model.html).  \n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use the following command to run the test suite",
        "parent_header": [
          "Detailed Installation Guide:",
          "Test suite (MUST RUN BEFORE USING RECONSTRUCTOR):"
        ],
        "type": "Text_excerpt",
        "value": "Run the following test to ensure reconstruction was installed correctly and is functional, and downloads database files that are necessary for reconstructor to work. This series of tests should take about an hour to run, dependent on computer/processor speed. These are runtimes for Reconstructor on a 2020 MacBook Pro with a 1.4 GHz Quad-Core Intel Core i5 processor.\n\nMAC USERS MAY BE ASKED FOR TERMINAL TO HAVE ACCESS TO DOWNLOADS, CAMERA, LOCATION, ETC. Please allow terminal to have access to all locations on your computer. Reconstructor will NOT gather data from your camera, location, or other sensitive information. Reconstructor is simply searching for the file titled glpk_interface.py on your local machine (installed when COBRA module is installed) and replacing it with a newer, functional version.\n\nUse the command below to test reconstructor to ensure correct installation:   \n\n```\npython -m reconstructor --test yes\n```\n*YOU MUST RUN THE TEST SUITE BEFORE PROCEEDING TO USE RECONSTRUCTOR\n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:56:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use the following command to run the test suite",
        "parent_header": [
          "Detailed Installation Guide:",
          "Test suite (MUST RUN BEFORE USING RECONSTRUCTOR):"
        ],
        "type": "Text_excerpt",
        "value": "Run the following test to ensure reconstruction was installed correctly and is functional, and downloads database files that are necessary for reconstructor to work. This series of tests should take about an hour to run, dependent on computer/processor speed. These are runtimes for Reconstructor on a 2020 MacBook Pro with a 1.4 GHz Quad-Core Intel Core i5 processor.\n\nMAC USERS MAY BE ASKED FOR TERMINAL TO HAVE ACCESS TO DOWNLOADS, CAMERA, LOCATION, ETC. Please allow terminal to have access to all locations on your computer. Reconstructor will NOT gather data from your camera, location, or other sensitive information. Reconstructor is simply searching for the file titled glpk_interface.py on your local machine (installed when COBRA module is installed) and replacing it with a newer, functional version.\n\nUse the command below to test reconstructor to ensure correct installation:   \n\n```\npython -m reconstructor --test yes\n```\n*YOU MUST RUN THE TEST SUITE BEFORE PROCEEDING TO USE RECONSTRUCTOR\n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use reconstructor via COMMAND LINE",
        "parent_header": [
          "Usage:"
        ],
        "type": "Text_excerpt",
        "value": "Now that Reconstructor and all dependency databases are installed, you can proceed to use Reconstructor via command line. An example would be:\n```\npython -m reconstructor --input_file <input fasta file> --file_type <1,2,3> --gram <negative, positive> --media rich\n```"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Type 1: Build GENRE from annotated amino acid .fasta files",
        "parent_header": [
          "Usage:",
          "Use reconstructor via COMMAND LINE"
        ],
        "type": "Text_excerpt",
        "value": "```\npython -m reconstructor --input_file Osplanchnicus.aa.fasta --file_type 1 --gram negative --media rich\n```\n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Type 2: Build GENRE from BLASTp hits",
        "parent_header": [
          "Usage:",
          "Use reconstructor via COMMAND LINE"
        ],
        "type": "Text_excerpt",
        "value": "```\npython -m reconstructor --input_file Osplanchnicus.hits.out --file_type 2 --gram negative --media rich\n```\n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Type 3: Additional gap-filling (if necessary)",
        "parent_header": [
          "Usage:",
          "Use reconstructor via COMMAND LINE"
        ],
        "type": "Text_excerpt",
        "value": "```\npython -m reconstructor --input Osplanchnicus.sbml --type 3 --media rich\n```"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use Reconstructor directly in PYTHON",
        "parent_header": [
          "Usage:"
        ],
        "type": "Text_excerpt",
        "value": "You can use Reconstructor directly in Python for using directly with COBRApy analysis tools.\nTo import the reconstruction function use the following line: \n``` \nfrom reconstructor import reconstruct\n```\nThe reconstruct function is defined as follows, with the required argument being input_file. All other arguments have default options following the equals sign. Argument descriptions are provided below\n```\nreconstruct(input_file, file_type = 1, media=[], org = 'default', min_frac = 0.01, max_frac = 0.5, gram='none', out = 'default', name = 'default', cpu = 1, gapfill = 'yes')\n```\nHere is an example of how to generate a GENRE from an annotated amino acid fasta file (.fa, type 1 input) directly in your python script.\n```\nmodel = reconstruct('218496.4.fa', file_type = 1, gram = 'negative')\n```"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required and optional arguments",
        "parent_header": [
          "Usage:",
          "Use Reconstructor directly in PYTHON"
        ],
        "type": "Text_excerpt",
        "value": "```\n--input_file <REQUIRED input file, Required, str>\n```\n```\n--file_type <REQUIRED input file type, .fasta = 1, diamond blastp output = 2, .sbml = 3, Required, Default = 1, int> \n```\n```\n--gram <REQUIRED Type of Gram classificiation (positive or negative), default = positive, str>\n```\n```\n--media <REQUIRED 'rich' is the default and can be used to generate model based on a rich media. List of strings of metabolites in modelseed namespace composing the media condition, comma separated. Must end with _e. For example: 'cpd00001_e'.>\n```\n```\n--org <KEGG organism code. Not required, str>\n```\n```\n--min_frac <Minimum objective fraction required during gapfilling, default = 0.01, float>\n```\n```\n--max_frac <Maximum objective fraction allowed during gapfilling, default = 0.5 ,float>\n```\n```\n--out <Name of output GENRE file, default = default, str>\n```\n```\n--name <ID of output GENRE, default = default, str>\n```\n```\n--cpu <Number of processors to use, default = 1, int>\n```\n\n```\n--test <run installation tests, default = no, str>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/emmamglass/reconstructor/main/README.md",
      "technique": "header_analysis"
    }
  ]
}