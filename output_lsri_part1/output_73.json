{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data"
        ],
        "type": "Text_excerpt",
        "value": "Tate, A. J., Brown, K. C., & Montgomery, T. A. (2023). tiny-count: A counting tool for hierarchical classification and quantification of small RNA-seq reads with single-nucleotide precision. _Bioinformatics Advances_. https://doi.org/10.1093/bioadv/vbad065\n\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MontgomeryLab/tinyRNA"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. \n4. You may merge the Pull Request in once you have the sign-off of other developers with write access, or if you \n   do not have permission to do that, you may request the a reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data"
        ],
        "type": "Text_excerpt",
        "value": "See the [CONTRIBUTING.md](CONTRIBUTING.md) for guidelines. To see what is actively being worked or planned go to the [projects tab](https://github.com/MontgomeryLab/tinyrna/projects) or the [issues tab](https://github.com/MontgomeryLab/tinyrna/issues).\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-28T14:44:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-08T01:25:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tinyRNA provides an all-in-one solution for precision analysis of sRNA-seq data. At the core of tinyRNA is a highly flexible counting utility, tiny-count, that allows for hierarchical assignment of reads to features based on positional information, extent of feature overlap, 5\u2019 nucleotide, length, and strandedness."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary Statistics",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
          "Outputs",
          "Counts and Pipeline Statistics"
        ],
        "type": "Text_excerpt",
        "value": "A single table of summary statistics includes columns for each library and the following stats:\n\n| Stat                          | Description                                                                                                                                |\n|-------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------|\n| Total Reads                   | Total reads represented in FASTQ input files                                                                                               |\n| Retained Reads                | Total reads passing quality filtering                                                                                                      |\n| Unique Sequences              | Total unique sequences passing quality filtering                                                                                           |\n| <nobr>Mapped Sequences</nobr> | Total genome-mapping sequences passing quality filtering                                                                                   |\n| Mapped Reads                  | Total genome-mapping reads passing quality filtering prior to counting/selection                                                           |                                                          |\n| Assigned Reads                | Total genome-mapping reads passing quality filtering that were assigned to at least one feature due to a rule match in your Features Sheet |\n\nWhen normalization by feature and/or genomic hits is disabled, the following stats are reported instead of `Mapped Reads`:\n\n| Stat                        | Description                                                                      |\n|-----------------------------|----------------------------------------------------------------------------------|\n| Normalized Mapped Reads     | The true mapped read count                                                       |\n| Non-normalized Mapped Reads | The sum of assigned and unassigned reads according to the normalization settings |\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9017197049164047,
      "result": {
        "original_header": "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
        "type": "Text_excerpt",
        "value": "*Feedback, suggestions, and bug reports are welcome under the [issues tab](https://github.com/MontgomeryLab/tinyrna/issues). Thank you!* \n\ntinyRNA is a set of tools to simplify the analysis of next-generation sequencing data. The goal of this specific repository is to provide an entire workflow for processing small RNA sequencing data with user-defined hierarchical feature selection rules.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9113681529068297,
      "result": {
        "original_header": "`tiny-config`",
        "type": "Text_excerpt",
        "value": "At the beginning of pipeline execution, tinyRNA digests your configuration files and produces a processed Run Config which determine's how the CWL runner, `cwltool`, directs the workflow. If you would like to produce a processed Run Config without running the rest of the pipeline, you can do so with the command `tiny-config --input-file your_run_config.yml`. This is useful if you wish to use an alternative CWL runner. In most circumstances you will not need to use this command.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9951492765765897,
      "result": {
        "original_header": "`fastp`",
        "type": "Text_excerpt",
        "value": "[fastp](https://github.com/OpenGene/fastp) is used to trim adapters and remove poor quality reads from FASTQ input files. Summary and quality statistics reports are generated for each library.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9925547055796844,
      "result": {
        "original_header": "`tiny-collapse`",
        "type": "Text_excerpt",
        "value": "After quality filtering, unique sequences are counted in each library and a FASTA file is produced which contains only these unique sequences and their counts. This \"collapsing\" process significantly reduces the resource demands of genomic alignment and feature counting. tiny-collapse can also trim the degenerate bases often included in the adapter sequences used in library preparation.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9773576664453859,
      "result": {
        "original_header": "`bowtie`",
        "type": "Text_excerpt",
        "value": "Genomic alignment of collapsed reads is performed by [bowtie](http://bowtie-bio.sourceforge.net/manual.shtml).\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9978596152090158,
      "result": {
        "original_header": "`tiny-count`",
        "type": "Text_excerpt",
        "value": "At the core of tinyRNA is tiny-count, a highly flexible counting utility that allows for hierarchical assignment of small RNA reads to features based on positional information, extent of feature overlap, 5\u2019 nucleotide, length, and strandedness. The parameters of selection are defined in the Features Sheet.  \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.95504048319249,
      "result": {
        "original_header": "`tiny-deseq.r`",
        "type": "Text_excerpt",
        "value": "A wrapper R script for DESeq2 facilitates DGE analysis of counted sample files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9154369225161054,
      "result": {
        "original_header": "`tiny-plot`",
        "type": "Text_excerpt",
        "value": "The results of feature counting and DGE analysis are visualized with high resolution plot PDFs. User-defined plot styles are also supported via a Matplotlib style sheet.  \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9912130819461484,
      "result": {
        "original_header": "Data Pre-Processing",
        "type": "Text_excerpt",
        "value": "[fastp](https://github.com/OpenGene/fastp) is used to trim adapters and remove poor quality reads from FASTQ input files. Summary and quality statistics reports are generated for each library. These reports are used to calculate the pipeline summary statistics for total reads and retained reads.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9914774329084012,
      "result": {
        "original_header": "Collapsed FASTA files",
        "type": "Text_excerpt",
        "value": "A \"collapsed\" FASTA contains unique reads found in fastp's quality filtered FASTQ files. Each header indicates the number of times that sequence occurred in the input. This allows for faster bowtie alignments while preserving counts for downstream analysis.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8825411425978504,
      "result": {
        "original_header": "Counts and Pipeline Statistics",
        "type": "Text_excerpt",
        "value": "The tiny-count step produces a variety of outputs\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9851310049195998,
      "result": {
        "original_header": "Feature Counts",
        "type": "Text_excerpt",
        "value": "Custom Python scripts and HTSeq are used to generate a single table of feature counts which includes each counted library. Each matched feature is represented with the following metadata columns:\n- **_Feature ID_** is determined, in order of preference, by one of the following GFF column 9 attributes: `ID`, `gene_id`, `Parent`. \n- **_Classifier_** is determined by the rules in your Features Sheet. It is the _Classify as..._ value of each matching rule. Since multiple rules can match a feature, some Feature IDs will be listed multiple times with different classifiers.\n- **_Feature Name_** displays aliases of your choice, as specified in the `alias` key under each GFF listed in your Paths File. If `alias` is set to `ID`, the _Feature Name_ column is left empty. \nFor example, if your Paths File has a GFF entry which specifies `alias: [sequence_name]`, and the corresponding GFF file has a feature with the following attributes column:\n```\n... ID=406904;sequence_name=mir-1,hsa-miR-1; ...\n```\nAnd this feature matched a rule in your Features Sheet defining _Classify as..._ `miRNA`, then the entry for this feature in the final counts table would read: \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9764914304252628,
      "result": {
        "original_header": "Normalized Counts",
        "type": "Text_excerpt",
        "value": "If your Samples Sheet has settings for Normalization, an additional copy of the Feature Counts table is produced with the specified per-library normalizations applied. Note that these normalizations are [unrelated to normalization by genomic/feature hits](doc/Configuration.md#applying-custom-normalization).\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9956243048970879,
      "result": {
        "original_header": "Counts by Rule",
        "type": "Text_excerpt",
        "value": "This table shows the counts assigned by each rule on a per-library basis. It is indexed by the rule's corresponding row number in the Features Sheet, where the first non-header row is considered row 0. For convenience a Rule String column is added which contains a human friendly concatenation of each rule. Finally, a Mapped Reads row is added which represents each library's total read counts which were available for assignment prior to counting/selection.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9760299234230927,
      "result": {
        "original_header": "Alignment Statistics",
        "type": "Text_excerpt",
        "value": "A single table of alignment statistics includes columns for each library and the following stats: \n| Stat                                                 | Description                                                                                                         |\n|------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------|\n| Total Assigned Reads                                 | Counts from sequences that aligned to at least one feature in your Features Sheet                                   |\n| Total Unassigned Reads                               | Total counts for sequences that didn't align to any features in your Features Sheet                                 |\n| Total Assigned Sequences                             | Unique sequences that aligned to at least one feature in your Features Sheet                                        |\n| Total Unassigned Sequences                           | Total unique sequences that didn't align to any features in your Features Sheet                                     |\n| Assigned Single-Mapping Reads                        | Counts from sequences mapping to a single genomic locus and aligning to at least one feature in your Features Sheet |\n| Assigned Multi-Mapping Reads                         | Counts from sequences mapping to multiple genomic loci that aligned to at leats one feature in your Features Sheet  |\n| Reads Assigned to Single Feature                     | Counts from sequences that aligned to a single feature in your Features Sheet                                       |\n| Sequences Assigned to Single Feature                 | Unique sequences that aligned to a single feature in your Features Sheet                                            |\n| Reads Assigned to Multiple Features                  | Counts from sequences that aligned to multiple features in your Features Sheet                                      |\n| <nobr>Sequences Assigned to Multiple Features</nobr> | Unique sequences that aligned to multiple features in your Features Sheet                                           |\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.992516648680616,
      "result": {
        "original_header": "5'nt vs. Length Matrix",
        "type": "Text_excerpt",
        "value": "During counting, size and 5' nt distribution tables are created for each library. The distribution of lengths and 5' nt can be used to assess the overall quality of your libraries. This can also be used for analyzing small RNA distributions in non-model organisms without annotations. \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9123067990406291,
      "result": {
        "original_header": "Diagnostics",
        "type": "Text_excerpt",
        "value": "| Column           | Description                                                                                                                                                                                                                                                                           |\n|------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Sequence         | The read sequence, reverse complemented if antisense                                                                                                                                                                                                                                  |\n| Raw Count        | The sequence's original read count                                                                                                                                                                                                                                                    |\n| Normalized Count | The reads available for assignment to features (the sequence's original read count optionally normalized by genomic hits)                                                                                                                                                             |\n| Genomic Hits     | The number of alignments produced for the sequence                                                                                                                                                                                                                                    |\n| Chrom            | The alignment's RNAME field                                                                                                                                                                                                                                                           |\n| Strand           | The alignment's strand                                                                                                                                                                                                                                                                |\n| Start            | The alignment's 1-based start coordinate                                                                                                                                                                                                                                              |\n| End              | The alignment's 1-based end coordinate (closed interval)                                                                                                                                                                                                                              |\n| Mismatches       | The alignment's reported mismatches between the query sequence and the reference                                                                                                                                                                                                      |\n| Candidates       | The number of features overlapping the alignment by at last one nucleotide                                                                                                                                                                                                            |\n| Feature Hits     | The feature ID and assigning rule's classifier for all features assigned to the alignment, formatted as `(feature_id, classifier); (...)`. If the match was made by an unclassified rule then classifier is left empty. If no features were assigned the cell is left blank.          |\n| Feature Aliases  | The user-defined aliases for all features assigned to the alignment, formatted as `(alias1, alias2, ...); (...)` where the index of each alias grouping matches the index of the corresponding feature in the Feature Hits column. If a feature has no aliases then `()` is reported. | \n| Stat                              | Description                                                                                                                                   |\n|-----------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|\n| <nobr>Uncounted alignments</nobr> | The number of alignments that did not receive any feature assignments. This stat has two entries, one for each strand.                        |\n| No feature counts                 | The total unassigned counts due to alignments that failed to overlap any features                                                             |\n| Eliminated counts                 | The total unassigned counts due to alignments whose candidate features were _ALL_ eliminated because they failed to match any selection rules |\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9737817139457029,
      "result": {
        "original_header": "Differential Expression Analysis",
        "type": "Text_excerpt",
        "value": "DGE is performed using the `DESeq2` R package. Our wrapper script reports differential expression tables for your experiment design, and a table of normalized feature counts. If your control condition is indicated in your Samples Sheet then pairwise comparisons will be  made against the control. If a control condition is not indicated then all possible bidirectional pairwise comparisons are made. \n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9688634673191101,
      "result": {
        "original_header": "Plots",
        "type": "Text_excerpt",
        "value": "Simple static plots are generated from the outputs of tiny-count and tiny-deseq.r. These plots are useful for assessing the quality of your experiment design and the quality of your libraries. The available plots are:\n- **len_dist**: A stacked barchart showing size & 5' nucleotide distribution; one output for mapped reads and one for assigned reads.\n- **rule_charts**: A barchart showing percentages of counts per rule.\n- **class_charts**: A barchart showing percentages of counts per class.\n- **replicate_scatter**: A scatter plot comparing replicates for all count files given.\n- **sample_avg_scatter_by_dge**: A scatter plot comparing all sample groups, with differentially expressed small RNAs highlighted based on P value cutoff.\n- **sample_avg_scatter_by_dge_class**: A scatter plot comparing all sample groups, with classes highlighted for differentially expressed small RNAs based on P value cutoff. \n\ntiny-deseq.r will produce a standard **PCA plot** from variance stabilizing transformed feature counts. This output is controlled by the `dge_pca_plot` key in the Run Config and by your experiment design. DGE outputs, including the PCA plot, will not be produced for experiments with less than 1 degree of freedom.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9750689672084182,
      "result": {
        "original_header": "Authors",
        "type": "Text_excerpt",
        "value": "See also the list of [contributors](https://github.com/MontgomeryLab/tinyrna/contributors) who participated in this project.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MontgomeryLab/tinyRNA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MontgomeryLab/tinyRNA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MontgomeryLab/tinyRNA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tinyRNA: precision analysis of small RNA high-throughput sequencing data"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/setup.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/images/tinyrna_workflow_current.png"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/images/config-files.png"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/images/tiny-count_selection.png"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/images/plots/len_dist.jpg"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/images/plots/pca_plot.jpg"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/images/plots/rule_chart.jpg"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/images/plots/class_chart.jpg"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/images/plots/scatter_dge_class.jpg"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/images/plots/scatter_dge.jpg"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Stable Releases",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
          "tinyRNA Installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Download the latest release from the [releases link](https://github.com/MontgomeryLab/tinyRNA/releases) on the sidebar\n2. Decompress the archive and navigate to the resulting directory in your terminal\n3. Run `./setup.sh` to install the project and its dependencies in a conda environment named \"tinyrna\"\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation Tips",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
          "tinyRNA Installation",
          "Stable Releases"
        ],
        "type": "Text_excerpt",
        "value": "- If the installation script runs the Miniconda installer:\n  - Press \"q\" if you find yourself trapped on the license page\n  - We recommend answering \"yes\" to running `conda init`\n- A custom environment name can be passed as the first argument to `setup.sh`\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Development Releases",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
          "tinyRNA Installation"
        ],
        "type": "Text_excerpt",
        "value": "This option provides the latest features but stable releases are more rigorously tested.\n```shell\n# Clone the repository into a local directory\n git clone https://github.com/MontgomeryLab/tinyrna.git\n cd tinyrna\n\n# Install the tinyrna environment and dependencies\n ./setup.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Updating an Existing Installation",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
          "tinyRNA Installation"
        ],
        "type": "Text_excerpt",
        "value": "When it's time to update your installation of tinyRNA, simply repeat the procedure you used for installation. Note that the existing Conda environment, including any additional packages you may have installed within it, will be removed by the installation script.\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "tiny-count Standalone Installation",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data"
        ],
        "type": "Text_excerpt",
        "value": "Alternatively, you can install tinyRNA's precision counting tool by itself. Unlike the full tinyRNA suite, this option can be installed in existing conda environments and requires fewer dependencies.\n\n```shell\nconda install -c bioconda -c conda-forge tiny-count\n```\n\nIf you'd like to jump right in and start using tiny-count, see our<br> \n\ud83d\udc49 [tutorial](START_HERE/tiny-count_TUTORIAL.md) \ud83d\udc48\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9893558257289642,
      "result": {
        "original_header": "`tiny-config`",
        "type": "Text_excerpt",
        "value": "At the beginning of pipeline execution, tinyRNA digests your configuration files and produces a processed Run Config which determine's how the CWL runner, `cwltool`, directs the workflow. If you would like to produce a processed Run Config without running the rest of the pipeline, you can do so with the command `tiny-config --input-file your_run_config.yml`. This is useful if you wish to use an alternative CWL runner. In most circumstances you will not need to use this command.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8505102080162549,
      "result": {
        "original_header": "Plots",
        "type": "Text_excerpt",
        "value": "|                                                                                                                                              |                                                                                                                            |\n|:--------------------------------------------------------------------------------------------------------------------------------------------:|:--------------------------------------------------------------------------------------------------------------------------:|\n|                         <img src=\"images/plots/len_dist.jpg\" width=\"80%\" alt=\"len_dist 16-32\"/></br></br>`len_dist`                          |               <img src=\"images/plots/pca_plot.jpg\" width=\"80%\" alt=\"PCA plot by DESeq2\"/><br/>`dge_pca_plot`               |\n|                  <img src=\"images/plots/rule_chart.jpg\" width=\"80%\" alt=\"rule_chart with 10 rules\"/><br/></br>`rule_charts`                  |       <img src=\"images/plots/class_chart.jpg\" width=\"95%\" alt=\"class_chart with 8 classes\"/><br/></br>`class_charts`       |\n| <img src=\"images/plots/scatter_dge_class.jpg\" width=\"83%\" alt=\"sample_avg_scatter_by_dge_class\"/><br/></br>`sample_avg_scatter_by_dge_class` | <img src=\"images/plots/scatter_dge.jpg\" width=\"80%\" alt=\"sample_avg_scatter_by_dge\"/><br/></br>`sample_avg_scatter_by_dge` | \n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MontgomeryLab/tinyRNA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data"
        ],
        "type": "Text_excerpt",
        "value": "This project is licensed under the GPLv3 license (along with HTSeq, bowtie). License - see the [LICENSE.md](LICENSE.md) file for details\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tinyRNA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "MontgomeryLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 515194,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Common Workflow Language",
        "size": 38519,
        "type": "Programming_language",
        "value": "Common Workflow Language"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 13015,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 11989,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 7895,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7640,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 467,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlexTate",
          "type": "User"
        },
        "date_created": "2023-06-02T13:13:44Z",
        "date_published": "2023-06-02T13:14:31Z",
        "description": "## What's Changed\r\n* The default Python version has been upgraded to 3.10, and likewise for dependencies.  A new script has been added for developers which helps automate Conda environment dependency resolution, vulnerability scans among packages, and the Conda tricks we've leveraged for performing fast, consistent installations. https://github.com/MontgomeryLab/tinyRNA/pull/307\r\n* Diagnostic alignment tables, which are produced by tiny-count when the `--report-diags` flag is provided, now include columns for the sequence's raw count, genomic hits, alignment mismatches vs. reference, and feature aliases. https://github.com/MontgomeryLab/tinyRNA/pull/309\r\n* Pipeline auto-documentation has been significantly improved in backward-compatible fashion. https://github.com/MontgomeryLab/tinyRNA/pull/312\r\n\r\n\r\n**Full Changelog**: https://github.com/MontgomeryLab/tinyRNA/compare/v1.4.0...v1.5.0",
        "html_url": "https://github.com/MontgomeryLab/tinyRNA/releases/tag/v1.5.0",
        "name": "v1.5.0",
        "release_id": 105786570,
        "tag": "v1.5.0",
        "tarball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/tarball/v1.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/105786570",
        "value": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/105786570",
        "zipball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/zipball/v1.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlexTate",
          "type": "User"
        },
        "date_created": "2023-05-03T19:11:03Z",
        "date_published": "2023-05-03T05:38:22Z",
        "description": "## What's Changed\r\n\r\n### tiny-count\r\n* A new selector has been added to the Features Sheet to allow for selecting reads based on their edit distance to the reference. It is evaluated during Stage 2 selection. https://github.com/MontgomeryLab/tinyRNA/pull/298\r\n* BAM files are a supported input filetype. SAM and BAM file headers are checked during each run to ensure they report compatible ordering. Additionally, the Samples Sheet is more rigorously validated during standalone runs. https://github.com/MontgomeryLab/tinyRNA/pull/304\r\n* Normalization by genomic hits can be disabled, independently or in tandem with normalization by feature hits. Regardless, the collected stats are validated for internal consistency after all samples have been counted. https://github.com/MontgomeryLab/tinyRNA/pull/301\r\n* When using diagnostic options, intermediate alignment tables are written in CSV format and include new useful information https://github.com/MontgomeryLab/tinyRNA/pull/300\r\n\r\n### tiny-plot\r\n* Features are included in DGE scatter plots if they have a count of 0 in one of the two conditions being compared. They are shown at the very edge of the plot space as half circles. Previously they were omitted due to the log scale's singularity at 0. Features that have a count of 0 in both conditions are still omitted. In DGE class scatter plots, classes consisting entirely of 0 counts in both conditions are still omitted from the legend. https://github.com/MontgomeryLab/tinyRNA/pull/305\r\n\r\n### Misc.\r\n* Some Run Config options have been removed due to redundancy and deprecation: Bowtie's `trim5` and `trim3` options, and tiny-count's `counter_all_features` option https://github.com/MontgomeryLab/tinyRNA/pull/305\r\n\r\n\r\n**Full Changelog**: https://github.com/MontgomeryLab/tinyRNA/compare/v1.3.0...v1.4.0",
        "html_url": "https://github.com/MontgomeryLab/tinyRNA/releases/tag/v1.4.0",
        "name": "v1.4.0",
        "release_id": 101498817,
        "tag": "v1.4.0",
        "tarball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/tarball/v1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/101498817",
        "value": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/101498817",
        "zipball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/zipball/v1.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlexTate",
          "type": "User"
        },
        "date_created": "2023-03-10T03:55:25Z",
        "date_published": "2023-03-10T08:00:33Z",
        "description": "## What's Changed\r\n:exclamation: = changes that present issues with backward compatibility\r\n\r\n### tiny-count\r\n* GFF files are no longer required, and if they aren't provided then sequence-based counting will be performed rather than feature-based counting. Stage 2 and 3 selection still takes place in this mode, and counts are still optionally subset by classifier. https://github.com/MontgomeryLab/tinyRNA/pull/279 https://github.com/MontgomeryLab/tinyRNA/pull/287\r\n* Shift parameters can be provided with overlap selectors. These parameters shift the 5' and/or 3' ends of matching feature intervals by the specified number of bases. https://github.com/MontgomeryLab/tinyRNA/pull/280\r\n* :exclamation: Anchored overlap selectors (all three) require that the non-anchored end of the alignment is nested within the feature's interval for a match https://github.com/MontgomeryLab/tinyRNA/pull/282\r\n* Wildcard values can be provided for overlap selectors. This is functionally equivalent to specifying `partial`. The `full` selector has also been renamed to `nested`. https://github.com/MontgomeryLab/tinyRNA/pull/282\r\n* A tutorial for tiny-count has been added. https://github.com/MontgomeryLab/tinyRNA/pull/272\r\n\r\n### tiny-plot\r\n* Class names in DGE scatter plots and class charts are sorted https://github.com/MontgomeryLab/tinyRNA/pull/286\r\n* Custom min and/or max view limits for DGE scatter plots can be specified in the Run Config https://github.com/MontgomeryLab/tinyRNA/pull/273\r\n* The \"%\" character has been removed from tick labels in `class_charts` and `rule_charts` https://github.com/MontgomeryLab/tinyRNA/pull/284\r\n* Various bugfixes and reliability improvements https://github.com/MontgomeryLab/tinyRNA/pull/273\r\n\r\n### Misc\r\n\r\n* Log files for workflow steps are placed in the logs subdirectory for reach run, regardless of the run's success/failure. This makes troubleshooting significantly easier. https://github.com/MontgomeryLab/tinyRNA/pull/276\r\n* A backward compatibility system has been introduced so that older Run Config files can be used if the user doesn't want to update them manually. The input file is left as-is but parameter additions/renames/deletions are automatically applied to the processed Run Config to bring it up to date. This is only supported for Run Configs from v1.2.0 and newer. https://github.com/MontgomeryLab/tinyRNA/pull/276\r\n* A new bowtie option `-m` has been added to the Run Config for specifying the drop threshold for reads with too many alignments https://github.com/MontgomeryLab/tinyRNA/pull/284\r\n* The ellipsis character, which Microsoft Excel autocorrects from three periods and saves using an obscure encoding format, no longer crashes the CSV reader. Empty rows are also skipped. https://github.com/MontgomeryLab/tinyRNA/pull/290\r\n* `(tiny|tiny-count) --get-templates` will avoid configuration conflicts by only copying files if none of the relevant filenames are present in the CWD. https://github.com/MontgomeryLab/tinyRNA/pull/272\r\n* The workflow runner shows longer descriptive argument flags in its output for tiny-* utilities https://github.com/MontgomeryLab/tinyRNA/pull/291",
        "html_url": "https://github.com/MontgomeryLab/tinyRNA/releases/tag/v1.3.0",
        "name": "v1.3.0",
        "release_id": 95128419,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/95128419",
        "value": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/95128419",
        "zipball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlexTate",
          "type": "User"
        },
        "date_created": "2022-12-23T21:34:57Z",
        "date_published": "2022-12-24T17:02:47Z",
        "description": "## What's Changed\r\n* Documentation has been added for installation of tiny-count via bioconda https://github.com/MontgomeryLab/tinyRNA/pull/257\r\n* `tiny-count --get-templates` can be used to obtain template copies of configuration files relevant to tiny-count https://github.com/MontgomeryLab/tinyRNA/pull/259\r\n* Inclusive or exclusive filters for classes in DGE scatter plots can be specified in the Run Config and by command line https://github.com/MontgomeryLab/tinyRNA/pull/264\r\n* Scatter plot tick label placement is more flexible and reliable across a much wider range of plot view limits https://github.com/MontgomeryLab/tinyRNA/pull/269\r\n* Control conditions that contain forbidden characters (per R) are properly handled in tiny-deseq.r https://github.com/MontgomeryLab/tinyRNA/pull/267\r\n* Group names in the Samples Sheet are validated to ensure that their \"syntactically correct\" translations (per R) do not cause namespace collisions https://github.com/MontgomeryLab/tinyRNA/pull/268\r\n* The help string for top-level tinyRNA commands is much more helpful https://github.com/MontgomeryLab/tinyRNA/pull/263\r\n\r\n**Full Changelog**: https://github.com/MontgomeryLab/tinyRNA/compare/v1.2.0_patch1...v1.2.1",
        "html_url": "https://github.com/MontgomeryLab/tinyRNA/releases/tag/v1.2.1",
        "name": "v1.2.1",
        "release_id": 87187575,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/87187575",
        "value": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/87187575",
        "zipball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlexTate",
          "type": "User"
        },
        "date_created": "2022-11-29T22:25:05Z",
        "date_published": "2022-11-29T03:18:58Z",
        "description": "This release improves the utility and user experience of selection rules and adds new, useful selectors to Stage 1 selection. \r\n\r\n## What's Changed\r\n:exclamation: = changes that present issues with backward compatibility\r\n\r\n### Pipeline Changes\r\n* :exclamation: Tagged counting has been repurposed as a classifier which can be used to subclassify features during Stage 1 selection https://github.com/MontgomeryLab/tinyRNA/pull/241\r\n* :exclamation: GFF files and aliases are now defined in the Paths File. This leaves the Features Sheet in a more consistent state since these columns operated independently from the rest of each row's rule definition. https://github.com/MontgomeryLab/tinyRNA/pull/245\r\n* :exclamation: GFF Source and Type Filters are now included in Stage 1 selection, complete with wildcard support, and can be specified in the Features Sheet on a per-rule basis (rather than the previous global definition in the Run Config) https://github.com/MontgomeryLab/tinyRNA/pull/246\r\n* The GFF validator can now use gzipped reference genomes for chromosome identifier validation https://github.com/MontgomeryLab/tinyRNA/pull/251\r\n* The Features Sheet in the START_HERE directory has been updated to utilize the new selection format detailed above  https://github.com/MontgomeryLab/tinyRNA/pull/249\r\n* Misc. v1.2 prep https://github.com/MontgomeryLab/tinyRNA/pull/253 :\r\n    * Bugfix: non-differentially expressed features are misrepresented in scatter_dge_class plots under certain conditions\r\n    * Bugfix: the size of an empty StepVector differs between the HTSeq StepVector and our Cython StepVector, meaning that tiny-count runs aren't handled properly when there are no Stage 1 matches (this should be an error)\r\n    * Bugfix: changes to the Paths File between recount/replot runs are not reflected\r\n    * Bugfix: cwltool issues a notice of duplicate parameter names in tiny-plot.cwl\r\n    * Add a version parameter to the Run Config so that processed run configs are automatically updated with the tinyRNA version that was used\r\n    * Add Matplotlib documentation link in the .mplstyle template stylesheet\r\n    * Add the keyword \"any\" to the list of wildcard keywords permitted in selection rules\r\n    * Add a diagram that demonstrates Stage 1-3 selection to the documentation\r\n    * Add documentation notes about Run Directory files that can be safely removed to reduce storage usage\r\n    * Update version number in setup.py\r\n    * Update TUTORIAL.md with corrected line number references for paths.yml\r\n\r\n### Patch 11/29: additional changes for v1.2.0 release\r\n* setup.py has been modified in preparation for tiny-count standalone installation via bioconda\r\n* Resume Run Config files are now timestamped\r\n* Default plot styles have been changed\r\n\r\n**Full Changelog**: https://github.com/MontgomeryLab/tinyRNA/compare/v1.1.0...v1.2.0_patch1",
        "html_url": "https://github.com/MontgomeryLab/tinyRNA/releases/tag/v1.2.0_patch1",
        "name": "v1.2.0",
        "release_id": 84227936,
        "tag": "v1.2.0_patch1",
        "tarball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/tarball/v1.2.0_patch1",
        "type": "Release",
        "url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/84227936",
        "value": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/84227936",
        "zipball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/zipball/v1.2.0_patch1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlexTate",
          "type": "User"
        },
        "date_created": "2022-10-22T00:43:18Z",
        "date_published": "2022-10-22T20:51:36Z",
        "description": "This release brings improvements in performance, reliability, and compatibility.\r\n\r\n## What's Changed\r\n:exclamation: = changes that may present issues with backward compatibility\r\n\r\n### Pipeline changes\r\n* All Conda dependencies have been updated, including Python (3.7 to 3.9), [bowtie](https://github.com/bioconda/bioconda-recipes/pull/35510), fastp, matplotlib, etc. R dependencies are now managed by Conda which has removed lengthy build steps from the installation script.  https://github.com/MontgomeryLab/tinyRNA/pull/214\r\n* GFF annotations are validated at both pipeline and tiny-count startup. These changes also bring expanded support for feature ID attributes (by priority: `ID`, `gene_id`, and `Parent`) and annotations defining whole chromosomes for compatibility with Ensembl. https://github.com/MontgomeryLab/tinyRNA/pull/236\r\n* Samples Sheet contents are validated at pipeline startup https://github.com/MontgomeryLab/tinyRNA/pull/243\r\n* :exclamation: Large bowtie indexes (*.ebwtl) are now supported. The activation steps for bowtie-build have also been simplified. https://github.com/MontgomeryLab/tinyRNA/pull/238\r\n\r\n### tiny-count changes:\r\n* A custom Cython implementation of HTSeq's StepVector has been introduced. As a result, tiny-count runtimes are up to 50% faster (depending on configuration). HTSeq's StepVector is still used as a fallback if there are issues during build or import, or via user preference in the Run Config. Note: prebuilt binaries are not provided in this release. https://github.com/MontgomeryLab/tinyRNA/pull/218\r\n* The semantics of the Features Sheet Hierarchy value have changed. Instead of being used as a means of candidate elimination in Stage 2 selection, it is now used to sort Stage 2 matches as a priority order for Stage 3. https://github.com/MontgomeryLab/tinyRNA/pull/229\r\n* Features are no longer required to be stranded. Unstranded features that match rules with `3'/5' anchored` overlap selectors will be downgraded to a new `anchored` overlap selector which does not distinguish between 3'/5' ends. Unstranded features will match all strand selectors (sense, antisense, and both) https://github.com/MontgomeryLab/tinyRNA/pull/236\r\n* Features that list more than one value for their ID attribute are now accepted. These values are concatenated to form a single ID string. https://github.com/MontgomeryLab/tinyRNA/pull/239\r\n* Non-collapsed SAM files, as well as SAM files produced from fastx collapsed outputs, are now accepted by tiny-count. https://github.com/MontgomeryLab/tinyRNA/pull/217\r\n* :exclamation: The required command line argument for the Features Sheet has been renamed. https://github.com/MontgomeryLab/tinyRNA/pull/217\r\n* GFF parsing performance has been improved. https://github.com/MontgomeryLab/tinyRNA/pull/218\r\n* Gzipped tiny-collapse outputs no longer lead to a crash during Summary Stats creation https://github.com/MontgomeryLab/tinyRNA/pull/222\r\n\r\n### tiny-deseq.r\r\n* Excessive decimal precision has been fixed in the pvalue and padj columns of DGE tables. Empty cells are now filled with NA. https://github.com/MontgomeryLab/tinyRNA/pull/232\r\n\r\n### tiny-plot\r\n* Class color assignment is now consistent across comparisons, and legend items are sorted alphabetically in the `sample_avg_scatter_by_dge_class` plot type. Color mapping now supports up to 20 distinct class colors (unless a stylesheet with >20 colors is provided by the user). https://github.com/MontgomeryLab/tinyRNA/pull/220\r\n* Plot outputs are now organized into subdirectories by type. https://github.com/MontgomeryLab/tinyRNA/pull/239\r\n\r\n\r\n**Full Changelog**: https://github.com/MontgomeryLab/tinyRNA/compare/v1.0.1...v1.1.0",
        "html_url": "https://github.com/MontgomeryLab/tinyRNA/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 80710809,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/80710809",
        "value": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/80710809",
        "zipball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlexTate",
          "type": "User"
        },
        "date_created": "2022-07-11T18:43:50Z",
        "date_published": "2022-07-11T21:53:12Z",
        "description": "We are excited to announce the release of tinyRNA v1. This version marks the end of the initial development period and the first version intended for wider public use and evaluation. We would like to thank our beta testing community for their thoughtful and generous feedback, and the National Institutes of Health for their support.\r\n\r\n**v1.0.1**\r\n- Addresses installation issues related to Miniconda if the host environment requires a Conda installation\r\n- A fixed version of Miniconda is installed, if needed, rather than the latest version",
        "html_url": "https://github.com/MontgomeryLab/tinyRNA/releases/tag/v1.0.1",
        "name": "v1.0.1",
        "release_id": 71749108,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/71749108",
        "value": "https://api.github.com/repos/MontgomeryLab/tinyRNA/releases/71749108",
        "zipball_url": "https://api.github.com/repos/MontgomeryLab/tinyRNA/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements for User-Provided Input Files",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "| Input Type                                                                 | File Extension    | Requirements                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n|----------------------------------------------------------------------------|-------------------||\n| Reference annotations<br/>[(example)](START_HERE/reference_data/ram1.gff3) | GFF3 / GFF2 / GTF | Column 9 attributes (defined as \"tag=value\" or \"tag value\"):<ul><li>Each feature must have an `ID` or `gene_id`  or `Parent` tag (referred to as `ID` henceforth).</li><li>Discontinuous features must be defined with the `Parent` tag whose value is the logical parent's `ID`, or by sharing the same `ID`.</li><li>Attribute values containing commas must represent lists.</li><li>`Parent` tags with multiple values are not yet supported.</li><li>See the example link (left) for col. 9 formatting.</li></ul> |\n| Sequencing data<br/>[(example)](START_HERE/fastq_files)                    | FASTQ(.gz)        | Files must be demultiplexed.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n| Reference genome<br/>[(example)](START_HERE/reference_data/ram1.fa)        | FASTA             | Chromosome identifiers (e.g. Chr1): <ul><li>Should match your reference annotation file chromosome identifiers</li><li>Are case sensitive</li></ul>                                                                                                                                                                                                                                                                                                                                                                    |\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running an End-to-End Analysis",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "In most cases you will use this toolset as an end-to-end pipeline. This will run a full, standard small RNA sequencing data analysis according to your configuration file. Before starting, you will need the following:\n\n1. High-throughput sequencing data in fastq format. \n2. The genome sequence of interest in fasta format.\n3. Genome coordinates of small RNA features of interest in GFF format.\n4. A completed Samples Sheet (`samples.csv`) with paths to the fastq files.\n5. A completed Features Sheet (`features.csv`) with feature selection rules.\n6. An updated Paths File (`paths.yml`) with paths to your GFF files, the genome sequence and/or your bowtie index prefix, as well as the paths to `samples.csv` and `features.csv`.\n7. A Run Config file (`run_config.yml`) located in your working directory or the path to the file. The template provided does not need to be updated if you wish to use the default settings.\n\nTo run an end-to-end analysis, be sure that you're working within the conda tinyrna environment ([instructions above](#usage)) in your terminal and optionally navigate to the location of your Run Config file. Then, simply run the following in your terminal:\n\n```\ntiny run --config run_config.yml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:11:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data"
        ],
        "type": "Text_excerpt",
        "value": "The `tinyrna` conda environment must be activated before using the tinyRNA workflow.\n```shell\n# Activate the tinyrna environment\n conda activate tinyrna\n \n## (your commands here: tiny run, tiny-count, etc.)\n\n# When you are done running tinyRNA, you can deactivate the conda environment\n conda deactivate\n```\nIf you'd like to jump right in and start using tinyRNA, see our<br> \n\ud83d\udc49 [tutorial](START_HERE/tinyRNA_TUTORIAL.md) \ud83d\udc48\n\nYou can execute the workflow in its entirety for a full end-to-end analysis pipeline, or you can execute individual steps on their own. In most cases you will use the command `tiny` for pipeline operations.\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuration Files",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The pipeline requires that you identify:\n- Your preferences for the pipeline and its steps via the **Run Config**\n- The location of your config files and other file inputs via the **Paths File**\n- Your selection preferences for feature counting via the **Features Sheet**\n- Your samples via the **Samples Sheet**\n\n<img src=\"images/config-files.png\" width=\"50%\" alt=\"[Configuration File Diagram]\">\n\nFor more information, please see the [configuration file documentation](doc/Configuration.md). The `START_HERE` directory demonstrates a working configuration using these files. You can also get a copy of them by running the command:\n```shell\ntiny get-templates\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Resuming an End-to-End Analysis",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The tiny-count and tiny-plot steps offer a wide variety of options for refining your analysis. You might find that repeat analyses are required while tuning these options to your goals. To save time and skip redundant compute-heavy preprocessing steps, you can resume a prior analysis using its outputs from the early pipeline steps.\n\n```shell\n# Resume a prior analysis at the tiny-count step\ntiny recount --config processed_run_config.yml\n\n# Resume a prior analysis at the tiny-plot step\ntiny replot --config processed_run_config.yml\n```\nFor more information and prerequesites, see the [pipeline resume documentation](doc/Pipeline.md#resuming-a-prior-analysis).\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CWL-Wrapped Third Party Tools.",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "fastp, bowtie-build, and bowtie can be run from the terminal (within the tinyRNA conda environment) just as you would if they were installed in the host environment. Normally, tinyRNA will handle the execution of these tools for you, but if you would like to run them as individual steps you may find that their commandline arguments can be lengthy. With a little setup you can make things easier for yourself by using our CWL wrappers and a configuration file for each tool. This allows you to more easily set commandline parameters from a text editor and reuse configuration files. See the [pipeline documentation](doc/Pipeline.md#cwl-wrapped-third-party-tools) for details.\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Reducing Storage Usage",
        "parent_header": [
          "tinyRNA: precision analysis of small RNA high-throughput sequencing data",
          "Outputs"
        ],
        "type": "Text_excerpt",
        "value": "The files produced by certain steps can be very large and after several runs this may present significant storage usage. You can remove the following subdirectories from a Run Directory to free up space, but **you will no longer be able to perform recount analyses within it** (i.e. `tiny recount`):\n- fastp (though we recommend keeping the reports)\n- collapser\n- bowtie\n\nCleanup commands will be added to tinyRNA in a future release, but for now the following command will remove commonly large files while preserving report files:\n```shell\n# Execute within the Run Directory you want to clean\nrm {fastp/*.fastq,{tiny-collapse,bowtie}/*.fa,bowtie/*.sam}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/tiny/cwl/workflows/tinyrna_wf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MontgomeryLab/tinyRNA/master/tiny/cwl/workflows/preprocessing.cwl"
      },
      "technique": "file_exploration"
    }
  ]
}