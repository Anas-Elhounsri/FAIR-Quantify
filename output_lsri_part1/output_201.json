{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "ACKNOWLEDGMENT",
        "type": "Text_excerpt",
        "value": "<p align=\"justify\">This work used MARCONI100 (https://www.hpc.cineca.it/hardware/marconi100) at HPC@CINECA, which is provided under ELIXIR, the research infrastructure for life-science data.</p>\n\n\n<h1>CONTACT</h1>\n<span align=\"justify\">That would be it for now, if you have any question / suggestions feel free to send me an email to:</span> <br>\n<ul>\n    <li><a href=\"mailto:fhgil@utp.edu.co\">fhgil@utp.edu.co</li>\n    <li><a href=\"mailto:fgilzuluaga@unisa.it\">fgilzuluaga@unisa.it</li>\n</ul>\n<span>*Thank you for reading, have a great day!*</span>\n"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Fabio-Gil-Z/AlphaMod"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "CONTACT",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n    <img src=\"https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Images/DISAMIS_UNISA_tri_logo.png\" width=60% height=60%>\n</p>\n\n<h1 align=\"center\">\nAlphaMod<br>\nAn Automated Pipeline Integrating AlphaFold 2 and Modeller for Protein Structure Prediction \n</h1>\n\n\n# Abstract\n<p align=\"justify\">The ability to predict a protein's three-dimensional conformation represents a crucial starting point for investigating evolutionary connections with other members of the corresponding protein family, examining interactions with other proteins, and potentially utilizing this knowledge for the purpose of rational drug design. In this work, we evaluated the feasibility of improving AlphaFold2\u2019s three-dimensional protein predictions by developing a novel pipeline (AlphaMod) that incorporates AlphaFold2 with MODELLER, a template-based modeling program. Additionally, our tool can drive a comprehensive quality assessment of the tertiary protein structure by incorporating and comparing a set of different quality assessment tools. The   outcomes of selected tools are combined into a composite score (BORDASCORE) that exhibits a meaningful correlation with GDT_TS and facilitates the selection of optimal models in the absence of a reference structure. To validate AlphaMod's results, we conducted evaluations using two distinct datasets summing up to 72 targets, previously used to independently assess AlphaFold2's performance. The generated models underwent evaluation through two methods: i) averaging the GDT_TS scores across all produced structures for a single target sequence, and ii) a pairwise comparison of the best structures generated by AlphaFold2 and AlphaMod. The latter, within the unsupervised setups, shows a rising accuracy of approximately 34% over AlphaFold2. While, when considering the supervised setup, AlphaMod surpasses AlphaFold2 in 18% of the instances. Finally, there is an 11% correspondence in outcomes between the diverse methodologies. Consequently, AlphaMod\u2019s best-predicted tertiary structures in several cases exhibited a significant improvement in the accuracy of the predictions with respect to the best models obtained by AlphaFold2. This pipeline paves the way for the integration of additional data and AI-based algorithms to further improve the reliability of the predictions.</p>\n\n# AlphaMod - [Paper](https://www.sciencedirect.com/science/article/pii/S2001037023004129) - [CSBJ](https://www.csbj.org/article/S2001-0370(23)00412-9/fulltext)\nCite this paper <br>\n<pre><code>Fabio Hernan Gil Zuluaga, Nancy D\u2019Arminio, Francesco Bardozzo, Roberto Tagliaferri, Anna Marabotti,\nAn Automated Pipeline Integrating AlphaFold 2 and Modeller for Protein Structure Prediction,<br>\nComputational and Structural Biotechnology Journal, 2023,ISSN 2001-0370, <br>\nhttps://doi.org/10.1016/j.csbj.2023.10.056.</code></pre>\n\n# <p align=\"center\">Requirements - Installation - Deployment <br> [USER MANUAL](https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Supplementary_Files/Supplementary%20File%202.pdf)</p>\n\n<h1 align=\"center\">\nFigure 1 - AlphaMod Pipeline\n</h1>\n\n![AlphaMod Pipeline](https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Images/Figure_01.png) <br> <br>\n\n<p align=\"justify\"><span>Figure 1. Scheme of the AlphaMod pipeline. </span>\nAlphaMod is initialized by the Homolog Information Retrieval Engine (HIRE). The input selector S decides the entry data as either a single Fasta File or a group of Fasta Files, finding both the templates and Multiple Sequence Alignment (MSA). The Protein Backbone Construction Tool (PBCT), launches AlphaFold2 (AF2), using as input the MSAs and templates, producing 10 predictions as PDBs (5 relaxed and 5 unrelaxed). These predictions are analyzed by the Structure Model Assessment module (SMA), first by extracting the pLDDT from AF2, and second, calculating the QMEANDisCo score with a web-crawler; pLDDT and QMEANDisCo are used to compute BORDASCORE, all these results are stored in the Metrics Data Collector. Moreover, PBCT passes upon MODELLER the user criteria (OP1, OP2 and/or OP3), MODELLER will generate 5 new predictions based on the selected criteria. Each option is executed as follows: OP1 fetches the information stored in the Metrics Data Collector and selects the first and second best AF2 relaxed models by means of BORDASCORE. OP2 does not need any additional information and uses directly the first ranked predictions obtained from AF2. Finally, in OP3 (the test case when the ground truth is known), GDT_TS is calculated, the first and second models with the highest GDT_TS are given to MODELLER. Finally, the Comprehensive Model Quality Assessment module (CMQA) sequentially applies a series of unsupervised metrics, namely QMEANDisCo, PROCHECK, PROSA, MOLPROBITY, and DOPESCORE, to both AF2 and AlphaMod models. It is essential to highlight that the calculation of supervised metrics, specifically GDT_TS and RMSD, is exclusively enabled when the experimental structure is available and option OP3 (TEST MODE) is selected. In addition to the unsupervised metrics, all the previously mentioned supervised and unsupervised metrics are stored in the Metrics Data Collector for further analysis and evaluation.</p>\n\n\n# HIGHLIGHTS\n![AlphaMod Pipeline](https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Images/highlights.png) <br> <br>\n\n<h1 align=\"center\">\nRESULTS\n</h1>\n<h2 align=\"center\">\nTable 1: Average RMSD for the different types of models obtained (domains only) Test set B. \n</h2>\n\n![AlphaMod Pipeline](https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Images/Table_1.png) <br> <br>\n\n<h2 align=\"center\">\nTable 2: Pairwise comparison of the top-ranked predicted targets across different methodologies including: AF2, OP1, OP2 and OP3.  \n</h2>\n\n![AlphaMod Pipeline](https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Images/Table_2.png) <br> <br>\n\n\n<h1 align=\"center\">\nFigure 2 - TARGET T1038-D1 - TEST SET A\n</h1>\n\n![AlphaMod Pipeline](https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Images/Figure_02.PNG) <br><br>\n\n<p align=\"justify\"><span>Figure 2. Illustration of four predictions of CASP14 Target T1038-D1.</span> On the left side, the best models (i.e. those models with the highest overall GDT_TS score) produced with the different procedures: AF2 alone in green, OP1 in orange, OP2 in blue and OP3 in violet. On the right side, from top to bottom: 1st row, plot showing the confidence level of AlphaFold2\u2019s prediction (pLDDT) residue by residue, rows 2nd to 5th illustrates a residue-by-residue assessment of the best models produced by the different procedures, utilizing the QMEANDisCo metric instead. In detail, 2nd row, AlphaFold2 ranked_0, 3rd row, AlphaMod\u2019s OP3 model 2, 4th row, AlphaMod\u2019s OP1 model 1, and 5th row, AlphaMod\u2019s OP2 model 0. The bottom legend shows the number of residues, CASP14 Target T1038-D1 has a total of 114 residues.</p>\n\n<h1 align=\"center\">\nFigure 3 \n</h1>\n\n<h2 align=\"center\">\nCORRELATION BETWEEN GDT_TS AND QUALITY ASSESSMENT MEASURES ON BEST PREDICTED STRUCTURES\n</h2>\n<h2 align=\"center\">\n\n<p  align=\"justify\">\n<span>A:</span> GDT_TS vs <a href=\"https://alphafold.ebi.ac.uk/faq\"> pLDDT</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span>B:</span> GDT_TS vs <a href=\"https://swissmodel.expasy.org/qmean/\">  QMEAN</a>\n</p>\n\n<p  align=\"justify\">\n<span>C:</span> GDT_TS vs <a href=\"https://prosa.services.came.sbg.ac.at/prosa.php\">Prosa(z-score)</a> &nbsp;&nbsp; <span>D:</span> GDT_TS vs <a href=\"https://saves.mbi.ucla.edu/\">PROCHECK</a> \n</p>\n\n<p  align=\"justify\">\n<span>E:</span> GDT_TS vs <a href=\"https://salilab.org/modeller/\"> DOPESCORE</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span>F:</span> GDT_TS vs <a href=\"http://molprobity.biochem.duke.edu/\">MOLPROBITY</a> \n</p>\n\n\n</h2>\n\n![AlphaMod Pipeline](https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Images/Figure_03.png) <br> <br>\n\n<p align=\"justify\"><span>Figure 3.</span> Correlation between best scores of supervised metric GDT_TS and unsupervised metrics: pLDDT, QMEANDisCo, MOLPROBITY, PROSA, DOPESCORE and PROCHECK. AF2 is represented in red and AFM-OP1 in blue. \nPanel A: relationship between GDT_TS and AF2\u2019s pLDDT, (p-value=0.01, Rho(\u03c1)=0.78). Panel B: relationship GDT_TS and QMEAN, AF2: (p-value=0.02, Rho(\u03c1)=0.76), AFM-OP1: (p-value=0.02, Rho(\u03c1)=0.79). Panel C: relationship GDT_TS and PROSA, AF2: (p-value=0.02, Rho(\u03c1)=-0.15), AFM-OP1: (p-value=0.01, Rho(\u03c1)=-0.18). Panel D: relationship GDT_TS and PROCHECK, AF2: (p-value=0.01, Rho(\u03c1)=0.23), AFM-OP1: (p-value=0.01, Rho(\u03c1)=0.01). Panel E: relationship GDT_TS and DOPESCORE, AF2: (p-value=0.03, Rho(\u03c1)=-0.09), AFM-OP1: (p-value=0.03, Rho(\u03c1)=-0.09). Panel F: relationship GDT_TS and PROCHECK, AF2: (p-value=0.02, Rho(\u03c1)=-0.41), AFM-OP1: (p-value=0.02, Rho(\u03c1)=-0.27). </p>\n\n<h1 align=\"center\">\nSUPPLEMENTARY MATERIAL\n</h1>\n<h2 align=\"center\">\nBEST METHOD DISTRIBUTION ACROSS DIFFERENT EVALUATION UNITS\n</h2>\n\n![AlphaMod Pipeline](https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Images/Supplementary_Table_Evaluation_Units.png)  <br> <br>\n\n<h2 align=\"center\">\nSupplementary Table 1 - Average GDT_TS scores for the different types of models obtained (domains only) for Test set A.\n</h2>\n\n![AlphaMod Pipeline](https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Images/Supplementary_Table_1.png) <br> <br>\n\n<h2 align=\"center\">\nSupplementary Table 2 - Average GDT_TS scores for the different types of models obtained (entire proteins.) Test set A.\n</h2>\n\n![AlphaMod Pipeline](https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Images/Supplementary_Table_2.png) <br> <br>\n\n# CONCLUSIONS\n<ul>\n    <li><p align=\"justify\">While AF2 has achieved remarkable accuracy in predicting protein structure, our study has highlighted the potential for further improvement. We have demonstrated that, in principle, by combining this cutting-edge deep learning tool with traditional modeling strategies, it is possible to achieve a substantial improvement in the quality of a protein\u2019s tertiary structure, especially in terms of GDT_TS. Only where AF2 fails to achieve high quality results on average and top-two best comparisons over these targets: T1029-D1, T1043-D1, T1047s1-D1, 7MSW-D1, our AlphaMod procedures cannot significantly improve prediction accuracy.</p></li>\n    <li><p align=\"justify\">Furthermore, as described in Section 2 and Supplementary File  4, Tables 1-4, large-scale protein predictions can be effectively applied, thanks to the automation integrated into the AlphaMod pipeline, spanning from data retrieval to automatic processing. Finally, our pipeline provides a unified platform for comprehensive protein structural quality assessment, encompassing several metrics. This addresses the current challenge where these tools are dispersed across multiple service providers. AlphaMod, on the other hand, offers an integrated solution by centralizing all these quality assessment tools within a single, easily accessible platform.</p></li>\n    <li><p align=\"justify\">The current pipeline is only the first brick for the development of a tool that will also handle heterogeneous information, in addition to sequence-related features, to perform better predictions for selected subsets of proteins, with non-common structural features. According to our research, the addition of supplementary data has the potential to improve the predictive accuracy in most of the predicted models.</p></li>\n    <li><p align=\"justify\">Moreover, in future research it would be of great interest to study the feasibility of jointly using supplementary data and AI-based integration models to improve predictions in situations where AF2\u2019s performance level is below 50%. </p></li>\n</ul>\n\n# FUNDING\n<p align=\"justify\">This work was supported by UNIVERSITY OF SALERNO, [grant numbers ORSA208455, ORSA219407, and ORSA229241]; by MIUR, [grant FFABR2017 and PRIN 2017 program, grant number: 2017483NH8]; and by BANCA D\u2019ITALIA (NDA, AM).</p>\n\n# ACKNOWLEDGMENT\n<p align=\"justify\">This work used MARCONI100 (https://www.hpc.cineca.it/hardware/marconi100) at HPC@CINECA, which is provided under ELIXIR, the research infrastructure for life-science data.</p>\n\n\n<h1>CONTACT</h1>\n<span align=\"justify\">That would be it for now, if you have any question / suggestions feel free to send me an email to:</span> <br>\n<ul>\n    <li><a href=\"mailto:fhgil@utp.edu.co\">fhgil@utp.edu.co</li>\n    <li><a href=\"mailto:fgilzuluaga@unisa.it\">fgilzuluaga@unisa.it</li>\n</ul>\n<span>*Thank you for reading, have a great day!*</span>\n"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to Contribute\n\nWe welcome small patches related to bug fixes and documentation, but we do not\nplan to make any major changes to this repository.\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution,\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\n\n## Code reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\n[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more\ninformation on using pull requests.\n"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-30T15:05:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-27T13:44:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AlphaMod's official repository for protein folding"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9950878389253942,
      "result": {
        "original_header": "Abstract",
        "type": "Text_excerpt",
        "value": "<p align=\"justify\">The ability to predict a protein's three-dimensional conformation represents a crucial starting point for investigating evolutionary connections with other members of the corresponding protein family, examining interactions with other proteins, and potentially utilizing this knowledge for the purpose of rational drug design. In this work, we evaluated the feasibility of improving AlphaFold2\u2019s three-dimensional protein predictions by developing a novel pipeline (AlphaMod) that incorporates AlphaFold2 with MODELLER, a template-based modeling program. Additionally, our tool can drive a comprehensive quality assessment of the tertiary protein structure by incorporating and comparing a set of different quality assessment tools. The   outcomes of selected tools are combined into a composite score (BORDASCORE) that exhibits a meaningful correlation with GDT_TS and facilitates the selection of optimal models in the absence of a reference structure. To validate AlphaMod's results, we conducted evaluations using two distinct datasets summing up to 72 targets, previously used to independently assess AlphaFold2's performance. The generated models underwent evaluation through two methods: i) averaging the GDT_TS scores across all produced structures for a single target sequence, and ii) a pairwise comparison of the best structures generated by AlphaFold2 and AlphaMod. The latter, within the unsupervised setups, shows a rising accuracy of approximately 34% over AlphaFold2. While, when considering the supervised setup, AlphaMod surpasses AlphaFold2 in 18% of the instances. Finally, there is an 11% correspondence in outcomes between the diverse methodologies. Consequently, AlphaMod\u2019s best-predicted tertiary structures in several cases exhibited a significant improvement in the accuracy of the predictions with respect to the best models obtained by AlphaFold2. This pipeline paves the way for the integration of additional data and AI-based algorithms to further improve the reliability of the predictions.</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9480421917607089,
      "result": {
        "original_header": "AlphaMod - <a href=\"https://www.sciencedirect.com/science/article/pii/S2001037023004129\">Paper</a> - <a href=\"https://www.csbj.org/article/S2001-0370(23)00412-9/fulltext\">CSBJ</a>",
        "type": "Text_excerpt",
        "value": "Cite this paper <br>\n<pre><code>Fabio Hernan Gil Zuluaga, Nancy D\u2019Arminio, Francesco Bardozzo, Roberto Tagliaferri, Anna Marabotti,\nAn Automated Pipeline Integrating AlphaFold 2 and Modeller for Protein Structure Prediction,<br>\nComputational and Structural Biotechnology Journal, 2023,ISSN 2001-0370, <br>\nhttps://doi.org/10.1016/j.csbj.2023.10.056.</code></pre> \n<p align=\"justify\"><span>Figure 1. Scheme of the AlphaMod pipeline. </span>\nAlphaMod is initialized by the Homolog Information Retrieval Engine (HIRE). The input selector S decides the entry data as either a single Fasta File or a group of Fasta Files, finding both the templates and Multiple Sequence Alignment (MSA). The Protein Backbone Construction Tool (PBCT), launches AlphaFold2 (AF2), using as input the MSAs and templates, producing 10 predictions as PDBs (5 relaxed and 5 unrelaxed). These predictions are analyzed by the Structure Model Assessment module (SMA), first by extracting the pLDDT from AF2, and second, calculating the QMEANDisCo score with a web-crawler; pLDDT and QMEANDisCo are used to compute BORDASCORE, all these results are stored in the Metrics Data Collector. Moreover, PBCT passes upon MODELLER the user criteria (OP1, OP2 and/or OP3), MODELLER will generate 5 new predictions based on the selected criteria. Each option is executed as follows: OP1 fetches the information stored in the Metrics Data Collector and selects the first and second best AF2 relaxed models by means of BORDASCORE. OP2 does not need any additional information and uses directly the first ranked predictions obtained from AF2. Finally, in OP3 (the test case when the ground truth is known), GDT_TS is calculated, the first and second models with the highest GDT_TS are given to MODELLER. Finally, the Comprehensive Model Quality Assessment module (CMQA) sequentially applies a series of unsupervised metrics, namely QMEANDisCo, PROCHECK, PROSA, MOLPROBITY, and DOPESCORE, to both AF2 and AlphaMod models. It is essential to highlight that the calculation of supervised metrics, specifically GDT_TS and RMSD, is exclusively enabled when the experimental structure is available and option OP3 (TEST MODE) is selected. In addition to the unsupervised metrics, all the previously mentioned supervised and unsupervised metrics are stored in the Metrics Data Collector for further analysis and evaluation.</p> \n<h1 align=\"center\">\nRESULTS\n</h1>\n<h2 align=\"center\">\nTable 1: Average RMSD for the different types of models obtained (domains only) Test set B. \n</h2> \n<h2 align=\"center\">\nTable 2: Pairwise comparison of the top-ranked predicted targets across different methodologies including: AF2, OP1, OP2 and OP3.  \n</h2> \n<p align=\"justify\"><span>Figure 2. Illustration of four predictions of CASP14 Target T1038-D1.</span> On the left side, the best models (i.e. those models with the highest overall GDT_TS score) produced with the different procedures: AF2 alone in green, OP1 in orange, OP2 in blue and OP3 in violet. On the right side, from top to bottom: 1st row, plot showing the confidence level of AlphaFold2\u2019s prediction (pLDDT) residue by residue, rows 2nd to 5th illustrates a residue-by-residue assessment of the best models produced by the different procedures, utilizing the QMEANDisCo metric instead. In detail, 2nd row, AlphaFold2 ranked_0, 3rd row, AlphaMod\u2019s OP3 model 2, 4th row, AlphaMod\u2019s OP1 model 1, and 5th row, AlphaMod\u2019s OP2 model 0. The bottom legend shows the number of residues, CASP14 Target T1038-D1 has a total of 114 residues.</p> \n<p align=\"justify\"><span>Figure 3.</span> Correlation between best scores of supervised metric GDT_TS and unsupervised metrics: pLDDT, QMEANDisCo, MOLPROBITY, PROSA, DOPESCORE and PROCHECK. AF2 is represented in red and AFM-OP1 in blue. \nPanel A: relationship between GDT_TS and AF2\u2019s pLDDT, (p-value=0.01, Rho(\u03c1)=0.78). Panel B: relationship GDT_TS and QMEAN, AF2: (p-value=0.02, Rho(\u03c1)=0.76), AFM-OP1: (p-value=0.02, Rho(\u03c1)=0.79). Panel C: relationship GDT_TS and PROSA, AF2: (p-value=0.02, Rho(\u03c1)=-0.15), AFM-OP1: (p-value=0.01, Rho(\u03c1)=-0.18). Panel D: relationship GDT_TS and PROCHECK, AF2: (p-value=0.01, Rho(\u03c1)=0.23), AFM-OP1: (p-value=0.01, Rho(\u03c1)=0.01). Panel E: relationship GDT_TS and DOPESCORE, AF2: (p-value=0.03, Rho(\u03c1)=-0.09), AFM-OP1: (p-value=0.03, Rho(\u03c1)=-0.09). Panel F: relationship GDT_TS and PROCHECK, AF2: (p-value=0.02, Rho(\u03c1)=-0.41), AFM-OP1: (p-value=0.02, Rho(\u03c1)=-0.27). </p> \n<h2 align=\"center\">\nSupplementary Table 1 - Average GDT_TS scores for the different types of models obtained (domains only) for Test set A.\n</h2> \n<h2 align=\"center\">\nSupplementary Table 2 - Average GDT_TS scores for the different types of models obtained (entire proteins.) Test set A.\n</h2> \n# CONCLUSIONS\n<ul>\n    <li><p align=\"justify\">While AF2 has achieved remarkable accuracy in predicting protein structure, our study has highlighted the potential for further improvement. We have demonstrated that, in principle, by combining this cutting-edge deep learning tool with traditional modeling strategies, it is possible to achieve a substantial improvement in the quality of a protein\u2019s tertiary structure, especially in terms of GDT_TS. Only where AF2 fails to achieve high quality results on average and top-two best comparisons over these targets: T1029-D1, T1043-D1, T1047s1-D1, 7MSW-D1, our AlphaMod procedures cannot significantly improve prediction accuracy.</p></li>\n    <li><p align=\"justify\">Furthermore, as described in Section 2 and Supplementary File  4, Tables 1-4, large-scale protein predictions can be effectively applied, thanks to the automation integrated into the AlphaMod pipeline, spanning from data retrieval to automatic processing. Finally, our pipeline provides a unified platform for comprehensive protein structural quality assessment, encompassing several metrics. This addresses the current challenge where these tools are dispersed across multiple service providers. AlphaMod, on the other hand, offers an integrated solution by centralizing all these quality assessment tools within a single, easily accessible platform.</p></li>\n    <li><p align=\"justify\">The current pipeline is only the first brick for the development of a tool that will also handle heterogeneous information, in addition to sequence-related features, to perform better predictions for selected subsets of proteins, with non-common structural features. According to our research, the addition of supplementary data has the potential to improve the predictive accuracy in most of the predicted models.</p></li>\n    <li><p align=\"justify\">Moreover, in future research it would be of great interest to study the feasibility of jointly using supplementary data and AI-based integration models to improve predictions in situations where AF2\u2019s performance level is below 50%. </p></li>\n</ul> \n# FUNDING\n<p align=\"justify\">This work was supported by UNIVERSITY OF SALERNO, [grant numbers ORSA208455, ORSA219407, and ORSA229241]; by MIUR, [grant FFABR2017 and PRIN 2017 program, grant number: 2017483NH8]; and by BANCA D\u2019ITALIA (NDA, AM).</p> \n# ACKNOWLEDGMENT\n<p align=\"justify\">This work used MARCONI100 (https://www.hpc.cineca.it/hardware/marconi100) at HPC@CINECA, which is provided under ELIXIR, the research infrastructure for life-science data.</p> \n"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.998924734096916,
      "result": {
        "original_header": "CONCLUSIONS",
        "type": "Text_excerpt",
        "value": "<ul>\n    <li><p align=\"justify\">While AF2 has achieved remarkable accuracy in predicting protein structure, our study has highlighted the potential for further improvement. We have demonstrated that, in principle, by combining this cutting-edge deep learning tool with traditional modeling strategies, it is possible to achieve a substantial improvement in the quality of a protein\u2019s tertiary structure, especially in terms of GDT_TS. Only where AF2 fails to achieve high quality results on average and top-two best comparisons over these targets: T1029-D1, T1043-D1, T1047s1-D1, 7MSW-D1, our AlphaMod procedures cannot significantly improve prediction accuracy.</p></li>\n    <li><p align=\"justify\">Furthermore, as described in Section 2 and Supplementary File  4, Tables 1-4, large-scale protein predictions can be effectively applied, thanks to the automation integrated into the AlphaMod pipeline, spanning from data retrieval to automatic processing. Finally, our pipeline provides a unified platform for comprehensive protein structural quality assessment, encompassing several metrics. This addresses the current challenge where these tools are dispersed across multiple service providers. AlphaMod, on the other hand, offers an integrated solution by centralizing all these quality assessment tools within a single, easily accessible platform.</p></li>\n    <li><p align=\"justify\">The current pipeline is only the first brick for the development of a tool that will also handle heterogeneous information, in addition to sequence-related features, to perform better predictions for selected subsets of proteins, with non-common structural features. According to our research, the addition of supplementary data has the potential to improve the predictive accuracy in most of the predicted models.</p></li>\n    <li><p align=\"justify\">Moreover, in future research it would be of great interest to study the feasibility of jointly using supplementary data and AI-based integration models to improve predictions in situations where AF2\u2019s performance level is below 50%. </p></li>\n</ul>\n \n"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.914963053755099,
      "result": {
        "original_header": "FUNDING",
        "type": "Text_excerpt",
        "value": "<p align=\"justify\">This work was supported by UNIVERSITY OF SALERNO, [grant numbers ORSA208455, ORSA219407, and ORSA229241]; by MIUR, [grant FFABR2017 and PRIN 2017 program, grant number: 2017483NH8]; and by BANCA D\u2019ITALIA (NDA, AM).</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9123558490793737,
      "result": {
        "type": "Text_excerpt",
        "value": "AlphaMod\nAn Automated Pipeline Integrating AlphaFold 2 and Modeller for Protein Structure Prediction \n"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Fabio-Gil-Z/AlphaMod/tree/main/AlphaFold_Section/alphafold/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Fabio-Gil-Z/AlphaMod/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/notebooks/AlphaFold.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/notebooks/AlphaFold.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Fabio-Gil-Z/AlphaMod/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fabio-Gil-Z/AlphaMod"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Structure_Assessment_Section/GDT_TS/superposition_and_GDT_TS.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Structure_Assessment_Section/GDT_TS/Zemla_GDT_TS_admin_permissions.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/scripts/download_alphafold_params.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/scripts/download_mgnify.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/scripts/download_pdb70.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/scripts/download_uniprot.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/scripts/download_bfd.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/scripts/download_uniref90.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/scripts/download_all_data.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/scripts/download_pdb_seqres.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/scripts/download_pdb_mmcif.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/scripts/download_uniref30.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/scripts/download_small_bfd.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Modeller_Section/modeller10.4/bin/modpy.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Images/Figure_01.png"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Images/highlights.png"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Images/Table_1.png"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Images/Table_2.png"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Images/Figure_02.PNG"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Images/Figure_03.png"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Images/Supplementary_Table_Evaluation_Units.png"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Images/Supplementary_Table_1.png"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Images/Supplementary_Table_2.png"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9705844776411083,
      "result": {
        "original_header": "AlphaMod - <a href=\"https://www.sciencedirect.com/science/article/pii/S2001037023004129\">Paper</a> - <a href=\"https://www.csbj.org/article/S2001-0370(23)00412-9/fulltext\">CSBJ</a>",
        "type": "Text_excerpt",
        "value": "# <p align=\"center\">Requirements - Installation - Deployment <br> [USER MANUAL](https://github.com/Fabio-Gil-Z/AlphaMod/blob/main/Supplementary_Files/Supplementary%20File%202.pdf)</p> \n<p  align=\"justify\">\n<span>A:</span> GDT_TS vs <a href=\"https://alphafold.ebi.ac.uk/faq\"> pLDDT</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span>B:</span> GDT_TS vs <a href=\"https://swissmodel.expasy.org/qmean/\">  QMEAN</a>\n</p> \n<p  align=\"justify\">\n<span>C:</span> GDT_TS vs <a href=\"https://prosa.services.came.sbg.ac.at/prosa.php\">Prosa(z-score)</a> &nbsp;&nbsp; <span>D:</span> GDT_TS vs <a href=\"https://saves.mbi.ucla.edu/\">PROCHECK</a> \n</p> \n<p  align=\"justify\">\n<span>E:</span> GDT_TS vs <a href=\"https://salilab.org/modeller/\"> DOPESCORE</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span>F:</span> GDT_TS vs <a href=\"http://molprobity.biochem.duke.edu/\">MOLPROBITY</a> \n</p> \n"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Fabio-Gil-Z/AlphaMod/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "alphafold2, modeller, protein-folding"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/AlphaFold_Section/alphafold/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/Images/DISAMIS_UNISA_tri_logo.png"
      },
      "source": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AlphaMod"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Fabio-Gil-Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 2610219,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 188218,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "SWIG",
        "size": 68451,
        "type": "Programming_language",
        "value": "SWIG"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 49178,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 40656,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Parrot",
        "size": 40370,
        "type": "Programming_language",
        "value": "Parrot"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 10334,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 6207,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 3299,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Fabio-Gil-Z/AlphaMod/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "requirements",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:46:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}