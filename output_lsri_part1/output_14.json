{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing Mercat",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis"
        ],
        "type": "Text_excerpt",
        "value": "If you are publishing results obtained using MerCat2, please cite: <br />\nFigueroa JL*, Redinbo A*, Panyala A, Colby S, Friesen M, Tiemann L, White III RA. 2024. <br />\nMerCat2: a versatile *k-mer* counter and diversity estimator for database-independent property analysis obtained from omics data <br />\n*Bioinformatics Advances*, vbae061 [Bioinformatics Advances](https://doi.org/10.1093/bioadv/vbae061) <br />\n*Co-first authors <br />\n\nBioRxiv pre-print<br />\nFigueroa JL, Panyala A, Colby S, Friesen M, Tiemann L, White III RA. 2022.  <br />\nMerCat2: a versatile *k-mer* counter and diversity estimator for database-independent property analysis obtained from omics data.  <br />\n[bioRxiv](https://www.biorxiv.org/content/10.1101/2022.11.22.517562v1)   <br />\n\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/raw-lab/mercat2"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "CONTACT",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis",
          "Citing Mercat"
        ],
        "type": "Text_excerpt",
        "value": "Please send all queries to [Jose Luis Figueroa III](mailto:jlfiguer@charlotte.edu) <br />\n[Dr. Richard Allen White III](mailto:rwhit101@charlotte.edu)<br />\n[Andrew Redinbo](mailto:aredinbo@charlotte.edu)<br />  \nOr [open an issue](https://github.com/raw-lab/mercat2/issues)\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-24T16:08:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-26T21:12:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MerCat2: python code for versatile k-mer counting and diversity estimation for database independent property analysis for metaome data "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9532378101172534,
      "result": {
        "original_header": "Outputs",
        "type": "Text_excerpt",
        "value": "- Results are stored in the output folder (default 'mercat_results' of the current working directory)\n  - the 'report' folder contains an html report with interactive plotly figures\n    - If at least 4 samples are provided a PCA plot will be included in the html report\n  - the 'tsv' folder contains counts tables in tab separated format\n    - if protein files are given, or the -prod option, a .tsv file is created for each sample containing k-mer count, pI, Molecular Weight, and Hydrophobicity metrics\n    - if nucleotide files are given a .tsv file is created for each sample containing k-mer count and GC content\n  - if .fastq raw reads files are used, a 'clean' folder is created with the clean fasta file.\n  - if the -prod option is used, a 'prodigal' folder is created with the amino acid .faa and .gff files\n  - if the -fgs option is used, a 'fgs' folder is created with the amino acid .faa file \n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9123594377461607,
      "result": {
        "original_header": "Diversity estimation",
        "type": "Text_excerpt",
        "value": "Alpha and Beta diversity metrics provided by MerCat2 are experimental. We are currently working on the robustness of these measures.   \n- euclidean\n- cityblock\n- braycurtis\n- canberra\n- chebyshev\n- correlation\n- cosine\n- dice\n- hamming\n- jaccard\n- mahalanobis\n- manhattan (same as City Block in this case)\n- matching\n- minkowski\n- rogerstanimoto\n- russellrao\n- seuclidean\n- sokalmichener\n- sokalsneath\n- sqeuclidean\n- yule\n \n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9993493418102471,
      "result": {
        "original_header": "Copyright",
        "type": "Text_excerpt",
        "value": "This is copyrighted by University of North Carolina at Charlotte, Jose L. Figueroa III, Andrew Redinbo, and Richard Allen White III.  All rights reserved.  DeGenPrime is a bioinformatic tool that can be distributed freely for academic use only. Please contact us for commerical use. The software is provided \u201cas is\u201d and the copyright owners or contributors are not liable for any direct, indirect, incidental, special, or consequential damages including but not limited to, procurement of goods or services, loss of use, data or profits arising in any way out of the use of this software.<br />\n \n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/raw-lab/mercat2/wiki"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/raw-lab/mercat2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raw-lab/mercat2/master/results/results_2024_02_27/test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/results/results_2024_02_27/test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raw-lab/mercat2/master/doc/mercat_plots.ipynb"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/doc/mercat_plots.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/raw-lab/mercat2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "raw-lab/mercat2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raw-lab/mercat2/master/install_mercat2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raw-lab/mercat2/master/results/run-tests.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raw-lab/mercat2/master/results/mercat-5gnomes_slurm.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raw-lab/mercat2/master/results/results_2023-11-08/run_tests.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raw-lab/mercat2/master/results/results_2023-11-08/helper/kmc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raw-lab/mercat2/master/results/results_2023-11-08/helper/mercat2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raw-lab/mercat2/master/results/results_2023-11-08/helper/jellyfish.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raw-lab/mercat2/master/MerCat2.jpg"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/raw-lab/mercat2/raw/master/doc/PCA.png"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install mamba using conda",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis",
          "Installing MerCat2",
          "Option 1: Bioconda Installer"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nconda activate base\nconda install mamba\n```\n\n- NOTE: Make sure you install mamba in your base conda environment\n- We have found that mamba is faster than conda for installing packages and creating environments. Using conda might fail to resolve dependencies.\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install MerCat2",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis",
          "Installing MerCat2",
          "Option 1: Bioconda Installer"
        ],
        "type": "Text_excerpt",
        "value": "- Available via Bioconda:\n\n```bash\nmamba create -n mercat2 -c conda-forge -c bioconda mercat2\nconda activate mercat2\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 2: Source Installer",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis",
          "Installing MerCat2"
        ],
        "type": "Text_excerpt",
        "value": "- Clone mercat2 from github\n- Run install_mercat2.sh to install all required dependencies\n- This script creates a conda environment for you\n\n```bash\ngit clone https://github.com/raw-lab/mercat2.git\ncd mercat2\nbash install_mercat2.sh\nconda activate mercat2\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9174392026191405,
      "result": {
        "original_header": "Diversity estimation",
        "type": "Text_excerpt",
        "value": "Beta diversity metrics provided: \n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/raw-lab/mercat2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dask, database-independent-analysis, diversity, diversity-estimation, divideandconquer, fastq, k-mer-counting, k-mer-frequency, kmer-frequency-count, metagenomic-analysis, metatranscriptomic-analysis, multiomics, multiomics-data, nucleotides, plotly, protein, python"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright 2024 Richard Allen White III, Jose L Figueroa III and Andrew Redinbo\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mercat2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "raw-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 30539920,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 78041,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 26851,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 7661,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5778,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis"
        ],
        "type": "Text_excerpt",
        "value": "MerCat2 runs on python version 3.9 and higher.\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "external dependencies",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis",
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "MerCat2 can run without external dependencies based on the options used.  \n\nRequired dependencies:\n\n- When a raw read .fastq file is given\n  - [Fastqc](<https://www.bioinformatics.babraham.ac.uk/projects/fastqc/>)\n  - [Fastp](<https://github.com/OpenGene/fastp>)\n\n- For bacteria/archaea rich samples (-prod option)\n  - [Prodigal](<https://github.com/hyattpd/Prodigal>)\n\n- For eukaryote rich samples or general applications (-fgs option)\n  - [FragGeneScanRs](<https://github.com/unipept/FragGeneScanRs>)\n\nThese are available through BioConda, except FragGeneScanRS, which is included in the MerCat2 distribution.  \n\n```bash\nconda install -c bioconda fastqc fastp prodigal\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run mercat2 on a protein file (protein fasta - '.faa')",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis",
          "Usage examples"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nmercat2.py -i file-name.faa -k 3 -c 10\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run mercat2 on a nucleotide file (nucleotide fasta - '.fa', '.fna', '.ffn', '.fasta')",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis",
          "Usage examples"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nmercat2.py -i file-name.fna -k 3 -n 8 -c 10\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run mercat2 on a nucleotide file raw data (nucleotide fastq - '.fastq')",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis",
          "Usage examples"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nmercat2.py -i file-name.fastq -k 3 -n 8 -c 10\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run on many samples within a folder",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis",
          "Usage examples"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nmercat2.py -f /path/to/input-folder -k 3 -n 8 -c 10\n```\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run on sample with prodigal/FragGeneScanRS option (raw reads or nucleotide contigs - '.fa', '.fna', '.ffn', '.fasta', '.fastq')",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis",
          "Usage examples"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nmercat2.py -i /path/to/input-file -k 3 -n 8 -c 10 -prod\n```\n\n```bash\nmercat2.py -i /path/to/input-file -k 3 -n 8 -c 10 -fgs\n```\n\n- the prodigal and FragGeneScanRS options run the k-mer counter on both contigs and produced amino acids\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 22:56:48",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis"
        ],
        "type": "Text_excerpt",
        "value": "usage: mercat2.py [-h] [-i I [I ...]] [-f F] -k K [-n N] [-c C] [-prod] [-fgs] [-s S] [-o O] [-replace] [-lowmem LOWMEM] [-skipclean] [-toupper] [-pca] [--version]\n\n```bash\noptions:\n  -h, --help      show this help message and exit\n  -i I            path to input file(s)\n  -f F            path to folder containing input files\n  -k K            kmer length\n  -n N            no of cores [auto detect]\n  -c C            minimum kmer count [10]\n  -prod           run Prodigal on fasta files\n  -fgs            run FragGeneScanRS on fasta files\n  -s S            Split into x MB files. [100]\n  -o O            Output folder, default = 'mercat_results' in current directory\n  -replace        Replace existing output directory [False]\n  -lowmem LOWMEM  Flag to use incremental PCA when low memory is available. [auto]\n  -skipclean      skip trimming of fastq files\n  -toupper        convert all input sequences to uppercase\n  -pca            create interactive PCA plot of the samples (minimum of 4 fasta files required)\n  --version, -v   show the version number and exit\n```\n\nMercat assumes the input file format based on the extension provided\n\n- raw fastq file: ['.fastq', '.fq']\n- nucleotide fasta: ['.fa', '.fna', '.ffn', '.fasta']\n- amino acid fasta: ['.faa']\n\n- It also accepts gzipped versions of these filetypes with the added '.gz' suffix\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Notes on memory usage and speed",
        "parent_header": [
          "MerCat2: python code for versatile k-mer counter for database independent property analysis (DIPA) for omic analysis"
        ],
        "type": "Text_excerpt",
        "value": "MerCat2 uses a substantial amount of memory when the k-mer is high.  \nRunning MerCat2 on a personal computer using a k-mer length of ~4 should be OK. Total memory usage can be reduced using the Chunker feature (-s option), but keep in mind that in testing when the chunk size is too small (1MB) some of the least significant k-mers will get lost. This does not seem to affect the overall results, but it is something to keep in mind. Using the chunker and reducing the number of CPUs available (-n option) can help reduce memory requirements.  \n  \nThe speed of MerCat2 can be increased when more memory or computer nodes are available on a cluster and using a chunk size of about 100Mb.\n"
      },
      "source": "https://raw.githubusercontent.com/raw-lab/mercat2/master/README.md",
      "technique": "header_analysis"
    }
  ]
}