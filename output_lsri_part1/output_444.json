{
  "application_domain": [
    {
      "confidence": 16.35,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing",
        "type": "Text_excerpt",
        "value": "Please cite this paper when you use <i>Mapinsights</i>.\n\nMapinsights: deep exploration of quality issues and error profiles in high-throughput sequence data, Subrata Das, Nidhan K Biswas, Analabha basu, Nucleic Acids Research, Volume 51, Issue 14, 11 August 2023, Page e75, https://doi.org/10.1093/nar/gkad539\n\n"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/subrata-codeons/mapinsights"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-12T14:34:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-19T10:49:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9935855820785241,
      "result": {
        "original_header": "MapInsights",
        "type": "Text_excerpt",
        "value": "\nMapInsights is an efficient toolkit that perform quality control (QC) analysis of next generation sequencing data. Four different modules namely <b><i>`bamqc`</i></b>, <b><i>`genedepth`</i></b>, <b><i>`siteinfo`</i></b> & <b><i>`jumpreads`</i></b> are designed and developed as a part of this toolkit. Tow other modules <b><i>`multisample-bamqc`</i></b>, <b><i>`batchplot-bamqc`</i></b> also included in our toolkit that work in relation with <b><i>`bamqc`</i></b> module. \n<b><i>bamqc</i></b> is an efficient analytical module that performs QC analysis of alignment files. Along with standard QC metrics, it computes extended sets of logs and plots on base mismatches with respect to reference nucleotide in an overall and context specific manner like combination of reads and strands. A coordinate sorted BAM file and reference file are the primary input to the module. Logs, images and a static report in HTML contains summary statistics and plots are the output of <i>bamqc</i>. \n<b><i>multisample-bamqc</i></b> perform combined analysis on multisample <b><i>bamqc</i></b> results. The module facilitates comparison analysis across multiple samples that allow evaluation of consistency among samples and outlier detection based on different features.Given a set of multisample <b><i>bamqc</i></b> results the module perform hierarchical cluster analysis to estimate the variability. PDF file containging plots (features and tree) and other log files are the output of <i>multisample-bamqc</i>. \n\n<b><i>batchplot-bamqc</i></b> generate batch-plots based on different features. Given multisample <b><i>bamqc</i></b> results in batch-wise manner it output batch-plot of two given group and put them in side-by-side fashion for better comparison.  \n<b><i>genedepth</i></b> module calculate exon or region wise depth of coverage. The module takes genomic coordinates in bed format, a sorted BAM file and reference file as input and generate logs and depth plots which are presented as a report in HTML. \n<b><i>siteinfo</i></b> module query genomic locus in BAM files and provide comprehensive information about the alignment in query sites such as which nucleotides present in that site, their base quality, strands, read mapping quality, insert-size, read-group etc. Referecne fasta, BAM files and genomic coordinate(s) are the main inputs of this module. Genomic coordinate can be passed as argument or a text file contains a list of coordinates can be used for batch query. \n<b><i>jumpreads</i></b> module extract reads with atypical alignment properties such as extra long inserts, mate map to different contigs and exception in read orientation etc. jumpreads acts on a coordinate sorted BAM file which is the primary input of the module and generate a bam file as output.\n \n"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/subrata-codeons/mapinsights/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/subrata-codeons/mapinsights/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "subrata-codeons/mapinsights"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MapInsights"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/subrata-codeons/mapinsights/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mapinsights"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "subrata-codeons"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 506043,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 10125,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2312,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "subrata-codeons",
          "type": "User"
        },
        "date_created": "2023-06-06T08:17:49Z",
        "date_published": "2023-06-06T08:44:16Z",
        "description": "_Mapinsights_ first release",
        "html_url": "https://github.com/subrata-codeons/mapinsights/releases/tag/v1.0.0",
        "name": "Mapinsights",
        "release_id": 107472492,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/subrata-codeons/mapinsights/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/subrata-codeons/mapinsights/releases/107472492",
        "value": "https://api.github.com/repos/subrata-codeons/mapinsights/releases/107472492",
        "zipball_url": "https://api.github.com/repos/subrata-codeons/mapinsights/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Requirements:**",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "<b>- R</b>  <i>` -ggplot2, -ggdendro, -gridExtra `</i>\n"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:45:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Getting started:**",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```\ngit clone https://github.com/subrata-codeons/mapinsights\ncd mapinsights; make\n```\nOR\n\ndownload the comprass file and\n```\nunzip mapinsights-master\ncd mapinsights-master; make\n```"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**mapinsights**",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nProgram: mapinsights\nVersion: 1.0\n\nUsage:   mapinsights <command> [options]\n\nCommand: bamqc        QC of alignment file\n\t multisample-bamqc\tMulti-sample QC analysis based on bamqc results\n         batchplot-bamqc\tPlotting multi-sample bamqc results\n         genedepth    Estimate exon-wise bed coverage\n         siteinfo     Details information about genomic site(s)\n         jumpreads    Extract reads with jump alignment\n```\n"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**mapinsights-bamqc**",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nUsage:  mapinsights bamqc -r <ref.fa> -o <output-folder-path> -i <aligned.bam>\n\nOptions:\n\t-r   ref.fa                        reference fasta\n\t-b   bed file                      regions (BED) [null]\n\t-i   input file                    Alignment file (BAM)\n\t-o   output folder                 [./]\n\t-x   exclude read groups\n             listed in FILE, one per line  [null]\n\t-h   help\n```"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**mapinsights-multisample-bamqc**",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nUsage:  mapinsights multisample-bamqc -i <folder_path.list>\n\nOptions:\n\t-r   folder_path.list\n\t-h   help\n\nAbout input file structure:\nfolder_path.list file containing a list of bamqc output folder path, one per line.\n\nThere are two tab separated columns in the input file (folder_path.list), \nfirst column should be sample_id and the second column should be the path to \nbamqc output folder. Example structure of the file is given below:\n\n [sample1\tpath_to_bamqc_output_folder_of_sample1]\n [sample2\tpath_to_bamqc_output_folder_of_sample2]\n [  .\t       .                                      ]\n [  .\t       .                                      ]\n [sampleN\tpath_to_bamqc_output_folder_of_sampleN]\n```"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**mapinsights-batchplot-bamqc**",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nUsage:  mapinsights multisample-bamqc -1 <bamqc_folder_path_for_batch1.list> -2 <bamqc_folder_path_for_batch2.list>\n\nOptions:\n\t-1   bamqc_folder_path_for_batch1.list\n\t-2   bamqc_folder_path_for_batch2.list\n\t-h   help\nAbout input file structure:\nfolder_path_for_batch1/2.list file containing a list of bamqc output folder path, one per line.\n\nThere are two tab separated columns in the input file (folder_path.list), \nfirst column should be sample_id and the second column should be the path to \nbamqc output folder. Example structure of the file is given below:\n\n [sample1\tpath_to_bamqc_output_folder_of_sample1]\n [sample2\tpath_to_bamqc_output_folder_of_sample2]\n [  .\t       .                                      ]\n [  .\t       .                                      ]\n [sampleN\tpath_to_bamqc_output_folder_of_sampleN]\n```"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**mapinsights-genedepth**",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nUsage:  mapinsights genedepth -r <ref.fa> -o <output-folder> -i <aligned.bam> -b <gene.bed>\n\nOptions:\n\t-r  ref.fa              reference fasta\n\t-b  gene bed file\tregions (BED)\n\t-i  input file          Alignment file (BAM)\n\t-o  output folder\t[./] \n\t-h  help\n```"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**mapinsights-siteinfo**",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nUsage: mapinsights siteinfo -r <ref.fa> -i <aligned.bam> \n\nOptions:\n\t-r  ref.fa                \treference fasta\n\t-i  input file            \tAlignment file (BAM)\n\t-o  output file \n\t-s  query coordinate (single)   [chr#:position-position]\n\t-p  query coordinate (batch)\n\t    listed in FILE, one per line     [example :chr#\tpos]\n\t-h  help\n\n```"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**mapinsights-jumpreads**",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nUsage: mapinsights jumpreads -o <output-file> -i <aligned.bam>\n\nOptions:\n\t-s  minimum insertsize\t\t[1k]\n\t-i  input file\t\t\tAlignment file (BAM)\n\t-o  output \t\t\tAlignment file (BAM)\n\t-c  maximum overlap between outward pair(range : [0 to readlength-1])\t[90 bases]\n\t\n\n```\n[Mapinsights-bamqc module report (example)](https://subrata-codeons.github.io/Demo/Bamqc.html#GC%20content%20distribution)\n\n[Mapinsights-genedepth module report (example)](https://subrata-codeons.github.io/Demo/Gene_depth.html#GC%20content%20distribution)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/subrata-codeons/mapinsights/main/README.md",
      "technique": "header_analysis"
    }
  ]
}