{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "ReporTree"
        ],
        "type": "Text_excerpt",
        "value": "If you run ReporTree, please cite the publication:    \n[Mix\u00e3o V, Pinto M, Sobral D, Di Pasquale A, Gomes JP, Borges V (2023) ReporTree: a surveillance-oriented tool to strengthen the linkage between pathogen genetic clusters and epidemiological data. _Genome Medicine_. doi: 10.1186/s13073-023-01196-1](https://genomemedicine.biomedcentral.com/articles/10.1186/s13073-023-01196-1)\n\nAlso, ReporTree relies on the work of other developers. So, depending on the functionalities you use, there are other tools that you must cite:\n1. Grapetree: http://www.genome.org/cgi/doi/10.1101/gr.232397.117 (if you requested a grapetree analysis)\n2. TreeCluster: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6705769/pdf/pone.0221068.pdf (if you provided a newick tree)\n3. vcf2mst: https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-021-08112-0 (if you provided a vcf or a list of variants)\n4. ComparingPartitions: https://journals.asm.org/doi/10.1128/jcm.02536-05?permanently=true (if you requested \"stability_regions\")\n5. Adjusted Wallace and cluster stability: https://www.biorxiv.org/content/10.1101/299347v1 (if you requested \"stability_regions\")\n6. Ete3: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4868116/pdf/msw046.pdf (if you provided a newick tree)     \n7. cgmlst-dists: https://github.com/tseemann/cgmlst-dists for original code and https://github.com/genpat-it/cgmlst-dists for improvements regarding memory efficiency \n8. snp-sites: https://www.microbiologyresearch.org/content/journal/mgen/10.1099/mgen.0.000056 (if you provided a multi-sequence alignment)\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/insapathogenomics/ReporTree"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-15T16:19:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-30T03:39:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A surveillance-oriented tool to strengthen the linkage between pathogen genetic clusters and epidemiological data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note on the columns for summary reports",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "This argument is used to select the columns that will be provided in the summary report.\n-\tTo take the most profit of ReporTree, we recommend that you include the column 'date' in your metadata. This column must follow the format YYYY-MM-DD. If you only provide YYYY or YYYY-MM, it will assume YYYY-01-01!\n-\tIf a 'date' column is provided in the metadata, ReporTree will determine and provide in the new metadata table the columns:\n    - iso_year\n    - iso_week_nr \n    - iso_week\n-\tWhile for nominal or categorical variables ReporTree can provide in the summary report the number of observations (\u2018n_column\u2019) or the frequency of each observation, for the 'date' column this script can provide:\n    - first_seq_date\n    - last_seq_date\n    - timespan_days\n-\tThe columns of the summary reports are defined by the \u2018--columns_summary_report\u2019 argument. To know the columns that you can include based on your metadata table and the outputs of ReporTree, write the full command line and add the argument \u2018--list\u2019 in the end. This will give you a list of the possible columns that your summary reports can include, i.e. that you can request in \u2018--columns_summary_report\u2019.\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9856623011840533,
      "result": {
        "original_header": "ReporTree",
        "type": "Text_excerpt",
        "value": "\n**Genomics-informed pathogen surveillance** strengthens public health decision-making, thus playing an important role in infectious diseases\u2019 prevention and control. A pivotal outcome of genomics surveillance is the **identification of pathogen genetic clusters/lineages and their characterization in terms of geotemporal spread or linkage to clinical and demographic data**. This task usually relies on the visual exploration of (large) phylogenetic trees (e.g. Minimum Spanning Trees (MST) for bacteria or rooted SNP-based trees for viruses). As this may be a non-trivial, non-reproducible and time consuming task, we developed **ReporTree, a flexible pipeline that facilitates the detection of genetic clusters and their linkage to epidemiological data**.  \n\n_ReporTree can help you to:_      \n- obtain **genetic clusters at any threshold level(s)** of a tree, SNP or cg/wgMLST allele matrix, VCF files, sequence alignment, or distance matrix\n- obtain **summary reports with the statistics/trends** (e.g., timespan, location, cluster/group composition, age distribution etc.) for the derived genetic clusters or for any other provided grouping variable (e.g., clade, lineage, ST, vaccination status, etc.)\n- obtain **count/frequency matrices** for the derived genetic clusters or for any other provided grouping variable\n- identify the phylogenetic context of **samples of interest** through a zoom-in on their clusters and/or through an in-depth analysis with the closest related samples\n- maintain **cluster nomenclature** between runs and generate **hierarchical codes** at your levels of interest  \n- identify **regions of cluster stability** (i.e., threshold ranges in which cluster composition is similar), a key step for pathogen-specific nomenclature design \n\nIn summary, ReporTree facilitates and accelerates the production of surveillance-oriented reports, thus contributing to a sustainable and efficient public health genomics-informed pathogen surveillance. \n_Note: this tool relies on the usage of programs/modules of other developers. DO NOT FORGET TO ALSO [CITE](https://github.com/insapathogenomics/ReporTree/edit/main/README.md#citation) THEM!_\n \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9863741474273394,
      "result": {
        "original_header": "2024.07.26 - ReporTree v2.5.0",
        "type": "Text_excerpt",
        "value": "We release a new version of ReporTree that brings important new features: \n1. A **new argument '--loci'**, which allows the user to provide a list of loci of interest (e.g. cgMLST). If this list is provided, the main clustering analysis will be performed only for these loci, even if the allele matrix has additional ones (e.g. wgMLST schema). \n2. A **new behavior of '--zoom-cluster-of-interest' and '--subtree-of-interest' arguments**. Until v2.4.1, these options for cluster zoom-in/subtree did not take into consideration the loci used in the main analysis. Instead, they would identify the loci present in the samples of the cluster of interest exclusively based on the '--site-inclusion' argument. **From v2.5.0 on**, the zoom-in/subtree of clusters of interest (i.e. the application of '--zoom-cluster-of-interest' and/or '--subtree-of-interest' arguments) will always rely on the same set of loci as the main analysis and extend it with additional loci that pass the '--site-inclusion' criteria.\n3. A **new behavior of '--loci-called'** when performing cluster zoom-in/subtree. Until v2.4.1, the '--loci-called' was applied in cluster zoom-in/subtree. This was sometimes leading to the exclusion of some samples of the cluster of interest in the zoom-in/subtree because they did not have enough loci called. To avoid this situation, **from v2.5.0 on**, the '--loci-called' is only applied in the initial analysis. In the zoom-in/subtree analyses '--loci-called' is not taken into consideration and all samples that passed the filter in the initial analysis are used. \n_**Notes:**_\n- _For details on the behavior of cluster zoom-in/subtree options, please check the section [Cluster zoom-in and subtree of interest](https://github.com/insapathogenomics/ReporTree#cluster-zoom-in-and-subtree-of-interest)_\n- _We now provide the lists of cgMLST loci of S. enterica, E. coli and C. jejuni INNUENDO schemas in the [useful_loci_lists](https://github.com/insapathogenomics/ReporTree/tree/main/useful_loci_lists) directory._\n \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9985159497766087,
      "result": {
        "original_header": "2024.04.02 - ReporTree v2.4.1",
        "type": "Text_excerpt",
        "value": "We release a new version of ReporTree that is compatible with [SPREAD](https://github.com/genpat-it/spread), an extended version of GrapeTree. With this new version of ReporTree:\n1. A new column named \"category\" is added to the _metadata_w_patitions.tsv_ in order to tag the samples of interest\n2. A new optional argument ('--unzip') can be povided in order to output the results of '--zoom-cluster-of-interest' and '--subtree-of-interest' in unzipped format\n3. Whenever '--zoom-cluster-of-interest' or '--subtree-of-interest' arguments are used, a file *zooms.txt* is provided for automated visualization of the zoom-in trees/subtrees with SPREAD \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9624821480147726,
      "result": {
        "original_header": "Implementation",
        "type": "Text_excerpt",
        "value": "ReporTree is implemented in python 3.8 and comprises six main scripts available in standalone mode that are orchestrated by _reportree.py_ (see details in [ReporTree wiki](https://github.com/insapathogenomics/ReporTree/wiki/1.-Implementation#reportree-modular-organization)). \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9448581570264246,
      "result": {
        "original_header": "Input files",
        "type": "Text_excerpt",
        "value": "Metadata table in .tsv format (please avoid headers with blank spaces)           \n**AND (optionally)**         \nNewick tree which will be used to obtain genetic clusters       \n**OR**      \nAllele/SNP profile matrix which will be used to obtain genetic clusters from a MST      \n**OR**  \nSequence alignment which will be converted into a profile and used to obtain genetic clusters  \n**OR**  \nVCF which will be converted into a profile and used to obtain genetic clusters    \n**OR**   \nTSV with a list of mutations per samples which will be converted into a profile and used to obtain genetic clusters    \n**OR**     \nDistance matrix which will be used to obtain genetic clusters       \n**OR**  \nPartitions table (i.e. matrix with genetic clusters) in .tsv format (columns should not have blank spaces)        \nIn the following table we summarize the different options that ReporTree provides to determine genetic clusters, as well as the different types of file that each of them can take as input: \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9430343518745522,
      "result": {
        "original_header": "Main output files",
        "type": "Text_excerpt",
        "value": "- metadata_w_partitions.tsv - initial metadata information with additional columns comprising information on the genetic clusters at different partitions and nomenclature code \n_TIP: Users can interactively visualize and explore the ReporTree derived clusters by uploading this metadata_w_partitions.tsv table together with either the original newick tree (e.g. rooted SNP-scaled tree) or the dendrogram resulting from hierarchical clustering at [auspice.us](https://auspice.us) or the MST resulting from GrapeTree at [GrapeTree](https://github.com/achtman-lab/GrapeTree) or [SPREAD](https://github.com/genpat-it/spread). With these tools your dataset is visualised from the client-side in the browser._ \n- partitions_summary.tsv - summary report with the statistics/trends (e.g. timespan, location range, cluster/group size and composition, age distribution etc.) for the derived genetic clusters present in partitions.tsv (note: singletons are not reported in this file but indicated in metadata_w_partitions.tsv)\n- SAMPLES_OF_INTEREST_partitions_summary.tsv - similar to partitions_summary.tsv but exclusively for the samples of interest     \n- variable_summary.tsv - summary report with the statistics/trends (e.g. timespan, location range, cluster/group size and composition, age distribution etc.) for any (and as many) grouping variable present in metadata_w_partitions.tsv (such as, clade, lineage, ST, vaccination status, etc.)\n- partitions.tsv - genetic clusters obtained for each user-selected partition threshold\n- nomenclature_changes.tsv - record of all cluster alterations in terms of nomenclature and composition\n- freq_matrix.tsv - frequencies of grouping variable present in metadata_w_partitions.tsv (e.g. lineage, ST, etc.) across another grouping variable (e.g. iso_week, country, etc.)\n- count_matrix.tsv - counts of a grouping variable present in metadata_w_partitions.tsv (e.g. lineage, ST, etc.) across another grouping variable (e.g. iso_week, country, etc.)\n- metrics.tsv - metrics resulting from the cluster congruence analysis, with indication of the Adjusted Wallace and the Ajusted Rand coefficients for each comparison of subsequent partitions, and the Simpson's Index of Diversity for each partition.\n- stableRegions.tsv - partition ranges for which Adjusted Wallace coefficient is higher than the cut-off defined by the user (useful to study cluster stability and infer possible nomenclature) \n- Newick file with the dendrogram resulting of the hierarchical clustering analysis or with the minimum spanning tree of GrapeTree\n- .zip - compressed folders with the output files of a high resolution analysis of the clusters with samples of interest and of the N closest samples to the samples of interest\n- zooms.txt - list of output folders containing the outputs of '--zoom-cluster-of-interest' and/or '--subtree-of-interest'. This file is required for visualization of the zoom-in trees/subtrees with SPREAD. \n_Note: This is the [Figure 1](https://genomemedicine.biomedcentral.com/articles/10.1186/s13073-023-01196-1/figures/1) of [ReporTree publication](https://genomemedicine.biomedcentral.com/articles/10.1186/s13073-023-01196-1). For details please check the respective caption._ \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9308168796653017,
      "result": {
        "original_header": "Nomenclature",
        "type": "Text_excerpt",
        "value": "ReporTree cluster names follow a regular expression:\n- cluster_N - for each genetic cluster (i.e. >= 2 samples) found at each threshold of the current analysis (e.g. cluster_1)\n- singleton_N - for each sample that does not belong to a cluster at a given threshold of the current analysis (e.g. singleton_1) \nTo facilitate routine surveillance and cluster monitoring over time, the user can provide the 'partitions.tsv' from the previous run in the '--nomenclature-file' argument, and ReporTree will use this information to (re)name the clusters in the current run. Below, we show a summary of the behavior of the \u201cCluster Nomenclature System\u201d in some of the most common situations in a routine surveillance scenario: \n_Details about these and other situations are presented in the following table:_ \n\nOf note, to increase the flexibility of the nomenclature system, ReporTree also allows the users to change the regular expression for cluster nomenclature (i.e., starting with \u201ccluster_\u201d or \u201csingleton_\u201d) by other nomenclature of interest (e.g., other official codes for outbreaks, genogroups, etc.), which will be kept afterwards. If the cluster/singleton names do not follow ReporTree's regular expression, the rules mentioned in the above table will be applied, except for the particular situation in which the name a former singleton does not follow ReporTree's regular expression. In this case, if a sigleton named as 'mycode' integrates a cluster only with new samples, this new cluster will be named 'mycode'.\n \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9473029927583183,
      "result": {
        "original_header": "Cluster zoom-in and subtree of interest",
        "type": "Text_excerpt",
        "value": "ReporTree cluster zoom-in (i.e. the application of '--zoom-cluster-of-interest' and '--subtree-of-interest' arguments) was designed to allow a gain of resolution in clusters of interest by dynamically increasing their set of core loci. \n  \u2022\tThe \"zoom-in\" step will include *all loci/sites used in the main clustering analysis*, either defined by the '--loci' argument or the '-\u2013site-inclusion' argument (when -\u2013loci is not used), **PLUS** *extra loci/sites* that are added according to the user-defined '--site-inclusion' parameter. \n  \u2022\tThe '--loci-called' argument is not applied at the \"zoom-in\" step, so the cluster composition (i.e., the isolates that compose the cluster of interest) remains unchanged in this high resolution analysis. \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/insapathogenomics/ReporTree/wiki/1.-Implementation#reportree-modular-organization"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/insapathogenomics/ReporTree/wiki/5.-Examples#outbreak-detection---bacterial-foodborne-pathogen-eg-listeria-monocytogenes"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/insapathogenomics/ReporTree/wiki/5.-Examples#large-scale-genetic-clustering-and-linkage-to-antibiotic-resistance-data-eg-neisseria-gonorrhoeae"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/insapathogenomics/ReporTree/wiki/5.-Examples#routine-surveillance---viral-pathogen-eg-sars-cov-2"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/insapathogenomics/ReporTree/wiki"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/insapathogenomics/ReporTree/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "insapathogenomics/ReporTree"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ReporTree"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/19263468/228320038-424ca291-d1be-4b32-9222-40f8758547d4.png"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/19263468/228320038-424ca291-d1be-4b32-9222-40f8758547d4.png"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/assets/19263468/9047702b-5ad9-41d5-9a9e-a00e1d3add79"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/assets/19263468/eea36fe7-113e-47cb-9eba-912e0d36f57a"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/19263468/230396669-94077006-3593-4a78-bc6d-dd1fe1598092.png"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/user-attachments/assets/37c8b822-0a5f-4f20-bd98-168dbc5480c6"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation with conda",
        "parent_header": [
          "ReporTree",
          "Installation and dependencies"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ngit clone https://github.com/insapathogenomics/ReporTree\ncd ReporTree/scripts\ngit clone https://github.com/insapathogenomics/GrapeTree.git\ngit clone https://github.com/insapathogenomics/ComparingPartitions.git\ngit clone https://github.com/insapathogenomics/vcf2mst.git\ncd ..\nconda env create --name reportree --file=reportree_env.yml\n```\n\n_Note: If you are using Mac OS X, please use reportree_env_osx.yml to create the conda environment!_\n\n  \nActivate conda environment\n```bash\nconda activate reportree\n```\n\nRun pytest to check that your installation was well succeeded\n```bash\npytest\n```\n\nRun ReporTree:\n```bash\npython reportree.py -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation with Docker",
        "parent_header": [
          "ReporTree",
          "Installation and dependencies"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ndocker pull insapathogenomics/reportree:v2.5.2\n```\n\nRun ReporTree:\n```bash\ndocker run insapathogenomics/reportree:v2.5.2 reportree.py -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9661524959147463,
      "result": {
        "original_header": "ReporTree",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n  <img width=\"300\" height=\"180\" src=https://user-images.githubusercontent.com/19263468/189874644-00ff1b8b-1d1d-4d69-80df-0bd5893a9df2.png>\n</p> \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9860274879114748,
      "result": {
        "original_header": "Input files",
        "type": "Text_excerpt",
        "value": "_**Nomenclature only:** If you want to maintain cluster names between ReporTree runs, you should also provide the partitions table of the previous run._ \n<p align=\"center\">\n<img width=\"1038\" alt=\"Captura de ecra\u0303 2023-03-28, a\u0300s 18 26 09\" src=\"https://user-images.githubusercontent.com/19263468/228320038-424ca291-d1be-4b32-9222-40f8758547d4.png\">\n</p> \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9981867684551008,
      "result": {
        "original_header": "Main output files",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n<img width=\"700\" alt=\"Figure1_v3\" src=\"https://github.com/insapathogenomics/ReporTree/assets/19263468/9047702b-5ad9-41d5-9a9e-a00e1d3add79\">\n</p> \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9967743358589533,
      "result": {
        "original_header": "Nomenclature",
        "type": "Text_excerpt",
        "value": "<img width=\"1111\" alt=\"Captura de ecra\u0303 2023-04-06, a\u0300s 14 42 41\" src=\"https://user-images.githubusercontent.com/19263468/230396669-94077006-3593-4a78-bc6d-dd1fe1598092.png\"> \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9006236042605799,
      "result": {
        "original_header": "Cluster zoom-in and subtree of interest",
        "type": "Text_excerpt",
        "value": "  \u2022\tThe \"zoom-in\" step will include *all loci/sites used in the main clustering analysis*, either defined by the '--loci' argument or the '-\u2013site-inclusion' argument (when -\u2013loci is not used), **PLUS** *extra loci/sites* that are added according to the user-defined '--site-inclusion' parameter. \n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genetic-clusters, genomics-informed-surveillance, surveillance-oriented-reports"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ReporTree"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "insapathogenomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 292251,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1080,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vmixao",
          "type": "User"
        },
        "date_created": "2024-09-09T14:14:35Z",
        "date_published": "2024-09-09T14:16:09Z",
        "description": "This new release fixes an bug when running a hierarchical clustering analysis and the name of the samples correspond to letters present in the IUPAC table.",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v2.5.2",
        "name": "v2.5.2",
        "release_id": 174142615,
        "tag": "v2.5.2",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v2.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/174142615",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/174142615",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v2.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vmixao",
          "type": "User"
        },
        "date_created": "2024-07-26T14:03:59Z",
        "date_published": "2024-07-26T14:07:36Z",
        "description": "This new version of ReporTree is the same as v2.5.0 but with a new directory where the users can find some useful lists of loci to take advantage of the new features.\r\n\r\nAs a reminder, v2.5 brings important new features:\r\n\r\n1. A **new argument '--loci'**, which allows the user to provide a list of loci of interest (e.g. cgMLST). If this list is provided, the main clustering analysis will be performed only for these loci, even if the allele matrix has additional ones (e.g. wgMLST schema).\r\n\r\n2. A **new behavior of '--zoom-cluster-of-interest' and '--subtree-of-interest'** arguments. Until v2.4.1, these options for cluster zoom-in/subtree did not take into consideration the loci used in the main analysis. Instead, they would identify the loci present in the samples of the cluster of interest exclusively based on the '--site-inclusion' argument. **From v2.5.0 on**, the zoom-in/subtree of clusters of interest (i.e. the application of '--zoom-cluster-of-interest' and/or '--subtree-of-interest' arguments) will always rely on the same set of loci as the main analysis and extend it with additional loci that pass the '--site-inclusion' criteria.\r\n\r\n3. A **new behavior of '--loci-called'** when performing cluster zoom-in/subtree. Until v2.4.1, the '--loci-called' was applied in cluster zoom-in/subtree. This was sometimes leading to the exclusion of some samples of the cluster of interest in the zoom-in/subtree because they did not have enough loci called. To avoid this situation, **from v2.5.0 on**, the '--loci-called' is only applied in the initial analysis. In the zoom-in/subtree analyses '--loci-called' is not taken into consideration and all samples that passed the filter in the initial analysis are used. ",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v2.5.1",
        "name": "v2.5.1",
        "release_id": 167374365,
        "tag": "v2.5.1",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v2.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/167374365",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/167374365",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v2.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vmixao",
          "type": "User"
        },
        "date_created": "2024-07-26T12:39:47Z",
        "date_published": "2024-07-26T13:58:18Z",
        "description": "We release a new version of ReporTree that brings important new features:\r\n\r\n1. A **new argument '--loci'**, which allows the user to provide a list of loci of interest (e.g. cgMLST). If this list is provided, the main clustering analysis will be performed only for these loci, even if the allele matrix has additional ones (e.g. wgMLST schema).\r\n\r\n2. A **new behavior of '--zoom-cluster-of-interest' and '--subtree-of-interest'** arguments. Until v2.4.1, these options for cluster zoom-in/subtree did not take into consideration the loci used in the main analysis. Instead, they would identify the loci present in the samples of the cluster of interest exclusively based on the '--site-inclusion' argument. **From v2.5.0 on**, the zoom-in/subtree of clusters of interest (i.e. the application of '--zoom-cluster-of-interest' and/or '--subtree-of-interest' arguments) will always rely on the same set of loci as the main analysis and extend it with additional loci that pass the '--site-inclusion' criteria.\r\n\r\n3. A **new behavior of '--loci-called'** when performing cluster zoom-in/subtree. Until v2.4.1, the '--loci-called' was applied in cluster zoom-in/subtree. This was sometimes leading to the exclusion of some samples of the cluster of interest in the zoom-in/subtree because they did not have enough loci called. To avoid this situation, **from v2.5.0 on**, the '--loci-called' is only applied in the initial analysis. In the zoom-in/subtree analyses '--loci-called' is not taken into consideration and all samples that passed the filter in the initial analysis are used.",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v2.5.0",
        "name": "v2.5.0",
        "release_id": 167373505,
        "tag": "v2.5.0",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v2.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/167373505",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/167373505",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v2.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vmixao",
          "type": "User"
        },
        "date_created": "2024-04-02T11:38:16Z",
        "date_published": "2024-04-02T11:44:00Z",
        "description": "We release a new version of ReporTree that is compatible with [SPREAD](https://github.com/genpat-it/spread), an extended version of GrapeTree. With this new version of ReporTree:\r\n1. A new column named \"category\" is added to the _metadata_w_patitions.tsv_ in order to tag the samples of interest\r\n2. A new optional argument ('--unzip') can be povided in order to output the results of '--zoom-cluster-of-interest' and '--subtree-of-interest' in unzipped format\r\n3. Whenever '--zoom-cluster-of-interest' or '--subtree-of-interest' arguments are used, a file *zooms.txt* is provided for automated visualization of the zoom-in trees/subtrees with SPREAD",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v2.4.1",
        "name": "v2.4.1",
        "release_id": 149376487,
        "tag": "v2.4.1",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v2.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/149376487",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/149376487",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v2.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vmixao",
          "type": "User"
        },
        "date_created": "2024-03-19T15:01:20Z",
        "date_published": "2024-03-19T15:06:17Z",
        "description": "This new release fixes two import issues in ReporTree:\r\n1. The process of filtering a distance matrix based on metadata was not working.\r\n2. The report of nomenclature changes was not working properly in situations for which multiple clusters were merged.\r\n\r\nBoth situations were fixed.",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v2.3.0",
        "name": "v2.3.0",
        "release_id": 147260262,
        "tag": "v2.3.0",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v2.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/147260262",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/147260262",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v2.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vmixao",
          "type": "User"
        },
        "date_created": "2023-09-04T16:12:13Z",
        "date_published": "2023-09-04T16:27:51Z",
        "description": "Fix bugs in:\r\n1. _reportree.py_: Fix behavior with samples of interest\r\n2. _alignment_processing.py_: Fix efficiency of corresponding coordinates",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v2.0.3",
        "name": "v2.0.3",
        "release_id": 119840966,
        "tag": "v2.0.3",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v2.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/119840966",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/119840966",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v2.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vmixao",
          "type": "User"
        },
        "date_created": "2023-05-22T16:00:47Z",
        "date_published": "2023-05-22T16:01:22Z",
        "description": "ReporTree v2 is officially released. This version comprises an updated version of the tool that corresponds to the version at the time of publication. ",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v2.0.2",
        "name": "v2.0.2 (version of the manuscript)",
        "release_id": 103836887,
        "tag": "v2.0.2",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v2.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/103836887",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/103836887",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v2.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vmixao",
          "type": "User"
        },
        "date_created": "2022-12-15T01:08:20Z",
        "date_published": "2022-12-15T01:14:06Z",
        "description": "This release fixes an error introduced during the last update of ReporTree (v1.1.0) in the argument '--HC-threshold'. We advise everyone using v1.1.0 and v1.1.1 to upload to v1.1.2.",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v1.1.2",
        "name": "v1.1.2",
        "release_id": 86101776,
        "tag": "v1.1.2",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/86101776",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/86101776",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vmixao",
          "type": "User"
        },
        "date_created": "2022-12-08T11:05:58Z",
        "date_published": "2022-12-08T11:11:59Z",
        "description": "This release fixes the behavior of the arguments '--loci-called' and '--sample-ATCG-content' when the value 1.0 was provided.",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v1.1.1",
        "name": "v1.1.1",
        "release_id": 85419017,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/85419017",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/85419017",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vmixao",
          "type": "User"
        },
        "date_created": "2022-12-07T01:40:50Z",
        "date_published": "2022-12-07T02:16:20Z",
        "description": "This new version of ReporTree fixes the minor bugs identified thus far and has new important features:\r\n\r\n_**New argument: '--pct_threshold'**_\r\nSpecific for analyses using GrapeTree. With this argument you can specify the threshold for cluster definition as the proportion of allelic/SNP differences in the final allelic schema size or number of informative positions. This option is particularly useful for dynamic wgMLST analyses.\r\n_**New argument: '--pct-HC-threshold'**_\r\nSimilar to the previous one, but specific for analyses using Hierarchical Clustering.\r\n_**New argument: '--root'**_\r\nSpecific for analyses using TreeCluster (i.e. tree as input). With this argument you can specify the name of a sample that should be used as outgroup to root your tree or root the tree at midpoint.",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 85242412,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/85242412",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/85242412",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vmixao",
          "type": "User"
        },
        "date_created": "2022-10-07T09:57:53Z",
        "date_published": "2022-10-07T09:59:25Z",
        "description": "This release fixed the bug in the argument of samples of interest. Now it is possible to provide only one sample. ",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v1.0.1",
        "name": "Update",
        "release_id": 79252572,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/79252572",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/79252572",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "insapathogenomics",
          "type": "User"
        },
        "date_created": "2022-09-28T16:09:44Z",
        "date_published": "2022-09-29T15:36:32Z",
        "description": "This is the first release of ReporTree. For those who have already been using this tool, we warn you that ReporTree has suffered a major update in the last few days and we highlight the:\r\n\r\n- _Change in the bahavior of the '-thr' argument_\r\nUntil now, this was a threshold with an \"exclusive\" behavior, i.e., when specifying '-thr 7', samples at a distance < 7 would correspond to the same cluster. In the new version, the behavior of the this argument has been harmonized for all clustering options of ReporTree pipeline, and now this threshold presents an \"inclusive\" behavior in all of them, i.e. samples at a distance <= 7 correspond to the same cluster.",
        "html_url": "https://github.com/insapathogenomics/ReporTree/releases/tag/v1.0.0",
        "name": "First release",
        "release_id": 78597568,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/78597568",
        "value": "https://api.github.com/repos/insapathogenomics/ReporTree/releases/78597568",
        "zipball_url": "https://api.github.com/repos/insapathogenomics/ReporTree/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies:",
        "parent_header": [
          "ReporTree",
          "Installation and dependencies"
        ],
        "type": "Text_excerpt",
        "value": "- [TreeCluster](https://github.com/niemasd/TreeCluster) v1.0.3\n- [A modified version of GrapeTree](https://github.com/insapathogenomics/GrapeTree)\n- [Biopython](https://biopython.org)\n- [Pandas](https://pandas.pydata.org)\n- [Ete3](http://etetoolkit.org)\n- [cgmlst-dists](https://github.com/genpat-it/cgmlst-dists)\n- [vcf2mst](https://github.com/genpat-it/vcf2mst)\n- [snp-sites](https://github.com/sanger-pathogens/snp-sites)\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "More advanced ReporTree command line with an cgMLST allele matrix (e.g., *Listeria monocytogenes*) as input to obtain the genetic clusters from a MST and keep nomenclature from previous run (and generate hierarchical codes):",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nreportree.py -m metadata.tsv -a allele_matrix.tsv -out output --loci-called 0.95 --method MSTreeV2 -thr all --matrix-4-grapetree --columns_summary_report columns,summary,report --metadata2report column1,column2 -f \u2018column1 == observation;date > year-mm-dd\u2019 --frequency-matrix variable1,variable2 --count-matrix variable1,variable2 --analysis grapetree --nomenclature-file previous_run_partitions.tsv --nomenclature-code 150,30,7\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "More advanced ReporTree command line with an wgMLST allele matrix (e.g., *Salmonella enterica*) as input to obtain the genetic clusters from a MST with levels defined as proportion, keep nomenclature from previous run (and generate hierarchical codes) and provide in-depth dynamic analysis (extended core) for samples of interest:",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nreportree.py -m metadata.tsv -a allele_matrix.tsv -out output --site-inclusion 0.99 --loci-called 0.95 --method MSTreeV2 -pct_thr 0.3,0.1,0.04 --matrix-4-grapetree --columns_summary_report columns,summary,report --metadata2report column1,column2 -f \u2018column1 == observation;date > year-mm-dd\u2019 --frequency-matrix variable1,variable2 --count-matrix variable1,variable2 --analysis grapetree --nomenclature-file previous_run_partitions.tsv --nomenclature-code 0.3,0.1,0.04 --sample_of_interest A,B,C --zoom-cluster-of-interest 0.04 --subtree-of-interest 20\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:57:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Note on the columns for summary reports",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "This argument is used to select the columns that will be provided in the summary report.\n-\tTo take the most profit of ReporTree, we recommend that you include the column 'date' in your metadata. This column must follow the format YYYY-MM-DD. If you only provide YYYY or YYYY-MM, it will assume YYYY-01-01!\n-\tIf a 'date' column is provided in the metadata, ReporTree will determine and provide in the new metadata table the columns:\n    - iso_year\n    - iso_week_nr \n    - iso_week\n-\tWhile for nominal or categorical variables ReporTree can provide in the summary report the number of observations (\u2018n_column\u2019) or the frequency of each observation, for the 'date' column this script can provide:\n    - first_seq_date\n    - last_seq_date\n    - timespan_days\n-\tThe columns of the summary reports are defined by the \u2018--columns_summary_report\u2019 argument. To know the columns that you can include based on your metadata table and the outputs of ReporTree, write the full command line and add the argument \u2018--list\u2019 in the end. This will give you a list of the possible columns that your summary reports can include, i.e. that you can request in \u2018--columns_summary_report\u2019.\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "ReporTree"
        ],
        "type": "Text_excerpt",
        "value": "```bash\noptional arguments:\n  -h, --help            show this help message and exit\n\nVersion:\n  ReporTree version\n\n  -v, --version         Print version and exit\n\nReporTree:\n  ReporTree input/output specifications\n\n  -a ALLELE_PROFILE, --allele-profile ALLELE_PROFILE\n                        Input allele/SNP profile matrix (tsv format)\n  -align ALIGNMENT, --alignment ALIGNMENT\n                        Input multiple sequence alignment (fasta format)\n  -d_mx DISTANCE_MATRIX, --distance_matrix DISTANCE_MATRIX\n                        Input pairwise distance matrix (tsv format)\n  -t TREE, --tree TREE  Input tree (newick format)\n  -p PARTITIONS, --partitions PARTITIONS\n                        Partitions file (tsv format) - 'partition' represents the threshold at which clustering information was obtained\n  -m METADATA, --metadata METADATA\n                        [MANDATORY] Metadata file (tsv format). To take the most profit of ReporTree functionalities, you must provide this file.\n  -vcf VCF, --vcf VCF   Single-column list of VCF files (txt format). This file must comprise the full PATH to each vcf file.\n  -var VARIANTS, --variants VARIANTS\n                        Input table (tsv format) with sample name in the first column and a comma-separated list of variants in the second column with the following regular expression: '\\w(\\d+)\\w'\n  -out OUTPUT, --output OUTPUT\n                        [OPTIONAL] Tag for output file name (default = ReporTree)\n  -l LOCI, --loci LOCI  [OPTIONAL] List of loci (e.g. cgMLST) that will be used for the clustering analysis. If '--zoom-cluster-of-interest' or the '--subtree-of-interest' are set, in the zoom-in/subtree analysis, this list will be extended with additional loci (e.g., accessory\n                        loci in the wgMLST schema) that pass the criteria defined in the '--site-inclusion' argument. If --loci is set, the --site-inclusion argument will be ignored during the first clustering, i.e. it will only be applied at the zoom-in/subtree step.\n  --list                [OPTIONAL] If after your command line you specify this option, ReporTree will list all the possible columns that you can use as input in '--columns_summary_report'. To obtain information about the partition name for other arguments('--frequency-matrix'\n                        and/or '--count-matrix'), please also indicate the type of analysis. NOTE!! The objective of this argument is to help you with the input of some other arguments. So, it will not run reportree.py main functions!!\n\nAnalysis details:\n  Analysis details\n\n  --analysis ANALYSIS   Type of clustering analysis (options: grapetree, HC, treecluster). If you provide a tree, genetic clusters will always be obtained with treecluster. If you provide a distance matrix, genetic clusters will always be obtained with HC. If you provide any\n                        other input, it is MANDATORY to specify this argument.\n  --subset              [OPTIONAL] Obtain genetic clusters using only the samples that correspond to the filters specified in the '--filter' argument.\n  -d DIST, --dist DIST  [OPTIONAL] Distance unit by which partition thresholds will be multiplied (example: if -d 10 and -thr 5,8,10-30, the minimum spanning tree will be cut at 50,80,100,110,120,...,300. If -d 10 and --method-threshold avg_clade-2, the avg_clade threshold will\n                        be set at 20). This argument is particularly useful for non-SNP-scaled trees. Currently, the default is 1, which is equivalent to 1 allele distance or 1 SNP distance. [1.0]\n\nCleaning missing data:\n  Remove loci/positions and samples based on missing content\n\n  --missing-code MISSING_CODE\n                        [OPTIONAL] Code representing missing data. If different from '0' or 'N', please try to avoid a IUPAC character (even in lower-case). [default: 'N' when '-align' provided and '0' for other inputs]\n  --site-inclusion N_CONTENT\n                        [OPTIONAL: Useful to remove informative sites/loci with excess of missing data] Minimum proportion of samples per site without missing data (e.g. '--site-inclusion 1.0' will only keep loci/positions without missing data, i.e. a core alignment/profile; '\n                        --site-inclusion 0.0' will keep all loci/positions) NOTE: This argument works on profile/alignment loci/positions (i.e. columns)! [default: 0.0].\n  --loci-called LOCI_CALLED\n                        [OPTIONAL - only works for matrices] Minimum proportion of loci/positions called for SNP/allele matrices (e.g. '--loci-called 0.95' will only keep in the profile matrix samples with > 95% of alleles/positions, i.e. <= 5% missing data). Applied after '--\n                        site-inclusion' argument! [default: 0.0]\n  --sample-ATCG-content ATCG_CONTENT\n                        [OPTIONAL - only works for alignment] Minimum proportion (0 to 1) of ATCG in informative sites of the alignment per sample (e.g. '--sample-ATCG-content 1.0' will only keep samples without N's or any non-ATCG code in informative sites) [default: 0 - keep\n                        all samples]\n\nAlignment processing:\n  Alignment processing\n\n  --remove-reference    Set only if you want to remove the reference sequence of the alignment (reference name must be provided with the argument '--reference').\n  --use-reference-coords\n                        Set only if you want that column names in the final alignment matrix represent the reference coordinates (reference name must be provided with the argument '--reference') Note: Depending on the alignment size, this argument can make alignment processing\n                        very slow!\n  -r REFERENCE, --reference REFERENCE\n                        [OPTIONAL] Name of reference sequence. Required if '--remove-reference' and/or '--use-reference-coords' specified.\n  --get-position-correspondence POS_CORR\n                        [OPTIONAL] Request a .tsv with position correspondence between any sequences of your alignment. These should be indicated separated by a comma (e.g. seqA,seqB). To get the position coordinates of all sequences just write 'all'.\n  --position-list POS_LIST\n                        [OPTIONAL] .tsv file with the positions of interest to be reported when '--get-position-correspondence' is requested. Each column should correspond to the positions of a sequence and the sequence name should be indicated in the header. If this file is\n                        not provided, all positions of the alignment will be reported.\n\nPartitioning with GrapeTree:\n  Specifications to get and cut minimum spanning trees\n\n  --method GRAPETREE_METHOD\n                        \"MSTreeV2\" [DEFAULT] Alternative:\"MSTree (goeBURST)\"\n  --missing HANDLER     ONLY FOR MSTree. 0: [DEFAULT] ignore missing data in pairwise comparison. 1: remove column with missing data. 2: treat missing data as an allele. 3: use absolute number of allelic differences.\n  --n_proc NUMBER_OF_PROCESSES\n                        Number of CPU processes in parallel use. [5]\n  -thr THRESHOLD, --threshold THRESHOLD\n                        [OPTIONAL] Partition threshold for clustering definition (integer). Different thresholds can be comma-separated (e.g. 5,8,16). Ranges can be specified with a hyphen separating minimum and maximum (e.g. 5,8,10-20). If this option is not set, the script\n                        will perform clustering for all the values in the range 0 to max. If you prefer to exclusively use the '-pct_thr' argument, please set '-thr none'. Note: Threshold values are inclusive, i.e. '-thr 7' will consider samples with <= 7 differences as\n                        belonging to the same cluster!\n  -pct_thr PCT_THRESHOLD, --pct_threshold PCT_THRESHOLD\n                        [OPTIONAL] Similar to 'thr' but values are indicated as the proportion of differences to the final allelic schema size or number of informative positions, e.g. '-pct_thr 0.005' corresponds to a threshold of 5 allelic/SNP differences in a matrix with 1000\n                        loci/sites under analysis). Different values can be comma-separated (e.g. 0.005,0.01,0.1). Ranges CANNOT be specified. This option is particularly useful for dynamic wgMLST analysis for which the size of the schema under analysis is contigent on dataset\n                        diversity. Note: This argument can be specified even if you used the '-thr' argument.\n  --matrix-4-grapetree  Output an additional allele profile matrix with the header ready for GrapeTree visualization. Set only if you WANT the file!\n  --wgMLST              [EXPERIMENTAL] a better support of wgMLST schemes (check GrapeTree github for details).\n\nPartitioning with HC:\n  Specifications to genetic clusters with hierarchical clustering\n\n  --HC-threshold HCMETHOD_THRESHOLD\n                        [OPTIONAL] List of HC methods and thresholds to include in the analysis (comma-separated). To get clustering at all possible thresholds for a given method, write the method name (e.g. single). To get clustering at a specific threshold, indicate the\n                        threshold with a hyphen (e.g. single-10). To get clustering at a specific range, indicate the range with a hyphen separating minimum and maximum (e.g. single-2-10). If you prefer to exclusively use the '--pct-HC-threshold' argument, please set '--HC-\n                        threshold none'. Note: Threshold values are inclusive, i.e. '--HC-threshold single-7' will consider samples with <= 7 differences as belonging to the same cluster! Default: single (Possible methods: single, complete, average, weighted, centroid, median,\n                        ward)\n  --pct-HC-threshold PCT_HCMETHOD_THRESHOLD\n                        [OPTIONAL] Similar to '--HC-threshold' but the partition threshold for cluster definition is set as the proportion of differences to the final allelic schema size or number of informative positions, e.g. '--pct-HC-threshold single-0.005' corresponds to a\n                        threshold of 5 allelic/SNP differences in a matrix with 1000 loci/sites under analysis. Ranges CANNOT be specified.\n\nPartitioning with TreeCluster:\n  Specifications to cut the tree with TreeCluster\n\n  --method-threshold METHOD_THRESHOLD\n                        List of TreeCluster methods and thresholds to include in the analysis (comma-separated). To get clustering at all possible thresholds for a given method, write the method name (e.g. root_dist). To get clustering at a specific threshold, indicate the\n                        threshold with a hyphen (e.g. root_dist-10). To get clustering at a specific range, indicate the range with a hyphen (e.g. root_dist-2-10). Default: root_dist,avg_clade-1 (List of possible methods: avg_clade, leaf_dist_max, leaf_dist_min, length,\n                        length_clade, max, max_clade, root_dist, single_linkage, single_linkage_cut, single_linkage_union) Warning!! So far, ReporTree was only tested with avg_clade and root_dist!\n  --support SUPPORT     [OPTIONAL: see TreeCluster github for details] Branch support threshold\n  --root-dist-by-node   [OPTIONAL] Set only if you WANT to cut the tree with root_dist method at each tree node distance to the root (similar to root_dist at all levels but just for informative distances)\n  -root ROOT, --root ROOT\n                        Set root of the input tree. Specify the leaf name to use as output. Alternatively, write 'midpoint', if you want to apply midpoint rooting method.\n\nReporTree cluster nomenclature:\n  Cluster nomenclature instructions\n\n  --nomenclature-file NOMENCLATURE\n                        [OPTIONAL] Intended usage: provide a .tsv file with the nomenclature information to be used (normaly the '*_partitions.tsv' file of a previous ReporTree run) with the following structure: First column should have the sample names; Subsequent columns have\n                        the partitions at any/all levels. Columns matching the column names of the partitions requested in the current run (e.g. MST-7x1.0) will be used to name the current clusters at the respective levels. For more details on how to use this nomenclature\n                        system please visit our github! Alternative usage (at your own risk): you can provide a .tsv file with just a single column with a grouping variable that does not match any partition requested in the current run (e.g. ST). In this case, all clusters will\n                        be named according to this column (e.g. ST1.1,ST1.2,ST2.1...).\n  --nomenclature-code-levels CODE_LEVELS\n                        [OPTIONAL and only available for --analysis grapetree or HC] This argument allows getting a nomenclature code combining cluster information at different hierarchical levels (e.g. if '150,30,7' is provided when the analysis is GrapeTree, a code combining\n                        the cluster names at these levels will be generated: C3-C2-C1). The order of levels indicated in the command-line will be kept in the code (in the example, C3 indicates that the sample belongs to cluster_3 at MST-150). Of note, if a '--nomenclature-file'\n                        is provided in subsequent ReporTree runs using the same method and thresholds, the nomenclature code will be kept. You can also add one metadata variable (e.g. Country) to get an extra layer to the code (e.g. C3-C2-C1-Portugal). Partition thresholds can\n                        be indicated in this argument following the same rules as the arguments '-thr' and '-pct_thr' for GrapeTree or '--HC-threshold' and '--pct-HC-threshold' for HC.\n\nReporTree metadata report:\n  Specific parameters to report clustering/grouping information associated to metadata\n\n  --columns_summary_report COLUMNS_SUMMARY_REPORT\n                        Columns (i.e. variables of metadata) to get statistics for the derived genetic clusters or for other grouping variables defined in --metadata2report (comma-separated). If the name of the column is provided, the different observations and the respective\n                        percentage are reported. If 'n_column' is specified, the number of the different observations is reported. For example, if 'n_country' and 'country' are specified, the summary will report the number of countries and their distribution (percentage) per\n                        cluster/group. Exception: if a 'date' column is in the metadata, it can also report first_seq_date, last_seq_date, timespan_days. Check '--list' argument for some help. Default =\n                        n_sequence,lineage,n_country,country,n_region,first_seq_date,last_seq_date,timespan_days [the order of the list will be the order of the columns in the report]\n  --partitions2report PARTITIONS2REPORT\n                        Thresholds for which clustering information will be included in a joint report (comma-separated). Other alternatives: 'all' == all partitions; 'stability_regions' == first partition of each stability region as determined by comparing_partitions_v2.py.\n                        Note: 'stability_regions' can only be inferred when partitioning TreeCluster or GrapeTree or HC is run for all possible thresholds or when a similar partitions table is provided (i.e. sequential partitions obtained with the same clustering method) [all].\n                        Partition thresholds can be indicated in this argument following the same rules as the arguments '-thr' and '-pct_thr' for GrapeTree or '--HC-threshold' and '--pct-HC-threshold' for HC or '--method-threshold' for TreeCluster.\n  --metadata2report METADATA2REPORT\n                        Columns of the metadata table for which a separated summary report must be provided (comma-separated)\n  -f FILTER_COLUMN, --filter FILTER_COLUMN\n                        [OPTIONAL] Filter for metadata columns to select the samples to analyze. This must be specified within quotation marks in the following format 'column< >operation< >condition' (e.g. 'country == Portugal'). When more than one condition is specified for a\n                        given column, they must be separated with commas (e.g 'country == Portugal,Spain,France'). When filters include more than one column, they must be separated with semicolon (e.g. 'country == Portugal,Spain,France;date > 2018-01-01;date < 2022-01-01').\n                        White spaces are important in this argument, so, do not leave spaces before and after commas/semicolons.\n  --sample_of_interest SAMPLE_OF_INTEREST\n                        [OPTIONAL] List of samples of interest for which summary reports will be created. This list can be a comma-separated list in the command line, or a comma-separated list in a file, or a list in the first column of a tsv file. No headers should be provided\n                        in the input files. If nothing is provided, only the summary reports comprising all samples will be generated.\n  --zoom-cluster-of-interest ZOOM\n                        [OPTIONAL and only available for --analysis grapetree or HC] Repeat the analysis using only the samples that belong to each cluster of the samples of interest at a given distance threshold. This argument takes as input a comma-separated list of\n                        partitions for which you want the zoom-in. Partition thresholds can be indicated in this argument following the same rules as the arguments '-thr' and '-pct_thr' for GrapeTree or '--HC-threshold' and '--pct-HC-threshold' for HC. This argument requires\n                        that a metadata table was provided with '-m'. The argument '--loci-called' is not applied in the zoom-in analysis, i.e. all samples of the cluster are included. Default: no zoom-in.\n  --subtree-of-interest SUBTREE\n                        [OPTIONAL and only available for --analysis grapetree or HC] Repeat the analysis using the n closest samples of each sample of interest. This argument takes as input a comma-separated list of n's, corresponding to the number of closest samples you want\n                        to include for the samples of interest. This argument requires that a metadata table was provided with '-m'. The argument '--loci-called' is not applied in the subtree analysis, i.e. all samples of the cluster are included. Default: no subtree.\n  --unzip               [OPTIONAL and only available for --analysis grapetree or HC] Provide the outputs of '--zoom-cluster-of-interest' and '--subtree-of-interest' in unzipped format.\n  --frequency-matrix FREQUENCY_MATRIX\n                        [OPTIONAL] Metadata column names for which a frequency matrix will be generated. This must be specified within quotation marks in the following format 'variable1,variable2'. Variable1 is the variable for which frequencies will be calculated (e.g. for\n                        'lineage,iso_week' the matrix reports the percentage of samples that correspond to each lineage per iso_week). If you want more than one matrix you can separate the different requests with semicolon (e.g. 'lineage,iso_week;country,lineage'). If you want\n                        a higher detail in your variable2 and decompose it into two columns you use a colon (e.g. lineage,country:iso_week will report the percentage of samples that correspond to each lineage per iso_week in each country)\n  --count-matrix COUNT_MATRIX\n                        [OPTIONAL] Same as '--frequency-matrix' but outputs counts and not frequencies\n  --mx-transpose        [OPTIONAL] Set ONLY if you want that the variable1 specified in '--frequency-matrix' or in '--count-matrix' corresponds to the matrix first column.\n  --pivot               [OPTIONAL] Set ONLY if you want an additional table for each count/frequency matrix in pivot format.\n\nStability regions:\n  Congruence analysis of cluster composition at all possible partitions to determine regions of cluster stability (automatically run if you set --partitions2report 'stability_regions'). WARNING! This option is planned to handle sequential partitions obtained with the same clustering method, such as a partitions table derived from cg/wgMLST data (from 1 to max allele threshold). Use it at your own risk, if you provide your own partitions table.\n\n  -AdjW ADJUSTEDWALLACE, --AdjustedWallace ADJUSTEDWALLACE\n                        Threshold of Adjusted Wallace score to consider an observation for method stability analysis [0.99]\n  -n N_OBS, --n_obs N_OBS\n                        Minimum number of sequencial observations that pass the Adjusted Wallace score to be considered a 'stability region' (i.e. a threshold range in which cluster composition is similar) [5]\n  -o ORDER, --order ORDER\n                        [Set only if you provide your own partitions table] Partitions order in the partitions table (0: min -> max; 1: max -> min) [0]\n  --keep-redundants     Set ONLY if you want to keep all samples of each cluster of the most discriminatory partition (by default redundant samples are removed to avoid the influence of cluster size)\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note on the '--metadata' argument",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Please avoid white spaces in the metadata columns. If you still want to have blank spaces, ReporTree can deal with them but please remember to replace them by \"_\" everytime you want to write them in the command line.\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note on the '--missing-code' argument",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "By default, ReporTree assumes 0 as the code for missing data in SNP/allele matrices and N as the code for missing data in multi-sequence alignments. You can use this argument to mention which code you used. If you left an empty space in your matrix to indicate missing data, please write 'empty' in this argument.\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note on the '--method-threshold' argument",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "ReporTree uses [TreeCluster](https://github.com/niemasd/TreeCluster) to obtain clustering information from a SNP-distance tree. To provide some flexibility, it uses the argument '--method-threshold' to run this program for all the combinations of method-threshold that the user needs:\n- Clustering at all possible thresholds of a single method (from 1 SNP to the maximum distance of the tree) -> set only the method (e.g. root_dist)\n- Clustering at a specific threshold for a single method -> set the method and use a hyphen to indicate the threshold (e.g. root_dist-10)\n- Clustering at all possible thresholds of a range for a single method -> set the method and use a hyphen to indicate the threshold range (e.g. root_dist-10-30)\n- Clustering using two or more methods and/or different thresholds -> set the different requirements separated by a comma (e.g. root_dist,avg_dist-10,avg_dist-20-30)\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note on the '--HC-threshold' argument",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "'--HC-threshold' is the equivalent to '--method-threshold' for the hierarchical clustering analysis. As such, the input of this argument follows the same structure as mentioned in the previous paragraph. Possible methods: single, complete, average, weighted, centroid, median, ward.\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note on the '--pct_threshold' and the '--pct-HC-threshold' arguments",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "These arguments take as input the distance thresholds as a proportion of the number of alleles/sites used in the analysis. This is particularly useful for wgMLST and assembly-based approaches in which not all loci/positions of the schema/alignment are used, being difficult to the user to predict the size of the final core. For convenience, the proportion will be translated in absolute allele/SNP distances.\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note on the '--nomenclature-file' argument",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The intended usage to this argument is to provide a partitions table of a previous run. ReporTree will then use this information to (re)name the clusters of the current run. However, we are quite flexible with this input. For instance, you can modify the name of particular clusters (e.g., Outbreak1) and this new name will be kept onwards. Alternative usage: you can provide a .tsv file with just a single column with a grouping variable that does not match any partition requested in the current run (e.g. ST). In this case, the generated clusters at all levels will take this variable as the prefix for cluster naming (e.g., ST1.1, ST1.2, ST2.1, ...).\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note on the '--partitions2report' argument",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "This argument is used to select the columns of the partitions table that will be incorporated into the metadata table. This arguments follows the same rules as the threshold argument you used. Please note that there are other expressions that you can use, namely, 'all' for all partitions (default) and 'stability_regions' to run comparing_partitions_v2.py and report the first partition of stable regions. Run '--list' for more help.\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note on the '--frequency-matrix' and '--count-matrix' arguments",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "These arguments take as input two variables separated by a comma (variable1,variable2). Frequencies will be calculated for variable1 and by default the different observations of this variable (e.g. different lineages if variable 1 == 'lineage') will correspond to different columns, while the observations of variable 2 will correspond to different rows. To transpose this you can use '--mx-transpose'.\n\n_TIP: If you want, you can split variable 2 in up to two variables. To this end you can indicate them separated by colon (e.g. lineage,country:iso_week)_\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Simple ReporTree command line with an allele matrix as input to obtain the genetic clusters from a MST:",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nreportree.py -m metadata.tsv -a allele_matrix.tsv -out output --method MSTreeV2 -thr all --matrix-4-grapetree --columns_summary_report columns,summary,report --metadata2report column1,column2 -f \u2018column1 == observation;date > year-mm-dd\u2019 --frequency-matrix variable1,variable2 --count-matrix variable1,variable2 --analysis grapetree\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Simple ReporTree command line with an alignment as input to obtain the genetic clusters with hierarchical clustering (single-linkage):",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nreportree.py -m metadata.tsv -align alignment.fasta -out output -d dist --HC-threshold single --columns_summary_report columns,summary,report --metadata2report column1,column2 -f \u2018column1 == observation;date > year-mm-dd\u2019 --frequency-matrix variable1,variable2 --count-matrix variable1,variable2 --analysis HC\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Simple ReporTree command line with a newick tree to obtain the genetic clusters:",
        "parent_header": [
          "ReporTree",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nreportree.py -m metadata.tsv -t tree.nw -out output -d dist --method-threshold method1,method2-threshold --columns_summary_report columns,summary,report --partitions2report all --metadata2report column1,column2 -f \u2018column1 == observation;date > year-mm-dd\u2019 --frequency-matrix variable1,variable2 --count-matrix variable1,variable2\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Outbreak detection - bacterial foodborne pathogen (e.g. *Listeria monocytogenes*) - <a href=\"https://github.com/insapathogenomics/ReporTree/wiki/5.-Examples#outbreak-detection---bacterial-foodborne-pathogen-eg-listeria-monocytogenes\">click here</a>",
        "parent_header": [
          "ReporTree",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "ReporTree can facilitate the routine surveillance and outbreak investigation of bacterial pathogens, such as foodborne pathogens. In [ReporTree wiki](https://github.com/insapathogenomics/ReporTree/wiki/5.-Examples#outbreak-detection---bacterial-foodborne-pathogen-eg-listeria-monocytogenes), we provide a simple example of the usage of ReporTree to rapidly identify and characterize potential Listeriosis outbreaks. With a single command, ReporTree builds a MST from cgMLST data and **automatically extracts genetic clusters at three high resolution levels (<=4, <=7, <=14 allelic differences)**, and provides comprehensive reports about the sample collection (e.g. ST sequence count/frequency per year, etc).\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Large-scale genetic clustering and linkage to antibiotic resistance data (e.g. *Neisseria gonorrhoeae*) - <a href=\"https://github.com/insapathogenomics/ReporTree/wiki/5.-Examples#large-scale-genetic-clustering-and-linkage-to-antibiotic-resistance-data-eg-neisseria-gonorrhoeae\">click here</a>",
        "parent_header": [
          "ReporTree",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "ReporTree can enhance genomics surveillance and quickly identify/characterize genetic clusters from large datasets. In [ReporTree wiki](https://github.com/insapathogenomics/ReporTree/wiki/5.-Examples#large-scale-genetic-clustering-and-linkage-to-antibiotic-resistance-data-eg-neisseria-gonorrhoeae), with a single command line, we reproduce part of the extensive genomics analysis performed by [Pinto et al., 2021](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8208699/pdf/mgen-7-481.pdf) over 3,791 _N. gonorrhoeae_ genomes from isolates collected across Europe.\n\n\n ### Routine surveillance - viral pathogen (e.g. SARS-CoV-2) - [click here](https://github.com/insapathogenomics/ReporTree/wiki/5.-Examples#routine-surveillance---viral-pathogen-eg-sars-cov-2)\n\nReporTree is currently applied to generate periodic reports about SARS-CoV-2 variant circulation in Portugal. In [ReporTree wiki](https://github.com/insapathogenomics/ReporTree/wiki/5.-Examples#routine-surveillance---viral-pathogen-eg-sars-cov-2), we give some examples on how to rapidly generate key surveillance metrics taking as input metadata tables (tsv format) and rooted divergence (SNP) trees (newick format) provided for download in regular Nextstrain (auspice) builds, such as those maintained by the National Institute of Health Dr. Ricardo Jorge, Portugal (INSA) at https://insaflu.insa.pt/covid19/.\n\n"
      },
      "source": "https://raw.githubusercontent.com/insapathogenomics/ReporTree/main/README.md",
      "technique": "header_analysis"
    }
  ]
}