{
  "application_domain": [
    {
      "confidence": 34.37,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite this repository",
        "parent_header": [
          "Interactive Demo"
        ],
        "type": "Text_excerpt",
        "value": "If you find SynCLay useful or use it in your research, please consider citing our paper:\n\n```\n@article{Deshpande2024,\n  title = {SynCLay: Interactive synthesis of histology images from bespoke cellular layouts},\n  volume = {91},\n  ISSN = {1361-8415},\n  url = {http://dx.doi.org/10.1016/j.media.2023.102995},\n  DOI = {10.1016/j.media.2023.102995},\n  journal = {Medical Image Analysis},\n  publisher = {Elsevier BV},\n  author = {Deshpande,  Srijay and Dawood,  Muhammad and Minhas,  Fayyaz and Rajpoot,  Nasir},\n  year = {2024},\n  month = jan,\n  pages = {102995}\n}\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Deshpande,  Srijay and Dawood,  Muhammad and Minhas,  Fayyaz and Rajpoot,  Nasir",
        "doi": "10.1016/j.media.2023.102995",
        "format": "bibtex",
        "title": "SynCLay: Interactive synthesis of histology images from bespoke cellular layouts",
        "type": "Text_excerpt",
        "url": "http://dx.doi.org/10.1016/j.media.2023.102995",
        "value": "@article{Deshpande2024,\n    pages = {102995},\n    month = {January},\n    year = {2024},\n    author = {Deshpande,  Srijay and Dawood,  Muhammad and Minhas,  Fayyaz and Rajpoot,  Nasir},\n    publisher = {Elsevier BV},\n    journal = {Medical Image Analysis},\n    doi = {10.1016/j.media.2023.102995},\n    url = {http://dx.doi.org/10.1016/j.media.2023.102995},\n    issn = {1361-8415},\n    volume = {91},\n    title = {SynCLay: Interactive synthesis of histology images from bespoke cellular layouts},\n}"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Srijay/SynCLay-Framework"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-03-03T15:20:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-22T06:04:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9713022573737189,
      "result": {
        "original_header": "SynCLay: Interactive synthesis of histology images from bespoke cellular layouts",
        "type": "Text_excerpt",
        "value": "This repository contains the official implementation of https://www.sciencedirect.com/science/article/pii/S1361841523002554. Please follow the instructions given below to setup the environment and execute the code. The code is developed and tested on Windows 10 with Python 3.6 and PyTorch 1.10\n \n"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8154475216737098,
      "result": {
        "original_header": "Inference",
        "type": "Text_excerpt",
        "value": "To generate images from cellular layouts generated by the TheCoT framework, \n"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Srijay/SynCLay-Framework/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Srijay/SynCLay-Framework/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Srijay/SynCLay-Framework"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SynCLay: Interactive synthesis of histology images from bespoke cellular layouts"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/assets/6882352/268b3cfb-6cea-4311-8a34-3e83eef74000"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/assets/6882352/d92065a0-308b-4b50-aeda-b09f9e15c430"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/assets/6882352/ab5847ac-c93e-4953-8587-58ee4c8e93cb"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999991275707427,
      "result": {
        "original_header": "SynCLay: Interactive synthesis of histology images from bespoke cellular layouts",
        "type": "Text_excerpt",
        "value": "This repository contains the official implementation of https://www.sciencedirect.com/science/article/pii/S1361841523002554. Please follow the instructions given below to setup the environment and execute the code. The code is developed and tested on Windows 10 with Python 3.6 and PyTorch 1.10\n \n"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997273393544853,
      "result": {
        "original_header": "Collect Masks",
        "type": "Text_excerpt",
        "value": "The semantic masks for the experiment can be collected by running the scripts inside ./preprocessing/ directory. From the home directory, type cd preprocessing. To construct masks for CoNiC dataset, run ./conic/collect_masks.py. Fill the respective paths for variables labelspath and outfolder. For PanNuke, run ./pannuke/collect_masks.py. Place paths to maskspath, typespath and output folder. \n \n"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8839005524655668,
      "result": {
        "original_header": "Inference",
        "type": "Text_excerpt",
        "value": "run python main.py --mode test \nrun python main.py --mode thecot\n \n"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8216912505000252,
      "result": {
        "original_header": "Collect Masks",
        "type": "Text_excerpt",
        "value": "The semantic masks for the experiment can be collected by running the scripts inside ./preprocessing/ directory. From the home directory, type cd preprocessing. To construct masks for CoNiC dataset, run ./conic/collect_masks.py. Fill the respective paths for variables labelspath and outfolder. For PanNuke, run ./pannuke/collect_masks.py. Place paths to maskspath, typespath and output folder. \n \n"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9285196320909679,
      "result": {
        "original_header": "Training the model",
        "type": "Text_excerpt",
        "value": "python main.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9546570641177394,
      "result": {
        "original_header": "Inference",
        "type": "Text_excerpt",
        "value": "run python main.py --mode test \nrun python main.py --mode thecot\n \n"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Srijay/SynCLay-Framework/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SynCLay-Framework"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Srijay"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 301108,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 60019,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 23582,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 15179,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:02:45",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Interactive Demo",
        "type": "Text_excerpt",
        "value": "![interactive_demo](https://github.com/Srijay/SynCLay-Framework/assets/6882352/ab5847ac-c93e-4953-8587-58ee4c8e93cb)\n\n"
      },
      "source": "https://raw.githubusercontent.com/Srijay/SynCLay-Framework/main/README.md",
      "technique": "header_analysis"
    }
  ]
}