{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgement",
        "parent_header": [
          "GraphMap - A highly sensitive and accurate mapper for long, error-prone reads"
        ],
        "type": "Text_excerpt",
        "value": "This work was supported by the IMaGIN platform (project No. 102 101 0025), through a grant from the Science and Engineering Research Council, funding to the Genome Institute of Singapore from the Agency for Science, Technology and Research (A*STAR), Singapore, and funding from the Croatian Science Foundation (Project no. UIP-11-2013-7353 - Algorithms for Genome Sequence Analysis).  \n\nWe would like to acknowledge the contribution of [Ivan Krpelnik](https://github.com/Krpa) for his help and involvement in development of the transcriptome mapping option.\n"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/isovic/graphmap"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact information",
        "parent_header": [
          "GraphMap - A highly sensitive and accurate mapper for long, error-prone reads"
        ],
        "type": "Text_excerpt",
        "value": "For additional information, help and bug reports please send an email to one of the following:  \nivan.sovic@irb.hr, mile.sikic@fer.hr, nagarajann@gis.a-star.edu.sg\n"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-12-11T16:39:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-06T08:27:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GraphMap - A highly sensitive and accurate mapper for long, error-prone reads http://www.nature.com/ncomms/2016/160415/ncomms11307/full/ncomms11307.html Note: This was the original repository which will no longer be officially maintained. Please use the new official repository here:"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "GraphMap - A highly sensitive and accurate mapper for long, error-prone reads"
        ],
        "type": "Text_excerpt",
        "value": "GraphMap is a novel mapper targeted at aligning long, error-prone third-generation sequencing data.  \nIt is **designed to handle Oxford Nanopore MinION 1d and 2d reads** with very high sensitivity and accuracy, and also presents a significant improvement over the state-of-the-art for PacBio read mappers.\n\nGraphMap was also designed for ease-of-use: the **default parameters** can handle a wide range of read lengths and error profiles, including: *Illumina*, *PacBio* and *Oxford Nanopore*.  \nThis is an especially important feature for technologies where the error rates and error profiles can vary widely across, or even within, sequencing runs.  \n\n**The GraphMap algorithm** is structured to achieve high-sensitivity and speed using a five-stage\nread-funneling approach. In stage I, GraphMap uses a novel adaptation of gapped spaced seeds to efficiently reduce the search space and get seed hits as a form of coarse alignment. These are then refined in stage II using graph-based vertex-centric processing of seeds to efficiently construct alignment anchors. GraphMap then chains anchors using a kmer\nversion of longest common subsequence (LCSk) construction (stage III), refines\nalignments by chaining anchors in the anchored mode or with a form of L1 linear regression in the semiglobal alignment mode (stage IV) and finally evaluates the\nremaining candidates to select the best location to reconstruct a final alignment (stage V).\nGraphMap computes a BLAST-like E-value as well as a mapping quality for its alignments.\n\n**Evaluation** on MinION sequencing datasets against short and long-read mappers indicates that GraphMap increases mapping sensitivity by at least 15-80%. GraphMap alignments are the first to demonstrate consensus calling with <1 error in 100,000 bases, variant calling on the human genome with 76% improvement in sensitivity over the next best mapper (BWA-MEM), precise detection of structural variants from 100bp to 4kbp in length and species and strain-specific identification of pathogens using MinION reads.\n\nFurther details about the algorithm, comparison with other mappers and usage applications can be found in the **preprint** of our paper:  \n[Fast and sensitive mapping of error-prone nanopore sequencing reads with GraphMap](http://biorxiv.org/content/early/2015/06/10/020719)  \n\n**Nanopore sequencing data** of E. Coli UTI89 generated in-house and used in the paper now available on ENA:  \n[PRJEB9557](http://www.ebi.ac.uk/ena/data/view/PRJEB9557)  \n"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9385829462434853,
      "result": {
        "original_header": "GraphMap - A highly sensitive and accurate mapper for long, error-prone reads",
        "type": "Text_excerpt",
        "value": "Bugfix version, addressing several segfault and other important issues:  \n- Fixed mapping outside of reference bounds.  \n- Merged a pull request with some useful insanity tests (thanks @robegan21).\n- Changed the unmapped / Inf E-value (the ZE:f: tag) to be a valid float value (`std::numeric_limits<float>::max()` instead of `Inf`).  \n- Added several missing `#include`s.   \nPatch version resolving huge memory consumption when building the index.  \nIndex construction now consumes similar amount of memory as the final constructed index.  \nIndex files (stored to disk) constructed using v0.5.0 are fully compatible with v0.5.1 and can be used directly.   \nThere are several new important features to mention:  \n- The index supports minimizers - the minimizer window size can be specified via command line and by default is equal to ```5```. To switch off minimizers, use BASH2*.  \n- The number of hits for each seed lookup is now thresholded by a percentile value, e.g. BASH3* means that BASH4* of the most repetitive seeds will be skipped. To turn off this feature, specify BASH5*. This feature slightly reduces sensitivity, but plays a huge role when mapping to large references.  \n- BASH6* enables building the index on the fly, instead of storing it to disk.  \n- To switch off minimizers and percentile filtering, there is a composite option BASH7*. This will produce results similar to previous versions.\n- In case the version of an index file is not compatible with GraphMap, previous versions would automatically overwrite the index file. This is now prevented by default, and GraphMap now simply halts with a command line message. To force automatic rebuild if necessary (but not rebuild if a valid index file exists), use: BASH8*. To rebuild the index in any case, specify: BASH9*.  \n- Renamed the BASH10* mode to BASH11*   \nOwler overlapping mode was also enhanced with the new index, and now works much faster on larger datasets. Also, Owler allows for spaced seeds, and a custom shape can be specified via commandline (```--shape``` parameter, default is a full 15bp seed).    \nMany bug fixes were also made, including the ones related to mapping to circular references, various segfaults, and extra new lines when outputting secondary alignments. Some of the segfaults were caused by the index, which is now addressed with the new version. \nAlso, this release fixes an issue with **transcriptome mapping**, where recall would drop (however, not precision).   \n"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.994845379758119,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- Mapping position agnostic to alignment parameters.  \n- Consistently very high sensitivity and precision across different error profiles, rates and sequencing technologies even with default parameters.  \n- Circular genome handling to resolve coverage drops near ends of the genome.  \n- E-value.  \n- Meaningful mapping quality.\n- Various alignment strategies (semiglobal bit-vector and Gotoh, anchored).  \n- **Overlapping** of reads for *de novo* assembly.  \n- **Transcriptome mapping** through internal construction of a transcriptome from a given genomic reference and a GTF file.  \n- ...and much more.   \nGraphMap is also used as an overlapper in a new *de novo* genome assembly project called [Ra](https://github.com/mariokostelac/ra-integrate) ([https://github.com/mariokostelac/ra-integrate](https://github.com/mariokostelac/ra-integrate)).  \nRa attempts to create *de novo* assemblies from raw nanopore and PacBio reads without requiring error correction, for which a highly sensitive overlapper is required.   \nCurrently, development of a new spliced-alignment mode for mapping RNA-seq reads is under way.  \nDescription of the current effort as well as how to reach the experimental implementation can be found here: [doc/rnaseq.md](doc/rnaseq.md).   \n"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/isovic/graphmap/wiki"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/isovic/graphmap/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 45
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/isovic/graphmap/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "isovic/graphmap"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "## 1. Installation\n\nYou will need a recent GCC/G++ version (>=4.7) to compile the source.  \n\nTo override the default compiler choice you can set GCC (or GCC_MAC on Mac), e.g.:  \n\n```\nGCC=/usr/local/bin/g++ make  \n```\n\n### 1.1 Initialize submodules\nThis will automatically initialize/pull the latest version of submodules.  \n```\nmake modules  \n```\n\nSubmodules are used as source files, so there is no need to pre-compile them in any way.  \n\n\n### 1.2 Linux\nFor a Linux release version type:\n```\nmake  \n```\n\nTo clean, type:\n```\nmake clean  \n```\n\nOne can also rebuild, which will cause clean and make to be ran sequentially:\n```\nmake rebuild  \n```\n\n### 1.3 Mac\n```\nmake mac  \n\nmake cleanmac  \nmake rebuildmac  \n```\n\n### 1.4. Compiling the debug version\n```\nmake debug  \n\nmake cleandebug  \nmake rebuilddebug  \n```\n"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/INSTALL.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "GraphMap - A highly sensitive and accurate mapper for long, error-prone reads"
        ],
        "type": "Text_excerpt",
        "value": "To build GraphMap from source type:  \n```\nmake modules\t# This pulls the latest version of all required submodules\nmake\n```  \n\nYou will need a recent GCC/G++ version (>=4.7).  \n\nRun ```sudo make install``` to install the graphmap binary to ```/usr/bin```.  \n\nMore installation instructions can be found in the [INSTALL.md](INSTALL.md) file.\n\n"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9703713304364595,
      "result": {
        "original_header": "GraphMap - A highly sensitive and accurate mapper for long, error-prone reads",
        "type": "Text_excerpt",
        "value": "**__Current Version: 0.5.2__**  \nRelease date: 26 May 2017   \n**Note:** After running `git pull`, please `make modules` before `make`.   \n\n**__Current Version: 0.5.1__**  \nRelease date: 04 March 2017   \nTo use the new transcriptome mapping option simply specify a GTF file using the ```--gtf``` option:  \nBASH18*   \n"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/isovic/graphmap/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2015 Ivan Sovic, Mile Sikic and Niranjan Nagarajan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/LICENCE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "graphmap"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "isovic"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 745517,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 11870,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 7678,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "isovic",
          "type": "User"
        },
        "date_created": "2016-04-15T12:10:52Z",
        "date_published": "2016-04-15T12:29:57Z",
        "description": "Many important updates compared to previous version, including:\n- change in command line arguments - the current version is not compatible to the previous ones, please read the usage details\n- precompiling of the libraries is no longer required - simply `make modules` and the codebase will be synced and ready for compilation with the main code.\n- reorganized major parts of the code\n- new output format: BLASR's `m5`\n- set default thresholds on the E-value and the mapq\n- ...and much more.\n\nFor more details, check out the [changelog](https://github.com/isovic/graphmap/blob/master/doc/changelog.md).\n",
        "html_url": "https://github.com/isovic/graphmap/releases/tag/v0.3.0",
        "name": "GraphMap v0.3.0",
        "release_id": 3027623,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/isovic/graphmap/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/isovic/graphmap/releases/3027623",
        "value": "https://api.github.com/repos/isovic/graphmap/releases/3027623",
        "zipball_url": "https://api.github.com/repos/isovic/graphmap/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "isovic",
          "type": "User"
        },
        "date_created": "2015-11-16T00:52:31Z",
        "date_published": "2015-11-16T01:14:01Z",
        "description": "There were two subtile bugs with the anchored alignment which would be observed mostly only when aligning over large N regions.\n",
        "html_url": "https://github.com/isovic/graphmap/releases/tag/0.22.1",
        "name": "Patch for anchored mode alignment",
        "release_id": 2129791,
        "tag": "0.22.1",
        "tarball_url": "https://api.github.com/repos/isovic/graphmap/tarball/0.22.1",
        "type": "Release",
        "url": "https://api.github.com/repos/isovic/graphmap/releases/2129791",
        "value": "https://api.github.com/repos/isovic/graphmap/releases/2129791",
        "zipball_url": "https://api.github.com/repos/isovic/graphmap/zipball/0.22.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "isovic",
          "type": "User"
        },
        "date_created": "2015-11-12T18:11:02Z",
        "date_published": "2015-11-12T19:52:31Z",
        "description": "In this version overlap modes ('-w owler' and '-w overlapper' are merged from the dev branch. Also, many tiny bug fixes have been made from release 0.21, as well as an increase in speed of processing, especially for Illumina-type data.\n",
        "html_url": "https://github.com/isovic/graphmap/releases/tag/0.22",
        "name": "Overlapping modes + bug fixes",
        "release_id": 2117649,
        "tag": "0.22",
        "tarball_url": "https://api.github.com/repos/isovic/graphmap/tarball/0.22",
        "type": "Release",
        "url": "https://api.github.com/repos/isovic/graphmap/releases/2117649",
        "value": "https://api.github.com/repos/isovic/graphmap/releases/2117649",
        "zipball_url": "https://api.github.com/repos/isovic/graphmap/zipball/0.22"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "isovic",
          "type": "User"
        },
        "date_created": "2015-07-09T20:38:34Z",
        "date_published": "2015-08-10T14:11:48Z",
        "description": "This version of the GraphMap algorithm was used for the purposes of our preprint manuscript.\n",
        "html_url": "https://github.com/isovic/graphmap/releases/tag/v0.21",
        "name": "GraphMap preprint version",
        "release_id": 1650892,
        "tag": "v0.21",
        "tarball_url": "https://api.github.com/repos/isovic/graphmap/tarball/v0.21",
        "type": "Release",
        "url": "https://api.github.com/repos/isovic/graphmap/releases/1650892",
        "value": "https://api.github.com/repos/isovic/graphmap/releases/1650892",
        "zipball_url": "https://api.github.com/repos/isovic/graphmap/zipball/v0.21"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "requirements",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:11:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 179
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start on Linux x64",
        "parent_header": [
          "GraphMap - A highly sensitive and accurate mapper for long, error-prone reads"
        ],
        "type": "Text_excerpt",
        "value": "```  \ngit clone https://github.com/isovic/graphmap.git  \ncd graphmap  \nmake modules  \nmake  \n\n# To align:  \n./bin/Linux-x64/graphmap align -r reference.fa -d reads.fasta -o output.sam  \n\n# To overlap:  \n./bin/Linux-x64/graphmap owler -r reads.fasta -d reads.fasta -o output.mhap  \n```  \n"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage examples",
        "parent_header": [
          "GraphMap - A highly sensitive and accurate mapper for long, error-prone reads"
        ],
        "type": "Text_excerpt",
        "value": "```\n# **Align** all reads from a given FASTA/FASTQ file using anchored alignment approach:  \n./graphmap align -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# **Overlap** all reads from a given FASTA/FASTQ file and report overlaps in MHAP format (fast):  \n./graphmap owler -r reads.fa -d reads.fa -o overlaps.mhap  \n\n# **Align** all reads to a transcriptome sequence:  \n./graphmap align -r scerevisiae.fa --gtf scerevisiae.gtf -d reads.fastq -o alignments.sam  \n\n\n# Align all reads and report alignments using the extended CIGAR format.  \n./graphmap align -r escherichia_coli.fa -d reads.fastq -o alignments.sam --extcigar  \n\n# Align all reads from a given FASTA/FASTQ file with default number of threads using semiglobal bit-vector alignment:  \n./graphmap align -a sg -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# Overlap all reads from a given FASTA/FASTQ in a full GraphMap mode with generating alignments (slow):  \n./graphmap align -x overlap -r reads.fa -d reads.fa -o overlaps.sam  \n\n# Align reads using the Gotoh for semiglobal alignment:  \n./graphmap align -a sggotoh -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# Align reads using Gotoh alignment with anchored approach:  \n./graphmap align -a anchorgotoh -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# Process reads from a circular genome:  \n./graphmap align -C -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# Threshold the E-value of alignments to 1e-100. Alignments with E-value > 1e-100 will be called unmapped:  \n./graphmap align --evalue 1e-100 -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# Output all secondary alignments instead of only one best:  \n./graphmap align --secondary -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# Control the similarity for secondary alignments. All alignments to within F*num_covered_bases from the best will be output.  \n./graphmap align --secondary -F 0.05 -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# Limit the number of threads to 8, and load reads in batches of 50MB:  \n./graphmap align -t 8 -B 50 -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# Align reads using more sensitive parameters for Illumina data:  \n./graphmap align -x illumina -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# Load all reads in one batch and align only the first 1000 reads:  \n./graphmap align -B 0 -n 1000 -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# Rebuild the index if it already exists:  \n./graphmap align --rebuild-index -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n# Generate only the index.  \n./graphmap align -I -r escherichia_coli.fa  \n\n# Run a debug version of GraphMap (build with \"make debug\") and verbose the SAM output to see various info about alignment:  \n./graphmap-debug align -b 3 -r escherichia_coli.fa -d reads.fastq -o alignments.sam  \n\n```  \n"
      },
      "source": "https://raw.githubusercontent.com/isovic/graphmap/master/README.md",
      "technique": "header_analysis"
    }
  ]
}