{
  "application_domain": [
    {
      "confidence": 30.36,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "SpikeHunter: A Deep Learning Tool for Identifying Phage Tailspike Proteins"
        ],
        "type": "Text_excerpt",
        "value": "If you use SpikeHunter in your research, please cite it as follows:\nYang Y, Dufault-Thompson K, Yan W, Cai T, Xie L, Jiang X. Deciphering Phage-Host Specificity Based on the Association of Phage Depolymerases and Bacterial Surface Glycan with Deep Learning. bioRxiv. 2023:2023-06.\n"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "SpikeHunter: A Deep Learning Tool for Identifying Phage Tailspike Proteins"
        ],
        "type": "Text_excerpt",
        "value": "This project uses code adapted from the [pytorch-template](https://github.com/victoresque/pytorch-template) repository by Victor Huang. We thank Victor Huang for providing this useful code as a starting point for our project.\n"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nlm-irp-jianglab/SpikeHunter"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-15T18:08:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-16T18:11:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "\u2699\ufe0f SpikeHunter: A Deep Learning Tool for Identifying Phage Tailspike Proteins"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9775504060560847,
      "result": {
        "original_header": "SpikeHunter: A Deep Learning Tool for Identifying Phage Tailspike Proteins",
        "type": "Text_excerpt",
        "value": "SpikeHunter utilizes a deep learning approach to identify phage tailspike proteins. It achieves this by using a protein language model, ESM-2 transformer, which can detect patterns in protein sequences. The PyTorch framework enables efficient processing of large datasets, making SpikeHunter a valuable tool for researchers studying phage-host interactions.\n \n"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9674143161962928,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- Identifies tailspike proteins in phage sequences using advanced algorithms.\n- Supports analysis of multiple phage genomes in a single run.\n- Exports results in a TSV format for easy downstream analysis.\n \n"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nlm-irp-jianglab/SpikeHunter/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQ",
        "parent_header": [
          "SpikeHunter: A Deep Learning Tool for Identifying Phage Tailspike Proteins"
        ],
        "type": "Text_excerpt",
        "value": "**Q1**. What if I encounter an Error: \"torch.cuda.OutOfMemoryError: CUDA out of memory.\"?  \n**A1**: Please decrease the batch size in predict.yaml. For example, from \"batch_size: 50\" to \"batch_size: 25\". \n\n**Q2**: What if I encounter an Error from \"multiprocessing/popen_fork.py\": \"BlockingIOError: [Errno 11] Resource temporarily unavailable\"?  \n**A2**: Please decrease the number of workers in predict.yaml. For example, from \"num_workers: 30\" to \"num_workers: 8\".\n"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nlm-irp-jianglab/SpikeHunter/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nlm-irp-jianglab/SpikeHunter"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SpikeHunter: A Deep Learning Tool for Identifying Phage Tailspike Proteins"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "SpikeHunter: A Deep Learning Tool for Identifying Phage Tailspike Proteins"
        ],
        "type": "Text_excerpt",
        "value": "To install SpikeHunter, follow these steps:\n\n1. Clone the repository:\n```\ngit clone https://github.com/nlm-irp-jianglab/SpikeHunter.git\n```\n\n2. Install the required dependencies:\n```\ncd SpikeHunter\nconda env create --file environment.yml\n# or if you have mamba installed\n# mamba env create --file environment.yml\nconda activate SpikeHunter\n```\n\n3. Download essential models\n```\n# change ESM2 path\nexport esm_folder=<your path for downloading ESM models>\npython setup.py ${esm_folder}\n# For example: \n# export esm_folder=/data/Irp-jiang/share/yyang/ESM\n# python setup.py ${esm_folder}\n\n# please go to https://figshare.com/articles/online_resource/SpikeHunter_trained_model_pth_file/23577051 to download model_best.pth and copy it to trained_model/ folder\n# Notice: Make sure config.yaml file is in the same folder with the model.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nlm-irp-jianglab/SpikeHunter/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 Yiyan Yang, Xiaofang Jiang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "SpikeHunter: A Deep Learning Tool for Identifying Phage Tailspike Proteins"
        ],
        "type": "Text_excerpt",
        "value": "SpikeHunter is released under the [MIT License](./LICENSE).\n"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/image/logo.jpg"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SpikeHunter"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "nlm-irp-jianglab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 42657,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "SpikeHunter: A Deep Learning Tool for Identifying Phage Tailspike Proteins"
        ],
        "type": "Text_excerpt",
        "value": "SpikeHunter requires the following Python libraries:\n\n- Pytorch\n- Pandas\n- Numpy\n"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:07:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "SpikeHunter: A Deep Learning Tool for Identifying Phage Tailspike Proteins"
        ],
        "type": "Text_excerpt",
        "value": "```\nusage: SpikeHunter.py [-h] [-c CONFIG] [-r RESUME] [-d DEVICE]\n\nSpikeHunter\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONFIG, --config CONFIG\n                        config file path (default: None)\n  -r RESUME, --resume RESUME\n                        path to latest checkpoint (default: None)\n  -d DEVICE, --device DEVICE\n                        indices of GPUs to enable (default: all)\n```\n\nSimply run SpikeHunter using the following command:\n```\n# The input and output files are in folder `test/`\nexport esm_folder=<your path for downloading ESM model>\nenvsubst < template.yaml > predict.yaml\npython SpikeHunter.py -c predict.yaml -r trained_model/model_best.pth\n```\n"
      },
      "source": "https://raw.githubusercontent.com/nlm-irp-jianglab/SpikeHunter/main/README.md",
      "technique": "header_analysis"
    }
  ]
}