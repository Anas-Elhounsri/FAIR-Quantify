{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# CITATION.cff file was generated with cffinit.\n# https://bit.ly/cffinit\n\ncff-version: 1.2.0\ntitle: Marine Functional EukaRyotic Reference Taxa\nmessage: >-\n  An open source library of marine microbial eukaryotic\n  protein sequences for the taxonomic annotation of\n  environmental metatranscriptomes\ntype: software\nauthors:\n  - given-names: Ryan\n    family-names: Groussman\n    name-suffix: PhD\n    email: rgrous83@uw.edu\n    affiliation: University of Washington\n    orcid: 'https://orcid.org/0000-0001-7874-7217'\nrepository-code: 'https://github.com/armbrustlab/marferret'\nrepository: 'https://doi.org/10.5281/zenodo.7055911'\nabstract: >-\n  Metatranscriptomics generates large volumes of sequence\n  data about transcribed genes in natural environments.\n  Taxonomic annotation of these datasets depends on\n  availability of curated reference sequences. For marine\n  microbial eukaryotes, current reference libraries are\n  limited by gaps in sequenced organism diversity and\n  barriers to updating libraries with new sequence data,\n  resulting in taxonomic annotation of only about half of\n  eukaryotic environmental transcripts. Here, we introduce\n  version 1.0 of Marine Functional EukaRyotic Reference Taxa\n  (MarFERReT), an updated marine microbial eukaryotic\n  sequence library with a version-controlled framework\n  designed for taxonomic annotation of eukaryotic\n  metatranscriptomes. MarFERReT v1 contains reference\n  sequences from 787 curated marine eukaryotic genomes and\n  transcriptomes drawn from multiple sources, covering 444\n  species and 287 genera, totaling over 27 million protein\n  sequences with an associated NCBI Taxonomy identifier and\n  Pfam functional annotations\nlicense: MIT\ncommit: MarFERReT\nversion: 1.0.1\ndate-released: '2023-11-21'\n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "A version-controlled, open source library of marine microbial eukaryotic protein sequences for the taxonomic annotation of environmental metatranscriptomes",
        "parent_header": [
          "MarFERReT",
          "Marine Functional EukaRyotic Reference Taxa"
        ],
        "type": "Text_excerpt",
        "value": "The Marine Functional EukaRyotic Reference Taxa (MarFERReT) is a version-controlled and open source reference sequence library of marine eukarote proteins that allows for community-supported expansion over time. MarFERReT was constructed for the primary purpose of taxonomic annotation of environmental metatranscriptomes. The MarFERRet data products can be downloaded from the [Zenodo repository](https://zenodo.org/record/7055911) as described in Part A, or built from the source data using a containerized pipeline following the steps in Part B. The case studies included in Part C illustrate how MarFERReT can be used on its own or in combination with other reference libraries for taxonomic and functional annotation.\n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Source reference sequences",
        "parent_header": [
          "MarFERReT",
          "Part B: Building MarFERReT",
          "2) Collecting and organizing inputs"
        ],
        "type": "Text_excerpt",
        "value": "Once you have cloned the MarFERReT repository onto your machine, make a new directory called `source_seqs` under the [`data`](https://github.com/armbrustlab/marferret/tree/main/data) directory. You will deposit all of the fasta files of the source reference sequences into this directory. Detailed instructions for finding and downloading the source reference sequences used to build MarFERReT v1 can be found in this document: [download_source_sequences.md](https://github.com/armbrustlab/marferret/blob/main/docs/download_source_sequences.md). Before running the MarFERReT pipeline, all of these fasta files should be unzipped. \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "7) Combining MarFERReT with other reference sequence libraries",
        "parent_header": [
          "MarFERReT",
          "Part B: Building MarFERReT"
        ],
        "type": "Text_excerpt",
        "value": "MarFERReT can be combined with other domain-focused reference sequence libraries or new reference sequence transcriptomes and genomes to expand taxonomic coverage. In the Case Studies, we show an example combining MarFERReT with a filtered version of the prokaryote-focused MARMICRODB library. Both libraries use NCBI Taxonomy identifiers as their primary classification framework, facilitating compatible annotation approaches. After downloading or building the MarFERReT protein sequence database, bacterial sequences can be downloaded from the MARMICRODB Zenodo repository and the libraries concatenated together for use in downstream processes. \n\nMarFERReT can also be combined with individual reference sequence transcriptomes and genomes that have just been released, or are not incorporated in current reference libraries, or to add representation for specific research needs. This also requires that every sequence entry has an NCBI Taxonomy identifier. Instruction and code for combining MarFERReT with other large reference libraries like MARMICRODB or with sets of individual reference sequence entries can be found on the codebase repository here: [combining_marferret_and_other_references.md](https://github.com/armbrustlab/marferret/blob/main/docs/combining_marferret_and_other_references.md)\n\n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/armbrustlab/marferret"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-22T21:54:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-16T18:28:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Code repository for collection, ingestion, and processing of genomic and transcriptomic sequence data into a reproducible reference sequence database"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8497312988929764,
      "result": {
        "original_header": "Table of Contents",
        "type": "Text_excerpt",
        "value": "The contents of this repo are organized into four parts:\n* Part A: [Using MarFERReT directly](https://github.com/armbrustlab/marferret/blob/main/README.md#part-a-using-marferret-directly)\n* Part B: [Building MarFERReT](https://github.com/armbrustlab/marferret/blob/main/README.md#part-b-building-marferret)\n* Part C: [Using MarFERRet](https://github.com/armbrustlab/marferret/blob/main/README.md#part-c-using-marferret)\n\t* [Case Study 1](https://github.com/armbrustlab/marferret/blob/main/docs/Case_study_1.md)\n\t* [Case Study 2](https://github.com/armbrustlab/marferret/blob/main/docs/Case_study_2.md)\n* Part D: [Future MarFERReT releases](https://github.com/armbrustlab/marferret/blob/main/README.md#part-d-future-marferret-releases)\n \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9795938789702968,
      "result": {
        "original_header": "Part A: Using MarFERReT directly",
        "type": "Text_excerpt",
        "value": "Finalized MarFERReT data products include nearly 28 million intra-species clustered protein sequences, metadata with curated taxonomy identifiers, Pfam protein annotations, core transcribed gene catalogs for marine microbial eukaryote lineages, and other supporting data. The URLs are provided for the sources of the individual sequences, and the compiled, translated, and clustered sequences are available for download through this [Zenodo repository](https://zenodo.org/doi/10.5281/zenodo.7055911).  \nIf downloaded directly, the steps listed below to build MarFERReT can be skipped. The Zenodo repository contains the intra-taxa clustered protein sequences for the subset of validated entries, a pre-constructed DIAMOND indexed database of the MarFERReT protein sequences, and Pfam 34.0 annotations. MarFERReT can be combined with other protein sequence reference libraries for expanded phylogenetic coverage. For an example of combining databases, see step 8 (Combining MarFERReT with other reference sequence libraries). An example workflow for using these data to annotate environmental metatranscriptome is described in subsection 9 below (Using MarFERReT to annotate environmental metatranscriptomes). \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9874112799469482,
      "result": {
        "original_header": "Part B: Building MarFERReT",
        "type": "Text_excerpt",
        "value": "This section details how to build your own copy of MarFERReT starting from source reference sequences and the scripts stored in this repository. If you want to begin using MarFERReT right away, you can download the clustered protein sequences and taxonomic information from Zenodo [Zenodo repository](https://zenodo.org/record/7055911) as described above and skip to [Part C](https://github.com/armbrustlab/marferret/blob/main/README.md#part-c-using-marferret). \nIf you're still here, that means you're ready to get into the technical details of building your own copy of the MarFERReT data. This work is broken down into five steps: \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9308663795621599,
      "result": {
        "original_header": "1) Cloning the MarFERReT repository",
        "type": "Text_excerpt",
        "value": "The first step is to copy the MarFERReT pipeline code onto the computer where you intend to build the database. This can be done by [cloning](https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository) this repository into a suitable directory on your machine. \n \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.918041070536795,
      "result": {
        "original_header": "Metadata file",
        "type": "Text_excerpt",
        "value": "A metadata file entitled `MarFERReT.{VERSION}.metadata.csv` contains important information on each of the source reference sequences used to build the MarFERReT database. Every source reference sequence in the `source_seqs` directory should have a corresponding line in the metadata file with at least the following fields properly filled in:\n* `entry_id`: a unique MarFERReT identifier for the reference sequence\n* `accepted`: [Y/N]; determines inclusion in final build\n* `marferret_name`: a human-readable name for the reference sequence (no spaces or special characters)\n* `tax_id`: an NCBI taxonomical identifier\n* `source_filename`: this should exactly match the name of the fasta file in `source_seqs` (unzipped)\n* `seq_type`: the sequence type of the source fasta -- 'nt' for nucleotide and 'aa' for amino acid\n \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9404194133168776,
      "result": {
        "original_header": "3) Building software containers",
        "type": "Text_excerpt",
        "value": "The MarFERReT database construction pipeline is entirely containerized, meaning that you do not need to worry about software dependencies. Additionally, MarFERReT supports both Singularity and Docker containerization, depending on user preference. The necessary containers can be built in two steps:\n1. Install either [Singularity](https://docs.sylabs.io/guides/3.0/user-guide/installation.html) or [Docker](https://docs.docker.com/engine/install/) on your machine. \n1. Navigate to the [`containers`](https://github.com/armbrustlab/marferret/tree/main/containers) directory and run either the [`build_singularity_images.sh`](https://github.com/armbrustlab/marferret/blob/main/containers/build_singularity_images.sh) or [`build_docker_images.sh`](https://github.com/armbrustlab/marferret/blob/main/containers/build_docker_images.sh) script from the command line.\n \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9197218648376406,
      "result": {
        "original_header": "5) Annotating MarFERReT database sequences",
        "type": "Text_excerpt",
        "value": "Information on the functions of the proteins included in MarFERReT can be added in by annotating the sequences with one of the many bioinformatic tools available for functional inference. In this repository we have included a script for annotating the database with [Pfam](https://interpro-documentation.readthedocs.io/en/latest/databases.html#pfam) (now included as a part of the InterPro consortium).  \nTo annotate MarFERRet, you must first download a copy of the Pfam database of HMM profiles. Make a new directory named `pfam` under the [`data`](https://github.com/armbrustlab/marferret/tree/main/data) directory. Download into this directory the latest version of Pfam from the [Pfam ftp site](`http://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/`).  \nThe annotation script can take many days to run, as every protein is compared against every HMM profile. Once it has successfully completed, you should find the following outputs in the `data` directory:\n* `MarFERReT.{VERSION}.best_pfam_annotations.csv.gz` -- a summary of the best Pfam annotation for each MarFERReT reference protein\n* `pfam/MarFERReT.${VERSION}.pfam.domtblout.tab.gz` -- the complete set of Pfam annotations against each MarFERReT reference protein \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9966457171765695,
      "result": {
        "original_header": "6) Building Core Transcribed Gene catalog",
        "type": "Text_excerpt",
        "value": "After the MarFERReT protein sequences have been functionally annotated, sets of CTGs can be derived from the RNA-derived data for specific marine lineages or for all eukaryotes. Selecting the Pfam IDs that are present in at least 95% of species of a given lineage allows us to define a set of functions that can be reasonably expected to be found in a relatively complete transcriptome. These CTG catalogs can be used downstream of environmental sequence annotation with MarFERReT to assess the coverage of environmental taxon bins, as demonstrated in Case Study 2. Documentation and code for generating and using the CTG catalogs from Pfam annotations for user-defined lineages are found here: [Case_study_2.md](https://github.com/armbrustlab/marferret/blob/main/docs/Case_study_2.md#part-a--generating-core-transcribed-genes) \n \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9896782427784092,
      "result": {
        "original_header": "Part C: Using MarFERReT",
        "type": "Text_excerpt",
        "value": "The primary intended use of MarFERReT is the taxonomic annotation of marine metatranscriptomic datasets. This can be done without building your own copy of the database. Instead, the current MarFERReT database files necessary for annotation can be downloaded from [Zenodo repository](https://zenodo.org/record/7055911). \nOne means of performing this taxonomical annotation is to search MarFERReT for the closest matches to your data sequences. There are many bioinformatic tools available for this type of sequence alignment. One such popular tool for high performance sequence alignment of big datasets is [DIAMOND](https://github.com/bbuchfink/diamond). In the [`scripts`](https://github.com/armbrustlab/marferret/tree/main/scripts) directory of this repository, we have included a script named [`build_diamond_db.sh`](https://github.com/armbrustlab/marferret/blob/main/scripts/build_diamond_db.sh) for using DIAMOND in combination with MarFERReT. This script requires the `MarFERReT.v1.proteins.faa.gz` and `MarFERReT.v1.taxonomies.tab.gz` as inputs in the `data` directory.\n \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9897519134309065,
      "result": {
        "original_header": "Part D: Future MarFERReT releases",
        "type": "Text_excerpt",
        "value": "\nMarFERReT was designed to be updated as new microbial eukaryote functional reference sequences are publicly released, with releases identified either through literature reviews, updates to public repositories, or through user nominations. Suggestions for new additions or changes to MarFERReT in future versions can be submitted via the [\u2018Issues\u2019 request function](https://github.com/armbrustlab/marferret/issues) on this repository. When submitting an organism request for future MarFERReT versions, the following information is required:\n1. Full scientific name of the organism (with strain name if possible)\n1. An [NCBI Taxonomy](https://www.ncbi.nlm.nih.gov/taxonomy) taxID of the organism (as specific as possible, e.g. strain-level)\n1. A URL to the location of the assembled source data, with additional instructions if necessary\n1. Brief justification for why this organism should be included, e.g. \"New SAGs from a clade of marine haptophytes\".\n1. A citation or publication for the data, if available. \nNew entries will be processed through the workflow described for candidate entries and validated by hierarchical clustering of annotated protein content (see [MarFERReT candidate entry validation](https://github.com/armbrustlab/marferret/blob/main/docs/entry_validation.md) notes). Future versions of MarFERReT will be documented in a changelog in the repository (link), describing any additions or modifications to the library composition. The changelog will detail updates to the MarFERReT code and MarFERReT files hosted on Zenodo, including revisions to the scripts, metadata files, functional annotation protocols, protein sequence library, DIAMOND databases, and CTG inventories.\n \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/armbrustlab/marferret/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/armbrustlab/marferret/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/armbrustlab/marferret/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "armbrustlab/marferret"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MarFERReT"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/containers/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/containers/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/versions/v1_demo/marferret.v1_demo.tutorial.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/scripts/pfam_annotate.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/scripts/assemble_marferret.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/scripts/build_diamond_db.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/scripts/marferret_marmicrodb/merge_marferret_marmicrodb.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/scripts/marferret_marmicrodb/marmicrodb_processing.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/docs/process_clean_marmicrodb.log.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/data/source_seqs/README.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/containers/build_docker_images.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/containers/build_singularity_images.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/images/diagram2_web.png"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9724906527397469,
      "result": {
        "original_header": "Part A: Using MarFERReT directly",
        "type": "Text_excerpt",
        "value": "If downloaded directly, the steps listed below to build MarFERReT can be skipped. The Zenodo repository contains the intra-taxa clustered protein sequences for the subset of validated entries, a pre-constructed DIAMOND indexed database of the MarFERReT protein sequences, and Pfam 34.0 annotations. MarFERReT can be combined with other protein sequence reference libraries for expanded phylogenetic coverage. For an example of combining databases, see step 8 (Combining MarFERReT with other reference sequence libraries). An example workflow for using these data to annotate environmental metatranscriptome is described in subsection 9 below (Using MarFERReT to annotate environmental metatranscriptomes). \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9971540832254113,
      "result": {
        "original_header": "Part B: Building MarFERReT",
        "type": "Text_excerpt",
        "value": "This section details how to build your own copy of MarFERReT starting from source reference sequences and the scripts stored in this repository. If you want to begin using MarFERReT right away, you can download the clustered protein sequences and taxonomic information from Zenodo [Zenodo repository](https://zenodo.org/record/7055911) as described above and skip to [Part C](https://github.com/armbrustlab/marferret/blob/main/README.md#part-c-using-marferret). \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9952960780807746,
      "result": {
        "original_header": "1) Cloning the MarFERReT repository",
        "type": "Text_excerpt",
        "value": "The first step is to copy the MarFERReT pipeline code onto the computer where you intend to build the database. This can be done by [cloning](https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository) this repository into a suitable directory on your machine. \n \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999998795239308,
      "result": {
        "original_header": "3) Building software containers",
        "type": "Text_excerpt",
        "value": "The MarFERReT database construction pipeline is entirely containerized, meaning that you do not need to worry about software dependencies. Additionally, MarFERReT supports both Singularity and Docker containerization, depending on user preference. The necessary containers can be built in two steps:\n1. Install either [Singularity](https://docs.sylabs.io/guides/3.0/user-guide/installation.html) or [Docker](https://docs.docker.com/engine/install/) on your machine. \n1. Navigate to the [`containers`](https://github.com/armbrustlab/marferret/tree/main/containers) directory and run either the [`build_singularity_images.sh`](https://github.com/armbrustlab/marferret/blob/main/containers/build_singularity_images.sh) or [`build_docker_images.sh`](https://github.com/armbrustlab/marferret/blob/main/containers/build_docker_images.sh) script from the command line.\n \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9970471128127699,
      "result": {
        "original_header": "5) Annotating MarFERReT database sequences",
        "type": "Text_excerpt",
        "value": "To annotate MarFERRet, you must first download a copy of the Pfam database of HMM profiles. Make a new directory named `pfam` under the [`data`](https://github.com/armbrustlab/marferret/tree/main/data) directory. Download into this directory the latest version of Pfam from the [Pfam ftp site](`http://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/`).  \nOnce the Pfam HMM database has been downloaded, navigate to the [`scripts`](https://github.com/armbrustlab/marferret/tree/main/scripts) directory and run the  [`pfam_annotate.sh`](https://github.com/armbrustlab/marferret/blob/main/scripts/pfam_annotate.sh) script from the command line. In addition to the `data/pfam/Pfam-A.hmm` HMM database, this script requires the  `data/MarFERReT.{VERSION}.proteins.faa.gz` file as an input.  \nThe complete set of Pfam annotations can also be found on the [Zenodo repository](https://zenodo.org/record/7055911) as `MarFERReT.v1.Pfam_annotations.tar.gz`\n \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9157492113831386,
      "result": {
        "original_header": "Part C: Using MarFERReT",
        "type": "Text_excerpt",
        "value": "The primary intended use of MarFERReT is the taxonomic annotation of marine metatranscriptomic datasets. This can be done without building your own copy of the database. Instead, the current MarFERReT database files necessary for annotation can be downloaded from [Zenodo repository](https://zenodo.org/record/7055911). \n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/armbrustlab/marferret/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Armbrust Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/images/marferret_logo2.png"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "marferret"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "armbrustlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 59392,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 32487,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 16723,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Singularity",
        "size": 460,
        "type": "Programming_language",
        "value": "Singularity"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 276,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://interpro-documentation.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rdgroussman",
          "type": "User"
        },
        "date_created": "2024-01-23T07:35:56Z",
        "date_published": "2024-01-23T07:38:36Z",
        "description": "## MarFERReT protein sequence reference library change log\r\n\r\n### v1.1.1\r\n\r\n**Improvements to MarFERReT assembly scripts**\r\n- Incorporated inclusion/exclusion flag into build procedure to integrate QC process\r\n- Added check to see if translated protein sequence already exists\r\n- Changed scripts to pull database version from input metadata file\r\n- Streamlined the internal file naming process\r\n  - Important output files are now generated with the same version ID as the input metadata.csv\r\n- The /data/source_seqs/ directory for input source sequences is now pre-generated\r\n\r\n**Added test data set and demo tutorial**\r\n- Added a small data set to test the MarFERRet build process under /versions/v1_demo/\r\n  - Seven-entry metadata.csv file (MarFERReT.v1_demo.metadata.csv)\r\n  - Compressed tarball with small set of FASTA sequences (demo_mini_entries.tar.gz)\r\n  - Demo tutorial script (marferret.v1_demo.tutorial.sh)\r\n\r\n**Zenodo repository release**\r\n- Input metadata files and output files generated by the assemble_marferret.sh, pfam_annotate.sh, and build_diamond_db.sh MarFERReT build scripts have been deposited in a Zenodo repository linked to the v1.1.1 codebase: [https://doi.org/10.5281/zenodo.10553848](https://doi.org/10.5281/zenodo.10553848)\r\n\r\n",
        "html_url": "https://github.com/armbrustlab/marferret/releases/tag/v1.1.1",
        "name": "v1.1.1",
        "release_id": 138096796,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/armbrustlab/marferret/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/armbrustlab/marferret/releases/138096796",
        "value": "https://api.github.com/repos/armbrustlab/marferret/releases/138096796",
        "zipball_url": "https://api.github.com/repos/armbrustlab/marferret/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rdgroussman",
          "type": "User"
        },
        "date_created": "2023-12-08T12:42:17Z",
        "date_published": "2023-12-08T12:44:58Z",
        "description": "This release is associated with the v1.1 release of the MarFERReT reference library:\r\nhttps://zenodo.org/records/10170983\r\n",
        "html_url": "https://github.com/armbrustlab/marferret/releases/tag/v1.1",
        "name": "v1.1.0",
        "release_id": 133170405,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/armbrustlab/marferret/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/armbrustlab/marferret/releases/133170405",
        "value": "https://api.github.com/repos/armbrustlab/marferret/releases/133170405",
        "zipball_url": "https://api.github.com/repos/armbrustlab/marferret/zipball/v1.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "4) Running MarFERReT database construction pipeline",
        "parent_header": [
          "MarFERReT",
          "Part B: Building MarFERReT"
        ],
        "type": "Text_excerpt",
        "value": "Once the input source reference sequences have been collected, metadata has been organized, and the software containers have been built, you are ready to run the MarFERReT database construction pipeline. Navigate to the [`scripts`](https://github.com/armbrustlab/marferret/tree/main/scripts) directory and run the [`assemble_marferret.sh`](https://github.com/armbrustlab/marferret/blob/main/scripts/assemble_marferret.sh) script from the command line. You will be prompted to enter either `1` or `2` depending on whether you are using Singularity or Docker containerization. \n\nThe pipeline will take several hours to run, depending on your computer system specifications. When it is done you should find the following outputs in the `data` directory:\n* `MarFERReT.{VERSION}.proteins.faa.gz` -- MarFERReT protein library\n* `MarFERReT.{VERSION}.taxonomies.tab.gz` -- taxonomy mapping file required as input for building diamond database\n* `MarFERReT.{VERSION}.proteins_info.tab.gz` -- mapping file connecting each MarFERReT protein to its originating reference sequence\n* `/aa_seq` -- directory with translated & standardized amino acid sequences\n* `/taxid_grouped` -- directory with amino acid sequences grouped by taxid\n* `/clustered` -- directory with amino acid sequences clustered within taxid\n\nThe three .gz files listed above can also be downloaded directly from the [Zenodo repository](https://zenodo.org/records/10553848)\n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:39:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Case Studies",
        "parent_header": [
          "MarFERReT",
          "Part C: Using MarFERReT"
        ],
        "type": "Text_excerpt",
        "value": "The case studies presented here are practical examples how MarFERReT can be used by itself or in conjunction with other protein sequence libraries to assign taxonomic identity to environmental sequences using DIAMOND fast protein alignment, and then to assess the completeness of annotated environmental transcript bins.\n\nA visual diagram of the case study analyses can be found here:\n![Part 1 diagram](https://github.com/armbrustlab/marferret/blob/main/images/diagram2_web.png)\n\n[Case Study 1](https://github.com/armbrustlab/marferret/blob/main/docs/Case_study_1.md)\nThis Case Study shows how MarFERReT can be used to annotate unknown environmental sequences using the DIAMOND fast protein-alignment tool (Buchfink et al., 2015). In summary, a DIAMOND-formatted database is created from sequence data and NCBI Taxonomy information, and used to annotate unknown environmental reads.\n\n[Case Study 2](https://github.com/armbrustlab/marferret/blob/main/docs/Case_study_2.md) documents how to identify core transcribed genes for user-defined lineages using MarFERReT protein sequences, and provides an example on how to estimate the completeness of environmental transcriptome bins with taxonomic annotation (from Case Study 1) and functional annotation with Pfam 34.0 (now included as a part of the InterPro consortium). In summary, the taxonomic and functional annotations are aggregated together, and the percentage of lineage-specific CTGs is determined for each species-level environmental taxon bin.\n\nWhile the case studies discussed above demonstrate the practicality of using MarFERReT for annotating environmental metatranscriptomes, MarFERReT can also be used to supplement other analyses that depend on reference proteins, including the analysis of marine metagenomes and metaproteomes.\n\n"
      },
      "source": "https://raw.githubusercontent.com/armbrustlab/marferret/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}