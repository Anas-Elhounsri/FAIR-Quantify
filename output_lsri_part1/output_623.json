{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References:",
        "parent_header": [
          "NPOmix v1.0",
          "Video overview:"
        ],
        "type": "Text_excerpt",
        "value": "1) 3% of the biosynthetic potential: Gavriilidou, A., Kautsar, S. A., Zaburannyi, N., Krug, D, Muller, R., Medema, M. H. & Ziemert, N. A global survey of specialized metabolic diversity encoded in bacterial genomes. bioRxiv (2021).\n2) Piared omics Data Platform: Schorn, M. A. et al. A community resource for paired genomic and metabolomic data mining. Nat. Chem. Biol. 17, 363\u2013368 (2021).\n3) New approved drugs from 1981 to 2014: Newman, D. J. & Cragg, G. M. Natural Products as Sources of New Drugs from 1981 to 2014. J. Nat. Prod. 79, 629\u201361 (2016).\n"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tiagolbiotech/NPOmix_python"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-02T22:44:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-24T23:11:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9808864089907726,
      "result": {
        "original_header": "Overview of the methodology",
        "type": "Text_excerpt",
        "value": "To use the NPOmix approach (Fig. 1, schematic example for the approach used in only four samples), you will need a dataset of so-called paired genome-MS/MS samples, samples that contain both a genome (or metagenome) and a group of MS/MS spectra obtained via untargeted LC-MS/MS. Many paired datasets are available at the Paired omics Data Platform [(PoDP)](https://pairedomicsdata.bioinformatics.nl), one of the first initiatives to gather paired genome-MS/MS samples. By applying [BiG-SCAPE](https://bigscape-corason.secondarymetabolites.org), each biosynthetic gene cluster (BGC) in the genomes will go through a pairwise similarity comparison (Fig. 1A) to every other BGC in the same set of genomes to compute similarity scores (1 minus BiG-SCAPE raw distance) and to assign BGCs to Gene Cluster Families (GCFs), if possible. In order to create a BGC fingerprint (Fig. 1C), we identify the maximum similarity of the query BGC to one of the many BGCs in each genome (which can be considered a pool of BGCs) in the dataset. Therefore, the BGC fingerprints can be represented as a row of values (a vector with the maximum similarity scores), and each column is a different genome from the selected dataset. Similarity scores range from 0.0 to 1.0; for instance, identical BGCs have a perfect similarity score of 1.0, a score of 0.8 would represent that a homologous BGC is present in the genome, and the score of 0.0 (or below the similarity cutoff of 0.7) represents that the queried BGC is absent in the genome. A similar process happens to create MS/MS fingerprints (Fig. 1B); however, genomes are replaced by MS/MS spectra, and a query BGC is replaced by a query MS/MS spectrum; either a reference spectrum from [GNPS](https://gnps.ucsd.edu/ProteoSAFe/static/gnps-splash.jsp) or a cryptic MS/MS spectrum from a new sample (that contains a genome and experimental MS/MS spectra). In the case of MS/MS fingerprints (Fig. 1D), we used GNPS to calculate the pairwise modified cosine score and then identify the maximum similarity of the query MS/MS spectrum to one of the many MS/MS spectra in each experimental sample. Of particular note, we did not use the full classical GNPS molecular networking capabilities; we only used the functions required to calculate a modified cosine similarity score between a pair of MS/MS spectra. The BGC fingerprints create a training matrix (Fig. 1E) where rows are the maximum similarity scores, normally thousands of rows (e.g., for our first release, round 4, we have used 5,421 BGCs in 1,040 genomes/metagenomes), where each genome is a column. This matrix can be fed to the k-nearest neighbor (KNN) algorithm in order to train it with the genomic data. Additionally, one extra column is required in this genomic data matrix, a column that labels each BGC fingerprint with a GCF so the KNN algorithm will know the fingerprint patterns that belong together. The KNN algorithm plots the BGC fingerprints in the KNN space (in Fig. 1G, the KNN space is exemplified by only 2 dimensions). Next, the MS/MS fingerprints also form a testing matrix (Fig. 1F); in this case, this matrix also contains 1,040 columns due to the 1,040 sets of paired experimental MS/MS spectra. For example, for our first release, this testing matrix contained 15 reference MS/MS fingerprints (rows) for MS/MS reference spectra from the GNPS database. Each query MS/MS fingerprint (a row in the testing metabolomic matrix and columns are the experimental MS/MS spectra per sample) will also be plotted into the same KNN space (Fig. 1G) so the algorithm can obtain the GCF labels for the k-nearest neighbors to the query MS/MS fingerprint (e.g., for three most similar BGC neighbors, k = 3). We note that GCF labels can be present more than once in the returned list if two or more BGC nearest neighbors belong to the same gene family. This repetition of the GCF classification is a common behavior of the KNN approach. Our approach is suitable for bacterial, fungal, algal, and plant genomes and MS/MS spectra. Metagenomes and metagenome-assembled genomes can also be used instead of genomes; however, complete genomes are preferred. This KNN approach also supports LC-MS/MS from fractions or from different culture conditions; multiple LC-MS/MS files for the same genome were merged together into a single set of experimental MS/MS spectra. \n"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tiagolbiotech/NPOmix_python/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/notebook_advanced-npomix1-ntw_derep_AC.ipynb.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/notebook_advanced-npomix1-ntw_derep_AC.ipynb.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/notebook_basic-npomix1-gnps_mode-derep-TFL221219.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/notebook_basic-npomix1-gnps_mode-derep-TFL221219.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/notebook_dev-npomix2-gnps_mode-notderep-221219.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/notebook_dev-npomix2-gnps_mode-notderep-221219.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/notebook_basic-npomix1-gnps_mode-derep-explode-TFL230405.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/notebook_basic-npomix1-gnps_mode-derep-explode-TFL230405.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/notebook_advanced-npomix1-ntw_all_AC.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/notebook_advanced-npomix1-ntw_all_AC.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tiagolbiotech/NPOmix_python/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tiagolbiotech/NPOmix_python"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NPOmix v1.0"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/concat_bigscape.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix/main/Screen%20Shot%202021-06-23%20at%201.35.17%20PM.png"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix/main/Screen%20Shot%202021-06-23%20at%201.35.53%20PM.png"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing packages and softwares (using a bash terminal):",
        "parent_header": [
          "NPOmix v1.0",
          "Quick tutorial:"
        ],
        "type": "Text_excerpt",
        "value": "**\u2013 Anaconda**\nWe suggest using the command-line install according to https://docs.anaconda.com/anaconda/install/. For example:\n\n```\nFor macOSX, you can use the following commands in the terminal window.\n\ncd ~/Downloads/\nwget https://repo.anaconda.com/archive/Anaconda3-2023.03-MacOSX-x86_64.sh\nbash Anaconda3-2023.03-MacOSX-x86_64.sh\n```\n\n**\u2013 Conda packages:**\n\n```\nconda install -c bioconda pyteomics\nconda install -c anaconda requests\nconda install -c anaconda networkx\nconda install datetime\nconda install -c conda-forge biopython\nconda install -c anaconda scikit-learn\n```\n\n\n**- antiSMASH:** (offline, we recommend the online version, it has great interface)\n\n```\nconda install -c bioconda antismash\n```\n\n**\u2013 BiG-SCAPE:**\n\n```\nDownload and parse the pFAM database:\nwget http://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam35.0/Pfam-A.hmm.gz\ngzip -d Pfam-A.hmm.gz\nconda install -c bioconda hmmer\nhmmpress Pfam-A.hmm\n\nInstall the BiG-SCAPE software:\nconda create -n bigscape -c bioconda bigscape\n```\n"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9976059987700469,
      "result": {
        "original_header": "More information about NPOmix at (including workshops):",
        "type": "Text_excerpt",
        "value": "https://www.tfleao.com/npomix1\n \n"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9045211419777375,
      "result": {
        "original_header": "Submit your samples",
        "type": "Text_excerpt",
        "value": "If you have difficulties running the NPOmix tool for your samples or have questions, please submit your samples at the link below. \nhttps://www.tfleao.com/general-8\n \n"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.988715898620724,
      "result": {
        "original_header": "Video overview:",
        "type": "Text_excerpt",
        "value": "https://user-images.githubusercontent.com/12102722/131203358-9576574d-4526-414a-b6a5-b94125ea8b18.mp4\n \n"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.988715898620724,
      "result": {
        "original_header": "Video details on the methodology:",
        "type": "Text_excerpt",
        "value": "https://user-images.githubusercontent.com/12102722/133908907-b1ee838c-1180-40bb-aa27-b50bbecbd329.mp4\n \n"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tiagolbiotech/NPOmix_python/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Tiago Leao\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix/main/Screen_Shot_2021-08-12_at_7.18.10_PM.png"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NPOmix_python"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "tiagolbiotech"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 174124174,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 504996,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 51069,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:25:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Instructions:",
        "parent_header": [
          "NPOmix v1.0",
          "Quick tutorial:"
        ],
        "type": "Text_excerpt",
        "value": "**1) Clone the GitHub repository:**\n```\ncd path/to/root/folder\ngit clone https://github.com/tiagolbiotech/NPOmix_python.git\n```\n\n**2) Download the training BGCs (ideally in the `test/` folder):** \n```\nwget -O antismash_bgcs.zip https://zenodo.org/record/6637083/files/antismash_only_gbk.zip?download=1\nunzip antismash_bgcs.zip && rm antismash_bgcs.zip\n```\n\n**3) Clone the GNPS job with the metabolomes for the strains in the training set and add your files (ideally to G3 group):**\nhttps://gnps.ucsd.edu/ProteoSAFe/status.jsp?task=b915d1f78c364bf4be9900047760d95c\n\n**4) Download GNPS output. Run and download the [bacterial antiSMASH](https://antismash.secondarymetabolites.org/#!/start) file. Place the antiSMASH file in the `antismash_gbk_only` folder.**\n\n**5) Run BiG-SCAPE for the antiSMASH BGCs (including from your samples) and concatenate outputs for all classes.**\n\n```\nA) Run BiG-SCAPE:\nconda activate bigscape\nbigscape.py --pfam_dir /path/to/pfam_files/ -i /path/to/antismash/ \\ -o /path/to/bigscape_outputs_220603_1791samples/ -c 8 --include_singletons --mibig\n\nB) Concatenate outputs:\nsh concat_bigscape.sh /path/to/bigscape_output/ 2023-11-11_11-11-11_hybrids_glocal/\n```\n\n**6) Run the dereplication or not dereplication notebooks. Make sure to adjust the paths for the antiSMASH, GNPS and BiG-SCAPE files.**\n\n----------------------------------------------------------\n**For detailed instructions, please check the video below:**\n\nhttps://user-images.githubusercontent.com/12102722/214508959-6eb80a78-a63b-41cb-a8f1-81452f108dc5.mp4\n"
      },
      "source": "https://raw.githubusercontent.com/tiagolbiotech/NPOmix_python/main/README.md",
      "technique": "header_analysis"
    }
  ]
}