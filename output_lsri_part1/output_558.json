{
  "application_domain": [
    {
      "confidence": 38.58,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/luisdelaye/CurSa"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-07T23:38:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-07T23:43:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Perl scripts to Curate metadata information and Sample SARS-CoV-2 genome sequences downloaded from GISAID for analysis and display in Nextstrain and Microreact"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9853951396744665,
      "result": {
        "original_header": "CurSa",
        "type": "Text_excerpt",
        "value": "Perl scripts to Curate metadata information and Sample SARS-CoV-2 genome sequences downloaded from GISAID for analysis and display in Nextstrain and Microreact.\n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9846680778258384,
      "result": {
        "original_header": "beta.1.0.0 version",
        "type": "Text_excerpt",
        "value": "The scripts in this repository facilitate the curation of metadata downloaded from GISAID to make phylogenetic analysis of SARS-CoV-2. In particular, the scripts provided here facilitate the curation of the geographic categories 'location' and 'division'. This curation is an important step to properly display the sampling origin of genome sequences in Nextstrain and Microreact. The scripts provided here also allow to subsample sequences from GISAID to make a phylogeneitc analysis in Nextstrain (Figure 1). To run CurSa scripts you only need to have Perl and a Linux (or similar) environment. We used these scripts to create [Mexstrain](https://ira.cinvestav.mx/mexstrain/). \nNext, we show how to use the scripts to curate the names from geographical localities in the metadata and sample SARS-CoV-2 sequences for phylogenetic analysis with Nextstrain and display in Microreact.\n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.948994465766201,
      "result": {
        "original_header": "Collect data",
        "type": "Text_excerpt",
        "value": "The first step is to select a focal country. In our case we will select Mexico. Go to GISAID database and search all complete, high coverage genomes with collection date complete from the country of interest and download them in the format: 'Input for the Augur pipeline'. If there are more than 5000 genome sequences from the focal country, you will have to download the genome sequences in different batches. In the case of Mexico, we downloaded the sequences from each one of the states separatedly (Figure 2). \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9532985736043788,
      "result": {
        "original_header": "Curate the files containing the names of geographic localities",
        "type": "Text_excerpt",
        "value": "Now comes the toughest part: to assure that the names of the geographic localities are spelled the same in color_ordering.tsv, lat_longs.tsv and metadata.tsv files (Figure 3). First, a bit of background. We will asume that you have a [local Nextstrain installation](https://docs.nextstrain.org/en/latest/install.html). Now, Nextstrain store the names of geographic localities in two files: color_ordering.tsv and lat_longs.tsv. These files live in: ncov/defaults/ wihtin your Nextstrain build directory. The first file (color_ordering.tsv) is used by Nextstrain to know if a given locality is a 'region', 'country', 'division' or a 'location'; the second file (lat_longs.tsv) keep record of the geographic coordinates of all the places found in color_ordering.tsv. These files were prepared by the people of Nextstrain and (almost always!) share the same geographic localities. The names in color_ordering.tsv will be used as \"gold standards\" to identify typos and other inconsistencies in metadata.tsv and lat_longs.tsv, so before proceeding it is a good practice to open the file with a text editor (like [ATOM](https://atom.io)) and correct any error you find. \n<p align=\"center\">\n  <img width=\"720\" height=\"405\" src=\"https://github.com/luisdelaye/CurSa/blob/main/Figure_CurSa_3.jpeg\">\n</p>\n<p style='text-align: right;'> Figure 3. The names of the geographic localities (highlighted in yellow) have to coincide between color_ordering.tsv, lat_longs.tsv and metadata.tsv files. By the way, [Sombrerete](https://es.wikipedia.org/wiki/Sombrerete) is a Mexican city declared as a UNESCO World Heritage Site were the film [Caveman](https://en.wikipedia.org/wiki/Caveman_(film)) was filmed nearby (starred by Ringo Starr). You can see the full movie [here](https://www.youtube.com/watch?v=YxDjnTrRSiA). </p> \nNext, the metadata.tsv file donwloaded from GISAID has a column whith the geographic location where each coronavirus was sampled. The information in this column is used by Nextstrain to geolocalize the samples. To do so, each geographic location whithin metadata.tsv has to be represented in color_ordering.tsv and lat_longs.tsv files. However, this is not always the case because the names in metadata.tsv are captured by many different research groups the world and sometimes they introduce typos; or the names in metadata.tsv and in color_ordering.tsv and lat_longs.tsv files can be in different languages. In addition, there can be geographic localities in metadata.tsv that are lacking in color_ordering.tsv (and lat_longs.tsv) because the  Nextstrain team hasn't had the time to add them. We will see next how to fix these problems. Just keep in mind that at the end, all names from the geographic localities in metadata.tsv have to be in color_ordering.tsv; and every name from a geographic locality in metadata.tsv has to be associated to a geographic coordinate in lat_longs.tsv. \nThe first thing to do is to check whether the names of the geographic localities in metadata.tsv are found in color_ordering.tsv. We will do this specifically for the names of the country on which you would like to focus your Nextstrain analysis (in this case Mexico). For this we use the script compare_names.pl. We recommend you to make security copies of the original color_ordering.tsv and lat_longs.tsv files (in case you would like to recover the original files) and then make a copy of color_ordering.tsv and lat_longs.tsv to your working directory. Then run the script:\n```\ndata20230223/\n$ cp ~/Software/ncov/defaults/color_ordering.tsv .\n$ cp ~/Software/ncov/defaults/lat_longs.tsv .\n$ perl compare_names.pl color_ordering.tsv Mexico.metadata.tsv Mexico\n```\nThis script will check if the names of the geographical localities in metadata.tsv are found in color_ordering.tsv. If a name is not found, it will print a warning message to the screen (Part 1 of the output). This script will also check whether the same name is repeated whithin different geographic contexts (Part 2). We will see later that this may not be an error by itself. Note that if you analyze the sequences from a country whose name contain spaces (like 'Costa Rica') you have to replace spaces with underscores (i.e. Costa_Rica). In our example data, the first time you run the compare_names.pl script you will get the following output:\n```\n------------------------------------------------------------------------\nPart 1\nAre there names in Mexico.metadata.tsv lacking in color_ordering.tsv?\n\nWarning! name not found in color_ordering.tsv: 'Aguasacalientes'\ncontext in Mexico.metadata.tsv: North America / Mexico / Aguascalientes / Aguasacalientes\n\nWarning! name not found in color_ordering.tsv: 'Pabello de A'\ncontext in Mexico.metadata.tsv: North America / Mexico / Aguascalientes / Pabello de A\n\nWarning! name not found in color_ordering.tsv: 'Ensenada'\ncontext in Mexico.metadata.tsv: North America / Mexico / Baja California / Ensenada\n\nWarning! name not found in color_ordering.tsv: 'La Paz'\ncontext in Mexico.metadata.tsv: North America / Mexico / Baja California Sur / La Paz\n\nWarning! name not found in color_ordering.tsv: 'Carmen'\ncontext in Mexico.metadata.tsv: North America / Mexico / Campeche / Carmen\n\nWarning! name not found in color_ordering.tsv: 'Cancun'\ncontext in Mexico.metadata.tsv: North America / Mexico / Cancun\n\nWarning! name not found in color_ordering.tsv: 'CDMX'\ncontext in Mexico.metadata.tsv: North America / Mexico / CDMX\n\nWarning! name not found in color_ordering.tsv: 'Cuauhtemoc'\ncontext in Mexico.metadata.tsv: North America / Mexico / Chihuahua / Cuauhtemoc\n\nWarning! name not found in color_ordering.tsv: 'Ciudad de Mexico'\ncontext in Mexico.metadata.tsv: North America / Mexico / Ciudad de Mexico\n\nWarning! name not found in color_ordering.tsv: 'CMX'\ncontext in Mexico.metadata.tsv: North America / Mexico / CMX\n\nWarning! name not found in color_ordering.tsv: 'Frontera'\ncontext in Mexico.metadata.tsv: North America / Mexico / Coahuila / Frontera\n\nWarning! name not found in color_ordering.tsv: 'Cardonal Hgo'\ncontext in Mexico.metadata.tsv: North America / Mexico / Hidalgo / Cardonal Hgo\n\nWarning! name not found in color_ordering.tsv: 'Cuauhtemoc'\ncontext in Mexico.metadata.tsv: North America / Mexico / Mexico City / Cuauhtemoc\n\nWarning! name not found in color_ordering.tsv: 'Guadalupe'\ncontext in Mexico.metadata.tsv: North America / Mexico / Nuevo Leon / Guadalupe\n\nWarning! name not found in color_ordering.tsv: 'Gral. Escobedo'\ncontext in Mexico.metadata.tsv: North America / Mexico / Nuevo Leon / Gral. Escobedo\n\nWarning! name not found in color_ordering.tsv: 'Abasolo Nvo Leon'\ncontext in Mexico.metadata.tsv: North America / Mexico / Nuevo Leon / Abasolo Nvo Leon\n\nWarning! name not found in color_ordering.tsv: 'Rioverde'\ncontext in Mexico.metadata.tsv: North America / Mexico / San Luis Potosi / Rioverde\n\nWarning! name not found in color_ordering.tsv: 'Nogales'\ncontext in Mexico.metadata.tsv: North America / Mexico / Sonora / Nogales\n\nWarning! name not found in color_ordering.tsv: 'State of Mexico'\ncontext in Mexico.metadata.tsv: North America / Mexico / State of Mexico\n\nWarning! name not found in color_ordering.tsv: 'State of Mexico'\ncontext in Mexico.metadata.tsv: North America / Mexico / State of Mexico / Nicolas Romero\n\nWarning! name not found in color_ordering.tsv: 'State of Mexico'\ncontext in Mexico.metadata.tsv: North America / Mexico / State of Mexico / Naucalpan de Juarez\n\nWarning! name not found in color_ordering.tsv: 'Cardenas'\ncontext in Mexico.metadata.tsv: North America / Mexico / Tabasco / Cardenas\n\nWarning! name not found in color_ordering.tsv: 'Altamira'\ncontext in Mexico.metadata.tsv: North America / Mexico / Tamaulipas / Altamira\n\nWarning! name not found in color_ordering.tsv: 'Cordoba'\ncontext in Mexico.metadata.tsv: North America / Mexico / Veracruz / Cordoba\n\nWarning! name not found in color_ordering.tsv: 'Rio Grande'\ncontext in Mexico.metadata.tsv: North America / Mexico / Zacatecas / Rio Grande\n\nWarning! name not found in color_ordering.tsv: 'Calera'\ncontext in Mexico.metadata.tsv: North America / Mexico / Zacatecas / Calera\n\nWarning! name not found in color_ordering.tsv: 'Guadalupe'\ncontext in Mexico.metadata.tsv: North America / Mexico / Zacatecas / Guadalupe\n\n------------------------------------------------------------------------\nPart 2\nChecking if the same name is repeated in different geographic contexts\n\nWarning! the name 'Cuauhtemoc' is in more than one geographic context:\nNorth America / Mexico / Chihuahua / 'Cuauhtemoc'\nNorth America / Mexico / Mexico City / 'Cuauhtemoc'\n\nWarning! the name 'Guadalupe' is in more than one geographic context:\nNorth America / Mexico / Nuevo Leon / 'Guadalupe'\nNorth America / Mexico / Zacatecas / 'Guadalupe'\n\nWarning! the name 'Tecate' is in more than one geographic context:\nNorth America / Mexico / Baja California / 'Tecate'\nNorth America / Mexico / Baja California Sur / 'Tecate'\n\n------------------------------------------------------------------------\nNow run substitute_names.pl.\nSee https://github.com/luisdelaye/CurSa/ for more details.\n------------------------------------------------------------------------\n```\n \nAs mentioned above, the output has two sections. The first part, shows if there is a name in metadata.tsv that is not found in color_ordering.tsv. The warning shows the name that is lacking together with its geographical context. For instance, the name 'Rio Grande' is lacking in color_ordering.tsv and its geographical context whitin metadata.tsv is: 'North America / Mexico / Zacatecas / Rio Grande'. It is important to understand that whithin metadata.tsv the names of the geographic localities are organized in the following way: 'region\\tcountry\\tdivision\\tlocation' (where \\t stands for tab). Not all entries in metadata.tsv have the four categories, some of them have only 'region\\tcountry\\tdivision' or less. In this case 'Rio Grande' is a 'location'. \nThe second part of the output shows whether there are names repeated within differen geographical contexts. Note that this may not be an error by itself since it is common to find localities sharing the same name. For instance, see the case of 'Guadalupe' which can refer to a city in 'Nuevo Leon' or to a city in the state of Zacatecas. We will see how to fix these cases.  \nNow that you have an overview of which names do not match, we are going to proceed to fix them. For this, we will use the script substitute_names.pl, the file substitute_proposal_round1.tsv and some manual curation. We will review three main cases.\n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9236964046672257,
      "result": {
        "original_header": "Case 1: a name in metadata.tsv is lacking in color_ordering.tsv and lat_longs.tsv",
        "type": "Text_excerpt",
        "value": "We will begin by adding to color_ordering.tsv (and lat_longs.tsv) those extra names that are found in metadata.tsv. Start by opening the color_ordering.tsv file with a text edditor ([ATOM](https://atom.io)). Then, take a look at the first part of the output from compare_names.pl. We will start by analysing 'Cancun'. By looking at color_ordering.tsv you will find that the location of 'Cancun' is lacking. In this case, simply add the name 'Cancun' to color_ordering.tsv. You will have to add this name under the state of 'Quintana Roo'. For instance, 'Cancun' is a 'location' whithin de 'division' of 'Quintana Roo'. Therefore you will have to add the following text to color_ordering.tsv:\n```\n# Quintana Roo\nlocation\tCancun\n```\nNote that there is a tab between the word 'location' and 'Cancun'. Because you added a new name to color_ordering.pl, you will have to add this name also to lat_longs.tsv file. Open lat_longs.tsv with a text edditor (like [ATOM](https://atom.io)) and find the correct place (names are in alphabetical order) to add:\n```\nlocation\tCancun\t21.16\t-86.82\n```\n \nNote that the fields are separated by tabs. You can find the coordinates from 'Cancun' through its [Wikipedia](https://es.wikipedia.org/wiki/Canc\u00fan) page of the city and then clicking on its geographic coordinates: 21\u00b009\u203241\u2033N 86\u00b049\u203229\u2033O. This will take you to a [GeoHack page](https://geohack.toolforge.org/geohack.php?language=es&pagename=Canc\u00fan&params=21.161416111111_N_-86.824811111111_E_type:city) where you can find the coordinates in decimal. You will need to do the same for all names you add to color_ordering.tsv. \n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9625521182212926,
      "result": {
        "original_header": "Case 2: the name in metadata.tsv is not spelled correctly",
        "type": "Text_excerpt",
        "value": "In some occasions the geographic locality is in metadata.tsv and in color_ordering.tsv (and in lat_longs.tsv), but it is written in a different language between files or the name in one of the files has some typos. Lets take a look at: 'Aguascalientes / Pabello de A'. If you google 'Aguascalientes Pabello de A' you will find that 'Pabello de A' refers to a small city named 'Pabellon de Arteaga' in the State of 'Aguascalientes'. Therefore, you have to substitute 'Pabello de A' by 'Pabellon de Arteaga' in metadata.tsv. To do this, open the file substitute_proposal_round1.tsv with a text editor ([ATOM](https://atom.io)) and find the row containing 'Pabello de A'. Then substitute 'Pabello de A' by 'Pabellon de Arteaga' in the third column (do not remove the single quotes nor the spaces between the slashes /). Example:\n```\n'Pabello de A'  'North America / Mexico / Aguascalientes / Pabello de A'  'North America / Mexico / Aguascalientes / Pabellon de Arteaga'\n```\n \nIn addition to the above, check if 'Pabellon de Arteaga' is in color_ordering.tsv and lat_longs.tsv. If not, you will have to add this name to both files as described above. \n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9819256427758285,
      "result": {
        "original_header": "Case 3: a name is repeated in different geographical contexts",
        "type": "Text_excerpt",
        "value": "Now we will review the second part of the output of compare_names.pl. Take a look to the case of 'Guadalupe'. In Mexico there are two cities with the name 'Guadalupe', one is in the state of 'Nuevo Leon' and the other is in the state of 'Zacatecas'. Because of this, we will have to change the name of the cities to differentiate one from the other. One possibility is to name the cities as 'Guadalupe (Nuevo Leon)' and 'Guadalupe (Zacatecas)'. Use the third column in the file substitute_proposal_round1.tsv as explained before to change these names. In addition, add the names of 'Guadalupe (Nuevo Leon)' and 'Guadalupe (Zacatecas)' to color_orderin.tsv and their geographic coordinates to lat_longs.tsv. \nJust remember, the idea is that all names in metadata.tsv have a match in color_ordering.tsv and lat_longs.tsv files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9829408730166871,
      "result": {
        "original_header": "Checking for the correspondence between color_ordering.tsv and lat_longs.tsv",
        "type": "Text_excerpt",
        "value": "The localities marked with (\\*\\*) are in color_ordering.tsv and in substituted.metadata.tsv but do not have coordinates in lat_longs.tsv. The coordinates of these localities have to be added to lat_longs.tsv. The localities marked with (\\*) are in color_ordering.tsv but not in substituted.metadata.tsv. Therefore, it is not imperative to add them to lat_longs.tsv file. \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9371930164485236,
      "result": {
        "original_header": "Format sequence and metadata files for Nextstrain",
        "type": "Text_excerpt",
        "value": "The next step is to format genome and metadata file. Basically, this script strips the prefix 'hCov-19/' from the strain field of the metadata and from the headers in the fasta sequence file. The script also resolve duplicated strains in the metadata by keeping the most recent one.\n```\ndata20230223/\n$ perl format.pl substituted.metadata.tsv Mexico.sequences.fasta\n------------------------------------------------------------------------\nNumber of entries in formated_metadata.tsv...: 35633\nNumber of entries in formated_sequences.fasta: 35633\n------------------------------------------------------------------------\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9320283057460192,
      "result": {
        "original_header": "Sample genome sequences for Nextstrain analysis",
        "type": "Text_excerpt",
        "value": "Nextstrain can display approximately 5000 sequences. But the focal country may have much more. For instance, at the date of writing there are about 35000 sequences from Mexico. Therefore, it is necessary to sample a set of sequences to make the Nextstrain analysis. Here we provide a script to sample a percentage of N genomes per month. This script uses a random number generator to select which genomes to sample. If you use the same number in subsequent runs in the same files, you will get the same set of sequences. In our example, we will select to sample 10 per cent of genome sequences and use the number 2718 to seed the random number generator. The script also requires a date range.\n```\ndata20230223/\n$ perl sample.pl formated_metadata.tsv formated_sequences.fasta 2718 10 2020-01-01 2023-01-01\n------------------------------------------------------------------------\nSampling report\nMetadata file....................: formated_metadata.tsv\nSequence file....................: formated_sequences.fasta\nSeed number......................: 2718\nPercentage of sequences to sample: 5\nGenome sequences will be sampled from 2020-01-01 to 2023-01-01\n\nDo you want to continue? (y/n)\ny\n------------------------------------------------------------------------\nSampling genome sequences\n\n------------------------------------------------------------------------\nMaking the fasta file\n\n------------------------------------------------------------------------\nNumber of genomes sampled in metadata..: 3564\nNumber of genomes sampled in fasta file: 3564\n------------------------------------------------------------------------\n\n```\n \nThis script outputs the following files: sampled_metadata.tsv, sampled_sequences.fasta and sampled_report.txt. The metadata and sequence files are ready for August.\n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.878762074736421,
      "result": {
        "original_header": "Make the phylogenetic analysis with Augur",
        "type": "Text_excerpt",
        "value": "It is convinient to contextualize the sequences of the focal country with sequences from other parts of the world. To contextualize the sequences from a focal country, yo can use the Genbank sequences provided by Nextstrain team: \nIn this case, we used the Global sample in the yaml configure file. See these web pages to know how to do it: \nMove the metadata and sequence files to the data/ directory within the local Nextstrain installation:\n```\ndata20230223/\n$ cp sampled_metadata.tsv ~/Software/ncov/data/\n$ cp sampled_sequences.fasta ~/Software/ncov/data/\n```\nAnd move the color_ordering.tsv and lat_longs.tsv to the defaults/ directory:\n```\ndata20230223/\n$ cp color_ordering.tsv ~/Software/ncov/defaults/color_ordering.tsv\n$ cp lat_longs.tsv ~/Software/ncov/defaults/lat_longs.tsv\n```\nAnd then run Nextstrain:\n```\n~/Software/ncov\n$ nextstrain build . --cores all --configfile Mexstrain/Mexstrain-data.yaml\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/luisdelaye/CurSa/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/luisdelaye/CurSa/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "luisdelaye/CurSa"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CurSa"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/Figure_CurSa_2.png"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/Figure_CurSa_3.jpeg"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/Figure_CurSa_4.png"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.995443576502492,
      "result": {
        "original_header": "beta.1.0.0 version",
        "type": "Text_excerpt",
        "value": "The scripts in this repository facilitate the curation of metadata downloaded from GISAID to make phylogenetic analysis of SARS-CoV-2. In particular, the scripts provided here facilitate the curation of the geographic categories 'location' and 'division'. This curation is an important step to properly display the sampling origin of genome sequences in Nextstrain and Microreact. The scripts provided here also allow to subsample sequences from GISAID to make a phylogeneitc analysis in Nextstrain (Figure 1). To run CurSa scripts you only need to have Perl and a Linux (or similar) environment. We used these scripts to create [Mexstrain](https://ira.cinvestav.mx/mexstrain/). \n<p align=\"center\">\n  <img width=\"720\" height=\"1276\" src=\"https://github.com/luisdelaye/CurSa/blob/main/Figure_CurSa_1.png\">\n</p>\nFigure 1. Roadmap to use CurSa scripts.\n<p></p> \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9556504389181406,
      "result": {
        "original_header": "Collect data",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n  <img width=\"735.75\" height=\"490.5\" src=\"https://github.com/luisdelaye/CurSa/blob/main/Figure_CurSa_2.png\">\n</p>\n<p style='text-align: right;'> Figure 2. Search and download all genome sequences from the focal country. </p> \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Checking for the correspondence between color_ordering.tsv and lat_longs.tsv",
        "type": "Text_excerpt",
        "value": "Next, we are going to check whether all the names in color_ordering.tsv have a coordinate in lat_longs.tsv. For this, run the next script:\n```\ndata20230223/\n$ perl check_coordinates.pl substituted.metadata.tsv color_ordering.tsv lat_longs.tsv Mexico\n```\nAnd you will get an output similar to the next one:\n```\n      (*) Localities not in substituted.metadata.tsv that lack coordinates in lat_longs.tsv\n      (**) Localities included substituted.metadata.tsv that lack coordinates in lat_longs.tsv\n\n      ### Mexico\n      # Baja California\n      location\tRosarito\n      location\tTijuana\n      location\tEnsenada\n      location\tMexicali\n      location\tTecate\n\n      # Baja California Sur\n      location\tLos Cabos\n\n      # Sonora\n      location\tSan Luis Rio Colorado\n      location\tCaborca\n      location\tHermosillo\n      location\tObregon\n      location\tCajeme\n      location\tEtchojoa\n      location\tNogales (*)\n\n      # Chihuahua\n      location\tCiudad Juarez\n      location\tCuauhtemoc (*)\n      location\tDelicias\n\n      # Nuevo Leon\n      location\tSan Nicolas De Los Garza (**)\n      location\tMonterrey\n      location\tAbasolo (*)\n      location\tAltamira Nuevo Leon (*)\n      location\tApodaca\n      location\tCadereyta Jimenez\n      location\tCerralvo\n      location\tCienega de Flores\n      location\tCiudad Benito Juarez (*)\n      location\tCiudad De Allende (*)\n      location\tCiudad General Escobedo\n      location\tCiudad Sabinas Hidalgo\n      location\tCiudad Santa Catarina\n      location\tEstacion Aldama\n      location\tGaleana\n      location\tGarcia\n      location\tGeneral Zuazua\n      location\tLa Reforma (*)\n      location\tLampazos\n      location\tLinares\n      location\tMontemorelos\n      location\tPesqueria\n      location\tSalinas Victoria\n      location\tSan Pedro Garza Garcia\n      location\tCarmen Nuevo Leon (*)\n\n      # Tamaulipas\n      location\tMatamoros\n      location\tAltamira Tamaulipas (*)\n      location\tMier\n      location\tCiudad Madero\n      location\tEl Mante\n      location\tNuevo Laredo\n      location\tReynosa\n      location\tTampico\n\n      # Veracruz\n      location\tCoyutla\n      location\tAtoyac\n      location\tCarlos A. Carrillo\n      location\tChicontepec\n      location\tCordoba MX\n      location\tCosamaloapan De Carpio (**)\n      location\tCuitlahuac\n      location\tMisantla\n      location\tPaso Del Macho (**)\n      location\tSoledad De Doblado (**)\n      location\tTierra Blanca\n      location\tXalapa\n\n      # Coahuila\n      location\tAcuna (*)\n      location\tCastanos (*)\n      location\tFrontera (*)\n      location\tMonclova\n      location\tSaltillo\n      location\tTorreon\n\n      # Sinaloa\n      location\tMazatlan\n      location\tCuliacan\n      location\tNavolato\n      location\tAhome\n      location\tGuasave\n      location\tLos Mochis\n      location\tEl Fuerte\n\n      # Durango\n      location\tGomez Palacio\n      location\tCuencame\n      location\tLerdo\n      location\tMapimi\n      location\tTepehuanes\n\n      # Nayarit\n      location\tTepic\n      location\tXalisco\n      location\tTuxpan\n      location\tBahia De Banderas (**)\n      location\tCompostela\n\n      # Zacatecas\n      location\tCalera (*)\n      location\tFresnillo\n      location\tMazapil\n      location\tMiguel Auza\n      location\tMomax\n      location\tRio Grande MX\n      location\tSombrerete\n\n      # Aguascalientes\n      location\tAsientos\n      location\tCalvillo\n      location\tJesus Maria\n      location\tPabellon de Arteaga\n\n      # Jalisco\n      location\tPuerto Vallarta\n      location\tZapopan\n      location\tAcatic\n      location\tEl Salto\n      location\tOcotlan\n      location\tPoncitlan\n      location\tTamazula De Gordiano (**)\n      location\tTlajomulco De Zuniga (*)\n      location\tTlaquepaque\n      location\tZapotlan El Grande\n\n      # Guanajuato\n      location\tAcambaro\n      location\tCelaya\n      location\tComonfort\n      location\tDolores Hidalgo Cuna De La Independencia Nacional (**)\n      location\tIrapuato\n      location\tSan Francisco Del Rincon (**)\n      location\tSilao\n\n      # San Luis Potosi\n      location\tAhualulco\n      location\tAxtla De Terrazas (**)\n      location\tCiudad Valles\n      location\tMatehuala\n      location\tRioverde (*)\n      location\tSan Martin Chalchicuautla\n      location\tTamazunchale\n\n      # Estado de Mexico\n      location\tNicolas Romero\n      location\tAtizapan (*)\n      location\tCuautitlan Izcalli\n      location\tEcatepec De Morelos (*)\n      location\tHuehuetoca\n      location\tJaltenco\n      location\tMetepec\n      location\tNezahualcoyotl\n      location\tTecamac\n      location\tTeoloyucan\n      location\tTlalnepantla De Baz (*)\n      location\tToluca\n      location\tTultitlan\n      location\tZinacantepec\n      location\tZumpango\n\n      # Hidalgo\n      location\tAcatlan\n      location\tAjacuba\n      location\tCardonal\n      location\tEl Arenal Hidalgo (*)\n      location\tIxmiquilpan\n      location\tMineral Del Chico (**)\n      location\tMixquiahuala De Juarez (**)\n      location\tOmitlan De Juarez (**)\n      location\tPachuca De Soto (**)\n      location\tTasquillo\n      location\tTepeapulco\n      location\tTepeji Del Rio De Ocampo (**)\n      location\tTizayuca\n      location\tTulancingo De Bravo (**)\n      location\tZimapan\n\n      # Mexico City\n      location\tChimalhuacan\n      location\tAlvaro Obregon\n      location\tGustavo A. Madero\n\n      # Puebla\n      location\tAtlixco\n      location\tChignautla\n      location\tTeziutlan\n\n      # Tlaxcala\n      location\tCalpulalpan\n\n      # Michoacan\n      location\tLazaro Cardenas\n      location\tMorelia\n      location\tPatzcuaro\n      location\tTaretan\n\n      # Tabasco\n      location\tHuimanguillo\n      location\tCentla\n      location\tCardenas\n      location\tCentro\n      location\tNacajuca\n\n      # Campeche\n      location\tCalkini\n      location\tCarmen Campeche (*)\n\n      # Yucatan\n      location\tMerida\n      location\tKanasin\n\n      # Quintana Roo\n      location\tCozumel\n      location\tCancun\n      location\tBenito Juarez\n      location\tOthon P. Blanco\n      location\tSolidaridad\n\n      # Chiapas\n      location\tBenemerito De Las Americas (**)\n      location\tHuixtla\n      location\tTapachula\n      location\tTuxtla Chico\n      location\tTuxtla Gutierrez\n      location\tVilla Comaltitlan\n\n      ### Mexico\n      division\tBaja California\n      division\tBaja California Sur\n      division\tSonora\n      division\tSinaloa\n      division\tChihuahua\n      division\tNayarit\n      division\tDurango\n      division\tColima\n      division\tJalisco\n      division\tGuadalajara\n      division\tZacatecas\n      division\tAguascalientes\n      division\tCoahuila\n      division\tMichoacan\n      division\tGuanajuato\n      division\tSan Luis Potosi\n      division\tQueretaro\n      division\tNuevo Leon\n      division\tGuerrero\n      division\tEstado de Mexico\n      division\tMexico City\n      division\tMexico\n      division\tHidalgo\n      division\tMorelos\n      division\tTamaulipas\n      division\tPuebla\n      division\tTlaxcala\n      division\tVeracruz\n      division\tOaxaca\n      division\tChiapas\n      division\tTabasco\n      division\tCampeche\n      division\tYucatan\n      division\tQuintana Roo\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8922574173307155,
      "result": {
        "original_header": "Format sequence and metadata files for Nextstrain",
        "type": "Text_excerpt",
        "value": "This script output the following files: formated_metadata.tsv, formated_sequences.fasta. These have the proper format for Augur (Nextstrain).\n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9126961848680134,
      "result": {
        "original_header": "Sample genome sequences for Nextstrain analysis",
        "type": "Text_excerpt",
        "value": "This script outputs the following files: sampled_metadata.tsv, sampled_sequences.fasta and sampled_report.txt. The metadata and sequence files are ready for August.\n \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9993931375503123,
      "result": {
        "original_header": "Make the phylogenetic analysis with Augur",
        "type": "Text_excerpt",
        "value": "  https://docs.nextstrain.org/projects/ncov/en/latest/reference/remote_inputs.html \n  https://docs.nextstrain.org/projects/ncov/en/latest/tutorial/custom-data.html\n  https://docs.nextstrain.org/projects/ncov/en/latest/tutorial/genomic-surveillance.html \n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/luisdelaye/CurSa/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Luis Delaye\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/Figure_CurSa_1.png"
      },
      "source": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CurSa"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "luisdelaye"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 40728,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/luisdelaye/CurSa/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:12:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}