{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JustinChu/ntsm"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-08T17:15:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-10T05:54:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This tools counts the number of specific k-mers within sequence data. The counts can then be compare to other counts to determine to compute the probability that sample are of the same origin to discover incongruent samples or sample swaps."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary",
        "parent_header": [
          "ntsm - Nucleotide Sequence/Sample Matcher"
        ],
        "type": "Text_excerpt",
        "value": "Publication: [https://doi.org/10.1101/2023.11.01.565041](https://academic.oup.com/gigascience/article/doi/10.1093/gigascience/giae024/7687245?login=false)\n\nThis tool counts the number of specific k-mers within sequence data. The counts can then be compared to other counts to determine and compute the probability that samples are of the same origin to discover incongruent samples or sample swaps. It is intended to be run before any analysis and can provide additional QC information like sequencing error rate.\n"
      },
      "source": "https://raw.githubusercontent.com/JustinChu/ntsm/main/README",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JustinChu/ntsm/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JustinChu/ntsm/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JustinChu/ntsm"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ntsm - Nucleotide Sequence/Sample Matcher"
      },
      "source": "https://raw.githubusercontent.com/JustinChu/ntsm/main/README",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JustinChu/ntsm/main/autogen.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ntsm - Nucleotide Sequence/Sample Matcher"
        ],
        "type": "Text_excerpt",
        "value": "If cloning directly from the repository run:\n\n```bash\n./autogen.sh\n```\n\nCompiling should be as easy as:\n\n```bash\n./configure && make\n```\n\nTo install in a specified directory:\n\n```bash\n./configure --prefix=/PATH && make install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/JustinChu/ntsm/main/README",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JustinChu/ntsm/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Justin Chu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/JustinChu/ntsm/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ntsm"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "JustinChu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 96495,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 10313,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 7713,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 3513,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 1295,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 378,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JustinChu/ntsm/main/README"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JustinChu/ntsm/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JustinChu",
          "type": "User"
        },
        "date_created": "2024-02-07T22:20:09Z",
        "date_published": "2024-02-07T22:23:45Z",
        "description": "- Provide scripts and information for generating sites and PCA rotation matrix for PCA-based heuristic\r\n- Minor fixes and changes to PCA heuristic code",
        "html_url": "https://github.com/JustinChu/ntsm/releases/tag/1.0.1",
        "name": "Release 1.0.1",
        "release_id": 140418084,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/JustinChu/ntsm/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/JustinChu/ntsm/releases/140418084",
        "value": "https://api.github.com/repos/JustinChu/ntsm/releases/140418084",
        "zipball_url": "https://api.github.com/repos/JustinChu/ntsm/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JustinChu",
          "type": "User"
        },
        "date_created": "2023-11-10T01:00:37Z",
        "date_published": "2023-11-10T01:10:46Z",
        "html_url": "https://github.com/JustinChu/ntsm/releases/tag/1.0.0",
        "name": "1.0.0",
        "release_id": 128830474,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/JustinChu/ntsm/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/JustinChu/ntsm/releases/128830474",
        "value": "https://api.github.com/repos/JustinChu/ntsm/releases/128830474",
        "zipball_url": "https://api.github.com/repos/JustinChu/ntsm/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JustinChu",
          "type": "User"
        },
        "date_created": "2022-10-27T01:22:00Z",
        "date_published": "2022-10-27T01:32:03Z",
        "description": "Scoring method using faster loglikelihood scoring that is more resilient to missing sites. Other features: Error rate estimation and relatedness metrics.",
        "html_url": "https://github.com/JustinChu/ntsm/releases/tag/0.1.0",
        "name": "Release 0.1.0",
        "release_id": 81138599,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/JustinChu/ntsm/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/JustinChu/ntsm/releases/81138599",
        "value": "https://api.github.com/repos/JustinChu/ntsm/releases/81138599",
        "zipball_url": "https://api.github.com/repos/JustinChu/ntsm/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JustinChu",
          "type": "User"
        },
        "date_created": "2021-10-12T18:16:45Z",
        "date_published": "2021-10-12T18:41:34Z",
        "description": "Update hash function to use an invertible hash function to prevent collisions\r\nChange default score parameter (-s)",
        "html_url": "https://github.com/JustinChu/ntsm/releases/tag/0.0.2",
        "name": "Release 0.0.2",
        "release_id": 51232797,
        "tag": "0.0.2",
        "tarball_url": "https://api.github.com/repos/JustinChu/ntsm/tarball/0.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/JustinChu/ntsm/releases/51232797",
        "value": "https://api.github.com/repos/JustinChu/ntsm/releases/51232797",
        "zipball_url": "https://api.github.com/repos/JustinChu/ntsm/zipball/0.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JustinChu",
          "type": "User"
        },
        "date_created": "2021-09-20T23:38:55Z",
        "date_published": "2021-09-20T23:40:17Z",
        "description": "Initial Release",
        "html_url": "https://github.com/JustinChu/ntsm/releases/tag/0.0.1",
        "name": "Release 0.0.1",
        "release_id": 49947143,
        "tag": "0.0.1",
        "tarball_url": "https://api.github.com/repos/JustinChu/ntsm/tarball/0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/JustinChu/ntsm/releases/49947143",
        "value": "https://api.github.com/repos/JustinChu/ntsm/releases/49947143",
        "zipball_url": "https://api.github.com/repos/JustinChu/ntsm/zipball/0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "ntsm - Nucleotide Sequence/Sample Matcher"
        ],
        "type": "Text_excerpt",
        "value": "General:\n* GCC (Tested on 9.3.0)\n* zlibdev\n* Autotools (if directly cloning from repo)\n\nFor generating site fasta files given a VCF file\n* Python (Tested with 3.8.5)\n* pyfaidx python module\n* scikit-learn python module\n* Perl (Tested with v5.26.2)\n* bwa (Tested with 0.7.17)\n"
      },
      "source": "https://raw.githubusercontent.com/JustinChu/ntsm/main/README",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:39:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 21
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Generating k-mers from fasta file:",
        "parent_header": [
          "ntsm - Nucleotide Sequence/Sample Matcher",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Given a VCF file and a reference genome, you can produce fasta files with k-mers that one can use to create fingerprinting. We have provided a set of human data based on similar criteria found in SNP microarrays.\n\nThe VCF file in this stage can be a single sample VCF, it just needs the variants.\n\nExample:\n\n```bash\nscripts/generateSites name=sites ref=reference.fa vcf=snps.vcf\n```\n\nCreates a fasta file referred to as `sites.fa` below (but name can be changed by specific another `name`). All non C/G <-> A/T conversions are ignored.\n\nParameters:\n\n```\nw=31 #window size to consider sequences in this region\nk=19 #kmer size used in the window region\nt=4 #threads for any subprocess or tools\nn=0 #number of sub k-mers to allow\n```\n\nIf you do not wish to select your own sites, we currently include `data/human_sites_n10.fa` a fasta file with selected 96287 sites adequate for sample swap detection for human samples in the `data` folder.\n"
      },
      "source": "https://raw.githubusercontent.com/JustinChu/ntsm/main/README",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Generating PCA from multiVCF file:",
        "parent_header": [
          "ntsm - Nucleotide Sequence/Sample Matcher",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Once fasta files for sites have been created, it is possible to create a PCA rotation matrix for speeding up the analysis. To do so you must supply a multiVCF file from which the PCA will be built. This multi-sample VCF ideally should not contain the same samples as the VCF used in the sample swap detection process. It should be a set of reliable samples on which a PCA and rotational matrix would be based on. We note that the use of a rotational matrix is optional.\n\nExample:\n\n```{bash}\nntsmVCF -p prefix -s sites.fa -r reference.fa multiVCF.vcf\nscripts/convertTSVtoPCA.py -p prefix -m prefix_matrix.tsv\n```\n\nAgain if you are working with human samples and do not wish to generate your own, we currently include `data/human_sites_rotationMat.tsv` and `human_sites_center.txt` to use in our PCA-based heurstic. We based our PCA and rotation matrix on 3202 samples from the 1000 Genomes Project.\n"
      },
      "source": "https://raw.githubusercontent.com/JustinChu/ntsm/main/README",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Counting the k-mers:",
        "parent_header": [
          "ntsm - Nucleotide Sequence/Sample Matcher",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Using this set of k-mers we can then count all of these k-mers within a fastq file. Files may be gzipped and multiple threads can be used. Each sample needs a separate run of this command and its own count files.\n\nExample:\n\n```bash\nntsmCount -t 2 -s sites.fa sample_part1.fq sample_part2.fq > counts.txt\n```\n\nCreates count file using 2 threads. A sliding window using 19-mers is used in this case and the highest count in the window is recorded.\n\nIf your files are unsorted and have massive coverage, you may also intentionally run less reads using the `-m` parameter:\n\n```bash\nntsmCount -t 2 -m 10 -s sites.fa sample_part1.fq sample_part2.fq > counts.txt\n```\n\nThis will run the file until the average site coverage reaches 10x, which should be adequate for most sequencing data types. Lower coverage is possible if the read error rate is low enough.\n\nOutput Example:\n\n```\n#@TK\t119443488624\n#@KS\t19\n#locusID\tcountAT\tcountCG\tsumAT\tsumCG\tdistinctAT\tdistinctCG\nrs1741692\t23\t22\t68\t190\t3\t9\nrs6419870\t0\t43\t0\t86\t1\t2\nrs3171927\t19\t20\t91\t20\t5\t1\nrs12057128\t16\t0\t31\t0\t2\t5\nrs11976368\t43\t0\t43\t0\t1\t10\nrs4545798\t17\t13\t34\t65\t2\t5\nrs10888802\t0\t37\t0\t355\t9\t10\n...\n```\n\nHeader lines (`#@`) help in error rate estimation.\n"
      },
      "source": "https://raw.githubusercontent.com/JustinChu/ntsm/main/README",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Evaluating the samples:",
        "parent_header": [
          "ntsm - Nucleotide Sequence/Sample Matcher",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Example command:\n\n```bash\nntsmEval HG002_rep1_counts.txt HG002_rep2_counts.txt HG003_counts.txt HG004_counts.txt > summary.tsv\n```\n\nor if you wish optionally to speed up the analysis using a PCA rotation matrix:\n\n```bash\nntsmEval -a -t 16 -n data/human_sites_center.txt -p data/human_sites_rotationMat.tsv HG002_rep1_counts.txt HG002_rep2_counts.txt HG003_counts.txt HG004_counts.txt > summary.tsv\n```\n\nOutput Example (with -a option):\n```\nsample1\tsample2\tscore\tsame\tdist\trelate\tibs0\tibs2\thomConcord\thet1\thet2\tsharedHet\thom1\thom2\tsharedHom\tn\tcov1\tcov2\terrorRate1\terrorRate2\tmiss1\tmiss2\tallHom1\tallHom2\tallHet1\tallHet2\nHG002_rep1_counts.txt\tHG002_rep2_counts.txt\t0.07988\t1\t0.004839\t0.996827\t0\t95971\t0.998287\t33720\t33787\t33613\t62532\t62465\t62358\t96252\t37.416162\t45.260554\t0.003493\t0.004301\t35\t35\t62532\t62465\t33720\t33787\nHG003_counts.txt\tHG004_counts.txt\t3.430842\t0\t7.512569\t-0.003973\t6649\t48672\t0.355549\t33473\t33781\t13165\t62772\t62464\t35507\t96245\t44.931787\t44.068285\t0.005968\t0.004208\t34\t38\t62779\t62466\t33474\t33783\nHG002_rep1_counts.txt\tHG003_counts.txt\t1.660803\t0\t4.732675\t0.498775\t24\t62518\t0.731288\t33720\t33474\t16744\t62528\t62774\t45774\t96248\t37.416162\t44.931787\t0.003493\t0.005968\t35\t34\t62532\t62779\t33720\t33474\nHG002_rep1_counts.txt\tHG004_counts.txt\t1.653478\t0\t2.872071\t0.500089\t19\t62525\t0.72982\t33720\t33783\t16901\t62525\t62462\t45624\t96245\t37.416162\t44.068285\t0.003493\t0.004208\t35\t38\t62532\t62466\t33720\t33783\nHG002_rep2_counts.txt\tHG003_counts.txt\t1.760081\t0\t4.707002\t0.499821\t24\t62521\t0.73156\t33787\t33474\t16779\t62461\t62774\t45742\t96248\t45.260554\t44.931787\t0.004301\t0.005968\t35\t34\t62465\t62779\t33787\t33474\nHG002_rep2_counts.txt\tHG004_counts.txt\t1.74858\t0\t2.78644\t0.4996\t19\t62488\t0.729034\t33787\t33783\t16916\t62458\t62462\t45572\t96245\t45.260554\t44.068285\t0.004301\t0.004208\t35\t38\t62465\t62466\t33787\t33783\n...\n```\n\nColumn explanations:\n* sampleX: Filename for sample X\n* score: Log-likelihood-based score to determine if samples are the same or differ\n* same: 1 means the tool thinks the sample is the same and 0 is if the tool thinks they differ\n* dist: Distance of sample in PCA space\n* relate: Relatedness determined via shared heterozygous sites\n* relate: Relatedness determined via shared heterozygous sites\n* ibs0: Number of sites with alleles not shared between two samples\n* ibs2: Number of sites with the same genotype between two samples\n* homConcord: Homozygous concordance determined via shared homozygous sites\n* hetX: Number of heterozygous sites for sample X for all sites considered in comparison\n* sharedHets: Number of shared heterozygous sites\n* homX: Number of homozygous sites for sample X for all sites considered in comparison\n* sharedHom: Number of shared homozygous sites\n* n: number of unfiltered sites used in comparison\n* covX: Coverage of sample X\n* errorRateX: Error rate of sample X. May underestimate error caused by long indels.\n* missX: Total number of missing sites in sample X\n* allHomX: Total number of homozygous sites in sample X\n* allHetX: Total number of heterozygous sites in sample X\n\nIf run on a single counts file the output can look like this:\n```\nsample\tcov\terrorRate\tmiss\thom\thet\tPC1\tPC2\tPC3\tPC4\tPC5\tPC6\tPC7\tPC8\tPC9\tPC10\tPC11\tPC12\tPC13\tPC14\tPC15\tPC16\tPC17\tPC18\tPC19\tPC20\nHG002_rep1_counts.txt\t37.416162\t0.003493\t35\t62532\t33720\t-14.254352\t-23.285693\t-0.373179\t-7.315873\t-1.187992\t-5.494577\t-0.434657\t-0.334589\t-0.832297\t-1.160507\t0.286102\t-0.114464\t1.013333\t0.252766\t-0.204102\t0.465836\t0.694361\t0.099620\t0.019345\t-1.195279\n```\n\nThis provides generic QC information useful without other samples (e.g. error rate) and if inclined a means of plotting the sample relative to others on a PCA plot. The number of columns is dependant on the number of principal components used.\n\n"
      },
      "source": "https://raw.githubusercontent.com/JustinChu/ntsm/main/README",
      "technique": "header_analysis"
    }
  ]
}