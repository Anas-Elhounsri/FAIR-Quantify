{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/adavi4/SAI-10k-calc"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-21T07:02:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-23T03:49:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.8962743312553081,
      "result": {
        "original_header": "1. About",
        "type": "Text_excerpt",
        "value": "SpliceAI post-processing calculator. Requires two files: \n* VCF file - preferred (or SpliceAI output - VCF)\n* List of genes and transcripts of interest \nThe SAI-10k-calc can now optionally accept SpliceAI input files with additional columns containing the REF and ALT scores (the Delta score is the difference between these two scores). Using these scores can lead to improved partial exon deletion and partial intron retention predictions.  \nWe developed the SpliceAI-10k calculator (SAI-10k-calc) to extend use of the SpliceAI tool to predict: the splicing aberration type including: pseudoexonization, intron retention, partial exon deletion, partial intron retention, (multi)exon skipping and increased exon inclusion. \n**Authors:**  \nDaffodil Canson - developed the parser   \nAimee Davidson - implemented the parser in R and added extra functionality   \nOlga Kondrashova - implemented the parser in R  \n*QIMR Berghofer Medical Research Institute* \n"
      },
      "source": "https://raw.githubusercontent.com/adavi4/SAI-10k-calc/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/adavi4/SAI-10k-calc/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/adavi4/SAI-10k-calc/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "adavi4/SAI-10k-calc"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SAI-10k-calc"
      },
      "source": "https://raw.githubusercontent.com/adavi4/SAI-10k-calc/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/adavi4/SAI-10k-calc/main/run_splice_ai.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9480734091406473,
      "result": {
        "original_header": "1. About",
        "type": "Text_excerpt",
        "value": "An updated flowchart to reflect these changes can be found here: https://miro.com/app/board/uXjVPD0nK64=/ \n"
      },
      "source": "https://raw.githubusercontent.com/adavi4/SAI-10k-calc/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/adavi4/SAI-10k-calc/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Olga Kondrashova\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/adavi4/SAI-10k-calc/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SAI-10k-calc"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "adavi4"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 65560,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 331,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/adavi4/SAI-10k-calc/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "adavi4",
          "type": "User"
        },
        "date_created": "2023-04-14T03:59:55Z",
        "date_published": "2023-04-14T04:06:17Z",
        "description": "Release for manuscript publication",
        "html_url": "https://github.com/adavi4/SAI-10k-calc/releases/tag/v1.1",
        "name": "v1.1",
        "release_id": 99491770,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/adavi4/SAI-10k-calc/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/adavi4/SAI-10k-calc/releases/99491770",
        "value": "https://api.github.com/repos/adavi4/SAI-10k-calc/releases/99491770",
        "zipball_url": "https://api.github.com/repos/adavi4/SAI-10k-calc/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "okon",
          "type": "User"
        },
        "date_created": "2022-07-21T08:11:19Z",
        "date_published": "2022-11-08T03:09:06Z",
        "description": "**Initial release** \r\nPublished on bioRxiv: Canson, Daffodil M., et al. bioRxiv 2022.  https://doi.org/10.1101/2022.07.30.502132",
        "html_url": "https://github.com/adavi4/SAI-10k-calc/releases/tag/v1.0",
        "name": "v1.0",
        "release_id": 82337579,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/adavi4/SAI-10k-calc/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/adavi4/SAI-10k-calc/releases/82337579",
        "value": "https://api.github.com/repos/adavi4/SAI-10k-calc/releases/82337579",
        "zipball_url": "https://api.github.com/repos/adavi4/SAI-10k-calc/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Requirements",
        "parent_header": [
          "SAI-10k-calc"
        ],
        "type": "Text_excerpt",
        "value": "**Software Requirements:**  \n\n* R version 4.1.2\n* R packages:  \n\t- tidyverse\n\t- optparse\n\t- rtracklayer\n\t- Biostrings\n\t- BSgenome.Hsapiens.UCSC.hg19 (or BSgenome.Hsapiens.UCSC.hg38)\n* htslib 1.9 (for running SpliceAI)\n* SpliceAI 1.3.1 (for running SpliceAI)\n\n"
      },
      "source": "https://raw.githubusercontent.com/adavi4/SAI-10k-calc/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:31:27",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Usage and Program Options",
        "parent_header": [
          "SAI-10k-calc"
        ],
        "type": "Text_excerpt",
        "value": "**Step 1.** Run `download_tx.R` script to download and pre-process transcript tables:\n\n`Rscript download_tx.R -g example_gene_list.txt --out_refseq example_refseq_tx_hg19.txt --out_tx_spliceai example_spliceai_tx_hg19.txt`\n\nFull options are available by running:\n\n`Rscript download_tx.R -h`\n\nOptions:\n\t-g FILE, --gene_list=FILE\n\t\tGene list, tab-separated with two columns - Gene and RefSeq_ID\n\n\t--out_refseq=FILE\n\t\tSave downloaded preprocessed transcript table\n\n\t--out_tx_spliceai=FILE\n\t\tSave preprocessed transcript table for SpliceAI\n\n\t--out_refseq_full=FILE\n\t\tOptional: save downloaded ncbiRefSeq table\n\n\t--refseq_full=FILE\n\t\tOptional: ncbiRefSeq table pre-downloaded from ucsc\n\n\t--ref=STRING\n\t\tOptional: reference genome (hg19 or hg38) [default= hg19]\n\n\t-h, --help\n\t\tShow this help message and exit\n\nNote if you encounter errors with downloading from UCSC using `download_tx.R` download the [UCSC transcript table](https://genome.ucsc.edu/cgi-bin/hgTables) directly and use the `--refseq_full` option.\n\n**Step 2.** Run SpliceAI using the pre-processed transcript table (example_spliceai_tx_hg19.txt) from the first script. Check the example script `run_splice_ai.sh`.   \n  \nIt is recommended to run [SpliceAI](https://github.com/Illumina/SpliceAI) with a custom annotation file (pre-processed transcript table) using `-A` flag, because predictions for specific transcripts may differ from GENCODE V24 canonical transcript predictions (SpliceAI default). \n\nAlternatively, to generate SpliceAI output with the REF and ALT score use this [version](https://github.com/bw2/SpliceAI)\n\n**Step 3.** Run `spliceAI_parser.R` script using the pre-processed transcript table from Step 1 (example_refseq_tx_hg19.txt) and the SpliceAI output vcf file.\n\n`Rscript spliceAI_parser.R -i example_variants.vcf -r example_refseq_tx_hg19.txt -o example_variants_parsed.tsv`\n\nFull options are available by running:\n\n`Rscript spliceAI_parser.R -h`\n\n\n Options:\n\t-i FILE, --in_vcf=FILE\n\t\tInput vcf file direct from SpliceAI\n\n\t-r FILE, --refseq_table=FILE\n\t\tPreprocessed UCSC ncbiRefSeq table (download_tx.R script)\n\n\t-o FILE, --out_file=FILE\n\t\tOutput file name [default= out.tsv]\n  \n\t--include\n\t\tOption to make use of non-delta scores [default= FALSE]  \n\n\t--DS_AGDG_MIN_T=NUMERIC\n\t\tDelta score (acceptor & donor gain) - minimum [default= 0.02]\n\n\t--DS_AGDG_MAX_T=NUMERIC\n\t\tDelta score (acceptor & donor gain) - maximum [default= 0.2]\n\n\t--GEX_size_MIN=INT\n\t\tGained exon size range - minimum [default= 25]\n\n\t--GEX_size_MAX=INT\n\t\tGained exon size range - maximum [default= 500]\n\n\t--DS_ALDL_MIN_T=NUMERIC\n\t\tDelta score (acceptor & donor loss)  - minimum [default= 0.02]\n\n\t--DS_ALDL_MAX_T=NUMERIC\n\t\tDelta score (acceptor & donor loss) - maximum [default= 0.2]\n\n\t--AG_T=NUMERIC\n\t\tCryptic splice site - acceptor gain [default= 0.2]\n\n\t--DG_T=NUMERIC\n\t\tCryptic splice site - donor gain [default= 0.2]\n\n\t--AGDG_T=NUMERIC\n\t\tCryptic splice site - max acceptor or donor gain [default= 0.0],\n\n  \t--DS_GL_T=NUMERIC\n\t\tVariant score gain loss difference [default= -0.2]\n\n\t--ref=STRING\n\t\tOptional: reference genome (hg19 or hg38) [default= hg19]\n\n\t-h, --help\n\t\tShow this help message and exit\n\nWe have increased the default DS_AGDG_MAX_T threshold to 0.2 to better reflect recommendations by ClinGen SVI Splicing Subgroup (DOI https://doi.org/10.1016/j.ajhg.2023.06.002). However for research purposes we still recommend initially using the previous default threshold of 0.05 \n\nNote the parser is currently not fully implemented for variants impacting single exon or single coding exon genes\n"
      },
      "source": "https://raw.githubusercontent.com/adavi4/SAI-10k-calc/main/README.md",
      "technique": "header_analysis"
    }
  ]
}