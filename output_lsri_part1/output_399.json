{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fannyhb/fargene"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-04-11T12:41:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-17T07:51:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "fARGene",
          "Model creation and optimization"
        ],
        "type": "Text_excerpt",
        "value": "The two most important output files are `predicted-orfs.fasta` and `predicted-orfs-amino.fasta` which are located in `output_dir/predictedGenes/`.\n\n\nThis directory also contains `retrieved-contigs.fasta` and `retrieved-contigs-peptides.fasta`. Where the first file contains the (complete) contigs that passed the final full-length classification, and the second file contains the parts of the contigs that passed the final classification step that aligned with the HMM, as amino acid sequences. Note that the second file is a prediction of where the genes are located on the contig and does usually not include the start and/or the stop of the genes. \n\n\nA summary of the analysis can be found in `output_dir/results_summary.txt` and the logfile is found in `output_dir/novelGeneFinder.log`.\n\nBelow is a summary of the remaining output:\n\n|File/Directory| Description|\n|--------------|------------|\n|hmmsearchresults/| All the output files from `hmmsearch`.|\n|retrievedFragments/| Each fragment that were classified as positive, together with its read-pair.|\n|retrievedFragments/all_retrieved_[12].fastq| All quality controlled retrieved fragments gathered in two files.|\n|retrievedFragments/trimmedReads/| The quality controlled retrieved fragments from each input file. |\n|tmpdir/| Various files that can be deleted if you don't want to redo the analysis.|\n|tmpdir/* positives.out| List of ids for sequences/genes that were classified as positives.|\n|tmpdir/infile(s).fasta| The from FASTQ to FASTA converted input files.|\n|tmpdir/infiles(s)-amino.fasta| The translated input sequences. Are only saved if option `--store-peptides` is used.|\n|spades_assembly/| The output from the SPAdes assembly.|\n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9632791298362317,
      "result": {
        "original_header": "fARGene",
        "type": "Text_excerpt",
        "value": "fARGene (Fragmented Antibiotic Resistance Gene iENntifiEr ) is a tool that takes either fragmented metagenomic data or longer sequences as input and predicts and delivers full-length antiobiotic resistance genes as output. The tool includes developed and optimized models for a number or resistance gene types,\nand the functionality to create and optimize models of your own choice of resistance genes. \nThe current version of the tool includes developed and optimized models for identification of the following resistance genes \n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8892495513924324,
      "result": {
        "original_header": "For genomes or longer contigs as input",
        "type": "Text_excerpt",
        "value": "The output is basically the same as for the metagenomic input. The most important difference is the file\n`input_file-hmm_model_name-filtered.fasta` located in `output_dir/predictedGenes`. This file contains the sequences that passed the final classification step, but only the parts that where predicted by the HMM to be part of the gene. Since this prediction is rather conservative, the start/stop of the genes are usually not included here. The file `input_file-hmm_model_name-filtered-peptides.fasta` is the above file translated in the same frame as the gene is predicted to be located. \n \n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fannyhb/fargene/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fannyhb/fargene/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fannyhb/fargene"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fARGene"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing from source",
        "parent_header": [
          "fARGene",
          "Getting Started",
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "```\ngit clone https://github.com/fannyhb/fargene.git\ncd fargene\npython setup.py install\n```\n\nNote:\n\nsetup.py will look for and try to install numpy and matplotlib so make sure that you either:\n- have these packages installed\n- run setup.py as root or with sudo\n- install the program in a [conda](https://conda.io/docs/user-guide/install/download.html) environment. \n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing from conda",
        "parent_header": [
          "fARGene",
          "Getting Started",
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "```\nconda install -c conda-forge -c bioconda fargene\n```\n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fannyhb/fargene/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Fanny Berglund\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "fARGene"
        ],
        "type": "Text_excerpt",
        "value": "This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fargene"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "fannyhb"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 96228,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fannyhb",
          "type": "User"
        },
        "date_created": "2019-05-10T13:15:26Z",
        "date_published": "2019-08-05T08:26:38Z",
        "html_url": "https://github.com/fannyhb/fargene/releases/tag/v0.1",
        "name": "fARGene v.0.1",
        "release_id": 19072707,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/fannyhb/fargene/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/fannyhb/fargene/releases/19072707",
        "value": "https://api.github.com/repos/fannyhb/fargene/releases/19072707",
        "zipball_url": "https://api.github.com/repos/fannyhb/fargene/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "fARGene",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "- Python 2.x\n- [EMBOSS transeq](http://emboss.sourceforge.net/download/)\n- [seqtk](https://github.com/lh3/seqtk)\n- [HMMER](http://hmmer.org/) 3.2 or older\n- For short-read data:\n  - [SPAdes](http://cab.spbu.ru/software/spades/) 3.7.0 or later\n  - [Trim Galore!](https://www.bioinformatics.babraham.ac.uk/projects/trim_galore/) (optional)\n  - [ORFfinder](https://www.ncbi.nlm.nih.gov/orffinder/) (optional)\n- For long-read data\n  - [prodigal](https://github.com/hyattpd/Prodigal) (optional)\n\nSome of these requirements are optional but might affect the results. If you for example skip the installation of Trim Galore!, the option `--no-quality-filtering` must be used. If you skip the installation of ORFfinder/prodigal for short-read/long-read data, the option `--no-orf-prediction` must be used. fARGene expects these tools to be available in `$PATH`.\n\nFor the model creation package you additionally need the following packages:\n\n- numpy\n- matplotlib\n- [ClustalO](http://www.clustal.org/omega/)\n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:35:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 31
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "fARGene"
        ],
        "type": "Text_excerpt",
        "value": "These instructions will get you a copy of the most up-to-date version of fARGene. \n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Easy usage",
        "parent_header": [
          "fARGene",
          "Model creation and optimization"
        ],
        "type": "Text_excerpt",
        "value": "**Fragmented metagenomic input**\n```\nfargene -i path/to/paired_end_fastqfiles/*.fastq --meta --hmm-model class_a -o output_dir -p num_of_processes\n```\n\nNote that the FASTQ files must be paired-end.\n\n**Genomes or longer contigs as nucleotide sequences as input**\n\n```\nfargene -i path/to/fastafile(s)/*.fasta --hmm-model class_a -o output_dir\n```\n\n**Genomes or longer contigs as protein sequences as input**\n\n```\nfargene -i path/to/fastafile(s)/*.fasta --protein --hmm-model class_a -o output_dir\n```\n\nWhere `hmm-model` can be any of the pre-defined models:\n - Class A beta-lactamases `--hmm-model class_a`\n - Subclass B1 and B2 beta-lactamases `--hmm-model class_b_1_2`\n - Subclass B3 beta-lactamases `--hmm-model class_b_3`\n - Class C beta-lactamases `--hmm-model class_c`\n - Class D beta-lactamases\n   - `--hmm-model class_d_1`\n   - `--hmm-model class_d_2`\n - *qnr* `--hmm-model qnr`\n - Tetracycline resistance genes\n   - `--hmm-model tet_efflux`\n   - `--hmm-model tet_rpg`\n   - `--hmm-model tet_enzyme`\n - Erm 23S rRNA methyltransferases\n   - `--hmm-model erm_type_a`\n   - `--hmm-model erm_type_f`\n - Mph macrolide 2'-phosphotransferases `--hmm-model mph`\n - AAC aminoglycoside acetyltransferases\n   - `--hmm-model aminoglycoside_model_a` (represents *aac(2')*-type genes)\n   - `--hmm-model aminoglycoside_model_b` (represents *aac(3)*-type genes)\n   - `--hmm-model aminoglycoside_model_c` (represents *aac(3)*-type genes)\n   - `--hmm-model aminoglycoside_model_d` (represents *aac(6')*-type genes)\n   - `--hmm_model aminoglycoside_model_e` (represents *aac(6')*-type genes)\n   - `--hmm-model aminoglycoside_model_f` (represents *aac(6')*-type genes)\n - APH aminoglycoside phosphotransferases\n   - `--hmm-model aminoglycoside_model_g` (represents *aph(2'')*-type genes)\n   - `--hmm-model aminoglycoside_model_h` (represents *aph(3')*/*aph(3'')*-type genes)\n   - `--hmm-model aminoglycoside_model_i` (represents *aph(6)*/*aph(3')*-type genes)\n   \nIf you choose to use your own profile hidden Markov model you need to specify the score as follows:\n\n```\n--hmm-model /path/to/hmmfile.hmm --score full_length_threshold_score --meta-score fragmented_threshold_score_per_AA\n```\n\nNote that the meta score is given as score per aa.\nIf the input is not fragmented data then the `--meta-score` is not required.\n\nIt is also possible to change the scores for the predifened models, just add the option `--score new_score` and/or `--meta-score new_meta_score`.\n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Options and usage",
        "parent_header": [
          "fARGene",
          "Model creation and optimization"
        ],
        "type": "Text_excerpt",
        "value": "Run `fargene --help` to get all the options of fargene.\n\n```\nusage: fargene [-h] --infiles INFILES [INFILES ...] --hmm-model HMM_MODEL\n               [--score LONG_SCORE] [--meta] [--meta-score META_SCORE]\n               [--output OUTDIR] [--force] [--tmp-dir TMP_DIR] [--protein]\n               [--processes PROCESSES] [--min-orf-length MIN_ORF_LENGTH]\n               [--retrieve-whole] [--no-orf-predict] [--no-quality-filtering]\n               [--no-assembly] [--orf-finder] [--store-peptides] [--rerun]\n               [--amino-dir AMINO_DIR] [--fasta-dir FASTA_DIR]\n               [--translation-format TRANS_FORMAT] [--loglevel {DEBUG,INFO}]\n               [--logfile LOGFILE]\n\nSearches and retrieves new and previously known genes from fragmented\nmetagenomic data and genomes. Copyright (c) Fanny Berglund 2018.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --infiles INFILES [INFILES ...], -i INFILES [INFILES ...]\n                        Input file(s) to be searched. Could either be in FASTA\n                        or FASTQ format.\n  --hmm-model HMM_MODEL\n                        The Hidden Markov Model that should be used to analyse\n                        the data. Could either be one of the pre-defined\n                        models or the path to a custom HMM.\n  --score LONG_SCORE, -sl LONG_SCORE\n                        The threshold score for a sequence to be classified as\n                        a (almost) complete gene (default: None).\n  --meta                If the input data is paired end metagenomic data\n                        (default: False).\n  --meta-score META_SCORE, -sm META_SCORE\n                        The threshold score for a fragment to be classified as\n                        a positive. Expressed as score per amino acid\n                        (default: None).\n  --output OUTDIR, -o OUTDIR\n                        The output directory for the whole run (default:\n                        ./fargene_output).\n  --force, -f           Overwrite output directory if it exists (default:\n                        False).\n  --tmp-dir TMP_DIR     Directory for (sometimes large) intermediate files.\n                        (default: OUT_DIR/tmpdir)\n  --protein             If the input sequence(s) is amino acids (default:\n                        False).\n  --processes PROCESSES, -p PROCESSES\n                        Number of processes to be used when processing\n                        metagenomic data (default: 1).\n  --min-orf-length MIN_ORF_LENGTH\n                        The minimal length for a retrieved predicted ORF (nt).\n                        (default: 90% of the length of the chosen hmm.)\n  --retrieve-whole      Use this flag if the whole sequence where a hit is\n                        detected should be retrieved (default: False).\n  --no-orf-predict      Do not perform ORF prediction.\n  --no-quality-filtering\n                        Use if no quality control should be performed on the\n                        metagenomic data (default: False).\n  --no-assembly         Use if you want to skip the assembly and retrieval of\n                        contigs for metagenomic data (default: False).\n  --orf-finder          Use NCBI ORFfinder instead of prodigal for ORF\n                        prediction of genomes/contigs (default: False).\n  --store-peptides, -sp\n                        Store the translated sequences. Useful if you plan to\n                        redo the analysis using a different model and want to\n                        skip the preprocessing steps (default: False).\n  --rerun               Use of you want to redo the analysis or do the\n                        analysis using a different model and have kept either\n                        the nucletide or amino acid sequences. Please note\n                        that this only works if the input data is the same for\n                        both runs (default: False).\n  --amino-dir AMINO_DIR\n                        Where the amino acid sequences generated by the method\n                        are located. Only to be used in combination with\n                        --rerun\n  --fasta-dir FASTA_DIR\n                        Where the nucleotide sequences in FASTA generated by\n                        previous runs of the method are located. Only to be\n                        used in combination with --rerun\n  --translation-format TRANS_FORMAT\n                        The translation format that transeq should use.\n                        (default: pearson)\n  --loglevel {DEBUG,INFO}\n                        Set logging level (default: INFO).\n  --logfile LOGFILE     Logfile (default: fargene_analysis.log).\n```\n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Analyze the same dataset with several models",
        "parent_header": [
          "fARGene",
          "Data analysis",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "If you want to search the same dataset for different types of genes it is recommended to use the `--rerun` option in order to avoid repeating the time consuming preprocessing steps. This can be used on the converted FASTA files generated by the first analysis with fargene as shown below\n\nFirst analysis\n```\nfargene -i path/to/paired_end_fastqfiles/*.fastq --meta --hmm-model class_a -o class_a_out -p num_of_processes\n```\n\nTo repeat the analysis with another model\n\n```\nfargene -i path/to/paired_end_fastqfiles/*.fastq --meta --hmm-model class_c -o class_c_out -p num_of_processes\n--rerun --fasta-dir class_a_out/tmpdir/\n```\n\nDepending on the size of your storage and the size of the dataset, the option `--store-peptides` can be used in the first analysis. This will significantly speed up the analysis for the following models, but be aware of the potential huge amounts of data that will be stored. The commands can then look as follows\n\nFirst analysis\n\n```\nfargene -i path/to/paired_end_fastqfiles/*.fastq --meta --hmm-model class_a -o class_a_out -p num_of_processes \n--store-peptides\n```\n\nTo repeat the analysis with another model\n\n```\nfargene -i path/to/paired_end_fastqfiles/*.fastq --meta --hmm-model class_c -o class_c_out -p num_of_processes\n--rerun --amino-dir class_a_out/tmpdir/\n```\n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "parent_header": [
          "fARGene"
        ],
        "type": "Text_excerpt",
        "value": " \nFor a tutorial of how to use fargene click [here](tutorial/tutorial.md).\n"
      },
      "source": "https://raw.githubusercontent.com/fannyhb/fargene/master/README.md",
      "technique": "header_analysis"
    }
  ]
}