{
  "application_domain": [
    {
      "confidence": 23.38,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xa-lab/RFcaller"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-24T16:22:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-29T18:31:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A pipeline that uses read-level features and extra trees/random forest algorithms for accurate and fast detection of somatic mutations in next generation sequencing data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9990852304506108,
      "result": {
        "original_header": "RFcaller",
        "type": "Text_excerpt",
        "value": "A pipeline that uses read-level features and extra trees/random forest algorithms for accurate and fast detection of somatic mutations in next generation sequencing data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9163247393074052,
      "result": {
        "original_header": "Docker options",
        "type": "Text_excerpt",
        "value": "- `--rm`: Automatically remove the container when it exits.\n- `-v, --volume`: Mount local volumes in the container.\n  - With the option `-v $(pwd):/output/`, RFcaller results will be in your current directory.\n- `-u, --user`: Specify the user ID and its group ID. It's useful to not run the pipeline as root.\n- `-i, --interactive`: Keep STDIN open even if not attached.\n- `-t, --tty`: Allocate a pseudo-TTY. When combined with `-i` it allows you to connect your terminal with the container terminal.\n- `-e, --env`: Set environment variables.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9566501925136139,
      "result": {
        "original_header": "Multiple cases",
        "type": "Text_excerpt",
        "value": "- `-i, --input`: The input is a TSV (tab-separated values) file with five required columns  and an optional extra one. This last column is used to specify the file with the positions you want to analyze. \n- `-g, --genome`: Reference genome in FASTA format *(bgzip supported)*.\n- `-p, --dbSNP`: VCF file provided by the image with common SNPs (MAF \u2265 1%) to eliminate these positions from the analysis. In case you want to use your own VCF *(bgzip supported)*, use also the `--ploidy_file` argument.\n  - *Choices: `[hg19, hg38, your_dbSNP]`*\n \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9849897621858223,
      "result": {
        "original_header": "Only for single case",
        "type": "Text_excerpt",
        "value": "- `-@`: Max number of threads to use.\n  - *Default: 20*\n- `-b, --bamsDir`: Main directory where BAMs are located inside the container. By default, the program will look in the `/bams/` directory and that's why we set the docker option *`-v /BAMS_PATH/:/bams/`*. However, if you mount your BAMs in other directory inside the container, you have to use this option to specify it.\n  - *Default: `/bams/`*\n- `-r, --regions`: List of regions in which to make the call in VCF, BCF or TSV format.\n- `--PoN`: TSV (CHROM, FROM, TO) with positions appearing in a Panel of Normals. Use `RFcaller --PoN ?` for more information.\n  - *Default: Same version as dbSNP*\n  - *Choices: `[hg19, hg38, None, your_PoN]`*\n- `--ploidy_file`: `bcftools call --ploidy_file` to use in variant calling. Use `RFcaller --ploidy_file ?` for more information.\n  - *Default: Same version as dbSNP*\n  - *Choices: `[GRCh37, GRCh38, GRCm38 (mouse), GRCm39 (mouse), None (consider all sites as diploid), your_ploidy_file]`*\n- `--includePatches`: Tag used to analyze both canonical chromosomes and patches.\n- `--keep`: Tag used to keep intermediate files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9825991282808596,
      "result": {
        "original_header": "Additional parameters",
        "type": "Text_excerpt",
        "value": "RFcaller has some extra parameters to use as filters:\n|      Parameter      |                                                                                                                                        Description                                                                                                                                       | Default |\n|:-------------------:|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|:-------:|\n|    contamination    | Percentage of tumor contamination in normal sample. For example,  if you expect that 10% of reads in normal comes from  tumor (10% contamination),you have to set `\"contamination\": 0.1`. This argument is used to increase the maximum number of mutated reads allowed in normal sample |   0.05  |\n|      TD_cov_SNV     |                                                                                                                         Minimum coverage for tumor sample (SNVs)                                                                                                                         |    7    |\n|     TD_cov_INDEL    |                                                                                                                        Minimum coverage for tumor sample (INDELs)                                                                                                                        |    7    |\n|      ND_cov_SNV     |                                                                                                                         Minimum coverage for normal sample (SNVs)                                                                                                                        |    7    |\n|     ND_cov_INDEL    |                                                                                                                        Minimum coverage for normal sample (INDELs)                                                                                                                       |    7    |\n|      TD_mut_SNV     |                                                                                                 Minimum number of mutated reads for a position in tumor sample  to not discard it (SNVs)                                                                                                 |    3    |\n|     TD_mut_INDEL    |                                                                                                Minimum number of mutated reads for a position in tumor sample  to not discard it (INDELs)                                                                                                |    4    |\n|      ND_mut_SNV     |                                                                                                      Maximum number of mutated reads allowed for a position  in normal sample (SNVs)                                                                                                     |    3    |\n|     ND_mut_INDEL    |                                                                                                     Maximum number of mutated reads allowed for a position  in normal sample (INDELs)                                                                                                    |    2    |\n|      ND_window      |                                                                                                         Window size around a position to look for mutations  in normal (INDELs)                                                                                                         |    10   |\n|    SNV_threshold    |                                                                                                                       Minimum QUAL value to consider a SNV as good                                                                                                                      | 10.1774 |\n|   INDEL_threshold   |                                                                                                                     Minimum QUAL value to consider an INDEL as good                                                                                                                     | 32.1418 |\n| polyINDEL_threshold |                                                                                                                Minimum QUAL value to consider an homopolymerINDEL (mononucleotide microsatellites) as good                                                                                                               |  0.7723 |\n \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9129520928824338,
      "result": {
        "original_header": "Outputs",
        "type": "Text_excerpt",
        "value": "1. calling: bcftools basic call results\n    - `${name}.vcf.gz` -> Original calling from bcftools\n    - `${name}.norm.vcf.gz` -> After normalizing the indels\n    - `${name}.filter.norm.vcf.gz` -> After removing SNPs and very low quality mutations\n    - `${name}.SNVs.filter.norm.vcf` and `${name}.INDELs.filter.norm.vcf` -> Separate SNVs and INDELs into two files\n    - `polyIndel.pos` -> BED file with those positions which contain an homopolymer INDEL\n2. somaticSNV: RFcaller results for SNVs\n    - `reduced.positions` -> All positions to analyze in `${name}.SNVs.filter.norm.vcf`\n    - `reduced_*.bam` -> A small bam with just the reads overlapping positions in `reduced.positions`\n    - `*.mini.pileup` and `${name}.mini.pileup.vcf` -> Filtered mini.pileup and its VCF for the positions in `reduced.positions`\n    - `common.positions` -> File with the positions in `${name}.mini.pileup.vcf` with the format `CHR \\t POS`\n    - `${tumor}.read.names`, `${name}.mutations.interval`, `${name}.sequence`,  `${name}.stats`, `${name}.cigar`  and `${name}.mapq` -> Intermediate files with read-level features\n    - `${name}.prepare_muts.csv` -> File generated from gathering the above features and filtering them\n    - `regression_results_SNVs_${name}.txt`-> Regression algorithm result for SNVs\n    - `mutations_SNVs_${name}.vcf.gz` -> Final set of SNVs\n3. somaticINDEL: RFcaller results for INDELs\n    - `reduced.positions` -> All positions to analyze in `${name}.INDELs.filter.norm.vcf`\n    - `short_reduced.positions` and `long_reduced.positions` -> Positions separated by the size of the INDEL (short < 7 and long >= 7)\n    - `reduced_*.bam` -> A small bam with just the reads overlapping positions in `reduced.positions`\n    - `*.mini.pileup` and `${name}.mini.pileup.vcf` -> Filtered mini.pileup and its VCF for the positions in `reduced.positions`\n    - `short_common.positions`, `long_common.positions` and `common.positions` -> File with the positions in `${name}.mini.pileup.vcf` with the format `CHR \\t POS`\n    - `${name}.features`, `${name}.mutations.interval`, `${name}.sequence`, `${name}.distribution`,  `${name}.stats`, `${name}.cigar`  and `${name}.mapq` -> Intermediate files with read-level features\n    - `${name}.prepare_muts.csv` -> File generated from gathering the above features and filtering them\n    - `regression_results_INDELs_${name}.txt`-> Regression algorithm result for INDELs\n    - `mutations_INDELs_${name}.vcf.gz` -> Final set of INDELs\n4. `mutations_${name}.vcf` -> Final VCF with the mutations from SNV and INDEL pipelines \nIf the tag `--keep` is not set, all above directories are removed and only the final VCF file `mutations_${name}.vcf` in conserved. \n**Citation:** If you use RFcaller in your publication, please cite us:\n```\nAnder D\u00edaz-Navarro et al., RFcaller: a machine learning approach combined with read-level features to \ndetect somatic mutations, NAR Genomics and Bioinformatics, Volume 5, Issue 2, June 2023, lqad056, \nhttps://doi.org/10.1093/nargab/lqad056\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xa-lab/RFcaller/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xa-lab/RFcaller/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xa-lab/RFcaller"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RFcaller"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.1093/nargab/lqad056"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "RFcaller"
        ],
        "type": "Text_excerpt",
        "value": "If you don't have docker already installed in your system, please follow these [instructions](https://docs.docker.com/get-docker/).\n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker pull",
        "parent_header": [
          "RFcaller",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "We have created a docker image with all dependencies installed:\n\n```bash\ndocker pull labxa/rfcaller:1.2.0\n```\n\nThe image has the following structure:\n\n- `databases` directory contains dbSNP, ploidy files and a panel of normals.\n- `RFcaller` has the scripts used by the pipeline.\n- `output` is the working directory.\n\n```basic\n/home\n |-- databases\n      |-- dbSNP\n           |-- UCSC_dbSNP153Common_hg19_combined.vcf.gz\n           |-- UCSC_dbSNP153Common_hg19_combined.vcf.gz.tbi\n           |-- UCSC_dbSNP153Common_hg38_combined.vcf.gz\n           |-- UCSC_dbSNP153Common_hg38_combined.vcf.gz.tbi\n      |-- ploidy_files\n           |-- GRCm38.ploidy.file\n           |-- GRCm39.ploidy.file\n      |-- PoN\n           |-- PanelOfNormals_hs37d5.tsv.gz\n           |-- PanelOfNormals_hs37d5.tsv.gz.tbi\n           |-- PanelOfNormals_hg38.tsv.gz\n           |-- PanelOfNormals_hg38.tsv.gz.tbi\n |-- RFcaller\n           |-- scripts\n           |-- training\n/output\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker build",
        "parent_header": [
          "RFcaller",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "In case you want to build your own RFcaller image:\n\n```bash\ngit clone git@github.com:xa-lab/RFcaller.git\nwget -O databases.zip https://zenodo.org/record/7113432/files/databases.zip?download=1\nunzip databases.zip\ncp -r databases/dbSNP RFcaller/databases\nrm -rf databases databases.zip\ncd RFcaller\ndocker build -t labxa/rfcaller:1.2.0 .\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9995964070358977,
      "result": {
        "original_header": "Docker options",
        "type": "Text_excerpt",
        "value": "- `--rm`: Automatically remove the container when it exits.\n- `-v, --volume`: Mount local volumes in the container.\n  - With the option `-v $(pwd):/output/`, RFcaller results will be in your current directory.\n- `-u, --user`: Specify the user ID and its group ID. It's useful to not run the pipeline as root.\n- `-i, --interactive`: Keep STDIN open even if not attached.\n- `-t, --tty`: Allocate a pseudo-TTY. When combined with `-i` it allows you to connect your terminal with the container terminal.\n- `-e, --env`: Set environment variables.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8785953045809384,
      "result": {
        "original_header": "Required inputs",
        "type": "Text_excerpt",
        "value": "RFcaller has the following required inputs: \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9758408623445503,
      "result": {
        "original_header": "Single case",
        "type": "Text_excerpt",
        "value": "- `-nb, --normalBam`: Path to normal BAM.\n- `-tb, --tumorBam`: Path to tumor BAM.\n- `-o, --output`: Output file name. \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9015161368816117,
      "result": {
        "original_header": "Multiple cases",
        "type": "Text_excerpt",
        "value": "    |  |  |  |  |  |  |\n    |:---:|:---:|:---:|:---:|:---:|:---:|\n    | Normal name | Normal BAM<br>*(CRAM supported)* | Tumor name | Tumor BAM<br>*(CRAM supported)* | Output name | VCF/BED<br>(optional) |\n    |  |  |  |  |  |  | \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.911701808883206,
      "result": {
        "original_header": "Optional inputs",
        "type": "Text_excerpt",
        "value": "RFcaller provides additional configuration through the following optional inputs: \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9122955859328736,
      "result": {
        "original_header": "Only for single case",
        "type": "Text_excerpt",
        "value": "- `-n, --normal`: Name for normal files.\n  - *Default: normal*\n- `-t, --tumor`: Name for tumor files.\n  - *Default: tumor* \n- `-@`: Max number of threads to use.\n  - *Default: 20*\n- `-b, --bamsDir`: Main directory where BAMs are located inside the container. By default, the program will look in the `/bams/` directory and that's why we set the docker option *`-v /BAMS_PATH/:/bams/`*. However, if you mount your BAMs in other directory inside the container, you have to use this option to specify it.\n  - *Default: `/bams/`*\n- `-r, --regions`: List of regions in which to make the call in VCF, BCF or TSV format.\n- `--PoN`: TSV (CHROM, FROM, TO) with positions appearing in a Panel of Normals. Use `RFcaller --PoN ?` for more information.\n  - *Default: Same version as dbSNP*\n  - *Choices: `[hg19, hg38, None, your_PoN]`*\n- `--ploidy_file`: `bcftools call --ploidy_file` to use in variant calling. Use `RFcaller --ploidy_file ?` for more information.\n  - *Default: Same version as dbSNP*\n  - *Choices: `[GRCh37, GRCh38, GRCm38 (mouse), GRCm39 (mouse), None (consider all sites as diploid), your_ploidy_file]`*\n- `--includePatches`: Tag used to analyze both canonical chromosomes and patches.\n- `--keep`: Tag used to keep intermediate files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8288077136623844,
      "result": {
        "original_header": "Single case",
        "type": "Text_excerpt",
        "value": "- `-nb, --normalBam`: Path to normal BAM.\n- `-tb, --tumorBam`: Path to tumor BAM.\n- `-o, --output`: Output file name. \n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xa-lab/RFcaller/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022, Universidad de Oviedo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RFcaller"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "xa-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 78375,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 69439,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 4831,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:31:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick usage",
        "parent_header": [
          "RFcaller"
        ],
        "type": "Text_excerpt",
        "value": "Here is basic configuration, for more information see [docker](#Docker-options) and [RFcaller](#RFcaller-options) options.\n\n```bash\n# Single case\ndocker run --rm -v /BAMS_PATH/:/bams/ -v /GENOME_PATH/:/genome/ -v $(pwd):/output/ -u $(id -u):$(id -g) -it labxa/rfcaller:1.2.0 -@ INT -nb /bams/NORMAL.BAM -tb /bams/TUMOR.BAM -o OUTPUT --genome /genome/GENOME.FA --dbSNP hg19\n\n# Multiple cases\ndocker run --rm -v /BAMS_PATH/:/bams/ -v /GENOME_PATH/:/genome/ -v $(pwd):/output/ -u $(id -u):$(id -g) -it labxa/rfcaller:1.2.0 -@ INT -i INPUT.LIST --genome /genome/GENOME.FA --dbSNP hg19\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Writting input file",
        "parent_header": [
          "RFcaller",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Imagine that you have the following configuration:\n\n```basic\n/home/RFcaller/example/\n  |-- example.metadata\n  |-- normal.bam\n  |-- normal.bam.bai\n  |-- tumor.bam\n  |-- tumor.bam.bai\n/home/genomes/\n  |-- hg19.fa\n  |-- hg19.fa.fai\n```\n\nIf we use the following command to run RFcaller:\n\n```bash\ndocker run --rm -v /home/RFcaller/example/:/bams/ -v /home/genomes/:/genome/ -v $(pwd):/output/ -u $(id -u):$(id -g) -it labxa/rfcaller:1.2.0 -i /bams/example.metadata --genome /genome/hg19.fa --dbSNP hg19\n```\n\nThe example.metadata file should be:\n\n```basic\nnormal  normal.bam  tumor  tumor.bam  example\n```\n\nThis is because thanks to the `-v` command, the files inside the container are located in the following way:\n|              Computer              |      Docker      |\n| :--------------------------------: | :--------------: |\n| /home/example/example.metadata | /bams/example.metadata |\n| /home/example/bams/normal.bam | /bams/normal.bam |\n| /home/example/bams/tumor.bam  | /bams/tumor.bam  |\n| /home/example/genome/hg19.fa  | /genome/hg19.fa  |\n\nA more detailed explanation:\n\n- We use `-i /bams/example.metadata` because inside the container, we are working in the `/output/` directory, but we have mounted the metadata file in the `/bams/` directory.\n- We have said before that the default directory for the BAMs inside the container is `/bams/`. In this sense, as our BAMs are in this directory, we don't have to specify the full path in the `example.metadata` file, just write where these BAMs are located inside this folder.\n- In the case of genome, we have to specify the full path inside the container, that is why we use `--genome /genome/hg19.fa`.\n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Changing default paths",
        "parent_header": [
          "RFcaller",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "To make it clear how to use the Docker options together with RFcaller, we have prepared a more complex example. For this time, we start with the following directory structure:\n\n```basic\n/home/complex_example/\n  |-- example.metadata\n/data/\n  |-- bams\n      |-- normal_dir\n            |-- normal.bam\n            |-- normal.bam.bai\n      |-- tumor_dir\n            |-- tumor.bam\n            |-- tumor.bam.bai\n  |-- hg19_genome\n      |-- hg19.fa\n      |-- hg19.fa.fai\n```\n\nIn the event that we were working in the `/home/` directory:\n\n```bash\ndocker run --rm -v /data/bams/:/example_bams/ -v /data/hg19_genome/:/genome/ -v $(pwd):/output/ -u $(id -u):$(id -g) -it labxa/rfcaller:1.2.0 -i complex_example/example.metadata --bamsDir /example_bams/ --genome /genome/hg19.fa --dbSNP hg19 \n```\n\nThe distribution of the files will be:\n|              Computer              |      Docker      |\n| :--------------------------------: | :--------------: |\n| /home/complex_example/example.metadata | /output/complex_example/example.metadata |\n| /data/bams/normal_dir/normal.bam | /example_bams/normal_dir/normal.bam |\n| /data/bams/tumor_dir/tumor.bam | /example_bams/tumor_dir/tumor.bam |\n| /data/hg19_genome/genome/hg19.fa  | /genome/hg19.fa  |\n\nThus, the `metadata.example` file should be:\n\n```basic\nnormal  normal_dir/normal.bam  tumor  tumor_dir/tumor.bam  example\n```\n\nA more detailed explanation:\n\n- As we are using `-v $(pwd):/output/` and our working directory outside the container is `/home/`, the `example.metadata` file in the container is inside the folder `complex_example`. This is why we use `-i complex_example/example.metadata`.\n- We have mounted the BAMs directory in `/example_bams/` instead of `/bams/`, so we also have to changed BAMs directory for RFcaller with the `-b, --bamsDir` option. Now, for the `example.metadata` we have to write the full BAMs path removing the main directory because it is defined with  `--bamsDir`.\n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Changing TimeZone",
        "parent_header": [
          "RFcaller",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "The time zone of the docker image is `Europe/Madrid` and it's used to set the time for the log file. To change this, add the `-e` option to set environment variables:\n\n```bash\ndocker run --rm -e \"TZ=$(cat /etc/timezone)\" -v /BAMS_PATH/:/bams/ -v /GENOME_PATH/:/genome/ -v $(pwd):/output/ -u $(id -u):$(id -g) -it labxa/rfcaller:1.2.0 -@ INT -i INPUT.LIST --genome /genome/GENOME.FA --dbSNP hg19/hg38\n```\n\nOr set it manually (to know your TZ visit: [TZ database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones))\n\n```bash\ndocker run --rm -e \"TZ=America/Toronto\" -v /BAMS_PATH/:/bams/ -v /GENOME_PATH/:/genome/ -v $(pwd):/output/ -u $(id -u):$(id -g) -it labxa/rfcaller:1.2.0 -@ INT -i INPUT.LIST --genome /genome/GENOME.FA --dbSNP hg19/hg38\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xa-lab/RFcaller/master/README.md",
      "technique": "header_analysis"
    }
  ]
}