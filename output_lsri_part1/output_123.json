{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing us",
        "parent_header": [
          "LAVASET"
        ],
        "type": "Text_excerpt",
        "value": "```bash \n@article{10.1093/bioinformatics/btae101,\n    author = {Kasapi, Melpomeni and Xu, Kexin and Ebbels, Timothy M D and O\u2019Regan, Declan P and Ware, James S and Posma, Joram M},\n    title = \"{LAVASET: Latent variable stochastic ensemble of trees. An ensemble method for correlated datasets with spatial, spectral, and temporal dependencies}\",\n    journal = {Bioinformatics},\n    pages = {btae101},\n    year = {2024},\n    month = {02},\n    issn = {1367-4811},\n    doi = {10.1093/bioinformatics/btae101},\n    url = {https://doi.org/10.1093/bioinformatics/btae101},\n    eprint = {https://academic.oup.com/bioinformatics/advance-article-pdf/doi/10.1093/bioinformatics/btae101/56732749/btae101.pdf},\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Kasapi, Melpomeni and Xu, Kexin and Ebbels, Timothy M D and O\u2019Regan, Declan P and Ware, James S and Posma, Joram M",
        "doi": "10.1093/bioinformatics/btae101",
        "format": "bibtex",
        "title": "{LAVASET: Latent variable stochastic ensemble of trees. An ensemble method for correlated datasets with spatial, spectral, and temporal dependencies}",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1093/bioinformatics/btae101",
        "value": "@article{10.1093/bioinformatics/btae101,\n    eprint = {https://academic.oup.com/bioinformatics/advance-article-pdf/doi/10.1093/bioinformatics/btae101/56732749/btae101.pdf},\n    url = {https://doi.org/10.1093/bioinformatics/btae101},\n    doi = {10.1093/bioinformatics/btae101},\n    issn = {1367-4811},\n    month = {02},\n    year = {2024},\n    pages = {btae101},\n    journal = {Bioinformatics},\n    title = {{LAVASET: Latent variable stochastic ensemble of trees. An ensemble method for correlated datasets with spatial, spectral, and temporal dependencies}},\n    author = {Kasapi, Melpomeni and Xu, Kexin and Ebbels, Timothy M D and O\u2019Regan, Declan P and Ware, James S and Posma, Joram M},\n}"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/melkasapi/LAVASET"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "LAVASET"
        ],
        "type": "Text_excerpt",
        "value": "For questions or feedback, please contact Melpi Kasapi at mk218@ic.ac.uk.\n\nVisit our [GitHub repository](https://github.com/melkasapi/LAVASET) for more information and updates.\n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "LAVASET"
        ],
        "type": "Text_excerpt",
        "value": "Contributions to LAVASET are always welcome.\n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Issues",
        "parent_header": [
          "LAVASET",
          "Contributing"
        ],
        "type": "Text_excerpt",
        "value": "Please submit any issues or bugs via the GitHub [issues](https://github.com/melkasapi/LAVASET/issues) page. Please include details about the LAVASET minor version used (`lavaset.__version__`) as well as any relevant input data.\n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributions",
        "parent_header": [
          "LAVASET",
          "Contributing"
        ],
        "type": "Text_excerpt",
        "value": "Please submit any changes via a pull request. These will be reviewed by the LAVASET team and merged in due course.\n\n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-16T16:20:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-09T08:05:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LAVASET"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9987803970899064,
      "result": {
        "original_header": "LAVASET",
        "type": "Text_excerpt",
        "value": "LAVASET (**La**tent **Va**riable **S**tochastic **E**nsemble of **T**rees) is a Python package designed for ensemble learning in datasets with complex spatial, spectral, and temporal dependencies. The main method is described in our Bioinformatics paper: https://doi.org/10.1093/bioinformatics/btae101. An updated version of LAVASET, v1, includes CLIFI, a class-based directional feature importance as well as boosting algorithms described in our preprint: https://www.biorxiv.org/content/10.1101/2024.08.01.605982v1.full.pdf. \n \n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9892984068427592,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- **Efficient Handling of Correlated Data**: Optimized for datasets where traditional models struggle.\n- **Cython-Powered Performance**: Critical computations are implemented in Cython for efficiency.\n- **Cross-Platform Compatibility**: Tested and deployable across Linux, macOS, and Windows.\n- **Integrated directional feature importance metric (v1.0.0)**: class-based and suitable for multi-class classification. \n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9788600813984983,
      "result": {
        "original_header": "For macOS or Windows users",
        "type": "Text_excerpt",
        "value": "LAVASET is built on a Linux architecture that is compatible with various linux platforms via a Docker image, and it has builds for the following macOS and Windows platforms via ``cibuildwheel``: \n```\n[macos]\npython_configurations = [\n  { identifier = \"cp3x-macosx_x86_64\", version = \"3.7-3.12\"},\n  { identifier = \"cp3x-macosx_arm64\", version = \"3.7-3.12\"},\n  { identifier = \"cp3x-macosx_universal2\", version = \"3.7-3.12\"}]\n\n[windows]\npython_configurations = [\n  { identifier = \"cp3x-win32\", version = \"3.7-3.12\", arch = \"32\" },\n  { identifier = \"cp3x-win_amd64\", version = \"3.7-3.12\", arch = \"64\" },\n  { identifier = \"cp3x-win_arm64\", version = \"3.9-3.12\", arch = \"ARM64\" }]\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/melkasapi/LAVASET/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/examples/run_rf.ipynb"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/examples/run_rf.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/examples/run_lavaset.ipynb"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/examples/run_lavaset.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/lavaset/.ipynb_checkpoints/run_lavaset-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/lavaset/.ipynb_checkpoints/run_lavaset-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/melkasapi/LAVASET/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "melkasapi/LAVASET"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LAVASET"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/doi/10.5281/zenodo.10816838"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "LAVASET"
        ],
        "type": "Text_excerpt",
        "value": "You can install LAVASET directly from PyPI:\n\n```bash\npip install lavaset\n```\n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999893400969,
      "result": {
        "original_header": "For macOS or Windows users",
        "type": "Text_excerpt",
        "value": "LAVASET is built on a Linux architecture that is compatible with various linux platforms via a Docker image, and it has builds for the following macOS and Windows platforms via ``cibuildwheel``: \n```\n[macos]\npython_configurations = [\n  { identifier = \"cp3x-macosx_x86_64\", version = \"3.7-3.12\"},\n  { identifier = \"cp3x-macosx_arm64\", version = \"3.7-3.12\"},\n  { identifier = \"cp3x-macosx_universal2\", version = \"3.7-3.12\"}]\n\n[windows]\npython_configurations = [\n  { identifier = \"cp3x-win32\", version = \"3.7-3.12\", arch = \"32\" },\n  { identifier = \"cp3x-win_amd64\", version = \"3.7-3.12\", arch = \"64\" },\n  { identifier = \"cp3x-win_arm64\", version = \"3.9-3.12\", arch = \"ARM64\" }]\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/melkasapi/LAVASET/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "LAVASET"
        ],
        "type": "Text_excerpt",
        "value": "LAVASET is released under the GNU License. See the LICENSE file for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LAVASET"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "melkasapi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 178145,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 24228,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 7431,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 570,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 187,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "melkasapi",
          "type": "User"
        },
        "date_created": "2024-08-07T12:51:50Z",
        "date_published": "2024-08-07T14:58:26Z",
        "description": "Release includes the new feature importance algorithm (CLIFI) and boosting algorithms.\r\n\r\n## What's Changed\r\n* V1.0 by @melkasapi in https://github.com/melkasapi/LAVASET/pull/10\r\n\r\n\r\n**Full Changelog**: https://github.com/melkasapi/LAVASET/compare/v0.1.1...v1.0.0",
        "html_url": "https://github.com/melkasapi/LAVASET/releases/tag/v1.0.0",
        "name": "LAVASET v1.0.0",
        "release_id": 169129719,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/melkasapi/LAVASET/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/melkasapi/LAVASET/releases/169129719",
        "value": "https://api.github.com/repos/melkasapi/LAVASET/releases/169129719",
        "zipball_url": "https://api.github.com/repos/melkasapi/LAVASET/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "melkasapi",
          "type": "User"
        },
        "date_created": "2024-03-25T16:59:04Z",
        "date_published": "2024-03-25T17:06:09Z",
        "description": "Added windows and macOS implementations.",
        "html_url": "https://github.com/melkasapi/LAVASET/releases/tag/v0.1.1",
        "name": "LAVASET v0.1.1",
        "release_id": 148260053,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/melkasapi/LAVASET/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/melkasapi/LAVASET/releases/148260053",
        "value": "https://api.github.com/repos/melkasapi/LAVASET/releases/148260053",
        "zipball_url": "https://api.github.com/repos/melkasapi/LAVASET/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "melkasapi",
          "type": "User"
        },
        "date_created": "2024-03-13T17:11:06Z",
        "date_published": "2024-03-25T17:04:33Z",
        "description": "Introducing LAVASET 0.1.0. More information on the README.",
        "html_url": "https://github.com/melkasapi/LAVASET/releases/tag/v0.1.0",
        "name": "LAVASET v0.1.0",
        "release_id": 148259810,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/melkasapi/LAVASET/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/melkasapi/LAVASET/releases/148259810",
        "value": "https://api.github.com/repos/melkasapi/LAVASET/releases/148259810",
        "zipball_url": "https://api.github.com/repos/melkasapi/LAVASET/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "LAVASET"
        ],
        "type": "Text_excerpt",
        "value": "- Python >= 3.7\n- NumPy\n- pandas\n- scikit-learn\n- scipy\n- Cython\n- joblib\n\nCython and NumPy are incorporated as build dependencies for LAVASET and are pre-installed before the package setup. If you encounter any issues during installation, especially regarding Cython or NumPy, consider installing these packages manually before proceeding with the LAVASET installation.\n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:28:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Usage",
        "parent_header": [
          "LAVASET"
        ],
        "type": "Text_excerpt",
        "value": "A jupyter notebook with examples on how to import and use the LAVASET package can be found [here](https://github.com/melkasapi/LAVASET/blob/main/examples/run_lavaset.ipynb). Briefly, the LAVASET model can be called as below:\n\n```bash\nmodel = LAVASET(ntrees=100, n_neigh=10, distance=False, nvartosample='sqrt', nsamtosample=0.5, oobe=True) \n```\n\n- ntrees: number of trees (or estimators) for the ensemble (int)\n- n_neigh: number of neighbors to take for the calculation of the latent variable; this excludes the feature that has been selected for split, therefore the latent variable is calculated by the total of n+1 features (int)\n- distance: parameter indicating whether the input for neighbor calculation is a distance matrix, default is False; if True, then n_neigh should be 0 (boolean)\n- nvartosample: the number of features picked for each split, 'sqrt' indicates the squared root of total number of features, if int then takes that specific number of features (string or int)\n- nsamtosample: the number of sample to consider for each tree, if float (like 0.5) then it considers `float * total number of samples`, if int then takes that specific number of samples (float or int)\n- oobe: parameter for calcualting the out-of-bag score, default=True (boolean)\n\nIf the input to the `knn_calculation` function is a distance matrix then:\n```bash\nmodel = LAVASET(ntrees=100, n_neigh=0, distance=True, nvartosample='sqrt', nsamtosample=0.5, oobe=True) \n\nknn = model.knn_calculation(distance_matrix, data_type='distance_matrix')\n```\nIf the neighbors need to be calculated from the 1D spectrum ppm values of an HNMR dataset, then the input is the 1D array with the ppm values. Here the model parameters should be set as `distance=False` and `n_neigh=k`. The `data_type` parameter for the `knn_calculation` in this case will be set to `1D`. All options include:\n- 'distance_matrix' is used for distance matrix input, \n- '1D' is used for 1D data like signals or spectra, \n- 'VCG' is used for VCG data, \n- 'other' is used for any other type of data, where it calculates the nearest neighbors based on the 2D data input. \n\n```bash \nknn = model.knn_calculation(mtbls1.columns[1:], data_type='1D')\n```\nDepending on whether you wish to use our new feature importance method (CLIFI) or the traditional RF method you can call different functions for your feature importance calculations that can be found in detail in the example notebooks. \n"
      },
      "source": "https://raw.githubusercontent.com/melkasapi/LAVASET/main/README.md",
      "technique": "header_analysis"
    }
  ]
}