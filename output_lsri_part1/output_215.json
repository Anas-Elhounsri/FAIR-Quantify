{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "citHeader(\"To cite CCPlotR in publications, use:\")\n\nbibentry(\n    bibtype = \"Article\",\n    title = \"CCPlotR: An R package for the visualization of cell-cell interactions\",\n    author = personList(\n        as.person(\"Sarah Ennis\"),\n        as.person(\"Pilib \u00d3 Broin\"),\n        as.person(\"Eva Szegezdi\")\n    ),\n    journal = \"Bioinformatics Advances\",\n    volume = \"3\",\n    pages = \"vbad130\",\n    year = \"2023\",\n    doi = \"10.1093/bioadv/vbad130\",\n    URL = \"https://doi.org/10.1093/bioadv/vbad130\",\n    eprint = \"https://doi.org/10.1093/bioadv/vbad130\"\n)\n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/inst/CITATION",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Sarah145/CCPlotR"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-07T13:43:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-18T06:21:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An R package for visualising cell-cell interactions"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9912404459866858,
      "result": {
        "original_header": "A small R package for visualising results from tools that predict cell-cell interactions from scRNA-seq data",
        "type": "Text_excerpt",
        "value": "This R package makes generic plots that can be used to visualise results from multiple tools such as Liana, CellPhoneDB, NATMI etc. All it requires as input is a dataframe with columns `source`, `target`, `ligand`, `receptor` and `score`. It should look something like this: \nFor some of the plots, there is an option to also show the expression of the ligands and receptors in each cell type. For those plots, a second dataframe is required, which holds the mean expression values for each gene in each cell type and should look something like this: \nThe package comes with toy datasets (`toy_data`, `toy_exp`) which you can see for examples of input data. \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9891813448809748,
      "result": {
        "original_header": "Plot types",
        "type": "Text_excerpt",
        "value": "The package contains functions for making six types of plots: `cc_heatmap`, `cc_dotplot`, `cc_network`, `cc_circos`, `cc_arrow` and `cc_sigmoid`. Below are some examples of each plot type.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9991908869680542,
      "result": {
        "original_header": "Heatmaps (`cc_heatmap`)",
        "type": "Text_excerpt",
        "value": "This function can generate heatmaps in four different styles. Option A just displays the total number of interactions between each pair of cell types and option B shows the ligands, receptors and cell types involved in each interaction as well as their score. For option B, only a small portion of top interactions are shown to avoid cluttering the plot. There is also an option to generate heatmaps in the style of popular cell-cell interaction prediction tools such as CellPhoneDB and Liana.\n```R\nlibrary(CCPlotR)\ndata(toy_data, toy_exp, package = 'CCPlotR')\ncc_heatmap(toy_data)\ncc_heatmap(toy_data, option = 'B', n_top_ints = 10)\ncc_heatmap(toy_data, option = 'CellPhoneDB')\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9980722195054968,
      "result": {
        "original_header": "Dotplots (`cc_dotplot`)",
        "type": "Text_excerpt",
        "value": "This function can generate dotplots in four different styles. Option A just displays the total number of interactions between each pair of cell types and option B shows the ligands, receptors and cell types involved in each interaction as well as their score. For option B, only a small portion of top interactions are shown to avoid cluttering the plot. There is also an option to generate dotplots in the style of popular cell-cell interaction prediction tools such as CellPhoneDB and Liana.\n```R\ncc_dotplot(toy_data)\ncc_dotplot(toy_data, option = 'B', n_top_ints = 10)\ncc_dotplot(toy_data, option = 'Liana', n_top_ints = 15)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9937893726086813,
      "result": {
        "original_header": "Network (`cc_network`)",
        "type": "Text_excerpt",
        "value": "This function can generate two different types of network plots. In option A, the nodes are cell types and the weight of the edges corresponds to the total number of interactions between a given pair of cell types. In option B, the nodes are ligand and receptor genes, coloured by which cell type is expressing them. For option B, only a small portion of top interactions are shown to avoid cluttering the plot. \n```R\ncc_network(toy_data)\ncc_network(toy_data, colours = c('orange', 'cornflowerblue', 'hotpink'), option = 'B')\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9761503372320486,
      "result": {
        "original_header": "Circos plot (`cc_circos`)",
        "type": "Text_excerpt",
        "value": "This function can generate three different types of circos plots. Option A generates a circos plot where the width of the links represents the total number of interactions between each pair of cell types. Option B generates a circos plot showing the ligands, receptors and cell types involved in the top portion of interactions. Option C expands on option B by also showing the mean expression of the ligand and receptor genes in each cell type. In options B and C, the weight of the links represents the score of the interaction.\n```R\ncc_circos(toy_data)\ncc_circos(toy_data, option = 'B', n_top_ints = 10)\ncc_circos(toy_data, option = 'C', n_top_ints = 15, exp_df = toy_exp, cell_cols = c(`B` = 'hotpink', `NK` = 'orange', `CD8 T` = 'cornflowerblue'), palette = 'PuRd')\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9650792407989168,
      "result": {
        "original_header": "Paired arrow plot (`cc_arrow`)",
        "type": "Text_excerpt",
        "value": "This function generates plots showing the interactions between a given pair of cell types. Option A just shows which ligands/receptors are interacting between a pair of cell types and option B also shows the expression of the ligand/receptor genes in each cell type. In both options, the weight of the arrow represents the score of the interaction.\n```R\ncc_arrow(toy_data, cell_types = c('B', 'CD8 T'), colours = c(`B` = 'hotpink', `CD8 T` = 'orange'))\ncc_arrow(toy_data, cell_types = c('NK', 'CD8 T'), option = 'B', exp_df = toy_exp, n_top_ints = 10, palette = 'OrRd')\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9605558250644449,
      "result": {
        "original_header": "Sigmoid plot (`cc_sigmoid`)",
        "type": "Text_excerpt",
        "value": "This function plots a portion of interactions using the `geom_sigmoid` function from the `ggbump` R package to connect ligands in sender cells to receptors in receiver cells.\n```R\ncc_sigmoid(toy_data)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Sarah145/CCPlotR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Sarah145/CCPlotR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Sarah145/CCPlotR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/plots/heatmaps.png"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/plots/dotplots.png"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/plots/networks.png"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/plots/circos_plots.png"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/plots/arrow_plots.png"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/plots/sigmoid.png"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "CCPlotR"
        ],
        "type": "Text_excerpt",
        "value": "The R package can be installed by running:\n\n```R\n# install development version\ndevtools::install_github(\"Sarah145/CCPlotR\")\n\n# or install from Bioconductor\nif (!requireNamespace(\"BiocManager\", quietly = TRUE)) {\n    install.packages(\"BiocManager\")\n}\n\nBiocManager::install(\"CCPlotR\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9953236700072952,
      "result": {
        "original_header": "Heatmaps (`cc_heatmap`)",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/Sarah145/CCPlotR/blob/main/plots/heatmaps.png\">\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9953236700072952,
      "result": {
        "original_header": "Dotplots (`cc_dotplot`)",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/Sarah145/CCPlotR/blob/main/plots/dotplots.png\">\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9850375409720572,
      "result": {
        "original_header": "Network (`cc_network`)",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/Sarah145/CCPlotR/blob/main/plots/networks.png\">\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9953236700072952,
      "result": {
        "original_header": "Circos plot (`cc_circos`)",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/Sarah145/CCPlotR/blob/main/plots/circos_plots.png\">\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9953236700072952,
      "result": {
        "original_header": "Paired arrow plot (`cc_arrow`)",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/Sarah145/CCPlotR/blob/main/plots/arrow_plots.png\">\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9953236700072952,
      "result": {
        "original_header": "Sigmoid plot (`cc_sigmoid`)",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/Sarah145/CCPlotR/blob/main/plots/sigmoid.png\"> \n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Sarah145/CCPlotR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# MIT License\n\nCopyright (c) 2023 CCPlotR authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CCPlotR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Sarah145"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 3532150,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 48952,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 12344,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sarah145/CCPlotR/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:53:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 39
      },
      "technique": "GitHub_API"
    }
  ]
}