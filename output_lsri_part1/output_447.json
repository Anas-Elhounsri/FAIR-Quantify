{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing",
        "parent_header": [
          "AutoPrognosis - A system for automating the design of predictive modeling pipelines tailored for clinical prognosis."
        ],
        "type": "Text_excerpt",
        "value": "If you use this code, please cite the associated paper:\n\n```\n@misc{https://doi.org/10.48550/arxiv.2210.12090,\n  doi = {10.48550/ARXIV.2210.12090},\n  url = {https://arxiv.org/abs/2210.12090},\n  author = {Imrie, Fergus and Cebere, Bogdan and McKinney, Eoin F. and van der Schaar, Mihaela},\n  keywords = {Machine Learning (cs.LG), Artificial Intelligence (cs.AI), FOS: Computer and information sciences, FOS: Computer and information sciences},\n  title = {AutoPrognosis 2.0: Democratizing Diagnostic and Prognostic Modeling in Healthcare with Automated Machine Learning},\n  publisher = {arXiv},\n  year = {2022},\n  copyright = {Creative Commons Attribution 4.0 International}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "AutoPrognosis - A system for automating the design of predictive modeling pipelines tailored for clinical prognosis."
        ],
        "type": "Text_excerpt",
        "value": "1. [AutoPrognosis: Automated Clinical Prognostic Modeling via Bayesian Optimization with Structured Kernel Learning](https://arxiv.org/abs/1802.07207)\n2. [Prognostication and Risk Factors for Cystic Fibrosis via Automated Machine Learning](https://www.nature.com/articles/s41598-018-29523-2)\n3. [Cardiovascular Disease Risk Prediction using Automated Machine Learning: A Prospective Study of 423,604 UK Biobank Participants](https://www.ncbi.nlm.nih.gov/pubmed/31091238)\n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Imrie, Fergus and Cebere, Bogdan and McKinney, Eoin F. and van der Schaar, Mihaela",
        "doi": "10.48550/ARXIV.2210.12090",
        "format": "bibtex",
        "title": "AutoPrognosis 2.0: Democratizing Diagnostic and Prognostic Modeling in Healthcare with Automated Machine Learning",
        "type": "Text_excerpt",
        "url": "https://arxiv.org/abs/2210.12090",
        "value": "@misc{https://doi.org/10.48550/arxiv.2210.12090,\n    copyright = {Creative Commons Attribution 4.0 International},\n    year = {2022},\n    publisher = {arXiv},\n    title = {AutoPrognosis 2.0: Democratizing Diagnostic and Prognostic Modeling in Healthcare with Automated Machine Learning},\n    keywords = {Machine Learning (cs.LG), Artificial Intelligence (cs.AI), FOS: Computer and information sciences, FOS: Computer and information sciences},\n    author = {Imrie, Fergus and Cebere, Bogdan and McKinney, Eoin F. and van der Schaar, Mihaela},\n    url = {https://arxiv.org/abs/2210.12090},\n    doi = {10.48550/ARXIV.2210.12090},\n}"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vanderschaarlab/autoprognosis"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-03T17:19:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-27T00:15:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A system for automating the design of predictive modeling pipelines tailored for clinical prognosis."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9901842697652712,
      "result": {
        "original_header": ":key: Features",
        "type": "Text_excerpt",
        "value": "- :rocket: Automatically learns ensembles of pipelines for classification, regression or survival analysis tasks.\n- :cyclone: Easy to extend pluginable architecture.\n- :fire: Interpretability and uncertainty quantification tools.\n- :adhesive_bandage: Data imputation using [HyperImpute](https://github.com/vanderschaarlab/hyperimpute).\n- :zap: Build demonstrators using [Streamlit](https://streamlit.io/).\n- :notebook: [Python](#high_brightness-tutorials) and [R tutorials](https://github.com/vanderschaarlab/autoprognosis/tree/main/tutorials/bindings/R) available.\n- :book: [Read the docs](https://autoprognosis.readthedocs.io/) \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8756385898354839,
      "result": {
        "original_header": "Environment variables",
        "type": "Text_excerpt",
        "value": "The library can be configured from a set of environment variables. \n| Variable       | Description                                                     |\n|----------------|-----------------------------------------------------------------|\n| `N_OPT_JOBS`     | Number of cores to use for hyperparameter search. Default : 1 |\n| `N_LEARNER_JOBS` | Number of cores to use by inidividual learners. Default: all cpus      |\n| `REDIS_HOST`     | IP address for the Redis database. Default 127.0.0.1            |\n| `REDIS_PORT`     | Redis port. Default: 6379                                       | \n_Example_: `export N_OPT_JOBS = 2` to use 2 cores for hyperparam search.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9417207596978908,
      "result": {
        "original_header": "Imputation methods",
        "type": "Text_excerpt",
        "value": "| Name | Description |\n|--- | --- |\n|**hyperimpute**|Iterative imputer using both regression and classification methods based on linear models, trees, XGBoost, CatBoost and neural nets|\n|**mean**|Replace the missing values using the mean along each column with [`SimpleImputer`](https://scikit-learn.org/stable/modules/generated/sklearn.impute.SimpleImputer.html)|\n|**median**|Replace the missing values using the median along each column with [`SimpleImputer`](https://scikit-learn.org/stable/modules/generated/sklearn.impute.SimpleImputer.html) |\n|**most_frequent**|Replace the missing values using the most frequent value along each column with [`SimpleImputer`](https://scikit-learn.org/stable/modules/generated/sklearn.impute.SimpleImputer.html)|\n|**missforest**|Iterative imputation method based on Random Forests using [`IterativeImputer`](https://scikit-learn.org/stable/modules/generated/sklearn.impute.IterativeImputer.html#sklearn.impute.IterativeImputer) and [`ExtraTreesRegressor`](https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.ExtraTreesRegressor.html)|\n|**ice**| Iterative imputation method based on regularized linear regression using [`IterativeImputer`](https://scikit-learn.org/stable/modules/generated/sklearn.impute.IterativeImputer.html#sklearn.impute.IterativeImputer) and [`BayesianRidge`](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.BayesianRidge.html)|\n|**mice**| Multiple imputations based on ICE using [`IterativeImputer`](https://scikit-learn.org/stable/modules/generated/sklearn.impute.IterativeImputer.html#sklearn.impute.IterativeImputer) and [`BayesianRidge`](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.BayesianRidge.html)|\n|**softimpute**|  [`Low-rank matrix approximation via nuclear-norm regularization`](https://jmlr.org/papers/volume16/hastie15a/hastie15a.pdf)| [`plugin_softimpute.py`](src/hyperimpute/plugins/imputers/plugin_softimpute.py)|\n|**EM**|Iterative procedure which uses other variables to impute a value (Expectation), then checks whether that is the value most likely (Maximization) - [`EM imputation algorithm`](https://joon3216.github.io/research_materials/2019/em_imputation.html)|\n|**gain**|[`GAIN: Missing Data Imputation using Generative Adversarial Nets`](https://arxiv.org/abs/1806.02920)| \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8562690359370194,
      "result": {
        "original_header": "Preprocessing methods",
        "type": "Text_excerpt",
        "value": "```python\nfrom autoprognosis.plugins.preprocessors import Preprocessors\n\npreprocessor = Preprocessors().get(<NAME>)\n```\n| Name | Description |\n|--- | --- |\n| **maxabs_scaler**  | Scale each feature by its maximum absolute value. [`MaxAbsScaler`](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MaxAbsScaler.html)|\n| **scaler** |Standardize features by removing the mean and scaling to unit variance. - [`StandardScaler`](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html#sklearn.preprocessing.StandardScaler)|\n|**feature_normalizer** | Normalize samples individually to unit norm. [`Normalizer`](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.Normalizer.html#sklearn.preprocessing.Normalizer)|\n|**normal_transform** |Transform features using quantiles information.[`QuantileTransformer`](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.QuantileTransformer.html#sklearn.preprocessing.QuantileTransformer)|\n|**uniform_transform** |Transform features using quantiles information.[`QuantileTransformer`](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.QuantileTransformer.html#sklearn.preprocessing.QuantileTransformer)|\n|**minmax_scaler** |Transform features by scaling each feature to a given range.[`MinMaxScaler`](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html#sklearn.preprocessing.MinMaxScaler)| \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vanderschaarlab/AutoPrognosis/tree/main/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://autoprognosis.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vanderschaarlab/AutoPrognosis/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_00_classification_study.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_00_classification_study.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_05_classification_with_explainers.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_05_classification_with_explainers.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_06_automl_multiple_imputation_example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_06_automl_multiple_imputation_example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_02_survival_analysis_study.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_02_survival_analysis_study.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_01_automl_classification_with_imputation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_01_automl_classification_with_imputation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_04_regression.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_04_regression.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_03_automl_survival_analysis_with_imputation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/automl/tutorial_03_automl_survival_analysis_with_imputation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/demonstrators/tutorial_01_build_a_demonstrator_survival_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/demonstrators/tutorial_01_build_a_demonstrator_survival_analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/demonstrators/tutorial_00_build_a_demonstrator_classification.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/demonstrators/tutorial_00_build_a_demonstrator_classification.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_06_regression_plugins.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_06_regression_plugins.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_03_pipelines.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_03_pipelines.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_04_interpretability.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_04_interpretability.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_01_preprocessing_plugins.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_01_preprocessing_plugins.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_00_imputation_plugins.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_00_imputation_plugins.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_02_classification_plugins.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_02_classification_plugins.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_05_survival_analysis_plugins.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/tutorials/plugins/tutorial_05_survival_analysis_plugins.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vanderschaarlab/autoprognosis"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AutoPrognosis - A system for automating the design of predictive modeling pipelines tailored for clinical prognosis."
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/scripts/studies/build_adj_biobank_cvd.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/scripts/studies/build_adj_biobank_diabetes.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/.github/workflows/scripts/release_osx.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/.github/workflows/scripts/release_linux.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vanderschaarlab/autoprognosis/raw/main/docs/arch.png"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Using pip",
        "parent_header": [
          "AutoPrognosis - A system for automating the design of predictive modeling pipelines tailored for clinical prognosis.",
          ":rocket: Installation"
        ],
        "type": "Text_excerpt",
        "value": "The library can be installed from PyPI using\n```bash\n$ pip install autoprognosis\n```\nor from source, using\n```bash\n$ pip install .\n```"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Redis (Optional, but recommended)",
        "parent_header": [
          "AutoPrognosis - A system for automating the design of predictive modeling pipelines tailored for clinical prognosis.",
          ":rocket: Installation"
        ],
        "type": "Text_excerpt",
        "value": "AutoPrognosis can use Redis as a backend to improve the performance and quality of the searches.\n\nFor that, install the redis-server package following the steps described on the [official site](https://redis.io/topics/quickstart).\n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.989198820063915,
      "result": {
        "original_header": ":key: Features",
        "type": "Text_excerpt",
        "value": "__Note__ : The R bindings have been tested using R version 4.2 and Python 3.8.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8835685925759229,
      "result": {
        "original_header": "Environment variables",
        "type": "Text_excerpt",
        "value": "The library can be configured from a set of environment variables. \n_Example_: `export N_OPT_JOBS = 2` to use 2 cores for hyperparam search.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9747356312017933,
      "result": {
        "original_header": "Imputation methods",
        "type": "Text_excerpt",
        "value": "\n```python\nfrom autoprognosis.plugins.imputers import  Imputers\n\nimputer = Imputers().get(<NAME>)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9675680909699274,
      "result": {
        "original_header": "Classification",
        "type": "Text_excerpt",
        "value": "```python\nfrom autoprognosis.plugins.prediction.classifiers import Classifiers\n\nclassifier = Classifiers().get(<NAME>)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9675680909699274,
      "result": {
        "original_header": "Survival Analysis",
        "type": "Text_excerpt",
        "value": "```python\nfrom autoprognosis.plugins.prediction.risk_estimation import RiskEstimation\n\npredictor = RiskEstimation().get(<NAME>)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9379936159606248,
      "result": {
        "original_header": "Explainers",
        "type": "Text_excerpt",
        "value": "```python\nfrom autoprognosis.plugins.explainers import Explainers\n\nexplainer = Explainers().get(<NAME>)\n```\n| Name | Description |\n|--- | --- |\n| **risk_effect_size**  | Feature importance using Cohen's distance between probabilities|\n| **lime**  |[`Lime: Explaining the predictions of any machine learning classifier`](https://github.com/marcotcr/lime)|\n| **symbolic_pursuit**  |[`Symbolic Pursuit`](Learning outside the black-box: at the pursuit of interpretable models)|\n| **shap_permutation_sampler**  |[`SHAP Permutation Sampler`](https://shap.readthedocs.io/en/latest/generated/shap.explainers.Permutation.html)|\n| **kernel_shap**  |[`SHAP KernelExplainer`](https://shap-lrjball.readthedocs.io/en/latest/generated/shap.KernelExplainer.html)|\n| **invase**  |[`INVASE: Instance-wise Variable Selection`](https://github.com/vanderschaarlab/invase)| \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999993683704395,
      "result": {
        "original_header": ":hammer: Test",
        "type": "Text_excerpt",
        "value": "After installing the library, the tests can be executed using `pytest`\n```bash\n$ pip install .[testing]\n$ pytest -vxs -m \"not slow\"\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8995656318777684,
      "result": {
        "original_header": "Imputation methods",
        "type": "Text_excerpt",
        "value": "\n```python\nfrom autoprognosis.plugins.imputers import  Imputers\n\nimputer = Imputers().get(<NAME>)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9030445087403216,
      "result": {
        "original_header": "Classification",
        "type": "Text_excerpt",
        "value": "```python\nfrom autoprognosis.plugins.prediction.classifiers import Classifiers\n\nclassifier = Classifiers().get(<NAME>)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9030445087403216,
      "result": {
        "original_header": "Survival Analysis",
        "type": "Text_excerpt",
        "value": "```python\nfrom autoprognosis.plugins.prediction.risk_estimation import RiskEstimation\n\npredictor = RiskEstimation().get(<NAME>)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.833735710452795,
      "result": {
        "original_header": "Explainers",
        "type": "Text_excerpt",
        "value": "```python\nfrom autoprognosis.plugins.explainers import Explainers\n\nexplainer = Explainers().get(<NAME>)\n```\n| Name | Description |\n|--- | --- |\n| **risk_effect_size**  | Feature importance using Cohen's distance between probabilities|\n| **lime**  |[`Lime: Explaining the predictions of any machine learning classifier`](https://github.com/marcotcr/lime)|\n| **symbolic_pursuit**  |[`Symbolic Pursuit`](Learning outside the black-box: at the pursuit of interpretable models)|\n| **shap_permutation_sampler**  |[`SHAP Permutation Sampler`](https://shap.readthedocs.io/en/latest/generated/shap.explainers.Permutation.html)|\n| **kernel_shap**  |[`SHAP KernelExplainer`](https://shap-lrjball.readthedocs.io/en/latest/generated/shap.KernelExplainer.html)|\n| **invase**  |[`INVASE: Instance-wise Variable Selection`](https://github.com/vanderschaarlab/invase)| \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8842307935026132,
      "result": {
        "original_header": "Uncertainty",
        "type": "Text_excerpt",
        "value": "```python\nfrom autoprognosis.plugins.uncertainty import UncertaintyQuantification\nmodel = UncertaintyQuantification().get(<NAME>)\n```\n| Name | Description |\n|--- | --- |\n| **cohort_explainer**  ||\n| **conformal_prediction**  ||\n| **jackknife**  || \n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "automl, healthcare, interpretability, survival-analysis"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "autoprognosis"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "vanderschaarlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1071661,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 132948,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 12957,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 953,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://xgboost.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://lifelines.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://shap.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://shap-lrjball.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1802.07207"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1806.02920"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2210.12090"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2210.12090},\n  author = {Imrie, Fergus and Cebere, Bogdan and McKinney, Eoin F. and van der Schaar, Mihaela},\n  keywords = {Machine Learning (cs.LG"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2023-03-15T10:58:41Z",
        "date_published": "2023-03-15T10:59:17Z",
        "description": "Changelog:\r\n - update depends",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.21",
        "name": "AutoPrognosis 0.1.21 Release Notes",
        "release_id": 95683158,
        "tag": "v0.1.21",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.21",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/95683158",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/95683158",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.21"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2023-02-14T15:07:30Z",
        "date_published": "2023-02-14T15:29:23Z",
        "description": "Changelog:\r\n - demonstrator fixes\r\n - hyperimpute bugfixing",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.20",
        "name": "AutoPrognosis 0.1.20 Release Notes",
        "release_id": 92379189,
        "tag": "v0.1.20",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.20",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/92379189",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/92379189",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.20"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2023-01-31T21:56:31Z",
        "date_published": "2023-01-31T21:57:55Z",
        "description": "Changelog:\r\n - Serialization stability fixes\r\n - Demontrators bugfixing and improvements\r\n - HyperImpute 0.1.15",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.18",
        "name": "AutoPrognosis 0.1.18 Release Notes",
        "release_id": 90899668,
        "tag": "v0.1.18",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.18",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/90899668",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/90899668",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.18"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2023-01-27T20:13:56Z",
        "date_published": "2023-01-27T20:15:22Z",
        "description": "Changelog:\r\n - Cleanup wwarnings\r\n - Studies stability & improvements",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.17",
        "name": "AutoPrognosis 0.1.17 Release Notes",
        "release_id": 90472811,
        "tag": "v0.1.17",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.17",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/90472811",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/90472811",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.17"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2023-01-26T18:17:59Z",
        "date_published": "2023-01-26T20:15:13Z",
        "description": "Changelog:\r\n  - Improve docs\r\n -  Add multiple metrics for the classifier evaluation \r\n```python\r\n[\r\n     \"aucroc\",\r\n     \"aucprc\",\r\n     \"accuracy\",\r\n     \"f1_score_micro\",\r\n     \"f1_score_macro\",\r\n     \"f1_score_weighted\",\r\n     \"kappa\",\r\n     \"precision_micro\",\r\n     \"precision_macro\",\r\n     \"precision_weighted\",\r\n     \"recall_micro\",\r\n     \"recall_macro\",\r\n     \"recall_weighted\",\r\n     \"mcc\",\r\n ]\r\n```\r\n- Add \"mse\" and \"mae\" metrics for regression.",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.16",
        "name": "AutoPrognosis 0.1.16 Release Notes",
        "release_id": 90348293,
        "tag": "v0.1.16",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.16",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/90348293",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/90348293",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.16"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2023-01-19T10:07:05Z",
        "date_published": "2023-01-19T10:08:07Z",
        "description": "Changelog:\r\n - Optuna 3.1 support: use `JournalRedisStorage`",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.15",
        "name": "AutoPrognosis 0.1.15 Release Notes",
        "release_id": 89522825,
        "tag": "v0.1.15",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.15",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/89522825",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/89522825",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.15"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-12-20T19:29:55Z",
        "date_published": "2022-12-20T20:15:37Z",
        "description": "Hotfix:\r\n - Optimizer random seed issue",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.14",
        "name": "AutoPrognosis 0.1.14 Release Notes",
        "release_id": 86695595,
        "tag": "v0.1.14",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.14",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/86695595",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/86695595",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.14"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-12-20T17:32:14Z",
        "date_published": "2022-12-20T17:37:23Z",
        "description": "Hotfix:\r\n - preprocessing random state issue",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.13",
        "name": "AutoPrognosis 0.1.13 Release Notes",
        "release_id": 86679273,
        "tag": "v0.1.13",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.13",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/86679273",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/86679273",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.13"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-12-17T17:42:18Z",
        "date_published": "2022-12-17T17:43:03Z",
        "description": "Changelog:\r\n - studies bugfixing\r\n - docs improvements",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.12",
        "name": "AutoPrognosis 0.1.12 Release Notes",
        "release_id": 86409828,
        "tag": "v0.1.12",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.12",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/86409828",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/86409828",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-12-16T06:08:31Z",
        "date_published": "2022-12-16T06:09:58Z",
        "description": "Changelog:\r\n - Add readthedocs link https://autoprognosis.readthedocs.io/en/latest/\r\n - Improve docstrings",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.11",
        "name": "AutoPrognosis 0.1.11 Release Notes",
        "release_id": 86268132,
        "tag": "v0.1.11",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.11",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/86268132",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/86268132",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-12-15T06:02:34Z",
        "date_published": "2022-12-15T06:30:09Z",
        "description": "Changelog:\r\n- Add `fit` API call for the studies. Returns a trained model directly.\r\n- Random states bugfixing for studies, explainers etc.\r\n- Add `feature_selection` parameters to the studies.\r\n- sklearn params bugfixing: RF, bagging, adaboost, version 1.2\r\n- update default imputers: [ice, missforest, hyperimpute, mean]\r\n- data_cleanup plugin: drop constant features, high VIF features(multicollinearity). Added by default before the prediction layer.\r\n- Data Encoding bugfixing: handle missing/unseen values.\r\n- update env variables:\r\n   -   `N_LEARNERS_JOBS` : number of CPUs to use by base learners \r\n   - `N_OPT_JOBS`: number of CPUs to use for hyperparam search\r\n   - `REDIS_HOST` : Redis IP address. useful when running in distributed clusters.\r\n   - `REDIS_PORT` : Redis port. \r\n- Update HyperImpute\r\n- Add evaluation tools for multiple seeds.\r\n\r\nTutorials:\r\n - add MICE tutorial\r\n - add categorical imputation tutorial\r\n - add serialization tutorial",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.10",
        "name": "AutoPrognosis 0.1.10 Release Notes",
        "release_id": 86117538,
        "tag": "v0.1.10",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.10",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/86117538",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/86117538",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-11-28T20:53:11Z",
        "date_published": "2022-11-28T21:26:22Z",
        "description": "Changelog(https://github.com/vanderschaarlab/autoprognosis/pull/40):\r\n - fix StackingEnsemble crash(https://github.com/vanderschaarlab/autoprognosis/issues/17) \r\n - Improve errors for not fitted models",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.9",
        "name": "AutoPrognosis 0.1.9 Release Notes",
        "release_id": 84381211,
        "tag": "v0.1.9",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.9",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/84381211",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/84381211",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-11-15T12:53:46Z",
        "date_published": "2022-11-15T12:55:03Z",
        "description": "Changelog:\r\n - feat: add option for stratified CV(thanks @HLasse )\r\n",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.8",
        "name": "AutoPrognosis 0.1.8 Release Notes",
        "release_id": 83120752,
        "tag": "v0.1.8",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/83120752",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/83120752",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-11-08T20:08:53Z",
        "date_published": "2022-11-08T20:19:15Z",
        "description": "Changelog:\r\n - R support: examples + tests\r\n - Bugfixing\r\n - KNearestNeighbor regressor",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.6",
        "name": "AutoPrognosis 0.1.6 Release Notes",
        "release_id": 82436665,
        "tag": "v0.1.6",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/82436665",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/82436665",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-11-06T11:57:26Z",
        "date_published": "2022-11-06T11:58:25Z",
        "description": "XGB 1.7 compatibility\r\nUpdate CI crons.\r\n",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.5",
        "name": "AutoPrognosis 0.1.5 Release Notes",
        "release_id": 82192417,
        "tag": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/82192417",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/82192417",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-10-26T17:56:52Z",
        "date_published": "2022-10-26T17:57:39Z",
        "description": "Changelog:\r\n - HyperBand optimizer\r\n - Regression studies",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.4",
        "name": "AutoPrognosis 0.1.4 Release Notes",
        "release_id": 81093214,
        "tag": "v0.1.4",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/81093214",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/81093214",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-10-23T19:18:41Z",
        "date_published": "2022-10-23T19:19:07Z",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.3",
        "name": "AutoPrognosis 0.1.3 Release Notes",
        "release_id": 80738450,
        "tag": "v0.1.3",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/80738450",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/80738450",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-10-22T13:38:35Z",
        "date_published": "2022-10-22T13:39:02Z",
        "description": "Changelog:\r\n - more tutorials",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.2",
        "name": "AutoPrognosis 0.1.2 Release Notes",
        "release_id": 80701310,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/80701310",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/80701310",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcebere",
          "type": "User"
        },
        "date_created": "2022-10-21T14:11:30Z",
        "date_published": "2022-10-21T14:12:31Z",
        "description": "First release: base models, tests",
        "html_url": "https://github.com/vanderschaarlab/autoprognosis/releases/tag/v0.1.1",
        "name": "AutoPrognosis 0.1.1 Release Notes",
        "release_id": 80616119,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/80616119",
        "value": "https://api.github.com/repos/vanderschaarlab/autoprognosis/releases/80616119",
        "zipball_url": "https://api.github.com/repos/vanderschaarlab/autoprognosis/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:46:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 114
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": ":boom: Sample Usage",
        "parent_header": [
          "AutoPrognosis - A system for automating the design of predictive modeling pipelines tailored for clinical prognosis."
        ],
        "type": "Text_excerpt",
        "value": "__Advanced Python tutorials__ can be found in the [Python tutorials section](#high_brightness-tutorials).\n\n\n__R examples__ can be found in the [R tutorials section](https://github.com/vanderschaarlab/autoprognosis/tree/main/tutorials/bindings/R).\n\nList the available classifiers\n```python\nfrom autoprognosis.plugins.prediction.classifiers import Classifiers\nprint(Classifiers().list_available())\n```\n\nCreate a study for classifiers\n```python\nfrom sklearn.datasets import load_breast_cancer\n\nfrom autoprognosis.studies.classifiers import ClassifierStudy\nfrom autoprognosis.utils.serialization import load_model_from_file\nfrom autoprognosis.utils.tester import evaluate_estimator\n\n\nX, Y = load_breast_cancer(return_X_y=True, as_frame=True)\n\ndf = X.copy()\ndf[\"target\"] = Y\n\nstudy_name = \"example\"\n\nstudy = ClassifierStudy(\n    study_name=study_name,\n    dataset=df,  # pandas DataFrame\n    target=\"target\",  # the label column in the dataset\n)\nmodel = study.fit()\n\n# Predict the probabilities of each class using the model\nmodel.predict_proba(X)\n```\n\n\n__(Advanced)__ Customize the study for classifiers\n```python\nfrom pathlib import Path\n\nfrom sklearn.datasets import load_breast_cancer\n\nfrom autoprognosis.studies.classifiers import ClassifierStudy\nfrom autoprognosis.utils.serialization import load_model_from_file\nfrom autoprognosis.utils.tester import evaluate_estimator\n\n\nX, Y = load_breast_cancer(return_X_y=True, as_frame=True)\n\ndf = X.copy()\ndf[\"target\"] = Y\n\nworkspace = Path(\"workspace\")\nstudy_name = \"example\"\n\nstudy = ClassifierStudy(\n    study_name=study_name,\n    dataset=df,  # pandas DataFrame\n    target=\"target\",  # the label column in the dataset\n    num_iter=100,  # how many trials to do for each candidate\n    timeout=60,  # seconds\n    classifiers=[\"logistic_regression\", \"lda\", \"qda\"],\n    workspace=workspace,\n)\n\nstudy.run()\n\noutput = workspace / study_name / \"model.p\"\nmodel = load_model_from_file(output)\n\n# <model> contains the optimal architecture, but the model is not trained yet. You need to call fit() to use it.\n# This way, we can further benchmark the selected model on the training set.\nmetrics = evaluate_estimator(model, X, Y)\n\nprint(f\"model {model.name()} -> {metrics['str']}\")\n\n# Train the model\nmodel.fit(X, Y)\n\n# Predict the probabilities of each class using the model\nmodel.predict_proba(X)\n```\n\nList the available regressors\n```python\nfrom autoprognosis.plugins.prediction.regression import Regression\nprint(Regression().list_available())\n```\n\nCreate a Regression study\n```python\n# third party\nimport pandas as pd\n\n# autoprognosis absolute\nfrom autoprognosis.utils.serialization import load_model_from_file\nfrom autoprognosis.utils.tester import evaluate_regression\nfrom autoprognosis.studies.regression import RegressionStudy\n\n# Load dataset\ndf = pd.read_csv(\n    \"https://archive.ics.uci.edu/ml/machine-learning-databases/00291/airfoil_self_noise.dat\",\n    header=None,\n    sep=\"\\\\t\",\n)\nlast_col = df.columns[-1]\ny = df[last_col]\nX = df.drop(columns=[last_col])\n\ndf = X.copy()\ndf[\"target\"] = y\n\n# Search the model\nstudy_name=\"regression_example\"\nstudy = RegressionStudy(\n    study_name=study_name,\n    dataset=df,  # pandas DataFrame\n    target=\"target\",  # the label column in the dataset\n)\nmodel = study.fit()\n\n# Predict using the model\nmodel.predict(X)\n```\n\n__Advanced__ Customize the Regression study\n```python\n# stdlib\nfrom pathlib import Path\n\n# third party\nimport pandas as pd\n\n# autoprognosis absolute\nfrom autoprognosis.utils.serialization import load_model_from_file\nfrom autoprognosis.utils.tester import evaluate_regression\nfrom autoprognosis.studies.regression import RegressionStudy\n\n# Load dataset\ndf = pd.read_csv(\n    \"https://archive.ics.uci.edu/ml/machine-learning-databases/00291/airfoil_self_noise.dat\",\n    header=None,\n    sep=\"\\\\t\",\n)\nlast_col = df.columns[-1]\ny = df[last_col]\nX = df.drop(columns=[last_col])\n\ndf = X.copy()\ndf[\"target\"] = y\n\n# Search the model\nworkspace = Path(\"workspace\")\nworkspace.mkdir(parents=True, exist_ok=True)\n\nstudy_name=\"regression_example\"\nstudy = RegressionStudy(\n    study_name=study_name,\n    dataset=df,  # pandas DataFrame\n    target=\"target\",  # the label column in the dataset\n    num_iter=10,  # how many trials to do for each candidate. Default: 50\n    num_study_iter=2,  # how many outer iterations to do. Default: 5\n    timeout=50,  # timeout for optimization for each classfier. Default: 600 seconds\n    regressors=[\"linear_regression\", \"xgboost_regressor\"],\n    workspace=workspace,\n)\n\nstudy.run()\n\n# Test the model\noutput = workspace / study_name / \"model.p\"\n\nmodel = load_model_from_file(output)\n# <model> contains the optimal architecture, but the model is not trained yet. You need to call fit() to use it.\n# This way, we can further benchmark the selected model on the training set.\n\nmetrics = evaluate_regression(model, X, y)\n\nprint(f\"Model {model.name()} score: {metrics['str']}\")\n\n# Train the model\nmodel.fit(X, y)\n\n\n# Predict using the model\nmodel.predict(X)\n```\n\nList available survival analysis estimators\n```python\nfrom autoprognosis.plugins.prediction.risk_estimation import RiskEstimation\nprint(RiskEstimation().list_available())\n```\nCreate a Survival analysis study\n```python\n# third party\nimport numpy as np\nfrom pycox import datasets\n\n# autoprognosis absolute\nfrom autoprognosis.studies.risk_estimation import RiskEstimationStudy\nfrom autoprognosis.utils.serialization import load_model_from_file\nfrom autoprognosis.utils.tester import evaluate_survival_estimator\n\ndf = datasets.gbsg.read_df()\ndf = df[df[\"duration\"] > 0]\n\nX = df.drop(columns = [\"duration\"])\nT = df[\"duration\"]\nY = df[\"event\"]\n\neval_time_horizons = np.linspace(T.min(), T.max(), 5)[1:-1]\n\nstudy_name = \"example_risks\"\n\nstudy = RiskEstimationStudy(\n    study_name=study_name,\n    dataset=df,\n    target=\"event\",\n    time_to_event=\"duration\",\n    time_horizons=eval_time_horizons,\n)\n\nmodel = study.fit()\n\n# Predict using the model\nmodel.predict(X, eval_time_horizons)\n```\n\n__Advanced__ Customize the Survival analysis study\n```python\n# stdlib\nimport os\nfrom pathlib import Path\n\n# third party\nimport numpy as np\nfrom pycox import datasets\n\n# autoprognosis absolute\nfrom autoprognosis.studies.risk_estimation import RiskEstimationStudy\nfrom autoprognosis.utils.serialization import load_model_from_file\nfrom autoprognosis.utils.tester import evaluate_survival_estimator\n\ndf = datasets.gbsg.read_df()\ndf = df[df[\"duration\"] > 0]\n\nX = df.drop(columns = [\"duration\"])\nT = df[\"duration\"]\nY = df[\"event\"]\n\neval_time_horizons = np.linspace(T.min(), T.max(), 5)[1:-1]\n\nworkspace = Path(\"workspace\")\nstudy_name = \"example_risks\"\n\nstudy = RiskEstimationStudy(\n    study_name=study_name,\n    dataset=df,\n    target=\"event\",\n    time_to_event=\"duration\",\n    time_horizons=eval_time_horizons,\n    num_iter=10,\n    num_study_iter=1,\n    timeout=10,\n    risk_estimators=[\"cox_ph\", \"survival_xgboost\"],\n    score_threshold=0.5,\n    workspace=workspace,\n)\n\nstudy.run()\n\noutput = workspace / study_name / \"model.p\"\n\nmodel = load_model_from_file(output)\n# <model> contains the optimal architecture, but the model is not trained yet. You need to call fit() to use it.\n# This way, we can further benchmark the selected model on the training set.\n\nmetrics = evaluate_survival_estimator(model, X, T, Y, eval_time_horizons)\n\nprint(f\"Model {model.name()} score: {metrics['str']}\")\n\n# Train the model\nmodel.fit(X, T, Y)\n\n# Predict using the model\nmodel.predict(X, eval_time_horizons)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Plugins",
        "parent_header": [
          "AutoPrognosis - A system for automating the design of predictive modeling pipelines tailored for clinical prognosis.",
          ":high_brightness: Tutorials"
        ],
        "type": "Text_excerpt",
        "value": "\n- [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1QO7K3JqW8l4pgVSLxjVezTu5IfD9yHB-?usp=sharing) [ Imputation](tutorials/plugins/tutorial_00_imputation_plugins.ipynb)\n- [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1WQGZXQkQs0Wg5stB9fk-RvYey35ADIZu?usp=sharing)[ Preprocessing](tutorials/plugins/tutorial_01_preprocessing_plugins.ipynb)\n- [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1WTzO_2hqaEOvvATHPSIcW220xc1WaJlC?usp=sharing)[ Classification](tutorials/plugins/tutorial_02_classification_plugins.ipynb)\n- [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/17bLtKUjN8ilHw4Cm7-53kiC0vCJO_pVb?usp=sharing)[ Pipelines](tutorials/plugins/tutorial_03_pipelines.ipynb)\n- [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1K0yVwm4jQrXRbMKJ-em7tTYgHXWtoK5c?usp=sharing)[ Interpretability](tutorials/plugins/tutorial_04_interpretability.ipynb)\n- [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1bY4CbiqMe2uoqeUu2d49aIdYRbtP156X?usp=sharing)[ Survival Analysis](tutorials/plugins/tutorial_05_survival_analysis_plugins.ipynb)\n- [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1UK6WbsviT5nOQ_BAHSFYIjhpKtwppnUU?usp=sharing)[ Regression](tutorials/plugins/tutorial_06_regression_plugins.ipynb)\n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "AutoML",
        "parent_header": [
          "AutoPrognosis - A system for automating the design of predictive modeling pipelines tailored for clinical prognosis.",
          ":high_brightness: Tutorials"
        ],
        "type": "Text_excerpt",
        "value": "\n - [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1-lPuQAtjHESl32ahFQYsFl8ujAnDWxEJ?usp=sharing)[ Classification tasks](tutorials/automl/tutorial_00_classification_study.ipynb)\n - [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/16UDaA3F5JGw_YVY8XlYqWjfxcUV1OHJo?usp=sharing)[ Classification tasks with imputation](tutorials/automl/tutorial_01_automl_classification_with_imputation.ipynb)\n - [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1DtZCqebhaYdKB3ci5dr3hT0KvZPaTUOi?usp=sharing)[ Survival analysis tasks](tutorials/automl/tutorial_02_survival_analysis_study.ipynb)\n - [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1sFVnnxjRMCNVIn-Ikc--Ja44U0Ll4joY?usp=sharing)[ Survival analysis tasks with imputation](tutorials/automl/tutorial_03_automl_survival_analysis_with_imputation.ipynb)\n- [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1HLhWI-tRZn4e9ijQ6iEIuppuDszgWkCC?usp=sharing)[ Regression tasks](tutorials/automl/tutorial_04_regression.ipynb)\n- [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1eHw1l79_m3vq9y-0WpllCMBSD7DQajWO?usp=sharing)[ Classifiers with explainers](tutorials/automl/tutorial_05_classification_with_explainers.ipynb)\n- [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1dm3cRmo-jD6x7V5WePciDpcauqtUt6lS?usp=sharing)[ Multiple imputation example](tutorials/automl/tutorial_06_automl_multiple_imputation_example.ipynb)\n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Building a demonstrator",
        "parent_header": [
          "AutoPrognosis - A system for automating the design of predictive modeling pipelines tailored for clinical prognosis.",
          ":high_brightness: Tutorials"
        ],
        "type": "Text_excerpt",
        "value": "\n - [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1lqbElEVJa2Q0JDsXPgb8K_QUTDcZvUQq?usp=sharing)[ Classification demonstrator](tutorials/demonstrators/tutorial_00_build_a_demonstrator_classification.ipynb)\n - [![Test In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1ZwjD9RkosCtboyblH4C8sQV1DuGY1H2X?usp=sharing)[ Survival analysis demonstrator](tutorials/demonstrators/tutorial_01_build_a_demonstrator_survival_analysis.ipynb)\n"
      },
      "source": "https://raw.githubusercontent.com/vanderschaarlab/AutoPrognosis/main/README.md",
      "technique": "header_analysis"
    }
  ]
}