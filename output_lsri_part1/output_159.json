{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "EPIK: Evolutionary Placement with Informative K-mers"
        ],
        "type": "Text_excerpt",
        "value": "[1] Romashchenko, N., Linard, B., Pardi, F., & Rivals, E. (2023). EPIK: precise and scalable evolutionary placement with informative k-mers. Bioinformatics, 39(12), btad692. https://doi.org/10.1093/bioinformatics/btad692\n\n[2] Zapletal, A., H\u00f6hler, D., Sinz, C., & Stamatakis, A. (2021). The SoftWipe tool and benchmark for assessing coding standards adherence of scientific software. Scientific reports, 11(1), 10015. https://doi.org/10.1038/s41598-021-89495-8\n"
      },
      "source": "https://raw.githubusercontent.com/phylo42/EPIK/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phylo42/EPIK"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-20T15:12:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-17T09:58:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Alignment-free phylogenetic placement"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9863599082211398,
      "result": {
        "original_header": "EPIK: Evolutionary Placement with Informative K-mers",
        "type": "Text_excerpt",
        "value": "**Please cite:**  [![doi](https://img.shields.io/static/v1?label=doi&message=10.1093/bioinformatics/btad692&color=blue)](https://doi.org/10.1093/bioinformatics/btad692) [1]\n        \nEPIK is a program for rapid alignment-free phylogenetic placement, the successor of [RAPPAS](https://github.com/phylo42/RAPPAS).\n \n"
      },
      "source": "https://raw.githubusercontent.com/phylo42/EPIK/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phylo42/EPIK/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phylo42/EPIK/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "phylo42/EPIK"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EPIK: Evolutionary Placement with Informative K-mers"
      },
      "source": "https://raw.githubusercontent.com/phylo42/EPIK/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phylo42/EPIK/main/build.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation via Bioconda",
        "parent_header": [
          "EPIK: Evolutionary Placement with Informative K-mers"
        ],
        "type": "Text_excerpt",
        "value": "It is advised to install the package in a new environment, because our C++ dependencies are strict and may clash with other packages (requiring libboost in particular).\nWe also recommend to use `mamba, which is faster in solving environment dependencies.\n```\nconda create -n epik\nconda activate epik\nconda config --set channel_priority strict\n\n# note that we install both ipk (database creation) and epik (phylogenetic placement)\nmamba install ipk epik\n```\n\nRapid test:\n```\n# get some test alignment and tree\nwget https://github.com/phylo42/IPK/blob/main/tests/data/D652/reference.fasta\nwget https://github.com/phylo42/IPK/blob/main/tests/data/D652/tree.rooted.newick\n\n# activate conda environment\nconda activate epik\n\n# build database with IPK : using 1 CPU and default phylogenetic model parameters\n# a better approach would be to use appropriate parameters, see documentation\nipk.py build --refalign reference.fasta --reftree tree.rooted.newick --states nucl --workdir . --model GTR\n\n# place with EPIK\nepik.py place -i DB.ipk -s nucl -o . reference.fasta\n\n# jplace results\ncat placements_reference.fasta.jplace\n\n# you can do post-analyses with the excellent 'gappa' package\n# (available in bioconda too, see https://github.com/lczech/gappa)\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/phylo42/EPIK/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Clone and build",
        "parent_header": [
          "EPIK: Evolutionary Placement with Informative K-mers",
          "Installation via compilation"
        ],
        "type": "Text_excerpt",
        "value": "```\ngit clone --recursive https://github.com/phylo42/EPIK epik\ncd epik && mkdir -p bin && cd bin\ncmake ..\nmake -j4\n```\n"
      },
      "source": "https://raw.githubusercontent.com/phylo42/EPIK/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "EPIK: Evolutionary Placement with Informative K-mers",
          "Installation via compilation"
        ],
        "type": "Text_excerpt",
        "value": "You can use `epik.py` from the directory where it was built or install it system-wide or for a single user to make `epik.py` visible from any directory.\n\nFor a system-wide installation (requires elevated permissions):\n```\nsudo cmake --install .\n```\n\nAlternatively, to install for the current user, choose a directory where you want to install the tool. For instance, you might choose `/home/$USER/opt` or any other directory that you prefer. Replace `DIRECTORY` in the commands below with your chosen directory path:\n\n```\ncmake --install . --prefix DIRECTORY\nexport PATH=DIRECTORY/bin:$PATH\n```\nRemember to export the `DIRECTORY/bin` to your `PATH`. You can do this manually each time or add the export command to your shell initialization scripts (e.g., `.bashrc`).\n\n"
      },
      "source": "https://raw.githubusercontent.com/phylo42/EPIK/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9833116296765385,
      "result": {
        "original_header": "EPIK: Evolutionary Placement with Informative K-mers",
        "type": "Text_excerpt",
        "value": "\n[![build](https://github.com/phylo42/EPIK/actions/workflows/build.yml/badge.svg)](https://github.com/phylo42/EPIK/actions/workflows/build.yml)\n<a>\n<img src=\"https://img.shields.io/badge/softwipe-7.6-green\" />\n</a> \n"
      },
      "source": "https://raw.githubusercontent.com/phylo42/EPIK/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phylo42/EPIK/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 - 2020 Nikolai Romashchenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/phylo42/EPIK/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EPIK"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "phylo42"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 46605,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 19407,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 6388,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 195,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phylo42/EPIK/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nromashchenko",
          "type": "User"
        },
        "date_created": "2023-09-29T13:13:17Z",
        "date_published": "2023-09-29T13:22:38Z",
        "description": "The pre-publication release intended to be the reference version for the further improvements. Previous releases are left mostly for history and are not supposed to be used.\r\n\r\n- Minimized the dependency code with IPK (I2L and other repos)\r\n- Supported partial loading of databases with phylo-k-mer filtering (--mu, --max-ram)\r\n- Reintroduced parallelism (--threads)\r\n- Reworked LWR formula so that it is normalized over all branches of the tree\r\n- Various improvements and fixes\r\n- Removed the old changelog since it was related to the functionality that had migrated to IPK",
        "html_url": "https://github.com/phylo42/EPIK/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 123123459,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/phylo42/EPIK/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phylo42/EPIK/releases/123123459",
        "value": "https://api.github.com/repos/phylo42/EPIK/releases/123123459",
        "zipball_url": "https://api.github.com/repos/phylo42/EPIK/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nromashchenko",
          "type": "User"
        },
        "date_created": "2020-10-19T11:43:02Z",
        "date_published": "2020-10-19T13:54:00Z",
        "html_url": "https://github.com/phylo42/EPIK/releases/tag/v0.1.3a",
        "name": "v0.1.3a",
        "release_id": 32757479,
        "tag": "v0.1.3a",
        "tarball_url": "https://api.github.com/repos/phylo42/EPIK/tarball/v0.1.3a",
        "type": "Release",
        "url": "https://api.github.com/repos/phylo42/EPIK/releases/32757479",
        "value": "https://api.github.com/repos/phylo42/EPIK/releases/32757479",
        "zipball_url": "https://api.github.com/repos/phylo42/EPIK/zipball/v0.1.3a"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nromashchenko",
          "type": "User"
        },
        "date_created": "2020-01-14T10:03:28Z",
        "date_published": "2020-10-19T13:54:19Z",
        "html_url": "https://github.com/phylo42/EPIK/releases/tag/v0.1.3",
        "name": "v0.1.3",
        "release_id": 32757500,
        "tag": "v0.1.3",
        "tarball_url": "https://api.github.com/repos/phylo42/EPIK/tarball/v0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/phylo42/EPIK/releases/32757500",
        "value": "https://api.github.com/repos/phylo42/EPIK/releases/32757500",
        "zipball_url": "https://api.github.com/repos/phylo42/EPIK/zipball/v0.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nromashchenko",
          "type": "User"
        },
        "date_created": "2019-11-19T15:23:59Z",
        "date_published": "2020-10-19T13:54:39Z",
        "html_url": "https://github.com/phylo42/EPIK/releases/tag/v0.1.2",
        "name": "v0.1.2",
        "release_id": 32757516,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/phylo42/EPIK/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/phylo42/EPIK/releases/32757516",
        "value": "https://api.github.com/repos/phylo42/EPIK/releases/32757516",
        "zipball_url": "https://api.github.com/repos/phylo42/EPIK/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nromashchenko",
          "type": "User"
        },
        "date_created": "2019-06-18T08:54:22Z",
        "date_published": "2020-10-19T13:54:56Z",
        "html_url": "https://github.com/phylo42/EPIK/releases/tag/v0.1.1",
        "name": "v0.1.1",
        "release_id": 32757537,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/phylo42/EPIK/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phylo42/EPIK/releases/32757537",
        "value": "https://api.github.com/repos/phylo42/EPIK/releases/32757537",
        "zipball_url": "https://api.github.com/repos/phylo42/EPIK/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nromashchenko",
          "type": "User"
        },
        "date_created": "2019-06-05T15:27:23Z",
        "date_published": "2020-10-19T13:55:16Z",
        "html_url": "https://github.com/phylo42/EPIK/releases/tag/v0.1.0",
        "name": "v0.1.0",
        "release_id": 32757566,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/phylo42/EPIK/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phylo42/EPIK/releases/32757566",
        "value": "https://api.github.com/repos/phylo42/EPIK/releases/32757566",
        "zipball_url": "https://api.github.com/repos/phylo42/EPIK/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "EPIK: Evolutionary Placement with Informative K-mers",
          "Installation via compilation"
        ],
        "type": "Text_excerpt",
        "value": "- Boost Libraries >=1.6\n- CMake >= 3.10\n- GCC compiler must support c++17\n- zlib\n- rapidjson\n- click\n\nOn Debian-like systems they can be installed with:\n```\nsudo apt install build-essential cmake libboost-dev libboost-serialization-dev libboost-filesystem-dev libboost-iostreams-dev libboost-program-options-dev zlib1g-dev rapidjson-dev libquadmath0 python3-pip\npip3 install click\n```\n"
      },
      "source": "https://raw.githubusercontent.com/phylo42/EPIK/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:35:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Phylogenetic placement",
        "parent_header": [
          "EPIK: Evolutionary Placement with Informative K-mers",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To place queries to a phylogenetic tree, you need to first preprocess it with IPK and make a phylo-k-mer database (see [here](https://github.com/phylo42/IPK) for detail). Queries should be in non-compressed fasta format. An example of placement command (see below for possible parameters values):\n```\nepik.py place -i DATABASE -s [nucl|amino] -o OUTPUT_DIR INPUT_FASTA\n```\nIf EPIK is not installed, run `./epik.py` from the EPIK directory instead. \n"
      },
      "source": "https://raw.githubusercontent.com/phylo42/EPIK/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameters",
        "parent_header": [
          "EPIK: Evolutionary Placement with Informative K-mers",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "| Option    | Meaning                                                                                                                                                                 | Default |\n|-----------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------|\n| -i        | The path to the phylo-k-mer database to use for placement.                                                                                                              |         |\n| -s        | States, `nucl` for DNA and `amino` for proteins                                                                                                                         | nucl    |\n| --omega   | The user-defined threshold. Can be set higher than the one used when database was created. (If you are not sure, ignore this parameter.)                                | 1.5     |\n| --mu      | The proportion of the database to keep when filtering. Mutually exclusive with `--max-ram`. Should be a value in (0.0, 1.0]                                             | 1.0     |\n| --max-ram | The maximum amount of memory used to keep the database content. Mutually exclusive with `--mu`. Sets an approximate limit to EPIK's RAM consumption (i.e. the given limit might be exceeded but EPIK will consider it). Examples: 512, 256K, 42M, 4.2G.                    |         |\n| --threads | Number of parallel threads used for placement. EPIK should be compiled with OpenMP support enabled, i.e. `EPIK_OMP=ON`. (If you compile as we recommend, it is enabled) | 1       |\n\nAlso, see `epik.py place --help` for information.\n\n"
      },
      "source": "https://raw.githubusercontent.com/phylo42/EPIK/main/README.md",
      "technique": "header_analysis"
    }
  ]
}