{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MannLabs/alphamap"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to contribute\n\n## How to get started\n\nBefore anything else, please install the git hooks that run automatic scripts during each commit and merge to strip the notebooks of superfluous metadata (and avoid merge conflicts). After cloning the repository, run the following command inside it:\n```\nnbdev_install_git_hooks\n```\n\n## Did you find a bug?\n\n* Ensure the bug was not already reported by searching on GitHub under Issues.\n* If you're unable to find an open issue addressing the problem, open a new one. Be sure to include a title and clear description, as much relevant information as possible, and a code sample or an executable test case demonstrating the expected behavior that is not occurring.\n* Be sure to add the complete error messages.\n\n#### Did you write a patch that fixes a bug?\n\n* Open a new GitHub pull request with the patch.\n* Ensure that your PR includes a test that fails without your patch, and pass with it.\n* Ensure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.\n\n## PR submission guidelines\n\n* Keep each PR focused. While it's more convenient, do not combine several unrelated fixes together. Create as many branches as needing to keep each PR focused.\n* Do not mix style changes/fixes with \"functional\" changes. It's very difficult to review such PRs and it most likely get rejected.\n* Do not add/remove vertical whitespace. Preserve the original style of the file you edit as much as you can.\n* Do not turn an already submitted PR into your development playground. If after you submitted PR, you discovered that more work is needed - close the PR, do the required work and then submit a new PR. Otherwise each of your commits requires attention from maintainers of the project.\n* If, however, you submitted a PR and received a request for changes, you should proceed with commits inside that PR, so that the maintainer can see the incremental fixes and won't need to review the whole PR again. In the exception case where you realize it'll take many many commits to complete the requests, then it's probably best to close the PR, do the work and then submit it again. Use common sense where you'd choose one way over another.\n\n## Do you want to contribute to the documentation?\n\n* Docs are automatically created from the notebooks in the nbs folder.\n\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-27T10:23:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-25T08:02:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An open-source Python package for the visual annotation of proteomics data with sequence specific knowledge."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9035660087891333,
      "result": {
        "original_header": "AlphaMap",
        "type": "Text_excerpt",
        "value": "> A python-based library that enables the exploration of proteomic datasets on the peptide level. \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9993725314051027,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "AlphaMap is a tool for peptide level MS data exploration. You can load and inspect MS data analyzed by [AlphaPept](https://github.com/MannLabs/alphapept), DIA-NN, MaxQuant, Spectronaut or FragPipe. Uploaded data is processed and formatted for visual inspection of the sequence coverage of any selected protein and its identified post-translational modifications (PTMs). UniProt information is available to directly annotate sequence regions of interest such as protein domains, secondary structures, sequence variants, known PTMs, etc. Additionally, users can select proteases to further evaluate the distribution of proteolytic cleavage sites across a protein sequence. The functionality of AlphaMap can be accessed via an intuitive graphical user interface or - more flexibly - as a Python package that allows its integration into common analysis workflows for data visualization.  \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9566516921520778,
      "result": {
        "original_header": "Test data",
        "type": "Text_excerpt",
        "value": "AlphaMap has direct data import options for AlphaPept, DIA-NN, MaxQuant, Spectronaut and FragPipe.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8612280251841352,
      "result": {
        "original_header": "AlphaPept",
        "type": "Text_excerpt",
        "value": "AlphaMap takes the *results.csv* file from AlphaPept as input format. An example is available for [download here](https://github.com/MannLabs/alphamap/releases/download/v0.0.210730-alpha/test_alphapept_input.csv).\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8856452580169124,
      "result": {
        "original_header": "DIA-NN",
        "type": "Text_excerpt",
        "value": "AlphaMap takes the peptide-level output .tsv file from DIA-NN as input format. An example is available for [download here](https://github.com/MannLabs/alphamap/releases/download/v0.0.210730-alpha/test_diann_input.tsv).\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8922673852589518,
      "result": {
        "original_header": "Spectronaut",
        "type": "Text_excerpt",
        "value": "To ensure proper formatting of the Spectronaut output, an export scheme is available for [download here](https://github.com/MannLabs/alphamap/blob/master/alphamap/data/spectronaut_export_scheme.rs). \nA reduced example file is also available for [download here](https://github.com/MannLabs/alphamap/releases/download/v0.0.210622-alpha/test_spectronaut_input.tsv). \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9440789915426226,
      "result": {
        "original_header": "FragPipe",
        "type": "Text_excerpt",
        "value": "There are two options to visualize data analyzed by FragPipe:\n1) Upload individual **\"peptide.tsv\"** files for single MS runs. A reduced example file is available for [download here](https://github.com/MannLabs/alphamap/releases/download/0.1.3/test_fragpipe_input.tsv). \n2) Upload the **\"combined_peptide.tsv\"** file with the joint information about peptides identified in all runs (there is an option to select the experiment(s)). Be aware that the combined_peptide.tsv does not provide information about PTM localization. PTMs are therefore not shown for this option. A reduced example file is available for [download here](https://github.com/MannLabs/alphamap/releases/download/0.1.3/combined_peptide.txt).\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MannLabs/alphamap/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MannLabs/alphamap/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/Dashboard.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/Dashboard.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/Workflow.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/Workflow.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/Uniprot_preprocessing.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/Uniprot_preprocessing.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/Uniprot_integration.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/Uniprot_integration.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/proteolytic_cleavage.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/proteolytic_cleavage.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/SequencePlot.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/SequencePlot.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/Preprocessing.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/Preprocessing.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/Importing.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/Importing.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/index.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/index.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/organisms_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/nbs/organisms_data.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MannLabs/alphamap/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MannLabs/alphamap"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AlphaMap"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/docker-compose.yml",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/misc/one_click_macos/create_installer_macos.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/misc/one_click_windows/create_installer_windows.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/alphamap/js/uglyfy.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "AlphaMap"
        ],
        "type": "Text_excerpt",
        "value": "AlphaMap can be installed and used on Windows and MacOS.\nThere are three different types of installation possible:\n\n* [**One-click GUI installer:**](#one-click-gui) Choose this installation if you only want the GUI and/or keep things as simple as possible.\n* [**Pip installer:**](#pip) Choose this installation if you want to use AlphaMap as a Python package in an existing Python 3.8 environment (e.g. a Jupyter notebook). If needed, the GUI can be installed with pip as well.\n* [**Developer installer:**](#developer) Choose this installation if you are familiar with CLI tools, [conda](https://docs.conda.io/en/latest/) and Python. This installation allows access to all available features of AlphaMap and even allows to modify its source code directly.\n\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "One-click GUI",
        "parent_header": [
          "AlphaMap",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The GUI of AlphaMap is a completely stand-alone tool that requires no knowledge of Python. Click on one of the links below to download the latest release for:\n\n* [**Windows**](https://github.com/MannLabs/alphamap/releases/latest/download/alphamap_installer_windows.exe)\n* [**MacOS**](https://github.com/MannLabs/alphamap/releases/latest/download/alphamap_gui_installer_macos.pkg)\n\n***IMPORTANT: Please refer to the [GUI manual](alphamap/data/alphamap_tutorial.pdf) for detailed instructions on the installation, troubleshooting and usage of the stand-alone AlphaMap GUI.*** \n\n***IMPORTANT***: The one-click-installers on macOS and Windows require **at least macOS Catalina (10.15) or higher** and **Windows 10** respectively. For Windows, a system update might be necessary in case older versions do not work. To prevent installation errors on **Windows**, we recommend **uninstalling the previous AlphaMap version before installing a new one**.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pip",
        "parent_header": [
          "AlphaMap",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "AlphaMap can be installed in an existing Python 3.8 environment with a single `bash` command. *This `bash` command can also be run directly from within a Jupyter notebook by prepending it with a `!`*.\n\n```bash\npip install alphamap[stable]\n```\nThe [stable] tag ensures you get the latest stable release with fixed dependencies. However, it can be omitted if you prefer more flexible dependency versions:\n\n```bash\npip install alphamap\n```\n\nWhen a new version of AlphaMap becomes available, the old version can easily be upgraded by running e.g. the command again with an additional `--upgrade` flag:\n\n```bash\npip install --upgrade alphamap[stable] \n```\n\nNOTE: When installing with `pip`, UniProt information is not included. Upon first usage of a specific Organism, its information will be automatically downloaded from UniProt.\n\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Developer",
        "parent_header": [
          "AlphaMap",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "AlphaMap can also be installed in editable (i.e. developer) mode with a few `bash` commands. This allows to fully customize the software and even modify the source code to your specific needs. When an editable Python package is installed, its source code is stored in a transparent location of your choice. While optional, it is advised to first (create and) navigate to e.g. a general software folder:\n\n```bash\nmkdir ~/folder/where/to/install/software\ncd ~/folder/where/to/install/software\n```\n\nNext, download the AlphaMap repository from GitHub either directly or with a `git` command. This creates a new AlphaMap subfolder in your current directory.\n\n```bash\ngit clone https://github.com/MannLabs/alphamap.git\ncd alphamap\n```\n\nFor any Python package, it is highly recommended to use a [conda virtual environment](https://docs.conda.io/en/latest/). AlphaMap can either be installed in a new conda environment or in an already existing environment. *Note that dependency conflicts can occur with already existing packages in the latter case*! Once a conda environment is activated, AlphaMap and all its [dependencies](requirements) need to be installed.\n\n```bash\nconda create -n alphamap python=3.8 -y\nconda activate alphamap\npip install -e \".[stable]\"\n```\n\n* By using the editable flag `-e`, all modifications to the AlphaMap [source code folder](alphamap) are directly reflected when running AlphaMap. Note that the AlphaMap folder cannot be moved and/or renamed if an editable version is installed.\n\n* The [stable] tag ensures you get the latest stable release with fixed dependencies. However, it can be omitted if you prefer more flexible dependency versions.\n\n* When using Jupyter notebooks and multiple conda environments direcly from the terminal, it is recommended to `conda install nb_conda_kernels` in the conda base environment. Hereafter, running a `jupyter notebook` from the conda base environment should have a `python [conda env: alphamap]` kernel available, in addition to all other conda kernels in which the command `conda install ipykernel` was run.\n\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8517252439249625,
      "result": {
        "original_header": "AlphaPept",
        "type": "Text_excerpt",
        "value": "AlphaMap takes the *results.csv* file from AlphaPept as input format. An example is available for [download here](https://github.com/MannLabs/alphamap/releases/download/v0.0.210730-alpha/test_alphapept_input.csv).\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8509668246295778,
      "result": {
        "original_header": "MaxQuant",
        "type": "Text_excerpt",
        "value": "AlphaMap takes the *evidence.txt* file from MaxQuant as input format. A reduced example file is available for [download here](https://github.com/MannLabs/alphamap/releases/download/v0.0.210622-alpha/test_maxquant_input.txt).\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MannLabs/alphamap/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gui, mass-spectrometry, peptide-level, proteomics, python, visualization"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "AlphaMap"
        ],
        "type": "Text_excerpt",
        "value": "AlphaMap was developed by the [Mann Labs at the Max Planck Institute of Biochemistry](https://www.biochem.mpg.de/mann) and is freely available with an [Apache License](LICENSE).\n\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "alphamap"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "MannLabs"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 8360741,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 6836749,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 180414,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2887,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 2090,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Inno Setup",
        "size": 2019,
        "type": "Programming_language",
        "value": "Inno Setup"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 1596,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 1027,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 393,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-07-25T08:01:08Z",
        "date_published": "2024-07-25T08:03:25Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.12",
        "name": "Release version 0.1.12",
        "release_id": 167078410,
        "tag": "0.1.12",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.12",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/167078410",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/167078410",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-07-22T19:50:09Z",
        "date_published": "2024-07-24T08:26:04Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.11",
        "name": "Release version 0.1.11",
        "release_id": 166853292,
        "tag": "0.1.11",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.11",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/166853292",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/166853292",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-03-17T12:21:18Z",
        "date_published": "2022-03-17T12:22:41Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.10",
        "name": "Release version 0.1.10",
        "release_id": 62096732,
        "tag": "0.1.10",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.10",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/62096732",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/62096732",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-02-28T17:44:24Z",
        "date_published": "2022-02-28T17:46:07Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.8",
        "name": "Release version 0.1.8",
        "release_id": 60630397,
        "tag": "0.1.8",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/60630397",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/60630397",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-02-24T15:16:34Z",
        "date_published": "2022-02-24T15:17:45Z",
        "description": "This is the first release that enables 3D visualization based on predicted structures from AlphaFold.",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.7",
        "name": "Release version 0.1.7",
        "release_id": 60378752,
        "tag": "0.1.7",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/60378752",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/60378752",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-02-24T13:02:29Z",
        "date_published": "2022-02-24T13:07:31Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.6",
        "name": "Release version 0.1.6",
        "release_id": 60362219,
        "tag": "0.1.6",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/60362219",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/60362219",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-10-08T09:46:32Z",
        "date_published": "2021-10-08T09:47:42Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.5",
        "name": "Release version 0.1.5",
        "release_id": 51022847,
        "tag": "0.1.5",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/51022847",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/51022847",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-09-02T08:36:58Z",
        "date_published": "2021-09-02T08:41:28Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.4",
        "name": "Release version 0.1.4",
        "release_id": 48873511,
        "tag": "0.1.4",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/48873511",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/48873511",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-09-01T16:15:53Z",
        "date_published": "2021-09-01T16:17:22Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.3",
        "name": "Release version 0.1.3",
        "release_id": 48830601,
        "tag": "0.1.3",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/48830601",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/48830601",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-08-30T22:06:15Z",
        "date_published": "2021-08-30T22:07:29Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.2",
        "name": "Release version 0.1.2",
        "release_id": 48704639,
        "tag": "0.1.2",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/48704639",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/48704639",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-08-30T21:40:49Z",
        "date_published": "2021-08-30T21:49:51Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.1",
        "name": "Release version 0.1.1",
        "release_id": 48703994,
        "tag": "0.1.1",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/48703994",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/48703994",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-08-30T14:31:22Z",
        "date_published": "2021-08-30T18:09:57Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/0.1.0",
        "name": "Release version 0.1.0",
        "release_id": 48691980,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/48691980",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/48691980",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ibludau",
          "type": "User"
        },
        "date_created": "2021-07-29T18:33:13Z",
        "date_published": "2021-07-30T08:09:05Z",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/v0.0.210730-alpha",
        "name": "GUI Update",
        "release_id": 47028878,
        "tag": "v0.0.210730-alpha",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/v0.0.210730-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/47028878",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/47028878",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/v0.0.210730-alpha"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ibludau",
          "type": "User"
        },
        "date_created": "2021-06-22T09:22:33Z",
        "date_published": "2021-06-22T14:42:15Z",
        "description": "Update of windows and macos installers, including exemplary input data. ",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/v0.0.210622-alpha",
        "name": "One-click GUI update",
        "release_id": 45034396,
        "tag": "v0.0.210622-alpha",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/v0.0.210622-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/45034396",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/45034396",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/v0.0.210622-alpha"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ibludau",
          "type": "User"
        },
        "date_created": "2021-06-14T17:25:21Z",
        "date_published": "2021-06-14T18:11:07Z",
        "description": "Update of the macos and windows installer.",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/v0.0.210614-alpha",
        "name": "One-click GUI update",
        "release_id": 44590094,
        "tag": "v0.0.210614-alpha",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/v0.0.210614-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/44590094",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/44590094",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/v0.0.210614-alpha"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ibludau",
          "type": "User"
        },
        "date_created": "2021-02-15T14:30:45Z",
        "date_published": "2021-02-15T15:53:17Z",
        "description": "This initial release includes installers for Windows and MacOS\r\n",
        "html_url": "https://github.com/MannLabs/alphamap/releases/tag/v0.0.210215-alpha",
        "name": "One-click GUI release",
        "release_id": 38066562,
        "tag": "v0.0.210215-alpha",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphamap/tarball/v0.0.210215-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphamap/releases/38066562",
        "value": "https://api.github.com/repos/MannLabs/alphamap/releases/38066562",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphamap/zipball/v0.0.210215-alpha"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:34:24",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 75
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "AlphaMap"
        ],
        "type": "Text_excerpt",
        "value": "There are two ways to use AlphaMap:\n\n* [**GUI:**](#gui) This allows to interactively import and visualize the data.\n* [**Python:**](#python-and-jupyter-notebooks) This allows to access data and explore it interactively with custom code.\n\nNOTE: The first time you use a fresh installation of AlphaMap, it is often quite slow because some functions might still need compilation on your local operating system and architecture. Subsequent use should be a lot faster.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GUI",
        "parent_header": [
          "AlphaMap",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Please refer to the [GUI manual](https://github.com/MannLabs/alphamap/blob/master/alphamap/data/alphamap_tutorial.pdf) for detailed instructions on the installation and usage of the stand-alone AlphaMap GUI.\n\nIf the GUI was not installed through a one-click GUI installer, it can be activated with the following `bash` command:\n\n```bash\nalphamap\n```\n\nNote that this needs to be prepended with a `!` when you want to run this from within a Jupyter notebook. When the command is run directly from the command-line, make sure you use the right environment (activate it with e.g. `conda activate alphamap` or set an alias to the binary executable).\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python and Jupyter notebooks",
        "parent_header": [
          "AlphaMap",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "AlphaMap can be imported as a Python package into any Python script or notebook with the command `import alphamap`.\n\nA Jupyter notebook tutorial ['Workflow.ipynb'](Workflow.ipynb) is available to demonstrate how to load AlphaMap as python module and hot to visualize data interactively. When running locally it provides interactive plots, which are not rendered on GitHub.\n\nAlphaMap includes fasta files and UniProt annotations for: 'Human', 'Mouse', 'Rat', 'Cow', 'Zebrafish', 'Drosophila', 'Caenorhabditis elegans', 'Slime mold', 'Arabidopsis thaliana', 'Rice', 'Escherichia coli', 'Bacillus subtilis', 'Saccharomyces cerevisiae', 'SARS-COV' and 'SARS-COV-2'. If additional organisms are of interest, corresponding .fasta files and sequence annotations can be downloaded directly from UniProt. A Jupyter notebook tutorial ['Uniprot_preprocessing.ipynb'](Uniprot_preprocessing.ipynb) shows how to load and format a UniProt annotation file.\n\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphamap/master/README.md",
      "technique": "header_analysis"
    }
  ]
}