{
  "application_domain": [
    {
      "confidence": 5.45,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation:",
        "parent_header": [
          "USAGE of MethHaplo"
        ],
        "type": "Text_excerpt",
        "value": "[Zhou, Q., Wang, Z., Li, J. et al. MethHaplo: combining allele-specific DNA methylation and SNPs for haplotype region identification. BMC Bioinformatics 21, 451 (2020).](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-020-03798-7)\n"
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ZhouQiangwei/MethHaplo"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-05-12T08:26:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-14T16:20:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "allele specific DNA methylation haplotype region"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.999724509604222,
      "result": {
        "original_header": "MethHaplo: Combining Allele-specific DNA Methylation and SNPs for Haplotype Region Identification",
        "type": "Text_excerpt",
        "value": "DNA methylation is an important epigenetic modification that plays a critical role in most eukaryotic organisms. Parental alleles in haploid genomes may exhibit different methylation patterns, which can lead to different phenotypes and even different therapeutic and drug responses to diseases. However, to our knowledge, no software is available for the identification of DNA methylation haplotype regions. In this paper, we developed a new method, MethHaplo, that identify DNA methylation haplotype regions with allele-specific DNA methylation and single nucleotide polymorphisms (SNPs) from whole-genome bisulfite sequencing (WGBS) data. Our results showed that methylation haplotype regions were ten times longer than haplotypes with SNPs only. When we integrate WGBS and high-throughput chromosome conformation capture (Hi-C) data, MethHaplo could call even longer haplotypes. By constructing methylation haplotypes for various cell lines, we provide a clearer picture of the effect of DNA methylation on gene expression, histone modification and three-dimensional chromosome structure at the haplotype level. Our method could benefit the study of parental inheritance-related disease and heterosis in agriculture.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ZhouQiangwei/MethHaplo/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ZhouQiangwei/MethHaplo/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ZhouQiangwei/MethHaplo"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/scripts/asmexample.png"
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/scripts/asmsites.png"
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ZhouQiangwei/MethHaplo/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2015 Devon Ryan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MethHaplo"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ZhouQiangwei"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 3409382,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 899701,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 440939,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 343709,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "OpenEdge ABL",
        "size": 158986,
        "type": "Programming_language",
        "value": "OpenEdge ABL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 114606,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 55192,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Lua",
        "size": 28217,
        "type": "Programming_language",
        "value": "Lua"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 15939,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5147,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 4217,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 3828,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 1592,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ZhouQiangwei",
          "type": "User"
        },
        "date_created": "2023-10-18T03:21:53Z",
        "date_published": "2023-10-18T03:13:55Z",
        "html_url": "https://github.com/ZhouQiangwei/MethHaplo/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 125533106,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/ZhouQiangwei/MethHaplo/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ZhouQiangwei/MethHaplo/releases/125533106",
        "value": "https://api.github.com/repos/ZhouQiangwei/MethHaplo/releases/125533106",
        "zipball_url": "https://api.github.com/repos/ZhouQiangwei/MethHaplo/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "REQUIREMENTS",
        "type": "Text_excerpt",
        "value": "1. gcc (v4.8) , gsl library\n2. SAMtools\n3. Python3\n4. Perl\n"
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:41:33",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example data",
        "parent_header": [
          "USAGE of MethHaplo"
        ],
        "type": "Text_excerpt",
        "value": "You can found the test data in ./test dir.\n"
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. MethHaplo command",
        "parent_header": [
          "USAGE of MethHaplo",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\n        MethHaplo: Combining Allele-specific DNA Methylation and SNPs for Haplotype Region Identification\n        Usage: methHaplo -M [mode] -a Y/N -m methfile -s <sam>/-b <bam> -o outputprefix\n        Options:\n                -M <string> [hap|asm]         methHaplo analysis mode\n                                                hap: iterative approach, prefer longer haplotype results;\n                                                asm: hypergeometric approach, prefer accurate asm results.(default: hap);\n                -m, --methfile <file>         methratio file (requires)\n                                                format: chr  pos  strand  context methC  coverage  methlevel\n                -o, --out <string>            output file prefix\n                -s, --sam <samfile>           sam file from batmeth2-align.  This file should be coordinate sorted, \n                                                using the <samtools sort> command, and must contain methylstatus[MD:Z:].\n                -b, --bam <bamfile>           bam file, should be coordinate sorted. (use this option or -s option but not both)\n                -a <Y/N>                      If bam/sam file contain MD state by batmeth2 calmeth scripts.\n                                                If not, please define genome location by -g paramater.\n                -g, --genome <genome>         If bam/sam file isnot contain MD.\n                -q <int>                      only process reads with mapping quality >= INT [default >= 20].\n                -c, --context                 methylation context process for methHaplo. CG, CHG, CHH, ALL[default].\n                -C, --NMETH                   Number of methylated reads cover cytosine site. default: 2 [m>=2]\n                -N, --NCOVER                  Number of coverage reads in cytosine site. default: 6 [n >= 6]\n                -f, --MFloat                  Cutoff of methratio. default: 0.1 [ f =< meth <= 1-f]\n                --minIS <INT>                 Minimum insert size for a paired-end read to be considered as single fragment for phasing, default 0\n                --maxIS <INT>                 Maximum insert size for a paired-end read to be considered as a single fragment for phasing, default 1000\n                --DBtmpsize <INT>             Maximum size of temp read store, default 12000. (only useful in asm mode)\n                --PE                          Paired-end reads.\n                -v, --vcffile <file>          snp file (optional)\n                -r, --chromosomal-order       Use natural ordering (1,2,10,MT,X) rather then the default (1,10,2,MT,X). \n                                                This requires new version of the unix \\sort\\ command which supports the --version-sort option.\n                -p, --parallel <int>          Change the number of sorts run concurrently to <int>\n                -t, --temporary-directory     Use a directory other than /tmp as the temporary directory for sorting.\n                -h, -?, --help                This help message.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Allele-specific DNA methylation region visualization",
        "parent_header": [
          "USAGE of MethHaplo",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```bash\npython methpoint.py align.md.sort.bam chrom:start-end strand outputprefix visulsort\n\n        [align.md.sort.bam] BS-Seq alignment file for visualization.\n        [chrom:start-end] The region in chromosome:start-end for visualization.\n        [strand] visualization strand. [+/-/.]\n        [outputprefix] output file prefix\n        [visulsort] Methylation and Unmethylation position in the figure. [0/1]\n```\n\n<p align=\"center\">\n        <img src=\"scripts/asmexample.png\" alt=\"asmexample\"  width=\"550\" height=\"350\">\n</p>\n\nThe figure above represents the distribution of methylation sites in raw reads, orange represents methylation sites, green represents unmethylation sites, and blue represents mutation base information. The bottom figure shows DNA methylation sites and methylation levels.\n"
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.1 Caculate coverage across TSS/TES sites.",
        "parent_header": [
          "USAGE of MethHaplo",
          "Usage",
          "3. Aellele-specific DNA methylation Sites distribution across TSS/TES etc."
        ],
        "type": "Text_excerpt",
        "value": "```bash\nASManno [options] -o <OUT_PREFIX> -G GENOME -gff <GFF file>/-gtf <GTF file>/-b <bed file> -ap <asm plus file> -an <asm neg file>\nUsage:\n\t-o|--out         Output file prefix\n\t-G|--genome      Genome\n\t-ap|--asmplus    ASM plus file.\n\t-an|--asmneg     ASM neg file.\n\t-p|--pvale       Pvalue cutoff. default: 0.01\n\t-gtf|-gff        Gtf/gff file\n\t-b|--BED         Bed file, chrom start end (strand, .bed4 format)\n\t--ped            loci file, chrom start (strand, .ped3 format)\n\t-d|--distance    ASM distributions in body and <INT>-bp flanking sequences. The distance of upstream and downstream. default:2000\n\t-B|--body        For different analysis input format, gene/TEs body methylation level. [Different Methylation Gene(DMG/DMT...)]\n\t-P|--promoter    For different analysis input format.[Different Methylation Promoter(DMP)]\n\t-s|--step        Gene body and their flanking sequences using an overlapping sliding window of 5% of the sequence length at a step of 0.8% of the sequence length. So default step: 0.008 (0.8%)\n\t-h|--help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.2 Visualization",
        "parent_header": [
          "USAGE of MethHaplo",
          "Usage",
          "3. Aellele-specific DNA methylation Sites distribution across TSS/TES etc."
        ],
        "type": "Text_excerpt",
        "value": "```bash\npython methylevel.py Num Input1.Methylevel.1.txt [Input2 ...] lable outprefix\n```\n<p align=\"center\">\n        <img src=\"scripts/asmsites.png\" alt=\"asmsite\"  width=\"500\" height=\"300\">\n</p>\n\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/ZhouQiangwei/MethHaplo/main/README.md",
      "technique": "header_analysis"
    }
  ]
}