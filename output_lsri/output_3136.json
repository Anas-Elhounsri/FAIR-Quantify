{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Msuite: Multi-mode DNA methylation data analysis suite"
        ],
        "type": "Text_excerpt",
        "value": "When referencing, please cite \"Sun K, Li L, Ma L, Zhao Y, Deng L, Wang H and Sun H:\n**Msuite: a high-performance and versatile DNA methylation data analysis toolkit.**\n*Patterns (N Y)* 2020 Nov 13; 1(8):100127.\"\n[Full Text](https://doi.org/10.1016/j.patter.2020.100127 \"Full text\")\n\n---\nPlease send bug reports to Kun Sun \\(sunkun@szbl.ac.cn\\).<br />\nMsuite package is freely available at\n[https://github.com/hellosunking/Msuite/](https://github.com/hellosunking/Msuite/ \"Msuite @ Github\").\n\n"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hellosunking/Msuite"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-14T07:13:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-25T01:55:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "high performance and versatile DNA methylation data analysis toolkit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8782700024168536,
      "result": {
        "original_header": "Msuite: Multi-mode DNA methylation data analysis suite",
        "type": "Text_excerpt",
        "value": "Version 1.1.2, Jan 2021<br />\nAuthors: Kun Sun, Lishi Li, Li Ma, Yu Zhao, Lin Deng, Huating Wang and Hao Sun<br />\nSoftware implemented by Kun Sun \\(sunkun@szbl.ac.cn\\)<br />\n<br />\nDistributed under the\n[GNU General Public License v3.0 \\(GPLv3\\)](https://www.gnu.org/licenses/gpl-3.0.en.html \"GPLv3\")\nfor personal and academic usage only.<br />\nFor detailed information please read the license file under `license` directory. \n"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8105203237935398,
      "result": {
        "original_header": "Outputs explanation",
        "type": "Text_excerpt",
        "value": "`Msuite` outputs all the results for the given region in the directory specified by `-o OUTDIR` option.\n`Msuite` will write the analysis report into a HTML file named `Msuite.report/index.html`, which records the\nessential statistics and visualizations for quality control, mappability, overall methylation level on CpG\nsites, M-bias plot, and conversion rate (estimated using reads mapped to the Lamda genome). \n"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9932257411511877,
      "result": {
        "original_header": "Mviewer",
        "type": "Text_excerpt",
        "value": "`Msuite` contains a visualization tool named `Mviewer`, adapted from the authors' previous\n[BSviewer](http://sunlab.cpy.cuhk.edu.hk/BSviewer/) software. It is specially optimized to be compatiable\nwith `Msuite` alignment results and provides nucleotide-level, genotype-preserved DNA methylation data\nvisualization. For more information, please refer to README file in `Mviewer` directory. \n"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9607843062909833,
      "result": {
        "original_header": "Others",
        "type": "Text_excerpt",
        "value": "`Msuite` also provides other utilities under the `util` directory. The `profile.meth.pl` program is designed to\nsummarize the methylome into bins. You can use it to prepare data for `Circos` plots.  `extract.meth.in.region`\nis an extended version, which is desgined to extract the covered CpG sites, C-count and T-count in the given\nregions (e.g., CpG islands). \nThe `pe_bam2bed.pl` and `se_bam2bed.pl` are designed to translate the aligned BAM file into BED format file, and\n`bed2wig` is designed to translate BED file into WIG files (e.g., for coverage profiles).\n \n"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hellosunking/Msuite/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hellosunking/Msuite/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hellosunking/Msuite"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Msuite: Multi-mode DNA methylation data analysis suite"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hellosunking/Msuite/master/run_testing_dataset.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hellosunking/Msuite/master/simulation/find.CT.rich.regions.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hellosunking/Msuite/master/simulation/check.result.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hellosunking/Msuite/master/simulation/do.simu.SE.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hellosunking/Msuite/master/simulation/do.simu.CT.rich.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hellosunking/Msuite/master/simulation/do.simu.PE.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hellosunking/Msuite/master/build.index/build.index.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Msuite: Multi-mode DNA methylation data analysis suite"
        ],
        "type": "Text_excerpt",
        "value": "`Msuite` is written in `Perl` and `R` for Linux/Unix platform. To run `Msuite` you need a Linux/Unix\nmachine with `Bash 4 (or higher)`, `Perl 5.10 (or higher)` and `R 2.10 (or higher)` installed.\n\nThis source package contains pre-compiled executable files using `g++ v4.8.5` for Linux x86_64 system.\nIf you could not run the analysis normally (which is usually caused by low version of `libc++` library),\nor you want to build a different version optimized for your system, you can re-compile the programs:\n```\nuser@linux$ make clean && make\n```\n\nNote that `Msuite` depends on the following software:\n\n* [bowtie2](https://github.com/BenLangmead/bowtie2 \"bowtie2\")\n* [samtools](http://samtools.sourceforge.net/ \"samtools\")\n\nPlease install them properly and make sure that they are included in your `PATH`.\nIn addition, please make sure that the version of your `g++` compiler is higher than 4.8\n(you can use `g++ -v` to check it).\n\nBefore running `Msuite`, genome indices must be built. To this end, we have prepared a utility named\n`build.index.sh` under the `build.index` directory. To use it, you need to prepare the genome sequence\n(either in one multi-fasta file or a directory containing the sequences for individual chromosomes) and\nRefSeq annotation for your genome (we have included files for mm9/mm10/hg19/hg38 in this package).\nYou can download the annotations for other species/genome versions from the\n[UCSC genome browser](http://genome.ucsc.edu/ \"UCSC Genome Browser\").\n(The RefSeq annotation is used to profile the methylation level around Transcription Start Sites as a\nquick quality control of your data.)\n\nThen, you can build the genome indices using the following command:\n```\nuser@linux$ build.index/build.index.sh GENOME.FA(or GENOME.DIR) REFSEQ.txt Genome.ID\n```\nNote that this utility will automatically incorporate the Lambda genome to build the genome indices.\n`Gzip` or `Bzip2` compression of `GENOME.FA` and `REFSEQ.txt` are also supported, but the files must\ncontain the corresponding suffix (i.e., `REFSEQ.txt.gz` for `Gzip` compressed and `REFSEQ.txt.bz2` for\n`Bzip2` compressed file). The `Genome.ID` is an identifier that you specified to name your genome and\nthe indices will be written to the `index` directory under the root of `Msuite`. You can add as many\ngenomes to `Msuite` as you need.\n"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9583487805173336,
      "result": {
        "original_header": "Outputs explanation",
        "type": "Text_excerpt",
        "value": "You can run `make clean` in the OUTDIR to delete the intermediate files to save storage space. \n"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hellosunking/Msuite/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hellosunking/hellosunking.github.io/master/logos/Msuite.png"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Msuite"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hellosunking"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 153791,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 128197,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 17419,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 7585,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 4118,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2066,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hellosunking",
          "type": "User"
        },
        "date_created": "2021-01-05T10:08:04Z",
        "date_published": "2021-01-05T10:11:23Z",
        "description": "This release extends the maximum number of reads that Msuite could handle to 4,294,967,295.",
        "html_url": "https://github.com/hellosunking/Msuite/releases/tag/v1.1.2",
        "release_id": 35988487,
        "tag": "v1.1.2",
        "tarball_url": "https://api.github.com/repos/hellosunking/Msuite/tarball/v1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/hellosunking/Msuite/releases/35988487",
        "value": "https://api.github.com/repos/hellosunking/Msuite/releases/35988487",
        "zipball_url": "https://api.github.com/repos/hellosunking/Msuite/zipball/v1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hellosunking",
          "type": "User"
        },
        "date_created": "2020-10-15T06:48:14Z",
        "date_published": "2020-10-16T01:43:13Z",
        "description": "Fixed a bug in loading sequencing reads",
        "html_url": "https://github.com/hellosunking/Msuite/releases/tag/v1.1.1",
        "release_id": 32650350,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/hellosunking/Msuite/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/hellosunking/Msuite/releases/32650350",
        "value": "https://api.github.com/repos/hellosunking/Msuite/releases/32650350",
        "zipball_url": "https://api.github.com/repos/hellosunking/Msuite/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hellosunking",
          "type": "User"
        },
        "date_created": "2020-08-18T06:59:32Z",
        "date_published": "2020-08-18T09:15:58Z",
        "description": "Major changes in version 1.1.0 Aug 2020:\r\n\r\n1. Add support for gzip compressed files as input\r\n2. Add M-bias plots\r\n3. Add \"-Q\" option which allows the users to ignore ambigous alignments for methylation call\r\n4. Add support for methylation call for CpH sites\r\n5. Change \"-c\" option to non-compulsory. Now Msuite could automatically detect and use all cycles.",
        "html_url": "https://github.com/hellosunking/Msuite/releases/tag/v1.1.0",
        "release_id": 29805890,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/hellosunking/Msuite/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hellosunking/Msuite/releases/29805890",
        "value": "https://api.github.com/repos/hellosunking/Msuite/releases/29805890",
        "zipball_url": "https://api.github.com/repos/hellosunking/Msuite/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hellosunking",
          "type": "User"
        },
        "date_created": "2020-05-19T04:53:34Z",
        "date_published": "2020-05-19T04:55:02Z",
        "description": "First public release.\r\n\r\nMajor features of Msuite:\r\n\r\nUnique 4-letter alignment mode specifically designed and optimized for TAPS-like protocols.\r\nIntegration of quality control, methylation call and data visualization.\r\nVarious data visualization utilities, including Mviewer, which supports genotype-preserved, nucleotide-level methylation data visualization.\r\nSupport for Multiple input files, paired/single-end data, and parallelization.",
        "html_url": "https://github.com/hellosunking/Msuite/releases/tag/v1.0.3",
        "release_id": 26654411,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/hellosunking/Msuite/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/hellosunking/Msuite/releases/26654411",
        "value": "https://api.github.com/repos/hellosunking/Msuite/releases/26654411",
        "zipball_url": "https://api.github.com/repos/hellosunking/Msuite/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Msuite",
        "parent_header": [
          "Msuite: Multi-mode DNA methylation data analysis suite"
        ],
        "type": "Text_excerpt",
        "value": "The main program is `msuite`. You can add its path to your `.bashrc` file under the `PATH` variable\nto call it from anywhere, or you can run the following command to add it to your current session:\n```\nuser@linux$ PATH=$PATH:$PWD\n```\nCall `Msuite` without any parameters to see the usage (or use '-h' option):\n```\n########## Msuite: Multi-mode DNA methylation data analysis suite ##########\n\nAuthor : Kun Sun (sunkun@szbl.ac.cn)\nVersion: 1.1.0 (Aug 2020)\n\nUsage: Msuite [options] -x index -1/-U Read1.fq [ -2 Read2.fq ] -c cycle -o out.dir\n\nCompulsory parameters:\n\n  -1/-U Read1.fq   Specify the path to the file containing read 1\n                   If your data is Paired-end, specify read 2 file using -2 option\n                   If -U is used, then -2 will be ignored\n\n                   If you have multiple files for your sample, please use ',' to separate them\n                   Currently, the maximum number of reads that Msuite could handle is 4,294,967,295.\n\n  -x index         Specify the genome index\n                   Please refer to README file on how to build index for Msuite\n\n  -o out.dir       Specify the output directory\n                   Note that your specified directory will be created if it does not exist\n                   otherwise the files under that directory could get over-written\n\n\nOptional parameters:\n\n  -2 Read2.fq      Specify the path to the file containing read 2\n                   Use this parameter if your data is generated in paired-end mode\n\n                   If you have multiple files for your sample, please use ',' to separate them\n                   and make sure that all the files are well paired in -1 and -2 options\n\n  -3               Use 3-letter alignment (default)\n  -4               Use 4-letter alignment\n                   Note that the above two options are mutually exclusive\n\n  -c cycle         Specify the sequencing cycle of your data that you want to analyze\n                   Default: auto-detected\n\n  -k kit           Specify the library preparation kit (default: illumina)\n                   Note that only 'illumina', 'nextera' and 'bgi' are acceptable\n\n  -m TAPS/BS       Specify the library protocol (default: BS)\n                   Note that only 'TAPS' and 'BS' are acceptable\n\n  -p threads       Specify how many threads should be used (default: 4)\n\n  --phred33        Read cycle quality scores are in Phred33 format (default)\n  --phred64        Read cycle quality scores are in Phred64 format\n                   Note that the above two options are mutually exclusive\n\n  -q score         The minimum quality score to keep the cycle (default: 20)\n                   Note that 20 means 1% error rate, 30 means 0.1% error rate in Phred\n\n                   Sometimes quality scores start from 35 ('#') in the FASTQ files,\n                   in this case you could adjust '-q' option, e.g., '--phred33 -q 22'\n\n  --minsize size   Minimum read size to be kept for alignment (default: 22)\n\n  --minins MIN     Minimum insert size (default: 0)\n  --maxins MAX     Maximum insert size (default: 1000)\n                   Note that the above two options will be ignored for Single-End data\n\n  --align-only     Stop after alignment (i.e., do not perform DNA methylation call and\n                   visualization around TSS; default: not set)\n\n  -Q score         The minimum alignment score for a read to call methylation (default: 0)\n\n  -h/--help        Show this help information and quit\n  -v/--version     Show the software version and quit\n\n\nPlease refer to README file for more information.\n```\n\n**IMPORTANT NOTE**: If your data is generated using BS-seq protocol, you MUST use the 3-letter mode and set\n`-m BS`. 4-letter mode ONLY supports processing of TAPS/5hmC-CATCH data where the non-CpG methylation is\nvery low (e.g., most somatic tissues in human). In addition, Msuite could directly analyze the data generated\nby ATAC-me or similar protocols via setting `-k nextera`. You can use '-c cycle' option to control the cycles\nthat you want to analyze (if you do not want to analyze all cycles for some reason).\n\n"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:42:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 1",
        "parent_header": [
          "Msuite: Multi-mode DNA methylation data analysis suite",
          "Run Msuite"
        ],
        "type": "Text_excerpt",
        "value": "If your data is generated using TAPS protocol in 75 bp * 2 (paired-end) mode, and you want to align your\ndata to the hg19 reference genome in 4-letter mode, and you want to use 16 threads to speed-up the analysis,\nthen you can run:\n```\nuser@linux$ Msuite -1 /path/to/read1.fq -2 /path/to/read2.fq -x hg19 \\\n                   -4 -m TAPS -p 16 -o /path/to/output/dir\n```\n"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 2",
        "parent_header": [
          "Msuite: Multi-mode DNA methylation data analysis suite",
          "Run Msuite"
        ],
        "type": "Text_excerpt",
        "value": "If your data is generated using BS-seq protocol in 100 bp * 1 (single-end) mode while you only want to analyze\nthe first 75 bp of your reads (e.g., due to sequencing quality considerations), and you want to align your data\nto the mm10 reference genome (note that you MUST use 3-letter mode here), and you want to call methylation for\nreads with an alignment score larger than 30 (the score is calculated by bowtie2) and use 32 threads to speed-up\nthe analysis, then you can run:\n```\nuser@linux$ Msuite -1 /path/to/read1.fq -x mm10 -c 75 -Q 30 \\\n                   -3 -m BS -p 32 -o /path/to/output/dir\n```\n"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 3",
        "parent_header": [
          "Msuite: Multi-mode DNA methylation data analysis suite",
          "Run Msuite"
        ],
        "type": "Text_excerpt",
        "value": "If your data is generated using TAPS protocol in 75 bp * 2 (paired-end) mode, and you have 3 lanes of data which\nhave been compressed using `Gzip`, you want to align your data to the hg38 reference genome in 4-letter mode, and\nyou want to use 48 threads to speed-up the analysis, then you can run:\n```\nuser@linux$ Msuite -1 /path/to/lane1.read1.fq.gz,/path/to/lane2.read1.fq.gz,/path/to/lane3.read1.fq.gz \\\n                   -2 /path/to/lane1.read2.fq.gz,/path/to/lane2.read2.fq.gz,/path/to/lane3.read2.fq.gz \\\n                   -x hg38 -4 -m TAPS -p 48 -o /path/to/output/dir\n```\n\nIf you want to use add all the '.fq' files in your path, you can also use the following command:\n```\nuser@linux$ Msuite -1 '/path/to/lane*.read1.fq' \\\n                   -2 '/path/to/lane*.read2.fq' \\\n                   -x hg38 -4 -m TAPS -p 48 -o /path/to/output/dir\n```\nNote that the single quotation mark is essential to protect the '\\*' syntax from been extracted by your shell.\n\n`Msuite` will check the data and dependent programs then generate a `makefile` under `/path/to/output/dir`\n('-o' option). Then you can go to `/path/to/output/dir` and run `make` to perform the analysis:\n```\nuser@linux$ cd /path/to/output/dir; make\n```\n\nWe have prepared a testing dataset under the `testing_dataset` directory. It contains *in silico* generated\nreads following the TAPS (TET-assisted pyridine borane sequencing) protocol using\n[SHERMAN](http://www.bioinformatics.babraham.ac.uk/projects/sherman/) software (key parameters: C-&gt;T\nconversion rate: 20% for CpG sites, C-&gt;T conversion rate in CpH sites: 0.5%, error rate: 0.1%).\nNote that the reads are restricted to CT/GA-rich regions (CT proportion >=80% or GA proportion >=80%) to\nillustrate the advantage of 4-letter over 3-letter alignment. We also have prepared a work shell to run\n`Msuite` on this dataset using both 3- and 4-letter modes:\n```\nuser@linux$ ./run_testing_dataset.sh\n```\nNote that this script will automatically build the indices for hg19 genome if you have not done this before.\n\nYou can compare the performance of 3-letter and 4-letter alignments by inspecting the outputs, which will be\nwritten to `testing_dataset/Msuite.Mode3/` and `testing_dataset/Msuite.Mode4/`.\n\n"
      },
      "source": "https://raw.githubusercontent.com/hellosunking/Msuite/master/README.md",
      "technique": "header_analysis"
    }
  ]
}