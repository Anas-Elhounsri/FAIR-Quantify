{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NielsenBerkeleyLab/sconce"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-05T22:59:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-07T17:38:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Brief parameter descriptions for SCONCE",
        "parent_header": [
          "SCONCE"
        ],
        "type": "Text_excerpt",
        "value": "- `--diploid` This file should be the averaged read depth across all diploid cells. It can be generated using [scripts/avgDiploid.R](scripts/avgDiploid.R).\n- `--tumor` This file should be the per window read depth of a tumor cell to analyze.\n- `--meanVarCoefFile` This file should define the coefficients for the relationship between the mean and variance of the negative binomial distribution used for emission probabilities. It should be generated using [scripts/fitMeanVarRlnshp.R](scripts/fitMeanVarRlnshp.R).\n- `--outputBase` This gives the basename for all [output files](#output-files).\n- `--maxKploid` This gives the maximum allowed ploidy (recommended `k=10`).\n\n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9789148424169924,
      "result": {
        "original_header": "SCONCE",
        "type": "Text_excerpt",
        "value": "This directory is for the program SCONCE (Single Cell cOpy Numbers in CancEr). \n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9564648054560108,
      "result": {
        "original_header": "Input files",
        "type": "Text_excerpt",
        "value": "Tumor read depth files should be tab separated, with columns `<chr>\\t<start>\\t<end>\\t<readDepth>`. See [simulations/README.md](simulations/README.md) for how to generate simulations with this format. For real data, a tool like [bedtools coverage](https://bedtools.readthedocs.io/en/latest/content/tools/coverage.html) can be used to create this file from a bam file. For example:\n```\nchr1\t0\t250000\t699\nchr1\t250000\t500000\t804\nchr1\t500000\t750000\t627\nchr1\t750000\t1000000\t701\nchr1\t1000000\t1250000\t521\nchr1\t1250000\t1500000\t685\nchr1\t1500000\t1750000\t616\nchr1\t1750000\t2000000\t583\nchr1\t2000000\t2250000\t736\nchr1\t2250000\t2500000\t634\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8966314977848885,
      "result": {
        "original_header": "Output files",
        "type": "Text_excerpt",
        "value": "SCONCE will create the following files automatically:\n- `<output>.hmm` This file contains the state of the HMM after the Baum Welch step and the state of the HMM after the BFGS step.\n- `<output>.bed` This file contains the copy number calls in tab separated bed format (`<chr>\\t<start>\\t<end>\\t<ploidy>`)\n- `<output>.viterbiDecoded`. This tab separated files contains the copy number calls with more detail. The columns are `<coord>` (chr:start-end), `<diploid_mean>`, `<diploid_variance>`, `<tumor>` (observed tumor read count), `<ploidy_0-<k>>` (ploidy call in the range of 0 to `<k>`). Note this file is only created if the `--saveViterbiDecoded` flag is used. \nSCONCE also prints log messages to stdout and error messages to stderr.\nIf the `--verbose` flag is used, debugging statements will be printed to stderr. \n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NielsenBerkeleyLab/sconce/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NielsenBerkeleyLab/sconce/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NielsenBerkeleyLab/sconce"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SCONCE"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/otherMethods/runSCICoNE.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/test/ref_k5_simu_cancer_cell_0.png"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation instructions",
        "parent_header": [
          "SCONCE"
        ],
        "type": "Text_excerpt",
        "value": "1. Clone this repo:\n```\ngit clone git@github.com:NielsenBerkeleyLab/sconce.git\n```\n2. Run `make`. This will build intermediates into the `build/` directory and create an executable named `sconce`.\n3. [Optional] Run `sconce` on the test files as below.\n\n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9893085791506054,
      "result": {
        "original_header": "Output files",
        "type": "Text_excerpt",
        "value": "Using the test files from before produces the following plot:\n```\nRscript scripts/plotGenomeTrace.R test/test_healthy_avg.bed test/test_cancer_cell.bed test/test_output_k5.bed test/test_output_k5.png \"Genome Trace for SCONCE (k=5)\" test/true_cancer_cell.bed\n```\n![reference genome trace](test/ref_k5_simu_cancer_cell_0.png) \n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8638874882363952,
      "result": {
        "original_header": "Simulations",
        "type": "Text_excerpt",
        "value": "To compile and run the simulation program, see [simulations/README.md](simulations/README.md). \n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8320574247444422,
      "result": {
        "original_header": "Input files",
        "type": "Text_excerpt",
        "value": "Tumor read depth files should be tab separated, with columns `<chr>\\t<start>\\t<end>\\t<readDepth>`. See [simulations/README.md](simulations/README.md) for how to generate simulations with this format. For real data, a tool like [bedtools coverage](https://bedtools.readthedocs.io/en/latest/content/tools/coverage.html) can be used to create this file from a bam file. For example:\n```\nchr1\t0\t250000\t699\nchr1\t250000\t500000\t804\nchr1\t500000\t750000\t627\nchr1\t750000\t1000000\t701\nchr1\t1000000\t1250000\t521\nchr1\t1250000\t1500000\t685\nchr1\t1500000\t1750000\t616\nchr1\t1750000\t2000000\t583\nchr1\t2000000\t2250000\t736\nchr1\t2250000\t2500000\t634\n``` \nAveraged diploid read depth files should be tab separated, with columns `<chr>\\t<start>\\t<end>\\t<meanReadDepth>\\t<varianceOfReadDepth>`. They should be generated using [scripts/avgDiploid.R](scripts/avgDiploid.R), given a file providing a list of paths to the observed diploid read depths. For example:\n```\nRscript scripts/avgDiploid.R test/diploidFileList test/test_healthy_avg.bed\n```\nproduces the following output:\nBASH3* \nMean and variance coefficient files should have one parameter and value pair per line. They should be generated using [scripts/fitMeanVarRlnshp.R](scripts/fitMeanVarRlnshp.R). For example:\n```\nRscript scripts/fitMeanVarRlnshp.R test/diploidFileList test/test.meanVar\n```\nproduces the following output:\nBASH5*\n \n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.878126262221991,
      "result": {
        "original_header": "Output files",
        "type": "Text_excerpt",
        "value": "Genome traces can be plotted using the included [scripts/plotGenomeTrace.R](scripts/plotGenomeTrace.R) script. The arguments for this script are:\n- Arg 1: /path/to/healthy/average/bed/file\n- Arg 2: /path/to/observed/tumor/read/depths/bed/file\n- Arg 3: /path/to/sconce/output/bed/file\n- Arg 4: /path/to/output/plot\n- Arg 5: quoted text for the plot title (ex sample name)\n- Arg 6: [optional] /path/to/ground/truth/ploidy/bed/file (ie for simulations) \nUsing the test files from before produces the following plot:\n```\nRscript scripts/plotGenomeTrace.R test/test_healthy_avg.bed test/test_cancer_cell.bed test/test_output_k5.bed test/test_output_k5.png \"Genome Trace for SCONCE (k=5)\" test/true_cancer_cell.bed\n```\n![reference genome trace](test/ref_k5_simu_cancer_cell_0.png) \n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NielsenBerkeleyLab/sconce/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sconce"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "NielsenBerkeleyLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 338593,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 150217,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 27051,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3540,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 801,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "SCONCE"
        ],
        "type": "Text_excerpt",
        "value": "SCONCE is written in C++11, and requires\n- GNU make (tested on v4.1)\n- g++ (tested on 7.5.0)\n- BOOST (tested on v1.65.1)\n- GSL (tested on v2.4)\n\nAdditional [R scripts](scripts/) require\n- R (tested on v3.6.3)\n- ggplot2 (tested on v3.2.1)\n- reshape2 (tested on v1.4.3)\n- cowplot (tested on v1.1.1)\n- scales (tested on v1.1.0)\n\nSCONCE was developed and tested on Ubuntu 18.04.\n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example test run",
        "parent_header": [
          "SCONCE"
        ],
        "type": "Text_excerpt",
        "value": "To ensure `sconce` was built and the above scripts were run correctly, we include some test files. Run the following:\n```\ntime ./sconce --diploid test/test_healthy_avg.bed --tumor test/test_cancer_cell.bed --meanVarCoefFile test/test.meanVar --outputBase test/test_output_k5 --maxKploid 5 > test/test_output_k5.log 2> test/test_output_k5.err\n```\nYour output (with the exception of timing information) should match the provided `test/ref*` files.\n\n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:23:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example test run",
        "parent_header": [
          "SCONCE"
        ],
        "type": "Text_excerpt",
        "value": "To ensure `sconce` was built and the above scripts were run correctly, we include some test files. Run the following:\n```\ntime ./sconce --diploid test/test_healthy_avg.bed --tumor test/test_cancer_cell.bed --meanVarCoefFile test/test.meanVar --outputBase test/test_output_k5 --maxKploid 5 > test/test_output_k5.log 2> test/test_output_k5.err\n```\nYour output (with the exception of timing information) should match the provided `test/ref*` files.\n\n"
      },
      "source": "https://raw.githubusercontent.com/NielsenBerkeleyLab/sconce/main/README.md",
      "technique": "header_analysis"
    }
  ]
}