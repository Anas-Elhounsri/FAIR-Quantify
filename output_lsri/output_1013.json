{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation:",
        "parent_header": [
          "HapCUT2: robust and accurate haplotype assembly for diverse sequencing technologies"
        ],
        "type": "Text_excerpt",
        "value": "[Edge, P., Bafna, V. & Bansal, V. HapCUT2: robust and accurate haplotype assembly for diverse sequencing technologies. Genome Res. gr.213462.116 (2016). doi:10.1101/gr.213462.116](http://genome.cshlp.org/content/early/2016/12/09/gr.213462.116.abstract)\n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vibansal/HapCUT2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-08-02T17:48:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-13T01:59:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "software tools for haplotype assembly from sequence data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9791133197283436,
      "result": {
        "original_header": "About:",
        "type": "Text_excerpt",
        "value": "We found that previously described haplotype assembly methods are specialized for specific read technologies or protocols, with slow or inaccurate performance on others. With this in mind, HapCUT2 is designed for speed and accuracy across diverse sequencing technologies, including but not limited to:\n- NGS short reads (Illumina HiSeq)\n- single-molecule long reads (PacBio and Oxford Nanopore)\n- Linked-Reads (e.g. 10X Genomics, stLFR or TELL-seq)\n- proximity-ligation (Hi-C) reads\n- high-coverage sequencing (>40x coverage-per-SNP) using above technologies\n- combinations of the above technologies (e.g. scaffold long reads with Hi-C reads) \nSee below for specific examples of command line options and best practices for some of these technologies. \nNOTE: At this time HapCUT2 is for diploid organisms only and can assemble haplotypes for one individual at a time. VCF input should contain variants and genotypes for a single diploid individual. \n \n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9259669325659134,
      "result": {
        "original_header": "Input:",
        "type": "Text_excerpt",
        "value": "- BAM file for an individual containing reads aligned to a reference genome\n- VCF file containing short variant calls (SNVs and indels) and **diploid** genotypes for the same individual with respect to the reference genome \n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9709748043524884,
      "result": {
        "original_header": "Note about HAPCUT2 options",
        "type": "Text_excerpt",
        "value": "Based on user preference, SNV pruning (filtering of low-quality phased SNVs) may be adjusted with ```--threshold <float>``` (closer to 1 prunes more, closer to 0.5 prunes less) or turned off with BASH2*.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9146555986412146,
      "result": {
        "original_header": "Output Format:",
        "type": "Text_excerpt",
        "value": "1. A phased block output file. The format of this file is described [here](outputformat.md) \n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9833302877945292,
      "result": {
        "original_header": "Pacific Biosciences and Oxford Nanopore Reads",
        "type": "Text_excerpt",
        "value": "Use the --pacbio 1 and --ont 1 options in extractHAIRS for greatly improved accuracy when using Pacific Biosciences and Oxford Nanopore reads, respectively. \nHere is an example using Pacific Biosciences data (replace --pacbio with --ont for Oxford Nanopore):\n```\n./build/extractHAIRS --pacbio 1 --bam reads.sorted.bam --VCF variants.VCF --out fragment_file --ref reference.fasta\n./build/HAPCUT2 --fragments fragment_file --VCF variantcalls.vcf --output haplotype_output_file\n```\nThe --indels option may be used if desired -- the realignment strategy used with these options allows better detection of indel variants in fragments than the previous approach.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9777212965663861,
      "result": {
        "original_header": "Hi-C (Proximity Ligation) Sequencing Reads",
        "type": "Text_excerpt",
        "value": "For improved haplotype accuracy with Hi-C reads, use the --hic 1 option for both extractHAIRS and HapCUT2 steps\n```\n./build/extractHAIRS --hic 1 --bam HiC_reads.bam --VCF variants.vcf --out fragment_file --maxIS 10000000\n./build/HAPCUT2 --hic 1 --fragments fragment_file --VCF variants.vcf --output haplotype_output_file\n```\nThe --maxIS parameter controls the maximum insert size for which a read pair (with both ends mapped to the same chromosome) is used for phasing as a single haplotype fragment. It is recommended to align the reads using BWA with the -5, -S and -P options (BWA mem -5SPM reference.fasta read1.fq read2.fq > reads.sam). This preserves the mate-pair information in the aligned reads file.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8674369400833352,
      "result": {
        "original_header": "Phasing using data from multiple sequencing technologies",
        "type": "Text_excerpt",
        "value": "First, run extractHAIRS on each of the BAM/CRAM files independently and concatenate (linux \u201ccat\u201d command) the output files. The \u201c--nf 1\u201d option should be used when running extractHAIRS when combining data from different sequencing technologies. This outputs the fragments in the Hi-C fragment file format. The output files can then be concatenated and processed with HapCUT2 (also need to use the --nf 1 option). \n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vibansal/HapCUT2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 36
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vibansal/HapCUT2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vibansal/HapCUT2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HapCUT2: robust and accurate haplotype assembly for diverse sequencing technologies"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/reproduce_hapcut2_paper/run_hapcut2_fosmid/run_hapcut2_fosmid_data.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.8972606957241673,
      "result": {
        "original_header": "About:",
        "type": "Text_excerpt",
        "value": "See below for specific examples of command line options and best practices for some of these technologies. \n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8577858665950323,
      "result": {
        "original_header": "Input:",
        "type": "Text_excerpt",
        "value": "**Note: the program does not accept gzipped VCF files**\n \n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vibansal/HapCUT2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause \"Simplified\" License",
        "spdx_id": "BSD-2-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-2-clause",
        "value": "https://api.github.com/licenses/bsd-2-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 2-Clause License\n\nCopyright (c) 2018, Bansal Lab\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HapCUT2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "vibansal"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 359710,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 351905,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 3567,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3117,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vibansal",
          "type": "User"
        },
        "date_created": "2022-10-14T21:50:21Z",
        "date_published": "2024-04-24T19:15:22Z",
        "description": "- updates to Makefile\r\n- updates to code for compatibility with new gcc version\r\n- linked read analysis using MI tags\r\n",
        "html_url": "https://github.com/vibansal/HapCUT2/releases/tag/v1.3.4",
        "name": "v1.3.4",
        "release_id": 152681290,
        "tag": "v1.3.4",
        "tarball_url": "https://api.github.com/repos/vibansal/HapCUT2/tarball/v1.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/vibansal/HapCUT2/releases/152681290",
        "value": "https://api.github.com/repos/vibansal/HapCUT2/releases/152681290",
        "zipball_url": "https://api.github.com/repos/vibansal/HapCUT2/zipball/v1.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tprodanov",
          "type": "User"
        },
        "date_created": "2020-11-27T17:21:37Z",
        "date_published": "2020-07-16T07:41:35Z",
        "description": "- fixes compiler warnings\r\n- some bug fixes\r\n- fixes prune_haplotype.py to output valid file",
        "html_url": "https://github.com/vibansal/HapCUT2/releases/tag/v1.3.3",
        "name": "v1.3.1",
        "release_id": 28619461,
        "tag": "v1.3.3",
        "tarball_url": "https://api.github.com/repos/vibansal/HapCUT2/tarball/v1.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/vibansal/HapCUT2/releases/28619461",
        "value": "https://api.github.com/repos/vibansal/HapCUT2/releases/28619461",
        "zipball_url": "https://api.github.com/repos/vibansal/HapCUT2/zipball/v1.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vibansal",
          "type": "User"
        },
        "date_created": "2020-05-12T00:08:38Z",
        "date_published": "2020-05-12T00:14:14Z",
        "html_url": "https://github.com/vibansal/HapCUT2/releases/tag/1ee1d58",
        "release_id": 26403751,
        "tag": "1ee1d58",
        "tarball_url": "https://api.github.com/repos/vibansal/HapCUT2/tarball/1ee1d58",
        "type": "Release",
        "url": "https://api.github.com/repos/vibansal/HapCUT2/releases/26403751",
        "value": "https://api.github.com/repos/vibansal/HapCUT2/releases/26403751",
        "zipball_url": "https://api.github.com/repos/vibansal/HapCUT2/zipball/1ee1d58"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vibansal",
          "type": "User"
        },
        "date_created": "2020-03-25T19:24:22Z",
        "date_published": "2020-03-25T19:21:50Z",
        "description": "This release: \r\n\r\n1. Uses fast logsum approximation for likelihood calculations that speeds up HapCUT2 by 7-8 times\r\n2. updates extracthairs for PacBio CCS/HiFi reads\r\n3. includes several bug fixes and reorganization of the code",
        "html_url": "https://github.com/vibansal/HapCUT2/releases/tag/8a4255f",
        "name": "v1.3",
        "release_id": 24864660,
        "tag": "8a4255f",
        "tarball_url": "https://api.github.com/repos/vibansal/HapCUT2/tarball/8a4255f",
        "type": "Release",
        "url": "https://api.github.com/repos/vibansal/HapCUT2/releases/24864660",
        "value": "https://api.github.com/repos/vibansal/HapCUT2/releases/24864660",
        "zipball_url": "https://api.github.com/repos/vibansal/HapCUT2/zipball/8a4255f"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjedge",
          "type": "User"
        },
        "date_created": "2019-11-06T04:37:31Z",
        "date_published": "2019-11-06T04:40:57Z",
        "description": "This release updates the htslib API calls, allowing extractHAIRs to be compiled with recent versions of htslib.",
        "html_url": "https://github.com/vibansal/HapCUT2/releases/tag/v1.2",
        "name": "v1.2",
        "release_id": 21243703,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/vibansal/HapCUT2/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/vibansal/HapCUT2/releases/21243703",
        "value": "https://api.github.com/repos/vibansal/HapCUT2/releases/21243703",
        "zipball_url": "https://api.github.com/repos/vibansal/HapCUT2/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjedge",
          "type": "User"
        },
        "date_created": "2019-04-22T20:00:08Z",
        "date_published": "2019-04-22T20:06:22Z",
        "description": "This is a new release of HapCUT2 that fixes bugs and significantly improves the allelotyping for long SMS reads. \r\nUse the following commands to download and compile this version:\r\n\r\ngit clone --recursive https://github.com/vibansal/hapcut2\r\ncd hapcut2\r\ngit checkout 3cb79c1\r\nmake",
        "html_url": "https://github.com/vibansal/HapCUT2/releases/tag/v1.1",
        "name": "v1.1",
        "release_id": 16905189,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/vibansal/HapCUT2/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/vibansal/HapCUT2/releases/16905189",
        "value": "https://api.github.com/repos/vibansal/HapCUT2/releases/16905189",
        "zipball_url": "https://api.github.com/repos/vibansal/HapCUT2/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vibansal",
          "type": "User"
        },
        "date_created": "2018-09-28T01:45:30Z",
        "date_published": "2018-11-13T19:10:57Z",
        "description": "\r\n\r\nThis is a release of the current version of HapCUT2, a haplotype assembly tool for diploid genomes using high-throughput sequence data. This is a stable version. Use the following commands to download and compile this version: \r\n\r\ngit clone --recursive https://github.com/vibansal/hapcut2\r\ncd hapcut2\r\ngit checkout 467734a\r\nmake ",
        "html_url": "https://github.com/vibansal/HapCUT2/releases/tag/467734a",
        "name": "v1.0",
        "release_id": 13967495,
        "tag": "467734a",
        "tarball_url": "https://api.github.com/repos/vibansal/HapCUT2/tarball/467734a",
        "type": "Release",
        "url": "https://api.github.com/repos/vibansal/HapCUT2/releases/13967495",
        "value": "https://api.github.com/repos/vibansal/HapCUT2/releases/13967495",
        "zipball_url": "https://api.github.com/repos/vibansal/HapCUT2/zipball/467734a"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "dependencies:",
        "parent_header": [
          "HapCUT2: robust and accurate haplotype assembly for diverse sequencing technologies"
        ],
        "type": "Text_excerpt",
        "value": "To install htslib directly from source: git clone https://github.com/samtools/htslib.git\n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "To Run:",
        "parent_header": [
          "HapCUT2: robust and accurate haplotype assembly for diverse sequencing technologies",
          "Input:"
        ],
        "type": "Text_excerpt",
        "value": "Assembling haplotypes requires two steps:\n\n(1) use extractHAIRS to convert BAM file to the compact fragment file format containing only haplotype-relevant information. This is a necessary precursor step to running HapCUT2. \n```\n./build/extractHAIRS [options] --bam reads.sorted.bam --VCF variants.vcf --out fragment_file\n```\n\n(2) use HAPCUT2 to assemble fragment file into haplotype blocks.\n```\n./build/HAPCUT2 --fragments fragment_file --VCF variants.vcf --output haplotype_output_file\n```\n\nIf you have data from different technologies or in different bam files for the same individual, run step (1) separately on each input bam file and combine the output fragment files into a single file that can be used as input in step (2). \n\nRun the programs without arguments to see all options.\n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:11:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 202
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example pipelines for various types of sequencing data",
        "parent_header": [
          "HapCUT2: robust and accurate haplotype assembly for diverse sequencing technologies"
        ],
        "type": "Text_excerpt",
        "value": "The directory **recipes** contains example pipelines to assemble haplotypes from various types of sequencing data.\n\n"
      },
      "source": "https://raw.githubusercontent.com/vibansal/HapCUT2/master/README.md",
      "technique": "header_analysis"
    }
  ]
}