{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AISKhalil/AStra"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-06-12T16:55:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-18T14:57:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An analytical and visualization platform for rapid and easy comparison between different strains or between cell lines through aneuploidy spectrum analysis (Khalil et. al.,  Cancer Informatics, 2021)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9698157677733333,
      "result": {
        "original_header": "AStra: An analytical and visualization platform for rapid and easy comparison between different strains or between cell lines through aneuploidy spectrum analysis",
        "type": "Text_excerpt",
        "value": "**AStra** is a Python-based software for de novo estimation of the genome-wide segmental aneuploidy to measure and visually interpret strain-level similarities or differences of cancer cell lines from whole-genome sequencing (WGS). **AStra** provides an analytical and visualization platform for rapid and easy comparison between different strains or between cell lines based on their aneuploidy spectra solely using the raw BAM files representing mapped reads. We recommend **AStra** for rapid first-pass quality assessment of cancer cell lines before integrating scientific datasets that employ deep sequencing. \nKhalil AIS, Chattopadhyay A, Sanyal A. Analysis of Aneuploidy Spectrum From Whole-Genome Sequencing Provides Rapid Assessment of Clonal Variation Within Established Cancer Cell Lines. Cancer Inform. 2021;20:11769351211049236. Published 2021 Oct 16. doi:10.1177/11769351211049236. PMID: 34671179.  \n**For a full description of the method and applications, please visit [AStra Manuscript](https://journals.sagepub.com/doi/pdf/10.1177/11769351211049236).** \n"
      },
      "source": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9090696208656083,
      "result": {
        "original_header": "<a name=\"usage\"></a>Usage",
        "type": "Text_excerpt",
        "value": "`AStra` is developed as a Python-class. Therefore, we added two scripts as simpler interfaces for AStra: **AStraSingleInput** and **AStraMultipleInputs**. In order to use `AStra`, you need to first activate the python virtual environment that you created before:\n```bash\ncd AStra\nsource AStraPythonEnv/bin/activate\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9598416977544213,
      "result": {
        "original_header": "<a name=\"output\"></a>Output",
        "type": "Text_excerpt",
        "value": "**AStra** generates many output files providing the detailed characterization of the aneuploidy profile \nof the input cell line. Results of the analyzed cell lines were uploaded in `AStraResults/` folder. \n>    **a. Aneuploidy characterization:** a text file containing the important features of aneuploidy profile of the input\n>    BAM such as cellular ploidy, whole-genome ploidy level, copy number reference (CNR), centralization error (CE), centralization score, \n>    read depth (RD)-median, RD-median/CNR, total counts of NGS reads, and aneuploidy spectrum (percentages of genomeic segments per CN-state).\n   \n>    **b. Chromosomal aneuploidy:** a narrowPeak BED format file of the approximated segmental aneuploidy of the \n>    complete genome for visualization in UCSC Genome Browser. \n>    **c. Aneuploidy profile:** a figure of the CN states of the genomic segments after setting the CN reference. \n>    For example, aneuploidy profile of A427 cell line is:\n![VCaP coverage plot](/AStraResults/A427_GenomeAneuploidyWithChrsMarkers.png)\n \n>    **d. Aneuploidy spectrum:** a figure of the frequency distribution of the input sequencing data. In the frequency distribution,\n>    the red line denotes the RD median whereas the dotted black lines denote the CN states. \n>    For example, aneuploidy spectrum of A427 cell line is:\n![VCap anueploidy spectrum](/AStraResults/A427_200bin_GenomeHistogram.png)\n \n \n"
      },
      "source": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AISKhalil/AStra/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AISKhalil/AStra/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AISKhalil/AStra"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AStra: An analytical and visualization platform for rapid and easy comparison between different strains or between cell lines through aneuploidy spectrum analysis"
      },
      "source": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AISKhalil/AStra/master//AStraResults/A427_200bin_GenomeHistogram.png"
      },
      "source": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.999999999064336,
      "result": {
        "original_header": "<a name=\"Download\"></a>Download",
        "type": "Text_excerpt",
        "value": "```bash\ncd ~\ngit clone https://github.com/AISKhalil/AStra.git\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999998945442212,
      "result": {
        "original_header": "<a name=\"installation\"></a>Installation",
        "type": "Text_excerpt",
        "value": "User can create \"Python virtual environment\" and install the required libraries using the following commands. \n- Make sure pip3 is installed. If not, then please check your distribution's documentation and install it. In Ubuntu 18.04 LTS you can do:\n```bash\nsudo apt update\nsudo apt install python3-pip\npip3 install --upgrade pip\n```\n- Go to the AStra folder, create and activate a new virtual environment\n```bash\ncd AStra\nsudo apt-get install python3-venv\npython3 -m venv AStraPythonEnv\nsource AStraPythonEnv/bin/activate\n```\n- Install dependencies: please make sure you have installed all the libraries/headers. In Ubuntu 18.04 LTS you can do:\n```bash\nsudo apt install python3-tk\nsudo apt install zlib1g zlib1g-dev zlib1g-dbg liblzma-dev libbz2-dev\npip3 install wheel\npip3 install numpy\npip3 install scipy\npip3 install pandas\npip3 install cython\npip3 install h5py\npip3 install matplotlib\npip3 install ruptures\npip3 install scikit-learn\npip3 install hmmlearn\npip3 install pysam\npip3 install pysamstats\npip3 install numexpr\npip3 install xlsxwriter\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999999673467638,
      "result": {
        "original_header": "<a name=\"usage\"></a>Usage",
        "type": "Text_excerpt",
        "value": "`AStra` is developed as a Python-class. Therefore, we added two scripts as simpler interfaces for AStra: **AStraSingleInput** and **AStraMultipleInputs**. In order to use `AStra`, you need to first activate the python virtual environment that you created before:\n```bash\ncd AStra\nsource AStraPythonEnv/bin/activate\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AISKhalil/AStra/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AISKhalil/AStra/master//AStraResults/A427_GenomeAneuploidyWithChrsMarkers.png"
      },
      "source": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AStra"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "AISKhalil"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 67885,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1) Running AStra on single input:",
        "parent_header": [
          "AStra: An analytical and visualization platform for rapid and easy comparison between different strains or between cell lines through aneuploidy spectrum analysis",
          "Contents",
          "<a name=\"usage\"></a>Usage"
        ],
        "type": "Text_excerpt",
        "value": "```bash\npython ./AStraSingleInput.py -b input.bam -f hg19.ucsc.fa -o AStraResults\n```\n\nThere are three required parameters: the input BAM file (`-b` or `--bam`), the reference genome (`-f` or `--fa`), and the output folder (`-o` or `--out`) that will be used to generate the output files.\n\n```bash\n######\nusage: AStraSingleInput.py -b input.bam -f hg19.ucsc.fa -o AStraResults\n\narguments:\n  -b, --bam             the input sorted BAM file. If not sorted, you can use samtools to sort it (\"samtools sort input.bam > input.sorted.bam\").\n  -f, --fa              the fasta file of the reference genome. For human hg19, you can download from http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz.\n  -o, --out             the folder path to keep the results of AStra.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2) Running AStra on multiple bam files:",
        "parent_header": [
          "AStra: An analytical and visualization platform for rapid and easy comparison between different strains or between cell lines through aneuploidy spectrum analysis",
          "Contents",
          "<a name=\"usage\"></a>Usage"
        ],
        "type": "Text_excerpt",
        "value": "```bash\npython ./AStraMultipleInputs.py\n```\n\nYou can modify this script to add the path of many BAM files. Besides to the default output files, this script outputs an excel file contains the complete profile of all BAM files (profile of each BAM file in a row). Each row contains fields of 1: cellular ploidy, 2: copy number reference (CNR), 3: centralization error (CE), 4: centralization score, 5: read depeth (RD)-median, 6: RD-median/CNR, 7: total counts of NGS reads, 8-18: aneuploidy spectrum (percentages of genomic segments per CN-state), 19: whole-genome ploidy level, 20: AStra model, and 21-26: CEs for all models (m1-m6). This eases the analysis of large number of BAM files.\n\n"
      },
      "source": "https://raw.githubusercontent.com/AISKhalil/AStra/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:59:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}