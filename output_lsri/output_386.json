{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xxy45/DSGAT"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "If you have any questions or suggestions with the code, please let us know. Contact Xianyu Xu at xxy45@tust.edu.cn"
      },
      "source": "https://raw.githubusercontent.com/xxy45/DSGAT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-10-02T19:55:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-15T12:04:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Here we propose a novel end-to-end approach named DSGAT for drug-side effect frequency prediction by using graph attention networks (GAT) . DSGAT learns the drug representation from the molecular graph, and has the ability to predict the frequencies of side effects for cold start drugs that do not appear in the training data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9625537047114064,
      "result": {
        "original_header": "DSGAT",
        "type": "Text_excerpt",
        "value": "Here we propose a novel end-to-end approach named DSGAT for drug-side effect frequency prediction by using graph \nattention networks (GAT) . DSGAT learns the drug representation from the molecular graph, and has the ability to \npredict the frequencies of side effects for cold start drugs that do not appear in the training data. \n"
      },
      "source": "https://raw.githubusercontent.com/xxy45/DSGAT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9250162913467845,
      "result": {
        "original_header": "Files:",
        "type": "Text_excerpt",
        "value": "This folder contains our original side effects and drugs data. \n\n* **Supplementary Data 2.txt:**  \nThe postmarketing drug side effect associations from SIDER and OFFSIDES.\n   \n* **Supplementary Data 3.txt:**  \nMain or High\u2010Level Term (HLT) Medical Dictionary for Regulatory Activities (MedDRA) terminology classification for each side effect term.\n   \n* **Supplementary Data 4.txt:**  \nHigh\u2010Level Group Term Medical Dictionary for Regulatory Activities (MedDRA) terminology classification for each side effect term.\n   \n\n2.data_WS/data_ICS/data_750+9\n* **mask_mat.mat**   \nThe file is a mark that randomly divides all positive samples into 10 and generates training sets and test sets for cross validation. If this file is missing, it will be randomly generated again when the code runs. \n\n* **robustness_test.mat**     \nThe test set samples randomly selected in the robustness test, in which the number of test sets is 10% of all drugs. If this file is missing, the code is regenerated at run time. \n\n* **raw_frequency_750.mat**  \nThe original frequency matrix of side effects of 750 drugs, including frequency matrix 'R', drug name 'drugs' and side effect name' sideeffect '. \n\n* **frequency_750+9.mat**      \nThe original frequency matrix of side effects of drugs in 750 drugs and 9 independent test sets, and the position of 9 drugs is before 750 drugs.\n   \n\n* **drug_SMILES_750.csv**   \nSMILES of 750 drugs. \n\n* **drug_SMILES_759.csv**   \nSMILES files for 750 initial drugs and 9 independent test sets, and the position of 9 drugs is before 750 drugs.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xxy45/DSGAT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9944286590960466,
      "result": {
        "original_header": "Code",
        "type": "Text_excerpt",
        "value": "smiles2vector.py: It defines a method to calculate the smiles of drugs as vertices and edges of a graph. \n"
      },
      "source": "https://raw.githubusercontent.com/xxy45/DSGAT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xxy45/DSGAT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xxy45/DSGAT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xxy45/DSGAT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DSGAT"
      },
      "source": "https://raw.githubusercontent.com/xxy45/DSGAT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8472058731046963,
      "result": {
        "original_header": "Code",
        "type": "Text_excerpt",
        "value": "WS_v4.py: Warm start test of 750 drugs. \nICS.py: Cold start test of 750 drugs \nRobustness.py: Robustness test of cold start prediction. \n"
      },
      "source": "https://raw.githubusercontent.com/xxy45/DSGAT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xxy45/DSGAT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DSGAT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "xxy45"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 122338,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xxy45/DSGAT/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "* python == 3.8.5\n* pytorch == 1.6\n* Numpy == 1.21.0\n* scikit-learn == 0.23.2\n* scipy == 1.5.0\n* rdkit == 2020.03.6\n* matplotlib == 3.3.1\n* networkx == 2.5\n"
      },
      "source": "https://raw.githubusercontent.com/xxy45/DSGAT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run",
        "type": "Text_excerpt",
        "value": "\nmodel: Define the model used.\n\nepoch: Define the number of epochs.\n\nlr: Define the learning rate.\n\nlamb: Define weights for unknown associations.\n\neps: Define the difference between the forecast score and the label.\n\ntrain_batch: Define the number of batch size for training and testing.\n\ntenfold: Use ten fold cross validation\n\nExample:\n```bash\npython WS_v4.py --tenfold --save_model --epoch 3000 --lr 0.0001\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xxy45/DSGAT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:43:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}