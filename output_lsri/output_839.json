{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bcthomas/pullseq"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2012-04-27T22:29:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-27T07:03:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Utility program for extracting sequences from a fasta/fastq file"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8812999497557368,
      "result": {
        "type": "Text_excerpt",
        "value": "Software to extract sequence from a fasta or fastq. Also filter\nsequences by a minimum length or maximum length. Fast, written in C,\nusing kseq.h library. \n  pullseq - extract sequences from a fasta/fastq file.  This program is\n  fast, and can be useful in a variety of situations.  You can use it to\n  extract sequences from one fasta/fastq file into a new file, given\n  either a list of header ids to include or a regular expression\n  pattern to match.  Results can be included (default) or excluded,\n  and they can additionally be filtered with minimum / maximum sequence\n  lengths. \n  Additionally, it can convert from fastq to fasta or visa-versa and\n  can change the length of the output sequence lines. \n  Options:\n    -i, --input,       Input fasta/fastq file (required)\n    -n, --names,       File of header id names to search for\n    -N, --names_stdin, Use STDIN for header id names\n    -g, --regex,       Regular expression to match (PERL compatible; always case-insensitive)\n    -m, --min,         Minimum sequence length\n    -a, --max,         Maximum sequence length\n    -l, --length,      Sequence characters per line (default 50)\n    -c, --convert,     Convert input to fastq/fasta (e.g. if input is fastq, output will be fasta)\n    -q, --quality,     ASCII code to use for fasta->fastq quality conversions\n    -e, --excluded,    Exclude the header id names in the list (-n)\n    -t, --count,       Just count the possible output, but don't write it\n    -h, --help,        Display this help and exit\n    -v, --verbose,     Print extra details during the run\n    --version,         Output version information and exit \nREQUIREMENTS:\n  Pullseq/Seqdiff require a C compiler and has been tested to work with\n  either GCC or clang. They also require (and include) kseq.h (Heng\n  Li) and uthash.h (http://troydhanson.github.com/uthash/). \n  NOTE: If you have PCRE (perl-compatible regular expression library)\n  installed in a non-standard location (e.g. on a mac using brew), the\n  ./configure script will fail. You'll need to update your CFLAGS and\n  LDFLAGS env settings to define where your PCRE library files were\n  installed. \n  If your pcre library is installed somewhere else, you just update\n  the CFLAGS env variable accordingly.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcthomas/pullseq/master/README",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/bcthomas/pullseq/wiki"
      },
      "source": "https://raw.githubusercontent.com/bcthomas/pullseq/master/README",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bcthomas/pullseq/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bcthomas/pullseq/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bcthomas/pullseq"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/bcthomas/pullseq/master/README",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.997581045860262,
      "result": {
        "type": "Text_excerpt",
        "value": "  Options:\n    -1, --first,      First sequence file (required)\n    -2, --second,     Second sequence file (required)\n    -a, --a_output,   File name for uniques from first file\n    -b, --b_output,   File name for uniques from second file\n    -c, --c_output,   File name for common entries\n    -d, --headers,    Compare headers instead of sequences (default: false)\n    -s, --summary,    Just show summary stats? (default: false)\n    -h, --help,       Display this help and exit\n    -v, --verbose,    Print extra details during the run\n    --version,        Output version information and exit \nREQUIREMENTS:\n  Pullseq/Seqdiff require a C compiler and has been tested to work with\n  either GCC or clang. They also require (and include) kseq.h (Heng\n  Li) and uthash.h (http://troydhanson.github.com/uthash/). \n  kseq.h also requires Zlib (so your linker should be able to handle\n  the '-lz' option).  You can obtain zlib from http://www.zlib.net/\n  or commonly from your OS package manager (e.g. apt-get zlib or\n  emerge zlib). \nINSTALL:\n  To install, do the following in a shell on your system... \n  From Git:\n  git clone https://github.com/bcthomas/pullseq.git # checkout the code using git\n  cd pullseq\n  ./bootstrap  # get set up for config/build after cloning\n  ./configure  # configure the application based on your system\n  make         # will build the application\n  make install # will install in /usr/local by default \n  From a Release file (tar or zip):\n  tar xvf pullseq_version.tar.gz\n  cd pullseq_version\n  ./autoconf   # make sure configuration is set\n  ./configure  # configure the application based on your system\n  make         # will build the application\n  make install # will install in /usr/local by default \n  NOTE: If you have PCRE (perl-compatible regular expression library)\n  installed in a non-standard location (e.g. on a mac using brew), the\n  ./configure script will fail. You'll need to update your CFLAGS and\n  LDFLAGS env settings to define where your PCRE library files were\n  installed. \n  For example, on a mac with pcre installed by brew, you can do this: \n  pcre-config --cflags\n  -I/usr/local/Cellar/pcre/8.39/include\n  \n  Then you can just add this to a env CFLAGS variable and run the\n  configure command, like so... \n  export CFLAGS=\"-I/usr/local/Cellar/pcre/8.39/include\"\n  ./configure \n  If your pcre library is installed somewhere else, you just update\n  the CFLAGS env variable accordingly.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcthomas/pullseq/master/README",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8411998864892636,
      "result": {
        "type": "Text_excerpt",
        "value": " pullseq -i <input fasta/fastq file> -n <header names to select> \n pullseq -i <input fasta/fastq file> -t \n cat <names to select from STDIN> | pullseq -i <input fasta/fastq file> -N \nUsage:\n  seqdiff -1 <first input fasta/fastq file> -2 <second fasta/fastq file> \n  Options:\n    -1, --first,      First sequence file (required)\n    -2, --second,     Second sequence file (required)\n    -a, --a_output,   File name for uniques from first file\n    -b, --b_output,   File name for uniques from second file\n    -c, --c_output,   File name for common entries\n    -d, --headers,    Compare headers instead of sequences (default: false)\n    -s, --summary,    Just show summary stats? (default: false)\n    -h, --help,       Display this help and exit\n    -v, --verbose,    Print extra details during the run\n    --version,        Output version information and exit \n"
      },
      "source": "https://raw.githubusercontent.com/bcthomas/pullseq/master/README",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bcthomas/pullseq/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pullseq"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bcthomas"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 121282,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2783,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 1803,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 650,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 381,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bcthomas/pullseq/master/README"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcthomas",
          "type": "User"
        },
        "date_created": "2015-09-01T19:56:57Z",
        "date_published": "2015-09-01T20:02:03Z",
        "description": "v1.0.2 - Fasta header bugfix\n",
        "html_url": "https://github.com/bcthomas/pullseq/releases/tag/1.0.2",
        "name": "Pullseq Release 1.0.2",
        "release_id": 1752956,
        "tag": "1.0.2",
        "tarball_url": "https://api.github.com/repos/bcthomas/pullseq/tarball/1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/bcthomas/pullseq/releases/1752956",
        "value": "https://api.github.com/repos/bcthomas/pullseq/releases/1752956",
        "zipball_url": "https://api.github.com/repos/bcthomas/pullseq/zipball/1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bcthomas",
          "type": "User"
        },
        "date_created": "2014-08-13T17:15:05Z",
        "date_published": "2014-08-13T17:30:03Z",
        "description": "launch of v1.0.0, includes regex matching. Linux64 binaries are available.\n",
        "html_url": "https://github.com/bcthomas/pullseq/releases/tag/v1.0.0",
        "name": "Pullseq Release 1.0.0",
        "release_id": 489261,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/bcthomas/pullseq/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bcthomas/pullseq/releases/489261",
        "value": "https://api.github.com/repos/bcthomas/pullseq/releases/489261",
        "zipball_url": "https://api.github.com/repos/bcthomas/pullseq/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:33:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 36
      },
      "technique": "GitHub_API"
    }
  ]
}