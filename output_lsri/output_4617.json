{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chjiao/VirBin"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-10-18T05:32:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-07T15:14:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9504363493971,
      "result": {
        "original_header": "VirBin",
        "type": "Text_excerpt",
        "value": "Binning tools for strain-level viral contigs. The input to this program should be the contigs obtained from an assembly tool. We recommend to use PEHaplo (https://www.ncbi.nlm.nih.gov/pubmed/29617936) because it is opimized for assembling viral strains. Our tests also showed that PEHaplo's output can lead to better performance for viral contig binning.  \nThe output of this program are several sets of contigs. Each set corresponds to one haplotype (strain). The number of sets represent the number of haplotypes in the input data set.  \nThe method is essentially an EM algorithm. However, we created \"windows\" rather than whole contigs as input to the EM algorithm. The contigs have highly heterogeneous coverage because some parts are unique to a haplotype and some parts are common regions to multiple haplotypes. Our method employs sequence alignment between contigs to distinguish these cases. \n \n"
      },
      "source": "https://raw.githubusercontent.com/chjiao/VirBin/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chjiao/VirBin/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chjiao/VirBin/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chjiao/VirBin"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VirBin"
      },
      "source": "https://raw.githubusercontent.com/chjiao/VirBin/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chjiao/VirBin/master/tools/reads_align_on_contigs.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "Directly download the repository from github:   \n```\ngit clone https://github.com/chjiao/VirBin.git\n```\n"
      },
      "source": "https://raw.githubusercontent.com/chjiao/VirBin/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9762835779287313,
      "result": {
        "original_header": "Pipeline steps",
        "type": "Text_excerpt",
        "value": "3. Align contigs on reference genomes (for evaluation only)   \n```\npython ./tools/get_locations_two_fas_blastn.py contig.fa reference.fa contig_ref_align.blastn\n```\n4. Run get_cluster_number.py (option)\nIf you **only** want to know the number of cluster, you can run the following command.\nBASH3* \n5. Run VirBin.py\nVirBin will automatically decide the number of cluster. So you can run the program without the number of cluster using the following command.\n```\npython VirBin.py -contig contig.fa -align contig_align.blastn -vcf Reads_align_on_contig.vcf -ref contig_ref_align.blastn\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/chjiao/VirBin/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.830426787872121,
      "result": {
        "original_header": "Pipeline steps",
        "type": "Text_excerpt",
        "value": "2. Alignment between contigs\n```\npython ./tools/get_locations_single_blastn.py contig.fa contig_align.blastn\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/chjiao/VirBin/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chjiao/VirBin/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VirBin"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "chjiao"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 157392,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 781,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chjiao/VirBin/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "The whole pipeline"
        ],
        "type": "Text_excerpt",
        "value": "1. Install Python 2.7.x\n2. Install Python module: networkx, numpy\n"
      },
      "source": "https://raw.githubusercontent.com/chjiao/VirBin/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running example",
        "parent_header": [
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "You can test your program by running the following commands:\n```\ncd VirBin   \npython VirBin.py -contig data/hiv5_contigs.fa -align data/hiv5_contigs_align.blastn -vcf data/hiv5_contig_align_0.9.vcf  -ref data/hiv5_ref_align.blastn   \n```\nIf everything is good, you will see the information below on your terminal\n```\nnumber of cluter: 5\nlength of the windows: 143\nlength of the groups duplicate windows: 68\nIteration: 4  \n```\nAfter running the commands above, there are four output files: contigs_windows.txt, windows_all.txt, preprocessed.blastn, EM_clusters.txt. The information of each windows is stored in contigs_windows.txt and windows_all.txt. The information of the final clusters is stored in EM_clusters.txt.\n"
      },
      "source": "https://raw.githubusercontent.com/chjiao/VirBin/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:04:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "type": "Text_excerpt",
        "value": "To quickly testing the core clustering algorithm, we have prepared the processed data set in folder *data/*.\n"
      },
      "source": "https://raw.githubusercontent.com/chjiao/VirBin/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running example",
        "parent_header": [
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "You can test your program by running the following commands:\n```\ncd VirBin   \npython VirBin.py -contig data/hiv5_contigs.fa -align data/hiv5_contigs_align.blastn -vcf data/hiv5_contig_align_0.9.vcf  -ref data/hiv5_ref_align.blastn   \n```\nIf everything is good, you will see the information below on your terminal\n```\nnumber of cluter: 5\nlength of the windows: 143\nlength of the groups duplicate windows: 68\nIteration: 4  \n```\nAfter running the commands above, there are four output files: contigs_windows.txt, windows_all.txt, preprocessed.blastn, EM_clusters.txt. The information of each windows is stored in contigs_windows.txt and windows_all.txt. The information of the final clusters is stored in EM_clusters.txt.\n"
      },
      "source": "https://raw.githubusercontent.com/chjiao/VirBin/master/README.md",
      "technique": "header_analysis"
    }
  ]
}