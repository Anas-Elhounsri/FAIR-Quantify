{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/colabobio/sciviewer"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-05-20T14:41:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-08T22:22:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9858947317364336,
      "result": {
        "original_header": "Single Cell Interactive Viewer (Sciviewer)",
        "type": "Text_excerpt",
        "value": "This is an interactive viewer for 2D embeddings such as [UMAP](https://umap-learn.readthedocs.io/en/latest/) or [tSNE](https://lvdmaaten.github.io/tsne/) of high dimensional single-cell RNA-seq data that is run directly out of the [Jupyter Notebook](https://jupyter.org/) environment. The user can select cells in the 2D plane and the viewer will calculate the differential expression between the selected and the unselected cells. Alternatively, the user can select a group of cells and a direction and the viewer will identify the genes with the greatest variation (Pearson correlation) along that direction. See a video of how this works below. Also, see the example tutorial in this repository (a small example of [3000 PBMCs](tutorials/sciviewer_example_3K_PBMC.ipynb) that illustrates all the input options, and a larger one of [50,000 circulating T-cells](tutorials/sciviewer_example_50K_Tcell.ipynb)). \n***Important note:*** The code here is an initial proof-of-concept, the development of Sciviewer continues by extending [anywidget](https://anywidget.dev/), [regl-scatterplot](https://github.com/colabobio/regl-scatterplot), and [jupyter-scatter](https://github.com/colabobio/jupyter-scatter) to recreate it as a fully-featured visualization tool for Jupyter notebooks and completely integrated into the [scverse](https://scverse.org/) ecosystem: \n![image](https://github.com/user-attachments/assets/59c2da50-7e09-4a14-a42c-2facba8c1779)\n*Mockup of the next version of Sciviewer based on anywidget, regl-scatterplot, and jupyter-scatter*\n \n"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9149004388349778,
      "result": {
        "original_header": "Development / debugging",
        "type": "Text_excerpt",
        "value": "For development purposes, it can be helpful to import sciviewer directly rather than installing the package. See the extras/debugging directory for notebooks with examples of how to do this e.g. [debug_example_3K_PBMC.ipynb](extras/debugging/debug_example_3K_PBMC.ipynb).\n \n"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8507260697057085,
      "result": {
        "original_header": "Publications",
        "type": "Text_excerpt",
        "value": "* Kotliar D, Colubri A. Sciviewer enables interactive visual interrogation of single-cell RNA-Seq data from the python programming environment. (2021). Bioinformatics. doi: [10.1093/bioinformatics/btab689](https://academic.oup.com/bioinformatics/article/37/21/3961/6380550)\n* Kotliar D, Colubri A. Sciviewer enables interactive visual interrogation of single-cell RNA-Seq data from the Python programming environment. (2021). bioRxiv. doi: [10.1101/2021.08.12.455997](https://www.biorxiv.org/content/10.1101/2021.08.12.455997v1) (preprint)\n \n"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/colabobio/sciviewer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/colabobio/sciviewer/main/tutorials/sciviewer_example_160K_PBMC.ipynb"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/tutorials/sciviewer_example_160K_PBMC.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/colabobio/sciviewer/main/tutorials/sciviewer_example_3K_PBMC.ipynb"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/tutorials/sciviewer_example_3K_PBMC.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/colabobio/sciviewer/main/tutorials/sciviewer_example_50K_Tcell.ipynb"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/tutorials/sciviewer_example_50K_Tcell.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/colabobio/sciviewer/main/extras/debugging/debug_example_3K_PBMC.ipynb"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/extras/debugging/debug_example_3K_PBMC.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/colabobio/sciviewer/main/extras/debugging/debug_example_50K_Tcell.ipynb"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/extras/debugging/debug_example_50K_Tcell.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/colabobio/sciviewer/main/extras/prepare_data/process_50k_Tcells_20210706.ipynb"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/extras/prepare_data/process_50k_Tcells_20210706.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/colabobio/sciviewer/main/extras/prepare_data/process_160k_pbmcs_citeseq.ipynb"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/extras/prepare_data/process_160k_pbmcs_citeseq.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/colabobio/sciviewer/main/extras/prepare_data/process_3k_pbmc_20210324.ipynb"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/extras/prepare_data/process_3k_pbmc_20210324.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/colabobio/sciviewer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "colabobio/sciviewer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Single Cell Interactive Viewer (Sciviewer)"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/user-attachments/assets/59c2da50-7e09-4a14-a42c-2facba8c1779"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://img.youtube.com/vi/YgvMmvgFFE0/maxresdefault.jpg"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Single Cell Interactive Viewer (Sciviewer)"
        ],
        "type": "Text_excerpt",
        "value": "The main requirement for sciviewer is [py5](http://py5.ixora.io/install/) which in turn requires Python 3.8. We recommend using the conda package manager to install the necessary dependencies fo sciviewer. Conda can be installed following the instructions [here](https://docs.conda.io/en/latest/miniconda.html). Then follow the steps below to install sciviewer.\n\n1. Prepare and activate the conda environment containing dependencies for py5:\n\n```\nconda env create -n sciviewer -f https://raw.githubusercontent.com/colabobio/sciviewer/master/sciviewer-env.yml\nconda activate sciviewer\n```\nAlternatively, if you want to append the needed dependencies to an existing conda environment, instead of creating a new one, you can do the following:\n\n```\nconda env update -n your_existing_environment -f https://raw.githubusercontent.com/colabobio/sciviewer/master/sciviewer-env.yml\nconda activate your_existing_environment\n```\n\nNote, Sciviewer currently requires Python 3.8 or greater.\n\n2. Install OpenJDK 1.7. Py5 does not work with OpenJDK 11, which is the one available through Conda at the moment. After creating an activating the sciviewer environment, there are two options:\n\n* If you already have OpenJDK 17 installed in your system, you can make it available to sciviewer by setting the JAVA_HOME environmental variable. For instance, if you installed [Adoptium OpenJDK 17](Adoptium), the home folder should be ```/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home``` so you can get the JAVA_HOME as follows:\n\n```\n export JAVA_HOME=/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home\n```\n\n* Otherwise, you can install OpenJDK 17 as explained in Py5's [Anaconda setup](http://py5.ixora.io/content/install.html#brief-steps).\n\n\n3. Next, install the sciviewer package using pip:\n```\npip install sciviewer\n```\n\nAnd that is it, the module is now installed and ready to be used.\n\nTo uninstall, use:\n```\npip uninstall sciviewer\n```\n\n3. Now launch jupyter from within the activated conda environment and you are good to go.\n\n```\njupyter lab\n```\n"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9990861045465091,
      "result": {
        "original_header": "Development / debugging",
        "type": "Text_excerpt",
        "value": "For development purposes, it can be helpful to import sciviewer directly rather than installing the package. See the extras/debugging directory for notebooks with examples of how to do this e.g. [debug_example_3K_PBMC.ipynb](extras/debugging/debug_example_3K_PBMC.ipynb).\n \n"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/colabobio/sciviewer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Andres Colubri and Dylan Kotliar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sciviewer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "colabobio"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 5302720,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 49823,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://umap-learn.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://scanpy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:18:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "parent_header": [
          "Single Cell Interactive Viewer (Sciviewer)"
        ],
        "type": "Text_excerpt",
        "value": "Sciviewer is executed from a Jupyter notebook such as in the examples directory. It is run by initializing a SCIViewer object with the 2D embedding (# cells X 2) and the expression data (# cells X # genes) and then running the explore_data method. E.g.\n\n```\nfrom sciviewer import SCIViewer\nsvobj = SCIViewer(expr, umap)\nsvobj.explore_data()\n```\n\nRunning the code above will cause the visualizer to appear. The umap and expression data can also now be provided directly as a [Scanpy AnnData](https://scanpy.readthedocs.io/en/stable/usage-principles.html#anndata), see below or [tutorials](./tutorials/sciviewer_example_3K_PBMC.ipynb) for details.\n\nClick the video link below for a ~3 minute tutorial on how to use the visualizer:\n[![Watch the video](https://img.youtube.com/vi/YgvMmvgFFE0/maxresdefault.jpg)](https://youtu.be/YgvMmvgFFE0)\n\nNote, if you are running Sciviewer from the Jupyter notebook as in the tutorials, you need to load the py5 magic extension before you can start the visualizer\n\n```\n%load_ext py5\n```\n\nand if you are running it from a jupyter notebook on a mac computer, you need to add an additional magic extension\n\n```\n%gui osx\n```\n"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Some key usage points:",
        "parent_header": [
          "Single Cell Interactive Viewer (Sciviewer)"
        ],
        "type": "Text_excerpt",
        "value": " - __Inputs__: The expression data can be provided as a Scanpy AnnData, Pandas DataFrame, a Numpy ndarray, or as a scipy sparse [csc_matrix](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.csr_matrix.html).\n - __AnnData expression__: For AnnData objects, the expression data are accessed from the .X attribute by default. Setting the use_raw argument to True causes it to be accessed from the .raw.X attribute instead. If the data are sparse, sciviewer requires it to be in the csc_matrix format. See the tutorial for how to convert between sparse matrix formats\n - __Sparsity__: Providing the data as a sparse csc_matrix is recommended for large datasets as it can lead to a considerable (1-2 order or magnitude) performance speedup. See [this notebook](./tutorials/sciviewer_example_3K_PBMC.ipynb) as an example.\n - __Gene/cell names__: If the expression data is provided as a Pandas DataFrame, the cell names are inferred from the index and the gene names are inferred from the columns. If it is provided as a Scanpy AnnData, the gene names come from the index of the .var attribute and the cell names come from the index of the .obs attribute. Otherwise, the gene names and cell names can be provided when initializing the SCIViewer class with the gene_names and cell_names arguments, or will be initialized with generic names. \n - __Real time updating of python variables__ The selected_cells attribute of the sciviewer object is updated whenever a new set of cells are selected, regardless of the mode, and contains information about the selected cells. The results_proj_correlation attribute of the sciviewer object is updated whenever a new selection is made in the \"directional\" mode and contains the Pearson correlation and P-values of all genes for the selected direction and cells. The results_diffexpr attribute is updated when a new selection is made in the \"differential\" mode and contains the T-statistic and P-value for the differential expression test (simple Welch's T-test). These are updated in real time as the visualizer is in use.\n\nSee the tutorial notebooks for more details\n"
      },
      "source": "https://raw.githubusercontent.com/colabobio/sciviewer/main/README.md",
      "technique": "header_analysis"
    }
  ]
}