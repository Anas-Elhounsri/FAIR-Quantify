{
  "application_domain": [
    {
      "confidence": 19.86,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "easyXpress <img src=\"man/figures/logo.png\" alt=\"hex\" align = \"right\" width=\"130\" />",
          "Package Overview"
        ],
        "type": "Text_excerpt",
        "value": "Please cite the following in publications that use `easyXpress`:"
      },
      "source": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0252000\">PLoS ONE</a> <a href=\"https://pubmed.ncbi.nlm.nih.gov/34383778/\">PubMed</a>",
        "parent_header": [
          "easyXpress <img src=\"man/figures/logo.png\" alt=\"hex\" align = \"right\" width=\"130\" />",
          "Package Overview",
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "\n"
      },
      "source": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AndersenLab/easyXpress"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-22T23:38:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-17T18:04:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "easyXpress is an R package for the analysis and visualization of high-throughput image-based nematode data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9995552127816533,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "This package is designed for reading, processing, and visualizing of nematode morphology data extracted from images using CellProfiler's WormToolbox.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9684339447874611,
      "result": {
        "original_header": "Directory structure",
        "type": "Text_excerpt",
        "value": "The directory structure holding data is critically important. Below is an example of a correct project directory structure. \nThe `cp_data` directory contains an `.RData` file output by `cellprofiler-nf`. The `processed_images` directory contains `_overlay.png` files output by `cellprofiler-nf`. There should be one `.png` file for each well included in your analysis. The `design` directory contains a `.csv` with all the variables necessary to describe your experiment (i.e. experiment names, drug names, drug concentrations, strain names, food types, etc.).    \n  \nIf you do not have condition information you do not need the `design` directory.\n```\n/projects/20200812_example\n\u251c\u2500\u2500 cp_data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 CellProfiler-Analysis_20191119_example_data.RData\n\u2514\u2500\u2500 processed_images\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 20191119-growth-p01-m2x_A01_overlay.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 20191119-growth-p01-m2x_A02_overlay.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 20191119-growth-p01-m2x_A03_overlay.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ...    \n\u251c\u2500\u2500 design\n    \u2514\u2500\u2500 20191119_design.csv\n```\nThis directory exhibits the minimal file content and naming for the easyXpress package to work.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9440043503972492,
      "result": {
        "original_header": "Project directory",
        "type": "Text_excerpt",
        "value": "The project directory contains all of the files attached to a specific experiment conducted on a specific date. \nThe naming convention for these folders should include the date in the format 4-digit year::2-digit month::2-digit day \nand experiment name separated by underscores. \n```\n# Example directory name\n# Date is January 1st, 2020\n# Experiment name is \"ExperimentName\"\n\n20200101_ExperimentName/\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.947488738762832,
      "result": {
        "original_header": "File naming",
        "type": "Text_excerpt",
        "value": "The processed image files should be formatted with the experiment data, name of the experiment, the plate number, the magnification used for imaging, and the well name. All processed image files must be saved as `.png` files. In the file named `20191119-growth-p01-m2x_A01_overlay.png` the first section `20191119` is the experiment date, `growth` is the name of the experiment, `p01` is the plate number, `m2x` is the magnification used for imaging, and `A01` is the well name.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9419120376015889,
      "result": {
        "original_header": "Package Overview",
        "type": "Text_excerpt",
        "value": "The `easyXpress` package consists of six function classes that work together to clean and process experimental data. The `tidy` functions will help pre-process raw images to get them ready for submission to the `cellprofiler-nf` pipeline. The `ObjectFlag` or `OF` functions help to flag problematic data output from `cellprofiler-nf`. The `WellFlag` or `WF` functions work to flag anomalous summary statistics for micro-plate wells. Throughout the data cleaning workflow, the `check` and `view` function classes are used to validate whether the flag functions are properly applied. All other functions serve to facilitate the cleaning process and do not have a standardized naming convention. \n"
      },
      "source": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AndersenLab/easyXpress/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AndersenLab/easyXpress/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AndersenLab/easyXpress/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AndersenLab/easyXpress"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "easyXpress "
      },
      "source": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "easyXpress <img src=\"man/figures/logo.png\" alt=\"hex\" align = \"right\" width=\"130\" />"
        ],
        "type": "Text_excerpt",
        "value": "`easyXpress` is specialized for use with image data produced by the [`cellprofiler-nf` nextflow pipeline](https://github.com/AndersenLab/cellprofiler-nf). To install `easyXpress` you will need the [`devtools`](https://github.com/hadley/devtools) package. You can install `devtools` and `easyXpress` using the commands below:\n\n```r\ninstall.packages(\"devtools\")\ndevtools::install_github(\"AndersenLab/easyXpress\")\n```\nOS X installations of `easyXpress` require `XQuartz` to be installed. Follow the instructions [here to install XQuartz](https://www.xquartz.org/).\n\nThe functionality of the package can be broken down into three main goals:\n\n+ Reading data generated from CellProfiler pipelines alongside information about experimental design.\n\n+ Flagging and pruning anomalous data points.\n\n+ Generating diagnostic images.\n\nFor more information about implementing `cellprofiler-nf` to generate data used by the `easyXpress` package, see [`AndersenLab/cellprofiler-nf`](https://github.com/AndersenLab/cellprofiler-nf).\n"
      },
      "source": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AndersenLab/easyXpress/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Andersen Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/man/figures/logo.png"
      },
      "source": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "easyXpress"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "AndersenLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 4072139,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 170314,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AndersenLab/easyXpress/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tcrombie",
          "type": "User"
        },
        "date_created": "2023-10-10T22:34:37Z",
        "date_published": "2023-10-10T22:45:35Z",
        "description": "### New Features\r\n- Add a new suite of ObjectFlag (OF) and WellFlag (WF) functions.\r\n- Add many new `check` and `view` functions to help diagnose flagging issues.\r\n- Add the `delta` and `regEff` functions to calculate control deltas and regression bleach effects. \r\n\r\n### Breaking Changes\r\n- Older code using the `readXpress` function may have to update the way the data are passed to `modelSelection()`. The new `readXpress` function returns a list with elements named`raw_data` and `design`. Pass `<out>$raw_data` to `modelSelection()`.\r\n\r\n### Improvements\r\n- All new documentation for functions with corrected spelling and proper implementation of `pkgdown`.",
        "html_url": "https://github.com/AndersenLab/easyXpress/releases/tag/v2.0.0",
        "release_id": 124513354,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/AndersenLab/easyXpress/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/AndersenLab/easyXpress/releases/124513354",
        "value": "https://api.github.com/repos/AndersenLab/easyXpress/releases/124513354",
        "zipball_url": "https://api.github.com/repos/AndersenLab/easyXpress/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tcrombie",
          "type": "User"
        },
        "date_created": "2023-04-05T17:21:34Z",
        "date_published": "2023-04-05T17:47:22Z",
        "description": "**This is the initial release of easyXpress**\r\n\r\n- This version contains four additional functions not described in [Nyaanga _et al._ 2021](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0252000). These functions help organize .TIFs for [cellprofiler-nf](https://github.com/AndersenLab/cellprofiler-nf) and create diagnostic thumbnail images. \r\n     - **_tidyImages_** - This function organizes the .TIF files exported from an imager platform by creating a raw_images subdirectory in the project directory, moving all the .TIF files into it, and removing non-TIF files and folders if desired.\r\n     - **_wellThumbs_** - This function makes .png thumbnails from .TIF files in the raw_images directory. The thumbnails are saved to the raw_image_thumbs subdirectory in the project directory.\r\n     - **_plateThumbs_** - This function arrays the thumbnails in the raw_image_thumbs subdirectory into a single image for each 96-well plate. The plate thumbnails are saved to the raw_plate_thumbs subdirectory in the project directory.\r\n     - **_tidyProject_** - This function executes the three pervious functions with a single call.",
        "html_url": "https://github.com/AndersenLab/easyXpress/releases/tag/v1.0.0",
        "release_id": 98227143,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/AndersenLab/easyXpress/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/AndersenLab/easyXpress/releases/98227143",
        "value": "https://api.github.com/repos/AndersenLab/easyXpress/releases/98227143",
        "zipball_url": "https://api.github.com/repos/AndersenLab/easyXpress/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:12:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}