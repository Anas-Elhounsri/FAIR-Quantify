{
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at wfondrie@uw.edu.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\n[https://www.contributor-covenant.org/version/2/0/code_of_conduct.html][v2.0].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.0]: https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\n\n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wfondrie/ppx"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to ppx\n\nFirst off, thank you for taking the time to contribute.\n\nThe following document provides guidelines for contributing to the\ndocumentation and the code of ppx. **No contribution is too small!** Even\nfixing a simple typo in the documentation is immensely helpful.\n\n\n## Contributing to the documentation\n\nWe use [sphinx](https://www.sphinx-doc.org/en/master/) generate our\ndocumentation and deploy it to this site. Most of the pages on the site are\ncreated from simple text files written in the reStructuredText markup language.\nThere are three exceptions to this:\n\n1. The API and command line documentation are automatically generated from the\n   documentation contained in the code.\n\n2. The Vignettes are created from Jupyter notebooks.\n\n3. The Code of Conduct, Release Notes, and this Contributing document are \n   markdown files that live in the root of the ppx repository.\n\n### Editing most documents\n\nThe easiest way to edit a document is by clicking the \"Edit on GitHub\" like in\nthe top right hand corner of each page. You'll be taken to GitHub where\nyou can click on the pencil to edit the document.\n\nYou can then make your changes directly on GitHub. Once you're finished, fill\nin a description of what you changed and click the \"Propose Changes\" button.\n\nAlternatively, these documents live in the `docs/source` directory of the\nrepository and can be edited like code. See [Contributing to the\ncode](#contributing-to-the-code) below for more details on contributing this\nway.\n\n\n## Contributing to the code\n\nWe welcome contributions to the source code of ppx---particularly ones that\naddress discussed `issues <https://github.com/wfondrie/ppx/issues>`_.\n\nContributions to ppx follow a standard GitHub contribution workflow:\n\n1. Create your own fork of the ppx repository on GitHub.\n\n2. Clone your forked ppx repository to work on locally.\n\n3. Create a new branch with a descriptive name for your changes:\n\n```bash\ngit checkout -b fix_x\n```\n\n4. Make your changes (make sure to read below first).\n\n5. Add, commit, and push your changes to your forked repository.\n\n6. On the GitHub page for you forked repository, click \"Pull request\" to propose\n   adding your changes to ppx.\n\n7. We'll review, discuss, and help you make any revisions that are required. If\n   all goes well, your changes will be added to ppx in the next release!\n\n\n### Python code style\n\nThe ppx project follows the [PEP 8\nguidelines](https://www.python.org/dev/peps/pep-0008/) for Python code style.\nMore specifically, we use [black](https://black.readthedocs.io/en/stable/) to\nformat code and lint Python code in ppx.\n\nWe highly recommend setting up a pre-commit hook for black. This will run black\non all of the Python source files before the changes can be committed. Because\nwe run black for code linting as part of our tests, setting up this hook can\nsave you from having to revise code formatting. Take the following steps to set\nup the pre-commit hook:\n\n1. Verify that black and pre-commit are installed. If not, you can install them\n   with pip or conda:\n\n```bash\n# Using pip\npip install black pre-commit\n\n# Using conda\nconda -c conda-forge black pre-commit\n```\n\n2. Navigate to your local copy of the ppx repository and activate the hook:\n```bash\npre-commit install\n```\n\nOne the hook is installed, black will be run before any commit is made. If a\nfile is changed by black, then you need to `git add` the file again before\nfinished the commit.\n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-08-31T21:01:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-04T13:43:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Python interface to proteomics data repositories"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.953611320913425,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "ppx provides a simple, programmatic means to access proteomics data that are\npublicly available in [ProteomeXchange](http://www.proteomexchange.org) partner\nrepositories. ppx allows users to easily find and download files associated\nwith projects in [PRIDE](https://www.ebi.ac.uk/pride/archive/) and\n[MassIVE](https://massive.ucsd.edu/ProteoSAFe/static/massive.jsp). In doing so,\nppx promotes the reproducible analysis of proteomics data. \nFor full documentation and examples, visit: https://ppx.readthedocs.io\n \n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9129626343827753,
      "result": {
        "original_header": "Configuration",
        "type": "Text_excerpt",
        "value": "By default, ppx will download project files in the `.ppx` directory under the\ncurrent user's home directory (`~/.ppx` on Linux and MacOS). There are several\nways to specify different data directories: \n1. Change the ppx data directory for all future Python sessions by setting the\n`PPX_DATA_DIR` environment variable to your preferred directory. \n3. Specify a data directory for a project using the `local` argument:\n``` Python\n>>> import ppx\n\n>>> proj = ppx.find_project(\"PXD000001\", local=\"my/data/dir\")\n```\n \nWhy does ppx set a default data directory? We found that this makes it easier\nto reuse the same proteomics data files in multiple tasks that we're working\non. \nAs of ppx v1.3.0, cloud paths can also be used as the data directory. This\nallows you to stream downloaded files to AWS S3, Google Cloud Storage, or Azure\nBlob Storage. To use a cloud storage provider, simply set the data directory to\na cloud URI, such as :code:`s3://my-data-bucket/ppx` using any of the methods\nabove. Please note that you'll also need to setup credentials for your cloud\nprovider---see the `CloudPathLib documentation\n<https://cloudpathlib.drivendata.org/v0.6/authentication/>_` for details.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wfondrie/ppx/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://ppx.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading to cloud storage backend",
        "parent_header": [
          "A Python interface to proteomics data repositories",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "We use [CloudPathlib](https://cloudpathlib.drivendata.org/stable/) to power\nsupport for AWS S3, Google Cloud Storage, and Azure Blob Storage. To use a\ncloud storage provider, create the bucket for ppx to use and set it as the ppx data\ndirectory.\n\n\nFor example using AWS S3, we can save the files of a project to an S3 bucket:\n``` python\n>>> proj = ppx.find_project(\"PXD000001\", local=\"s3://my-bucket/PXD000001\")\n>>> proj.download(\"README.txt\")\n# [S3Path('s3://my-bucket/PXD000001/README.txt')]\n```\n\nCloudPathLib then provides methods to download files from S3 when you need them:\n\n``` Python\n>>> readme_on_s3 = proj.local_files(\"README.txt\")[0]\n>>> readme_on_s3.download_to(\"README.txt\")\n# [PosixPath(README.txt)]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wfondrie/ppx/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wfondrie/ppx/master/docs/ann_solo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/docs/ann_solo.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wfondrie/ppx/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wfondrie/ppx"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Python interface to proteomics data repositories"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "A Python interface to proteomics data repositories"
        ],
        "type": "Text_excerpt",
        "value": "ppx requires Python 3.6+ and depends upon the\n[requests](https://docs.python-requests.org/en/master/) and\n[tqdm](https://tqdm.github.io/) Python packages. ppx and any missing\ndependencies are easily installed with `pip` or with `conda` through the\n[bioconda](https://bioconda.github.io/index.html) channel.\n\nInstall with `conda`:\n\n``` shell\nconda install -c bioconda ppx\n```\n\nOr install with `pip`:\n\n```shell\npip3 install ppx\n```\n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9715392544186574,
      "result": {
        "original_header": "A Python interface to proteomics data repositories",
        "type": "Text_excerpt",
        "value": "https://github.com/wfondrie/ppx/workflows/tests/badge.svg?branch=master\n \n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9068976351728553,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "For full documentation and examples, visit: https://ppx.readthedocs.io\n \n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9502292874145812,
      "result": {
        "original_header": "Configuration",
        "type": "Text_excerpt",
        "value": "By default, ppx will download project files in the `.ppx` directory under the\ncurrent user's home directory (`~/.ppx` on Linux and MacOS). There are several\nways to specify different data directories: \n1. Change the ppx data directory for all future Python sessions by setting the\n`PPX_DATA_DIR` environment variable to your preferred directory. \n3. Specify a data directory for a project using the `local` argument:\n``` Python\n>>> import ppx\n\n>>> proj = ppx.find_project(\"PXD000001\", local=\"my/data/dir\")\n```\n \nAs of ppx v1.3.0, cloud paths can also be used as the data directory. This\nallows you to stream downloaded files to AWS S3, Google Cloud Storage, or Azure\nBlob Storage. To use a cloud storage provider, simply set the data directory to\na cloud URI, such as :code:`s3://my-data-bucket/ppx` using any of the methods\nabove. Please note that you'll also need to setup credentials for your cloud\nprovider---see the `CloudPathLib documentation\n<https://cloudpathlib.drivendata.org/v0.6/authentication/>_` for details.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8724142683146181,
      "result": {
        "original_header": "Configuration",
        "type": "Text_excerpt",
        "value": "3. Specify a data directory for a project using the `local` argument:\n``` Python\n>>> import ppx\n\n>>> proj = ppx.find_project(\"PXD000001\", local=\"my/data/dir\")\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wfondrie/ppx/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright 2018 William E Fondrie\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wfondrie/ppx/master/static/ppx_light.svg"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ppx"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "wfondrie"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/ppx/"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 68699,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2024-04-25T07:06:19Z",
        "date_published": "2024-04-25T07:07:58Z",
        "description": "## [1.4.4]\r\n- Fix links to MassIVE `ccms_peak` files. See [this issue](https://github.com/CCMS-UCSD/MassIVEDocumentation/issues/30#issue) for details.",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.4.4",
        "name": "ppx v1.4.4",
        "release_id": 152743586,
        "tag": "v1.4.4",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.4.4",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/152743586",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/152743586",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.4.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2024-04-16T17:39:26Z",
        "date_published": "2024-04-16T17:40:06Z",
        "description": "### Fixed\r\n- Fix Test status badge.",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.4.2",
        "name": "ppx v1.4.2",
        "release_id": 151416410,
        "tag": "v1.4.2",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/151416410",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/151416410",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2024-04-16T17:30:19Z",
        "date_published": "2024-04-16T17:32:10Z",
        "description": "### Fixed\r\n- Updated the ReadTheDocs configuration.",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.4.1",
        "name": "ppx v1.4.1",
        "release_id": 151415294,
        "tag": "v1.4.1",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/151415294",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/151415294",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2024-04-16T15:56:58Z",
        "date_published": "2024-04-16T15:58:15Z",
        "description": "### Changed\r\n- Linting and formatting is now performed with Ruff.\r\n- Migrated to pyproject.toml based build.\r\n\r\n### Fixed\r\n- Fixed MassIVE FTP URLs using the MassIVE PROXI API.\r\n- Fixed PRIDE FTP URLs... again.\r\n- Updated unit tests with new PRIDE FTP URLs.\r\n\r\n",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.4.0",
        "name": "ppx v1.4.0",
        "release_id": 151400192,
        "tag": "v1.4.0",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/151400192",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/151400192",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2022-04-30T06:23:30Z",
        "date_published": "2022-04-30T06:29:40Z",
        "description": "## [1.3.0] - 2022-04-39\r\n### Added\r\n- Support for cloud provider destinations. Thanks @sooheon! \r\n\r\n",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.3.0",
        "name": "ppx v1.3.0",
        "release_id": 65728764,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/65728764",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/65728764",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2022-03-17T00:02:39Z",
        "date_published": "2022-03-17T00:05:48Z",
        "description": "## [1.2.6] - 2022-03-16\r\n\r\nThis patch aims to resolve #18 and with it #25.\r\n\r\n### Fixed\r\n- Some PRIDE projects were still not working due to their recent URL change.\r\n  This patch makes the our hotfix from v1.2.3 more robust.\r\n\r\n",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.2.6",
        "name": "ppx v1.2.6",
        "release_id": 62057698,
        "tag": "v1.2.6",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.2.6",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/62057698",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/62057698",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.2.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2022-01-05T22:13:22Z",
        "date_published": "2022-01-05T22:20:28Z",
        "description": "A small patch to add support for MassIVE reanalysis projects\r\n\r\n### Added\r\n- Support for MassIVE reanalyses (accessions that start with `RMSV`)\r\n\r\n",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.2.5",
        "name": "ppx v1.2.5",
        "release_id": 56497572,
        "tag": "v1.2.5",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/56497572",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/56497572",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2021-11-23T20:23:35Z",
        "date_published": "2021-11-23T20:28:34Z",
        "description": "### Added\r\n- New `--timeout` parameter for the command line interface, enabling the custom\r\n  timeout durations introduced in v1.2.0\r\n- New `--version` parameter for the command line interface to get the version\r\n  number.",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.2.4",
        "name": "ppx v1.2.4",
        "release_id": 53947708,
        "tag": "v1.2.4",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/53947708",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/53947708",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2021-11-05T22:10:29Z",
        "date_published": "2021-11-05T22:12:43Z",
        "description": "Note: we recommend using `fetch=True` for all PRIDE projects the first time you use them after this update.\r\n\r\n### Fixed\r\n- Hotfix for PRIDE's recent FTP URL change (see #18 for details).\r\n\r\n### Changed\r\n- ppx progress bars now work much better in Jupyter environments. Under the\r\n  hood we switched from `from tqdm import tqdm` to `from tqdm.auto import\r\n  tqdm`.\r\n\r\n",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.2.3",
        "name": "ppx v1.2.3",
        "release_id": 52818810,
        "tag": "v1.2.3",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/52818810",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/52818810",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2021-10-12T23:57:00Z",
        "date_published": "2021-10-12T23:58:03Z",
        "description": "### Changed\r\n- Lowered the Requests version requirement to 2.23.0. This resolves a problem\r\n  installing ppx in Google Colab environments.\r\n\r\n",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.2.2",
        "name": "ppx v1.2.2",
        "release_id": 51247253,
        "tag": "v1.2.2",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/51247253",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/51247253",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2021-10-11T21:19:22Z",
        "date_published": "2021-10-11T21:22:23Z",
        "description": "A small update adding a new feature for MassIVE projects.\r\n\r\n### Added\r\n- New `file_info()` method for MassIVE projects uses the GNPS API to get\r\n  information about the files in a project.\r\n\r\n",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.2.1",
        "name": "ppx v1.2.1",
        "release_id": 51168880,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/51168880",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/51168880",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2021-09-14T19:16:13Z",
        "date_published": "2021-09-14T19:22:33Z",
        "description": "Connections made with ppx should be significantly more robust with this update.\r\n\r\n### Added\r\n- New `timeout` parameter for most functions and classes. This specifies the \r\n  maximum amount of time to wait for a response from the server.\r\n\r\n### Changed\r\n- The backend for MassIVE now uses the GNPS API to list files and projects,\r\n  only falling back to scraping the FTP server on failure. This should make \r\n  it much faster. Thanks @mwang87!\r\n- Files and projects are now returned in sorted order.\r\n\r\n### Fixed\r\n- Poor connections with PRIDE were leading to a number of occasional errors. \r\n  Multiple reconnect attempts are now tried for a wider variety of FTP \r\n  operations.",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.2.0",
        "name": "ppx v.1.2.0",
        "release_id": 49553350,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/49553350",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/49553350",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2021-07-02T20:34:32Z",
        "date_published": "2021-07-02T20:38:59Z",
        "description": "### Fixed\r\n- Downloading files is now more robust. ppx will now retry FTP connections up\r\n  to 10 times if the connection was dropped or refused.\r\n- Partial downloads are now continued automatically by comparing the local \r\n  file size to the remote file size.",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.1.1",
        "name": "ppx v1.1.1",
        "release_id": 45644347,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/45644347",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/45644347",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2021-05-19T03:58:58Z",
        "date_published": "2021-05-19T04:54:05Z",
        "description": "### Fixed\r\n- The PRIDE REST API was not yielding all of the available files on the their\r\n  FTP server for a project. We changed the backend use the FTP server directly\r\n  instead. **Note that this may change the number, identity, and order of the\r\n  file that were previously returned for PRIDE projects!**\r\n- Small documentation updates.\r\n  \r\n### Added\r\n- Caching of the remote files and directories found for a project. If a \r\n  project's `fetch` attribute is `False`, then we'll rely on this cached\r\n  data, so long as it is available. Setting `fetch=True` will always refresh\r\n  the data from the repository.",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.1.0",
        "name": "ppx v1.1.0",
        "release_id": 43188504,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/43188504",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/43188504",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2021-05-14T19:47:24Z",
        "date_published": "2021-05-14T19:50:20Z",
        "description": "### Changed  \r\n- **We did a complete rework of the API!** This will break nearly all previous\r\n  code using ppx, but greatly improves its versatility.\r\n  See the [docs](https://ppx.readthedocs.io) for more details\r\n- Updated the build to align with\r\n  [PEP517](https://www.python.org/dev/peps/pep-0517/)\r\n  \r\n### Added\r\n- A command line interface for downloading files from PRIDE and MassIVE \r\n  projects.\r\n- Additional unit tests.\r\n- A ppx logo\r\n- This changelog.\r\n- ppx is now available on bioconda!\r\n  \r\n",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v1.0.0",
        "name": "ppx v1.0.0",
        "release_id": 42978877,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/42978877",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/42978877",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2020-09-28T07:45:33Z",
        "date_published": "2020-11-25T04:15:39Z",
        "description": "Added support for MassIVE datasets and directory navigation.",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v0.5.0",
        "name": "ppx v0.5.0",
        "release_id": 34395780,
        "tag": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/34395780",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/34395780",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2020-06-20T05:15:18Z",
        "date_published": "2020-06-20T05:16:41Z",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v0.4.2",
        "name": "ppx version 0.4.2",
        "release_id": 27746264,
        "tag": "v0.4.2",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v0.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/27746264",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/27746264",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v0.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2020-06-20T05:06:30Z",
        "date_published": "2020-06-20T05:08:47Z",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v0.4.1",
        "name": "ppx version 0.4.1",
        "release_id": 27746213,
        "tag": "v0.4.1",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/27746213",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/27746213",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wfondrie",
          "type": "User"
        },
        "date_created": "2020-06-20T04:31:07Z",
        "date_published": "2020-06-20T04:35:58Z",
        "html_url": "https://github.com/wfondrie/ppx/releases/tag/v0.4",
        "name": "ppx version 0.4",
        "release_id": 27746009,
        "tag": "v0.4",
        "tarball_url": "https://api.github.com/repos/wfondrie/ppx/tarball/v0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/wfondrie/ppx/releases/27746009",
        "value": "https://api.github.com/repos/wfondrie/ppx/releases/27746009",
        "zipball_url": "https://api.github.com/repos/wfondrie/ppx/zipball/v0.4"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:05:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 30
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "A Python interface to proteomics data repositories"
        ],
        "type": "Text_excerpt",
        "value": "First, find a project using its ProteomeXchange or MassIVE identifier:\n\n``` Python\n>>> import ppx\n\n>>> proj = ppx.find_project(\"PXD000001\")\n```\n\nWe can then view the files associated with the project in the repository\n(PRIDE in this case):\n\n``` Python\n>>> proj.remote_files()\n#['F063721.dat',\n# 'F063721.dat-mztab.txt',\n# 'PRIDE_Exp_Complete_Ac_22134.xml.gz',\n# 'PRIDE_Exp_mzData_Ac_22134.xml.gz',\n# 'PXD000001_mztab.txt',\n# 'README.txt',\n# 'TMT_Erwinia_1uLSike_Top10HCD_isol2_45stepped_60min_01-20141210.mzML',\n# 'TMT_Erwinia_1uLSike_Top10HCD_isol2_45stepped_60min_01-20141210.mzXML',\n# 'TMT_Erwinia_1uLSike_Top10HCD_isol2_45stepped_60min_01.mzXML',\n# 'TMT_Erwinia_1uLSike_Top10HCD_isol2_45stepped_60min_01.raw',\n# 'erwinia_carotovora.fasta',\n# 'generated/PRIDE_Exp_Complete_Ac_22134.pride.mgf.gz',\n# 'generated/PRIDE_Exp_Complete_Ac_22134.pride.mztab.gz']\n```\n\nWe can also [glob](https://en.wikipedia.org/wiki/Glob_(programming)) for\nspecific types of files:\n\n``` Python\n>>> proj.remote_files(\"*.mzML\")\n# ['TMT_Erwinia_1uLSike_Top10HCD_isol2_45stepped_60min_01-20141210.mzML']\n```\n\nThen we can download one or more files to the projects local data directory:\n\n``` Python\n>>> proj.download(\"README.txt\")\n# [PosixPath('/Users/wfondrie/.ppx/PXD000001/README.txt')]\n```\n\nOnce we've downloaded files, ppx no longer needs an internet connection to\nretrieve a project's local data. However, you will need to specify the\nrepository in which the project data resides. If we start a new Python\nsession, we can find our previous file easily:\n\n``` Python\n>>> import ppx\n\n>>> proj = ppx.find_project(\"PXD000001\", repo=\"PRIDE\")\n>>> proj.local_files()\n# [PosixPath('/Users/wfondrie/.ppx/PXD000001/README.txt')]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/wfondrie/ppx/master/README.md",
      "technique": "header_analysis"
    }
  ]
}