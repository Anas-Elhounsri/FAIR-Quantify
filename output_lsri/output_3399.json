{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "MicrobeAnnotator"
        ],
        "type": "Text_excerpt",
        "value": "MicrobeAnnotator: a user-friendly, comprehensive functional annotation pipeline for microbial genomes\nhttps://doi.org/10.1186/s12859-020-03940-5\n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cruizperez/MicrobeAnnotator"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-03-04T14:59:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-26T07:07:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pipeline for metabolic annotation of microbial genomes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Database creation",
        "parent_header": [
          "MicrobeAnnotator",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "First things first. There are two \"flavors\" of MicrobeAnnotator depending on your storage and computational capabilities (and your time); the regular and light mode.\nThe difference between the two is that the regular implementation will make use of four different databases to annotate your proteins, i.e., the Kofam database and the Swissprot, Trembl and RefSeq databases. On the other hand, the light mode will only use Kofam and Swissprot, which in most cases will annotate the majority of your proteins and will take way less time and space.\\\nYou can decide of course which version to run at any time, but for the time being let's have an example with the normal mode (to run the light version just add the `--light` flag when calling the script).\n\nThe first step is to download and format the databases we want to use for MicrobeAnnotator. For this we will execute the `microbeannotator_db_builder` script within the MicrobeAnnotator folder. You can add see all options and inputs for the script with  `microbeannotator_db_builder -h`.\\\nRun the script as:\\\n`microbeannotator_db_builder -d MicrobeAnnotator_DB -m [blast,diamond,sword] -t [# threads]`\\\nThe options we gave the script were:\\\n`-d MicrobeAnnotator_DB` that is the folder in which all databases will be downloaded and stored.\\\n`-m [blast,diamond,sword]` the search method you intend to use. For instance, if you choose \"blast\" the program will format you database to be searched using NCBI blastp. If you noticed we already installed all three options so you can chooce either (note that sword has some specific processor requirements and might not work in older computers, but you can test it before choosing).\\\n`-t [# threads]` will be the number of processors used to format the databases.\\\n`--step [#]` will tell MicrobeAnnotator which step to start from (for example if your run failed for some reason). The steps available are: 1. Download data, 2. Parse annotation data, 3. Building SQLite DB, 4. Create interconversion tables, and 5. Build protein DBs.\\\n`--no_aspera` will tell MicrobeAnnotator that you don't have Aspera Connect installed so it will use another download method.\\\n`--keep` will tell MicrobeAnnotator to not remove intermediary files (not recommended because it's not necessary and it will take more of your disk space.\n\nIf you run the full version (no `--light` flag), you will need at least approximately ~230Gb of space. This can increase depending on the search method used (blast and diamond require the raw fasta databases to be further formated).\nIf everything went right, you should find inside the MicrobeAnnotator_DB folder, a directory `protein_db` and two files, `microbeannotator.db` and `conversion.db` that contain all information required by the program to search your proteins against these databases.\nIf anything went wrong, or if you changed your mind about your searching method after it finished, you can restart the process at any step with the `--step` flag, the help will tell you which are the steps.\n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9798808310525554,
      "result": {
        "original_header": "MicrobeAnnotator",
        "type": "Text_excerpt",
        "value": "Easy-to-use pipeline for the comprehensive metabolic annotation of microbial genomes.\n \n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.983048162948672,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "MicrobeAnnotator uses an iterative approach to annotate microbial genomes (Bacteria, Archaea and Virus) starting from proteins predicted using your favorite ORF prediction tool, e.g. Prodigal.\nThe iterative approach is composed of three or five main steps (depending on the flavor of MicrobeAnnotator you run).\n- Search of initial protein dataset using KOFamscan, extraction of unannotated proteins.\n- Search of proteins extracted in the previous step using UniProt Swissprot database. Extract unannotated proteins and repeat search using RefSeq and Trembl (if running the full version).\n- In the end, the program will check those entries that had an annotation match but no KO number and will look for other database identifiers (E.C. and InterPro) in the annotation metadata and will try to link those to KO numbers to refine the annotations. \n- Summarize the metabolic potential using KEGG modules by extracting KO numbers associated with each match in the databases used. The summary output is a matrix with module completion and two plots showing module completeness per genome (see below).\n \n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cruizperez/MicrobeAnnotator/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQs",
        "parent_header": [
          "MicrobeAnnotator"
        ],
        "type": "Text_excerpt",
        "value": "- How long will MicrobeAnnotator take to build the databases?\\\n    Well, it depends on the version of database you are building. For instance, the full version needs to download the Swissprot, Trembl, and RefSeq databases (and their associated metadata) and parse them into the SQLite database MicrobeAnnotator uses. Depending on your internet connection speed this process can take ~24h (using a single thread), including downloading and processing the data. Fortunately, you just need to do this once! Now, if you are using sword as your search method, you are done, but if you are using Blast or Diamond, there is additional time required for the protein fasta files to be converted into the appropriate formats. This formatting process will take approximately ~5 hours for Blast and ~2.5 hours for Diamond. If you are running the \"light\" version of the program with sword as your search method, this entire process will only take ~5 minutes (depending of your internet connection speed).\n    \n- How much space will the database take in my disk?\\\n    This once again depends on the verison of the program you indend to run and the search method you want to use. For reference the space required by the full database will approximatelly be: \n    - Protein fasta files: ~144Gb\n    - Blast-formatted files: ~177Gb\n    - Diamond-formatted files: ~148Gb\n    - SQLite3 database: ~93Gb\\\n    In summary, if you build the full database you need at least ~237Gb of free space in your disk. The light version only will take ~0.65Gb (with sword as search method).\n\n- Can I use the light (--light) version of the program to annotate if I built the database using the full version?\\\n    Of course! You can search and annotate your genomes (protein files) using only kofamscan and the swissprot database, i.e. the light version even if you have the full database available. However, the contrary cannot be done. If you try to perform the full search with the light version of the database, MicrobeAnnotator will not be able to find the required databases and will exit with an error. If you have anough time (and space) you can build the full database and then use the version that better suits your needs at each particular time.\n\n- I have identifiers from other annotation tools, can I use them in MicrobeAnnotator to summarize the metabolic potential?\\\n    Of course! We realize we are not the only annotation tool out there, so we have an additional script `identifier_conversion.py`, that will allow you to convert ids between databases, either to summarize within microbeannotator or to compare several annotation methods. With this script you can convert between: E.C. <-> KO, InterPro <-> KO, and InterPro <-> E.C. If you have a list of KO identifiers in the end, you can summarize them using another script `ko_mapper.py`.\n\n- I have a list of KOs obtained somewhere. Can I summarize them and skip all the annotation steps?\n    Sure! We have made an additional script that does exactly this. You will find it as `ko_mapper.py`.\n\n- I don't see my question here. Where can I ask a question?\n    You can submit a ticket in the issues tab and I will do my best to solve it and answer your question. You can also ask for features you would like to see in the future!\n\n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cruizperez/MicrobeAnnotator"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MicrobeAnnotator"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda Installation",
        "parent_header": [
          "MicrobeAnnotator",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "It appears we need a bunch of pre-requisites to run MicrobeAnnotator! \nThe easiest way to install MicrobeAnnotator is using Conda. If you don't have Conda, you can install it as follows:\n1. Download Anaconda from https://www.anaconda.com/products/individual.\n2. Run `bash Anaconda-latest-Linux-x86_64.sh` and follow the installation instructions.\n3. Once installed you can run `conda -V`. You should get the version of conda that you installed.\n\nNow, let's add the conda channels required to install the pre-requisites:\n\n```bash\nconda config --add channels conda-forge\nconda config --add channels bioconda\nconda config --add channels cruizperez\n```\n\nThen, create an environment for MicrobeAnnotator:\n\n```bash\nconda create -n microbeannotator python=3.7 pip microbeannotator=2.0.5\n```\n\nActivate it:\n\n```bash\nconda activate microbeannotator\n```\n\nAnd then install the last dependecy using pip\n\n```bash\npip install hmmer==0.1.0\n```\n\nBoth main scripts (microbeannotator and microbeannotator_db_builder) should be in your path ready for use!\nThis should take care of most of the requirements except for Aspera Connect which are a little more involved. Let's install those.\n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pip Installation",
        "parent_header": [
          "MicrobeAnnotator",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you prefer to use pip you will need to install the dependencies manually and make sure they are available in PATH.\nOnce you have installed the pre-requisites to run MicrobeAnnotator, you can install MicrobeAnnotator using pip:\n\n```bash\npip install microbeannotator==2.0.4\n```\nBoth main scripts (microbeannotator and microbeannotator_db_builder) should be in your path ready for use!\n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Aspera Connect",
        "parent_header": [
          "MicrobeAnnotator",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "While not required, Aspera Connect can help speed your data download process. If you don't install this,\nMicrobeAnnotator will use wget, but if you want to install it, here are the instructions.\n\nTo install aspera in a Linux system follow (example with version 3.9.8.176272):\n\n```bash\nwget https://download.asperasoft.com/download/sw/connect/3.9.8/ibm-aspera-connect-3.9.8.176272-linux-g2.12-64.tar.gz\ntar xvfz ibm-aspera-connect-3.9.8.176272-linux-g2.12-64.tar.gz\nbash ibm-aspera-connect-3.9.8.176272-linux-g2.12-64.sh\n```\n\n(Usually it will be installed in your home under your user in `\"/home/[user]/.aspera/connect/bin\"`, it will show you where)\n\nTake note of this installation folder and, for your peace of mind lets add this folder to your PATH:\n\nAdd the following line to your `~/.bashrc` file: `export PATH=\"$PATH:/home/[user]/.aspera/connect/bin\"`\\\nNote: Replace [user] by your username\n\nNow reload the ~/.bashrc file with: `source ~/.bashrc`\n\nNow you have installed Aspera Connect!\n\nIf you cannot install Aspera Connect for some reason, MicrobeAnnotator will use another method to download your data, no worries!\n\n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Artistic License 2.0",
        "spdx_id": "Artistic-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/artistic-2.0",
        "value": "https://api.github.com/licenses/artistic-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The Artistic License 2.0\n\n           Copyright (c) 2020 Carlos A. Ruiz Perez\n\n     Everyone is permitted to copy and distribute verbatim copies\n      of this license document, but changing it is not allowed.\n\nPreamble\n\nThis license establishes the terms under which a given free software\nPackage may be copied, modified, distributed, and/or redistributed.\nThe intent is that the Copyright Holder maintains some artistic\ncontrol over the development of that Package while still keeping the\nPackage available as open source and free software.\n\nYou are always permitted to make arrangements wholly outside of this\nlicense directly with the Copyright Holder of a given Package.  If the\nterms of this license do not permit the full use that you propose to\nmake of the Package, you should contact the Copyright Holder and seek\na different licensing arrangement.\n\nDefinitions\n\n    \"Copyright Holder\" means the individual(s) or organization(s)\n    named in the copyright notice for the entire Package.\n\n    \"Contributor\" means any party that has contributed code or other\n    material to the Package, in accordance with the Copyright Holder's\n    procedures.\n\n    \"You\" and \"your\" means any person who would like to copy,\n    distribute, or modify the Package.\n\n    \"Package\" means the collection of files distributed by the\n    Copyright Holder, and derivatives of that collection and/or of\n    those files. A given Package may consist of either the Standard\n    Version, or a Modified Version.\n\n    \"Distribute\" means providing a copy of the Package or making it\n    accessible to anyone else, or in the case of a company or\n    organization, to others outside of your company or organization.\n\n    \"Distributor Fee\" means any fee that you charge for Distributing\n    this Package or providing support for this Package to another\n    party.  It does not mean licensing fees.\n\n    \"Standard Version\" refers to the Package if it has not been\n    modified, or has been modified only in ways explicitly requested\n    by the Copyright Holder.\n\n    \"Modified Version\" means the Package, if it has been changed, and\n    such changes were not explicitly requested by the Copyright\n    Holder.\n\n    \"Original License\" means this Artistic License as Distributed with\n    the Standard Version of the Package, in its current version or as\n    it may be modified by The Perl Foundation in the future.\n\n    \"Source\" form means the source code, documentation source, and\n    configuration files for the Package.\n\n    \"Compiled\" form means the compiled bytecode, object code, binary,\n    or any other form resulting from mechanical transformation or\n    translation of the Source form.\n\n\nPermission for Use and Modification Without Distribution\n\n(1)  You are permitted to use the Standard Version and create and use\nModified Versions for any purpose without restriction, provided that\nyou do not Distribute the Modified Version.\n\n\nPermissions for Redistribution of the Standard Version\n\n(2)  You may Distribute verbatim copies of the Source form of the\nStandard Version of this Package in any medium without restriction,\neither gratis or for a Distributor Fee, provided that you duplicate\nall of the original copyright notices and associated disclaimers.  At\nyour discretion, such verbatim copies may or may not include a\nCompiled form of the Package.\n\n(3)  You may apply any bug fixes, portability changes, and other\nmodifications made available from the Copyright Holder.  The resulting\nPackage will still be considered the Standard Version, and as such\nwill be subject to the Original License.\n\n\nDistribution of Modified Versions of the Package as Source\n\n(4)  You may Distribute your Modified Version as Source (either gratis\nor for a Distributor Fee, and with or without a Compiled form of the\nModified Version) provided that you clearly document how it differs\nfrom the Standard Version, including, but not limited to, documenting\nany non-standard features, executables, or modules, and provided that\nyou do at least ONE of the following:\n\n    (a)  make the Modified Version available to the Copyright Holder\n    of the Standard Version, under the Original License, so that the\n    Copyright Holder may include your modifications in the Standard\n    Version.\n\n    (b)  ensure that installation of your Modified Version does not\n    prevent the user installing or running the Standard Version. In\n    addition, the Modified Version must bear a name that is different\n    from the name of the Standard Version.\n\n    (c)  allow anyone who receives a copy of the Modified Version to\n    make the Source form of the Modified Version available to others\n    under\n\n    (i)  the Original License or\n\n    (ii)  a license that permits the licensee to freely copy,\n    modify and redistribute the Modified Version using the same\n    licensing terms that apply to the copy that the licensee\n    received, and requires that the Source form of the Modified\n    Version, and of any works derived from it, be made freely\n    available in that license fees are prohibited but Distributor\n    Fees are allowed.\n\n\nDistribution of Compiled Forms of the Standard Version\nor Modified Versions without the Source\n\n(5)  You may Distribute Compiled forms of the Standard Version without\nthe Source, provided that you include complete instructions on how to\nget the Source of the Standard Version.  Such instructions must be\nvalid at the time of your distribution.  If these instructions, at any\ntime while you are carrying out such distribution, become invalid, you\nmust provide new instructions on demand or cease further distribution.\nIf you provide valid instructions or cease distribution within thirty\ndays after you become aware that the instructions are invalid, then\nyou do not forfeit any of your rights under this license.\n\n(6)  You may Distribute a Modified Version in Compiled form without\nthe Source, provided that you comply with Section 4 with respect to\nthe Source of the Modified Version.\n\n\nAggregating or Linking the Package\n\n(7)  You may aggregate the Package (either the Standard Version or\nModified Version) with other packages and Distribute the resulting\naggregation provided that you do not charge a licensing fee for the\nPackage.  Distributor Fees are permitted, and licensing fees for other\ncomponents in the aggregation are permitted. The terms of this license\napply to the use and Distribution of the Standard or Modified Versions\nas included in the aggregation.\n\n(8) You are permitted to link Modified and Standard Versions with\nother works, to embed the Package in a larger work of your own, or to\nbuild stand-alone binary or bytecode versions of applications that\ninclude the Package, and Distribute the result without restriction,\nprovided the result does not expose a direct interface to the Package.\n\n\nItems That are Not Considered Part of a Modified Version\n\n(9) Works (including, but not limited to, modules and scripts) that\nmerely extend or make use of the Package, do not, by themselves, cause\nthe Package to be a Modified Version.  In addition, such works are not\nconsidered parts of the Package itself, and are not subject to the\nterms of this license.\n\n\nGeneral Provisions\n\n(10)  Any use, modification, and distribution of the Standard or\nModified Versions is governed by this Artistic License. By using,\nmodifying or distributing the Package, you accept this license. Do not\nuse, modify, or distribute the Package, if you do not accept this\nlicense.\n\n(11)  If your Modified Version has been derived from a Modified\nVersion made by someone other than you, you are nevertheless required\nto ensure that your Modified Version complies with the requirements of\nthis license.\n\n(12)  This license does not grant you the right to use any trademark,\nservice mark, tradename, or logo of the Copyright Holder.\n\n(13)  This license includes the non-exclusive, worldwide,\nfree-of-charge patent license to make, have made, use, offer to sell,\nsell, import and otherwise transfer the Package with respect to any\npatent claims licensable by the Copyright Holder that are necessarily\ninfringed by the Package. If you institute patent litigation\n(including a cross-claim or counterclaim) against any party alleging\nthat the Package constitutes direct or contributory patent\ninfringement, then this Artistic License to you shall terminate on the\ndate that such litigation is filed.\n\n(14)  Disclaimer of Warranty:\nTHE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS \"AS\nIS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES. THE IMPLIED\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR\nNON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY YOUR LOCAL\nLAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR CONTRIBUTOR WILL\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\nDAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "MicrobeAnnotator"
        ],
        "type": "Text_excerpt",
        "value": "See LICENSE\n\n\n    \n    \n \n  \n  \n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MicrobeAnnotator"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "cruizperez"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 241148,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cruizperez",
          "type": "User"
        },
        "date_created": "2021-04-27T15:40:27Z",
        "date_published": "2021-04-27T15:41:38Z",
        "description": "Latest release that does not use KOfamscan",
        "html_url": "https://github.com/cruizperez/MicrobeAnnotator/releases/tag/2.0.5",
        "name": "Release Version 2.0.5",
        "release_id": 42082619,
        "tag": "2.0.5",
        "tarball_url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/tarball/2.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/releases/42082619",
        "value": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/releases/42082619",
        "zipball_url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/zipball/2.0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cruizperez",
          "type": "User"
        },
        "date_created": "2020-12-05T19:34:03Z",
        "date_published": "2020-12-05T19:36:15Z",
        "html_url": "https://github.com/cruizperez/MicrobeAnnotator/releases/tag/1.0.4",
        "name": "Release version 1.0.4",
        "release_id": 34881927,
        "tag": "1.0.4",
        "tarball_url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/tarball/1.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/releases/34881927",
        "value": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/releases/34881927",
        "zipball_url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/zipball/1.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cruizperez",
          "type": "User"
        },
        "date_created": "2020-11-21T05:16:34Z",
        "date_published": "2020-11-21T05:20:06Z",
        "description": "Fixed build with data",
        "html_url": "https://github.com/cruizperez/MicrobeAnnotator/releases/tag/1.0.2",
        "name": "Release version 1.0.2",
        "release_id": 34258597,
        "tag": "1.0.2",
        "tarball_url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/tarball/1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/releases/34258597",
        "value": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/releases/34258597",
        "zipball_url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/zipball/1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cruizperez",
          "type": "User"
        },
        "date_created": "2020-11-20T00:22:08Z",
        "date_published": "2020-11-20T00:22:32Z",
        "html_url": "https://github.com/cruizperez/MicrobeAnnotator/releases/tag/1.0.1",
        "name": "Release version 1.0.1",
        "release_id": 34203742,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/releases/34203742",
        "value": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/releases/34203742",
        "zipball_url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cruizperez",
          "type": "User"
        },
        "date_created": "2020-11-19T22:55:57Z",
        "date_published": "2020-11-20T00:20:10Z",
        "html_url": "https://github.com/cruizperez/MicrobeAnnotator/releases/tag/1.0.0",
        "name": "Release version 1.0.0",
        "release_id": 34203681,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/releases/34203681",
        "value": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/releases/34203681",
        "zipball_url": "https://api.github.com/repos/cruizperez/MicrobeAnnotator/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements:",
        "parent_header": [
          "MicrobeAnnotator"
        ],
        "type": "Text_excerpt",
        "value": "- Programs:\n   - [Aspera Connect](https://downloads.asperasoft.com/connect2/)\nEither (or if you prefer all):\n   - [Blast](https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/) >= 2.11.0\n   - [Diamond](https://github.com/bbuchfink/diamond) >= 2.0.9\n   - [Sword](https://github.com/rvaser/sword) >= 1.0.4\n- Python >=3.6,<3.8\n- Python Modules:\n    - attrs ==20.3.0\n    - biopython ==1.78\n    - matplotlib ==3.4.1\n    - pandas ==1.2.4\n    - psutil ==5.8.0\n    - pywget ==3.2\n    - requests ==2.25.1\n    - seaborn ==0.11.1\n- Pip\n    - hmmer ==0.1.0\n\n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:38:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 139
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Annotation",
        "parent_header": [
          "MicrobeAnnotator",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "This is the main part of MicrobeAnnotator. Here you will search the proteins you provide against the databases we created before and you will receive an annotation table per protein file along with the individual results per database used (in case you want to further explore those), a matrix summarizing the KEGG module completeness and two plots showing said module completeness for an easy, visual comparison between genomes (or files).\\\nThis implies that you can pass multiple protein fasta files to MicrobeAnnotator and they will all be processed in a single script! Awesome right?\\\nFor this annotation step we will use the `microbeAnnotator` script (see `microbeAnnotator -h` for all options).\\\nRun the script as:\\\n`microbeannotator -i [fasta_1.fa fasta_2.fa] -d [microbeannotator_db_dir] -o [output folder] -m [blast,diamond,sword] -p [# processes] -t [# threads]`\\\nThe options we gave the script were:\\\n`-i [fasta_1.fa fasta_2.fa]`, the input fasta files (separated by spaces). If you have many, you can pass them as `-i $(ls *.fasta)`.\\\n`-l [file]`, a file containing the files to process. If you have many files it is easier compared to `-i`\\\n`-d [microbeannotator_db_dir]`, the folder where you created the databases in the previous step.\\\n`-o [output folder]`, the folder to store all results generated by MicrobeAnnotator.\\\n`-m [blast,diamond,sword]` the search method you intend to use.\\\n`-p [# processes]`, refers to the number of protein files to be processed simultaneously, e.g `-p 3` will process three protein files at the same time.\\\n`-t [# threads]`, refers to the number of processors to use per protein file. For example `-t 5` will use five processors per each protein file.\\\nTherefore, of you use `-p 2 -t 5`, you will need 10 cores (five for each protein file).\\\n`--refine`, will tell MicrobeAnnotator to completement the initial annotations using E.C. numbers or InterPro ids and convert them to KO numbers.\\\n`--continue_run`, we know that MicrobeAnnotator can fail. If you have many files it can be really frustrating having to start over (we have been there :)). That is why we added an option to resume the process from the last completed point. This is the flag that does it. \n\nAt the end you should see your output folder with: \\\n`annotation_results/` folder: Where you will find the annotation tables per file and the list of KO numbers present in the file.\\\n`kofamscan_results/` folder: Raw and filtered KofamScan search results.\\\n`[database]_results/` folder: Raw and filtered search results for each database used (depends of the flavor used).\\\nA `metabolic_summary_barplot` file: Summarizes the KEGG module completeness per genome (protein file).\\\nA `metabolic_summary_heatmap` file: Summarizes the KEGG module completeness of all genomes in an-easier-to-understand heatmap (compared to a raw table, that is).\\\nA `metabolic_summary_module_completeness.tab` file: Matrix describing the completness of all KEGG modules per genome (protein file).\n\nThis should be the end result of MicrobeAnnotator, where you can easily compare the metabolic potential of your microbial genomes and if you like, have more information of the annotation of each protein in each file. Happy annotation!\n"
      },
      "source": "https://raw.githubusercontent.com/cruizperez/MicrobeAnnotator/master/README.md",
      "technique": "header_analysis"
    }
  ]
}