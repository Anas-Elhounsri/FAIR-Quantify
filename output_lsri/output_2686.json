{
  "application_domain": [
    {
      "confidence": 26.88,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vpc-ccg/freddie"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-05T23:00:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-14T16:55:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Freddie: Annotation-independent detection and discovery of transcriptomic alternative splicing isoforms using long-read sequencing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9953177786898668,
      "result": {
        "original_header": "Freddie",
        "type": "Text_excerpt",
        "value": "Freddie is an annotation-free isoform detection and discovery tool that uses as input transcriptomic long-reads (e.g. Oxford Nanopore reads) aligned to the reference genome using a splice aligner.\nNote that Freddie does not assume that the splice aligner (e.g. `minimap2`) is supplied with an annotation file of known splice isoforms.\nIf you use Freddie in your publications, please [cite Freddie's paper](#citating-freddie).\nNote that if you wish to access the version of Freddie benchmarked in the paper check the [`benchmarking`](https://github.com/vpc-ccg/freddie/tree/benchmarking) branch. \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9428095351474391,
      "result": {
        "original_header": "Freddie stages",
        "type": "Text_excerpt",
        "value": "Freddie takes as input a `SAM` file of long-reads splice alignment to the genome that can be generated by an aligner such as `minimap2` or `deSALT`.\nAs output, Freddie generates a `GTF` file of the detected isoforms.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.982510228147091,
      "result": {
        "original_header": "Split (aka partition)",
        "type": "Text_excerpt",
        "value": "- `--reads/-r`: Space separated paths to reads in FASTQ or FASTA\n- `--bam/-b`: `BAM` file of read alignments from a split/splice long-read mapper that are position sorted and indexed.\n- `--outdir/-o`: Output TSV file of split stage. Default: `freddie_split/`\n \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8375806057164783,
      "result": {
        "original_header": "Segment",
        "type": "Text_excerpt",
        "value": "- `--split-dir/-s`: `SPLIT` output directory of the split stage\n- `--threads/-t`: Number of threads. Default: 1\n- `--sigma/-sd`: Standard deviation parameter for the Gaussian filter. Default: 5.0\n- `--threshold-rate/-tp`: Coverage percentage threshold for segments. Default: 0.90\n- `--variance-factor/-vf`: Variance factor for heuristic of prefixing breakpoints. Any breakpoint with signal greater than `-vf` times the standard deviation plus the average of the signals will be prefixed. Default: 3.0\n- `--max-problem-size/-mps`: Maximum allowed problem size after which the problem will be broken down uniformly. Default: 50\n- `--min-read-support-outside`: Minimum contrasting coverage support required for a breakpoint. Default: 3\n- `--outdir/-o`: Output directory of segment stage. Default: `freddie_segment/`\n \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.929954498090817,
      "result": {
        "original_header": "Cluster",
        "type": "Text_excerpt",
        "value": "The cluster stage uses Gurobi solver which needs a license to use.\nIf your affliation is academic, you can cost-free obtain a license [here](https://www.gurobi.com/downloads/end-user-license-agreement-academic/). \n- `--segment-dir/-s`: `SEGMENT` output directory of the segment stage\n- `--gap-offset/-go`: Constant +/- slack used in unaligned gap condition. Default: 20\n- `--epsilon/-e`: +/- ratio of length as slack used in unaligned gap condition. Default: 0.2\n- `--max-rounds/-mr`: Maximum allowed number of rounds per sub-partition of a read set. Default: 30\n- `--min-isoform-size/-is`: Minimum read support allowed for an isoform. Default: 3\n- `--timeout/-to`: Gurobi timeout per isoform in minutes. Default: 4\n- `--threads/-t`: Number of threads. Default: 1\n- `--logs-dir/-l`: Directory path where logs will be outputted. Default: No logging\n- `--outdir/-o`: Output directory of cluster stage. Default: `freddie_cluster/`\n \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9721029907063925,
      "result": {
        "original_header": "Citating Freddie",
        "type": "Text_excerpt",
        "value": "Freddie's paper was originally accepted to the proceeding of [RECOMB 2021 conference](http://web.archive.org/web/20220129112349/https://www.recomb2021.org/program) and is now accepted to Nucluic Acid Research (still in-print): \n*Freddie: Annotation-independent Detection and Discovery of Transcriptomic Alternative Splicing Isoforms*.\nBaraa Orabi, Brian McConeghy, Ning Xie, Xuesen Dong, Cedric Chauve, Faraz Hach.\nNucleic Acid Research 2022; DOI: [10.1093/nar/gkac1112](https://doi.org/10.1093/nar/gkac1112) \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vpc-ccg/freddie/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vpc-ccg/freddie/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vpc-ccg/freddie"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Freddie"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation as a Conda package",
        "parent_header": [
          "Freddie",
          "Running Freddie",
          "Manually"
        ],
        "type": "Text_excerpt",
        "value": "Freddie is available as a [Conda](https://docs.conda.io/projects/conda/en/latest/user-guide/install/) package.\nHowever, since Freddie uses Gurobi, you need to install Gurobi alongside Freddie in order to use the Freddie clustering module:\n\n```bash\nconda create -n freddie-env -c bioconda -c gurobi freddie gurobi\nconda activate freddie-env\n```\n\nThis will install Gurobi Python dependencies for Freddie and will add four Freddie scripts to your PATH.\n\n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation using Git",
        "parent_header": [
          "Freddie",
          "Running Freddie",
          "Manually"
        ],
        "type": "Text_excerpt",
        "value": "\nThe simplest way to install the dependencies is using [Conda](https://docs.conda.io/projects/conda/en/latest/user-guide/install/):\n\n```\ngit clone https://github.com/vpc-ccg/freddie.git\ncd freddie\nconda env create -f envs/freddie.yml\nconda activate freddie\n```\n\nThere are few scripts/stages in Freddie:\n\n- `py/freddie_split.py`: Partitions the reads into independent sets that can be processed in parallel\n- `py/freddie_segment.py`: Computes the canonical segmentation for each read set\n- `py/freddie_cluster.py`: Clusters the reads using their canonical segmentation representation\n- `py/freddie_isoforms.py`: Generates consensus isoforms of each cluster and outputs them in `GTF` format\n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8268029558730972,
      "result": {
        "original_header": "Align",
        "type": "Text_excerpt",
        "value": "```bash\nminimap2 -a -x splice -t {threads} {genome FASTA} {reads FASTA/FASTQ} > {SAM}\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8013752236689778,
      "result": {
        "original_header": "Segment",
        "type": "Text_excerpt",
        "value": "```bash\npy/freddie_segment.py -s {SPLIT} --outdir  {SEGMENT} -t {threads}\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.982237307009935,
      "result": {
        "original_header": "Cluster",
        "type": "Text_excerpt",
        "value": "\n```bash\nexport GRB_LICENSE_FILE={path to Gurobi v9 license}\npy/freddie_cluster.py --segment-dir {SEGMENT} --outdir {CLUSTER}\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8838848767818462,
      "result": {
        "original_header": "Split (aka partition)",
        "type": "Text_excerpt",
        "value": "```bash\npy/freddie_split.py --reads {reads FASTQ} --bam {sorted BAM} --outdir {SPLIT} -t {threads}\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8781380452550395,
      "result": {
        "original_header": "Segment",
        "type": "Text_excerpt",
        "value": "```bash\npy/freddie_segment.py -s {SPLIT} --outdir  {SEGMENT} -t {threads}\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8496458875358295,
      "result": {
        "original_header": "Cluster",
        "type": "Text_excerpt",
        "value": "\n```bash\nexport GRB_LICENSE_FILE={path to Gurobi v9 license}\npy/freddie_cluster.py --segment-dir {SEGMENT} --outdir {CLUSTER}\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8710219643146696,
      "result": {
        "original_header": "Isoforms",
        "type": "Text_excerpt",
        "value": "```bash\npy/freddie_isoforms.py --split-dir {SPLIT} --cluster-dir {CLUSTER} --output {ISOFORMS.GTF} -t {threads}\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vpc-ccg/freddie/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Hach Lab for Computational Cancer Genomics\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Obtaining Gurobi license",
        "parent_header": [
          "Freddie"
        ],
        "type": "Text_excerpt",
        "value": "Freddie's clustering stage (`py/freddie_cluster.py`) uses Gurobi Solver.\nTo use Freddie, you need to have a Gurobi license installed.\nLuckily, you can obtain one for free using an academic email address:\n\n- Go to [https://pages.gurobi.com/registration](https://pages.gurobi.com/registration) to register an account.\nMake sure to select \"Academic\" to obtain the free license.\n\n- Once you have registered and logged in to [Gurobi.com](https://www.gurobi.com/) with your account, go to [here](https://www.gurobi.com/downloads/end-user-license-agreement-academic/) to obtain an academic license code.\nYou need to write this license code down because Gurobi does not save it for you. \n\n- Install the license on your machine using the following commands:\n\n```bash\nconda activate freddie #Freddie conda environment contains Gurobi command line programs\ngrbgetkey <License Code>\n```\n\nBy default, Gurobi license installer, `grbgetkey`, installs the license file to `/home/$USER/gurobi.lic`.\nIf you installed the license somewhere else, you need to make Freddie know where the new license is installed.\nIf you are going to use the supplied Snakemake file, edit the following lines in `config.yaml` file:\n```yaml\ngurobi:\n    license: /home/$USER/gurobi.lic\n```\n\nIf you are going to use Freddie's scripts directly, make sure to modify the Bash environment variable before running `freddie_cluster.py` using the following command:\n```bash\nexport GRB_LICENSE_FILE=/path/to/gurobi.lic\n```\n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "freddie"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "vpc-ccg"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 128832,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "baraaorabi",
          "type": "User"
        },
        "date_created": "2022-11-03T22:02:33Z",
        "date_published": "2022-11-03T22:08:44Z",
        "description": "- By default, discard non-spliced reads in split stage\r\n- By default, ignore start and end splice sites in segment stage\r\n- Bugfix in cluster stage speedup",
        "html_url": "https://github.com/vpc-ccg/freddie/releases/tag/v0.4",
        "name": "Speedup and new options",
        "release_id": 82021271,
        "tag": "v0.4",
        "tarball_url": "https://api.github.com/repos/vpc-ccg/freddie/tarball/v0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/vpc-ccg/freddie/releases/82021271",
        "value": "https://api.github.com/repos/vpc-ccg/freddie/releases/82021271",
        "zipball_url": "https://api.github.com/repos/vpc-ccg/freddie/zipball/v0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "baraaorabi",
          "type": "User"
        },
        "date_created": "2021-09-21T00:05:47Z",
        "date_published": "2021-09-21T00:07:56Z",
        "html_url": "https://github.com/vpc-ccg/freddie/releases/tag/v0.3.1",
        "name": "Removing the debugging psutil package",
        "release_id": 49947870,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/vpc-ccg/freddie/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/vpc-ccg/freddie/releases/49947870",
        "value": "https://api.github.com/repos/vpc-ccg/freddie/releases/49947870",
        "zipball_url": "https://api.github.com/repos/vpc-ccg/freddie/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "baraaorabi",
          "type": "User"
        },
        "date_created": "2021-09-02T18:45:18Z",
        "date_published": "2021-09-02T18:47:45Z",
        "html_url": "https://github.com/vpc-ccg/freddie/releases/tag/v0.3.0",
        "name": "Memory improvements and stricter consensus",
        "release_id": 48915466,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/vpc-ccg/freddie/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/vpc-ccg/freddie/releases/48915466",
        "value": "https://api.github.com/repos/vpc-ccg/freddie/releases/48915466",
        "zipball_url": "https://api.github.com/repos/vpc-ccg/freddie/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "baraaorabi",
          "type": "User"
        },
        "date_created": "2021-04-07T21:55:51Z",
        "date_published": "2021-04-07T21:57:40Z",
        "html_url": "https://github.com/vpc-ccg/freddie/releases/tag/0.2.1",
        "name": "Minor bug fixes and up-to-date README",
        "release_id": 41087683,
        "tag": "0.2.1",
        "tarball_url": "https://api.github.com/repos/vpc-ccg/freddie/tarball/0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/vpc-ccg/freddie/releases/41087683",
        "value": "https://api.github.com/repos/vpc-ccg/freddie/releases/41087683",
        "zipball_url": "https://api.github.com/repos/vpc-ccg/freddie/zipball/0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "baraaorabi",
          "type": "User"
        },
        "date_created": "2021-02-09T23:57:16Z",
        "date_published": "2021-02-09T23:59:53Z",
        "html_url": "https://github.com/vpc-ccg/freddie/releases/tag/v0.2",
        "name": "Speedups for all stages",
        "release_id": 37832915,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/vpc-ccg/freddie/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/vpc-ccg/freddie/releases/37832915",
        "value": "https://api.github.com/repos/vpc-ccg/freddie/releases/37832915",
        "zipball_url": "https://api.github.com/repos/vpc-ccg/freddie/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "baraaorabi",
          "type": "User"
        },
        "date_created": "2021-01-27T22:00:10Z",
        "date_published": "2021-01-27T22:01:09Z",
        "html_url": "https://github.com/vpc-ccg/freddie/releases/tag/v0.1.1",
        "name": "Split in parallel and with less memory",
        "release_id": 36997606,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/vpc-ccg/freddie/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/vpc-ccg/freddie/releases/36997606",
        "value": "https://api.github.com/repos/vpc-ccg/freddie/releases/36997606",
        "zipball_url": "https://api.github.com/repos/vpc-ccg/freddie/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "baraaorabi",
          "type": "User"
        },
        "date_created": "2021-01-26T01:06:28Z",
        "date_published": "2021-01-26T01:09:15Z",
        "html_url": "https://github.com/vpc-ccg/freddie/releases/tag/v0.1",
        "release_id": 36889747,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/vpc-ccg/freddie/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/vpc-ccg/freddie/releases/36889747",
        "value": "https://api.github.com/repos/vpc-ccg/freddie/releases/36889747",
        "zipball_url": "https://api.github.com/repos/vpc-ccg/freddie/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Using Snakemake",
        "parent_header": [
          "Freddie",
          "Running Freddie"
        ],
        "type": "Text_excerpt",
        "value": "The whole Freddie pipeline is readily available using Snakemake.\nYou can check the pipeile at the `Snakefile` and you can add samples and other paths (e.g. Gurobi licence, reference genome) to run Freddie on in the `config.yaml` file.\nAfter editing `config.yaml`, you can run Snakemake with your specific settings, just make sure to use `--use-conda` to have all the requirements installed on the fly.\nNote that the cluster stage uses Gurobi solver which needs a license to use.\nIf your affliation is academic, you can cost-free obtain a license [here](https://www.gurobi.com/downloads/end-user-license-agreement-academic/).\nMake sure to update the license path in `config.yaml` to point to the installed license file.\n\n"
      },
      "source": "https://raw.githubusercontent.com/vpc-ccg/freddie/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:58:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}