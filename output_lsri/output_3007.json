{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/molonc/Epiclomal"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-09-10T22:27:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-16T08:25:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Epiclomal package, software for clustering of sparse DNA methylation data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9911355193150722,
      "result": {
        "original_header": "Epiclomal",
        "type": "Text_excerpt",
        "value": "Epiclomal package, software for clustering of sparse DNA methylation data \n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9699572472110887,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "The base inputs for epiclomal are a list of cells of interest and their bismark bisulfite read files, a file containing regions of interest, and if available, a true cluster file.\n \n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8172343317430931,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "The final outputs of the epiclomal pipeline are a file containing the best clustering from epiclomal, which can be found through `all_results_bestrun_{basic|region}.tsv` which is created by the final evaluation script, and final methylation plots of the clustering.\n \n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9932131218382169,
      "result": {
        "original_header": "process_real_data",
        "type": "Text_excerpt",
        "value": "Contains R scripts to process DNA methylation data given a set of functional regions to be ingestable by REpiclomal in R and Epiclomal in Python.\n \n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9147972270558848,
      "result": {
        "original_header": "REpiclomal",
        "type": "Text_excerpt",
        "value": "Contains REpiclomal R package. Contains non-probabilistic clustering method calling functions, visualization functions, and epiclomal evaluation functions.\n \n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9404718865309232,
      "result": {
        "original_header": "scripts",
        "type": "Text_excerpt",
        "value": "Contains R scripts that are called by various parts of the epiclomal workflow. Scripts mainly call functions found in REpiclomal R package. These R scripts generate synthetic data, run non-probabilistic methods and generate plots. Some of the requirements for scripts are: MCMCpack, densityCut (https://bitbucket.org/jerry00/densitycut_dev) and its requirements, NbClust, pcaMethods, pheatmap, argparse.\n \n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9731030299581008,
      "result": {
        "original_header": "snakemake",
        "type": "Text_excerpt",
        "value": "Contains Snakefiles and config files that run Epiclomal workflow for real and synthetic data. \n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/shahcompbio/Epiclomal/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/molonc/Epiclomal/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "molonc/Epiclomal"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Epiclomal"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/snakemake/process_real_data/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/snakemake/filter_regions/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/snakemake/synthetic_data/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/snakemake/real_data/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/dimensionality_reduction/run_dr.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/subsampling/create_subsampled_datasets_Smallwood2014.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/subsampling/run_Smallwood2014_ncells.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/subsampling/run_Hou2016_ncells.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/subsampling/run_Smallwood2014_missp.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/subsampling/create_summary_plot_subsampling.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/process_real_data/Hou2016/run_Hou2016.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/process_real_data/Smallwood2014/run_Smallwood2014.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/process_real_data/Farlik2016/run_Farlik2016.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/synthetic/run_missing.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/synthetic/run_ndiffreg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/real_data/Hou2016/run_Hou2016.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/real_data/Smallwood2014/run_Smallwood2014.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/paper_experiments/real_data/Farlik2016/run_Farlik2016.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/./snakemake/diagrams/synthetic_data.svg"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/./snakemake/diagrams/process_real_data.svg"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/./snakemake/diagrams/real_data.svg"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup and Installation",
        "parent_header": [
          "Epiclomal"
        ],
        "type": "Text_excerpt",
        "value": "Set up conda with the required packages.\n\nFirst ensure you have the correct channels:\n```\nconda config --add channels 'https://conda.anaconda.org/dranew'\nconda config --add channels 'https://conda.anaconda.org/aroth85'\nconda config --add channels 'https://conda.anaconda.org/shahcompbio'\nconda config --add channels 'bioconda'\nconda config --add channels 'r'\nconda config --add channels 'conda-forge'\n```\n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From Source",
        "parent_header": [
          "Epiclomal",
          "Setup and Installation"
        ],
        "type": "Text_excerpt",
        "value": "Clone Epiclomal:\n\n```\ngit clone https://github.com/shahcompbio/Epiclomal.git\ncd Epiclomal\n```\n\nThen create an environment with the required packages:\n\n```\nconda create --name Epiclomal --file conda_packages.txt\n```\n\nActivate the environment:\n\n```\nconda activate Epiclomal\n```\n\nAdd Epiclomal Python package into the current site packages:\n```\npython setup.py install\n```\n\nEpiclomal R package has a dependency on DensityCut, which must be manually installed before adding Epiclomal R package. Install according to instructions listed here: https://bitbucket.org/jerry00/densitycut_dev/\n\nor \n\n```\ngit clone https://<BBUSERNAME>@bitbucket.org/jerry00/densitycut_dev.git\nR CMD build densitycut_dev/\nR CMD INSTALL densitycut_0.0.1.tar.gz\n```\n\nEpiclomal also has a dependency on the bigstatsr R package, to install, run command\n```\nremotes::install_github(\"privefl/bigstatsr\")\n```\nin R.\n\nAdd Epiclomal R package into current site packages:\n```\nR CMD build REpiclomal\nR CMD INSTALL REpiclomal_1.0.tar.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8098837056202707,
      "result": {
        "original_header": "epiclomal",
        "type": "Text_excerpt",
        "value": "Contains the Epiclomal python package. Package includes software to run Epiclomal clustering as well as clustering evaluation script.\n \n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/molonc/Epiclomal/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Epiclomal"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "molonc"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 303332,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 161452,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 15991,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 13910,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run entire pipeline with generated synthetic data",
        "parent_header": [
          "Epiclomal",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "A Snakemake workflow exists to generate synthetic data and run the clustering and cluster evaluation software against the generated data.\n\nThis workflow follows this diagram, but with 300 iterations for run_epiclomal_basic and run_epiclomal_region\n\n![Alt text](./snakemake/diagrams/synthetic_data.svg)\n\nThe Synthetic_data Snakemake workflow requires a config file, an example config file can be found at `Epiclomal/snakemake/synthetic_data/config.yaml`, replace fields with appropriate paths and parameters. Then run\n```\nsnakemake -s /path/to/Epiclomal/snakemake/synthetic_data/Snakefile --configfile /path/to/Epiclomal/snakemake/synthetic_data/config.yaml\n```\nto run the workflow locally. To submit the jobs on the shahlab cluster and with parallelization, run\n```\nsnakemake -s /path/to/Epiclomal/snakemake/synthetic_data/Snakefile --cluster 'qsub -V -hard -q shahlab.q -l h_vmem={resources.h_vmem}G -S /bin/bash -o {params.qsub_out} -e {params.qsub_err}' -j 8 --configfile /path/to/Epiclomal/snakemake/synthetic_data/config.yaml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run pipeline with real data",
        "parent_header": [
          "Epiclomal",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The real data pipeline requires two steps which are separated into two workflows.\nFirst, the real data must be preprocessed into a methylation and region file to be consumed by the clustering software.\n\n![Alt text](./snakemake/diagrams/process_real_data.svg)\n\nThe real data processing workflow requires a config file, an example config file can be found at `Epiclomal/snakemake/process_real_data/config.yaml`, edit with appropriate paths and parameters. Ensure all cells to cluster are accounted for. Then run\n\n```\nsnakemake -s /path/to/Epiclomal/snakemake/process_real_data/Snakefile --cluster 'qsub -V -hard -q shahlab.q -l h_vmem={resources.h_vmem}G -S /bin/bash -o {params.qsub_out} -e {params.qsub_err}' -j 8 --configfile /path/to/Epiclomal/snakemake/process_real_data/config.yaml\n```\n\nThen, to run the real data through the clustering software, an example config file can be found at `Epiclomal/snakemake/real_data/config.yaml`, replace fields with the paths to the newly generated methylation and region files. Include a true clusters file if available.\nThe real data workflow does 1000 iterations of Epiclomal by default, to change this, edit line 13 of the Snakefile.\n\n![Alt text](./snakemake/diagrams/real_data.svg)\n\n```\nsnakemake -s /path/to/Epiclomal/snakemake/real_data/Snakefile --cluster 'qsub -V -hard -q shahlab.q -l h_vmem={resources.h_vmem}G -S /bin/bash' -j 8 --configfile /path/to/Epiclomal/snakemake/real_data/config.yaml\n```\n\nDepending on the size of the data (number of cells and number of loci), more memory may be needed for each job, to do so, change the snakemake command to have `h_vmem={memory_required}`\n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:13:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Epiclomal R package",
        "parent_header": [
          "Epiclomal",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "In R, run `library(REpiclomal)` to use Epiclomal R Package and `?REpiclomal` in R for documentation.\n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Epiclomal Python package",
        "parent_header": [
          "Epiclomal",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The Epiclomal Python package includes two scripts. One is the Epiclomal clustering algorithm and can be run using:\n```\nepiclomal {Basic-GeMM,Basic-BayesPy,Region-GeMM} --K {K} --config_file {config_file} --methylation_file {methylation_file} --copynumber_file {copynumber_file} --regions_file {regions_file} --initial_clusters_file {initial_clusters_file} --true_clusters_file {true_clusters_file} --true_prevalences {true_prevalences} --repeat_id {repeat_id} --bulk_file {bulk_file} --slsbulk_file {slsbulk_file} --slsbulk_iterations {slsbulk_iterations} --out_dir {out_dir} --mu_has_k {mu_has_k} --convergence_tolerance {convergence_tolerance} --max_num_iters {max_num_iters} --seed {seed} --labels_file {labels_file} --Bishop_model_selection {Bishop_model_selection} --check_uncertainty {check_uncertainty}\n```\n\nThe other script is an clustering evaluation script that can be run using:\n```\nevaluate_clustering --true_clusters_file {true_clusters_file} --true_prevalences {true_prevalences} --predicted_clusters_file {predicted_clusters_file} --clusters_are_probabilities {clusters_are_probabilities} --results_file {results_file}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/shahcompbio/Epiclomal/master/README.md",
      "technique": "header_analysis"
    }
  ]
}