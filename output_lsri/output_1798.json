{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FrietzeLabUVM/ssvQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-14T00:10:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-16T11:22:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "R package for QC of enrichment based NGS assays.  ChIP-seq, cut&run, ATAC-seq, etc."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.829640753220654,
      "result": {
        "original_header": "ssvQC",
        "type": "Text_excerpt",
        "value": "R package for QC of enrichment based NGS assays.  ChIP-seq, cut&amp;run, ATAC-seq, etc.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FrietzeLabUVM/ssvQC/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FrietzeLabUVM/ssvQC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FrietzeLabUVM/ssvQC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FrietzeLabUVM/ssvQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ssvQC"
      },
      "source": "https://raw.githubusercontent.com/FrietzeLabUVM/ssvQC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "The most reliable and recommended installation method is to use the current devel version (3.14) of BiocConductor.\n\n```\ninstall.packages(\"BiocManager\")\nBiocManager::install(version = \"devel\")\nBiocManager::install(\"seqsetvis\")\ninstall.packages(\"devtools\") \ndevtools::install_github(\"FrietzeLabUVM/ssvQC\")\n```\n\nAlternatively, the following should work with most recent BiocConductor versions as long as they're compatible with the seqsetvis version on github.\n\nIf this doesn't work, try the next set of instructions.\n\n```\n#unless you're using the most recent dev version of BioConductor, you'll need the install seqsetvis from github.\ninstall.packages(\"devtools\") \ndevtools::install_github(\"jrboyd/seqsetvis\")\ndevtools::install_github(\"FrietzeLabUVM/ssvQC\")\n```\n\nFor older versions of R (prior to R 4.0) it is tricky to get the requried version of seqsetvis installed alongside older BiocConductor packages.\n\nThe following works in R 3.6.3 with BioConductor 3.10, though you will see various deprecation messages once per session.\n\n```\n#this creates a designated personal library so that you don't muck up your existing R setup\ndev_lib = paste0(.libPaths()[1], \".dev\")\ndir.create(dev_lib)\n.libPaths(dev_lib)\n.libPaths()\n\ninstall.packages(\"devtools\")\n\n#dplyr_1.0.0  dbplyr_1.3.0 works\n#Do not update existing packages if asked!\ndevtools::install_version(\"dplyr\", \"1.0.0\")\ndevtools::install_version(\"dbplyr\", \"1.3.0\")\n\ndevtools::install_github(\"jrboyd/seqsetvis\")\ndevtools::install_github(\"FrietzeLabUVM/ssvQC\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/FrietzeLabUVM/ssvQC/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FrietzeLabUVM/ssvQC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "atac-seq, bioinformatics, chip-seq, enrichment, ngs-assays, peaks, r"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "YEAR: 2021\nCOPYRIGHT HOLDER: Joseph R Boyd\n"
      },
      "source": "https://raw.githubusercontent.com/FrietzeLabUVM/ssvQC/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ssvQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "FrietzeLabUVM"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 307879,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FrietzeLabUVM/ssvQC/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:20:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Simple",
        "parent_header": [
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "The simplest (though not necessarily recommended) way to start using ssvQC is by generating 2 character vectors of file paths: one of signal files (bam or bigwig), the second for feature files (bed, narrowPeak, etc.)\n\nssvQC comes with example files that consist of 100 random peaks from a CTCF ChIP-seq in breast cancer cell lines.\n\n```\npkg_path = system.file(\"extdata\", package = \"ssvQC\")\nnp_files = dir(pkg_path, pattern = \"random100.narrowPeak\", full.names = TRUE)\nbam_files = dir(pkg_path, pattern = \"100peaks.bam$\", full.names = TRUE)\n```\n\nNext we'll create an ssvQC object using these files.\n\n```\noptions(mc.cores = 8)\nset.seed(0)\nsqc = ssvQC(np_files, bam_files)\nsqc = ssvQC.runAll(sqc)\n```\n\nssvQC.runAll does all the data processing and generates all plots.  \n\nssvQC objects are intended to be accessed via the $ accessor.  \n\nFor instance, looking at the peak overlap is done like so.\n\n```\nsqc$plots$features$count\nsqc$plots$features$venn\n```\n\nAnother example, the strand-cross correlation (SCC) plot is accessed like so.\n\n```\nsqc$plots$SCC$curves\n```\n\nHere we can look at the read pileup in each bam at the peaks.\n\n```\ncowplot::plot_grid(\n  sqc$plots$signal$heatmaps$All_features$All_signal,\n  sqc$plots$signal$heatmaps.lines$All_features$All_signal\n)\n```\n\nWe can also fiddle with the colors\n\n```\nsqc$feature_config$color_mapping$MCF10A_CTCF_random100.narrowPeak = \"red\"\nsqc$feature_config$color_mapping$MCF10AT1_CTCF_random100.narrowPeak = \"blue\"\nsqc$feature_config$color_mapping$MCF10CA1_CTCF_random100.narrowPeak = \"green\"\n#plots need to be regenerated after a change like this, unfortunately\nsqc = ssvQC.runAll(sqc)\nsqc$plots$features$count\nsqc$plots$features$venn\n```\n"
      },
      "source": "https://raw.githubusercontent.com/FrietzeLabUVM/ssvQC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Recommended",
        "parent_header": [
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "The most powerful way to control ssvQC is by the use of configuration files.\n\n```\nbam_config = file.path(pkg_path, \"ssvQC_bam_config.csv\")\npeak_config = file.path(pkg_path, \"ssvQC_peak_config.csv\")\n\nsqc.config = ssvQC(peak_config, bam_config)\nsqc.config = ssvQC.runAll(sqc.config)\n\nsqc.config$plots$features$count\nsqc.config$plots$features$venn\n```\n"
      },
      "source": "https://raw.githubusercontent.com/FrietzeLabUVM/ssvQC/main/README.md",
      "technique": "header_analysis"
    }
  ]
}