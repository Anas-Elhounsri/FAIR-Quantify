{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TNTurnerLab/ACES"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-02-25T10:02:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-21T18:44:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ACES is a workflow to query small sequences in a large set of genomes. It provides several outputs including BLAST results, a multiple sequence alignment file, a graphical fragment assembly file, and a phylogenetic tree file."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9847239506250994,
      "result": {
        "type": "Text_excerpt",
        "value": "**ACES: Analysis of Conservation with an Extensive list of Species** \n   \nLaboratory of Dr. Tychele N. Turner, Ph.D. \n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/TNTurnerLab/ACES/wiki/Retrieving-Reference-Genome-Data"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/TNTurnerLab/ACES/wiki"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TNTurnerLab/ACES/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TNTurnerLab/ACES/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TNTurnerLab/ACES"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/ACES_wdl_workflow/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/ACES_wdl_workflow/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/images/terra_data_setup.png"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/images/terra_setup_actual.png"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Terra account setup",
        "parent_header": [
          "To run ACES in the cloud using Terra"
        ],
        "type": "Text_excerpt",
        "value": "To first setup ACES in the cloud, you\u2019ll need to have a [Terra account linked to GCP](https://github.com/TNTurnerLab/ACES/wiki/Setting-Up-Your-Terra-Cloud-Account) and have setup your [Workspace with ACES in it](https://github.com/TNTurnerLab/ACES/wiki/Setting-Up-Your-Workspace-with-ACES).  \n\n\nNext you'll need to upload your query, database, and sample files into your Workspace.  To do so, go to the \u201cDATA\u201d tab, click on \u201cFiles\u201d on the left, then on the bottom right click on the blue + symbol.  Select the files and upload them.  If you are running our example, your DATA folder should look like this:\n\n![](https://github.com/TNTurnerLab/ACES/blob/master/images/terra_data_setup.png)\n\nNow go to the \"WORKFLOWS\" tab and select those files for their corresponding variable tag.  An easy way to do this is to click on the folder icon and then click on the corresponding file.  Then fill in the rest of the options as necessary.  Here is a setup that runs with our example\n\n![](https://github.com/TNTurnerLab/ACES/blob/master/images/terra_setup_actual.png)\n\nAfter doing so, just fill in the necessary config values, a full list of which [can be found here.](https://github.com/TNTurnerLab/ACES/wiki/Config-File-Details) \n\nMake sure that the \"Run workflow with inputs defined by file paths\" option is selected, save your table, and then hit \"RUN ANALYSIS\"\n\nYou can view the progress of the job by clicking on \u201cJob Manager\u201d.  You\u2019ll also see the Outputs from this screen as well, or you can go to the corresponding Google bucket for your job.\n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Inital setup",
        "parent_header": [
          "To run ACES locally"
        ],
        "type": "Text_excerpt",
        "value": "  \nTo run the job locally, you\u2019ll need to have Java, Docker, and a Cromwell jar installed.  \n\n* To test if you have Java installed, type `java \u2013version` into the command line and it should return the version of java installed on your computer.   If not, please visit this [site](https://docs.oracle.com/en/java/javase/index.html) to download the jdk for your OS.  \n\n* To download docker, go to this [site](https://docs.docker.com/get-docker/) and install Docker for your OS.  \n  \n\n* Please ensure that both java and docker are in your $PATH.  \n\n\nTo download the Cromwell .jar file, please go [site](https://github.com/broadinstitute/cromwell/releases) and download the latest stable build of the Cromwell jar.  In the example below, we will be using Cromwell version 65.  \n   \n\nWhen setting up your working directory, it is recommended that ACES directory and the database directory are in the same root directory. To download the the ACES workflow, please clone this repo:\n\n```\ngit clone https://github.com/TNTurnerLab/ACES.git\n```\n\n   \nYou can obtain the reference genome data from either our Google bucket or Globus endpoint as described on our [wiki](https://github.com/TNTurnerLab/ACES/wiki/Retrieving-Reference-Genome-Data)\n\n \n\n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Setup and run",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow"
        ],
        "type": "Text_excerpt",
        "value": "Here is an example set up of inputs.json, local.conf, and command run:  \n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "inputs.json:",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow",
          "Example Setup and run"
        ],
        "type": "Text_excerpt",
        "value": "``` \n{  \n  \"aces.datadb\": \"../Example/dbfile_KVON.txt\", \n  \"aces.samples_file\": \"../Example/Kvon_et_al_2016_species.txt\",  \n  \"aces.threshold\": 0.3,  \n  \"aces.query\": \"../Example/ZRS_from_Kvon_et_al_2016.fa\",  \n  \"aces.max_num_seq\": 1,  \n  \"aces.pathToInput\": \"/home/jeff/Desktop/run_aces/Kvon_et_al_Genomes_db\",  \n  \"aces.eval\": 0.00001  \n} \n``` "
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "local.conf submit-docker change:",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow",
          "Example Setup and run"
        ],
        "type": "Text_excerpt",
        "value": "``` \nsubmit-docker = \"\"\"  \ndocker run \\  \n--rm -i \\  \n${\"--user \" + docker_user} \\  \n--entrypoint ${job_shell} \\  \n-v /home/jeff/Desktop/run_aces : /home/jeff/Desktop/run_aces  -v ${cwd}:${docker_cwd} \\  \n${docker} ${docker_script}  \n\"\"\"  \n``` \n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Working directory setup:",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow",
          "Example Setup and run"
        ],
        "type": "Text_excerpt",
        "value": "``` \n(base) jeff@jeff-OptiPlex-7060:~/Desktop/run_aces$ ls  \nACES  cromwell-65.jar  Kvon_et_al_Genomes_db  \n``` \n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Checking the results:",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow",
          "Example Setup and run"
        ],
        "type": "Text_excerpt",
        "value": "``` \n(base) jeff@jeff-OptiPlex-7060:~/Desktop/run_aces/ACES/ACES_wdl_workflow$ cd cromwell-executions/b1a94f47-37ac-490a-bfc0-fa52ba49c22c/ \n(base) jeff@jeff-OptiPlex-7060:~/Desktop/run_aces/ACES/ACES_wdl_workflow/cromwell-executions/aces/b1a94f47-37ac-490a-bfc0-fa52ba49c22c$ ls \ncall-BLAST  call-findThresh  call-generateReport  call-grabinput  call-MSA \n```\n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TNTurnerLab/ACES/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cloud, conservation, cromwell, genetics, genomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 TNTurnerLab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ACES"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "TNTurnerLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 11975,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "WDL",
        "size": 10251,
        "type": "Programming_language",
        "value": "WDL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 491,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jng2",
          "type": "User"
        },
        "date_created": "2021-09-17T20:27:11Z",
        "date_published": "2021-09-17T20:31:57Z",
        "description": "Converted the original Snakemake workflow into a Cromwell workflow.  Is also now able to run in the cloud using Terra.",
        "html_url": "https://github.com/TNTurnerLab/ACES/releases/tag/v.1.2",
        "name": "ACES v.1.2",
        "release_id": 49775514,
        "tag": "v.1.2",
        "tarball_url": "https://api.github.com/repos/TNTurnerLab/ACES/tarball/v.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/TNTurnerLab/ACES/releases/49775514",
        "value": "https://api.github.com/repos/TNTurnerLab/ACES/releases/49775514",
        "zipball_url": "https://api.github.com/repos/TNTurnerLab/ACES/zipball/v.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "emehinovic72",
          "type": "User"
        },
        "date_created": "2021-06-21T16:04:44Z",
        "date_published": "2021-06-21T16:05:07Z",
        "description": "Updated ACES code release. Release includes new feature for user inputted num_alignments argument (for BLASTn search).",
        "html_url": "https://github.com/TNTurnerLab/ACES/releases/tag/v.1.1",
        "name": "ACES v.1.1",
        "release_id": 44973478,
        "tag": "v.1.1",
        "tarball_url": "https://api.github.com/repos/TNTurnerLab/ACES/tarball/v.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/TNTurnerLab/ACES/releases/44973478",
        "value": "https://api.github.com/repos/TNTurnerLab/ACES/releases/44973478",
        "zipball_url": "https://api.github.com/repos/TNTurnerLab/ACES/zipball/v.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "emehinovic72",
          "type": "User"
        },
        "date_created": "2021-06-16T20:26:36Z",
        "date_published": "2021-06-18T14:22:08Z",
        "description": "First release of ACES (v.1.0) program.",
        "html_url": "https://github.com/TNTurnerLab/ACES/releases/tag/v.1.0",
        "name": "ACES v.1.0",
        "release_id": 44869486,
        "tag": "v.1.0",
        "tarball_url": "https://api.github.com/repos/TNTurnerLab/ACES/tarball/v.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/TNTurnerLab/ACES/releases/44869486",
        "value": "https://api.github.com/repos/TNTurnerLab/ACES/releases/44869486",
        "zipball_url": "https://api.github.com/repos/TNTurnerLab/ACES/zipball/v.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Modify the config files",
        "parent_header": [
          "To run ACES locally"
        ],
        "type": "Text_excerpt",
        "value": "\nAfter obtaining the genomes and cloning this repo, you\u2019ll need to modify the inputs.json file for the wdl and the local.conf files found within the ACES_wdl_workflow folder.  \n\n\ninputs.json:  \n\n* \"aces.datadb\": \"/path/to/database_file\"   \n* \"aces.samples_file\": \"/path/to/list_of_genomes.txt\",  \n* \"aces.threshold\": 0.3, #Query Length Percentage  \n* \"aces.query\": \"/path/to/query.fasta\",  \n* \"aces.max_num_seq\": 1, #max number of entries to look for when running BLAST  \n* \"aces.pathToInput\": \"/path/to/database\",  \n* \"aces.eval\": 0.00001 #BLAST evalue threshold  \n\nAn example inputs.json file to run the Kvon_et_al_2016 genomes is provided.  \n\n\nYou\u2019ll also need to modify the local.conf file so that, under \u201csubmit-docker\u201d where you\u2019ll need to add the path to the working directory using the \u2013v command.   If the ACES and the database directory don't share the same root, you'll need to add both paths with -v. \n\n``` \nsubmit-docker = \"\"\" \n        docker run \\ \n          --rm -i \\ \n          ${\"--user \" + docker_user} \\ \n          --entrypoint ${job_shell} \\\n          -v /path/to/working/directory:/path/to/working/directory -v ${cwd}:${docker_cwd} \\ \n          ${docker} ${docker_script} \n        \"\"\" \n``` \n\n  \n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the workflow",
        "parent_header": [
          "To run ACES locally"
        ],
        "type": "Text_excerpt",
        "value": "After setting all this up, you can run the workflow by running this command:   \n\n``` \njava -Dconfig.file=local.conf  \u2013jar /path/to/cromwell-<version_number>.jar run small.aces.wdl --inputs inputs.json  \n``` \nAfter the workflow finished, you should see `[info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.`  above the list of output. This will let you know that the workflow ran without issue. \n\nUnder the list of generated output, you'll see an id number: \n``` \n\"id\": \"<job_id>\" \n``` \n\nCromwell also would have created two new directories:  `cromwell-executions` and `cromwell-workflow-logs`.  To find the output, follow this general path: \n\n  \n\n``` \ncromwell-executions/aces/<job id>/<task-name>/execution  \n``` \n\nThe BLAST output can be found in call-BLAST  \n\n  \n\nThe MSA muscle alignment, and RAxML phylogenetic tree can be found in call-MSA  \n\n  \n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Setup and run",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow"
        ],
        "type": "Text_excerpt",
        "value": "Here is an example set up of inputs.json, local.conf, and command run:  \n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "inputs.json:",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow",
          "Example Setup and run"
        ],
        "type": "Text_excerpt",
        "value": "``` \n{  \n  \"aces.datadb\": \"../Example/dbfile_KVON.txt\", \n  \"aces.samples_file\": \"../Example/Kvon_et_al_2016_species.txt\",  \n  \"aces.threshold\": 0.3,  \n  \"aces.query\": \"../Example/ZRS_from_Kvon_et_al_2016.fa\",  \n  \"aces.max_num_seq\": 1,  \n  \"aces.pathToInput\": \"/home/jeff/Desktop/run_aces/Kvon_et_al_Genomes_db\",  \n  \"aces.eval\": 0.00001  \n} \n``` "
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "local.conf submit-docker change:",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow",
          "Example Setup and run"
        ],
        "type": "Text_excerpt",
        "value": "``` \nsubmit-docker = \"\"\"  \ndocker run \\  \n--rm -i \\  \n${\"--user \" + docker_user} \\  \n--entrypoint ${job_shell} \\  \n-v /home/jeff/Desktop/run_aces : /home/jeff/Desktop/run_aces  -v ${cwd}:${docker_cwd} \\  \n${docker} ${docker_script}  \n\"\"\"  \n``` \n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the code:",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow",
          "Example Setup and run"
        ],
        "type": "Text_excerpt",
        "value": "```\ncd ACES/ACES_wdl_workflow  \njava -Dconfig.file=local.conf -jar ../../cromwell-65.jar run small_aces.wdl --inputs inputs.json  \n``` \n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Checking the results:",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow",
          "Example Setup and run"
        ],
        "type": "Text_excerpt",
        "value": "``` \n(base) jeff@jeff-OptiPlex-7060:~/Desktop/run_aces/ACES/ACES_wdl_workflow$ cd cromwell-executions/b1a94f47-37ac-490a-bfc0-fa52ba49c22c/ \n(base) jeff@jeff-OptiPlex-7060:~/Desktop/run_aces/ACES/ACES_wdl_workflow/cromwell-executions/aces/b1a94f47-37ac-490a-bfc0-fa52ba49c22c$ ls \ncall-BLAST  call-findThresh  call-generateReport  call-grabinput  call-MSA \n```\n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:18:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Setup and run",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow"
        ],
        "type": "Text_excerpt",
        "value": "Here is an example set up of inputs.json, local.conf, and command run:  \n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "inputs.json:",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow",
          "Example Setup and run"
        ],
        "type": "Text_excerpt",
        "value": "``` \n{  \n  \"aces.datadb\": \"../Example/dbfile_KVON.txt\", \n  \"aces.samples_file\": \"../Example/Kvon_et_al_2016_species.txt\",  \n  \"aces.threshold\": 0.3,  \n  \"aces.query\": \"../Example/ZRS_from_Kvon_et_al_2016.fa\",  \n  \"aces.max_num_seq\": 1,  \n  \"aces.pathToInput\": \"/home/jeff/Desktop/run_aces/Kvon_et_al_Genomes_db\",  \n  \"aces.eval\": 0.00001  \n} \n``` "
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "local.conf submit-docker change:",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow",
          "Example Setup and run"
        ],
        "type": "Text_excerpt",
        "value": "``` \nsubmit-docker = \"\"\"  \ndocker run \\  \n--rm -i \\  \n${\"--user \" + docker_user} \\  \n--entrypoint ${job_shell} \\  \n-v /home/jeff/Desktop/run_aces : /home/jeff/Desktop/run_aces  -v ${cwd}:${docker_cwd} \\  \n${docker} ${docker_script}  \n\"\"\"  \n``` \n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Checking the results:",
        "parent_header": [
          "To run ACES locally",
          "Running the workflow",
          "Example Setup and run"
        ],
        "type": "Text_excerpt",
        "value": "``` \n(base) jeff@jeff-OptiPlex-7060:~/Desktop/run_aces/ACES/ACES_wdl_workflow$ cd cromwell-executions/b1a94f47-37ac-490a-bfc0-fa52ba49c22c/ \n(base) jeff@jeff-OptiPlex-7060:~/Desktop/run_aces/ACES/ACES_wdl_workflow/cromwell-executions/aces/b1a94f47-37ac-490a-bfc0-fa52ba49c22c$ ls \ncall-BLAST  call-findThresh  call-generateReport  call-grabinput  call-MSA \n```\n"
      },
      "source": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TNTurnerLab/ACES/master/ACES_wdl_workflow/small_aces.wdl"
      },
      "technique": "file_exploration"
    }
  ]
}