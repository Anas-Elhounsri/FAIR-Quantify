{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/weipenegHU/Pluto"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-05-29T06:29:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-10-10T04:07:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MHC-I epitope presentation prediction based on transfer learning"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8777916330398763,
      "result": {
        "original_header": "Pluto",
        "type": "Text_excerpt",
        "value": "__pretrain.py__ is for pretraining a model to recognize common features of the epitopes, which will be used to train the pluto model.  \nUsage:  \n`python pretrain.py [training dataset] [development dataset]`  \nExample:  \n`python pretrain.py data/pretrain/train_peptide.csv data/pretrain/dev_peptide.csv`   \n__predict.py__ is for predicting epitope presentation for specific allele by using the already trained model.  \nUsage:  \n`python predict.py [checkpoint dir] [input file] [output file]`  \nExample:  \nif you want to predict a list of peptide will be presented by HLA-A0101, you can use:  \n`python predict.py model/A0101/pretrain/ data/A0101/dev_peptide.csv output.csv`  \n \n"
      },
      "source": "https://raw.githubusercontent.com/weipenegHU/Pluto/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/weipenegHU/Pluto/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/weipenegHU/Pluto/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "weipenegHU/Pluto"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pluto"
      },
      "source": "https://raw.githubusercontent.com/weipenegHU/Pluto/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9932836745861718,
      "result": {
        "original_header": "Pluto",
        "type": "Text_excerpt",
        "value": "Software install: \nDownload the zip file and uncompress it, you are good to go. However, make sure the following dependencies are installed before you use Pluto:\n1. pandas \n2. numpy\n3. tensorflow \n"
      },
      "source": "https://raw.githubusercontent.com/weipenegHU/Pluto/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9452963231028173,
      "result": {
        "original_header": "Pluto",
        "type": "Text_excerpt",
        "value": "__pretrain.py__ is for pretraining a model to recognize common features of the epitopes, which will be used to train the pluto model.  \nUsage:  \n`python pretrain.py [training dataset] [development dataset]`  \nExample:  \n`python pretrain.py data/pretrain/train_peptide.csv data/pretrain/dev_peptide.csv`   \n__pluto.py__ is for training the final allele specific epitope presentation prediction model.  \nUsage:  \n`python pluto.py [HLA] [training dataset] [developent dataset]`  \nExample:  \n`python pluto.py A0101 data/A0101/train_peptide.csv data/A0101/dev_peptide.csv`   \n__predict.py__ is for predicting epitope presentation for specific allele by using the already trained model.  \nUsage:  \n`python predict.py [checkpoint dir] [input file] [output file]`  \nExample:  \nif you want to predict a list of peptide will be presented by HLA-A0101, you can use:  \n`python predict.py model/A0101/pretrain/ data/A0101/dev_peptide.csv output.csv`  \n \n"
      },
      "source": "https://raw.githubusercontent.com/weipenegHU/Pluto/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/weipenegHU/Pluto/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pluto"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "weipenegHU"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 13033,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/weipenegHU/Pluto/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:02:24",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ]
}