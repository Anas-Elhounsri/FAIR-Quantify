{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dongwang881107/snapMRF"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-02-26T09:08:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-07-17T14:20:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CUDA package to generate MRF dictionaries and maps"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.956902993854593,
      "result": {
        "original_header": "snapMRF: GPU-Accelerated Magnetic Resonance Fingerprinting Dictionary Generation and Matching using Extended Phase Graphs",
        "type": "Text_excerpt",
        "value": "snapMRF is an open-source CUDA-based GPU code to generate MRF dictionaries and parameter maps as\nfast as possible with validated accuracy.  \nDictionaries can be generated using both Bloch equation simulation (ROA) and extended phase graphs (EPG), and parameter maps are reconstructed using template matching (maximum inner product).  \nTop row: Example in vivo brain parameter maps generated using snapMRF. From left to right: T1,\nT2, off-resonance, and proton density, respectively. Bottom row: Parameter\nmaps generated using the ROA-based MATLAB code of Ma et al. \nRun time comparison between snapMRF and MATLAB in dictionary generation and\nmatching. Note the log scale. Time increases linearly with the dictionary size,\nshowing efficient parallelization. For this example, with 240 x 240 image\nvoxels, matching took much less time than dictionary generation. \n"
      },
      "source": "https://raw.githubusercontent.com/chixindebaoyu/snapMRF/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9241982720453578,
      "result": {
        "original_header": "Directory Structure",
        "type": "Text_excerpt",
        "value": "- `/src` Contains CUDA utility functions that can be used to generate MRF dictionaries, reconstruct parameter maps and run unit tests.\n- `/matlab` Contains MATLAB utility functions as the comparsion with CUDA.\n- `/data` Constains datasets for mrf and unit tests\n- `/result` Contains the maps used in the paper.\n- `/fig` Contains the python functions that can be used to plot the figures in the paper.\n \n"
      },
      "source": "https://raw.githubusercontent.com/chixindebaoyu/snapMRF/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9628479575834686,
      "result": {
        "original_header": "Funding Sources",
        "type": "Text_excerpt",
        "value": "NIH R01 DK105371, NIH R01 EB017230, and NIH K25 CA176219.\n \n"
      },
      "source": "https://raw.githubusercontent.com/chixindebaoyu/snapMRF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chixindebaoyu/snapMRF/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dongwang881107/snapMRF/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dongwang881107/snapMRF"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "snapMRF: GPU-Accelerated Magnetic Resonance Fingerprinting Dictionary Generation and Matching using Extended Phase Graphs"
      },
      "source": "https://raw.githubusercontent.com/chixindebaoyu/snapMRF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chixindebaoyu/snapMRF/raw/master/fig/brain_varTR.png"
      },
      "source": "https://raw.githubusercontent.com/chixindebaoyu/snapMRF/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chixindebaoyu/snapMRF/raw/master/fig/time.png"
      },
      "source": "https://raw.githubusercontent.com/chixindebaoyu/snapMRF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing",
        "parent_header": [
          "snapMRF: GPU-Accelerated Magnetic Resonance Fingerprinting Dictionary Generation and Matching using Extended Phase Graphs"
        ],
        "type": "Text_excerpt",
        "value": "To install, run the following commands in the `src/` subdirectory:\n- `make`\n- `sudo make install`\n"
      },
      "source": "https://raw.githubusercontent.com/chixindebaoyu/snapMRF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9965582465625931,
      "result": {
        "original_header": "snapMRF: GPU-Accelerated Magnetic Resonance Fingerprinting Dictionary Generation and Matching using Extended Phase Graphs",
        "type": "Text_excerpt",
        "value": "\n<img src=\"https://github.com/chixindebaoyu/snapMRF/raw/master/fig/brain_varTR.png\" alt=\"Example Reconstruction\" width=\"800\"/> \n\n<img src=\"https://github.com/chixindebaoyu/snapMRF/raw/master/fig/time.png\" alt=\"Timing Results\" width=\"600\"/> \n"
      },
      "source": "https://raw.githubusercontent.com/chixindebaoyu/snapMRF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dongwang881107/snapMRF/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "snapMRF"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dongwang881107"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Cuda",
        "size": 72172,
        "type": "Programming_language",
        "value": "Cuda"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 23419,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 10435,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 8785,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 2960,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 459,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chixindebaoyu/snapMRF/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dongwang881107",
          "type": "User"
        },
        "date_created": "2019-03-11T19:02:40Z",
        "date_published": "2019-03-11T19:05:57Z",
        "description": "This corresponds to the initial submission of the paper.",
        "html_url": "https://github.com/dongwang881107/snapMRF/releases/tag/v0.0.1",
        "name": "Initial submission",
        "release_id": 16042920,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/dongwang881107/snapMRF/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dongwang881107/snapMRF/releases/16042920",
        "value": "https://api.github.com/repos/dongwang881107/snapMRF/releases/16042920",
        "zipball_url": "https://api.github.com/repos/dongwang881107/snapMRF/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "snapMRF: GPU-Accelerated Magnetic Resonance Fingerprinting Dictionary Generation and Matching using Extended Phase Graphs"
        ],
        "type": "Text_excerpt",
        "value": "This code has been tested using \n- Ubuntu 18.04\n- CUDA 10.0\n- Python 3.5\n\nAt minimum a working CUDA installation, including cuBLAS, is required to run the \ncode. Python is required to generate the figures from the paper.\n"
      },
      "source": "https://raw.githubusercontent.com/chixindebaoyu/snapMRF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:16:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "snapMRF: GPU-Accelerated Magnetic Resonance Fingerprinting Dictionary Generation and Matching using Extended Phase Graphs"
        ],
        "type": "Text_excerpt",
        "value": "```\nUsage: mrf [OPTION] <rfpulse.csv> <imgstack.ra>\n\t-M, --b1map <rafile>\t\t B1 map input RA file\n\t-N, --NATOMS\t\t\t number of atoms\n\t-a, --atoms <rafile>\t\t dictionary atoms output RA file\n\t-m, --maps  <rafile>\t\t parameter map output RA file\n\t-p, --params <rafile>\t\t dictionary parameters\n\t-t, --T1 start:step:end\t\t T1 grid\n\t-s, --T2 start:step:end\t\t T2 grid\n\t-b, --B0 start:step:end\t\t B0 grid\n\t-r, --B1 start:step:end\t\t B1 grid\n\t-w, --states n\t\t\t number of historical states to track\n\t-e, --echo_type n\t\t echo type\n\t-T, --timepoints n\t\t number of time points\n\t-G, --gridsize n\t\t set GPU gridsize\n\t-B, --blocksize n\t\t set GPU blocksize\n\t-h\t\t\t\t show this help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/chixindebaoyu/snapMRF/master/README.md",
      "technique": "header_analysis"
    }
  ]
}