{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jrwnter/gruenifai"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-20T12:04:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-30T10:18:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Implementation gr\u00fcnif.ai: Interactive multi-parameter optimization of molecules in a continuous vector space"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9992049682757421,
      "result": {
        "original_header": "gruenif.ai",
        "type": "Text_excerpt",
        "value": "gruenif.ai is a web application for interactive multi-parameter optimization of molecules in a continous vector space.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9849296689935544,
      "result": {
        "original_header": "Showcase of functionality",
        "type": "Text_excerpt",
        "value": "A web application is best explained through a live demo. Please watch our video for a detailed explanation of the functionality:\n[Showcase](https://www.youtube.com/watch?v=7KAgEb5twXg)\n \n"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jrwnter/gruenifai/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jrwnter/gruenifai/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jrwnter/gruenifai"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gruenif.ai"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/gruenifai/gui/client/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/gruenifai/gui/client/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/gruenifai/gui/server/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/gruenifai/gui/server/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/gruenifai/backend/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/gruenifai/backend/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/gruenifai/backend/postgres/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/gruenifai/backend/postgres/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/gruenifai/backend/wait-for-postgres.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation and setting up",
        "type": "Text_excerpt",
        "value": "In its current form gr\u00fcnifai is commposed of multiple microservices. We recommend the use of Docker to compose all microservises into one running environment.\n"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation using Docker",
        "parent_header": [
          "Installation and setting up"
        ],
        "type": "Text_excerpt",
        "value": "* clone this environment.\n* cd <REPOSITORY_DIR>\n* docker compose up\n\nThe web app can now be accessed at http://localhost:8777/\nWhen running without GPUs or to test, we recommend to set the checkbox for fastmode to reduce compute time.\n"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation using Anaconda",
        "parent_header": [
          "Installation and setting up"
        ],
        "type": "Text_excerpt",
        "value": "The repository can also be installed from scratch. That way GPU support can be enabled as well. However, currently, we recommend using the Docker installation described above."
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Installation and setting up",
          "Installation using Anaconda"
        ],
        "type": "Text_excerpt",
        "value": "1. terminal\n* clone and install [cddd](https://github.com/jrwnter/cddd)\n* clone and install [mso](https://github.com/jrwnter/mso)\n* clone this repository\n* cd <REPOSITORY_DIR>\n* conda env create -f environment.yml ( + activate this environment)\n* pip install .\n* cd <REPOSITORY_DIR>/gruenifai/backend/postgres\n* python create_db.py (assumes a running postgres server running locally)\n* cd <REPOSITORY_DIR>/gruenifai/gui/client\n* yarn install\n* yarn start\n* cp marvinjs forlder into /gruenifai/gui/client/public\n2. terminal\n* cd <REPOSITORY_DIR>/gruenifai/gui/server\n* python api.py\n3. terminal\n* cd <REPOSITORY_DIR>/gruenifai/backend/\n* python start_inference_server.py --model_dir <PATH_TO_CDDD_MODEL> --device <CUDA_DEVICE (e.g. 1 3 4)> --num_servers <NUMBER_OF_SERVERS>\n4. terminal\n* cd <REPOSITORY_DIR>/gruenifai/backend/\n* python flaskserver.py --num_swarms=<NUMBER_OF_SWARMS> --num_workers=<NUMBER_OF_WORKERS>\n\nThe web app can now be accessed at port 3000\n"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jrwnter/gruenifai/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 jrwnter\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gruenifai"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jrwnter"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 80346,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 30262,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 9049,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 2009,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1830,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 274,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Installation and setting up",
          "Installation using Anaconda"
        ],
        "type": "Text_excerpt",
        "value": "* [cddd](https://github.com/jrwnter/cddd)\n* [mso](https://github.com/jrwnter/mso)\n* psycopg2\n* flask\n* flask_restplus\n* requests\n* nodejs\n* yarn\n* pyzmq\n* marvinjs for molecule sketching: https://chemaxon.com/products/marvin-js"
      },
      "source": "https://raw.githubusercontent.com/jrwnter/gruenifai/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:08:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 29
      },
      "technique": "GitHub_API"
    }
  ]
}