{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AdaptiveComputationLab/simcov"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-14T17:14:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-07T06:19:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9857841687916166,
      "result": {
        "original_header": "SimCov",
        "type": "Text_excerpt",
        "value": "This is a model for simulating the response of the immune system to infections in the lungs.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8460717100389947,
      "result": {
        "original_header": "Versions",
        "type": "Text_excerpt",
        "value": "Note that the config folders in this version of the source code are numbered according to the figure order corresponding to the preprint, but different from the final published version.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9624632496216541,
      "result": {
        "type": "Text_excerpt",
        "value": "simcov Copyright (c) 2021, The Regents of the University of California,\nthrough Lawrence Berkeley National Laboratory (subject to receipt of\nany required approvals from the U.S. Dept. of Energy), Arizona State\nUniversity and University of New Mexico. All rights reserved. \nNOTICE.  This Software was developed under funding from the U.S. Department\nof Energy and the U.S. Government consequently retains certain rights.  As\nsuch, the U.S. Government has been granted for itself and others acting on\nits behalf a paid-up, nonexclusive, irrevocable, worldwide license in the\nSoftware to reproduce, distribute copies to the public, prepare derivative \nworks, and perform publicly and display publicly, and to permit others to do so. \n"
      },
      "source": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AdaptiveComputationLab/simcov/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AdaptiveComputationLab/simcov/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AdaptiveComputationLab/simcov"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SimCov"
      },
      "source": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/build_hopper.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/slurm_hopper.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/lungmodel/build.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing and building",
        "parent_header": [
          "SimCov"
        ],
        "type": "Text_excerpt",
        "value": "It requires [UPC++](https://bitbucket.org/berkeleylab/upcxx/wiki/Home), C++ and cmake.\n\nThis repo contains a submodule, so to install, it's best to run\n\n`git clone --recurse-submodules git@github.com:AdaptiveComputationLab/simcov.git`\n\nto fully initialize the submodules.\n\nOnce downloaded, build it with\n\n`./build.sh Release`\n\nor\n\n`./build.sh Debug`\n\nThe executable will be installed in\n\n`<simcov-repo-directory>/install/bin`\n"
      },
      "source": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8488310778795659,
      "result": {
        "original_header": "Versions",
        "type": "Text_excerpt",
        "value": "The version of simcov at commit id a7aa913288bd8139cd6fef5410811c2fad097236 on Aug 30, 2021 was used with pre-print publication https://www.biorxiv.org/content/10.1101/2021.05.19.444569v3 and the published version https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1009735. \nNote that the config folders in this version of the source code are numbered according to the figure order corresponding to the preprint, but different from the final published version.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AdaptiveComputationLab/simcov/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "simcov"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "AdaptiveComputationLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 521681,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cuda",
        "size": 49447,
        "type": "Programming_language",
        "value": "Cuda"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 38871,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 16208,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4077,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2777,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 2151,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "parent_header": [
          "SimCov"
        ],
        "type": "Text_excerpt",
        "value": "To run, execute\n\n`upcxx-run -n <number_processes> -N <number_nodes> -- simcov`\n\nTo see the parameters available, run with `-h`.\n\nIt will create an output directory, which will contain a detailed log file (`simcov.log`). It will also create a file containing\nall the configuration parameters (`simcov.config`).\n\nA run can also be executed with a config file as\n\n`upcxx-run -n <number_processes> -N <number_nodes> -- simcov --config <config_file>`\n\nThe config file consists of a list of all the command line options as key-value pairs, with semi-colons denoting comments.\nFor example:\n\n```\n; Dimensions: x y z\n  dim =                    100,100,100\n\n; Number of timesteps\n  timesteps =                   14000\n\n```\n\nAny options not specified in the config file will be set to the defaults (seen when run with `-h`).\n\nWhen running with a config file, any parameters passed on the command line will override parameters read from the config file.\n\n\nIf running in debug mode, a subdirectory\ncalled `per_thread` will appear, with one directory per process that contains debug information produced by that proc\n\nOnce the run has completed, the outputs can be viewed in paraview by opening the samples subdirectory of the output directory. To help with viewing, a python script can generate a paraview state file:\n\n```\nscripts/generate_paraview_state.py --data <output_dir>/samples --stats <output_dir>/simcov.stats -o paraview-state\n```\n\nNote that the `pvpython` wrapper is needed (not just plain python), and is used in the script.\n\nThe above command will generate a file called `paraview-state.pvsm` and this can be loaded into paraview, e.g.:\n\n```\nparaview paraview-state.pvsm\n```\n"
      },
      "source": "https://raw.githubusercontent.com/AdaptiveComputationLab/simcov/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:24:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}