{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "type": "Text_excerpt",
        "value": "We thank the authors of [Constrained Graph Variational Autoencoders for Molecule Design](https://papers.nips.cc/paper/8005-constrained-graph-variational-autoencoders-for-molecule-design) for releasing their code. The code in this repository is based on their source code release ([link](https://github.com/microsoft/constrained-graph-variational-autoencoder)). If you find this code useful, please consider citing their work.\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Imrie, Fergus and Bradley, Anthony R and Deane, Charlotte M",
        "doi": "10.1093/bioinformatics/btab080",
        "format": "bibtex",
        "title": "{Generating property-matched decoy molecules using deep learning}",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1093/bioinformatics/btab080",
        "value": "@article{Imrie2021DeepCoy,\n    eprint = {https://academic.oup.com/bioinformatics/advance-article-pdf/doi/10.1093/bioinformatics/btab080/36297301/btab080.pdf},\n    url = {https://doi.org/10.1093/bioinformatics/btab080},\n    doi = {10.1093/bioinformatics/btab080},\n    issn = {1367-4803},\n    month = {02},\n    year = {2021},\n    journal = {Bioinformatics},\n    title = {{Generating property-matched decoy molecules using deep learning}},\n    author = {Imrie, Fergus and Bradley, Anthony R and Deane, Charlotte M},\n}"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/oxpig/DeepCoy"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact (Questions/Bugs/Requests)",
        "type": "Text_excerpt",
        "value": "Please submit a Github issue or contact either Fergus Imrie or the Oxford Protein Informatics Group (OPIG) [deane@stats.ox.ac.uk](mailto:deane@stats.ox.ac.uk).\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-08-26T16:12:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-30T07:26:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9945209800162661,
      "result": {
        "original_header": "DeepCoy - Generating Property-Matched Decoy Molecules Using Deep Learning",
        "type": "Text_excerpt",
        "value": "This repository contains our implementation of [Generating Property-Matched Decoy Molecules Using Deep Learning](https://doi.org/10.1093/bioinformatics/btab080) (DeepCoy).  \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8304319837856506,
      "result": {
        "original_header": "Data Extraction",
        "type": "Text_excerpt",
        "value": "We have prepared two training datasets based on different physicochemical properties. Both were created from a subset of the ZINC dataset. \nTo preprocess these datasets, please go to `data` directory and run `prepare_data.py`.\n```\npython prepare_data.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.951716334977853,
      "result": {
        "original_header": "Evaluation",
        "type": "Text_excerpt",
        "value": "A script to evaluate the generated molecules and prepare a set of decoys is provided in `evaluation` directory. You can either specify a one file or a directory containing multiple files to process.\n```\npython select_and_evaluate_decoys.py --data_path PATH_TO_INPUT_FILE/DIRECTORY --output_path PATH_TO_OUTPUT --dataset_name dude --num_decoys_per_active 50 >> decoy_selection_log.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9489124549981307,
      "result": {
        "original_header": "Pretrained Models and Generated Molecules",
        "type": "Text_excerpt",
        "value": "We provide two pretrained models based on different physicochemical properties (as described in our paper).  \nIn addition, we provide a model that incorporates phosphorus:\n```\nmodels/DeepCoy_DUDE_phosphorus_model_e10.pickle\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/oxpig/DeepCoy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/examples/DeepCoy_example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/examples/DeepCoy_example.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/oxpig/DeepCoy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "oxpig/DeepCoy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepCoy - Generating Property-Matched Decoy Molecules Using Deep Learning"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/DeepCoy.png"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8662786611954927,
      "result": {
        "original_header": "Data Extraction",
        "type": "Text_excerpt",
        "value": "To preprocess these datasets, please go to `data` directory and run `prepare_data.py`.\n```\npython prepare_data.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9992595959822973,
      "result": {
        "original_header": "Evaluation",
        "type": "Text_excerpt",
        "value": "A script to evaluate the generated molecules and prepare a set of decoys is provided in `evaluation` directory. You can either specify a one file or a directory containing multiple files to process.\n```\npython select_and_evaluate_decoys.py --data_path PATH_TO_INPUT_FILE/DIRECTORY --output_path PATH_TO_OUTPUT --dataset_name dude --num_decoys_per_active 50 >> decoy_selection_log.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9690507434279356,
      "result": {
        "original_header": "Pretrained Models and Generated Molecules",
        "type": "Text_excerpt",
        "value": "Due to GitHub file size constraints, these need to be downloaded from [http://opig.stats.ox.ac.uk/resources](http://opig.stats.ox.ac.uk/resources):\n```\nmodels/DeepCoy_DUDE_model_e09.pickle\nmodels/DeepCoy_DEKOIS_model_e10.pickle\n```\n \nGenerated molecules can also be downloaded from the [OPIG website](http://opig.stats.ox.ac.uk/resources).\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8967163281967204,
      "result": {
        "original_header": "Data Extraction",
        "type": "Text_excerpt",
        "value": "To preprocess these datasets, please go to `data` directory and run `prepare_data.py`.\n```\npython prepare_data.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9171398975372956,
      "result": {
        "original_header": "Evaluation",
        "type": "Text_excerpt",
        "value": "A script to evaluate the generated molecules and prepare a set of decoys is provided in `evaluation` directory. You can either specify a one file or a directory containing multiple files to process.\n```\npython select_and_evaluate_decoys.py --data_path PATH_TO_INPUT_FILE/DIRECTORY --output_path PATH_TO_OUTPUT --dataset_name dude --num_decoys_per_active 50 >> decoy_selection_log.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/oxpig/DeepCoy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "3-Clause BSD License\n\n\tCopyright (c) Fergus Imrie, Oxford Protein Informatics Group, 2020. All rights reserved\n\n\tRedistribution and use in source and binary forms, with or without modification,\n\tare permitted provided that the following conditions are met:\n\n\t - Redistributions of source code must retain the above copyright notice,\n\t   this list of conditions and the following disclaimer.\n\n\t - Redistributions in binary form must reproduce the above copyright notice,\n\t   this list of conditions and the following disclaimer in the documentation\n\t   and/or other materials provided with the distribution.\n\n\t - Neither the name of the copyright holder nor the names of its contributors may\n\t   be used to endorse or promote products derived from this software without\n\t   specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\tANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\tWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\tDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\tANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\tLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\tANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\tSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThis project incorporates work covered by the following copyright and permission notice: \n\nMIT License\n\n    Copyright (c) Microsoft Corporation. All rights reserved.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepCoy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "oxpig"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 196057,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "This code was tested in Python 3.6 with Tensorflow 1.10. \n\nA yaml file containing all install requirements is provided. This can be readily setup using conda.\n\n```\nconda env create -f DeepCoy-env.yml\nconda activate DeepCoy-env\n```\n\nTo run our model using subgraph reweighted loss function, you need to download the subgraph frequency data from [http://opig.stats.ox.ac.uk/resources](http://opig.stats.ox.ac.uk/resources). Note this is not required for generating molecules using pretrained models but is advised for training new models.\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running DeepCoy",
        "type": "Text_excerpt",
        "value": "To train and generate molecules using DeepCoy, use:\n\n```\npython DeepCoy.py --dataset zinc --config '{\"number_of_generation_per_valid\": 100, \"num_epochs\": 10, \"epoch_to_generate\": 10, \"train_file\": \"data/molecules_zinc_dekois_train.json\", \"valid_file\": \"data/molecules_zinc_dekois_valid.json\", \"subgraph_freq_file\": \"./freq_dict_zinc_250k_smarts.pkl\"}'\n```\n\nTo train and generate molecules using DeepCoy without the subgraph reweighted loss function, use:\n```\npython DeepCoy.py --dataset zinc --config '{\"number_of_generation_per_valid\": 100, \"num_epochs\": 10, \"epoch_to_generate\": 10, \"train_file\": \"data/molecules_zinc_dekois_train.json\", \"valid_file\": \"data/molecules_zinc_dekois_valid.json\", \"use_subgraph_freq\": false}'\n```\n\nTo generate molecules with a pretrained model, use\n\n```\npython DeepCoy.py --restore models/DeepCoy_DUDE_model_e09.pickle --dataset zinc --config '{\"generation\": true, \"number_of_generation_per_valid\": 1000, \"batch_size\": 1, \"train_file\": \"data/molecules_zinc_dekois_valid.json\", \"valid_file\": \"data/molecules_zinc_dekois_valid.json\", \"output_name\": \"output/DeepCoy_generated_decoys_zinc_dekois_valid.txt\"}'\n```\n\nThe output is of the following format:\n\n```\nInput molecule (SMILES) Generated molecule (SMILES)\n```\n\nMore configurations can be found at function `default_params` in `DeepCoy.py`.\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "download",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:22:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 30
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "An example Jupyter notbook demonstrating the use of DeepCoy to generate and select decoy molecule can be found in the `examples` directory.\n"
      },
      "source": "https://raw.githubusercontent.com/oxpig/DeepCoy/master/README.md",
      "technique": "header_analysis"
    }
  ]
}