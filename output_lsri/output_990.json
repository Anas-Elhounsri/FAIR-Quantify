{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fuhaitao95/MVGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "\r\n- Please feel free to contact us if you need any help: [fuhaitao@webmail.hzau.edu.cn](mailto:fuhaitao@webmail.hzau.edu.cn) OR [fuhaitao95@qq.com](mailto:fuhaitao95@qq.com)\r\n- __Attention__: Only real name emails will be replied. Please provide as much detail as possible about the problem you are experiencing.\r\n- __\u6ce8\u610f__\uff1a\u53ea\u56de\u590d\u5b9e\u540d\u7535\u5b50\u90ae\u4ef6\u3002\u8bf7\u5c3d\u53ef\u80fd\u8be6\u7ec6\u5730\u63cf\u8ff0\u60a8\u9047\u5230\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u9644\u4e0a\u622a\u56fe\u7b49\u3002\r\n"
      },
      "source": "https://raw.githubusercontent.com/fuhaitao95/MVGCN/main/readme.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-09T04:43:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-25T11:38:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MVGCN: a novel multi-view graph convolutional network (MVGCN) framework for link prediction in biomedical bipartite networks. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9675062602625106,
      "result": {
        "original_header": "MVGCN",
        "type": "Text_excerpt",
        "value": "\r\nMVGCN: a novel multi-view graph convolutional network (MVGCN) framework for link prediction in biomedical bipartite networks. \r\n\r\nDeveloper: Fu Haitao from BBDM lab, College of Informatics, Huazhong Agricultural University, Wuhan 430070, China.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/fuhaitao95/MVGCN/main/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fuhaitao95/MVGCN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fuhaitao95/MVGCN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fuhaitao95/MVGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/fuhaitao95/MVGCN/main/readme.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fuhaitao95/MVGCN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MVGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "fuhaitao95"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 76698,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fuhaitao95/MVGCN/main/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "\r\nnumpy 1.18.0\r\n\r\npandas 1.1.0\r\n\r\nscipy 1.4.1\r\n\r\nscikit-learn 0.22\r\n\r\ntensorflow 1.15.0\r\n\r\npytorch 1.6.0\r\n\r\npython 3.7.1\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/fuhaitao95/MVGCN/main/readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:06:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 22
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "type": "Text_excerpt",
        "value": "\r\n1. Split data for cross validation and indenpendent test experiment via the script *split_data.py*: `python split_data.py fold_number DATANAME seed_indent seed_cross`\r\n\r\n2. To perform cross validation for finding the optimal hyperparameters by running the script *command_optimal.py* (if you don't want to finetune the hyperparameters, just skip this step): \r\n\r\n   `python command_optimal.py --dataName DATANAME --exp_name mid_dim/num_layer/alp_beta --seed_cross seed_cross --seed_indent seed_indent`\r\n\r\n3. To get the experiment results by running the script *command_optimal.py*: \r\n\r\n   `python command_optimal.py --dataName DATANAME --exp_name optimal_cross --seed_cross seed_cross --seed_indent seed_indent`\r\n\r\n   `python command_optimal.py --dataName DATANAME --exp_name optimal_indent --seed_cross seed_cross --seed_indent seed_indent`\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/fuhaitao95/MVGCN/main/readme.md",
      "technique": "header_analysis"
    }
  ]
}