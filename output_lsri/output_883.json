{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nmalysheva/SSATAN-X"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-17T10:46:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-24T10:28:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9777653885743098,
      "result": {
        "original_header": "SSATAN-X",
        "type": "Text_excerpt",
        "value": "Pathogen spreading is often modelled as a stochastic process that is driven by pathogen exposure on time-evolving contact networks. In adaptive networks, the spreading process depends not only on the dynamics of a contact network, but vice versa, infection dynamics may alter risk behaviour and thus feed back onto contact dynamics, leading to emergent complex dynamics. However, stochastic simulation of pathogen spreading processes on adaptive networks is currently computationally prohibitive.  \nStochastic Simulation Algorithm for effective spreading dynamics on Time-evolving Adaptive NetworX (SSATAN-X) denotes a novel algorithm that significantly accelerates the simulation of spreading dynamics on adaptive networks. The key idea of SSATAN-X is to only capture the contact dynamics that are relevant to the spreading process. SSATAN-X achieves this by leaping forward and bulk updating the underlying contact dynamics until a reaction of the epidemic process (e.g. pathogen spreading) happens, combining ideas of EXTRANDE and tau-leaping. The contact updates accurately capture the statistics of the process at times when epidemic events happen. Consequently, the statistics of the epidemic process are also captured accurately.\nOverall, the algorithm achieves an approx. 100-fold speed-up over the stochastic simulation algorithm. The algorithm is described in the paper: N. Malysheva, M. von Kleist \"Stochastic Simulation Algorithm for effective spreading dynamics on Time-evolving Adaptive NetworX (SSATAN-X)\"  (https://biorxiv.org/cgi/content/short/2021.11.22.469498v1).    \nThis repository provides the C++ code for SSATAN-X. Standard C++20  is required for successful compilation.\n  \nThe program needs LEMON (https://lemon.cs.elte.hu/trac/lemon) and JSON for Modern C++ (https://json.nlohmann.me/) Libraries to be installed.  \n  \nA `CMakeLists.txt` is provided for easy building.     \nAfter compiling, the program can be called from command line using following parameters:  \n```\n$ SSATAN-X config.json -mode \n```\nwhere `config.json` is a simple `json` file with settings for initial Contact network in the following format:\n* field `species` describes an array of variables, e.g. `S`, `I`, `D` (susceptible, infected, diagnosed) and their initial amounts, as well as the death rates for individuals that are in the  `S`, `I`, `D` state.\n* fields `new_contact_rate` and `loose_contact_rate` describe (upper, lower) limits `[a, b]` of rates of loosing and adding a new contact. During the initialization of the \nContact Network they are sampled from Uniform distribution `U(a, b)`. If a user intends to have homogeneous (equal rates) for each nodes (individual), this parameter can be set to `[a, a]`\n* field `seed` allows to fix a seed for the Pseudo-Random Number Generator (Mersenne Twister 19937) during initiation of the Contact network. Plese note that simulations performed with randomly chosen different seeds are not guaranteed to be (pseudo)independent.\n* field `initial_edges` describes an initial number of edges in the Contact Network\n* field `diagnosos_rate` describes diagnosis rate in population\n* field `transmission_rate` describes transmission rate in population\n  \nParameter `-mode` allows to run either the SSATAN-X algorithm using `-SSX` or classic SSA algorithm using `-SSA`.  \n    \n"
      },
      "source": "https://raw.githubusercontent.com/nmalysheva/SSATAN-X/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9910672356936409,
      "result": {
        "original_header": "Model",
        "type": "Text_excerpt",
        "value": "The codes implement the following model, as described in the paper: \n* ### Contact Dynamics \n  *  Assembling of a new contact. For each pair of nodes (v<sub>i</sub> ; v<sub>i</sub>),  j &#8800; k which are not connected by an edge, the rate of assembling an edge is defined by \u2000 &lambda;<sub>j,k</sub>  &#61; &lambda;<sub>j</sub>  &lambda;<sub>k</sub> i.e. product of the assembling rates of the two nodes.\n  *  Disassembling of an existing contact. For each pair of nodes (v<sub>i</sub> ; v<sub>i</sub>),  j &#8800; k that are connected by an edge, the rate of disassembling is defined as &theta;<sub>j,k</sub>  &#61; &theta;<sub>j</sub>  &theta;<sub>k</sub> i.e. the product of the disassembling rates of the two nodes.\n  \n* ### Epidemic dynamics\n  * An infection emanating from an undiagnosed, infected individual `S` + `I` &#10230; `I` + `I` occurs with rate &gamma; > 0 if nodes j and k are connected.\n  * An infection emanating from an undiagnosed, infected individual `S` + `D` &#10230; `I` + `D` occurs with rate &gamma;/2 > 0 if nodes j and k are connected.\n  * An infected individual may be diagnosed with the infection `I` &#10230; `D` with rate &delta; > 0\n  * Individuals may die: `I` &#10230; &#8709;, `D` &#10230; &#8709;  with rate &beta; > 0\n* ### Adaptivity\n  * In case of diagnosis, an individual cuts all contacts and the individual's rate of establishing new contact drops to 30% of the pre-diagnosis level, i.e &lambda;<sub>j</sub> &#61; &lambda;<sub>j</sub> &middot; 0.3. Adaptivity behaviour is implemented inline and can be changed inline if desired. \n"
      },
      "source": "https://raw.githubusercontent.com/nmalysheva/SSATAN-X/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9924556356715076,
      "result": {
        "original_header": "Epidemic dynamics",
        "type": "Text_excerpt",
        "value": "# SSATAN-X\nPathogen spreading is often modelled as a stochastic process that is driven by pathogen exposure on time-evolving contact networks. In adaptive networks, the spreading process depends not only on the dynamics of a contact network, but vice versa, infection dynamics may alter risk behaviour and thus feed back onto contact dynamics, leading to emergent complex dynamics. However, stochastic simulation of pathogen spreading processes on adaptive networks is currently computationally prohibitive.  \nAfter compiling, the program can be called from command line using following parameters:  \n```\n$ SSATAN-X config.json -mode \n```\nwhere `config.json` is a simple `json` file with settings for initial Contact network in the following format:\n* field `species` describes an array of variables, e.g. `S`, `I`, `D` (susceptible, infected, diagnosed) and their initial amounts, as well as the death rates for individuals that are in the  `S`, `I`, `D` state.\n* fields `new_contact_rate` and `loose_contact_rate` describe (upper, lower) limits `[a, b]` of rates of loosing and adding a new contact. During the initialization of the \nContact Network they are sampled from Uniform distribution `U(a, b)`. If a user intends to have homogeneous (equal rates) for each nodes (individual), this parameter can be set to `[a, a]`\n* field `seed` allows to fix a seed for the Pseudo-Random Number Generator (Mersenne Twister 19937) during initiation of the Contact network. Plese note that simulations performed with randomly chosen different seeds are not guaranteed to be (pseudo)independent.\n* field `initial_edges` describes an initial number of edges in the Contact Network\n* field `diagnosos_rate` describes diagnosis rate in population\n* field `transmission_rate` describes transmission rate in population\n  \nParameter `-mode` allows to run either the SSATAN-X algorithm using `-SSX` or classic SSA algorithm using `-SSA`.  \n   \n## Model\nThe codes implement the following model, as described in the paper: \n* ### Contact Dynamics \n  *  Assembling of a new contact. For each pair of nodes (v<sub>i</sub> ; v<sub>i</sub>),  j &#8800; k which are not connected by an edge, the rate of assembling an edge is defined by \u2000 &lambda;<sub>j,k</sub>  &#61; &lambda;<sub>j</sub>  &lambda;<sub>k</sub> i.e. product of the assembling rates of the two nodes.\n  *  Disassembling of an existing contact. For each pair of nodes (v<sub>i</sub> ; v<sub>i</sub>),  j &#8800; k that are connected by an edge, the rate of disassembling is defined as &theta;<sub>j,k</sub>  &#61; &theta;<sub>j</sub>  &theta;<sub>k</sub> i.e. the product of the disassembling rates of the two nodes.\n  \n* ### Epidemic dynamics\n  * An infection emanating from an undiagnosed, infected individual `S` + `I` &#10230; `I` + `I` occurs with rate &gamma; > 0 if nodes j and k are connected.\n  * An infection emanating from an undiagnosed, infected individual `S` + `D` &#10230; `I` + `D` occurs with rate &gamma;/2 > 0 if nodes j and k are connected.\n  * An infected individual may be diagnosed with the infection `I` &#10230; `D` with rate &delta; > 0\n  * Individuals may die: `I` &#10230; &#8709;, `D` &#10230; &#8709;  with rate &beta; > 0\n* ### Adaptivity\n  * In case of diagnosis, an individual cuts all contacts and the individual's rate of establishing new contact drops to 30% of the pre-diagnosis level, i.e &lambda;<sub>j</sub> &#61; &lambda;<sub>j</sub> &middot; 0.3. Adaptivity behaviour is implemented inline and can be changed inline if desired. \n"
      },
      "source": "https://raw.githubusercontent.com/nmalysheva/SSATAN-X/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nmalysheva/SSATAN-X/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nmalysheva/SSATAN-X/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nmalysheva/SSATAN-X"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SSATAN-X"
      },
      "source": "https://raw.githubusercontent.com/nmalysheva/SSATAN-X/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999992521801414,
      "result": {
        "original_header": "SSATAN-X",
        "type": "Text_excerpt",
        "value": "This repository provides the C++ code for SSATAN-X. Standard C++20  is required for successful compilation.\n  \nThe program needs LEMON (https://lemon.cs.elte.hu/trac/lemon) and JSON for Modern C++ (https://json.nlohmann.me/) Libraries to be installed.  \n  \nA `CMakeLists.txt` is provided for easy building.     \n"
      },
      "source": "https://raw.githubusercontent.com/nmalysheva/SSATAN-X/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nmalysheva/SSATAN-X/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 nmalysheva\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/nmalysheva/SSATAN-X/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SSATAN-X"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "nmalysheva"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 73403,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 1786,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/nmalysheva/SSATAN-X/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:40:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}