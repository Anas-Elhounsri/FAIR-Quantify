{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Pathway parameter advising"
        ],
        "type": "Text_excerpt",
        "value": "Pathway parameter advising is described in the following publication:\n\n[Automating parameter selection to avoid implausible biological pathway models](https://doi.org/10.1038/s41540-020-00167-1).\nChris S Magnano, Anthony Gitter.\n*npj Systems Biology and Applications*, 7:12, 2021.\n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gitter-lab/pathway-parameter-advising"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-29T17:13:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-27T13:46:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Parameter advising for biological pathway creation algorithms"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Graphlet creation",
        "parent_header": [
          "Pathway parameter advising"
        ],
        "type": "Text_excerpt",
        "value": "Graphlet decomposition files are created with the [Parallel Graphlet Decomposition library](http://nesreenahmed.com/graphlets/).\nFiles are the piped output from the pgd script: `./pgd -f inputGraphFile >> graphletOutputFile.gOut`.\n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8716496632129674,
      "result": {
        "original_header": "Pathway parameter advising",
        "type": "Text_excerpt",
        "value": "Parameter advising for biological pathway creation algorithms.\n \n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8920645406559874,
      "result": {
        "original_header": "Other scripts",
        "type": "Text_excerpt",
        "value": "`bin/updateReactome.sh` downloads the latest version of all human Reactome pathways from [Pathway Commons](https://www.pathwaycommons.org/) and performs graphlet decomposition on them. \nIt takes the following positional arguments:\n>   pgdDirectory:      The directory where pgd is installed. Will default to '../lib/pgd'\n>\n>   reactomeDirectory: (Optional) The directory where Reactome pathways and graphlets will be stored. If not given will default to '../referencePathways'.\n \n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8605798347421281,
      "result": {
        "original_header": "Pathway reconstruction algorithms",
        "type": "Text_excerpt",
        "value": "The pathway reconstruction algorithms used in the pathway parameter advising manuscript are available from:\n- PathLinker: [PathLinker](https://github.com/Murali-group/PathLinker)\n- NetBox: originally used [`netbox.tar.gz`](http://cbio.mskcc.org/wp-content/uploads/2012/10/netbox.tar.gz), which has since been replaced by [NetBoxR](https://www.bioconductor.org/packages/release/bioc/html/netboxr.html)\n- Prize-Collecting Steiner Forest: [OmicsIntegrator](https://github.com/fraenkel-lab/OmicsIntegrator/) and [msgsteiner](https://staff.polito.it/alfredo.braunstein/code/2010/08/19/msgsteiner.html)\n- Minimum-Cost Flow: [OR-Tools](https://developers.google.com/optimization/install) and [wrapper script](https://github.com/gitter-lab/pathway-parameter-advising/tree/min-cost-flow)\n \n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "PyPI download instructions",
        "parent_header": [
          "Pathway parameter advising",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "In order to download all example scripts and data with pathway parameter advising, run `pip` using the following flags:\n> `pip download --no-deps --no-binary :all: pathwayParameterAdvising`\n\nThis will download a `.tar` file into the current directory. \nUntar the resulting archive file: \n> `tar -xf pathwayParameterAdvising-*.tar.gz`\n\nFrom inside the `pathway-parameter-advising-X.X` directory (where X.X is the current version of pathway parameter advising), run\n> `python setup.py install`\n\nto install pathway parameter advising. \n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GitHub download instructions",
        "parent_header": [
          "Pathway parameter advising",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Pathway parameter advising can also be downloaded from [its GitHub repository](https://github.com/gitter-lab/pathway-parameter-advising/). \n\nFrom inside the `pathway-parameter-advising` directory, run\n> `python setup.py install`\n\nto install pathway parameter advising. \n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gitter-lab/pathway-parameter-advising/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gitter-lab/pathway-parameter-advising/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gitter-lab/pathway-parameter-advising"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pathway parameter advising"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/bin/setupPGD.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/bin/runPPA.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/bin/updateReactome.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/bin/runNetBoxIL2.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.3985899"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Pathway parameter advising"
        ],
        "type": "Text_excerpt",
        "value": "Pathway parameter advising can be download from either PyPI or GitHub.\n\nThis package includes example data and scripts to manage reference pathways and aid in performing graphlet decomposition which are not a part of the binary Python package in PyPI.\nTherefore, it is recommended to download the package source.\n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999992723561953,
      "result": {
        "original_header": "Other scripts",
        "type": "Text_excerpt",
        "value": "`bin/setupPGD.sh` installs the PGD library into the `lib` directory, which is created if it does not exist.\nPGD is cloned from its [GitHub repository](https://github.com/nkahmed/pgd) and complied using `make`.\nIt can then be run from the base pathway parameter advising directory as `lib/pgd/pgd -f inputGraphFile`.\nNote this script has been included to help install the PGD library, but is not guaranteed to run on all systems.\nIt has been tested on Ubuntu 18.04 and macOS 10.13.\n`setupPGD.sh` does not take any arguments. \n`bin/updateReactome.sh` downloads the latest version of all human Reactome pathways from [Pathway Commons](https://www.pathwaycommons.org/) and performs graphlet decomposition on them. \nIt takes the following positional arguments:\n>   pgdDirectory:      The directory where pgd is installed. Will default to '../lib/pgd'\n>\n>   reactomeDirectory: (Optional) The directory where Reactome pathways and graphlets will be stored. If not given will default to '../referencePathways'.\n \n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gitter-lab/pathway-parameter-advising/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "graphlet, hyperparameter-tuning, protein-protein-interaction-network"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Christopher Magnano, Anthony Gitter\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/License",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pathway-parameter-advising"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "gitter-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/pathwayParameterAdvising/"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 20949,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4870,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "agitter",
          "type": "User"
        },
        "date_created": "2020-08-14T17:02:28Z",
        "date_published": "2020-08-14T17:08:40Z",
        "description": "Improvements in this release include:\r\n- Adding a secondary key to the parameter sort order to make rankings fully deterministic\r\n- Adding and linking to the data for the influenza host factor case study\r\n- Restructuring how Reactome graphlets are stored\r\n- Adding scripts to update Reactome data\r\n- Refactoring the code and repository to be distributed as a Python package\r\n- Improving the documentation and installation instructions\r\n- Testing macOS support\r\n- Switching the Travis CI test environment to conda",
        "html_url": "https://github.com/gitter-lab/pathway-parameter-advising/releases/tag/v0.2.0",
        "name": "Version 0.2.0",
        "release_id": 29709372,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/gitter-lab/pathway-parameter-advising/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/gitter-lab/pathway-parameter-advising/releases/29709372",
        "value": "https://api.github.com/repos/gitter-lab/pathway-parameter-advising/releases/29709372",
        "zipball_url": "https://api.github.com/repos/gitter-lab/pathway-parameter-advising/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "agitter",
          "type": "User"
        },
        "date_created": "2019-11-16T22:06:39Z",
        "date_published": "2019-11-16T22:08:03Z",
        "description": "Initial release",
        "html_url": "https://github.com/gitter-lab/pathway-parameter-advising/releases/tag/v0.1.0",
        "name": "Version 0.1.0",
        "release_id": 21529984,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/gitter-lab/pathway-parameter-advising/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/gitter-lab/pathway-parameter-advising/releases/21529984",
        "value": "https://api.github.com/repos/gitter-lab/pathway-parameter-advising/releases/21529984",
        "zipball_url": "https://api.github.com/repos/gitter-lab/pathway-parameter-advising/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Pathway parameter advising"
        ],
        "type": "Text_excerpt",
        "value": "Pathway parameter advising was written and tested using Python 3.6 and requires the packages `networkx`, `numpy`, and `requests`.\n\nGraphlet decomposition is performed using the PGD library.\nThe PGD library can be installed from its [GitHub repository](https://github.com/nkahmed/pgd) and complied using `make`.\nThe script `setupPGD.sh` requires git, and has been provided to aid in installing the PGD library.\nHowever, it is not guaranteed to work on all systems and has only been tested on Ubuntu 18.04 and macOS 10.13.\nIn general, these scripts have only been tested in a Linux environment initially.\n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compiling PGD for macOS",
        "parent_header": [
          "Pathway parameter advising",
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Many macOS systems use clang++ instead of g++ and set g++ as an alias for clang++.\nPGD requires g++ instead of clang++.\nTherefore, macOS users must install g++ and set it as the compiler before running the `setupPGD.sh` script.\n\nThere are multiple options for installing g++.\nWe recommend [Homebrew](https://brew.sh/).\nWith Homebrew:\n\n1. Install gcc with the command `brew install gcc`\n2. Define the CC and CXX environmental variables according to the location of brew install. For example:\n- `export CC=/usr/local/Cellar/gcc/10.1.0/bin/gcc-10`\n- `export CXX=/usr/local/Cellar/gcc/10.1.0/bin/g++-10`\n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running Python package directly",
        "parent_header": [
          "Pathway parameter advising",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Pathway parameter advising can also be run directly as a Python script or library, if different options are desired.\n\n`pathwayParameterAdvising/ppa.py` can be run as a command line script, or used as a Python package in which case the main entry point is the method `pathwayParameterAdvising.rankParameters`.\n`ppa.py` takes the following arguments:\n>  -h, --help            show this help message and exit\n>\n>  --genPathwayGraphlets File where each line is a graphlets file of a generated pathway. Required.\n>\n>  --refPathwayGraphlets File where each line is a graphlets file of a reference pathway. Required.\n>\n>  --outFile OUTFILE     File to store output in. Optional, default = \"parameterRanking.txt\".\n>\n>  --minSize MINSIZE     Minimum size a reference pathway must be to be rankings. Optional, default=15.\n>\n>  --outputMax           If set, will return only the top pathway instead of a full ranking. Optional, default = False.\n>\n>  --outputScore         If set, will return scores in addition to pathway rankings. Optional, default = False.\n>\n>  --nameMap NAMEMAP     Either a file mapping generated pathway fileNames to parameter values, \"stripped\" to exclude the directory and extension from the filename, or \"fileName\" to use raw file names. Optional, default = stripped.\n>\n>  --saveGraphlets       If set, will save graphlet distributions as pickled dictionaries.\n>\n>  --verbose             If set, will print intermediate status updates. Optional, default = False.\n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:59:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Using helper scripts",
        "parent_header": [
          "Pathway parameter advising",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The pathway parameter advisor creates a ranking of pathways based on their\ntopological distance to a set of reference pathways. \n\nThe recommended way to use pathway parameter advising is through the script `bin/runPPA.sh`. \n\n`runPPA.sh` takes the following positional arguments:\n>  dataDirectory: The directory where the networks are stored as sif or edgelist files in a subdirectory named 'pathways'. See Wnt and Prolactin for examples.\n>\n>  outFile:       The output filename for the final parameter ranking.\n>\n>  pgdDirectory:  (Optional) The directory where pgd is installed. Will default to '../lib/pgd'\n>\n>  delim:         (Optional) The limiter used for edges in the input network files. Assumed to be whitespace.\n\nThe `runPPA.sh` output is sorted from lowest to highest score.\nThis is because the score is a distance from the reference pathways, so the parameter combination with the smallest score is best.\nSee the [IL2 output](tests/reference/il2_ranking.txt) as an example.\n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "Pathway parameter advising"
        ],
        "type": "Text_excerpt",
        "value": "`bin/runPPA.sh` runs pathway parameter advising on any set of sif or edgelist networks.\nThe following commands will run `runPPA.sh` with the included `Wnt` and `Prolactin` datasets from the `bin` directory, where `../lib/pgd` is installation location of the PGD library:\n\n> `bash runPPA.sh ../data/Wnt wnt_ranking.txt ../lib/pgd`\n>\n> `bash runPPA.sh ../data/Prolactin prolactin_ranking.txt ../lib/pgd`\n\n`bin/runNetBoxIL2.sh` runs pathway parameter advising for the precomputed graphlet files for NetBox IL2 pathways using Reactome reference pathways.\nIt has no arguments. \n\nThese scripts must be run from the `bin` directory, and file path arguments are relative to the `bin` directory.\n\n"
      },
      "source": "https://raw.githubusercontent.com/gitter-lab/pathway-parameter-advising/master/README.md",
      "technique": "header_analysis"
    }
  ]
}