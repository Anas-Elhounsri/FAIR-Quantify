{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phi-grib/flame"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-02-16T09:10:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-23T10:20:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Modeling framework for eTRANSAFE project"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9962351176759892,
      "result": {
        "original_header": "Flame",
        "type": "Text_excerpt",
        "value": "\r\nFlame is a flexible framework supporting predictive modeling and similarity search within the eTRANSAFE (http://etransafe.eu) project. \r\n\r\n\r\nFlame allows to:\r\n- Easily develop machine-learning models, for example QSAR-like models, starting from annotated collections of chemical compounds stored in standard formats (i.e. SDFiles)\r\n- Transfer new models into a production environment where they can be used by web services to predict the properties of new compounds.\r\n\r\nFlame can be used in comand mode or using a web based GUI. The code for the GUI is accessible [here](https://github.com/phi-grib/flame_API). \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9961383467106789,
      "result": {
        "original_header": "Main features",
        "type": "Text_excerpt",
        "value": "\r\n- Native support of most common machine-learning algorithms, including rich configuration options and facilitating the model optimization.\r\n- Easy creation of chemical spaces for similarity search, using fingerprints or molecular descriptors.\r\n- Support for any standard formatted input: from a tsv table to a collection of compounds in SMILES or SDFile format. \r\n- Multiple interfaces adapted to the needs of different users: as a web service, for end-user prediction, as a full featured GUI for model development, as command line, integration in Jupyter notebooks, etc.\r\n- Support for parallel processing.\r\n- Support for multilevel models: the output of a model can be used as input for other models.\r\n- Integrated model version management.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9624188610819508,
      "result": {
        "original_header": "Quickstarting",
        "type": "Text_excerpt",
        "value": "\r\nFlame provides a simple command-line interface `flame.py`, which is useful for accessing its functionality and getting acquainted with its use.\r\n\r\nYou can run the following commands from any terminal, in a computer where flame has been installed and the environment (flame) was activated (`source activate flame` in Linux, `activate flame` in Windows)\r\n\r\nLet's start creating a new model:\r\n\r\n```sh\r\nflame -c manage -a new -e MyModel\r\n```\r\n\r\nThis creates a new entry in the model repository and the development version of the model, populating these entries with default options.\r\nThe contents of the model repository are shown using the command.\r\n\r\nBASH2*\r\n\r\nBuilding a model only requires entering an input file formatted for training one of the supported machine-learning methods. In the case of QSAR models, the input file can be an SDFile, where the biological property is annotated in one of the fields. \r\n\r\nThe details of how Flame normalizes the structures, obtains molecular descriptors and applies the machine-learning algorithm are defined in a parameters file (*parameter.yaml*) which now contains default options. These can be changed as we will describe later, but for now let's use the defaults to obtain a Random Forest model on a series of chemical compounds annotated with a biological property in the field \\<activity\\>. For this example we will use the file `PXR_train.sdf` that can be found in the `\\data` folder: \r\n\t\r\nBASH3*\t\r\nAfter a few seconds, the model is built and a summary of the model quality is presented in the screen.\r\nThis model is immediately accessible for predicting the properties of new compounds. This can be done (for the example compound `rofecoxib.sdf`) using the command:\r\nBASH4*\t\r\nAnd this will show the properties predicted for the compounds in the query SDFile. \r\n\r\nThe parameters used for building the models can be inspected using the following command:\r\n\r\nBASH5*\t\r\n\r\nIn order to customize the model building we need to pass as an argument of build a file containing any change we want to introduce. This is what we call a \"delta\" file. Delta files can be easily generated by redirecting the output of the above command to a text file...\r\n\r\nBASH6*\t\r\n\r\n... and then editing it. The new, edited file can be used in the build command as follows:\r\n\r\nBASH7*\r\n\r\nFor model documentation we need to obtain a delta file which will already include some information extracted from both the parameters and the quality metrics from model building. Other fields are empty as they requiere of manual filling (ie: institution info or model interpretation). Delta file documentation can be obtained by executing:\r\n\r\nBASH8*\t\r\n\r\nThe file `delta.txt` can be edited to include all the required information. After the edition, changes can be made persistent by executing the following command:\r\n\r\nBASH9*\r\n\r\nFlame can also use as input a TSV file, containing all the X and Y values required to build the model. This file must have the following format: columnn must be separated by a single tab. The first row must contain variable names. One row per compound. Molecule names are optional but, if present, must be placed in the first column. SMILES are optional, but can be inserted in any column with the label `SMILES` (all capitals). The activity must be placed in a column with the label specified by the parameter `TSV_activity`.\r\n\r\nThe commands for building a model or predicting from a TSV file are identical to the ones used with SDFiles. Please make sure that in the parameter file, the `input_type` is set to `data`.\r\n\r\nBASH10*\r\n\r\nBASH11*\r\n\r\n\r\nIn the above commands we specified the model version used for the prediction. So far we only have a model in the development folder (version 0). This version will be overwritten every time we develop a new model for this endpoint. Let's imagine that we are very satisfied with our model and want to store it for future use. We can obtain a persistent copy of it with the command\r\nBASH12*\t\r\nThis will create model version 1. We can list existing versions for a given endpoint using the list command mentioned below\r\nBASH13*\t\r\nNow, the output says we have a published version of model MyModel. \r\n\r\nImagine that the model is so good you want to send it elsewhere, for example a company that wants to obtain predictions for confidential compounds in their own computing facilities. The model can be exported using the command\r\nBASH14*\t\r\nThis creates a very compact file with the extension .tgz in the local directory. It can be sent by e-mail or uploaded to a repository in the cloud from where the company can download it. In order to use it, the company can easily install the new model using the command\r\nBASH15*\t\r\nAnd then the model is immediately operative and able to produce exactly the same predictions we obtain in the development environment  \r\n\r\nTo test the similarity search capabilities of Flame create a new chemical space:\r\n\r\nBASH16*\r\n\r\nThis creates a new entry in the spaces repository and the development version of the chemical space, populating these entries with default options.\r\n\r\nNow provide the collection of compounds to include in the chemical space as a SDFile and set up the parameters (e.g. the molecular descriptors used to characterize it) using a delta file, as described above for the models.\r\n\r\nYou can obtain the current parameters by using the command:\r\n\r\nBASH17*\t\r\n\r\nThe file `delta.txt` can be edited and then the new parameters can be applied by making reference to the edited file in the sbuild command, as follows:\r\n\r\nBASH18*\r\n\r\nOnce it was built, this chemical space can be used to search compounds similar to a given query compounds in an efficient way.\r\n\r\nBASH19*\r\nThe file `query.sdf` can contain the chemical structure of one or many compounds. The file `similarity.yaml` must define the metric used for the search, the distance cutoff and the maximum number of similars to extract per query compound. The last two fields can be left empty to avoid applying these limits. \r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9644452595373466,
      "result": {
        "original_header": "Flame commands",
        "type": "Text_excerpt",
        "value": "\r\n| Command | Description |\r\n| --- | --- |\r\n| -c/ --command | Action to be performed. Acceptable values are *build*, *predict*, *profile*, *sbuild*, *search* and *manage* |\r\n| -e/ --endpoint | Name of the model which will be used by the command. This name is defined when the model is created for the fist time with the command *-c manage -a new* |\r\n| -s/ --space | Name of the chemical space which will be used by the command. This name is defined when the chemical space is created for the fist time with the command *-c manage -a new* |\r\n| -v/ --version | Version of the model, typically an integer. Version 0 refers to the model development \"sandbox\" which is created automatically upon model creation |\r\n| -a/ --action | Management action to be carried out. Acceptable values are *list*, *new*, *kill*, *publish*, *remove*, *export* and *import*. The meaning of these actions and examples of use are provided below   |\r\n| -f/ --infile | Name of the input file used by the command. This file can correspond to the training data (*build*) or the query compounds (*predict*) |\r\n| -m/ --multi | Name of a yaml file with endpoint names and versions for multiple predictions, used by *profile* command |\r\n| -p/ --parameters | Name of an input file used to pass a set of parameters used to train a model (*build*) or to performa a similarity search (*search*) |\r\n| -t/ --documentation_file | Name of an input file used to pass documentation information using the command (*manage -a documentation*) |\r\n| -inc/ --incremental | indicates that the input file must not replace any existing training series and, instead, the compound will be added |\r\n| -h/ --help | Shows a help message on the screen |\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9026613073053293,
      "result": {
        "original_header": "Management commands",
        "type": "Text_excerpt",
        "value": "\r\n\r\n### Management commands\r\n\r\n| Command | Example | Description |\r\n| --- | --- | ---|\r\n| new | *flame -c manage -a new -e NEWMODEL* | Creates a new entry in the model repository named NEWMODEL  |\r\n| kill | *flame -c manage -a kill -e NEWMODEL* | Removes NEWMODEL from the model repository. **Use with extreme care**, since the program will not ask confirmation and the removal will be permanent and irreversible  |\r\n| publish | *flame -c manage -a publish -e NEWMODEL* | Clones the development version, creating a new version in the model repository. Versions are assigned sequential numbers |\r\n| remove | *flame -c manage -a remove -e NEWMODEL -v 2* | Removes the version specified from the NEWMODEL model repository |\r\n| list | *flame -c manage -a list* | Lists the models present in the repository and the published version for each one. If the name of a model is provided, lists only the published versions for this model  |\r\n| info | *flame -c manage -e MODEL -a info* | Shows summary information about the characteristics of model MODEL  |\r\n| parameters | *flame -c manage -e MODEL -a parameters* | Shows a list of the main modeling parameters used by build to generate model MODEL |\r\n| series | *flame -c manage -e MODEL -a series* | Download a copy of the training series used to build MODEL as \"training_series.sdf\" |\r\n| documentation | *flame -c manage -e MODEL -a documentation* | Shows a list with the main documentation information of model MODEL. When called with parameter -t, it can be used to add new documentation information  |\r\n| export | *flame -c manage -a export -e NEWMODEL* | Exports the model entry NEWMODE, creating a tar compressed file *NEWMODEL.tgz* which contains all the versions. This file can be imported by another flame instance (installed in a different host or company) with the *-c manage import* command |\r\n| import | *flame -c manage -a import -f NEWMODEL.tgz* | Imports file *NEWMODEL.tgz*, typically generated using command *-c manage -a export* creating model NEWMODEL in the local model repository |\r\n| refresh | *flame -c manage -a refresh -e MODEL* | Rebuilds all model versions within the *MODEL* tree. If called without -e argument it will rebuild all models present in the current repository |\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.87280108329465,
      "result": {
        "original_header": "Flame GUI",
        "type": "Text_excerpt",
        "value": "\r\nYou can install Flame_API (https://github.com/phi-grib/flame_API) to access most of the functionalities using a simple web application.\r\n\r\nPlease refer to the manual page of Flame_API for further information\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8857268080014647,
      "result": {
        "original_header": "Using Flame",
        "type": "Text_excerpt",
        "value": "\r\nFlame was designed to be used in different ways, using diverse interfaces. For example:\r\n- Using a web GUI\r\n- Using the `flame.py` command described above\r\n- As a Python package, making direct calls to the high-level objects *predict*, *build* or *manage*\r\n- As a Python package, making calls to the lower level objects *idata*, *apply*, *learn*, *odata*\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9710391256416374,
      "result": {
        "original_header": "Developing models",
        "type": "Text_excerpt",
        "value": "\r\nTypically, Flame models are developed by modeling engineers. This task requires importing an appropriate training series and defininig the model building workflow. \r\n\r\nModel building can be easily customized with the Flame modeling GUI or by modifying the parameters defined in a command file (called *parameters.yaml*) by passing a file with the new parameter values at building time (using parameter -p/--parameters, as descrive above). Then, the model can be built using the `flame.py` build command, and its quality can be assessed in an iterative process which is repeated until optimum results are obtained. This task can also be carried out making calls to the objects mentioned above from an interactive Python environment, like a Jupyter notebook. A full documentation of the library can be obtained running Doxygen on the root directory.\r\n\r\nAdvanced users can customize the models by editting the objects *idata_child*, *appl_child*, *learn_child* and *odata_child* present at the *model/dev* folder. These empty objects are childs of the corresponding objects called by flame, and it is possible to override any of the parents' methods simply by copying and editing these whitin the childs' code files.\r\n\r\nModels can be published to obtain persistent versions, usable for predicton in the same environment, or exported for using them in external production environments, as described above.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9689468248139663,
      "result": {
        "original_header": "Incremental re-training of existing models",
        "type": "Text_excerpt",
        "value": "\r\nExisting model can be re-built using the option -inc (or --incremental) when the model is built to add the compounds present in the input file to the existing training series.\r\n\r\nFor example, imagine 'MyModel' is a model generated using a series of 1000 compounds and 'series.sdf' contains a collection of 500 additional compounds \r\n\r\n```sh\r\nflame -c build -e MyModel -f series.sdf -inc\r\n```\r\n\r\nThis command will add all the compounds present in the file 'series.sdf' at the end of the existing training series, thus generating a new model with 1500 compounds.\r\n\r\nIn this process no checking for dupplicate molecules or any other test is carried out.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9888575229156521,
      "result": {
        "original_header": "Refreshing models",
        "type": "Text_excerpt",
        "value": "\r\nModels built with very old versions of Flame can be updated using the refresh command. This command will use existing training series and modeling parameters to rebuild completely the models. \r\nIt is possible to refresh a single model version\r\n```sh\r\nflame -c manage -a refresh -e MyModel -v 1\r\n```\r\nall versions of a single model\r\nBASH2*\r\nor all models present in the current model repository\r\nBASH3*\r\nPlease note that rebuilding a large number of models can be a very long and computer intensive process\r\n\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.821053050150982,
      "result": {
        "original_header": "Documenting models",
        "type": "Text_excerpt",
        "value": "\r\nWhen a new model is created an empty documentation template is generated in the model folder. All the fields related with the modeling methodology and the model quality evaluation are automatically completed when the model is built, but other fields (e.g. author name, institution, mechanism, result interpretation) require manual user input. The mechanism for completing this template is similar to the method used to complete the parameters. The command \r\n\r\n```sh\r\nflame -c manage -e MyModel -a documentation > MyModel-documentation.yaml\r\n```\r\n\r\ncan be used to dump the half-filled template to a plain text file, which can be edited to complete the missing information. Then, once completed, we can use the command\r\n\r\nBASH2*\r\nto introduce the existing information in the internal model documentation template. \r\n\r\nThe model documentation can be shown in the screen using the first command without output redirectioning\r\n\r\nBASH3*\r\n\r\nInternally, the documentation mimics the fields of the OECD-QMRF reports. \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9464961273822335,
      "result": {
        "original_header": "Predicting using models",
        "type": "Text_excerpt",
        "value": "\r\nModels built in Flame can be used for obtaining predictions using diverse methods. We can use the command mode interface with a simple call:\r\n```sh\r\nflame -c predict -e MyModel -v 1 -f query.sdf\r\n```\r\nThis allows to integate the prediction in scripts, or workflow tools like KNIME and Pipeline Pilot.\r\n\r\nIt is also possible to run multiple predictions on a single input file. For this, we must write a YAML file indicating which models and versions must be run. For example, the following file MULTI.YAML indicates that the profiling will use the models PXR, version 2 and BBB, versions 3 \r\n\r\n\t\tendpoints   : ['PXR','BBB']\r\n\t\tversions    : [2,3]\r\n\r\nand then run the profile with the following command:\r\n\r\nBASH2*\r\n\r\nAlso, the models can run as prediction web-services. These services can be consumed by the stand-alone web GUI provided and described above or connected to a more complex platform, like the one currently in development in the eTRANSAFE project.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9872016148911188,
      "result": {
        "original_header": "Licensing",
        "type": "Text_excerpt",
        "value": "\r\nFlame was produced at the PharmacoInformatics lab (http://phi.upf.edu), in the framework of the eTRANSAFE project (http://etransafe.eu). eTRANSAFE has received support from IMI2 Joint Undertaking under Grant Agreement No. 777365. This Joint Undertaking receives support from the European Union\u2019s Horizon 2020 research and innovation programme and the European Federation of Pharmaceutical Industries and Associations (EFPIA). \r\n\r\n![Alt text](images/eTRANSAFE-logo-git.png?raw=true \"eTRANSAFE-logo\") ![Alt text](images/imi-logo.png?raw=true \"IMI logo\")\r\n\r\nCopyright 2020 Manuel Pastor (manuel.pastor@upf.edu)\r\n\r\nFlame is free software: you can redistribute it and/or modify it under the terms of the **GNU General Public License as published by the Free Software Foundation version 3**.\r\n\r\nFlame is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License along with Flame. If not, see <http://www.gnu.org/licenses/>.\r\n\r\n \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "Flame"
        ],
        "type": "Text_excerpt",
        "value": "\r\nA Flame walkthrough, showing the main features is accesible [here](https://drive.google.com/file/d/1C2xPu8sQn06lveGamiRv-BusFICKBFLv/view?usp=share_link)\r\n\r\nA collection of short videos illustrate how Flame can be used for:\r\n- predict a sigle molecule [here](https://drive.google.com/file/d/1BslauNrMNzDy0lkTmy_PmUtRrIUvS6MO/view?usp=share_link)\r\n- predict sketching the input structure [here](https://drive.google.com/file/d/1BmYVSXgdWJBrWXWlbxBrIL41Xm1pEMJu/view?usp=share_link)\r\n- profile a collection of molecules [here](https://drive.google.com/file/d/1Btvb02MM-4IOkbumKy4TL-Q_LXZOTyEX/view?usp=share_link)\r\n- build a simple model [here](https://drive.google.com/file/d/1C-bOrqYDfdCYONef9UA5Sy9rP23HutMv/view?usp=share_link)\r\n- document a model [here](https://drive.google.com/file/d/1BvSotx0Q9HkMTG667UtzWrZo9KumnpeE/view?usp=share_link)\r\n\r\nFlame is described in the following open-access article:\r\n\r\n```\r\nFlame: an open source framework for model development, hosting, and usage in production environments\r\n\r\nManuel Pastor, Jos\u00e9 Carlos G\u00f3mez-Tamayo & Ferran Sanz \r\n\r\nJournal of Cheminformatics volume 13, Article number: 31 (2021)\r\n```\r\n\r\n(https://jcheminf.biomedcentral.com/articles/10.1186/s13321-021-00509-z)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/phi-grib/flame/wiki"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phi-grib/flame/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phi-grib/flame/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "phi-grib/flame"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Flame"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phi-grib/flame/master/.travis/install.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation (binaries and docker)",
        "parent_header": [
          "Flame"
        ],
        "type": "Text_excerpt",
        "value": "\r\nWe provide Windows and Linux installers for performing local installations which include the graphic interface. \r\n\r\nThe latest versons can be downloaded here:\r\n- [Windows](https://drive.google.com/file/d/17EQRvHprhhzjczIi0pQyAmFekFWHbyYq/view?usp=sharing)\r\n- [Linux](https://drive.google.com/file/d/1HldcEqnRoyfWFNDcwCOA1qZ4oLmLBDMC/view?usp=sharing)\r\n\r\nThese versions can be run using an script which starts a locally installed web server, accessible from a web browser at address http://localhost:8000\r\n\r\nA docker container (https://www.docker.com/), fully configured can be downloaded from DockerHub and installed using:\r\n\r\n```bash\r\ndocker run -d -p 8010:8000 mpastorphi/flame\r\n```\r\nThen, the Flame GUI will be accesible from a web browser at address http://localhost:8010\r\n\r\nPlease note that the port of this address is defined in the command line above and can be easily customized.\r\n\r\nIt is also possible to use an existing local folder for storing the models and the predictions generated by Flame. Let's assume you wish to use 'c:\\flame_repo' as the local flame repository. Start by creating three folders inside named 'models', 'predictions', and 'spaces'. Then, run the following command: \r\n\r\n```bash\r\ndocker run -d -p 8010:8000 -v c:\\flame_repo:/data mpastorphi/flame\r\n```\r\nThen, as in the previous example, you can acces the Flame GUI from a web broser at http://localhost:8010\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing from source code",
        "parent_header": [
          "Flame"
        ],
        "type": "Text_excerpt",
        "value": "\r\nFlame can be used in most Windows, Linux or macOS configurations, provided that a suitable execution environment is set up. We recommend, as a fist step, installing the Conda package and environment manager. Download a suitable Conda or Anaconda distribution for your operative system from [here](https://docs.conda.io/projects/conda/en/latest/user-guide/install/download.html#)\r\n\r\n\r\nDownload the repository:\r\n\r\n```bash\r\ngit clone https://github.com/phi-grib/flame.git\r\n```\r\n\r\nGo to the repository directory \r\n\r\n```bash\r\ncd flame\r\n```\r\n\r\nand create the **conda environment** with all the dependencies and extra packages (numpy, RDKit...):\r\n\r\n```bash\r\nconda env create -f environment.yml\r\n```\r\n\r\nOnce the environment is created type:\r\n\r\n```bash\r\nsource activate flame\r\n```\r\n\r\nto activate the environment.\r\n\r\nConda environments can be easily updated using a new version of the environment definition\r\n\r\n```bash\r\nconda env update -f new_environment.yml\r\n```\r\n\r\nFlame must be installed as a regular Python package. From the flame directory type (note the dot at the end):\r\n\r\n```bash\r\npip install . \r\n```\r\n\r\nor\r\n\r\n```bash\r\npython setup.py install\r\n```\r\n\r\nFor development, use pip with the -e flag or setup with `develop` instead of `install`. This will made accesible the latest changes to other components (eg. flame_API)\r\n\r\n```bash\r\npip install -e .\r\n```\r\nor \r\n\r\n```bash\r\npython setup.py develop\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Configuration",
        "type": "Text_excerpt",
        "value": "\r\nAfter installation is completed, you must run the configuration command to configure the directory where flame will place the models and chemical spaces. If Flame has not been configured previously the following command\r\n\r\n```bash\r\nflame -c config\r\n```\r\n\r\nwill suggest a default directory structure following the XDG specification in GNU/Linux, %APPDATA% in windows and `~/Library/Application Support/flame_models` in Mac OS X.\r\n\r\nTo specify a custom path use the `-d` parameter to enter the root folder where the models and chemical spaces will be placed:\r\n\r\nBASH2*\r\n\r\nwill set up the model repository to `/my/custom/path/models`, the chemical spaces repository to `/my/custom/path/spaces` and the predictions to `/my/custom/path/predictions`. \r\n\r\nOnce Flame has been configured, the current setting can be displayed using again the command \r\n\r\n```bash\r\nflame -c config\r\n```\r\n\r\nAs a fallback, Flame can also be configured using the following command\r\n\r\nBASH3*\r\n\r\nThis option sets up the models, spaces and predictions repositories within the Flame installation directory (`flame\\flame\\models`, `flame\\flame\\spaces`, `flame\\flame\\predictions`). Unlike other options, this command does not ask permision to the end-user to create the directories or set up the repositories and is used internally by automatic installers and for software development. \r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9990961872153897,
      "result": {
        "original_header": "Flame GUI",
        "type": "Text_excerpt",
        "value": "\r\nYou can install Flame_API (https://github.com/phi-grib/flame_API) to access most of the functionalities using a simple web application.\r\n\r\nPlease refer to the manual page of Flame_API for further information\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phi-grib/flame/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "machine-learning, python, qsar, risk-assessment"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phi-grib/flame/master/images/imi-logo.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "flame"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "phi-grib"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 647304,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1440,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phi-grib/flame/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "manuelpastor",
          "type": "User"
        },
        "date_created": "2023-03-10T11:32:31Z",
        "date_published": "2023-03-10T11:37:30Z",
        "html_url": "https://github.com/phi-grib/flame/releases/tag/1.2.2",
        "name": "1.2.2 version",
        "release_id": 95194492,
        "tag": "1.2.2",
        "tarball_url": "https://api.github.com/repos/phi-grib/flame/tarball/1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/phi-grib/flame/releases/95194492",
        "value": "https://api.github.com/repos/phi-grib/flame/releases/95194492",
        "zipball_url": "https://api.github.com/repos/phi-grib/flame/zipball/1.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "manuelpastor",
          "type": "User"
        },
        "date_created": "2023-02-23T09:22:53Z",
        "date_published": "2023-03-10T11:22:09Z",
        "html_url": "https://github.com/phi-grib/flame/releases/tag/1.2.1",
        "name": "1.2.1 version",
        "release_id": 95193022,
        "tag": "1.2.1",
        "tarball_url": "https://api.github.com/repos/phi-grib/flame/tarball/1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phi-grib/flame/releases/95193022",
        "value": "https://api.github.com/repos/phi-grib/flame/releases/95193022",
        "zipball_url": "https://api.github.com/repos/phi-grib/flame/zipball/1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "manuelpastor",
          "type": "User"
        },
        "date_created": "2022-09-01T06:28:41Z",
        "date_published": "2022-09-01T18:16:20Z",
        "html_url": "https://github.com/phi-grib/flame/releases/tag/1.0.0",
        "name": "Official 1.0.0 version",
        "release_id": 76071843,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/phi-grib/flame/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phi-grib/flame/releases/76071843",
        "value": "https://api.github.com/repos/phi-grib/flame/releases/76071843",
        "zipball_url": "https://api.github.com/repos/phi-grib/flame/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "manuelpastor",
          "type": "User"
        },
        "date_created": "2021-02-24T14:03:05Z",
        "date_published": "2021-02-24T11:36:17Z",
        "description": "Release candidate 2",
        "html_url": "https://github.com/phi-grib/flame/releases/tag/v1.0.0-rc2",
        "name": "RC2",
        "release_id": 38642760,
        "tag": "v1.0.0-rc2",
        "tarball_url": "https://api.github.com/repos/phi-grib/flame/tarball/v1.0.0-rc2",
        "type": "Release",
        "url": "https://api.github.com/repos/phi-grib/flame/releases/38642760",
        "value": "https://api.github.com/repos/phi-grib/flame/releases/38642760",
        "zipball_url": "https://api.github.com/repos/phi-grib/flame/zipball/v1.0.0-rc2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "manuelpastor",
          "type": "User"
        },
        "date_created": "2020-07-31T09:37:36Z",
        "date_published": "2020-07-31T09:51:05Z",
        "description": "First version. Release candidate 1",
        "html_url": "https://github.com/phi-grib/flame/releases/tag/v1.0.0-rc1",
        "name": "First version",
        "release_id": 29156779,
        "tag": "v1.0.0-rc1",
        "tarball_url": "https://api.github.com/repos/phi-grib/flame/tarball/v1.0.0-rc1",
        "type": "Release",
        "url": "https://api.github.com/repos/phi-grib/flame/releases/29156779",
        "value": "https://api.github.com/repos/phi-grib/flame/releases/29156779",
        "zipball_url": "https://api.github.com/repos/phi-grib/flame/zipball/v1.0.0-rc1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BielStela",
          "type": "User"
        },
        "date_created": "2018-12-17T13:57:19Z",
        "date_published": "2018-12-17T13:58:58Z",
        "description": "* Logger\r\n* Model repository configuration\r\n* setup.py installer\r\n* General cleanup",
        "html_url": "https://github.com/phi-grib/flame/releases/tag/v0.1",
        "name": "v0.1",
        "release_id": 14487999,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/phi-grib/flame/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phi-grib/flame/releases/14487999",
        "value": "https://api.github.com/repos/phi-grib/flame/releases/14487999",
        "zipball_url": "https://api.github.com/repos/phi-grib/flame/zipball/v0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "manuelpastor",
          "type": "User"
        },
        "date_created": "2018-04-09T10:37:52Z",
        "date_published": "2018-04-09T10:43:11Z",
        "description": "First open version with basic functionality and documentation",
        "html_url": "https://github.com/phi-grib/flame/releases/tag/v0.0.1-dev",
        "name": "First open version",
        "release_id": 10453259,
        "tag": "v0.0.1-dev",
        "tarball_url": "https://api.github.com/repos/phi-grib/flame/tarball/v0.0.1-dev",
        "type": "Release",
        "url": "https://api.github.com/repos/phi-grib/flame/releases/10453259",
        "value": "https://api.github.com/repos/phi-grib/flame/releases/10453259",
        "zipball_url": "https://api.github.com/repos/phi-grib/flame/zipball/v0.0.1-dev"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:51:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}