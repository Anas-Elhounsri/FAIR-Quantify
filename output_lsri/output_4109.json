{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Zekun Yin, Hao Zhang, Meiyang Liu, Wen Zhang, Honglei Song, Haidong Lan, Yanjie Wei, Beifang Niu, Bertil Schmidt, Weiguo Liu, RabbitQC: High-speed scalable quality control for sequencing data, Bioinformatics, , btaa719, https://doi.org/10.1093/bioinformatics/btaa719\n\n"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ZekunYin/RabbitQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-27T12:27:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-02T11:58:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The new version is available at https://github.com/RabbitBio/RabbitQCPlus"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8809372900247638,
      "result": {
        "original_header": "RabbitQCPlus",
        "type": "Text_excerpt",
        "value": "[RabbitQCPlus](https://github.com/RabbitBio/RabbitQCPlus) (the successor of RabbitQC) has been released recently. We have solved the main performance issues in processing gzip-compressed files and performing the time-consuming over-representation analysis. The new repo is available at https://github.com/RabbitBio/RabbitQCPlus. \n"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9976955533305804,
      "result": {
        "original_header": "RabbitQC",
        "type": "Text_excerpt",
        "value": "# RabbitQC\nA tool designed to provide high-speed scalable quality control for sequencing data which can take full advantage of modern hardware.\nIt includes a variety of function modules and supports different sequencing technologies (Illumina, Oxford Nanopore, PacBio). RabbitQC achieves speedups between one and two orders-of-magnitude compared to other state-of-the-art tools.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9456414072537267,
      "result": {
        "original_header": "Options",
        "type": "Text_excerpt",
        "value": "If `-w` opition is not specified, RabbitQC will set working thread number to total CPU cores - 2.\nBy default, the HTML report is saved to `RabbitQC.html` (can be specified with `-h` option), and the JSON report is saved to `RabbitQC.json` (can be specified with `-j` option). \nRabbitQC suports all fastp options for short read quality control and all NanoQC optiions for long read quality control. For details please refer to [fastp](https://github.com/OpenGene/fastp) and [NanoQC](https://github.com/wdecoster/nanoQC).\n \n"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ZekunYin/RabbitQC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ZekunYin/RabbitQC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ZekunYin/RabbitQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RabbitQCPlus"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999832289091785,
      "result": {
        "original_header": "Options",
        "type": "Text_excerpt",
        "value": "If `-w` opition is not specified, RabbitQC will set working thread number to total CPU cores - 2.\nBy default, the HTML report is saved to `RabbitQC.html` (can be specified with `-h` option), and the JSON report is saved to `RabbitQC.json` (can be specified with `-j` option). \n"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999966178,
      "result": {
        "original_header": "Build",
        "type": "Text_excerpt",
        "value": "**For Linux and OSX:**\n```bash\ncd RabbitQC && make\n```\n**For Windows:**\nWe provide a prebuild binary for x64 windows (tested on 64bit Windows 10) [here](https://github.com/ZekunYin/RabbitQC/releases). Or you can build RabbitQC using MYSY2.\n```bash\ncd RabbitQC && make\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ZekunYin/RabbitQC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/qc.png"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RabbitQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ZekunYin"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 380868,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 184603,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 737,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ZekunYin",
          "type": "User"
        },
        "date_created": "2020-08-01T14:45:10Z",
        "date_published": "2020-08-01T14:50:24Z",
        "description": "RabbitQC v0.0.1.\r\nPlease verify the md5 hash values of binaries before using them.",
        "html_url": "https://github.com/ZekunYin/RabbitQC/releases/tag/v0.0.1",
        "name": "RabbitQC v0.0.1",
        "release_id": 29192832,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/ZekunYin/RabbitQC/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ZekunYin/RabbitQC/releases/29192832",
        "value": "https://api.github.com/repos/ZekunYin/RabbitQC/releases/29192832",
        "zipball_url": "https://api.github.com/repos/ZekunYin/RabbitQC/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:12:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples of report",
        "type": "Text_excerpt",
        "value": "`RabbitQC` creates reports in both HTML and JSON format.\n"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "For short read",
        "parent_header": [
          "Simple usage"
        ],
        "type": "Text_excerpt",
        "value": "* For single end data (not compressed)\n```\nrabbit_qc -w nthreads -i in.fq -o out.fq\n```\n* For paired end data (gzip compressed)\n```\nrabbit_qc -w nthreads -i in.R1.fq.gz -I in.R2.fq.gz -o out.R1.fq.gz -O out.R2.fq.gz\n```"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "For long read",
        "parent_header": [
          "Simple usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nrabbit_qc -w nthreads -D -i in.fq\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "For large gz files",
        "parent_header": [
          "Simple usage"
        ],
        "type": "Text_excerpt",
        "value": "A more efficient strategy to process large gzip compressed FASTQ files is to decompress files using pugz and then process them using RabbitQC. Pugz has been integrated into RabbitQC project.\n\n```\ncd RabbitQC/pugz && make asserts=0\n./gunzip -t nthreads in.fq.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples of report",
        "type": "Text_excerpt",
        "value": "`RabbitQC` creates reports in both HTML and JSON format.\n"
      },
      "source": "https://raw.githubusercontent.com/ZekunYin/RabbitQC/master/README.md",
      "technique": "header_analysis"
    }
  ]
}