{
  "application_domain": [
    {
      "confidence": 14.69,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Clinical Variant Annotation Pipeline",
          "Demo Run"
        ],
        "type": "Text_excerpt",
        "value": "If you use ClinVAP in your work, please cite the following article\n\n* S\u00fcr\u00fcn, B., Sch\u00e4rfe, C.P., Divine, M.R., Heinrich, J., Toussaint, N.C., Zimmermann, L., Beha, J. and Kohlbacher, O., 2020. ClinVAP: a reporting strategy from variants to therapeutic options. Bioinformatics, 36(7), pp.2316-2317.\n"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PersonalizedOncology/ClinVAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-19T16:43:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-07T18:09:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Clinical Variant Annotation Pipeline"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.985416726852666,
      "result": {
        "original_header": "Clinical Variant Annotation Pipeline",
        "type": "Text_excerpt",
        "value": "Clinical Variant Annotation Pipeline (ClinVAP) creates a genetic report of somatic mutations from a variant call format (VCF) file. Please refer this document for implementation of the pipeline. Documentation of the pipeline is available at [Wiki page](https://github.com/PersonalizedOncology/ClinVAP/wiki). \n \n"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9220096994604028,
      "result": {
        "original_header": "Metadata Structure",
        "type": "Text_excerpt",
        "value": "If a patient metadata file is provided in the input directory with the naming schema \\<INPUT\\_VCF\\_NAME\\>\\_metadata.json, ClinVAP recognizes it and renders the information into the Patient Data table in the outputted report. Additionally, if dignosis is provided in the metadata file, the list of drugs with the clinical evidence of targeting the gene in that particular cancer type is reported in the \"CIViC Summary of Drugs Targeting the Affected Genes\" table. If no diagnosis is provided, then the pipeline stays agnostic to the cancer type, and returns the results related with the gene-drug association regardless of the cancer type. Please note that the disease name should be selected from the pre-defined dictionary that can be found [here](https://github.com/PersonalizedOncology/ClinVAP/blob/master/doc/disease_names_dictionary.txt).    \n"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/PersonalizedOncology/ClinVAP/wiki"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PersonalizedOncology/ClinVAP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/DatabaseRestApi/notebooks/biograph_seeding_02_CollectMyDrugFromSource.ipynb"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/DatabaseRestApi/notebooks/biograph_seeding_02_CollectMyDrugFromSource.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PersonalizedOncology/ClinVAP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PersonalizedOncology/ClinVAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Clinical Variant Annotation Pipeline"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/ReportingApplication/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/ReportingApplication/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/DatabaseRestApi/mongo-seed/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/DatabaseRestApi/mongo-seed/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/DatabaseRestApi/app/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/DatabaseRestApi/app/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/VepFileDeployment/copy_data.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/ReportingApplication/make_report.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/ReportingApplication/clinicalreporting_docxtemplater/example.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://www.singularity-hub.org/static/img/hosted-singularity--hub-%23e32929.svg"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8647184602703093,
      "result": {
        "original_header": "Metadata Structure",
        "type": "Text_excerpt",
        "value": "**Metadata file format:**  \n\\{  \n\"patient\\_firstname\":\"\\<NAME\\>\",  \n\"patient\\_lastname\":\"\\<SURNAME\\>\",  \n\"patient\\_dateofbirth\":\"\\<DATE\\>\",  \n\"patient\\_diagnosis\\_short\":\"\\<DIAGNOSIS\\>\",  \n\"mutation\\_load\":\"\\<LOAD\\>\"  \n\\}   \n"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PersonalizedOncology/ClinVAP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Personalized Oncology\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sbilge/ClinVAP/master/doc/logo.jpeg"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ClinVAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "PersonalizedOncology"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 295378,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 26401,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4074,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 3661,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 2707,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 2231,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sbilge",
          "type": "User"
        },
        "date_created": "2019-05-24T09:14:57Z",
        "date_published": "2019-06-05T17:51:07Z",
        "description": "Clinical Variant Annotation Pipeline to process variants given as VCF file and extract structured information for creating clinical reports.",
        "html_url": "https://github.com/PersonalizedOncology/ClinVAP/releases/tag/v1.0",
        "name": "ClinVAP v1.0",
        "release_id": 17805107,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/PersonalizedOncology/ClinVAP/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/PersonalizedOncology/ClinVAP/releases/17805107",
        "value": "https://api.github.com/repos/PersonalizedOncology/ClinVAP/releases/17805107",
        "zipball_url": "https://api.github.com/repos/PersonalizedOncology/ClinVAP/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running with Docker Toolbox For Windows Users",
        "parent_header": [
          "Clinical Variant Annotation Pipeline",
          "Usage with Docker"
        ],
        "type": "Text_excerpt",
        "value": "Requirements: Docker Engine release 1.13.0+, Compose release 1.10.0+.  \nPlease make sure that you have 34 GB of physical empty space on your Docker Disk Image, and ports 5000 and 27017 are not being used by another application.\n\nTo tun the pipeline, please follow the steps given below. \n\n```\n1. git clone https://github.com/PersonalizedOncology/ClinVAP.git\n```\nPelase note that the input VCF file(s) should be in ReportingApplication/inout folder.\n\n```\n2. cd ClinVAP/\n3. export ASSEMBLY=<Your Assembly Here>\n4. docker-compose run -e ASSEMBLY --service-ports ClinicalReportR -t //inout -p jwp -a <Your Assembly Here>\n\n```\n* `<Your Assembly Here>`: Please provide the genome assembly that was used in variant calling calling step to generate your VCF files. \n\t* `GRCh37` for genome assembly 37 \n\t* `GRCh38` for genome assembly 38\n* `-t`: folder name containing input data. This should be in the data volume of ClinicalReportR service (modify Docker compose file to change this).\n* `-p`: output format to save the results.\n\t* `j` to save report in JSON format\n\t* `w` to save report in DOCX format\n\t* `p` to save report in PDF format\n\nYou should now have the report in ReportingApplication/inout folder.\n"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Demo Run",
        "parent_header": [
          "Clinical Variant Annotation Pipeline"
        ],
        "type": "Text_excerpt",
        "value": "We provided an example input file, strelka\\_passed\\_missense\\_somatic\\_snvs.vcf under ./ReportingApplication/inout folder along with a dummy metadata file, strelka\\_passed\\_missense\\_somatic\\_snvs.json. The corresponding report of the strelka input file is provided [here](https://github.com/PersonalizedOncology/ClinVAP/tree/master/doc/strelka_passed_missense_somatic_snvs.pdf) as an example. \n"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running Demo with Singularity",
        "parent_header": [
          "Clinical Variant Annotation Pipeline",
          "Demo Run"
        ],
        "type": "Text_excerpt",
        "value": "```\n1. git clone https://github.com/PersonalizedOncology/ClinVAP.git\n2. singularity pull -n reporting_app.img  shub://PersonalizedOncology/ClinVAP:report\n3. singularity pull -n file_deploy.img  shub://PersonalizedOncology/ClinVAP:filedeploy\n4. mkdir vep_files\n5. singularity run -B ./vep_files:/mnt file_deploy.img -a GRCh37\n6. singularity run -B ./vep_files:/data -B ./ClinVAP/ReportingApplication/inout:/inout reporting_app.img -t /inout -p jwp -a GRCh37\n\n```"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running Demo with Docker",
        "parent_header": [
          "Clinical Variant Annotation Pipeline",
          "Demo Run"
        ],
        "type": "Text_excerpt",
        "value": "```\n1. git clone https://github.com/PersonalizedOncology/ClinVAP.git\n2. cd ClinVAP/\n3. export ASSEMBLY=GRCh37\n4. docker-compose run -e ASSEMBLY --service-ports ClinicalReportR -t /inout -p jwp -a GRCh37\n\n```"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:27:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage with Singularity",
        "parent_header": [
          "Clinical Variant Annotation Pipeline"
        ],
        "type": "Text_excerpt",
        "value": "Requirements: Singularity 2.4+  \nPlease make sure that you have 12 GB of empty space on your home directory, and ports 5000 and 27021 are not being used by another application.\nTo run the pipeline, please follow the steps given below. \n\n1. Pull reporting image from Singularity Hub.\n `singularity pull -n reporting_app.img  shub://PersonalizedOncology/ClinVAP:report` \n2. Pull dependency files image from Singularity Hub. \n`singularity pull -n file_deploy.img  shub://PersonalizedOncology/ClinVAP:filedeploy`\n3. Run dependency files image first to transfer those file on your local folder. \n `singularity run -B /LOCAL/PATH/TO/FILES:/mnt file_deploy.img -a <Your Assembly Here>`\n4. Run the reporting image to generate the clinical reports. \n`singularity run -B /LOCAL/PATH/TO/FILES:/data -B /PATH/TO/INPUT/DATA:/inout reporting_app.img -t /inout -p jwp -a <Your Assembly Here>`\n\n\n* `-a`: Please provide the genome assembly that was used in variant calling calling step to generate your VCF files. \n\t* `GRCh37` for genome assembly 37 \n\t* `GRCh38` for genome assembly 38\n\n* `-t`: folder name containing input data. This should be in the data volume of ClinicalReportR service (modify Docker compose file to change this).\n* `-p`: output format to save the results.\n\t* `j` to save report in JSON format\n\t* `w` to save report in DOCX format\n\t* `p` to save report in PDF format\n\nYou should now have the report in your /PATH/TO/INPUT/DATA folder.\n"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "For Mac and Ubuntu Users",
        "parent_header": [
          "Clinical Variant Annotation Pipeline",
          "Usage with Docker"
        ],
        "type": "Text_excerpt",
        "value": "Requirements: Docker Engine release 1.13.0+, Compose release 1.10.0+.  \nPlease make sure that you have 34 GB of physical empty space on your Docker Disk Image, and ports 5000 and 27017 are not being used by another application.\n\nTo tun the pipeline, please follow the steps given below. \n\n```\n1. git clone https://github.com/PersonalizedOncology/ClinVAP.git\n```\nPelase note that the input VCF file(s) should be in ReportingApplication/inout folder.\n\n```\n2. cd ClinVAP/\n3. export ASSEMBLY=<Your Assembly Here>\n4. docker-compose run -e ASSEMBLY --service-ports ClinicalReportR -t /inout -p jwp -a <Your Assembly Here>\n\n```\n* `<Your Assembly Here>`: Please provide the genome assembly that was used in variant calling calling step to generate your VCF files. \n\t* `GRCh37` for genome assembly 37 \n\t* `GRCh38` for genome assembly 38\n* `-t`: folder name containing input data. This should be in the data volume of ClinicalReportR service (modify Docker compose file to change this).\n* `-p`: output format to save the results.\n\t* `j` to save report in JSON format\n\t* `w` to save report in DOCX format\n\t* `p` to save report in PDF format\n\nYou should now have the report in ReportingApplication/inout folder.\n"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Demo Run",
        "parent_header": [
          "Clinical Variant Annotation Pipeline"
        ],
        "type": "Text_excerpt",
        "value": "We provided an example input file, strelka\\_passed\\_missense\\_somatic\\_snvs.vcf under ./ReportingApplication/inout folder along with a dummy metadata file, strelka\\_passed\\_missense\\_somatic\\_snvs.json. The corresponding report of the strelka input file is provided [here](https://github.com/PersonalizedOncology/ClinVAP/tree/master/doc/strelka_passed_missense_somatic_snvs.pdf) as an example. \n"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running Demo with Singularity",
        "parent_header": [
          "Clinical Variant Annotation Pipeline",
          "Demo Run"
        ],
        "type": "Text_excerpt",
        "value": "```\n1. git clone https://github.com/PersonalizedOncology/ClinVAP.git\n2. singularity pull -n reporting_app.img  shub://PersonalizedOncology/ClinVAP:report\n3. singularity pull -n file_deploy.img  shub://PersonalizedOncology/ClinVAP:filedeploy\n4. mkdir vep_files\n5. singularity run -B ./vep_files:/mnt file_deploy.img -a GRCh37\n6. singularity run -B ./vep_files:/data -B ./ClinVAP/ReportingApplication/inout:/inout reporting_app.img -t /inout -p jwp -a GRCh37\n\n```"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running Demo with Docker",
        "parent_header": [
          "Clinical Variant Annotation Pipeline",
          "Demo Run"
        ],
        "type": "Text_excerpt",
        "value": "```\n1. git clone https://github.com/PersonalizedOncology/ClinVAP.git\n2. cd ClinVAP/\n3. export ASSEMBLY=GRCh37\n4. docker-compose run -e ASSEMBLY --service-ports ClinicalReportR -t /inout -p jwp -a GRCh37\n\n```"
      },
      "source": "https://raw.githubusercontent.com/PersonalizedOncology/ClinVAP/master/README.md",
      "technique": "header_analysis"
    }
  ]
}