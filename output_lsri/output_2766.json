{
  "application_domain": [
    {
      "confidence": 0.953280328837622,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "```bibtex\n@article{10.1093/bioinformatics/btaa274,\n    author = {Breit, Anna and Ott, Simon and Agibetov, Asan and Samwald, Matthias},\n    title = \"{OpenBioLink: a benchmarking framework for large-scale biomedical link prediction}\",\n    journal = {Bioinformatics},\n    volume = {36},\n    number = {13},\n    pages = {4097-4098},\n    year = {2020},\n    month = {04},\n    issn = {1367-4803},\n    doi = {10.1093/bioinformatics/btaa274},\n    url = {https://doi.org/10.1093/bioinformatics/btaa274},\n    eprint = {https://academic.oup.com/bioinformatics/article-pdf/36/13/4097/33458979/btaa274.pdf},\n}\n```\n\nThis project received funding from [netidee](https://www.netidee.at/).\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Breit, Anna and Ott, Simon and Agibetov, Asan and Samwald, Matthias",
        "doi": "10.1093/bioinformatics/btaa274",
        "format": "bibtex",
        "title": "{OpenBioLink: a benchmarking framework for large-scale biomedical link prediction}",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1093/bioinformatics/btaa274",
        "value": "@article{10.1093/bioinformatics/btaa274,\n    eprint = {https://academic.oup.com/bioinformatics/article-pdf/36/13/4097/33458979/btaa274.pdf},\n    url = {https://doi.org/10.1093/bioinformatics/btaa274},\n    doi = {10.1093/bioinformatics/btaa274},\n    issn = {1367-4803},\n    month = {04},\n    year = {2020},\n    pages = {4097-4098},\n    number = {13},\n    volume = {36},\n    journal = {Bioinformatics},\n    title = {{OpenBioLink: a benchmarking framework for large-scale biomedical link prediction}},\n    author = {Breit, Anna and Ott, Simon and Agibetov, Asan and Samwald, Matthias},\n}"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/OpenBioLink/OpenBioLink"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-30T20:00:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-01T01:22:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OpenBioLink is a resource and evaluation framework for evaluating link prediction models on heterogeneous biomedical graph data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Datasets summary",
        "parent_header": [
          "Benchmark Dataset",
          "OpenBioLink 2020 datasets"
        ],
        "type": "Text_excerpt",
        "value": "|Dataset|Train|Test|Valid|Entities|Relations|\n|-------|-----|----|-----|--------|---------|\n|directed, high quality|8.503.580|401.901|397.066|184.732|28|\n|undirected, high quality|7.559.921|372.877|357.297|184.722|28|\n|directed, no quality cutoff|51.636.927|2.079.139|2.474.921|486.998|32|\n|undirected, no quality cutoff|41.383.093|2.010.662|1.932.436|486.998|32|\n\n<details>\n  <summary>Previous versions of the Benchmark (click to expand)</summary>\n\n### OpenBioLink 2020 alpha-release\n\n* [OpenBioLink2020: directed, high quality](https://samwald.info/res/OpenBioLink_2020/HQ_DIR.zip) (default dataset)\n* [OpenBioLink2020: undirected, high quality](https://samwald.info/res/OpenBioLink_2020/HQ_UNDIR.zip)\n* [OpenBioLink2020: directed, no quality cutoff](https://samwald.info/res/OpenBioLink_2020/ALL_DIR.zip)\n* [OpenBioLink2020: undirected, no quality cutoff](https://samwald.info/res/OpenBioLink_2020/ALL_UNDIR.zip)\n</details>\n\nPlease note that the OpenBioLink benchmark files contain data derived from external ressources. Licensing terms of these external resources are detailed [below](#Source-databases-and-their-licenses). \n\n ## Baseline results    \n\n| |       Model        |     MRR     |       h@1       |    h@10     |\n|:-|:------------------|:-----------:|:---------------:|:-----------:|\n||||||\n|Latent|       RESCAL       |  **.320**   |      .212       |    .544     |\n||       TransE       |    .280     |      .175       |    .500     |\n||      DistMult      |    .300     |      .193       |    .521     |\n||      ComplEx       |    .319     |      .211       |  **.547**   |\n||       ConvE        |    .288     |      .186       |    .510     |\n||       RotatE       |    .286     |      .180       |    .511     |\n||||||\n|Interpretable| AnyBURL (Maximum)  |    .277     |      .192       |    .457     |\n|| AnyBURL (Noisy-OR) |    .159     |      .098       |    .295     |\n||      SAFRAN\\*      | <u>.306</u> | <u>**.214**</u> | <u>.501</u> |\n\nResults are from [(LinkExplorer: Predicting, explaining and exploring links in large biomedical knowledge graphs; Ott et al)](https://www.biorxiv.org/content/10.1101/2022.01.09.475537v2). Embedding approaches were trained using [LibKGE](https://github.com/uma-pi1/kge). Best hyperparameters after extensive hyperparameter search can be found in the [supplementary material](https://www.biorxiv.org/content/biorxiv/early/2022/01/31/2022.01.09.475537/DC1/embed/media-1.pdf?download=true) of the before mentioned paper.\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GUI",
        "parent_header": [
          "Manual",
          "Graph creation &amp; Dataset split"
        ],
        "type": "Text_excerpt",
        "value": "By calling ```openbiolink``` from the command line a graphical user interface is started, providing an interface to create a graph and perform a dataset split. Step by step instructions on how to use the GUI can be found in the [wiki](https://github.com/OpenBioLink/OpenBioLink/wiki/Table-of-Contents).\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line interface",
        "parent_header": [
          "Manual",
          "Graph creation &amp; Dataset split"
        ],
        "type": "Text_excerpt",
        "value": "```sh\nopenbiolink -p WORKING_DIR_PATH [-action] [--options] ...\n```\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Graph Creation",
        "parent_header": [
          "Manual",
          "Graph creation &amp; Dataset split",
          "Command line interface"
        ],
        "type": "Text_excerpt",
        "value": "To generate the default graph (with all edges of all qualifies) in the current directory, use:\n\n```sh\nopenbiolink generate\n```\n\nFor a list of arguments, use:\n\n```sh\nopenbiolink generate --help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dataset Split",
        "parent_header": [
          "Manual",
          "Graph creation &amp; Dataset split",
          "Command line interface"
        ],
        "type": "Text_excerpt",
        "value": "To split the default graph using the random scheme, use:\n\n```sh\nopenbiolink split rand --edges graph_files/edges.csv --tn-edges graph_files/TN_edges.csv --nodes graph_files/nodes.csv\n```\n\nFor a list of arguments, use:\n\n```sh\nopenbiolink split rand --help\n```\n\nSplitting can also be done by time with \n\n```sh\nopenbiolink split time\n```\n\nMore documentation will be provided later.\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "TSV Writer",
        "parent_header": [
          "File description",
          "Graph Generation"
        ],
        "type": "Text_excerpt",
        "value": "| Default File Name | Description | Columns |\n|----------------------|--------------|-----------------|\n| ALL_nodes.csv | All nodes present in the graph |Node Id, Node type|\n| edges.csv | All true positive edges | Node 1 ID, Edge type, Node 2 ID, Quality score, Source |\n| edges_list.csv | List of edge types present in edges.csv | Edge type |\n|nodes.csv| All nodes present in edges.csv | Node ID, Node type |\n|nodes_list.csv| List of node types present in nodes.csv | Node type |\n|TN_edges.csv| All true negative edges | Node 1 ID, Edge type, Node 2 ID, Quality score, Source |\n|TN_edges_list.csv| List of edge types present in TN_edges.csv | Edge type |\n|TN_nodes.csv| All nodes present in TN_edges.csv | Node ID, Node type |\n|TN_nodes_list.csv| List of node types present in TN_nodes.csv | Node type |\n|ids_no_mapping.tsv| ID's of nodes that could not be mapped to other ontology systems | Node ID, Node type |\n|tn_ids_no_mapping.tsv| ID's of nodes that could not be mapped to other ontology systems | Node ID, Node type \n|stats.txt| Statistics about edges.csv and nodes.csv | (See column headers of file) |\n|tn_stats.txt| Statistics about TN_edges.csv and TN_nodes.csv | (See column headers of file) |\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Biological Expression Language (BEL) Writer",
        "parent_header": [
          "File description",
          "Graph Generation"
        ],
        "type": "Text_excerpt",
        "value": "The Biological Expression Language (BEL) is a domain specific language that enables the expression of\nbiological relationships in a machine-readable format. It is supported by the [PyBEL](https://github.com/pybel/pybel)\nsoftware ecosystem.\n\nBEL can be exported with:\n\n```sh\nopenbiolink generate --output-format BEL\n```\n\n| Default File Name | Description             |\n|-------------------|-------------------------|\n| positive.bel.gz   | All true positive edges in [BEL Script](https://language.bel.bio/language/structure/) format (gzipped) for usage in PyBEL or other BEL-aware applications) |\n| positive.bel.nodelink.json.gz | All true positive edges in [Nodelink JSON](https://pybel.readthedocs.io/en/latest/reference/io.html#pybel.from_nodelink_gz) format (gzipped) for direct usage with [PyBEL](https://pybel.readthedocs.io) |\n| negative.bel.gz   | All true negative edges in BEL Script format (gzipped) |\n| negative.bel.nodelink.json.gz | All true negative edges in Nodelink JSON format (gzipped) |\n\nExample opening BEL Script using [`pybel.from_bel_script()`](https://pybel.readthedocs.io/en/latest/reference/io.html#pybel.from_bel_script):\n\n```python\nimport gzip\nfrom pybel import from_bel_script\nwith gzip.open('positive.bel.gz') as file:\n    graph = from_bel_script(file)\n```\n\nExample opening Nodelink JSON using [`pybel.from_nodelink_gz()`](https://pybel.readthedocs.io/en/latest/reference/io.html#pybel.from_nodelink_gz):\n\n```python\nfrom pybel import from_nodelink_gz\ngraph = from_nodelink_gz('positive.bel.nodelink.json.gz')\n```\n\nThere's an externally hosted copy of OpenBioLink [here](https://zenodo.org/record/3834052) that contains\nthe exports as BEL.\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Train-test split creation",
        "parent_header": [
          "File description"
        ],
        "type": "Text_excerpt",
        "value": "| Default file name | Description | Column descriptions |\n|----------------------|--------------|-----------------|\n| train_sample.csv| All positive samples from the training set | Node 1 ID, Edge type, Node 2 ID, Quality score, TP/TN, Source |\n| test_sample.csv| All positive samples from the test set | Node 1 ID, Edge type, Node 2 ID, Quality score, TP/TN, Source |\n| val_sample.csv| All positive samples from the validation set | Node 1 ID, Edge type, Node 2 ID, Quality score, TP/TN, Source |\n| negative_train_sample.csv| All negative samples from the training set | Node 1 ID, Edge type, Node 2 ID, Quality score, TP/TN, Source |\n| negative_test_sample.csv| All negative samples from the test set | Node 1 ID, Edge type, Node 2 ID, Quality score, TP/TN, Source |\n| negative_val_sample.csv| All negative samples from the validation set | Node 1 ID, Edge type, Node 2 ID, Quality score, TP/TN, Source |\n| train_val_nodes.csv | All nodes present in the training and validation set combined | Node ID, Node type |\n| test_nodes.csv | All nodes present in the test set | Node ID, Node typ |\n| removed_test_nodes.csv | All nodes which got removed from the test set, due to not being present in the trainingset | Node ID |\n| removed_val_nodes.csv | All nodes which got removed from the validation set, due to not being present in the trainingset | Node ID |\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CURIE's",
        "parent_header": [
          "File description"
        ],
        "type": "Text_excerpt",
        "value": "All node ID's in the graph are CURIES, meaning entities can be easily looked up online by concatenating https://identifiers.org/ with the ID, f.e.:\n\n|CURIE|Identifiers.org|\n|--|--|\n|GO:0006915|https://identifiers.org/GO:0006915|\n|REACTOME:R-HSA-201451|https://identifiers.org/REACTOME:R-HSA-201451|\n\nDetailed information of how the Identifiers are resolved can be found here https://registry.identifiers.org/\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Random split",
        "parent_header": [
          "Train-test-split creation"
        ],
        "type": "Text_excerpt",
        "value": " In the random split setting, first, negative sampling is performed. Afterwards, the whole dataset (containing positive \n and negative examples) is split randomly according to the defined ratio. Finally, post-processing steps are performed to\n facilitate training and to avoid information leakage.\n\n ## Time-slice split\n In the time-slice split setting, for both of the provided time slices, first, negative sampling is performed. Afterwards,\n the first time slice (t-1 graph) is used as training sample, while the difference between the first and the second time \n slice serves as the test set. Finally, post-processing steps are performed to\n facilitate training and to avoid information leakage.\n\n Generally, the time slice setting is trickier to implement than the random split strategy, as it requires more manual evaluation and \n knowledge of the data. One of the most difficult factors is the change of the source databases over time. For example, \n a database might change its quality score, or even its ID-format. Also, the number of relationships stored might increase \n sharply due to new mapping files being used. This might also result in \u2018vanishing edges\u2019, where edges that were present\n in the t-1 graph are no longer existent in the current graph. Although the OpenBioLink toolbox tries to assist the user with \n different kinds of warnings to identify such difficulties in the data, it is unfortunately not possible to automatically detect nor solve all these problems, making some manual pre- and post-processing of the data inevitable.\n\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Negative sampling",
        "parent_header": [
          "Train-test-split creation"
        ],
        "type": "Text_excerpt",
        "value": "First, the distribution of edges of different types is calculated to know how many samples are needed from each edge type. \nFor now, this distribution corresponds to the original distribution (uniform distribution could a future extension).\nThen, subsamples are either \u2013 where possible \u2013 taken from existing true negative edges or are created using type-based sampling.\n\nIn type-based sampling, head and tail node are randomly sampled from a reduced pool of all nodes, which only \nincludes nodes with types that are compatible with the corresponding head- or tail-role of the given relation type.\nE.g., for the relation type GENE_DRUG, one random node of type GENE is selected as head node and one\nrandom node of type DRUG is selected as tail.\n\nIn most cases where true negative edges exist, however, their number is smaller than the number of positive examples. \nIn these cases, all true negative samples are used for the negative set, which is then extended by samples created by type-based \nsampling.\n\n\n ## Train-test-set post-processing\n **To facilitate model application**\n * Edges that contain nodes that are not present in the training set are dropped from the test set. This facilitates use of embedding-based models that usually cannot make predictions for nodes that have not been embedded during training.\n\n**Avoiding train-test information leakage and trivial predictions in the test set**\n * **Removal of reverse edges** If the graph is directed, reverse edges are removed from the training set. \nThe reason for this is that if the original edge a-b was undirected, both directions a\u2192b and a\u2190b are materialized in the directed graph. \n If one of these directed edges would be present in the training set and one in the test set, the prediction would be trivial.\n Therefore, in these cases, the reverse edges from the training set are removed. (Note that edges are removed from the training set instead of the test set because this is advantagous for maintaining the train-test-set ratio)\n * **Removal of super-properties**\n Some types of edges have sub-property characteristics, meaning that relationship x indicates a generic interaction between two entities (e.g. _protein_interaction_protein_), \n while relationship y further describes this relationship in more detail (e.g., _protein_activation_protein_). This means that the presence of x between two nodes does not imply \n the existence of a relation y between those same entities, but the presence of y necessarily implies the existence of x. These kinds of relationships \n could cause information leakage in the datasets, therefore super-relations of relations present in the training set are removed \n from the test set.\n\n # True Negative edges\nAs randomly sampled negative edges can produce noise or trivial examples, true negative edges (i.e., relationships that were explicitly mentioned to not exist) were used wherever possible. \nSpecifically, for disease_drug and disease_phenotype edges, true negative examples were extracted from the data source directly, as they were explicitly stated. For gene-anatomy relationships, over-expression and under-expression data was used as contradicting data. For other relationship-types, e.g., gene_activation_gene and drug_inhibition_gene, this indirect true negative sample creation could not be applied, as the relationship does not hold all information necessary (the same substance can have both activating and inhibiting effects, e.g. depending on dosage).\n\n \n\n\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9458294939262759,
      "result": {
        "original_header": "Benchmark Dataset",
        "type": "Text_excerpt",
        "value": " The [OpenBioLink2020 Dataset](https://zenodo.org/record/3834052/files/HQ_DIR.zip?download=1) is a highly challenging\n benchmark dataset containing over 5 million positive and negative edges.\n The test set does not contain trivially predictable, inverse edges from the training set \n and does contain all different edge types, to provide a more realistic edge prediction\n scenario. \n[OpenBioLink2020: directed, high quality](https://zenodo.org/record/3834052/files/HQ_DIR.zip?download=1) is the default dataset that should be used for benchmarking purposes. To allow anayzing the effect of data quality as well as the directionality of the \nevaluation graph, four variants of OpenBioLink2020 are provided -- in directed and undirected setting,\nwith and without quality cutoff.  \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9956606638823606,
      "result": {
        "original_header": "2021 Mapping of relations to external datasets",
        "type": "Text_excerpt",
        "value": "To aid with comparing the contents of OpenBioLink with other external knowledge graphs, we created an extensive mapping of relations. It is available as [Google sheet here](https://docs.google.com/spreadsheets/d/1mpRtVunuf4gZWiTQmBTS5ffQdA718IVenx6rWoaPsM0/edit?usp=sharing).\n \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9984548459700333,
      "result": {
        "type": "Text_excerpt",
        "value": "\nOpenBioLink is a resource and evaluation framework for evaluating link prediction models on heterogeneous biomedical graph data. It contains benchmark datasets as well as tools for creating custom benchmarks and evaluating models. \n\nThe OpenBioLink benchmark aims to meet the following criteria:\n* Openly available\n* Large-scale\n* Wide coverage of current biomedical knowledge and entity types\n* Standardized, balanced train-test split\n* Open-source code for benchmark dataset generation \n* Open-source code for evaluation (independent of model) \n* Integrating and differentiating multiple types of biological entities and relations (i.e., formalized as a heterogeneous graph)\n* Minimized information leakage between train and test sets (e.g., avoid inclusion of trivially inferable \n    relations in the test set)\n* Coverage of true negative relations, where available\n* Differentiating high-quality data from noisy, low-quality data\n* Differentiating benchmarks for directed and undirected graphs in order to be applicable to a wide variety of link prediction methods\n* Clearly defined release cycle with versions of the benchmark and public leaderboard \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://openbiolink.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/OpenBioLink/OpenBioLink/wiki/Table-of-Contents"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/OpenBioLink/OpenBioLink/wiki"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/OpenBioLink/OpenBioLink/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/OpenBioLink/OpenBioLink/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OpenBioLink/OpenBioLink"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/./resources/wiki-resources/obl_overview.PNG"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Pip",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "1) Install a pytorch version suitable for your system https://pytorch.org/\n1) ```pip install openbiolink```\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Source",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "1) clone the git repository or download the project\n1) Create a new python3.7, or python3.6 virtual environment  *(note: under Windows, only python3.6 will work)*\ne.g.:\n```python3 -m venv my_venv```\n1) activate the virtual environment\n    * windows: ``my_venv\\Scrips\\activate``\n        * linux/mac: ``source my_venv/bin/activate``\n1) Install a pytorch version suitable for your system https://pytorch.org/\n1) Install the requirements stated in requirements.txt e.g.  ```pip install -r requirements.txt```\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Manual",
        "type": "Text_excerpt",
        "value": "The OpenBioLink framework consists of three parts:\n 1) Graph creation\n 2) Dataset split\n 3) Evaluation\n\nThe creation of the graph and the splitting of the created graph in training, testing and an optional validation set can be performed by either via the GUI or the command line interface. The evaluation of a trained model is served as part of the ```openbiolink``` library.\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GUI",
        "parent_header": [
          "Manual",
          "Graph creation &amp; Dataset split"
        ],
        "type": "Text_excerpt",
        "value": "By calling ```openbiolink``` from the command line a graphical user interface is started, providing an interface to create a graph and perform a dataset split. Step by step instructions on how to use the GUI can be found in the [wiki](https://github.com/OpenBioLink/OpenBioLink/wiki/Table-of-Contents).\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line interface",
        "parent_header": [
          "Manual",
          "Graph creation &amp; Dataset split"
        ],
        "type": "Text_excerpt",
        "value": "```sh\nopenbiolink -p WORKING_DIR_PATH [-action] [--options] ...\n```\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dataset Split",
        "parent_header": [
          "Manual",
          "Graph creation &amp; Dataset split",
          "Command line interface"
        ],
        "type": "Text_excerpt",
        "value": "To split the default graph using the random scheme, use:\n\n```sh\nopenbiolink split rand --edges graph_files/edges.csv --tn-edges graph_files/TN_edges.csv --nodes graph_files/nodes.csv\n```\n\nFor a list of arguments, use:\n\n```sh\nopenbiolink split rand --help\n```\n\nSplitting can also be done by time with \n\n```sh\nopenbiolink split time\n```\n\nMore documentation will be provided later.\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Evaluation",
        "parent_header": [
          "Manual"
        ],
        "type": "Text_excerpt",
        "value": "To ensure a standardized evaluation of different methods applied to the OpenBioLink dataset, an evaluator is provided in the package  ```openbiolink``` . For examples how to evaluate a model, see [here](https://openbiolink.readthedocs.io/en/latest/tutorial/evaluation.html).\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dataloader",
        "parent_header": [
          "Manual"
        ],
        "type": "Text_excerpt",
        "value": "All versions of the OpenBioLink datasets can be easily accessed within Python via the [DataLoader](https://openbiolink.readthedocs.io/en/latest/reference/dataloader.html), which downloads all required files automatically.\n\n```python\nfrom openbiolink.evaluation.dataLoader import DataLoader\n\n# Name of the Dataset, possible values HQ_DIR, HQ_UNDIR, ALL_DIR, ALL_UNDIR. Default: HQ_DIR\ndl = DataLoader(\"HQ_DIR\")\n\ntrain = dl.training.mapped_triples\ntest = dl.testing.mapped_triples\nvalid = dl.validation.mapped_triples\n```\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9315490212832609,
      "result": {
        "original_header": "OpenBioLink 2020 datasets",
        "type": "Text_excerpt",
        "value": "* __[OpenBioLink2020: directed, high quality](https://zenodo.org/record/3834052/files/HQ_DIR.zip?download=1) // [RDF](https://zenodo.org/record/3834052/files/RDF_HQ_DIR.zip) (default dataset for benchmarking)__\n* [OpenBioLink2020: undirected, high quality](https://zenodo.org/record/3834052/files/HQ_UNDIR.zip?download=1) // [RDF](https://zenodo.org/record/3834052/files/RDF_HQ_UNDIR.zip)\n* [OpenBioLink2020: directed, no quality cutoff](https://zenodo.org/record/3834052/files/ALL_DIR.zip?download=1) // [RDF](https://zenodo.org/record/3834052/files/RDF_ALL_DIR.zip)\n* [OpenBioLink2020: undirected, no quality cutoff](https://zenodo.org/record/3834052/files/ALL_UNDIR.zip?download=1) // [RDF](https://zenodo.org/record/3834052/files/RDF_ALL_UNDIR.zip)\n \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999998927649,
      "result": {
        "type": "Text_excerpt",
        "value": "\n  \n    <img src=\"https://img.shields.io/pypi/v/openbiolink\"\n         alt=\"pypi\">\n  \n  \n    \n  \n  \n    <img src=\"https://img.shields.io/badge/license-MIT-blue.svg\"\n         alt=\"docs\">\n  \n  \n    <img src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fnomisto%2Fupptime%2Fmaster%2Fhistory%2Fsummary_badge.json\"\n         alt=\"uptime\">\n   \n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/OpenBioLink/OpenBioLink/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Anna Breit\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Source databases and their licenses",
        "type": "Text_excerpt",
        "value": "| Source type                    | Source name                                  | License                                     | True neg.   | Score\t  |\n|--------------------------------|----------------------------------------------|---------------------------------------------|-------------|---------|\n| edge (gene-gene)               | [STRING](https://string-db.org/)             | CC BY                                       | No\t        | Yes     |\n| edge (gene-go)                 | [GO](http://geneontology.org/)               | CC BY                                       | No\t        | Yes     |\n| edge (gene-disease)            | [DisGeNet](https://www.disgenet.org/)        | CC BY-NC-CA                                 | No\t        | Yes     |\n| edge (gene-phenotype)          | [HPO](https://hpo.jax.org/app/)              | Custom: [HPO](https://hpo.jax.org/app/license)      | No\t        | No     |\n| edge (gene-anatomy)            | [Bgee](https://bgee.org/)                    | CC 0                                        | Yes\t        | Yes     |\n| edge (gene-drug)               | [STITCH](http://stitch.embl.de/)             | CC BY                                       | No\t        | Yes     |\n| edge (gene-pathway)            | [CTD](http://ctdbase.org/)                   | Custom: [CTD](http://ctdbase.org/about/legal.jsp)   | No\t        | No     |\n| edge (disease-phenotype)       | [HPO](https://hpo.jax.org/app/)              | Custom: [HPO](https://hpo.jax.org/app/license)      | Yes\t        | No     |\n| edge (disease-drug)            | [DrugCentral](http://drugcentral.org/)       | CC BY-SA                                    | Yes\t        | No     |\n| edge (drug-phenotype)          | [SIDER](http://sideeffects.embl.de/)         | CC BY-NC-CA                                 | No\t        | No     |\n| ontology (genes)               | [GO](http://geneontology.org/)               | CC BY                                       | \t        |      |\n| ontology (diseases)            | [DO](http://disease-ontology.org/)           | CC 0                                        | \t        |      |\n| ontology (phenotype)           | [HPO](https://hpo.jax.org/app/)              | Custom: [HPO](https://hpo.jax.org/app/license)      | \t        |      |\n| ontology (anatomy)             | [UBERON](http://uberon.github.io/about.html) | CC BY                                       |   \t        |        |\n| mapping (UMLS-DO)              | [DisGeNet](https://www.disgenet.org/)        | CC BY-NC-CA                                 |   \t        |         |\n| mapping (STRING-NCBI)          | [STRING](https://string-db.org/)             | CC BY                                       |   \t        |         |\n| mapping (ENSEMBL/UNIPROT-NCBI) | [UniProt](https://www.uniprot.org/)          | CC BY                                       |   \t        |         |\n| id (genes)                     | [NCBI](https://www.ncbi.nlm.nih.gov/gene)    | Public Domain                               |   \t        |         |\n| id (go)                        | [GO](http://geneontology.org/)               | CC BY                                       |   \t        |         |\n| id (anatomy)                   | [UBERON](http://uberon.github.io/about.html) | CC BY                                       |   \t        |         |\n| id (disease)                   | [DO](http://disease-ontology.org/)           | CC 0                                        |   \t        |         |\n| id (drug)                      | [PubChem](https://pubchem.ncbi.nlm.nih.gov/) | Public Domain                               |   \t        |         |\n| id (phenotype)                 | [HPO](https://hpo.jax.org/app/)              | Custom: [HPO](https://hpo.jax.org/app/license)      |   \t        |         |\n| id (pathway)                   | [REACTOME](https://reactome.org/)            | CC BY                                       |   \t        |         |\n| id (pathway)                   | [KEGG](https://www.genome.jp/kegg/)          | Custom: [KEGG](https://www.kegg.jp/kegg/legal.html) |\n\n*(True neg.: whether the data contains true negative relations; Score: whether the data contains evidence quality scores for filtering relations)*\n\nThe OpenBioLink benchmark files integrate data or identifiers from these sources. The provenance of data items is captured in the benchmark files, and licensing terms of source databases apply to these data items. Please mind these licensing terms when utilizing or redistributing the benchmark files or derivatives thereof.\n\nAll original data in the benchmark files created by the OpenBioLink project (not covered by the licenses of external data sources)  are released as [CC 0](https://creativecommons.org/publicdomain/zero/1.0/). \n\nWe offer the benchmark files as-is and make no representations or warranties of any kind concerning the benchmark files, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non infringement, or the absence of latent or other defects, accuracy, or the present or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law.\n"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/./resources/logo/logo.svg"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OpenBioLink"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "OpenBioLink"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 528013,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pybel.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1912.04616"
      },
      "source": "https://raw.githubusercontent.com/OpenBioLink/OpenBioLink/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:14:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 141
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}