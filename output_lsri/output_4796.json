{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MueFab/genie"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "Genie"
        ],
        "type": "Text_excerpt",
        "value": "Fabian M\u00fcntefering <[muenteferi@tnt.uni-hannover.de](mailto:muenteferi@tnt.uni-hannover.de)>\n\nMikel Hernaez <[mhernaez@unav.es](mailto:mhernaez@unav.es)>\n\nJan Voges <[voges@tnt.uni-hannover.de](mailto:voges@tnt.uni-hannover.de)>\n"
      },
      "source": "https://raw.githubusercontent.com/mitogen/genie/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-05-10T19:23:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-04T16:22:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Open Source MPEG-G Codec"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8888680500953444,
      "result": {
        "original_header": "Verifying",
        "type": "Text_excerpt",
        "value": "To check that Genie is working correctly, you can execute the following commands. \nTranscoding from FASTQ and SAM into MPEG-G records: \n    ./genie transcode-fastq -i ./data/example_1.fastq --input-suppl-file ./data/example_2.fastq -o ./data/transcoded_mgrec/unaligned.mgrec\n    ./genie transcode-sam -c -i ./data/example.sam -r ./data/example.fa -o ./data/transcoded_mgrec/aligned.mgrec \n    # Unaligned data without low latency flag -> Global Assembly Encoding\n    ./genie run -i ./data/transcoded_mgrec/unaligned.mgrec -o ./data/encoded/global_assembly.mgb\n    \n    # Unaligned data with low latency flag -> Low Latency Encoding\n    ./genie run -i ./data/transcoded_mgrec/unaligned.mgrec -o ./data/encoded/low_latency.mgb --low-latency\n    \n    # Aligned data without any reference specified -> Local Assembly Encoding\n    ./genie run -i ./data/transcoded_mgrec/aligned.mgrec -o ./data/encoded/local_assembly.mgb\n    \n    # Aligned data with reference specified -> Reference Based Encoding\n    ./genie run -i ./data/transcoded_mgrec/aligned.mgrec -o ./data/encoded/reference_based.mgb -r ./data/example.fa  \nTranscoding from MPEG-G records back to FASTQ and SAM: \n    ./genie transcode-fastq -i ./data/decoded/global_assembly.mgrec -o ./data/transcoded_legacy/global_assembly_1.fastq --output-suppl-file ./data/transcoded_legacy/global_assembly_2.fastq\n    ./genie transcode-fastq -i ./data/decoded/low_latency.mgrec -o ./data/transcoded_legacy/low_latency_1.fastq --output-suppl-file ./data/transcoded_legacy/low_latency_2.fastq\n    ./genie transcode-sam -i ./data/decoded/local_assembly.mgrec -o ./data/transcoded_legacy/local_assembly.sam -r ./data/example.fa\n    ./genie transcode-sam -i ./data/decoded/reference_based.mgrec -o ./data/transcoded_legacy/reference_based.sam -r ./data/example.fa \nCompare decoded files to originals (record order might be different, thus they must be sorted before the comparison):\n    \n    diff <(sort ./data/example_1.fastq) <(sort ./data/transcoded_legacy/global_assembly_1.fastq)\n    diff <(sort ./data/example_2.fastq) <(sort ./data/transcoded_legacy/global_assembly_2.fastq)\n    diff <(sort ./data/example_1.fastq) <(sort ./data/transcoded_legacy/low_latency_1.fastq)\n    diff <(sort ./data/example_2.fastq) <(sort ./data/transcoded_legacy/low_latency_2.fastq)\n    \n    # First line is removed before comparison, as SAM files store the sorting of records in their header\n    diff <(tail -n +2 ./data/example.sam | sort) <(tail -n +2 ./data/transcoded_legacy/reference_based.sam | sort)\n    diff <(tail -n +2 ./data/example.sam | sort) <(tail -n +2 ./data/transcoded_legacy/local_assembly.sam | sort)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mitogen/genie/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mitogen/genie/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MueFab/genie/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MueFab/genie"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Genie"
      },
      "source": "https://raw.githubusercontent.com/mitogen/genie/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/src/misc/test-gabac-python-api.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/src/misc/generate_conformance.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/benchmark.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/gatk_best_practices_align.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/authors.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/todo.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/conformance-roundtrip.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/clang-format.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/shellcheck.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/get_genie.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/conformance-roundtrip-spring.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/autopep8-pycodestyle.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/util/dirdiff.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/ci/unit_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/ci/src_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/ci/conformance_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/ci/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/ci/complete_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/ci/memory_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/ci/fastq_tools/fastq_roundtrip.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/ci/fastq_tools/fastq_memcheck.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/ci/sam_tools/sam_memcheck.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/ci/sam_tools/sam_transcoder_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/ci/sam_tools/sam_roundtrip.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9626052096097407,
      "result": {
        "original_header": "Verifying",
        "type": "Text_excerpt",
        "value": "To check that Genie is working correctly, you can execute the following commands. \n"
      },
      "source": "https://raw.githubusercontent.com/mitogen/genie/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8391014336243892,
      "result": {
        "original_header": "Verifying",
        "type": "Text_excerpt",
        "value": "    ./genie transcode-fastq -i ./data/example_1.fastq --input-suppl-file ./data/example_2.fastq -o ./data/transcoded_mgrec/unaligned.mgrec\n    ./genie transcode-sam -c -i ./data/example.sam -r ./data/example.fa -o ./data/transcoded_mgrec/aligned.mgrec \n    ./genie run -i ./data/encoded/global_assembly.mgb -o ./data/decoded/global_assembly.mgrec\n    ./genie run -i ./data/encoded/low_latency.mgb -o ./data/decoded/low_latency.mgrec\n    ./genie run -i ./data/encoded/local_assembly.mgb -o ./data/decoded/local_assembly.mgrec\n    ./genie run -i ./data/encoded/reference_based.mgb -o ./data/decoded/reference_based.mgrec -r ./data/example.fa \n    ./genie transcode-fastq -i ./data/decoded/global_assembly.mgrec -o ./data/transcoded_legacy/global_assembly_1.fastq --output-suppl-file ./data/transcoded_legacy/global_assembly_2.fastq\n    ./genie transcode-fastq -i ./data/decoded/low_latency.mgrec -o ./data/transcoded_legacy/low_latency_1.fastq --output-suppl-file ./data/transcoded_legacy/low_latency_2.fastq\n    ./genie transcode-sam -i ./data/decoded/local_assembly.mgrec -o ./data/transcoded_legacy/local_assembly.sam -r ./data/example.fa\n    ./genie transcode-sam -i ./data/decoded/reference_based.mgrec -o ./data/transcoded_legacy/reference_based.sam -r ./data/example.fa \nCompare decoded files to originals (record order might be different, thus they must be sorted before the comparison):\n    \n    diff <(sort ./data/example_1.fastq) <(sort ./data/transcoded_legacy/global_assembly_1.fastq)\n    diff <(sort ./data/example_2.fastq) <(sort ./data/transcoded_legacy/global_assembly_2.fastq)\n    diff <(sort ./data/example_1.fastq) <(sort ./data/transcoded_legacy/low_latency_1.fastq)\n    diff <(sort ./data/example_2.fastq) <(sort ./data/transcoded_legacy/low_latency_2.fastq)\n    \n    # First line is removed before comparison, as SAM files store the sorting of records in their header\n    diff <(tail -n +2 ./data/example.sam | sort) <(tail -n +2 ./data/transcoded_legacy/reference_based.sam | sort)\n    diff <(tail -n +2 ./data/example.sam | sort) <(tail -n +2 ./data/transcoded_legacy/local_assembly.sam | sort)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mitogen/genie/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MueFab/genie/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The copyright in this software is being made available under the BSD License,\nincluded below. This software may be subject to other third party and\ncontributor rights, including patent rights, and no such rights are granted\nunder this license.\n\n\nCopyright (c) 2018-present\n\n  Leibniz University Hannover (LUH)\n  Institut fuer Informationsverarbeitung (TNT)\n\n  University of Illinois at Urbana-Champaign (UIUC)\n  Carl R. Woese Institute for Genomic Biology (IGB)\n\n\nContacts\n\n  Jan Voges <voges@tnt.uni-hannover.de>\n  Mikel Hernaez <mhernaez@illinois.edu>\n\n\nAll rights reserved.\n\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n1. Redistributions of source code must retain the above copyright notice,\n   this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n3. Neither the name of the copyright holder nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/mitogen/genie/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://dev.azure.com/fabianmuentefering/fabianmuentefering/_apis/build/status/muefab.genie?branchName=develop"
      },
      "source": "https://raw.githubusercontent.com/mitogen/genie/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genie"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "MueFab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 2588683,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 132864,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 71422,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 35991,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 29918,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 1800,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mitogen/genie/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Mandatory Dependencies",
        "parent_header": [
          "Genie"
        ],
        "type": "Text_excerpt",
        "value": "* [OpenMP](https://en.wikipedia.org/wiki/OpenMP) for multithreading (ubuntu: libomp-dev / fedora: libomp-devel)\n* [CMake](https://cmake.org) 3.1 or greater (ubuntu: cmake / fedora: cmake)\n* [make](https://www.gnu.org/software/make/) (ubuntu: build-essential / fedora: make)\n* A compiler compliant to C++11  (ubuntu: build-essential / fedora: gcc)\n"
      },
      "source": "https://raw.githubusercontent.com/mitogen/genie/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional Dependencies",
        "parent_header": [
          "Genie"
        ],
        "type": "Text_excerpt",
        "value": "* [Doxygen](https://www.doxygen.nl) for building the HTML documentation\n* [HTSlib](https://github.com/samtools/htslib) for SAM/BAM file support (ubuntu: libhts-dev / fedora: htslib-devel)\n    * GNU [autoconf](https://www.gnu.org/software/autoconf/) (ubuntu: autoconf / fedora: autoconf)\n    * GNU [automake](https://www.gnu.org/software/automake/) (ubuntu: automake / fedora: automake)\n    * [zlib](https://www.zlib.net/) development files (ubuntu: zlib1g-dev / fedora: zlib-devel)\n    * [libbz2](https://gitlab.com/bzip2/bzip2) development files (ubuntu: libbz2-dev / fedora: bzip2-devel)\n    * [liblzma](https://tukaani.org/xz/) development files (ubuntu: liblzma-dev / fedora: xz-devel)\n    * [libcurl](https://curl.se/) development files  (ubuntu: libcurl4-{gnutls,nss,openssl}-dev / fedora: libcurl-devel)\n    * [libcrypto](https://www.openssl.org/docs/man3.0/man7/crypto.html) development files (ubuntu: lib{gnutls,nss3,ssl}-dev / fedora: openssl-devel)\n"
      },
      "source": "https://raw.githubusercontent.com/mitogen/genie/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:43:13",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 35
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage Policy",
        "parent_header": [
          "Genie"
        ],
        "type": "Text_excerpt",
        "value": "The open source MPEG-G codec Genie is made available before scientific publication.\n\nThis pre-publication software is preliminary and may contain errors.\nThe software is provided in good faith, but without any express or implied warranties.\nWe refer the reader to our [license](LICENSE).\n\nThe goal of our policy is that early release should enable the progress of science.\nWe kindly ask to refrain from publishing analyses that were conducted using this software while its development is in progress.\n"
      },
      "source": "https://raw.githubusercontent.com/mitogen/genie/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting and Building Genie",
        "parent_header": [
          "Genie",
          "Quickstart"
        ],
        "type": "Text_excerpt",
        "value": "We provide the script `get_genie.sh` to quickly build Genie.\nIt will automatically clone the Genie repository, build HTSlib as a dependency for SAM file support, and download a few small example files for testing purposes. The script needs git and all dependencies for genie and htslib installed (listed above).\n\n    mkdir genie_buildspace\n    cd genie_buildspace\n    wget https://raw.githubusercontent.com/MueFab/genie/main/util/get_genie.sh\n    bash ./get_genie.sh\n\nThe script will work only in the `genie_buildspace` directory.\nIt will not modify any user or system directories.\n\nAlternatively, you can manually build HTSlib and Genie using CMake.\n"
      },
      "source": "https://raw.githubusercontent.com/mitogen/genie/main/README.md",
      "technique": "header_analysis"
    }
  ]
}