{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ekraka/EDHB"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-04T16:11:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-10T18:52:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9231147729768212,
      "result": {
        "type": "Text_excerpt",
        "value": "\nReplace python with path_to_EDHB/EDHB for executing with binary \nIf secondary structure specification is required (annotation of alpha, beta, turn etc.), download ss.txt from https://smu.box.com/s/ncs1vzhhqn1dy92w2q1te6zq97g614ks and place the file in either EDHB directory (for using with binary) or scripts directory (for python based execution) \n    1) -c to include C-H...O bonds \n    2) -l for local mode calculation from .fchk file generated from gaussian\n    3) -f for local frequency calculation from .fchk file generated from gaussian\n    4) -Charg for charges from .fchk file generated from gaussian (Mulliken charges)\n    5) -R to do Intramolecular analysis\n    6) -a to add HB angle\n    7) -B to add bifurcation type (hydrogen bond network) \n    3) -C NBO_file\n    NBO_file is the output for an NBO analysis from gaussian \n    The parameter adds NBO charges to participating hydrogen bond atoms \n    4) -LP NBO_file\n    NBO_file is the output for an NBO analysis from gaussian \n    The parameter adds lone pair contributions  \n    5) -db pdb_id \n    pdb_id is the ID for a protein taken from Protein Data Bank\n    The parameter adds secondary structure informations \n"
      },
      "source": "https://raw.githubusercontent.com/ekraka/EDHB/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ekraka/EDHB/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ekraka/EDHB/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ekraka/EDHB"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/ekraka/EDHB/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.940598470378139,
      "result": {
        "type": "Text_excerpt",
        "value": "    EDHB: binary file for linux. This file cannot be edited. Standalone for EDHB. Do not require python.\n    scripts: Original python script. \n    examples: The examples folder can be downloaded from https://smu.box.com/s/i2454jb9kpua8hw37ycdxw7codho5p2t \n\nReplace python with path_to_EDHB/EDHB for executing with binary \nIf secondary structure specification is required (annotation of alpha, beta, turn etc.), download ss.txt from https://smu.box.com/s/ncs1vzhhqn1dy92w2q1te6zq97g614ks and place the file in either EDHB directory (for using with binary) or scripts directory (for python based execution) \n\nINSTALLATION \nGo to scripts directory (or EDHB for binary) \n    python path_to_scripts/hbond_out.py filename.extension \nextension can be any babel compatible file such as pdb, mol2, xyz, pdbqt, fchk etc. \nThe following parameters can be provided for external calculations \n        python path_to_scripts/hbond_out.py 1k43.pdb \u2013db 1K43 \u2013R \u2013B \n        python path_to_scripts/hbond_out.py xtbopt.xyz -Hl hessian -l -f \n"
      },
      "source": "https://raw.githubusercontent.com/ekraka/EDHB/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8723589512244061,
      "result": {
        "type": "Text_excerpt",
        "value": "    EDHB: binary file for linux. This file cannot be edited. Standalone for EDHB. Do not require python.\n    scripts: Original python script. \n    examples: The examples folder can be downloaded from https://smu.box.com/s/i2454jb9kpua8hw37ycdxw7codho5p2t \n    python path_to_scripts/hbond_out.py filename.extension \n\nEXAMPLES \n        python path_to_scripts/hbond_out.py 1k43.pdb \u2013db 1K43 \u2013R \u2013B \n        python path_to_scripts/hbond_out.py xtbopt.xyz -Hl hessian -l -f \n"
      },
      "source": "https://raw.githubusercontent.com/ekraka/EDHB/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ekraka/EDHB/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 ekraka\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ekraka/EDHB/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EDHB"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ekraka"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 132487,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ekraka/EDHB/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:12:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}