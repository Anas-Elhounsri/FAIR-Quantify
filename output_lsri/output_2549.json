{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gustavochm/sgtpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-08-11T17:41:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T17:37:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9967307685204985,
      "result": {
        "original_header": "What is sgtpy?",
        "type": "Text_excerpt",
        "value": "sgtpy is an open-source python package of SAFT-VR-Mie and SAFT-Gamma-Mie Equations of State (EOS).\nsgtpy allows to work with pure fluids and fluid mixtures, additionally the fluids\ncan be modeled considering association, cross-association and polar contributions.\nsgtpy was built on top of phasepy's phase equilibrium and Square\nGradient Theory (SGT) functions. These functions were updated to speed-up\ncalculations of associative mixtures. \n"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8174640802705495,
      "result": {
        "original_header": "Latest source code",
        "type": "Text_excerpt",
        "value": "The latest development version of SGTPy's sources can be obtained at \n"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "type": "Text_excerpt",
        "value": "SGTPy's documentation is available on the web (under development):\n\n    https://sgtpy.readthedocs.io/en/latest/\n\n"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://sgtpy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gustavochm/SGTPy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/14.%20Fit%20phase%20equilibria%20-%20Cross%20association%20-%20%20Water%20%2B%20Ethanol.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/14.%20Fit%20phase%20equilibria%20-%20Cross%20association%20-%20%20Water%20%2B%20Ethanol.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/6.%20Vapor%20Liquid%20Equilibria%20%28Bubble%20and%20dew%20points%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/6.%20Vapor%20Liquid%20Equilibria%20%28Bubble%20and%20dew%20points%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/15.%20Fit%20phase%20equilibria%20-%20Induced%20association%20-%20Ethanol%20%2B%20CPME.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/15.%20Fit%20phase%20equilibria%20-%20Induced%20association%20-%20Ethanol%20%2B%20CPME.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/2.%20Property%20calculations%20from%20SAFT-VR-Mie%20EoS%20%28pure%20fluid%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/2.%20Property%20calculations%20from%20SAFT-VR-Mie%20EoS%20%28pure%20fluid%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/3.%20Property%20calculations%20from%20SAFT-VR-Mie%20EoS%20%28Mixture%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/3.%20Property%20calculations%20from%20SAFT-VR-Mie%20EoS%20%28Mixture%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/13.%20Fit%20phase%20quilibria%20%28kij%29%20-%20Hexane%20%2B%20Ethanol.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/13.%20Fit%20phase%20quilibria%20%28kij%29%20-%20Hexane%20%2B%20Ethanol.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/12.%20Fit%20pure%20fluid%20parameters.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/12.%20Fit%20pure%20fluid%20parameters.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/11.%20Square%20Gradient%20Theory%20for%20mixtures%20%28beta%20%21%3D%200%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/11.%20Square%20Gradient%20Theory%20for%20mixtures%20%28beta%20%21%3D%200%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/5.%20Two%20phase%20flash%20%28TP%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/5.%20Two%20phase%20flash%20%28TP%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/10.%20Square%20Gradient%20Theory%20for%20mixtures%20%28beta%3D0%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/10.%20Square%20Gradient%20Theory%20for%20mixtures%20%28beta%3D0%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/7.%20Liquid%20Liquid%20Equilibria%20%28LLE%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/7.%20Liquid%20Liquid%20Equilibria%20%28LLE%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/8.%20Three%20phase%20equilibria%20%28VLLE%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/8.%20Three%20phase%20equilibria%20%28VLLE%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/9.%20Square%20Gradient%20Theory%20for%20pure%20fluids.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/9.%20Square%20Gradient%20Theory%20for%20pure%20fluids.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/1.%20Components%20and%20mixtures.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/1.%20Components%20and%20mixtures.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/4.%20%20Phase%20stability%20test%20%28tpd%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/4.%20%20Phase%20stability%20test%20%28tpd%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/1.%20Database.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/1.%20Database.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/8.%20LLE%20for%20ternary%20mixture.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/8.%20LLE%20for%20ternary%20mixture.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/10.%20VLLE%20for%20ternary%20mixture.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/10.%20VLLE%20for%20ternary%20mixture.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/13.%20SGT%20for%20fluid%20mixtures%20%28beta%20%21%3D%200%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/13.%20SGT%20for%20fluid%20mixtures%20%28beta%20%21%3D%200%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/7.%20LLE%20for%20binary%20mixture.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/7.%20LLE%20for%20binary%20mixture.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/5.%20Phase%20stability%20for%20mixtures.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/5.%20Phase%20stability%20for%20mixtures.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/11.%20SGT%20for%20pure%20fluids.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/11.%20SGT%20for%20pure%20fluids.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/12.%20SGT%20for%20fluid%20mixtures%20%28beta%20%3D%200%29.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/12.%20SGT%20for%20fluid%20mixtures%20%28beta%20%3D%200%29.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/9.%20%20VLLE%20for%20binary%20mixture.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/9.%20%20VLLE%20for%20binary%20mixture.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/3.%20Pure%20fluid%20calculations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/3.%20Pure%20fluid%20calculations.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/8.2%20LLE%20for%20ternary%20mixture.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/8.2%20LLE%20for%20ternary%20mixture.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/2.%20Creating%20components%20and%20mixtures.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/2.%20Creating%20components%20and%20mixtures.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/6.%20VLE%20for%20mixtures.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/6.%20VLE%20for%20mixtures.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/6.2%20VLE%20for%20ternary%20mixture.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/6.2%20VLE%20for%20ternary%20mixture.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/4.%20Fluid%20mixture%20calculations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/GC%20SAFT-Gamma-Mie%20Examples/4.%20Fluid%20mixture%20calculations.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Water%20%2B%20Butanol.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Water%20%2B%20Butanol.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Metane%20%2B%20Dodecane.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Metane%20%2B%20Dodecane.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Hexane%20%2B%20Ethanol%20%2B%20CPME.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Hexane%20%2B%20Ethanol%20%2B%20CPME.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Reuse%20of%20SGTPy%20functions.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Reuse%20of%20SGTPy%20functions.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Fit%20Pure%20components%20parameters%20Hexane.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Fit%20Pure%20components%20parameters%20Hexane.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Water%20%2B%20Butanol%20%2B%20MTBE%20.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Water%20%2B%20Butanol%20%2B%20MTBE%20.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Hexane%20%2B%20Ethanol.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Hexane%20%2B%20Ethanol.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Fit%20Equilibrium%20Water%20%2B%20Ethanol.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Fit%20Equilibrium%20Water%20%2B%20Ethanol.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Fit%20beta%20for%20SGT%20Hexane%20%2B%20Ethanol.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Fit%20beta%20for%20SGT%20Hexane%20%2B%20Ethanol.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Fit%20Equilibrium%20Hexane%20%2B%20Ethanol.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Fit%20Equilibrium%20Hexane%20%2B%20Ethanol.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Fit%20Equilibrium%20Ethanol%20%2B%20CPME.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Fit%20Equilibrium%20Ethanol%20%2B%20CPME.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Pure%20Water.ipynb"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/examples/SGTPy%27s%20paper%20notebooks/Pure%20Water.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gustavochm/sgtpy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gustavochm/sgtpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation Prerequisites",
        "type": "Text_excerpt",
        "value": "- numpy"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "- numpy\n- scipy\n- cython\n- pandas\n- numba\n\nInstallation\n------------\n\nGet the latest version of sgtpy from\nhttps://pypi.python.org/pypi/sgtpy/\n\n\nIf you have an installation of Python with pip, simple install it with:\n\n    $ pip install sgtpy\n\nTo get the git version, run:\n\n    $ git clone https://github.com/gustavochm/sgtpy\n\n**Note for Apple Silicon users:** It is recommended to install python and sgtpy dependencies (numpy, scipy, cython, pandas and numba) through conda miniforge, then you can install sgtpy running ``pip install sgtpy``.\n"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9358045274259525,
      "result": {
        "original_header": "What is sgtpy?",
        "type": "Text_excerpt",
        "value": "sgtpy relies on numpy, scipy and phasepy. \n**Note in v0.0.13:** Due to PEP-8 standard's the module name has change from `SGTPy` to `sgtpy`. \n"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9146643550286104,
      "result": {
        "original_header": "Latest source code",
        "type": "Text_excerpt",
        "value": "The latest development version of SGTPy's sources can be obtained at \n    git clone https://github.com/gustavochm/SGTPy\n \n"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gustavochm/sgtpy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License information",
        "type": "Text_excerpt",
        "value": "This package is part of the article *SGTPy: A Python open-source code for\ncalculating the interfacial properties of fluids based on the Square Gradient\nTheory using the SAFT-VR Mie equation of state* by Andr\u00e9s Mej\u00eda,\nErich A. M\u00fcller and Gustavo Chaparro. J. Chem. Inf. Model., 2021,\n`<https://doi.org/10.1021/acs.jcim.0c01324>`_.\n\nSee ``LICENSE.txt`` for information on the terms & conditions for usage\nof this software, and a DISCLAIMER OF ALL WARRANTIES.\n\nAlthough not required by the sgtpy license, if it is convenient for you,\nplease cite sgtpy if used in your work. Please also consider contributing\nany changes you make back, and benefit the community.\n"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sgtpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "gustavochm"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 843594,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 5086,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation Prerequisites",
        "type": "Text_excerpt",
        "value": "- numpy"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:20:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 38
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Bug reports",
        "type": "Text_excerpt",
        "value": "To report bugs, please use the SGTPy's Bug Tracker at:\n\n    https://github.com/gustavochm/SGTPy/issues\n\n"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "type": "Text_excerpt",
        "value": "sgtpy easily allows you to perform phase equilibria and interfacial properties\ncalculations using SAFT-VR-Mie or SAFT-gamma-Mie EoS. First, components are defined with their\nmolecular parameters, then a mixture can be created with them.\n\n.. code-block:: python\n\n      >>> import numpy as np\n      >>> from sgtpy import component, mixture, saftvrmie\n      >>> ethanol = component('ethanol2C', ms=1.7728, sigma=3.5592 , eps=224.50,\n                    lambda_r=11.319, lambda_a=6., eAB=3018.05, rcAB=0.3547,\n                    rdAB=0.4, sites=[1,0,1], cii=5.3141080872882285e-20)\n      >>> hexane = component('hexane', ms=1.96720036, sigma=4.54762477,\n                               eps=377.60127994, lambda_r=18.41193194,\n                               cii=3.581510586936205e-19)\n      >>> mix = mixture(hexane, ethanol)\n      >>> # fitted to experimental data\n      >>> kij = 0.011818492037463553\n      >>> Kij = np.array([[0, kij], [kij, 0]])\n      >>> mix.kij_saft(Kij)\n      >>> eos = saftvrmie(mix)\n\nThe eos object can be used to compute phase equilibria.\n\n.. code-block:: python\n\n      >>> from sgtpy.equilibrium import bubblePy\n      >>> # computing bubble point\n      >>> T = 298.15 # K\n      >>> x = np.array([0.3, 0.7])\n      >>> # initial guesses for vapor compotision and pressure\n      >>> y0 = 1.*x\n      >>> P0 = 8000. # Pa\n      >>> sol = bubblePy(y0, P0, x, T, eos, full_output=True)\n\nFinally, the equilibria results can be used to model the interfacial behavior of\nthe mixture using SGT.\n\n.. code-block:: python\n\n      >>> from sgtpy.sgt import sgt_mix\n      >>> # reading solution object\n      >>> y, P = sol.Y, sol.P\n      >>> vl, vv = sol.v1, sol.v2\n      >>> #density vector of each phase\n      >>> rhox = x/vl\n      >>> rhoy = y/vv\n      >>> bij = 0.05719272059410664\n      >>> beta = np.array([[0, bij], [bij, 0]])\n      >>> eos.beta_sgt(beta)\n      >>> #solving BVP of SGT with 25 colocation points\n      >>> solsgt = sgt_mix(rhoy, rhox, T, P, eos, n = 25, full_output = True)\n\nFor more examples, please have a look at the Jupyter Notebook files\nlocated in the *examples* folder of the sources or\n`view examples in github <https://github.com/gustavochm/SGTPy/tree/master/Examples>`_.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/gustavochm/SGTPy/master/README.rst",
      "technique": "header_analysis"
    }
  ]
}