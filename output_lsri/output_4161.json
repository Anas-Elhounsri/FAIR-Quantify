{
  "application_domain": [
    {
      "confidence": 19.14,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hyemin-han/BayesFactorFMRI"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-12-02T16:49:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-06T22:58:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BayesFactorFMRI is a tool developed with R and Python to allow neuroimaging researchers to conduct Bayesian second-level analysis of fMRI data and Bayesian meta-analysis of fMRI images with multiprocessing. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9216261931423286,
      "result": {
        "original_header": "BayesFactorFMRI",
        "type": "Text_excerpt",
        "value": "<b>Please refer to and cite these articles when you use BayesFactorFMRI:</b><br />\n 0. Han, H. (2021). BayesFactorFMRI: Implementing Bayesian second-level fMRI analysis with multiple comparison correction and Bayesian meta-analysis of fMRI images with multiprocessing. <i>Journal of Open Research Software, 9</i>(1), 1. http://doi.org/10.5334/jors.328 https://bit.ly/36wV3HV <br />\n Based on the specific functionality that you intend to use: <br />\n 1. Bayesian multiple comparison correction: Han, H. (2020). Implementation of Bayesian multiple comparison correction in the second-level analysis of fMRI data: With pilot analyses of simulation and real fMRI datasets based on voxelwise inference. <i>Cognitive Neuroscience, 11</i>(3), 157-169. http://bit.ly/2S6Uka2\n 2. Bayesian meta-analysis: Han, H., & Park, J. (2019). Bayesian meta-analysis of fMRI image data. <i>Cognitive Neuroscience, 10</i>(2), 66-76. http://bit.ly/2RCbxZY \n<b>BayesFactorFMRI provides a GUI to </b>\n 1. Bayesian 2nd-level analysis of fMRI data with multiple comparison correction and\n 2. Bayesian meta-analysis of fMRI studies. \nTo test this tool, R (>= 3.5) and Python (>= 3.7.3; Python 3.8 is not recommended due to package-related issues at this point) are required. Plus, these additional packages should be installed:<p>\n R: BayesFactor, metaBMA, oro.nifti<p>\n Python: tkinter (for GUI), shutil, pandas, nibabel, rpy2, subprocess, numpy, nilearn (os, math, atexit, glob)<p> \n 1. Download contents (codes and etc.) in V1.0.0.\n 2. Download tutorial images files in the designated subfolder(s) (i.e. /Correction for (1) and /Meta for (2)).\n 3. Run bayes_select_ui.py with Python to start either correction_ui or bmeta_ui. At the terminal, execute: python (or python3) bayes_select_ui.py\n 4. Follow the directions provided with the GUI. \nAt the last stage, you will decide either to run the analysis locally or on a cluster.\nOnce you decide to run the analysis locally, then GUI will call Python and R automatically at the end of the process.\nIf you choose to run the analysis on a cluster, the GUI will end. You have to upload created files (including both codes, image files, etc.) to a cluster and run run_this.py. These files will be created in a working directory that you specify in GUI. In this process, you may need to write additional code(s) to run run_this.py on the cluster (e.g., slurm batch including \"python (or python3) run_this.py\"). \n<b> In order to see how to perform Bayesian second-level analysis and meta-analysis with tutorial datasets, please refer to one of these:</b> \n"
      },
      "source": "https://raw.githubusercontent.com/hyemin-han/BayesFactorFMRI/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hyemin-han/BayesFactorFMRI/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hyemin-han/BayesFactorFMRI"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BayesFactorFMRI"
      },
      "source": "https://raw.githubusercontent.com/hyemin-han/BayesFactorFMRI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999897092741262,
      "result": {
        "original_header": "BayesFactorFMRI",
        "type": "Text_excerpt",
        "value": "To test this tool, R (>= 3.5) and Python (>= 3.7.3; Python 3.8 is not recommended due to package-related issues at this point) are required. Plus, these additional packages should be installed:<p>\n R: BayesFactor, metaBMA, oro.nifti<p>\n Python: tkinter (for GUI), shutil, pandas, nibabel, rpy2, subprocess, numpy, nilearn (os, math, atexit, glob)<p> \n To install dependencies:\n 1. R packages <p>\n In the R console, execute: <p>\n install.packages('BayesFactor') <p>\n install.packages('metaBMA')<p>\n install.packages('oro.nifti')  *A quick note on 11/24/21: please install the most up-to-date oro.nift, 0.11.0 (as of 11/24/21), to avoid any bug during the result image creation process.*<p> \n 2. Python packages<p>\n To install the following Python packages, execute the following command at the terminal:<p>\n pip (or pip3) install shutil<p>\n pip (or pip3) install pandas<p>\n pip (or pip3) install nibabel<p>\n pip (or pip3) install rpy2<p>\n pip (or pip3) install subprocess<p>\n pip (or pip3) install numpy<p>\n pip (or pip3) install -U --user nilearn (for further details, refer to https://nilearn.github.io/introduction.html#installing-nilearn)<p> \n After installing all required dependencies, follow directions below: \n 1. Download contents (codes and etc.) in V1.0.0.\n 2. Download tutorial images files in the designated subfolder(s) (i.e. /Correction for (1) and /Meta for (2)).\n 3. Run bayes_select_ui.py with Python to start either correction_ui or bmeta_ui. At the terminal, execute: python (or python3) bayes_select_ui.py\n 4. Follow the directions provided with the GUI. \nAt the last stage, you will decide either to run the analysis locally or on a cluster.\nOnce you decide to run the analysis locally, then GUI will call Python and R automatically at the end of the process.\nIf you choose to run the analysis on a cluster, the GUI will end. You have to upload created files (including both codes, image files, etc.) to a cluster and run run_this.py. These files will be created in a working directory that you specify in GUI. In this process, you may need to write additional code(s) to run run_this.py on the cluster (e.g., slurm batch including \"python (or python3) run_this.py\"). \n"
      },
      "source": "https://raw.githubusercontent.com/hyemin-han/BayesFactorFMRI/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8139822004750655,
      "result": {
        "original_header": "BayesFactorFMRI",
        "type": "Text_excerpt",
        "value": " 1. Download contents (codes and etc.) in V1.0.0.\n 2. Download tutorial images files in the designated subfolder(s) (i.e. /Correction for (1) and /Meta for (2)).\n 3. Run bayes_select_ui.py with Python to start either correction_ui or bmeta_ui. At the terminal, execute: python (or python3) bayes_select_ui.py\n 4. Follow the directions provided with the GUI. \n"
      },
      "source": "https://raw.githubusercontent.com/hyemin-han/BayesFactorFMRI/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bayesian, bayesian-inference, bayesian-meta-analysis, bayesian-statistics, fmri, fmri-data, gui, meta-analysis, neuroimaging, neuroscience"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Hyemin Han\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/hyemin-han/BayesFactorFMRI/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BayesFactorFMRI"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hyemin-han"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 65831,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 24886,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hyemin-han/BayesFactorFMRI/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hyemin-han",
          "type": "User"
        },
        "date_created": "2020-08-08T03:07:14Z",
        "date_published": "2020-08-08T03:17:16Z",
        "description": "BayesFactorFMRI is a tool developed with R and Python to allow neuroimaging researchers to conduct Bayesian second-level analysis of fMRI data and Bayesian meta-analysis of fMRI images with multiprocessing. This tool was developed to expedite computationally intensive Bayesian fMRI analysis through multiprocessing. Its GUI allows researchers who are not experts in computer programming to feasibly perform Bayesian fMRI analysis. BayesFactorFMRI is available via or GitHub for download. It would be widely reused by neuroimaging researchers who intend to analyse their fMRI data with Bayesian analysis with better sensitivity compared with classical analysis while saving time by distributing analysis tasks into multiple processes.\r\n\r\nPlease refer to and cite these articles when you use BayesFactorFMRI:\r\n\r\nJournal of Open Research Software paper.\r\nBayesian multiple comparison correction: Han, H. (2020). Implementation of Bayesian multiple comparison correction in the second-level analysis of fMRI data: With pilot analyses of simulation and real fMRI datasets based on voxelwise inference. Cognitive Neuroscience, 11(3), 157-169. http://bit.ly/2S6Uka2\r\nBayesian meta-analysis: Han, H., & Park, J. (2019). Bayesian meta-analysis of fMRI image data. Cognitive Neuroscience, 10(2), 66-76. http://bit.ly/2RCbxZY",
        "html_url": "https://github.com/hyemin-han/BayesFactorFMRI/releases/tag/V1.0.0-deprecated2",
        "name": "BayesFactorFMRI: Implementing Bayesian second-level fMRI analysis with multiple comparison correction and Bayesian meta-analysis of fMRI images with multiprocessing (V1.0.0)",
        "release_id": 29470612,
        "tag": "V1.0.0-deprecated2",
        "tarball_url": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/tarball/V1.0.0-deprecated2",
        "type": "Release",
        "url": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/releases/29470612",
        "value": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/releases/29470612",
        "zipball_url": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/zipball/V1.0.0-deprecated2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hyemin-han",
          "type": "User"
        },
        "date_created": "2020-08-08T03:07:14Z",
        "date_published": "2020-08-08T03:33:52Z",
        "description": "BayesFactorFMRI is a tool developed with R and Python to allow neuroimaging researchers to conduct Bayesian second-level analysis of fMRI data and Bayesian meta-analysis of fMRI images with multiprocessing. This tool was developed to expedite computationally intensive Bayesian fMRI analysis through multiprocessing. Its GUI allows researchers who are not experts in computer programming to feasibly perform Bayesian fMRI analysis. BayesFactorFMRI is available via or GitHub for download. It would be widely reused by neuroimaging researchers who intend to analyse their fMRI data with Bayesian analysis with better sensitivity compared with classical analysis while saving time by distributing analysis tasks into multiple processes.\r\n\r\nPlease refer to and cite these articles when you use BayesFactorFMRI:\r\n\r\nJournal of Open Research Software paper. Bayesian multiple comparison correction: Han, H. (2020). Implementation of Bayesian multiple comparison correction in the second-level analysis of fMRI data: With pilot analyses of simulation and real fMRI datasets based on voxelwise inference. Cognitive Neuroscience, 11(3), 157-169. http://bit.ly/2S6Uka2 Bayesian meta-analysis: Han, H., & Park, J. (2019). Bayesian meta-analysis of fMRI image data. Cognitive Neuroscience, 10(2), 66-76. http://bit.ly/2RCbxZY",
        "html_url": "https://github.com/hyemin-han/BayesFactorFMRI/releases/tag/V1.0.0",
        "name": "BayesFactorFMRI: Implementing Bayesian second-level fMRI analysis with multiple comparison correction and Bayesian meta-analysis of fMRI images with multiprocessing (V1.0.0)",
        "release_id": 29470724,
        "tag": "V1.0.0",
        "tarball_url": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/tarball/V1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/releases/29470724",
        "value": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/releases/29470724",
        "zipball_url": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/zipball/V1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hyemin-han",
          "type": "User"
        },
        "date_created": "2020-08-08T03:07:14Z",
        "date_published": "2020-03-15T19:18:28Z",
        "description": "BayesFMRI is a tool developed with R and Python to allow neuroimaging researchers to conduct Bayesian second-level analysis of fMRI data and Bayesian meta-analysis of fMRI images with multiprocessing. This tool was developed to expedite computationally intensive Bayesian fMRI analysis through multiprocessing. Its GUI allows researchers who are not experts in computer programming to feasibly perform Bayesian fMRI analysis. BayesFMRI is available via or GitHub for download. It would be widely reused by neuroimaging researchers who intend to analyse their fMRI data with Bayesian analysis with better sensitivity compared with classical analysis while saving time by distributing analysis tasks into multiple processes.\r\n\r\n<b>Please refer to and cite these articles when you use BayesFMRI:</b>\r\n 1. Bayesian multiple comparison correction: Han, H. (in press). Implementation of Bayesian multiple comparison correction in the second-level analysis of fMRI data: With pilot analyses of simulation and real fMRI datasets based on voxelwise inference. <i>Cognitive Neuroscience</i>. http://bit.ly/2S6Uka2\r\n 2. Bayesian meta-analysis: Han, H., & Park, J. (2019). Bayesian meta-analysis of fMRI image data. <i>Cognitive Neuroscience, 10</i>(2), 66-76. http://bit.ly/2RCbxZY",
        "html_url": "https://github.com/hyemin-han/BayesFactorFMRI/releases/tag/V1.0.0-deprecated",
        "name": "The first release of BayesFMRI",
        "release_id": 24540834,
        "tag": "V1.0.0-deprecated",
        "tarball_url": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/tarball/V1.0.0-deprecated",
        "type": "Release",
        "url": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/releases/24540834",
        "value": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/releases/24540834",
        "zipball_url": "https://api.github.com/repos/hyemin-han/BayesFactorFMRI/zipball/V1.0.0-deprecated"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:22:41",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ]
}