{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "RiboDraw"
        ],
        "type": "Text_excerpt",
        "value": "If you use RiboDraw, please cite:   \n\nRhiju Das, Andrew M Watkins, RiboDraw: semiautomated two-dimensional drawing of RNA tertiary structure diagrams, NAR Genomics and Bioinformatics, Volume 3, Issue 4, December 2021, lqab091, [https://doi.org/10.1093/nargab/lqab091](https://dx.doi.org/10.1093/nargab/lqab091)\n"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ribokit/RiboDraw"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-09-04T18:46:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-17T17:42:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Semiautomated layout of RNA tertiary structure diagrams"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9100813696080544,
      "result": {
        "original_header": "RiboDraw",
        "type": "Text_excerpt",
        "value": "Semiautomated layout of RNA tertiary structure diagrams \n"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8936365413987137,
      "result": {
        "original_header": "For developers",
        "type": "Text_excerpt",
        "value": "* *Ribodraw is Open Source*. Want to improve RiboKit's MATLAB interface? Port to JavaScript? Check out our [Issues page](https://github.com/ribokit/RiboDraw/issues) on GitHub. Feel free to fork and make pull requests. \n* *Running unit tests* Go to `RiboDraw/unittests` and type `runtests`. Add your own tests to [RiboDrawTest.m](unittests/RiboDrawTest.m)\n* *Its easy to generate HTML docs* We are currently using M2HTML to quickly generate docs for MATLAB scripts. . Download it [here](https://www.artefact.tk/software/matlab/m2html/), and run the\n`generate_ribodraw_docs` command in MATLAB to update docs.\n \n"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DasLab/RiboDraw/tree/master/scripts/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "RiboDraw",
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "### Documentation\nDocumentation of all MATLAB source code is compiled into HTML format at [docs](scripts/docs/menu.html). It doesn't directly display in GitHub (yet), but if you open this README.md on your local machine, double click on [scripts/docs/menu.html](scripts/docs/menu.html)\n"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Format",
        "parent_header": [
          "RiboDraw",
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "The core format for RiboDraw 'drawing' files was originally JSON-like to allow for eventual reading and writing with versions of RiboDraw in other languages or other kinds of software, but MATLAB's tools to read/write JSON are currently very slow. The fields are described [here](drawing_format.md). The format can therefore also be saved to `.mat` MATLAB workspace files, which are very fast to read/write. Drawings can be exported to `.png`, `.jpg`, `.ps`, and `.pdf` format for manipulation with other software.\n\n"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DasLab/RiboDraw/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ribokit/RiboDraw/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ribokit/RiboDraw"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RiboDraw"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/tutorial/images/1gidA_drawing.png"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://img.youtube.com/vi/gLcxN6HxEjQ/0.jpg"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/drawings/P4P6/P4P6_ribodraw_eterna_theme.png"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation of RiboDraw",
        "parent_header": [
          "RiboDraw",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Ribodraw has been tested on MATLAB R2016a and MATLAB 2017b. \nSome functionality makes use of the Mapping Toolbox and maybe other Toolboxes.\n\nDownload RiboKit either by cloning this repository:\n```\ngit clone https://github.com/RiboKit/RiboDraw.git \n```\nor check for the latest release at:\n```\nhttps://github.com/RiboKit/RiboDraw/releases\n```\n\nThen add the `RiboDraw/scripts/` directory  to your MATLAB path using the command `pathtool` or `Set path...` from the menu. Make sure to use the option to include all subdirectories.\n"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9982648399489656,
      "result": {
        "original_header": "For developers",
        "type": "Text_excerpt",
        "value": "* *Ribodraw is Open Source*. Want to improve RiboKit's MATLAB interface? Port to JavaScript? Check out our [Issues page](https://github.com/ribokit/RiboDraw/issues) on GitHub. Feel free to fork and make pull requests. \n* *Running unit tests* Go to `RiboDraw/unittests` and type `runtests`. Add your own tests to [RiboDrawTest.m](unittests/RiboDrawTest.m)\n* *Its easy to generate HTML docs* We are currently using M2HTML to quickly generate docs for MATLAB scripts. . Download it [here](https://www.artefact.tk/software/matlab/m2html/), and run the\n`generate_ribodraw_docs` command in MATLAB to update docs.\n \n"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ribokit/RiboDraw/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 RiboKit\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RiboDraw"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ribokit"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Promela",
        "size": 2568619,
        "type": "Programming_language",
        "value": "Promela"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 1479877,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 584665,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PHP",
        "size": 8286,
        "type": "Programming_language",
        "value": "PHP"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Rich Text Format",
        "size": 6101,
        "type": "Programming_language",
        "value": "Rich Text Format"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Mercury",
        "size": 1483,
        "type": "Programming_language",
        "value": "Mercury"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 1188,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Objective-C",
        "size": 363,
        "type": "Programming_language",
        "value": "Objective-C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:17:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Rosetta",
        "parent_header": [
          "RiboDraw",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "You'll need Rosetta's `rna_motif` executable to extract information on sequence, secondary structure, noncanonical pairs, motifs, etc. Grab the latest release at [RosettaCommons](https://www.rosettacommons.org/software) and follow the installation instructions at [RosettaCommons](https://www.rosettacommons.org/docs/latest/build_documentation/Build-Documentation). Alternatively, you can run a `rna_motif` job via the [rna_info](https://rosie.rosettacommons.org/rna_info) ROSIE server.\n"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "parent_header": [
          "RiboDraw",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Follow the [**Tutorial**](tutorial/tutorial.md), which teaches you how to make a nice layout of the P4-P6 domain of the *Tetrahymena* group I self-splicing intron:\n\n![1gidA RiboDraw drawing](tutorial/images/1gidA_drawing.png)\n\nIt takes about 30 minutes (or more, depending on how much you want to refine the drawing).\n\nA brief account of key steps in the tutorial is available on YouTube; click the thumbnail below!\n\n[![video thumbnail](http://img.youtube.com/vi/gLcxN6HxEjQ/0.jpg)](http://www.youtube.com/watch?v=gLcxN6HxEjQ \"RiboDraw tutorial\").\n"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Eterna",
        "parent_header": [
          "RiboDraw",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "It is also possible to use RiboDraw to generate `customLayout`'s for Eterna puzzles -- this is a preliminary solution for conveying 3D information and resolving overlaps in ribosome-scale problems in Eterna. Here's an example for P4-P6, \n\n![1gidA RiboDraw eterna theme](drawings/P4P6/P4P6_ribodraw_eterna_theme.png)\n\navailable in this [drawing](drawings/P4P6/1gidA_drawing_eterna.mat), and how this looks inside Eterna at the [Eterna P4-P6 development puzzle](http://eternadev.org/game/puzzle/9386179/). Special information on using Ribodraw to prepare Eterna puzzles is available at [eterna_tutorial.md](tutorial/eterna/eterna_tutorial.md).\n"
      },
      "source": "https://raw.githubusercontent.com/DasLab/RiboDraw/master/README.md",
      "technique": "header_analysis"
    }
  ]
}