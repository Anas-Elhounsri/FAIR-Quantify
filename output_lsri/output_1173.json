{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - family-names: Schneider\n    given-names: Kevin\n    orcid: https://orcid.org/0000-0002-2198-5262\n  - family-names: Zimmer\n    given-names: David\n    orcid: https://orcid.org/0000-0002-7832-7658\n  - family-names: Nielsen\n    given-names: Henrik\n  - family-names: Herrmann\n    given-names: Johannes\n    orcid: https://orcid.org/0000-0003-2081-4506\n  - family-names: Muehlhaus\n    given-names: Timo\n    orcid: https://orcid.org/0000-0003-3925-6778\ntitle: \"iMLP, a predictor for internal matrix targeting-like sequences in mitochondrial proteins\"\nversion: 0.1.2\nidentifiers:\n  - type: doi\n    value: 10.1515/hsz-2021-0185\ndate-released: 2021-07-05\npreferred-citation:\n  type: article\n  authors:\n  - family-names: Schneider\n    given-names: Kevin\n    orcid: https://orcid.org/0000-0002-2198-5262\n  - family-names: Zimmer\n    given-names: David\n    orcid: https://orcid.org/0000-0002-7832-7658\n  - family-names: Nielsen\n    given-names: Henrik\n  - family-names: Herrmann\n    given-names: Johannes\n    orcid: https://orcid.org/0000-0003-2081-4506\n  - family-names: Muehlhaus\n    given-names: Timo\n    orcid: https://orcid.org/0000-0003-3925-6778\n  doi: \"10.1515/hsz-2021-0185\"\n  journal: \"Biological Chemistry\"\n  month: 7\n  start: 937 # First page number\n  end: 943 # Last page number\n  title: \"iMLP, a predictor for internal matrix targeting-like sequences in mitochondrial proteins\"\n  issue: 8\n  volume: 402\n  year: 2021\n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CSBiology/iMLP"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-09T08:16:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-02-03T15:18:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codebase and dotnet CLI tool for prediction of iMTS-Ls "
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CSBiology/iMLP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CSBiology/iMLP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CSBiology/iMLP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iMLP"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSBiology/iMLP/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker (Recommended)",
        "parent_header": [
          "iMLP",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This tool is very easy to install and use with docker.\n\nDependencies: Only [Docker](https://www.docker.com) :whale:!\n\nSteps to run only once:\n1. `docker pull csbdocker/imlp`, this step might take a few minutes, as the image is around 5GB.\n2. `docker run -i -d csbdocker/imlp`, start a container from the just downloaded image and run it in the background.\n\nDone! You now have a docker container from the csbdocker/imlp image. You can find the id of the container and more with:\n\n1. `docker ps -l`\n\nOutput:\n| CONTAINER ID | IMAGE          | COMMAND     | CREATED        | STATUS        | PORTS | NAMES        |\n|--------------|----------------|-------------|----------------|---------------|-------|--------------|\n| da9b7ed591eb | csbdocker/imlp | \"/bin/bash\" | 10 minutes ago | Up 10 minutes |       | loving_moser |\n\nWith this container id (Yours will differ! :warning:) you can start/stop/restart or delete this container. In our case we want to open a console inside the **running** container.\n\n2. `docker exec -it da9b7ed591eb bash`, this will pen a console and you can now type to execute commands inside the container.\n3. Run imlp with `dotnet imlp --help` :tada:\n4. Check out how to use imlp [here](#usage).\n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using the docker container with mounted directories",
        "parent_header": [
          "iMLP",
          "Installation",
          "Docker (Recommended)"
        ],
        "type": "Text_excerpt",
        "value": "The usual use-case is using an input file in fasta format. Obviously, this file must be accessible in the container that you execute the tool in. \n\nA simple way of doing this is mounting the directory on creation of the container. Note that you should target a subfolder of `data` in the container, as the container starts in /data per default.\n\n```\ndocker run -it csbdocker/imlp --mount type=bind,source=\"<your-path-here>\",target=/data/<container-path-here>\n```\n\n**Example:**\n\nSuppose you have a file `test.fasta` in `C:/my-folder`:\n\nbind `C:/my-folder` to `/data/fastas`:\n\n```\ndocker run -it csbdocker/imlp --mount type=bind,source=\"C:/my-folder\",target=/data/fastas\n```\n\ninside the container, you can use the container path you just bound to access the file, e.g.:\n\n```\ndotnet imlp -f ./fastas/test.fasta -o ./fastas/output.txt\n```\n\nwhich will run imlp with the fasta input and generate an output file in the same folder, which will also be available on the containers host OS afterwards.\n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dotnet tool",
        "parent_header": [
          "iMLP",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "imlp is packaged as dotnet tool. To use it:\n- install the [.NET SDK](https://dotnet.microsoft.com/download) for your system\n- run either `dotnet tool install imlp` (after initializing a local manifest via `dotnet new tool-manifest`) for a local or `dotnet tool install -g imlp` for a global installation\n- you can now run the tool via `dotnet imlp ...` (for a local installation) or `imlp ...` (for a global installation)\n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Published binaries",
        "parent_header": [
          "iMLP",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Download links to self-contained binaries can be found under [releases](). Linux users have to apply the same fixes as laid out under the [dotnet tool section](#external-dependencies-on-linux)\n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.901859838397893,
      "result": {
        "original_header": "build",
        "type": "Text_excerpt",
        "value": "- `dotnet tool restore` (once)\n- `dotnet fake build`\n \n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999283133062917,
      "result": {
        "original_header": "test",
        "type": "Text_excerpt",
        "value": "- `dotnet tool restore` (once)\n- `dotnet fake build -t testpackagedtool` (You need to have external dependencies ([win](#external-dependencies-on-windows)/[linux](#external-dependencies-on-linux)) installed)\n \n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9957331278436893,
      "result": {
        "original_header": "publish self contained libraries",
        "type": "Text_excerpt",
        "value": "- `dotnet tool restore` (once)\n- `dotnet fake build -t publishbinaries` will publish both `win-x64` and `linux-x64` binaries. \n \n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.982423485874491,
      "result": {
        "original_header": "docker",
        "type": "Text_excerpt",
        "value": "- set the correct imlp version in the containers `IMLP_VERSION` argument\n- `docker build . -t imlp`\n \n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CSBiology/iMLP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Computational Systems Biology\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iMLP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CSBiology"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "F#",
        "size": 38478,
        "type": "Programming_language",
        "value": "F#"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2137,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kMutagene",
          "type": "User"
        },
        "date_created": "2021-05-04T06:22:19Z",
        "date_published": "2021-05-04T15:37:10Z",
        "description": "First release of the imlp cli tool including binaries, Dockerfile, and ONNX models. \r\n\r\nThe respective webserver release can be found [here](https://github.com/CSBiology/iMLP_Web/releases/tag/0.1.2)\r\n\r\nWe supply multiple ways of using imlp. See [here](https://github.com/CSBiology/iMLP#installation) for details.\r\n\r\n- Dotnet tool: install this release as a [dotnet cli tool](https://www.nuget.org/packages/imlp/0.1.1)\r\n- Binaries: self-contained applications for x64 windows and linux. Linux users still need to install some [native dependencies](https://github.com/CSBiology/iMLP#dependencies-on-linux)\r\n- Dockerfile: use this image to build a containerized version that can run the imlp cli tool\r\n- ONNX models: models ready to consume with other frameworks\r\n\r\nRelease notes:\r\n\r\n### 0.1.2\r\n\r\n- Add Fallback path for models\r\n\r\n### 0.1.1\r\n\r\n- Fix models not being present in the tool package\r\n\r\n### from 0.1.0\r\n\r\nFirst release of the imlp cli tool. \r\n\r\n- all basic cli commands:\r\n   - `-s` to predict for single sequences, `-f` to predict for all proteins in a fasta file\r\n   - `-o` to write to a file instead of stdout\r\n   - `-m` to select between plant and nonplant model\r\n   - `-p` to add a directory to save plots to\r\n   - `-pr` to pass a regex for protein names\r\n   - `-v` to controll verbosity of logging\r\n   See https://github.com/CSBiology/iMLP#usage for more info",
        "html_url": "https://github.com/CSBiology/iMLP/releases/tag/0.1.2",
        "name": "0.1.2",
        "release_id": 42423971,
        "tag": "0.1.2",
        "tarball_url": "https://api.github.com/repos/CSBiology/iMLP/tarball/0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/CSBiology/iMLP/releases/42423971",
        "value": "https://api.github.com/repos/CSBiology/iMLP/releases/42423971",
        "zipball_url": "https://api.github.com/repos/CSBiology/iMLP/zipball/0.1.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "External dependencies on linux",
        "parent_header": [
          "iMLP",
          "Installation",
          "Dotnet tool"
        ],
        "type": "Text_excerpt",
        "value": "CNTK has some external dependencies that can not be published with the packaged tool.\n\n- the necessary cntk binaries can be downloaded [here](https://cntk.azurewebsites.net/BinaryDrop/CNTK-2-7-Linux-64bit-CPU-Only.tar.gz)\n- for installation of OpenMPI, please follow [this guide]()\n- finally, apply this fix:\n    - navigate to the location where you unpacked the cntk binaries\n    - run `cp ./cntk/lib/Cntk.Core.CSBinding-2.7.so ./cntk/lib/libCntk.Core.CSBinding-2.7.dll`\n\nall steps can be seen executed in out [Dockerfile](./Dockerfile)\n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "External dependencies on windows",
        "parent_header": [
          "iMLP",
          "Installation",
          "Dotnet tool"
        ],
        "type": "Text_excerpt",
        "value": "CNTK has some external dependencies that can not be published with the packaged tool.\n\nDownload the CNTK package here: https://cntk.ai/dlwc-2.7.html and add the extracted ./cntk/cntk folder to your path variable.\n    "
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:54:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "iMLP"
        ],
        "type": "Text_excerpt",
        "value": "```shell\nUSAGE: imlp [--help] [--sequence <sequence>] [--inputfile <inputFile>] [--outputfile <outputFile>] [--model <plant|nonplant>] [--plotdirectory <plotDirectory>] [--proteinheaderregex <proteinHeaderRegex>]\n            [--verbosity <verbosity>]\n\nOPTIONS:\n\n    --sequence, -s <sequence>\n                          A single, one-letter coded amino acid input sequence. Either --sequence (-s) \n                          or --inputFile (-f) must be specified.\n    --inputfile, -f <inputFile>\n                          Path to a fasta formatted input file that may contain multiple entries. Either \n                          --sequence (-s) or --inputFile (-f) must be specified.\n    --outputfile, -o <outputFile>\n                          (optional) Path to the desired output file, which will be tab separated (tsv). \n                          If not specified, output will be printed to stdout instead.\n    --model, -m <plant|nonplant>\n                          (optional) Model to use for prediction. Choose the one that is closest to your \n                          organism of interest: Either 'plant' or 'nonplant'. (default:nonplant)\n    --plotdirectory, -p <plotDirectory>\n                          (optional) Path to a directory to save plots to.\n    --proteinheaderregex, -pr <proteinHeaderRegex>\n                          (optional) Regular expression to extract protein names from fasta headers for \n                          the naming of plot output files. if not provided, plot files will be 'protein_{i}.html', \n                          where i is the index in the input.\n    --verbosity, -v <verbosity>\n                          (optional) The verbosity of the logging process. 0(Silent) | 1(Error) | 2(Warn) | 3(Info) \n                          | >=4 : Debug | (default:1)\n    --help                display this list of options.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/CSBiology/iMLP/main/README.md",
      "technique": "header_analysis"
    }
  ]
}