{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/maiziex/MARS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-07T03:14:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-19T15:29:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A package for Multiple Samples Alignment-base SV Calling and Refinement "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9805980796139364,
      "result": {
        "type": "Text_excerpt",
        "value": "***M***ultiple ***A***lignment-based ***R***efinement of ***S***vs (MARS) \n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/maiziex/MARS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/maiziex/MARS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "maiziex/MARS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maiziex/MARS/master/install.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maiziex/MARS/master/source/msa3.png"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maiziex/MARS/master/source/HARP_icon.png"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maiziex/MARS/master/source/msa2.png"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maiziex/MARS/master/source/msa3.png"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install through Bioconda (The latest version 1.2.4):",
        "type": "Text_excerpt",
        "value": "[![BioConda Install](https://img.shields.io/conda/dn/bioconda/mars.svg?style=flag&label=BioConda%20install)](https://anaconda.org/bioconda/mars)  \n```\nconda install MARS\n```\n(Please ensure <a href=\"https://bioconda.github.io/user/install.html#set-up-channels\">channels</a> are properly setup for bioconda before installing) \n\n```\nMARS_step1 --help\nMARS_step2 --help\n# You can also check the below corresponding scripts for more details\n```\n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install through Github:",
        "type": "Text_excerpt",
        "value": "```\ngit clone https://github.com/maiziex/MARS.git\ncd MARS\nchmod +x install.sh\n./install.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies through Github install:",
        "type": "Text_excerpt",
        "value": "MARS utilizes <a href=\"https://www.python.org/downloads/\">Python3</a>, <a href=\"https://github.com/lh3/minimap2/tree/master/misc\">paftools</a>, <a href=\"http://samtools.sourceforge.net/\">SAMtools</a>, and <a href=\"https://github.com/lh3/minimap2\">minimap2</a>. To be able to execute the above programs by typing their name on the command line, the program executables must be in one of the directories listed in the PATH environment variable (\".bashrc\"). <br />\nOr you could just run \"./install.sh\" to install them, but make sure you have installed \"conda\" and \"wget\" first. \n\nTo use MARS, please also make sure install the below python packages through pip or conda. \\\npip install Bio \\\nConda install pysam\\\nConda install pandas\\\nconda install minimap2\\\nconda install openpyxl \n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.999999397851152,
      "result": {
        "original_header": "1. In the \"MARS_step2_results/Final_tables\" folder:",
        "type": "Text_excerpt",
        "value": "1. SV_msa_table_chr*.txt  \n2. derived_del_msa_table_chr*.txt (set \"--HARP_flag = 1\")\n3. derived_ins_msa_table_chr*.txt (set \"--HARP_flag = 1\")\n4. derived_complex_msa_table_chr*.txt  (set \"--HARP_flag = 1\")\n5. SV_linked_with_gnomad_SNP_chr*.txt (set \"-gnomad_flag = 1\")\n6. Consensus_seq_for_SV_chr*.fasta \n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9998270010601918,
      "result": {
        "original_header": "2. In the \"MARS_step2_results/MSA_SV_results_chr*/MSA_SV_files\" folder, it includes txt/html files for each SV:",
        "type": "Text_excerpt",
        "value": "1. SV with 10bp left and right flanking regions around breakpoints, for example a txt file called by \"chr22_29430067_29430067_ins_SV_Ref_bk_2.txt\",\n\"chr22_29430067_29430067_ins\" is the name of the SV which corresponds to the first field/column in \"SV_msa_table_chr*.txt\" file.\n<p align=\"center\">\n\t<img src=\"https://github.com/maiziex/MARS/blob/master/source/msa3.png\"  width=\"600\" height=\"400\">\n\t<p align=\"center\">\n\t\t<em></em>\n\t</p>\n</p>\n2. SV with around 500bp left and right flanking regions: a MSA html file:\n<a href=\"https://github.com/maiziex/MARS/blob/master/source/chr22_23530481_23530481_ins.html\">a html file</a> \n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/maiziex/MARS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2020 Xin (Maizie) Zhou\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MARS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "maiziex"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 178204,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 99628,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 30935,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 30409,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 21542,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 628,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "volcano1998",
          "type": "User"
        },
        "date_created": "2021-11-04T02:41:36Z",
        "date_published": "2021-11-04T02:44:11Z",
        "description": "fix some bugs",
        "html_url": "https://github.com/maiziex/MARS/releases/tag/v1.2.4",
        "name": "1.2.4",
        "release_id": 52649537,
        "tag": "v1.2.4",
        "tarball_url": "https://api.github.com/repos/maiziex/MARS/tarball/v1.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/maiziex/MARS/releases/52649537",
        "value": "https://api.github.com/repos/maiziex/MARS/releases/52649537",
        "zipball_url": "https://api.github.com/repos/maiziex/MARS/zipball/v1.2.4"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies through Github install:",
        "type": "Text_excerpt",
        "value": "MARS utilizes <a href=\"https://www.python.org/downloads/\">Python3</a>, <a href=\"https://github.com/lh3/minimap2/tree/master/misc\">paftools</a>, <a href=\"http://samtools.sourceforge.net/\">SAMtools</a>, and <a href=\"https://github.com/lh3/minimap2\">minimap2</a>. To be able to execute the above programs by typing their name on the command line, the program executables must be in one of the directories listed in the PATH environment variable (\".bashrc\"). <br />\nOr you could just run \"./install.sh\" to install them, but make sure you have installed \"conda\" and \"wget\" first. \n\nTo use MARS, please also make sure install the below python packages through pip or conda. \\\npip install Bio \\\nConda install pysam\\\nConda install pandas\\\nconda install minimap2\\\nconda install openpyxl \n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running The Code:",
        "type": "Text_excerpt",
        "value": "Put the \"MARS/bin\" in the \".bashrc\" file, and source the \".bashrc\" file <br />\nOr use the fullpath of \"MARS_step1.py\" and \"MARS_step2.py\"\n\n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1: Assembly-based structural variants calling for population",
        "parent_header": [
          "Running The Code:"
        ],
        "type": "Text_excerpt",
        "value": "```\nMARS_step1.py  --assembly_dir Aquila_results_4samples --ref_file refdata-GRCh38-2.1.0/fasta/genome.fa  --SV_len 20  --sample_list 'HG00250','HG00353','HG00512','HG00513' --chr_start 22 --chr_end 22 --out_dir MARS_step1_results\n```"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Required parameters",
        "parent_header": [
          "Running The Code:",
          "Step 2: Merge SV and Generate the multiple samples alignment-based SV files"
        ],
        "type": "Text_excerpt",
        "value": "**--assembly_dir:** \"Aquila_results_4samples\" is the input folder where you store the diploid assembled contig files for each sample by Aquila/Aquila_stLFR.  \n\n**--ref_file:** \"refdata-GRCh38-2.1.0/fasta/genome.fa\" is the human reference fasta (hg38) file. \n\n**--sample_list:** 'HG00250','HG00353','HG00512' ... are the sample names corresponding to your contig files, which is the prefix of the contig files. \n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Optional parameters",
        "parent_header": [
          "Running The Code:",
          "Step 2: Merge SV and Generate the multiple samples alignment-based SV files"
        ],
        "type": "Text_excerpt",
        "value": "**--out_dir:** default = ./MARS_step1_results, it is the folder name you can define to store the final results.  \n\n**--SV_len:** default = 20, it is the SV size you can define.\n\n**--num_threads:** default = 2, it is the number of threads you can define to perform assembly-based variant calling, which corresponds to number of samples.\n\n**--chr_start --chr_end:** For example: use \"--chr_start 1 --chr_end 5\"  will perform results for chromsomes 1,2,3,4,5. Use \"--chr_start 22 --chr_end 22\" will only assembly chromosome 22. \n\n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2: Merge SV and Generate the multiple samples alignment-based SV files",
        "parent_header": [
          "Running The Code:"
        ],
        "type": "Text_excerpt",
        "value": "```\nMARS_step2.py  --in_dir MARS_step1_results --assembly_dir Aquila_results_4samples --ref_file refdata-GRCh38-2.1.0/fasta/genome.fa  --sample_list 'HG00250','HG00353','HG00512','HG00513' --chr_start 22 --chr_end 22 --out_dir MARS_step2_results \n```\n\nOR add \"-gnomad_flag\" \n\n```\nMARS_step2.py  --in_dir MARS_step1_results --assembly_dir Aquila_results_4samples --ref_file refdata-GRCh38-2.1.0/fasta/genome.fa  --sample_list 'HG00250','HG00353','HG00512','HG00513' --chr_start 22 --chr_end 22 --out_dir MARS_step2_results -gnomad_flag 1 --gnomad_dir gnomAD_hg38_snp \n```\n\nOR add \"--HARP_flag\" \n\n```\nMARS_step2.py  --in_dir MARS_step1_results --assembly_dir Aquila_results_4samples --ref_file refdata-GRCh38-2.1.0/fasta/genome.fa  --sample_list 'HG00250','HG00353','HG00512','HG00513' --chr_start 22 --chr_end 22 --out_dir MARS_step2_results  --HARP_flag 1 --Ape_ref_list \"Ape_ref/Gorilla_gorilla_ref.fasta\",\"Ape_ref/pan_troglodytes_ref.fasta\",\"Ape_ref/pongo_abelii_ref.fasta\",\"Ape_ref/macaca_mulatta_ref.fasta\"  \n```\n\nOR add \"--HARP_flag\" and \"-gnomad_flag\"\n\n```\nMARS_step2.py  --in_dir MARS_step1_results --assembly_dir Aquila_results_4samples --ref_file refdata-GRCh38-2.1.0/fasta/genome.fa  --sample_list 'HG00250','HG00353','HG00512','HG00513' --chr_start 22 --chr_end 22 --out_dir MARS_step2_results  --HARP_flag 1 --Ape_ref_list \"Ape_ref/Gorilla_gorilla_ref.fasta\",\"Ape_ref/pan_troglodytes_ref.fasta\",\"Ape_ref/pongo_abelii_ref.fasta\",\"Ape_ref/macaca_mulatta_ref.fasta\"  -gnomad_flag 1 --gnomad_dir gnomAD_hg38_snp \n```\n\n#### *Required parameters\n**--in_dir:** \"MARS_step1_results\" is the folder to store SV calling results from step1.\n\n**--assembly_dir:** \"Aquila_results_4samples\" is the input folder where you store the diploid assembled contig files for each sample.  \n\n**--ref_file:** \"refdata-GRCh38-2.1.0/fasta/genome.fa\" is the human reference fasta (hg38) file. \n\n**--sample_list:** 'HG00250','HG00353','HG00512'... are the sample names corresponding to your contig files, which is the prefix of the contig files. \n\n#### *Optional parameters\n**--out_dir:** default = ./MARS_step2_results, it is the folder name you can define to store the final results.  \n\n**--SV_len:** default = 20, it is the SV size you can define.\n\n**--num_threads_bychr:** default = 2, it is the number of chromosomes you can define to perform MARS parallely.\n\n**--chr_start --chr_end:** For example: use \"--chr_start 1 --chr_end 5\"  will perform results for chromsomes 1,2,3,4,5. Use \"--chr_start 22 --chr_end 22\" will only assembly chromosome 22. \n\n**--gnomad_flag_linked_snp; -gnomad_flag:** default = 0. If flag set to 1, MARS will output linked dbSNP from gnomad for each SV.\n\n**--gnomad_dir:** If \"gnomad_flag\" set to 1, the users need to download gnomad VCF files and give a path to the folder which stores these gnomAD VCF files. (For example: use \"wget https://storage.googleapis.com/gnomad-public/release/2.1.1/liftover_grch38/vcf/genomes/gnomad.genomes.r2.1.1.sites.10.liftover_grch38.vcf.bgz\" to download gnomAD VCF file for chr10) For details, please check <a href=\"https://gnomad.broadinstitute.org/downloads/\">gnomAD downloads website</a>) \n\n**--HARP_flag:** default = 0. If flag set to 1, it will output SV with ancestral state: derived deletions and derived insertions. \n\n**--Ape_ref_list:** If --HARP_flag set to 1, the users need to iniatize the Ape reference genomes they want to use. \"Gorilla_gorilla_ref.fasta\", \"pan_troglodytes_ref.fasta\", \"pongo_abelii_ref.fasta\", and \"macaca_mulatta_ref.fasta\" are the reference fasta files for each Ape. Each reference file is seperately by comma (\",\") \n\n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:02:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example data in Zenodo:",
        "type": "Text_excerpt",
        "value": "Please download the example data <a href=\"https://zenodo.org/record/5512900\">from Zenodo</a>.\n```\nApe_ref\n|-Gorilla_gorilla_ref.fasta\n|-pongo_abelii_ref.fasta\n|-pan_troglodytes_ref.fasta\n|-macaca_mulatta_ref.fasta\n\nrefdata-GRCh38-2.1.0\n|-fasta\n     |-genome.fa     \n     \ngnomAD_hg38_snp\n|-gnomad.genomes.r2.1.1.sites.22.liftover_grch38.vcf.bgz\n     \nAquila_results_4samples\n|-HG00353\n|      |-Assembly_Contigs_files\n|                |-Aquila_Contig_chr22.fasta\n|-HG00250\n|      |-Assembly_Contigs_files\n|                |-Aquila_Contig_chr22.fasta\t\t\t \n|-HG00513\n|      |-Assembly_Contigs_files\n|                |-Aquila_Contig_chr22.fasta\n|-HG00512\n      |-Assembly_Contigs_files\n                 |-Aquila_Contig_chr22.fasta\t\t\t \t\t \n\t\t \n```\n"
      },
      "source": "https://raw.githubusercontent.com/maiziex/MARS/master/README.md",
      "technique": "header_analysis"
    }
  ]
}